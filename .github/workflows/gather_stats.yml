name: Gather Stats

on:
  schedule:
    - cron: '*/10 * * * *' # Runs every 10 minutes
  workflow_dispatch:       # Allows manual execution

permissions:
  contents: write

jobs:
  gather-stats:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: master

    - name: "Run gather_stats.sh"
      shell: bash -euo pipefail {0}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ./gather_stats.sh 20 2>&1 | tee gather_stats.log  # Log output to gather_stats.log

    - name: "Update aggregate data file"
      if: ${{ !cancelled() }}
      run: |
        # Write files with aggregate PR data, to "processed_data/{all_pr,open_pr,assignment_}_data.json".
        python3 process.py

    - name: "Download .json files for all open PRs"
      id: "download-json"
      if: ${{ !cancelled() }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        bash ./dashboard.sh

    - name: "Check data integrity"
      if: ${{ !cancelled() }} && (steps.download-json.outcome == 'success')
      run: |
        python check_data_integrity.py

    - name: "(Re-)download missing or outdated PR data"
      if: ${{ !cancelled() }} && (steps.download-json.outcome == 'success')
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./download_missing_outdated_PRs.sh

    - name: "Update aggregate data file (again)"
      if: ${{ !cancelled() }}
      run: |
        # Write files with aggregate PR data, to "processed_data/{all_pr,open_pr,assignment_}_data.json".
        python3 process.py

    - name: Commit changes
      if: ${{ !cancelled() }}
      id: "commit"
      run: |
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git config --global user.name 'github-actions[bot]'
        git add data
        git add processed_data
        git add *.txt
        git commit -m 'Update data; redownload missing and outdated data; regenerate aggregate files'

    - name: Push changes
      if: ${{ !cancelled() }} && steps.commit.outcome == 'success'
      run: |
        # FIXME: make this more robust about incoming changes
        # The other workflow does not push to this branch, so this should be fine.
        git push
