{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 116,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ocfnash"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 12,
        "closed": true,
        "closedAt": "2023-09-26T10:21:43Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5nRlpn",
              "body": "> I'm not a huge fan of the `Divisibility.Ring` vs `Ring.Divisibility` distinction here; if merging the two files isn't feasible, can we maybe put `Nilpotency` in one of the names?\r\n\r\nI'm also not a huge fan of this but I think it would not be so easy to merge the files. I'm willing to rename (e.g., using `Nilpotent`) if you wish but I was hoping that this file could be a place for further lemmas about divisibility in rings: currently we do not have such a place.\r\n\r\nI suppose another option would be to rename the existing `Ring.Divisibility` to `Ring.DivisibilityDefs` (say) and add the new file beside it as `Ring.Divisibility`.",
              "createdAt": "2023-09-24T20:37:10Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nUUCj",
              "body": "> I suppose another option would be to rename the existing `Ring.Divisibility` to `Ring.DivisibilityDefs` (say) and add the new file beside it as `Ring.Divisibility`.\r\n\r\n`Ring.Divisibility.Basic` and `Ring.Divisibility` seems like a reasonable split to me. `Defs` would be a bit weird since there are presumably no definitions!",
              "createdAt": "2023-09-25T10:20:01Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nUiSu",
              "body": "> `Ring.Divisibility.Basic` and `Ring.Divisibility` seems like a reasonable split to me.\r\n\r\nI think it might be confusing to have a directory named `Algebra/Ring/Divisibility` (which would contain `Basic.lean`) as well as a file named `Algebra/Ring/Divisibility.lean`.\r\n\r\nHow about `Algebra.Ring.Divisibility.Basic` and `Algebra.Ring.Divisibility.Lemmas`?\r\n\r\n\r\n",
              "createdAt": "2023-09-25T10:59:17Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nUkK1",
              "body": "> > `Ring.Divisibility.Basic` and `Ring.Divisibility` seems like a reasonable split to me.\r\n> \r\n> I think it might be confusing to have a directory named `Algebra/Ring/Divisibility` (which would contain `Basic.lean`) as well as a file named `Algebra/Ring/Divisibility.lean`.\r\n\r\nWell, this seems to be the way that Lean 4 wants us to do things, given it got rid of `default.lean`...\r\n\r\n> How about `Algebra.Ring.Divisibility.Basic` and `Algebra.Ring.Divisibility.Lemmas`?\r\n\r\nThis is also fine by me; the distinction isn't particularly meaningful, but it 1) avoids `Defs` which would be a lie, and 2) is less confusing than `Ring.Divisibility` vs `Divisibility.Ring`!\r\n\r\n",
              "createdAt": "2023-09-25T11:04:25Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nY-F7",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-25T23:27:52Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5na7L6",
              "body": "bors merge",
              "createdAt": "2023-09-26T08:53:42Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nbd7h",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6310435011/job/17132407795)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6310435011/job/17132407134)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6310435011/job/17132407494)",
              "createdAt": "2023-09-26T10:21:42Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0d84d1efdf523b26e024623c335ac9f52eb9ff90",
                "additions": 93,
                "deletions": 4,
                "committedDate": "2023-09-24T15:59:36Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a7cc6f4d985a97f859434a9959afab879292ddb6",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-09-24T16:02:00Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1f05ff99fa019960f8ab14aa13dbfb1dd68af38",
                "additions": 16,
                "deletions": 7,
                "committedDate": "2023-09-24T20:20:38Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fe59955d0c5d266181da434b713d46beaab859b3",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2023-09-24T20:33:43Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a1f432eeadffdf838d949d118f21d7bab28e8d1a",
                "additions": 9,
                "deletions": 14,
                "committedDate": "2023-09-25T10:02:11Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "534011c384a1aa2be284162f1e24d2d079aef79f",
                "additions": 11,
                "deletions": 12,
                "committedDate": "2023-09-25T11:18:13Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9881c914c1f30146f543370c5c91c911ab6c5746",
                "additions": 12,
                "deletions": 10,
                "committedDate": "2023-09-26T08:51:10Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-24T16:01:22Z",
        "deletions": 16,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Multiset/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Ring.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/EuclideanDomain/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/GroupPower/Ring.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Abs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Divisibility/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/Divisibility/Lemmas.lean",
              "additions": 91,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Int/Order/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/List/BigOperators/Lemmas.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Nat/Order/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Coprime/Basic.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "ocfnash/ring_dvd",
        "headRefOid": "9881c914c1f30146f543370c5c91c911ab6c5746",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5bD4Mo",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5h0VGX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-09-24T18:58:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h2nRv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-09-25T09:24:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h8AV9",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T23:27:51Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7355,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5h0VHl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T18:56:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VIo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T18:57:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VGX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-09-24T18:58:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VNL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T19:00:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VOM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T19:01:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VTP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T19:04:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VT3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T19:05:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0VZB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T19:08:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0Vax",
              "body": "I'm not a huge fan of the `Divisibility.Ring` vs `Ring.Divisibility` distinction here; if merging the two files isn't feasible, can we maybe put `Nilpotency` in one of the names?",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-24T19:09:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0XPp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:24:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0XRg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:25:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0XRp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:26:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0XRx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:26:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0XUy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:28:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0XWh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:29:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0Xep",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-24T20:34:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h2nRv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-09-25T09:24:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h2q-V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T09:28:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h2rND",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T09:29:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h2r6c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T09:31:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h27Hy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-25T10:03:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h27ZQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-25T10:04:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h27hS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-25T10:04:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h7_2h",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T23:24:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h8AV9",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T23:27:51Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgCH",
                    "body": "I'm guessing this change is to allow this lemma to be used for not-necessarily-commutative semirings, but do you know if it also works without assoc as well? ie, can this be moved below the NonAssocSemiring?",
                    "createdAt": "2023-09-24T18:55:56Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlieN",
                    "body": "Yes, I need to drop the redundant commutativity assumption.\r\n\r\nAssociativity cannot be dropped because the relevant `Dvd` instance [semigroupDvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Divisibility/Basic.html#semigroupDvd) requires it. I also think this is appropriate: divisibility without associativity seems quite a foreign concept.\r\n\r\nAs a compromise I have added a commit which drops the unitality assumption.",
                    "createdAt": "2023-09-24T20:24:49Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgC_",
                    "body": "Do we want zsmul, smul versions of this too?",
                    "createdAt": "2023-09-24T18:56:25Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pligd",
                    "body": "Good point, done!",
                    "createdAt": "2023-09-24T20:25:55Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgD0",
                    "body": "Any reason this moved?",
                    "createdAt": "2023-09-24T18:56:51Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgFE",
                    "body": "Ah, it was previously for `CommSemiring`!",
                    "createdAt": "2023-09-24T18:57:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgIw",
                    "body": "Using `choose` here feels a bit sloppy; does this or something similar work?\r\n```suggestion\r\n  let ⟨k, hk⟩ := h; ⟨n • k, by rw [mul_smul_comm, ← hk]⟩\r\n```",
                    "createdAt": "2023-09-24T19:00:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pligm",
                    "body": "OK done.",
                    "createdAt": "2023-09-24T20:26:03Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgKH",
                    "body": "```suggestion\r\nimports. Further results about divisibility in rings may be found in\r\n```\r\nor did you mean something else?",
                    "createdAt": "2023-09-24T19:01:23Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pligt",
                    "body": "Thanks!",
                    "createdAt": "2023-09-24T20:26:09Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgP6",
                    "body": "Given almost everything in this file is about `y ^ n = 0`, I think it's worth mentioning this in the module docstring as one of the things this file is about.",
                    "createdAt": "2023-09-24T19:04:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pliuc",
                    "body": "Done.",
                    "createdAt": "2023-09-24T20:34:05Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgQv",
                    "body": "Do you think it's worth repeating these results for `CommSemiring`, like we do for lots of other `Commute` results?",
                    "createdAt": "2023-09-24T19:05:03Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Plilu",
                    "body": "I'm happy to do this if you like but I tend to think this pattern of repeating results is only worth it for very broadly applicable results and the lemmas proposed here are quite specialised. Would you still like me to do it?",
                    "createdAt": "2023-09-24T20:29:18Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnBgm",
                    "body": "No, it's fine without; I just wanted to check you had decided it was unhelpful.",
                    "createdAt": "2023-09-25T09:29:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlgVj",
                    "body": "I'm puzzled by this import, there don't seem to be any big operators in this file.",
                    "createdAt": "2023-09-24T19:08:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Plikt",
                    "body": "This import was included because the lemma `Finset.dvd_sum` (which I need) resides in `Mathlib.Algebra.BigOperators.Ring` (though I actually think the new file which I'm proposing might be a better home).\r\n\r\nHowever I've dropped it from the list because I pick it up transitively anyway.",
                    "createdAt": "2023-09-24T20:28:09Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pm_BI",
                    "body": "Since you are at it, do you mind generalize also [List.dvd_sum](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/BigOperators/Lemmas.html#List.dvd_sum)?",
                    "createdAt": "2023-09-25T09:21:03Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnBXs",
                    "body": "Yes, I'd prefer that we make the generalizations necessary to keep the old one-line proof.",
                    "createdAt": "2023-09-25T09:28:58Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnL_d",
                    "body": "Right, this is what I should have done in the first place. Now done.",
                    "createdAt": "2023-09-25T10:04:48Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pm_qz",
                    "body": "Do we really need `Semiring` here? Maybe some nonunital nonassociative thing will work?",
                    "createdAt": "2023-09-25T09:23:12Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnLt9",
                    "body": "Good point, this can be `Semigroup R` instead of `Semiring R`. Associativity is necessary for the reason explained here https://github.com/leanprover-community/mathlib4/pull/7355#discussion_r1335240589",
                    "createdAt": "2023-09-25T10:03:48Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnB9Y",
                    "body": "Can these now safely go in the other `Divisibility` file?",
                    "createdAt": "2023-09-25T09:31:07Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnL5-",
                    "body": "Sadly no, that file imports very little and even lacks `SMulCommClass`.",
                    "createdAt": "2023-09-25T10:04:29Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PqPdt",
                    "body": "This heading shouldn't be the same level as the main heading:\r\n\r\n```suggestion\r\n## Main results:\r\n\r\n* `dvd_smul_of_dvd`: stating that `x ∣ y → x ∣ m • y` for any scalar `m`.\r\n* `Commute.pow_dvd_add_pow_of_pow_eq_zero_right`: stating that if `y` is nilpotent then\r\n  `x ^ m ∣ (x + y) ^ p` for sufficiently large `p` (together with many variations for convenience).\r\n```\r\n\r\n(also some minor spacing things that markdown doesn't really care about)",
                    "createdAt": "2023-09-25T23:24:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PqP0U",
                    "body": "nit: should `n` / `m` / `z` be explicit arguments here?\r\n\r\nextreme nit: should `x` and `y` come after the typeclass arguments, since that seems to normally be the covention?",
                    "createdAt": "2023-09-25T23:27:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: lemmas about divisibility, mostly related to nilpotency",
        "updatedAt": "2023-09-26T10:21:47Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7355",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0d84d1efdf523b26e024623c335ac9f52eb9ff90"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x3J4PzwAAAAJvMb1H",
              "createdAt": "2023-09-24T16:01:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x3J4PzwAAAAJvMb1J",
              "createdAt": "2023-09-24T16:01:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x3J4PzwAAAAJvMb1N",
              "createdAt": "2023-09-24T16:01:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a7cc6f4d985a97f859434a9959afab879292ddb6"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x3J4PzwAAAAJvNFr7",
              "createdAt": "2023-09-24T17:24:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VHl",
              "createdAt": "2023-09-24T18:56:50Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VGX",
              "createdAt": "2023-09-24T18:55:56Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VNL",
              "createdAt": "2023-09-24T19:00:30Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VOM",
              "createdAt": "2023-09-24T19:01:22Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VTP",
              "createdAt": "2023-09-24T19:04:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VT3",
              "createdAt": "2023-09-24T19:05:03Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0VZB",
              "createdAt": "2023-09-24T19:08:10Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0Vax",
              "createdAt": "2023-09-24T19:09:17Z",
              "body": "I'm not a huge fan of the `Divisibility.Ring` vs `Ring.Divisibility` distinction here; if merging the two files isn't feasible, can we maybe put `Nilpotency` in one of the names?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1f05ff99fa019960f8ab14aa13dbfb1dd68af38"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fe59955d0c5d266181da434b713d46beaab859b3"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nRlpn",
              "createdAt": "2023-09-24T20:37:10Z",
              "body": "> I'm not a huge fan of the `Divisibility.Ring` vs `Ring.Divisibility` distinction here; if merging the two files isn't feasible, can we maybe put `Nilpotency` in one of the names?\r\n\r\nI'm also not a huge fan of this but I think it would not be so easy to merge the files. I'm willing to rename (e.g., using `Nilpotent`) if you wish but I was hoping that this file could be a place for further lemmas about divisibility in rings: currently we do not have such a place.\r\n\r\nI suppose another option would be to rename the existing `Ring.Divisibility` to `Ring.DivisibilityDefs` (say) and add the new file beside it as `Ring.Divisibility`.",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OkAt8",
              "createdAt": "2023-09-25T09:21:40Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5bGbAN",
                "title": "[Merged by Bors] - feat: define the positive Fitting component of the representation of a nilpotent Lie algebra",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7360"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h2nRv",
              "createdAt": "2023-09-25T09:21:03Z",
              "body": "",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h2r6c",
              "createdAt": "2023-09-25T09:31:07Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a1f432eeadffdf838d949d118f21d7bab28e8d1a"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nUUCj",
              "createdAt": "2023-09-25T10:20:01Z",
              "body": "> I suppose another option would be to rename the existing `Ring.Divisibility` to `Ring.DivisibilityDefs` (say) and add the new file beside it as `Ring.Divisibility`.\r\n\r\n`Ring.Divisibility.Basic` and `Ring.Divisibility` seems like a reasonable split to me. `Defs` would be a bit weird since there are presumably no definitions!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nUiSu",
              "createdAt": "2023-09-25T10:59:17Z",
              "body": "> `Ring.Divisibility.Basic` and `Ring.Divisibility` seems like a reasonable split to me.\r\n\r\nI think it might be confusing to have a directory named `Algebra/Ring/Divisibility` (which would contain `Basic.lean`) as well as a file named `Algebra/Ring/Divisibility.lean`.\r\n\r\nHow about `Algebra.Ring.Divisibility.Basic` and `Algebra.Ring.Divisibility.Lemmas`?\r\n\r\n\r\n",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nUkK1",
              "createdAt": "2023-09-25T11:04:25Z",
              "body": "> > `Ring.Divisibility.Basic` and `Ring.Divisibility` seems like a reasonable split to me.\r\n> \r\n> I think it might be confusing to have a directory named `Algebra/Ring/Divisibility` (which would contain `Basic.lean`) as well as a file named `Algebra/Ring/Divisibility.lean`.\r\n\r\nWell, this seems to be the way that Lean 4 wants us to do things, given it got rid of `default.lean`...\r\n\r\n> How about `Algebra.Ring.Divisibility.Basic` and `Algebra.Ring.Divisibility.Lemmas`?\r\n\r\nThis is also fine by me; the distinction isn't particularly meaningful, but it 1) avoids `Defs` which would be a lie, and 2) is less confusing than `Ring.Divisibility` vs `Divisibility.Ring`!\r\n\r\n",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "534011c384a1aa2be284162f1e24d2d079aef79f"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h7_2h",
              "createdAt": "2023-09-25T23:24:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h8AV9",
              "createdAt": "2023-09-25T23:27:38Z",
              "body": "bors d+\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nY-F7",
              "createdAt": "2023-09-25T23:27:52Z",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x3J4PzwAAAAJv9sMJ",
              "createdAt": "2023-09-25T23:28:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x3J4PzwAAAAJv9sM9",
              "createdAt": "2023-09-25T23:28:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9881c914c1f30146f543370c5c91c911ab6c5746"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5na7L6",
              "createdAt": "2023-09-26T08:53:42Z",
              "body": "bors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x3J4PzwAAAAJwMFLd",
              "createdAt": "2023-09-26T08:53:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nbd7h",
              "createdAt": "2023-09-26T10:21:42Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6310435011/job/17132407795)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6310435011/job/17132407134)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6310435011/job/17132407494)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5x3J4PzwAAAAJwQBU8",
              "createdAt": "2023-09-26T10:21:43Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5x3J4PzwAAAAJwQBgJ",
              "createdAt": "2023-09-26T10:21:47Z"
            }
          ]
        }
      }
    }
  }
}
