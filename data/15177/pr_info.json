{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1929,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "1. `eLpNorm` for \"extended Lp norm\" is much more descriptive than `snorm` for \"seminorm\"\n2. I need a `NNReal`-valued version of it, which I am planning to call `nnLpNorm`.\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> Mathlib.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 32,
        "closed": true,
        "closedAt": "2024-07-31T06:44:06Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6GUaQS",
              "body": "### PR summary [525b26a3ed](https://github.com/leanprover-community/mathlib4/pull/15177/commits/525b26a3ed90ae3cd7c5fe4bbde172a33438ebd4)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AEEqFun.eLpNorm_compMeasurePreserving`\n`+ Integrable.tendsto_eLpNorm_condexp`\n`+ Martingale.eq_condexp_of_tendsto_eLpNorm`\n`+ Memℒp.eLpNormEssSup_indicator_norm_ge_eq_zero`\n`+ Memℒp.eLpNorm_eq_integral_rpow_norm`\n`+ Memℒp.eLpNorm_indicator_le`\n`+ Memℒp.eLpNorm_indicator_le'`\n`+ Memℒp.eLpNorm_indicator_le_of_meas`\n`+ Memℒp.eLpNorm_indicator_norm_ge_le`\n`+ Memℒp.eLpNorm_indicator_norm_ge_pos_le`\n`+ Memℒp.eLpNorm_lt_top`\n`+ Memℒp.eLpNorm_mk_lt_top`\n`+ Memℒp.eLpNorm_ne_top`\n`+ Memℒp.exists_boundedContinuous_eLpNorm_sub_le`\n`+ Memℒp.exists_eLpNorm_indicator_compl_lt`\n`+ Memℒp.exists_hasCompactSupport_eLpNorm_sub_le`\n`+ Submartingale.stoppedValue_leastGE_eLpNorm_le`\n`+ Submartingale.stoppedValue_leastGE_eLpNorm_le'`\n`+ Submartingale.tendsto_eLpNorm_one_limitProcess`\n`+ _root_.MeasurableEmbedding.eLpNormEssSup_map_measure`\n`+ _root_.MeasurableEmbedding.eLpNorm_map_measure`\n`+ _root_.MeasureTheory.Memℒp.exists_simpleFunc_eLpNorm_sub_lt`\n`+ ae_bdd_liminf_atTop_of_eLpNorm_bdd`\n`+ ae_bdd_liminf_atTop_rpow_of_eLpNorm_bdd`\n`+ ae_eq_zero_of_eLpNorm'_eq_zero`\n`+ ae_le_eLpNormEssSup`\n`+ ae_tendsto_of_cauchy_eLpNorm`\n`+ ae_tendsto_of_cauchy_eLpNorm'`\n`+ coe_nnnorm_ae_le_eLpNormEssSup`\n`+ eLpNorm`\n`+ eLpNorm'`\n`+ eLpNorm'_add_le`\n`+ eLpNorm'_add_le_of_le_one`\n`+ eLpNorm'_congr_ae`\n`+ eLpNorm'_congr_nnnorm_ae`\n`+ eLpNorm'_congr_norm_ae`\n`+ eLpNorm'_const`\n`+ eLpNorm'_const'`\n`+ eLpNorm'_const_of_isProbabilityMeasure`\n`+ eLpNorm'_const_smul`\n`+ eLpNorm'_const_smul_le`\n`+ eLpNorm'_eq`\n`+ eLpNorm'_eq_zero_iff`\n`+ eLpNorm'_eq_zero_of_ae_zero`\n`+ eLpNorm'_eq_zero_of_ae_zero'`\n`+ eLpNorm'_exponent_zero`\n`+ eLpNorm'_le_eLpNorm'_mul_eLpNorm'`\n`+ eLpNorm'_le_eLpNorm'_mul_rpow_measure_univ`\n`+ eLpNorm'_le_eLpNorm'_of_exponent_le`\n`+ eLpNorm'_le_eLpNormEssSup`\n`+ eLpNorm'_le_eLpNormEssSup_mul_rpow_measure_univ`\n`+ eLpNorm'_le_nnreal_smul_eLpNorm'_of_ae_le_mul`\n`+ eLpNorm'_lim_eq_lintegral_liminf`\n`+ eLpNorm'_lim_le_liminf_eLpNorm'`\n`+ eLpNorm'_lt_top_of_eLpNorm'_lt_top_of_exponent_le`\n`+ eLpNorm'_measure_zero_of_exponent_zero`\n`+ eLpNorm'_measure_zero_of_neg`\n`+ eLpNorm'_measure_zero_of_pos`\n`+ eLpNorm'_mono_ae`\n`+ eLpNorm'_mono_measure`\n`+ eLpNorm'_mono_nnnorm_ae`\n`+ eLpNorm'_neg`\n`+ eLpNorm'_norm`\n`+ eLpNorm'_norm_rpow`\n`+ eLpNorm'_smul_le_mul_eLpNorm'`\n`+ eLpNorm'_smul_measure`\n`+ eLpNorm'_sum_le`\n`+ eLpNorm'_trim`\n`+ eLpNorm'_zero`\n`+ eLpNorm'_zero'`\n`+ eLpNormEssSup`\n`+ eLpNormEssSup_add_le`\n`+ eLpNormEssSup_congr_ae`\n`+ eLpNormEssSup_const`\n`+ eLpNormEssSup_const_smul`\n`+ eLpNormEssSup_const_smul_le`\n`+ eLpNormEssSup_eq_zero_iff`\n`+ eLpNormEssSup_indicator_const_eq`\n`+ eLpNormEssSup_indicator_const_le`\n`+ eLpNormEssSup_indicator_eq_eLpNormEssSup_restrict`\n`+ eLpNormEssSup_indicator_le`\n`+ eLpNormEssSup_le_nnreal_smul_eLpNormEssSup_of_ae_le_mul`\n`+ eLpNormEssSup_le_of_ae_bound`\n`+ eLpNormEssSup_le_of_ae_nnnorm_bound`\n`+ eLpNormEssSup_lt_top_of_ae_bound`\n`+ eLpNormEssSup_lt_top_of_ae_nnnorm_bound`\n`+ eLpNormEssSup_map_measure`\n`+ eLpNormEssSup_measure_zero`\n`+ eLpNormEssSup_mono_measure`\n`+ eLpNormEssSup_mono_nnnorm_ae`\n`+ eLpNormEssSup_piecewise`\n`+ eLpNormEssSup_smul_measure`\n`+ eLpNormEssSup_trim`\n`+ eLpNormEssSup_zero`\n`+ eLpNormLESNormFDerivOfEqInnerConst`\n`+ eLpNorm_add_le`\n`+ eLpNorm_add_le'`\n`+ eLpNorm_add_lt_top`\n`+ eLpNorm_aeeqFun`\n`+ eLpNorm_comp_measurePreserving`\n`+ eLpNorm_condexpL2_le`\n`+ eLpNorm_congr_ae`\n`+ eLpNorm_congr_nnnorm_ae`\n`+ eLpNorm_congr_norm_ae`\n`+ eLpNorm_const`\n`+ eLpNorm_const'`\n`+ eLpNorm_const_lt_top_iff`\n`+ eLpNorm_const_smul`\n`+ eLpNorm_const_smul_le`\n`+ eLpNorm_densityProcess_le`\n`+ eLpNorm_density_le`\n`+ eLpNorm_eq`\n`+ eLpNorm_eq_eLpNorm'`\n`+ eLpNorm_eq_lintegral_rpow_nnnorm`\n`+ eLpNorm_eq_zero_and_zero_of_ae_le_mul_neg`\n`+ eLpNorm_eq_zero_iff`\n`+ eLpNorm_exponent_top`\n`+ eLpNorm_exponent_top_lim_eq_essSup_liminf`\n`+ eLpNorm_exponent_top_lim_le_liminf_eLpNorm_exponent_top`\n`+ eLpNorm_exponent_zero`\n`+ eLpNorm_indicator_const`\n`+ eLpNorm_indicator_const'`\n`+ eLpNorm_indicator_const_le`\n`+ eLpNorm_indicator_const₀`\n`+ eLpNorm_indicator_eq_eLpNorm_restrict`\n`+ eLpNorm_indicator_eq_restrict`\n`+ eLpNorm_indicator_le`\n`+ eLpNorm_indicator_le_of_bound`\n`+ eLpNorm_indicator_sub_indicator`\n`+ eLpNorm_inner_lt_top`\n`+ eLpNorm_le_add_measure_left`\n`+ eLpNorm_le_add_measure_right`\n`+ eLpNorm_le_eLpNorm_fderiv`\n`+ eLpNorm_le_eLpNorm_fderiv_of_eq`\n`+ eLpNorm_le_eLpNorm_fderiv_of_eq_inner`\n`+ eLpNorm_le_eLpNorm_fderiv_of_le`\n`+ eLpNorm_le_eLpNorm_fderiv_one`\n`+ eLpNorm_le_eLpNorm_mul_eLpNorm'_of_norm`\n`+ eLpNorm_le_eLpNorm_mul_eLpNorm_of_nnnorm`\n`+ eLpNorm_le_eLpNorm_mul_eLpNorm_top`\n`+ eLpNorm_le_eLpNorm_mul_rpow_measure_univ`\n`+ eLpNorm_le_eLpNorm_of_exponent_le`\n`+ eLpNorm_le_eLpNorm_top_mul_eLpNorm`\n`+ eLpNorm_le_mul_eLpNorm_of_ae_le_mul`\n`+ eLpNorm_le_nnreal_smul_eLpNorm_of_ae_le_mul`\n`+ eLpNorm_le_of_ae_bound`\n`+ eLpNorm_le_of_ae_nnnorm_bound`\n`+ eLpNorm_lim_le_liminf_eLpNorm`\n`+ eLpNorm_lt_top`\n`+ eLpNorm_lt_top_iff_lintegral_rpow_nnnorm_lt_top`\n`+ eLpNorm_map_measure`\n`+ eLpNorm_measure_zero`\n`+ eLpNorm_mono`\n`+ eLpNorm_mono_ae`\n`+ eLpNorm_mono_ae_real`\n`+ eLpNorm_mono_measure`\n`+ eLpNorm_mono_nnnorm`\n`+ eLpNorm_mono_nnnorm_ae`\n`+ eLpNorm_mono_real`\n`+ eLpNorm_ne_top`\n`+ eLpNorm_neg`\n`+ eLpNorm_nnreal_eq_eLpNorm'`\n`+ eLpNorm_nnreal_eq_lintegral`\n`+ eLpNorm_nnreal_pow_eq_lintegral`\n`+ eLpNorm_norm`\n`+ eLpNorm_norm_rpow`\n`+ eLpNorm_one_add_measure`\n`+ eLpNorm_one_condexp_le_eLpNorm`\n`+ eLpNorm_one_eq_lintegral_nnnorm`\n`+ eLpNorm_one_le_of_le`\n`+ eLpNorm_one_le_of_le'`\n`+ eLpNorm_one_smul_measure`\n`+ eLpNorm_restrict_eq_of_support_subset`\n`+ eLpNorm_restrict_le`\n`+ eLpNorm_rpow_two_norm_lt_top`\n`+ eLpNorm_smul_le_eLpNorm_mul_eLpNorm_top`\n`+ eLpNorm_smul_le_eLpNorm_top_mul_eLpNorm`\n`+ eLpNorm_smul_le_mul_eLpNorm`\n`+ eLpNorm_smul_measure_of_ne_top`\n`+ eLpNorm_smul_measure_of_ne_zero`\n`+ eLpNorm_sub_le`\n`+ eLpNorm_sub_le'`\n`+ eLpNorm_sub_le_of_dist_bdd`\n`+ eLpNorm_sum_le`\n`+ eLpNorm_top_piecewise`\n`+ eLpNorm_trim`\n`+ eLpNorm_trim_ae`\n`+ eLpNorm_zero`\n`+ eLpNorm_zero'`\n`+ exists_continuous_eLpNorm_sub_le_of_closed`\n`+ exists_eLpNorm_indicator_le`\n`+ fun_eq_funMulInvSnorm_mul_eLpNorm`\n`+ integral_inner_eq_sq_eLpNorm`\n`+ le_eLpNorm_of_bddBelow`\n`+ lintegral_rpow_add_le_add_eLpNorm_mul_lintegral_rpow_add`\n`+ lintegral_rpow_nnnorm_eq_rpow_eLpNorm'`\n`+ lintegral_rpow_nnnorm_lt_top_of_eLpNorm'_lt_top`\n`+ lintegral_rpow_nnnorm_lt_top_of_eLpNorm_lt_top`\n`+ meas_eLpNormEssSup_lt`\n`+ meas_ge_le_mul_pow_eLpNorm`\n`+ mem_Lp_iff_eLpNorm_lt_top`\n`+ memℒp_limitProcess_of_eLpNorm_bdd`\n`+ mul_meas_ge_le_pow_eLpNorm`\n`+ mul_meas_ge_le_pow_eLpNorm'`\n`+ pow_mul_meas_ge_le_eLpNorm`\n`+ snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm'`\n`+ snorm_smul_measure_of_ne_zero_of_ne_top`\n`+ tendstoInMeasure_of_tendsto_eLpNorm`\n`+ tendstoInMeasure_of_tendsto_eLpNorm_of_ne_top`\n`+ tendstoInMeasure_of_tendsto_eLpNorm_of_stronglyMeasurable`\n`+ tendstoInMeasure_of_tendsto_eLpNorm_top`\n`+ tendsto_approxOn_Lp_eLpNorm`\n`+ tendsto_approxOn_range_Lp_eLpNorm`\n`+ tendsto_eLpNorm_condexp`\n`+ tendsto_eLpNorm_one_densityProcess_limitProcess`\n`+ tendsto_eLpNorm_one_restrict_densityProcess_limitProcess`\n`- snorm'`\n`- snormEssSup`\n`- snormLESNormFDerivOfEqInnerConst`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-07-26T20:58:14Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GVnFh",
              "body": "Could you add deprecation statements? I haven't followed which tools are available now, but here is the script I have been using lately:\r\n\r\n```\r\n#! /bin/bash\r\n\r\nif [ -z \"${1}\" ]\r\nthen\r\n  commit=\"$( git merge-base master \"$( git rev-parse --abbrev-ref HEAD )\" )\"\r\n  read -p $'Type a commit number such that all diff lines containing `theorem/def`\r\ncorrespond to deprecated declarations (use '\"'${commit}'\"' otherwise):\r\n' comm\r\n  [ -n \"${comm}\" ] && commit=${comm}\r\nelse\r\n  commit=\"${1}\"\r\nfi\r\n\r\ngit cat-file -e \"${commit}\" || exit 1\r\n\r\n##  `mkDeclAndDepr <file>` outputs a single line of the form\r\n##  `@[deprecated (since := \"yyyy-mm-dd\")]||||alias yyy := xxx@@@`\r\n##  for each modified declaration in `<file>`.\r\n##  The separators `@@@` delimit different declarations.\r\n##  The separators `||||` are later replaced by line breaks.\r\n## To use a specific date, replace $( date +%Y-%m-%d ) with 2024-04-17 for instance\r\n\r\nmkDeclAndDepr () {\r\n  git diff --unified=0 \"${commit}\" \"${1}\" |\r\n    awk -v date=\"$( date +%Y-%m-%d )\" 'function depr(ol,ne) {\r\n      return sprintf(\"@[deprecated (since := \\\"%s\\\")]||||alias %s := %s\", date, ol, ne)\r\n    }\r\n    /^-[^+-]*(theorem|lemma)/ {\r\n      for(i=1; i<=NF; i++) {\r\n        if (($i ~ /theorem$/) || ($i ~ /lemma$/)) { old=$(i+1) }\r\n      }\r\n    }\r\n    /^+[^+-]*(theorem|lemma)/ {\r\n      for(i=1; i<=NF; i++) {\r\n        if (($i ~ /theorem$/) || ($i ~ /lemma$/)) {\r\n          sub(/^+/, \"\", $i)\r\n          printf(\"%s %s ,%s@@@\", $i, $(i+1), depr(old, $(i+1)))\r\n        }\r\n      }\r\n    }'\r\n}\r\n\r\n##  `addDeprecations <file>` adds the deprecation statements to `<file>`,\r\n##  using the first new line after the start of each declaration as position\r\naddDeprecations () {\r\n  awk -v data=\"$( mkDeclAndDepr \"${1}\" )\" 'BEGIN{\r\n    found=0\r\n    split(data, pairs, \"@@@\")  ## we setup the data:\r\n    for(i in pairs) {\r\n      if (pairs[i] ~ \",\") {\r\n        split(pairs[i], declDepr, \",\")\r\n        lines[i]=declDepr[1]   ## `lines` contains `theorem/lemma name`s\r\n        deprs[i]=declDepr[2]   ## `deprs` contains the deprecation statements\r\n      }\r\n    }\r\n    currDep=\"\"\r\n    ## scanning the file, if we find an entries of `lines`, the we assign `currDep`\r\n  } /theorem|lemma/ { for(l in lines) { if ($0 ~ lines[l]) { found=1; currDep=deprs[l] } } } {\r\n    ## when we find the next empty line, we print the deprecation statement in `currDep`\r\n    if ((found == 1) && (NF == 0)) {\r\n      found=0\r\n      printf(\"\\n%s\\n\", currDep)\r\n    }  ## we print all the lines anyway\r\n    print $0 }\r\n   END{ # in case the statement to deprecate is the last of the file\r\n    if (found == 1) { printf(\"\\n%s\\n\", currDep) } }' \"${1}\" |\r\n  sed 's=||||=\\n=g'\r\n}\r\n\r\n##  loops through the changed files and runs `addDeprecations` on each one of them\r\nnew=\"i_am_a_file_name_with_no_clashes\"\r\nwhile [ -f \"${new}\" ]; do new=${new}0; done\r\nfor fil in $( git diff --name-only ${commit} ); do\r\n  printf $'Processing %s\\n' \"${fil}\"\r\n  addDeprecations \"${fil}\" > \"${new}\" ; mv \"${new}\" \"${fil}\"\r\ndone\r\n```",
              "createdAt": "2024-07-27T06:12:35Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GV7cq",
              "body": "Sorry, I'm not sure how to use your script. When I give it the commit number, it immediately returns.\r\n```\r\ngitpod /workspace/mathlib4 (rename_snorm) $ ./sebastien.sh\r\nType a commit number such that all diff lines containing `theorem/def`\r\ncorrespond to deprecated declarations (use '926984ff069daefc3c08c52893895a63f7c4b31b' otherwise):\r\naa868e885aea2dd932f9469c4ef2a498f36ad265\r\ngitpod /workspace/mathlib4 (rename_snorm) $\r\n```\r\nand if I give it no commit number then it returns a bunch of\r\n```\r\nProcessing Mathlib/Analysis/FunctionalSpaces/SobolevInequality.lean\r\nawk: line 9: regular expression compile failed (syntax error ^* or ^+)\r\n^+[^+-]*(theorem|lemma)\r\nawk: line 12: regular expression compile failed (syntax error ^* or ^+)\r\n^+\r\n```",
              "createdAt": "2024-07-27T07:25:08Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GWA8W",
              "body": "Ah! It works if I run it on Windows.",
              "createdAt": "2024-07-27T07:32:00Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GsE-F",
              "body": "bors d+\r\nCan you merge master, check that everything builds, and then send it to bors?",
              "createdAt": "2024-07-31T05:29:38Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GsE-u",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-07-31T05:29:40Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GsUpm",
              "body": "Actually, bors is currently bored, so I will try merging now.\r\n\r\nbors merge",
              "createdAt": "2024-07-31T06:26:49Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GsaM5",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10175312030/job/28142507379)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10175312030/job/28142507553)",
              "createdAt": "2024-07-31T06:44:06Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "aa868e885aea2dd932f9469c4ef2a498f36ad265",
                "additions": 1284,
                "deletions": 1257,
                "committedDate": "2024-07-27T07:19:44Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZCjA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121818167/job/27993195148"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZC2w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121818170/job/27993195227"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZBOA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817903/job/27993194808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZBTw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817905/job/27993194831"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZDIg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121818169/job/27993195298"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZBdQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817903/job/27993194869"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZAug",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817905/job/27993194682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZCkQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121818169/job/27993195153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZCYw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817903/job/27993195107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZBBQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817905/job/27993194757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZDug",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817905/job/27993195450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZBzA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817903/job/27993194956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIlfog",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817905/job/27993399202"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZDEA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121817903/job/27993195280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZPBA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27993198340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIZcWg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15177&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e49c5f56ff6b97d2d8677f1b5a7c108d484a40b4",
                "additions": 680,
                "deletions": 1,
                "committedDate": "2024-07-27T07:45:08Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo35A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946363/job/27993454564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo36A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946364/job/27993454568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2Jw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946228/job/27993454119"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2Xg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946229/job/27993454174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo3_w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946362/job/27993454591"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2xw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946228/job/27993454279"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2yA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946229/job/27993454280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo4NQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946362/job/27993454645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2mg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946228/job/27993454234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2mA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946229/job/27993454232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2Kw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946229/job/27993454123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2XA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946228/job/27993454172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo2_A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946228/job/27993454332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIp6ww",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10121946229/job/27993471683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIo-5Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27993456357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhIpMYw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15177&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "72177a502675f4d4e52f00b190e91897b3ef44f2",
                "additions": 4,
                "deletions": 7,
                "committedDate": "2024-07-27T09:06:45Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7SQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399617/job/27994504009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo69A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399612/job/27994503924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo6qA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399533/job/27994503848"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7Gg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399537/job/27994503962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7vw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399613/job/27994504127"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7pg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399533/job/27994504102"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo6pg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399537/job/27994503846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7HQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399613/job/27994503965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo6Lw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399533/job/27994503727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo6Qw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399537/job/27994503747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7qQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399537/job/27994504105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo7HA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399533/job/27994503964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJo8Eg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399533/job/27994504210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJryqQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122399537/job/27994550953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJpI2A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27994507480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhJpYqg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15177&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2be8a7ea6833fa14d35762bc4142e8eae69f3fd5",
                "additions": 4,
                "deletions": 35,
                "committedDate": "2024-07-27T10:10:11Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUyw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743568/job/27995264203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUzQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743539/job/27995264205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXTMA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743378/job/27995263792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUBQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743377/job/27995264005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUzA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743534/job/27995264204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUBg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743378/job/27995264006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743377/job/27995264101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUew",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743534/job/27995264123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXTmw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743378/job/27995263899"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXTRQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743377/job/27995263813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXUcA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743378/job/27995264112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXTnQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743377/job/27995263901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXU2Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743378/job/27995264217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKlmUg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10122743377/job/27995498066"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXkmA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27995268248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhKXwwA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15177&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "525b26a3ed90ae3cd7c5fe4bbde172a33438ebd4",
                "additions": 8616,
                "deletions": 3921,
                "committedDate": "2024-07-31T06:22:04Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcLuw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174201/job/28142144443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcK6w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174192/job/28142144235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcIjQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142143629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcIeA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142143608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcMjg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174194/job/28142144654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcMTA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142144588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcKwQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142144193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcLbQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174194/job/28142144365"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcLHQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142144285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcJSQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142143817"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcJgA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142143872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcKEQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142144017"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcNBg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142144774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjXEsCA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142808072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWcoMg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28142151730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjWdQnQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15177&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHG0b_7A",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4820",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-26T20:57:37Z",
        "deletions": 1257,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/FunctionalSpaces/SobolevInequality.lean",
              "additions": 82,
              "deletions": 64
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/CondexpL2.lean",
              "additions": 8,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/Real.lean",
              "additions": 24,
              "deletions": 21
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ContinuousMapDense.lean",
              "additions": 55,
              "deletions": 46
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConvergenceInMeasure.lean",
              "additions": 33,
              "deletions": 20
            },
            {
              "path": "Mathlib/MeasureTheory/Function/Intersectivity.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Function/L1Space.lean",
              "additions": 24,
              "deletions": 24
            },
            {
              "path": "Mathlib/MeasureTheory/Function/L2Space.lean",
              "additions": 24,
              "deletions": 15
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpOrder.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/Basic.lean",
              "additions": 688,
              "deletions": 349
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/ChebyshevMarkov.lean",
              "additions": 25,
              "deletions": 13
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/CompareExp.lean",
              "additions": 129,
              "deletions": 79
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/TriangleInequality.lean",
              "additions": 71,
              "deletions": 41
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/Trim.lean",
              "additions": 26,
              "deletions": 14
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSpace.lean",
              "additions": 274,
              "deletions": 197
            },
            {
              "path": "Mathlib/MeasureTheory/Function/SimpleFuncDenseLp.lean",
              "additions": 72,
              "deletions": 59
            },
            {
              "path": "Mathlib/MeasureTheory/Function/UnifTight.lean",
              "additions": 47,
              "deletions": 46
            },
            {
              "path": "Mathlib/MeasureTheory/Function/UniformIntegrable.lean",
              "additions": 150,
              "deletions": 125
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Bochner.lean",
              "additions": 32,
              "deletions": 23
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Lebesgue.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/MeanInequalities.lean",
              "additions": 13,
              "deletions": 6
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetToL1.lean",
              "additions": 16,
              "deletions": 16
            },
            {
              "path": "Mathlib/Probability/IdentDistrib.lean",
              "additions": 13,
              "deletions": 9
            },
            {
              "path": "Mathlib/Probability/Kernel/Disintegration/CdfToKernel.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Probability/Kernel/Disintegration/Density.lean",
              "additions": 33,
              "deletions": 19
            },
            {
              "path": "Mathlib/Probability/Martingale/BorelCantelli.lean",
              "additions": 15,
              "deletions": 8
            },
            {
              "path": "Mathlib/Probability/Martingale/Convergence.lean",
              "additions": 44,
              "deletions": 32
            },
            {
              "path": "Mathlib/Probability/Process/Filtration.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/Probability/StrongLaw.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Probability/Variance.lean",
              "additions": 5,
              "deletions": 5
            }
          ]
        },
        "headRefName": "rename_snorm",
        "headRefOid": "525b26a3ed90ae3cd7c5fe4bbde172a33438ebd4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c52np_S",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15177,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcLuw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174201/job/28142144443"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcK6w",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174192/job/28142144235"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcIjQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142143629"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcIeA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142143608"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcMjg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174194/job/28142144654"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcMTA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142144588"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcKwQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142144193"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcLbQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175174194/job/28142144365"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcLHQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142144285"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcJSQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142143817"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcJgA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142143872"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcKEQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142144017"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcNBg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173878/job/28142144774"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjXEsCA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10175173887/job/28142808072"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWcoMg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28142151730"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjWdQnQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15177&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHG0b_7A",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4820",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore(MeasureTheory): Rename `snorm` to `eLpNorm`",
        "updatedAt": "2024-07-31T06:44:09Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15177",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GUaQS",
              "createdAt": "2024-07-26T20:58:14Z",
              "body": "### PR summary [525b26a3ed](https://github.com/leanprover-community/mathlib4/pull/15177/commits/525b26a3ed90ae3cd7c5fe4bbde172a33438ebd4)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AEEqFun.eLpNorm_compMeasurePreserving`\n`+ Integrable.tendsto_eLpNorm_condexp`\n`+ Martingale.eq_condexp_of_tendsto_eLpNorm`\n`+ Memℒp.eLpNormEssSup_indicator_norm_ge_eq_zero`\n`+ Memℒp.eLpNorm_eq_integral_rpow_norm`\n`+ Memℒp.eLpNorm_indicator_le`\n`+ Memℒp.eLpNorm_indicator_le'`\n`+ Memℒp.eLpNorm_indicator_le_of_meas`\n`+ Memℒp.eLpNorm_indicator_norm_ge_le`\n`+ Memℒp.eLpNorm_indicator_norm_ge_pos_le`\n`+ Memℒp.eLpNorm_lt_top`\n`+ Memℒp.eLpNorm_mk_lt_top`\n`+ Memℒp.eLpNorm_ne_top`\n`+ Memℒp.exists_boundedContinuous_eLpNorm_sub_le`\n`+ Memℒp.exists_eLpNorm_indicator_compl_lt`\n`+ Memℒp.exists_hasCompactSupport_eLpNorm_sub_le`\n`+ Submartingale.stoppedValue_leastGE_eLpNorm_le`\n`+ Submartingale.stoppedValue_leastGE_eLpNorm_le'`\n`+ Submartingale.tendsto_eLpNorm_one_limitProcess`\n`+ _root_.MeasurableEmbedding.eLpNormEssSup_map_measure`\n`+ _root_.MeasurableEmbedding.eLpNorm_map_measure`\n`+ _root_.MeasureTheory.Memℒp.exists_simpleFunc_eLpNorm_sub_lt`\n`+ ae_bdd_liminf_atTop_of_eLpNorm_bdd`\n`+ ae_bdd_liminf_atTop_rpow_of_eLpNorm_bdd`\n`+ ae_eq_zero_of_eLpNorm'_eq_zero`\n`+ ae_le_eLpNormEssSup`\n`+ ae_tendsto_of_cauchy_eLpNorm`\n`+ ae_tendsto_of_cauchy_eLpNorm'`\n`+ coe_nnnorm_ae_le_eLpNormEssSup`\n`+ eLpNorm`\n`+ eLpNorm'`\n`+ eLpNorm'_add_le`\n`+ eLpNorm'_add_le_of_le_one`\n`+ eLpNorm'_congr_ae`\n`+ eLpNorm'_congr_nnnorm_ae`\n`+ eLpNorm'_congr_norm_ae`\n`+ eLpNorm'_const`\n`+ eLpNorm'_const'`\n`+ eLpNorm'_const_of_isProbabilityMeasure`\n`+ eLpNorm'_const_smul`\n`+ eLpNorm'_const_smul_le`\n`+ eLpNorm'_eq`\n`+ eLpNorm'_eq_zero_iff`\n`+ eLpNorm'_eq_zero_of_ae_zero`\n`+ eLpNorm'_eq_zero_of_ae_zero'`\n`+ eLpNorm'_exponent_zero`\n`+ eLpNorm'_le_eLpNorm'_mul_eLpNorm'`\n`+ eLpNorm'_le_eLpNorm'_mul_rpow_measure_univ`\n`+ eLpNorm'_le_eLpNorm'_of_exponent_le`\n`+ eLpNorm'_le_eLpNormEssSup`\n`+ eLpNorm'_le_eLpNormEssSup_mul_rpow_measure_univ`\n`+ eLpNorm'_le_nnreal_smul_eLpNorm'_of_ae_le_mul`\n`+ eLpNorm'_lim_eq_lintegral_liminf`\n`+ eLpNorm'_lim_le_liminf_eLpNorm'`\n`+ eLpNorm'_lt_top_of_eLpNorm'_lt_top_of_exponent_le`\n`+ eLpNorm'_measure_zero_of_exponent_zero`\n`+ eLpNorm'_measure_zero_of_neg`\n`+ eLpNorm'_measure_zero_of_pos`\n`+ eLpNorm'_mono_ae`\n`+ eLpNorm'_mono_measure`\n`+ eLpNorm'_mono_nnnorm_ae`\n`+ eLpNorm'_neg`\n`+ eLpNorm'_norm`\n`+ eLpNorm'_norm_rpow`\n`+ eLpNorm'_smul_le_mul_eLpNorm'`\n`+ eLpNorm'_smul_measure`\n`+ eLpNorm'_sum_le`\n`+ eLpNorm'_trim`\n`+ eLpNorm'_zero`\n`+ eLpNorm'_zero'`\n`+ eLpNormEssSup`\n`+ eLpNormEssSup_add_le`\n`+ eLpNormEssSup_congr_ae`\n`+ eLpNormEssSup_const`\n`+ eLpNormEssSup_const_smul`\n`+ eLpNormEssSup_const_smul_le`\n`+ eLpNormEssSup_eq_zero_iff`\n`+ eLpNormEssSup_indicator_const_eq`\n`+ eLpNormEssSup_indicator_const_le`\n`+ eLpNormEssSup_indicator_eq_eLpNormEssSup_restrict`\n`+ eLpNormEssSup_indicator_le`\n`+ eLpNormEssSup_le_nnreal_smul_eLpNormEssSup_of_ae_le_mul`\n`+ eLpNormEssSup_le_of_ae_bound`\n`+ eLpNormEssSup_le_of_ae_nnnorm_bound`\n`+ eLpNormEssSup_lt_top_of_ae_bound`\n`+ eLpNormEssSup_lt_top_of_ae_nnnorm_bound`\n`+ eLpNormEssSup_map_measure`\n`+ eLpNormEssSup_measure_zero`\n`+ eLpNormEssSup_mono_measure`\n`+ eLpNormEssSup_mono_nnnorm_ae`\n`+ eLpNormEssSup_piecewise`\n`+ eLpNormEssSup_smul_measure`\n`+ eLpNormEssSup_trim`\n`+ eLpNormEssSup_zero`\n`+ eLpNormLESNormFDerivOfEqInnerConst`\n`+ eLpNorm_add_le`\n`+ eLpNorm_add_le'`\n`+ eLpNorm_add_lt_top`\n`+ eLpNorm_aeeqFun`\n`+ eLpNorm_comp_measurePreserving`\n`+ eLpNorm_condexpL2_le`\n`+ eLpNorm_congr_ae`\n`+ eLpNorm_congr_nnnorm_ae`\n`+ eLpNorm_congr_norm_ae`\n`+ eLpNorm_const`\n`+ eLpNorm_const'`\n`+ eLpNorm_const_lt_top_iff`\n`+ eLpNorm_const_smul`\n`+ eLpNorm_const_smul_le`\n`+ eLpNorm_densityProcess_le`\n`+ eLpNorm_density_le`\n`+ eLpNorm_eq`\n`+ eLpNorm_eq_eLpNorm'`\n`+ eLpNorm_eq_lintegral_rpow_nnnorm`\n`+ eLpNorm_eq_zero_and_zero_of_ae_le_mul_neg`\n`+ eLpNorm_eq_zero_iff`\n`+ eLpNorm_exponent_top`\n`+ eLpNorm_exponent_top_lim_eq_essSup_liminf`\n`+ eLpNorm_exponent_top_lim_le_liminf_eLpNorm_exponent_top`\n`+ eLpNorm_exponent_zero`\n`+ eLpNorm_indicator_const`\n`+ eLpNorm_indicator_const'`\n`+ eLpNorm_indicator_const_le`\n`+ eLpNorm_indicator_const₀`\n`+ eLpNorm_indicator_eq_eLpNorm_restrict`\n`+ eLpNorm_indicator_eq_restrict`\n`+ eLpNorm_indicator_le`\n`+ eLpNorm_indicator_le_of_bound`\n`+ eLpNorm_indicator_sub_indicator`\n`+ eLpNorm_inner_lt_top`\n`+ eLpNorm_le_add_measure_left`\n`+ eLpNorm_le_add_measure_right`\n`+ eLpNorm_le_eLpNorm_fderiv`\n`+ eLpNorm_le_eLpNorm_fderiv_of_eq`\n`+ eLpNorm_le_eLpNorm_fderiv_of_eq_inner`\n`+ eLpNorm_le_eLpNorm_fderiv_of_le`\n`+ eLpNorm_le_eLpNorm_fderiv_one`\n`+ eLpNorm_le_eLpNorm_mul_eLpNorm'_of_norm`\n`+ eLpNorm_le_eLpNorm_mul_eLpNorm_of_nnnorm`\n`+ eLpNorm_le_eLpNorm_mul_eLpNorm_top`\n`+ eLpNorm_le_eLpNorm_mul_rpow_measure_univ`\n`+ eLpNorm_le_eLpNorm_of_exponent_le`\n`+ eLpNorm_le_eLpNorm_top_mul_eLpNorm`\n`+ eLpNorm_le_mul_eLpNorm_of_ae_le_mul`\n`+ eLpNorm_le_nnreal_smul_eLpNorm_of_ae_le_mul`\n`+ eLpNorm_le_of_ae_bound`\n`+ eLpNorm_le_of_ae_nnnorm_bound`\n`+ eLpNorm_lim_le_liminf_eLpNorm`\n`+ eLpNorm_lt_top`\n`+ eLpNorm_lt_top_iff_lintegral_rpow_nnnorm_lt_top`\n`+ eLpNorm_map_measure`\n`+ eLpNorm_measure_zero`\n`+ eLpNorm_mono`\n`+ eLpNorm_mono_ae`\n`+ eLpNorm_mono_ae_real`\n`+ eLpNorm_mono_measure`\n`+ eLpNorm_mono_nnnorm`\n`+ eLpNorm_mono_nnnorm_ae`\n`+ eLpNorm_mono_real`\n`+ eLpNorm_ne_top`\n`+ eLpNorm_neg`\n`+ eLpNorm_nnreal_eq_eLpNorm'`\n`+ eLpNorm_nnreal_eq_lintegral`\n`+ eLpNorm_nnreal_pow_eq_lintegral`\n`+ eLpNorm_norm`\n`+ eLpNorm_norm_rpow`\n`+ eLpNorm_one_add_measure`\n`+ eLpNorm_one_condexp_le_eLpNorm`\n`+ eLpNorm_one_eq_lintegral_nnnorm`\n`+ eLpNorm_one_le_of_le`\n`+ eLpNorm_one_le_of_le'`\n`+ eLpNorm_one_smul_measure`\n`+ eLpNorm_restrict_eq_of_support_subset`\n`+ eLpNorm_restrict_le`\n`+ eLpNorm_rpow_two_norm_lt_top`\n`+ eLpNorm_smul_le_eLpNorm_mul_eLpNorm_top`\n`+ eLpNorm_smul_le_eLpNorm_top_mul_eLpNorm`\n`+ eLpNorm_smul_le_mul_eLpNorm`\n`+ eLpNorm_smul_measure_of_ne_top`\n`+ eLpNorm_smul_measure_of_ne_zero`\n`+ eLpNorm_sub_le`\n`+ eLpNorm_sub_le'`\n`+ eLpNorm_sub_le_of_dist_bdd`\n`+ eLpNorm_sum_le`\n`+ eLpNorm_top_piecewise`\n`+ eLpNorm_trim`\n`+ eLpNorm_trim_ae`\n`+ eLpNorm_zero`\n`+ eLpNorm_zero'`\n`+ exists_continuous_eLpNorm_sub_le_of_closed`\n`+ exists_eLpNorm_indicator_le`\n`+ fun_eq_funMulInvSnorm_mul_eLpNorm`\n`+ integral_inner_eq_sq_eLpNorm`\n`+ le_eLpNorm_of_bddBelow`\n`+ lintegral_rpow_add_le_add_eLpNorm_mul_lintegral_rpow_add`\n`+ lintegral_rpow_nnnorm_eq_rpow_eLpNorm'`\n`+ lintegral_rpow_nnnorm_lt_top_of_eLpNorm'_lt_top`\n`+ lintegral_rpow_nnnorm_lt_top_of_eLpNorm_lt_top`\n`+ meas_eLpNormEssSup_lt`\n`+ meas_ge_le_mul_pow_eLpNorm`\n`+ mem_Lp_iff_eLpNorm_lt_top`\n`+ memℒp_limitProcess_of_eLpNorm_bdd`\n`+ mul_meas_ge_le_pow_eLpNorm`\n`+ mul_meas_ge_le_pow_eLpNorm'`\n`+ pow_mul_meas_ge_le_eLpNorm`\n`+ snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm'`\n`+ snorm_smul_measure_of_ne_zero_of_ne_top`\n`+ tendstoInMeasure_of_tendsto_eLpNorm`\n`+ tendstoInMeasure_of_tendsto_eLpNorm_of_ne_top`\n`+ tendstoInMeasure_of_tendsto_eLpNorm_of_stronglyMeasurable`\n`+ tendstoInMeasure_of_tendsto_eLpNorm_top`\n`+ tendsto_approxOn_Lp_eLpNorm`\n`+ tendsto_approxOn_range_Lp_eLpNorm`\n`+ tendsto_eLpNorm_condexp`\n`+ tendsto_eLpNorm_one_densityProcess_limitProcess`\n`+ tendsto_eLpNorm_one_restrict_densityProcess_limitProcess`\n`- snorm'`\n`- snormEssSup`\n`- snormLESNormFDerivOfEqInnerConst`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RBCmOzwAAAAMujrpc",
              "createdAt": "2024-07-26T20:58:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RBCmOzwAAAAMujrpj",
              "createdAt": "2024-07-26T20:58:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
                "name": "t-measure-probability"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GVnFh",
              "createdAt": "2024-07-27T06:12:35Z",
              "body": "Could you add deprecation statements? I haven't followed which tools are available now, but here is the script I have been using lately:\r\n\r\n```\r\n#! /bin/bash\r\n\r\nif [ -z \"${1}\" ]\r\nthen\r\n  commit=\"$( git merge-base master \"$( git rev-parse --abbrev-ref HEAD )\" )\"\r\n  read -p $'Type a commit number such that all diff lines containing `theorem/def`\r\ncorrespond to deprecated declarations (use '\"'${commit}'\"' otherwise):\r\n' comm\r\n  [ -n \"${comm}\" ] && commit=${comm}\r\nelse\r\n  commit=\"${1}\"\r\nfi\r\n\r\ngit cat-file -e \"${commit}\" || exit 1\r\n\r\n##  `mkDeclAndDepr <file>` outputs a single line of the form\r\n##  `@[deprecated (since := \"yyyy-mm-dd\")]||||alias yyy := xxx@@@`\r\n##  for each modified declaration in `<file>`.\r\n##  The separators `@@@` delimit different declarations.\r\n##  The separators `||||` are later replaced by line breaks.\r\n## To use a specific date, replace $( date +%Y-%m-%d ) with 2024-04-17 for instance\r\n\r\nmkDeclAndDepr () {\r\n  git diff --unified=0 \"${commit}\" \"${1}\" |\r\n    awk -v date=\"$( date +%Y-%m-%d )\" 'function depr(ol,ne) {\r\n      return sprintf(\"@[deprecated (since := \\\"%s\\\")]||||alias %s := %s\", date, ol, ne)\r\n    }\r\n    /^-[^+-]*(theorem|lemma)/ {\r\n      for(i=1; i<=NF; i++) {\r\n        if (($i ~ /theorem$/) || ($i ~ /lemma$/)) { old=$(i+1) }\r\n      }\r\n    }\r\n    /^+[^+-]*(theorem|lemma)/ {\r\n      for(i=1; i<=NF; i++) {\r\n        if (($i ~ /theorem$/) || ($i ~ /lemma$/)) {\r\n          sub(/^+/, \"\", $i)\r\n          printf(\"%s %s ,%s@@@\", $i, $(i+1), depr(old, $(i+1)))\r\n        }\r\n      }\r\n    }'\r\n}\r\n\r\n##  `addDeprecations <file>` adds the deprecation statements to `<file>`,\r\n##  using the first new line after the start of each declaration as position\r\naddDeprecations () {\r\n  awk -v data=\"$( mkDeclAndDepr \"${1}\" )\" 'BEGIN{\r\n    found=0\r\n    split(data, pairs, \"@@@\")  ## we setup the data:\r\n    for(i in pairs) {\r\n      if (pairs[i] ~ \",\") {\r\n        split(pairs[i], declDepr, \",\")\r\n        lines[i]=declDepr[1]   ## `lines` contains `theorem/lemma name`s\r\n        deprs[i]=declDepr[2]   ## `deprs` contains the deprecation statements\r\n      }\r\n    }\r\n    currDep=\"\"\r\n    ## scanning the file, if we find an entries of `lines`, the we assign `currDep`\r\n  } /theorem|lemma/ { for(l in lines) { if ($0 ~ lines[l]) { found=1; currDep=deprs[l] } } } {\r\n    ## when we find the next empty line, we print the deprecation statement in `currDep`\r\n    if ((found == 1) && (NF == 0)) {\r\n      found=0\r\n      printf(\"\\n%s\\n\", currDep)\r\n    }  ## we print all the lines anyway\r\n    print $0 }\r\n   END{ # in case the statement to deprecate is the last of the file\r\n    if (found == 1) { printf(\"\\n%s\\n\", currDep) } }' \"${1}\" |\r\n  sed 's=||||=\\n=g'\r\n}\r\n\r\n##  loops through the changed files and runs `addDeprecations` on each one of them\r\nnew=\"i_am_a_file_name_with_no_clashes\"\r\nwhile [ -f \"${new}\" ]; do new=${new}0; done\r\nfor fil in $( git diff --name-only ${commit} ); do\r\n  printf $'Processing %s\\n' \"${fil}\"\r\n  addDeprecations \"${fil}\" > \"${new}\" ; mv \"${new}\" \"${fil}\"\r\ndone\r\n```",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RBCmOzwAAAAMuqhTM",
              "createdAt": "2024-07-27T06:12:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RBCmOzwAAAAMuq_6S",
              "createdAt": "2024-07-27T07:20:28Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GV7cq",
              "createdAt": "2024-07-27T07:25:08Z",
              "body": "Sorry, I'm not sure how to use your script. When I give it the commit number, it immediately returns.\r\n```\r\ngitpod /workspace/mathlib4 (rename_snorm) $ ./sebastien.sh\r\nType a commit number such that all diff lines containing `theorem/def`\r\ncorrespond to deprecated declarations (use '926984ff069daefc3c08c52893895a63f7c4b31b' otherwise):\r\naa868e885aea2dd932f9469c4ef2a498f36ad265\r\ngitpod /workspace/mathlib4 (rename_snorm) $\r\n```\r\nand if I give it no commit number then it returns a bunch of\r\n```\r\nProcessing Mathlib/Analysis/FunctionalSpaces/SobolevInequality.lean\r\nawk: line 9: regular expression compile failed (syntax error ^* or ^+)\r\n^+[^+-]*(theorem|lemma)\r\nawk: line 12: regular expression compile failed (syntax error ^* or ^+)\r\n^+\r\n```",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GWA8W",
              "createdAt": "2024-07-27T07:32:00Z",
              "body": "Ah! It works if I run it on Windows.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RBCmOzwAAAAMurJTh",
              "createdAt": "2024-07-27T07:45:14Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RBCmOzwAAAAMurJzm",
              "createdAt": "2024-07-27T07:46:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GsE-F",
              "createdAt": "2024-07-31T05:29:38Z",
              "body": "bors d+\r\nCan you merge master, check that everything builds, and then send it to bors?",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GsE-u",
              "createdAt": "2024-07-31T05:29:40Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RBCmOzwAAAAMw2IGa",
              "createdAt": "2024-07-31T05:29:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GsUpm",
              "createdAt": "2024-07-31T06:26:49Z",
              "body": "Actually, bors is currently bored, so I will try merging now.\r\n\r\nbors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GsaM5",
              "createdAt": "2024-07-31T06:44:06Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10175312030/job/28142507379)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10175312030/job/28142507553)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6RBCmOzwAAAAMw4g3q",
              "createdAt": "2024-07-31T06:44:06Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6RBCmOzwAAAAMw4hAH",
              "createdAt": "2024-07-31T06:44:09Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UOlks",
              "createdAt": "2024-08-01T17:33:49Z",
              "source": {
                "id": "PR_kwDOFcwZ1c529Mz2",
                "title": "feat: MiM PR report",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
