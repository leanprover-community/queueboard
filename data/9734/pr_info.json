{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 461,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomasbaliuka"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define the (Shannon) binary and q-ary entropy functions.\r\n\r\nThe binary entropy function is used in information theory; for example, in Shannon's theorems.\r\n\r\n---\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [x] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n- [x] depends on: #14594\r\n- [x] depends on: #15828\r\n- [x] depends on: #15829\r\n\r\nThe lemmas are mostly \"trivial\", especially using `Mathlib.Analysis.SpecialFunctions.Log.NegMulLog`.\r\nThis is the kind of application that `NegMulLog` was made for.\r\n\r\nIf Mathlib is to include Shannon's theorems in the future (already formalized in Coq), this might hopefully save someone a few minutes.\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2024-08-18T02:14:17Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5wtKvR",
              "body": "Shouldn't binary entropy be put under InformationTheory? Why not use capital H_2 for the function's name?",
              "createdAt": "2024-01-14T08:51:40Z",
              "author": {
                "login": "kspalaiologos"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5wtc2b",
              "body": "@kspalaiologos Thanks for the comment! I moved it to `InformationTheory`. For the name, did you mean to use  `H₂` or `H_2`? The danger is that it might be confused with Rényi entropy (collision entropy), which is written `H₂`.",
              "createdAt": "2024-01-14T14:07:09Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zruZN",
              "body": "@b-mehta and I have material about the binary entropy function. We needed it a year ago in the context of the progress on the Frankl set family conjecture. I suggest we wait for Bhavik to provide the code to compare.",
              "createdAt": "2024-02-13T09:09:33Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zzvRd",
              "body": "Yes, I developed that further since this function is fundamental to my Ramsey proof. I will make a detailed comparison in the next day or two.",
              "createdAt": "2024-02-14T01:21:16Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c504uA3",
              "body": "@b-mehta Any news? If you're too busy, you could also upload your files and let someone else compare it...",
              "createdAt": "2024-02-23T09:53:09Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c516LC_",
              "body": "@YaelDillies @lecopivo @semorrison  \r\nIt seems that @b-mehta is not available at the moment. Would you propose to wait or maybe continue with this?",
              "createdAt": "2024-03-05T08:14:30Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c516fQL",
              "body": "Hopefully I can find the relevant files in the `ramsey` branch of mathlib3.",
              "createdAt": "2024-03-05T09:03:55Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c518jsq",
              "body": "I guess it's this file?\r\nhttps://github.com/leanprover-community/mathlib/blob/exponential-ramsey/src/information_theory/binary_entropy.lean\r\nIt allows arbitrary base for the logs while I use 2. Maybe I should generalize everything and put 2 as the default base...",
              "createdAt": "2024-03-05T13:45:38Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c51_x2t",
              "body": "I need a few things myself about the binary entropy. Mind if I touch this PR?",
              "createdAt": "2024-03-05T21:19:46Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c52AVGi",
              "body": "> I need a few things myself about the binary entropy. Mind if I touch this PR?\r\n\r\nSure, go for it!",
              "createdAt": "2024-03-05T23:15:05Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c57Q8Y-",
              "body": "@YaelDillies Can you think of anything I could do to increase the chances of this getting merged?",
              "createdAt": "2024-04-21T13:13:29Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c57Q-5e",
              "body": "Sorry, I am not done adding the material because I ran out of Lean time for my holidays. I won't have more time until July.\r\n\r\nHowever there are things you can do in the meantime, eg give up binary entropy (for now) and only define base e entropy. This is much easier because `log` has more API than `logb` and also nicer expressions.\r\n\r\nYou can then relegate binary entropy to a second PR depending on the present one.",
              "createdAt": "2024-04-21T13:44:06Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c57UJId",
              "body": "@YaelDillies By \"entropy\", do you mean for arbitrary probability distributions? That seems like a major API decision for Mathlib, which concerns the entire way how \"probability\" is set up (which I don't even understand at the moment). Not sure if I can really do anything useful there. Or did you mean something else?",
              "createdAt": "2024-04-22T09:07:05Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c57UlAJ",
              "body": "Sorry, I got my terminology wrong. Replace \"binary entropy\" with \"base 2 binary entropy\" and \"entropy\" with \"binary entropy\" in my previous message and everything should hopefully make sense.",
              "createdAt": "2024-04-22T10:03:21Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583L5N",
              "body": "@YaelDillies Since I seem to be prone to misunderstanding you, just to clarify: You're saying I should replace all `log2` by `log` in the current file? \r\n\r\nI don't really see how that's *much* easier but could certainly do it. However, people who might be using this API one day might want the binary-log version as well. Could also make a general version that allows setting the base and having a default.",
              "createdAt": "2024-05-05T14:58:33Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583R5E",
              "body": "Yes that's what I mean.\r\n\r\n> I don't really see how that's _much_ easier but could certainly do it.\r\n\r\nIt's much easier because the preliminary API lemmas about `log` already exists. This is not the case with `logb`, cf the ton of lemmas I had to add in my last few commits. The general case would be nice to have but I would argue it should be a separate definition (instead of replacing the base e one) in order to have one API without all the `log b` factors.",
              "createdAt": "2024-05-05T16:18:19Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583S87",
              "body": "@YaelDillies another question: The way to \"get up to date with master\" is to merge it, as you did? I had previously rebased (which I now probably wouldn't do since you have also worked on the branch). The docs (https://leanprover-community.github.io/contribute/index.html#dealing-with-merge-conflicts) aren't very explicit about this. Thanks for the help!\r\n\r\nGuess I will merge master again before changing the logarithm base.",
              "createdAt": "2024-05-05T16:35:22Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583TFT",
              "body": "Yes, merging is the usual thing. You can of course rebase and I really don't mind if I lose authorship of some commits 😄 ",
              "createdAt": "2024-05-05T16:37:29Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583hRM",
              "body": "@YaelDillies I reversed your additions to [Mathlib/Analysis/SpecialFunctions/Log/Base.lean](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ed98ab123b247f3dd17be7028c92849a0886cf43#diff-65f5aea892f7b42adf3f0b41b364a438db50e26b67e23a0ca2e20a095cf9ac8a) and [Mathlib/Analysis/SpecialFunctions/Log/NegMulLog.lean](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ed98ab123b247f3dd17be7028c92849a0886cf43#diff-5262eb8af9650701e05eee3fa60cb996837b1fbdc9c983f031d182b6072f7c0f) because they are not needed for this PR any longer (what with using natural logs) and they no longer worked with the current master branch.",
              "createdAt": "2024-05-05T19:55:02Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583i72",
              "body": "That's fine. Please just keep them on a branch somewhere so that we can add them when needed.",
              "createdAt": "2024-05-05T20:18:46Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c583k1v",
              "body": "> That's fine. Please just keep them on a branch somewhere so that we can add them when needed.\r\n\r\nThe branch: [Yael-logb-lemmas](https://github.com/leanprover-community/mathlib4/tree/Yael-logb-lemmas)\r\nNote: these are only those changes that didn't work with master and that I removed in [ed98ab1](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ed98ab123b247f3dd17be7028c92849a0886cf43). All other changes are still in this PR.",
              "createdAt": "2024-05-05T20:42:18Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c585OqN",
              "body": "I've opened #12693. Would you mind either\r\n* Removing the corresponding lines from the diff and updating the labels, assuming this PR doesn't need the new lemmas.\r\n* Marking this PR as depending on #12693.",
              "createdAt": "2024-05-06T07:44:33Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c585waB",
              "body": "@YaelDillies  This PR does not require #12693. I removed the changes as you suggested. This PR now just adds `BinEntropy.lean`, nothing else.\r\n\r\nBy \"updating labels\", do you mean the PR labels on GitHub? Feel free to change those, I'm not sure what they should be.",
              "createdAt": "2024-05-06T09:08:05Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c59zZJp",
              "body": "Hi, great to have some people working on entropies! Are you aware of https://github.com/leanprover-community/mathlib4/pull/10493 and should the binary entropy be based on it? I think at least the following lemmas follow trivially from the general case:\r\n\r\n- `h2_gt_0` holds by `measureEntropy_nonneg` and `measureEntropy_dirac`\r\n- `h2_zero_iff_zero_or_one` by `measureEntropy_dirac`\r\n- `h2_one_iff_eq_half` by `measureEntropy_eq_card_iff_measure_eq`\r\n- `h2_le_log_2` by `measureEntropy_le_log_card `\r\n- `h₂_continuous` (not in #10493, I think; If I understand correctly, the lemma refers to continuity of the function $h2$ in $p$. It follows since the Bernoulli distribution is continuous in $p$ and the entropy is continuous in the distribution (even concave, see below).\r\n- `strictConcave_h2` (not in #10493, I think)",
              "createdAt": "2024-05-14T16:13:32Z",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c59zdrn",
              "body": "> Shouldn't binary entropy be put under InformationTheory? Why not use capital H_2 for the function's name?\r\n-- https://github.com/leanprover-community/mathlib4/pull/9734#issuecomment-1890888657\r\n\r\n> @kspalaiologos Thanks for the comment! I moved it to InformationTheory. For the name, did you mean to use H₂ or H_2? The danger is that it might be confused with Rényi entropy (collision entropy), which is written H₂.\r\n-- https://github.com/leanprover-community/mathlib4/pull/9734#issuecomment-1890962843\r\n\r\n\r\nAbout the naming, you are currently using both `h2` and `h₂`. I think it should be only one of them. Other possible, less ambiguous names: `Hbin`, `Hbern`, where the latter is consistent with `Hm` (entropy of a measure #10493), but to my experience less conventional in Information Theory than `Hbin`.\r\n\r\n$h_2$ could be a differential Renyi-2-entropy, but this is maybe not that frequent.\r\nIn general, $H_2, h, h_2$ could all have naming collisions.",
              "createdAt": "2024-05-14T16:22:52Z",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c590RlM",
              "body": "To follow the capitalisation rules, it should be `hbin`/`hbern`.",
              "createdAt": "2024-05-14T18:26:50Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c594bpF",
              "body": "Very nice to see some work on information theory! Just one initial comment: I really think it should be named something longer, i.e. `binaryEntropy` seems like the obvious name. `h₂` can then be used as local notation for it where appropriate, but reserving this name for all time seems a bit extreme (i.e. I use `h₂` all the time for hypothesis names...).\r\n\r\nAlso, it might be good to generalize it to the q-ary entropy (see, e.g., [this book](https://cse.buffalo.edu/faculty/atri/courses/coding-theory/book/), section 3.3).",
              "createdAt": "2024-05-15T08:56:37Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c595jI_",
              "body": "> Also, it might be good to generalize it to the q-ary entropy (see, e.g., [this book](https://cse.buffalo.edu/faculty/atri/courses/coding-theory/book/), section 3.3).\r\n\r\nThis was roughly the state of the PR before I told Adomas to use `log` instead of `logb`. My motivation is that the `logb` API is very underdeveloped compared to the `log` API and that the `binaryEntropy` defined using `log` has a nicer derivative (which I need in an upcoming PR).\r\n\r\nMy opinion is that the `q`-ary entropy function should be a separate function, and be defined in a later PR.",
              "createdAt": "2024-05-15T11:12:33Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c599OpO",
              "body": "I didn't mean to change the base of the log; I'm perfectly happy with the natural log. I only meant to add the `x * log (q-1)` term. Once we have that, I really don't see the point of having a separate case for `q=2`, it's literally just `qaryEntropy 2`.",
              "createdAt": "2024-05-15T18:36:32Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c599bKs",
              "body": "Yes, so `qaryEntropy 2` is not \"literally just\" the definition in this PR because this PR uses base e, not base 2.\r\n\r\nOr do you mean that q-ary entropy does not need to use log base 2?",
              "createdAt": "2024-05-15T18:58:38Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c599qwR",
              "body": "- Given that this is going into `SpecialFunctions`, I currently tend toward **naming** it `binaryEntropy` as suggested by @dupuisf.\r\n- Concerning #10493, I didn't know about this PR. Thanks for pointing it out. I think if this is going into `SpecialFunctions`, it would make sense to prove the properties here like this for now and then later prove that this definition equals the Shannon entropy of a Bernoulli distribution once #10493 is merged. I'm open to shortening the proofs here later using things from general entropy. However, if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...).\r\n- I'm interested in opinions what **namespace** this should be in.\r\n-  The **q-ary entropy**, according to that book, seems to be a slightly different thing. I'm talking about the Shannon entropy of a Bernoulli random variable (as [Wikipedia](https://en.wikipedia.org/wiki/Entropy_(information_theory)) does). One can measure this in bits (base-2 logs), Nats (natural logs), etc. The definition of q-ary entropy isn't the same, as the book points out, (even though they coincide for base-2 logs). So I would say those definitions are separate. Alternatively, one could fix the base to two (I used base-two logs originally) and *force* them to coincide.\r\n",
              "createdAt": "2024-05-15T19:33:41Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c599ulK",
              "body": "> * if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...)\r\n\r\nAgreed. That is precisely my use case.",
              "createdAt": "2024-05-15T19:44:31Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-Ba6Q",
              "body": "> Yes, so `qaryEntropy 2` is not \"literally just\" the definition in this PR because this PR uses base e, not base 2.\r\n> \r\n> Or do you mean that q-ary entropy does not need to use log base 2?\r\n\r\nRight, I see no particular reason why q-ary entropy needs to be in base q, especially if all other versions of entropy are using natural logs.",
              "createdAt": "2024-05-16T07:47:02Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-BeOT",
              "body": "Okay then I'm happy for this PR to be about the base e q-ary entropy!",
              "createdAt": "2024-05-16T07:52:27Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-BeOe",
              "body": "> * Given that this is going into `SpecialFunctions`, I currently tend toward **naming** it `binaryEntropy` as suggested by @dupuisf.\r\n> \r\n>     * Concerning [feat: entropy of a measure #10493](https://github.com/leanprover-community/mathlib4/pull/10493), I didn't know about this PR. Thanks for pointing it out. I think if this is going into `SpecialFunctions`, it would make sense to prove the properties here like this for now and then later prove that this definition equals the Shannon entropy of a Bernoulli distribution once [feat: entropy of a measure #10493](https://github.com/leanprover-community/mathlib4/pull/10493) is merged. I'm open to shortening the proofs here later using things from general entropy. However, if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...).\r\n> \r\n>     * I'm interested in opinions what **namespace** this should be in.\r\n> \r\n>     * The **q-ary entropy**, according to that book, seems to be a slightly different thing. I'm talking about the Shannon entropy of a Bernoulli random variable (as [Wikipedia](https://en.wikipedia.org/wiki/Entropy_(information_theory)) does). One can measure this in bits (base-2 logs), Nats (natural logs), etc. The definition of q-ary entropy isn't the same, as the book points out, (even though they coincide for base-2 logs). So I would say those definitions are separate. Alternatively, one could fix the base to two (I used base-two logs originally) and _force_ them to coincide.\r\n\r\nNo, q-ary entropy is very much a generalization of the binary entropy: it's the Shannon entropy of a random variable over {1,...,q}, where 1 has probability 1-x and the rest of the probability is evenly distributed over the rest. It's used for things like bounding the volume of Hamming balls and that sort of thing, much like the binary entropy. And if we're going to standardize to natural logs for defining various versions of the entropy, it should also follow suit.",
              "createdAt": "2024-05-16T07:52:28Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-IwIW",
              "body": "> * However, if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...).\r\n\r\nI agree. Though, when(!) we have a proof of the same property for the general entropy, the proof would simply consist of proving that the function gives the entropy Bern(p), or in the q-ary case of, e.g., $qSC_p(1)$, the output distribution of a q-ary symmetric channel, and the remaining part is `exact`ly the respective property of the general entropy. The probability setup would not be exposed (except for the proof that this is the entropy of some probability measure).\r\n\r\nFor continuity/concavity, I am not sure it is easy enough to be worth it: One would also have to show these properties for the map from p to the PMF. This holds since the pmfs depend affinely on q $P = (1, 0, 0, ...) + (-1, 1/q, 1/q, ...) * p)$. I have no idea if this argument is easy in Lean. I might try it as an exercise (I'm a complete newbie but would be happy if i can contribute to and use Lean for information Theory).",
              "createdAt": "2024-05-16T21:30:22Z",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-MCxD",
              "body": "Regarding the point about defining this via the general Shannon entropy, I disagree for practical reasons: it would make the imports of this file *much* heavier, and since the work has already been done it's hardly worth it. Also, note that this function is used in areas like combinatorics where it might be the only bit of information theory that is used, so making its imports heavier would impact the imports of anything downstream as well.",
              "createdAt": "2024-05-17T09:02:34Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-N6km",
              "body": "@dupuisf: Just for clarification: You mean the proofs, not the definition, don't you? I think noone proposed to define `qaryEntropy` in terms of `measureEntropy`.\r\n\r\nI'm not opposed to keeping things separate in principle. Is loading of files a perormance issue in lean, e.g. are they eagerly or lazily loaded?\r\n\r\nThat said, if you want to keep this file independent and want to have a proof that the q-ary entropy function gives indeed the entropy of some probability distribution, then this proof must be outsourced, e.g. to accompany the general entropy.",
              "createdAt": "2024-05-17T13:12:54Z",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-OJF2",
              "body": "> @dupuisf: Just for clarification: You mean the proofs, not the definition, don't you? I think noone proposed to define `qaryEntropy` in terms of `measureEntropy`.\r\n> \r\n> I'm not opposed to keeping things separate in principle. Is loading of files a perormance issue in lean, e.g. are they eagerly or lazily loaded?\r\n> \r\n> That said, if you want to keep this file independent and want to have a proof that the q-ary entropy function gives indeed the entropy of some probability distribution, then this proof must be outsourced, e.g. to accompany the general entropy.\r\n\r\nI mean both the proofs and the definition; I think it should be usable without importing a massive chunk of measure theory. Having unnecessary imports has already caused problems in the past (it restricts what can be compiled in parallel, any changes that are made in earlier files triggers a recompilation of all its dependencies, etc). And hopefully, at some point it will become possible for a downstream project to only import the parts of mathlib it actually depends on, which will only add to the benefits of having shallow imports.\r\n\r\nAnd yes, this means that the connection between this and the general Shannon entropy should then be located in some other file.",
              "createdAt": "2024-05-17T13:41:25Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-O185",
              "body": "- Given the discussion so far, I propose to continue with this PR for now without connecting it to the general entropy definition and add the connection in a separate file later, after both this PR and #10493 are merged.\r\n- I'm not completely sure what exactly should the definition be if we include the generalization to \"q-ary entropy\". If we generalize, I would still prefer to *also* keep the special case of binary entropy as a `def` with a good informative name, because binary entropy seems to be a better known concept than the generalization. \r\n\r\n    The book @dupuisf referenced says that \"there is no similar analogue\" for the q-ary entropy as the Shannon entropy of a random variable, and uses logs-base-q, so I was bit confused about that, as I wasn't familiar with q-ary entropy until now. Do we want to define `qaryEntropy (q : Nat) (p : Real)` as \"the Shannon entropy (measured in Nats) of the random variable '1 with probability (1 - p) and any of 2...q with equal probability' \", so `p * log (q − 1) − p * log p − (1 − p) * log (1 − p)`? That definition would not even match the definition from the book for q=2 (because of the log-base, which does seem to be there on purpose?!) but if you say this makes sense, let's do it.",
              "createdAt": "2024-05-17T15:13:28Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-QRLa",
              "body": "> * Given the discussion so far, I propose to continue with this PR for now without connecting it to the general entropy definition and add the connection in a separate file later, after both this PR and [feat: entropy of a measure #10493](https://github.com/leanprover-community/mathlib4/pull/10493) are merged.\r\n> \r\n>     * I'm not completely sure what exactly should the definition be if we include the generalization to \"q-ary entropy\". If we generalize, I would still prefer to _also_ keep the special case of binary entropy as a `def` with a good informative name, because binary entropy seems to be a better known concept than the generalization.\r\n>       The book @dupuisf referenced says that \"there is no similar analogue\" for the q-ary entropy as the Shannon entropy of a random variable, and uses logs-base-q, so I was bit confused about that, as I wasn't familiar with q-ary entropy until now. Do we want to define `qaryEntropy (q : Nat) (p : Real)` as \"the Shannon entropy (measured in Nats) of the random variable '1 with probability (1 - p) and any of 2...q with equal probability' \", so `p * log (q − 1) − p * log p − (1 − p) * log (1 − p)`? That definition would not even match the definition from the book for q=2 (because of the log-base, which does seem to be there on purpose?!) but if you say this makes sense, let's do it.\r\n\r\nYes, that's basically it. The base of the log is just a scaling factor, and I think in mathlib we'll anyway want to standardize to using natural logs. I guess we can always have `abbrev binaryEntropy := qaryEntropy 2` with specialized lemmas under that name.",
              "createdAt": "2024-05-17T18:47:25Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-Q2ni",
              "body": "> we can always have `abbrev binaryEntropy := qaryEntropy 2` with specialized lemmas under that name\r\n\r\nActually you could make `h₂` (scoped) notation for `qaryEntropy 2`.",
              "createdAt": "2024-05-17T20:32:46Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-S6O_",
              "body": "I think, in any case, the base should be emphasized in the documentation: I am not sure where else the function is used, but base $q$ looks like the convention in coding theory to me, since base $q$ is used in the books by Guruswami–Rudra–Sudan, by [Roth](https://doi.org/10.1017/CBO9780511808968) and in some papers I glanced into. Next week, I could ask a coding theorist if they would be very surprised about base $e$.\r\n\r\nBase $q$ makes sense in coding theory since they define the rate of a $k$-dimensional linear code (subspace) in $\\mathbb{F}_q^n$ as $k/n$, i.e. they measure in $q$-its.",
              "createdAt": "2024-05-18T17:21:08Z",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_YYZi",
              "body": "@jorsn Any news from the coding theorist on how surprising base-e would be?",
              "createdAt": "2024-05-29T10:38:02Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_aZpA",
              "body": "I doubt it would be that much more surprising than an information theorist seeing natural logs rather than base 2 (i.e. clearly a minority choice, but not shocking). However, it's worth keeping in mind that using a different base than e has a cost in mathlib that doesn't exist on paper: `log` has a more complete API than `logb`, and this is likely to remain that way for the foreseeable future.",
              "createdAt": "2024-05-29T14:58:06Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_g-Mf",
              "body": "My collegue says, it is mostly but not always in base q, and he always checks it. So the natural basis is fine, I think.",
              "createdAt": "2024-05-30T11:27:47Z",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_yosg",
              "body": "Any comments on the definitions or lemma statements?\r\n\r\nI'm not sure what to do about linter complaining that `binaryEntropy_one : binaryEntropy 1 = 0` is not in simp-normal-form. Linter says it would want to replace it by `(2-1).log = 0`. What should I do?\r\n- Remove the lemma completely because it \"follows obviously\" from `qaryEntropy_one` (Personally, I'd rather keep it)\r\n- remove the `simp` attribute\r\n- Add `(2-1).log = 0` as a new simp-lemma (presumably in a different file) as suggested by the linter (??)",
              "createdAt": "2024-06-02T18:33:32Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_yp4E",
              "body": "The fourth option would be to not make `binaryEntropy` an `abbrev`. (note saying this is good or bad, I haven't thought about it)\r\n\r\nAlso note that the simp lemma you would need is not `log (2-1) = 0` but rather `2 - 1 = 1` since `log 1 = 0` is already a simp lemma. Or maybe there should be a simproc for numerals instead. (again, not saying this is good or bad, haven't thought about it).",
              "createdAt": "2024-06-02T18:53:59Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_1Spq",
              "body": "> The fourth option would be to not make `binaryEntropy` an `abbrev`. (note saying this is good or bad, I haven't thought about it)\r\n> \r\n> Also note that the simp lemma you would need is not `log (2-1) = 0` but rather `2 - 1 = 1` since `log 1 = 0` is already a simp lemma. Or maybe there should be a simproc for numerals instead. (again, not saying this is good or bad, haven't thought about it).\r\n\r\nI changed `abbrev` to `def` for `binaryEntropy`. Since many people using `binaryEntropy` will probably not care about `qaryEntropy`, it's maybe better if it doesn't get unfolded into `qaryEntropy`.",
              "createdAt": "2024-06-03T09:06:15Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_4DVl",
              "body": "All remaining `-- TODO` comments concern lemmas that have assumptions which are not strictly necessary. However, I'm having a hard time proving the statements without those assumptions (it involves proving things like `¬DifferentiableAt` in order to use junk values of `deriv`).\r\n\r\nProbably nobody will ever need those junk values, however, it would of course be nice overall to never have unnecessary assumptions. I asked for hints about how to do it on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Proving.20.60.C2.AC.20DifferentiableAt.60/near/412820748) but haven't done it yet. On the other hand, e.g., `deriv2_mul_log` also has unnecessary assumptions, so maybe I shouldn't worry about it?",
              "createdAt": "2024-06-03T14:49:10Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_6I65",
              "body": "> All remaining `-- TODO` comments concern lemmas that have assumptions which are not strictly necessary. However, I'm having a hard time proving the statements without those assumptions (it involves proving things like `¬DifferentiableAt` in order to use junk values of `deriv`).\r\n> \r\n> Probably nobody will ever need those junk values, however, it would of course be nice overall to never have unnecessary assumptions. I asked for hints about how to do it on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Proving.20.60.C2.AC.20DifferentiableAt.60/near/412820748) but haven't done it yet. On the other hand, e.g., `deriv2_mul_log` also has unnecessary assumptions, so maybe I shouldn't worry about it?\r\n\r\nI think there are missing lemmas in mathlib about e.g. `deriv log 0`, etc, for precisely this reason. With those, you could then proceed by cases without too many problems I think. I agree the junk values are not so useful, but removing assumptions from lemma statements makes them easier to use, so it's worth doing.",
              "createdAt": "2024-06-03T19:20:02Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6AKR-j",
              "body": "@dupuisf We can prove `deriv log 0 = 0` using `differentiableAt_log_iff`. However, the approach in the proof of `differentiableAt_log_iff` seems hard to generalize.\r\n\r\nSomething like `deriv_add` *has to* require that both functions are `differentiableAt` and the converse is false (because \"two non-differentiables can cancel each other\"). In order to be able to use junk values here, I would have to prove (assuming it's true) something like\r\n```lean4\r\n¬ DifferentiableAt 𝕜 f x → DifferentiableAt 𝕜 g x → ¬ DifferentiableAt 𝕜 (fun y => f y + g y) x\r\n```\r\n\r\nand right now I don't really know how to approach it.\r\n\r\nIn general, the API for proving that things are *not* differentiable does not seem complete or easy to use for a beginner like me.",
              "createdAt": "2024-06-05T14:28:48Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6AK97h",
              "body": "That's definitely not true as, as you say, non-differentianle functions can add up to a differentiable one",
              "createdAt": "2024-06-05T15:28:27Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6AK_GQ",
              "body": "> That's definitely not true as, as you say, non-differentianle functions can add up to a differentiable one\r\n\r\nI'm adding a non-differentiable function to a differentiable one and claiming the result is non-differentiable. Do you have a counter-example?",
              "createdAt": "2024-06-05T15:30:37Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ALHUG",
              "body": "> > That's definitely not true as, as you say, non-differentianle functions can add up to a differentiable one\r\n> \r\n> I'm adding a non-differentiable function to a differentiable one and claiming the result is non-differentiable. Do you have a counter-example?\r\n\r\nYou can show non-differentiability by contradiction here: if `g = f₁ + f₂` is differentiable at `x` and so is `f₂`, then `f₁` must also be differentiable there since it's the difference of two differentiable functions.",
              "createdAt": "2024-06-05T15:46:30Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ALSvh",
              "body": "Sorry, was (mis)reading on my phone",
              "createdAt": "2024-06-05T16:07:54Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6AP24c",
              "body": "> You can show non-differentiability by contradiction here: if `g = f₁ + f₂` is differentiable at `x` and so is `f₂`, then `f₁` must also be differentiable there since it's the difference of two differentiable functions.\r\n\r\nThanks for the hint! I proved `¬ DifferentiableAt 𝕜 f x → DifferentiableAt 𝕜 g x → ¬ DifferentiableAt 𝕜 (fun y => f y + g y) x`.\r\n\r\nHowever, the same approach doesn't work for `¬ DifferentiableAt ℝ (fun x => x * log x) 0` because \"multiplication with zero\" has no functional inverse (let alone one that's differentiable there). In my analysis class many years ago I might have tried an argument (applied to `x * log |x|`, which is what we have here) like \r\n\r\n> it's differentiable in any (punctured) neighborhood of 0 and the derivative grows without bound when approaching 0, hence the derivative at zero cannot exist. \r\n\r\nBut I don't know how to do this in Lean (this direction led me to my question at [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Proving.20.60.C2.AC.20DifferentiableAt.60/near/412820748)).",
              "createdAt": "2024-06-06T07:53:55Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6C2gHG",
              "body": "### PR summary [ff21379a50](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ff21379a505c86b73e5a9de3204355978a2b1c77)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ extracted_1`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ ne_one_of_lt_onehalf`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ tendsto_nhdsWithin_of_eventuallyEq`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-27T18:00:26Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6C209f",
              "body": "### PR summary [387e0d0be6](https://github.com/leanprover-community/mathlib4/pull/9734/commits/387e0d0be677e0620fc7131bd43ef0d450f308c7)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-27T18:22:36Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DC3zJ",
              "body": "### PR summary [fab2002a9a](https://github.com/leanprover-community/mathlib4/pull/9734/commits/fab2002a9aa7ebbdfb366d13e745db13b19c9bd6)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-30T13:41:56Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DC30A",
              "body": "### PR summary [532b7f34d1](https://github.com/leanprover-community/mathlib4/pull/9734/commits/532b7f34d14dcd9ede13fd1f4ab30a21c964a751)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-30T13:42:11Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DC31U",
              "body": "### PR summary [7421f1fe80](https://github.com/leanprover-community/mathlib4/pull/9734/commits/7421f1fe80f8291fa7e9668e2b3e4bc3eaafb936)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-30T13:42:31Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DC35t",
              "body": "### PR summary [fd95ecd7df](https://github.com/leanprover-community/mathlib4/pull/9734/commits/fd95ecd7dfcc3c59a8b9a24a0dbeedfbba39123c)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-30T13:43:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DDt0b",
              "body": "### PR summary [3f69a42337](https://github.com/leanprover-community/mathlib4/pull/9734/commits/3f69a423375549440670b417e5b01fb2264b7a76)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-30T22:49:59Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DD2Vr",
              "body": "### PR summary [7cb3707b0e](https://github.com/leanprover-community/mathlib4/pull/9734/commits/7cb3707b0e57363ec52710693e65d7df0b22e5dd)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-01T00:20:58Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DMc6-",
              "body": "### PR summary [6368935991](https://github.com/leanprover-community/mathlib4/pull/9734/commits/6368935991aaa4a377399a974f6027da016c6b7f)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ log_le_log_of_neg`\n`+ log_lt_log_of_neg`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-01T21:10:49Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DMda5",
              "body": "### PR summary [6f0d71065b](https://github.com/leanprover-community/mathlib4/pull/9734/commits/6f0d71065b1fd96b50258efc5073e7cfc472876f)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ log_le_log_of_neg`\n`+ log_lt_log_of_neg`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-01T21:12:04Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DVMHd",
              "body": "### PR summary [13c8c5738b](https://github.com/leanprover-community/mathlib4/pull/9734/commits/13c8c5738ba48ca8b1029da9ec67147bdc0b4dc6)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-02T14:27:25Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dew_m",
              "body": "There are several helper lemmas (about limits and about differentiability) which should either be inlined/refactored, or should go into different files. Please comment on which Lemmas would be OK to keep, assuming they're properly generalized, etc. Are there any other major things to be done?",
              "createdAt": "2024-07-03T11:42:29Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3zZX",
              "body": "### PR summary [9f74760806](https://github.com/leanprover-community/mathlib4/pull/9734/commits/9f74760806e55e81eff3cd07c11c2cbcabec45ec)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:05:16Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3za1",
              "body": "### PR summary [550ec52382](https://github.com/leanprover-community/mathlib4/pull/9734/commits/550ec523820b17728bcebf37e9936422454cc9c3)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:05:34Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3zfr",
              "body": "### PR summary [944ced5a23](https://github.com/leanprover-community/mathlib4/pull/9734/commits/944ced5a23ca1ed247c3d877020b2b27f043f05e)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:06:11Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3zhf",
              "body": "### PR summary [9f7b55130c](https://github.com/leanprover-community/mathlib4/pull/9734/commits/9f7b55130c2501dfa1d55c59d1111ca7455a102d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:06:25Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3zjN",
              "body": "### PR summary [a7f3110c86](https://github.com/leanprover-community/mathlib4/pull/9734/commits/a7f3110c86ac7b7c398ee59b21e50ebe74d70c29)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:06:41Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3zj4",
              "body": "### PR summary [a7f3110c86](https://github.com/leanprover-community/mathlib4/pull/9734/commits/a7f3110c86ac7b7c398ee59b21e50ebe74d70c29)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:06:50Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3zlc",
              "body": "### PR summary [de5c3f5a90](https://github.com/leanprover-community/mathlib4/pull/9734/commits/de5c3f5a907152d554c84a89ef5e2e0f5d9af02c)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:07:07Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D33E0",
              "body": "### PR summary [1998396bdd](https://github.com/leanprover-community/mathlib4/pull/9734/commits/1998396bddbbd4d4d3c0bf0abc7ea5cc2b41953f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T13:53:30Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D33JZ",
              "body": "@dupuisf Thanks for the review! I also made some changes to `NegMulLog.lean` (removed assumption to use junk value, added some Lemmas that I'm using). Did you review those?",
              "createdAt": "2024-07-07T13:54:40Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D34-W",
              "body": "### PR summary [cd51034a73](https://github.com/leanprover-community/mathlib4/pull/9734/commits/cd51034a737474b2debb4d83933eeccb5a9fd04d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T14:18:40Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D4X2U",
              "body": "### PR summary [959a8f9ae9](https://github.com/leanprover-community/mathlib4/pull/9734/commits/959a8f9ae9f81872e79ff588ad411f6c71c3f4f0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1583|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-07T22:11:10Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D6_o2",
              "body": "### PR summary [6809828028](https://github.com/leanprover-community/mathlib4/pull/9734/commits/6809828028bb8941c0653809a1b1f7ad4b31d124)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1583|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_negMulLog_iff`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-08T07:52:21Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6EQcED",
              "body": "### PR summary [aee4ee807f](https://github.com/leanprover-community/mathlib4/pull/9734/commits/aee4ee807fe2b85ae4cc9417c963c98acc2054ef)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1587|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_mul_log_zero`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_negMulLog_iff`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-09T23:05:59Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6EQ0oo",
              "body": "Why did the bot remove my `blocked-by-PR` label? If I'm using it wrong, the label description should be amended.",
              "createdAt": "2024-07-09T23:38:51Z",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ERIr2",
              "body": "### PR summary [bd159d8106](https://github.com/leanprover-community/mathlib4/pull/9734/commits/bd159d81060fd841e27a5ce4da4a596a90c2b384)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1587|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-10T00:05:51Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6H7pFl",
              "body": "### PR summary [0d9791edea](https://github.com/leanprover-community/mathlib4/pull/9734/commits/0d9791edeafdeefc77121e9c4b53cfe98037eb2d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T09:21:43Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6H74qs",
              "body": "### PR summary [6738e159ba](https://github.com/leanprover-community/mathlib4/pull/9734/commits/6738e159bab30bd41707eaf3971920e86a90d8c4)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T09:34:56Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMQf",
              "body": "### PR summary [9f93aaefcf](https://github.com/leanprover-community/mathlib4/pull/9734/commits/9f93aaefcf884615f5ac674d1670abdf80f37a8a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.iff_comp_mul_add`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T20:57:58Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMUb",
              "body": "### PR summary [1177b0cdeb](https://github.com/leanprover-community/mathlib4/pull/9734/commits/1177b0cdebfae2ced790ef8991b778568458c282)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T20:59:20Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMVS",
              "body": "### PR summary [22887ff41c](https://github.com/leanprover-community/mathlib4/pull/9734/commits/22887ff41cfafad118984145b5d33eaf394e39b8)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T20:59:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMWw",
              "body": "### PR summary [7f5cdea335](https://github.com/leanprover-community/mathlib4/pull/9734/commits/7f5cdea335363e100cce4be025055f2962b57e6a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T21:00:05Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMX3",
              "body": "### PR summary [34a2477b66](https://github.com/leanprover-community/mathlib4/pull/9734/commits/34a2477b668ca4ccacff2f001503efb1ea9e2058)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T21:00:26Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMYB",
              "body": "### PR summary [767b517607](https://github.com/leanprover-community/mathlib4/pull/9734/commits/767b517607cd2aa9885d044ba75605ba4b33576f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T21:00:28Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMYt",
              "body": "### PR summary [767b517607](https://github.com/leanprover-community/mathlib4/pull/9734/commits/767b517607cd2aa9885d044ba75605ba4b33576f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T21:00:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ICMl7",
              "body": "### PR summary [c3b4746fd3](https://github.com/leanprover-community/mathlib4/pull/9734/commits/c3b4746fd33b00e73a87bf9b07be3ef4272e9443)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-10T21:04:03Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IDyAA",
              "body": "### PR summary [8988331416](https://github.com/leanprover-community/mathlib4/pull/9734/commits/898833141614ee24ae68cec225bd35fc023614e2)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-11T09:25:25Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IDyCa",
              "body": "### PR summary [ef1bfb0116](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ef1bfb0116c9d8a3da67128a463d1106998a1e05)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_apply`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-11T09:25:59Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IDyUM",
              "body": "### PR summary [bb6f835e5e](https://github.com/leanprover-community/mathlib4/pull/9734/commits/bb6f835e5e5bc83c13780e2d1686b6c259a192f6)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_apply`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_eq_zero`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-11T09:29:42Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IDyX3",
              "body": "### PR summary [246ff04832](https://github.com/leanprover-community/mathlib4/pull/9734/commits/246ff04832abb5f32414c7f8e62938ef501197da)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_apply`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_eq_zero`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-11T09:30:23Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IDybn",
              "body": "### PR summary [626a357d71](https://github.com/leanprover-community/mathlib4/pull/9734/commits/626a357d71994771bca37e98042bab5e37c4236d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_apply`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_eq_zero`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-11T09:31:01Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IDzcU",
              "body": "### PR summary [b66bb00e4b](https://github.com/leanprover-community/mathlib4/pull/9734/commits/b66bb00e4b69783c5551717a4e05342bb41ab691)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1630|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ binaryEntropy`\n`+ binaryEntropy_apply`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_eq_zero`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_one_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_two_inv_add`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_qaryEntropy`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-11T09:44:37Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7ec21c20e3f5135b7278855b5a2ca3265c0d6a53",
                "additions": 324,
                "deletions": 0,
                "committedDate": "2024-02-14T08:10:09Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "edb704b17e9bb5256390012224c9e4677fd5d18b",
                "additions": 11,
                "deletions": 12,
                "committedDate": "2024-02-14T08:10:09Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6dd1b3f46f8dc398fc363e9d4394cb06dd376ac4",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6dba45ef5a8dec8aba3543b13b0d2e79e802f4a1",
                "additions": 26,
                "deletions": 15,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fe60a95b88a1b257eca4ccc2962f50599c427a32",
                "additions": 1,
                "deletions": 27,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "370a7de31b03f518f00720bc996466a39f44c37c",
                "additions": 7,
                "deletions": 9,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5cf49b98ee1bcc597bc95263c3c999834c7d1fb9",
                "additions": 13,
                "deletions": 24,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d1d67949aea5fb13cb77e6e56bdac7688eac58a4",
                "additions": 62,
                "deletions": 4,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "09b0d891c93edef0ee5668d652a27e121fb827a9",
                "additions": 14,
                "deletions": 14,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2ef8238dbc50b9a6232025acd68642ba19048ea4",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "628f7e41c1e97ea8a69e760ec1d03bfde68cae6c",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "18f2421b1032dd10e297bfbef58cb947c1df23d0",
                "additions": 0,
                "deletions": 3,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "48e9f505611b3fbb475d3685cffa9143c74257b4",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9436e8282980270593188c4b88ed89312366d036",
                "additions": 8,
                "deletions": 9,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "26e66aa79b680ba926e72bf98b77568cc361717c",
                "additions": 70,
                "deletions": 66,
                "committedDate": "2024-02-14T08:10:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "52a03beaf0c87c99c8b7da143ce7507874899a54",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-02-14T08:20:54Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f0086e1575af30503bb90c87526e3b020c7323db",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2024-02-14T12:26:11Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVM44w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901162129/job/21564176611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVnUvg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901308768/job/21564609726"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa1veg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903054145/job/21570088826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa8FQg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903083054/job/21570192706"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa92Cg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903090542/job/21570221578"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa-WRg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903092968/job/21570229830"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCQQr3g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7921244004/job/21626104798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCx1GIw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7933164267/job/21661304355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVM3eA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901162131/job/21564176248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVnU6g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901308780/job/21564609770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa1uNw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903054146/job/21570088503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa8Dpg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903083051/job/21570192294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa9yug",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903090540/job/21570220730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa-VLA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903092973/job/21570229548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCQQqsA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7921243996/job/21626104496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCx1GYw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7933164268/job/21661304419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL6cw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156822/job/21564160627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL3Hg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156513/job/21564159774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL4gg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156512/job/21564160130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL7Qg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156816/job/21564160834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVM3rQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901162129/job/21564176301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVnV7w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901308768/job/21564610031"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa1uFA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903054145/job/21570088468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa8DwA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903083054/job/21570192320"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa90tg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903090542/job/21570221238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBa-VNw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7903092968/job/21570229559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCQQq2w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7921244004/job/21626104539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCx1HXw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7933164267/job/21661304671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL4BA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156513/job/21564160004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL28g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156512/job/21564159730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL6aA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156816/job/21564160616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL5wA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156513/job/21564160448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL3vw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156512/job/21564159935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL66w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156513/job/21564160747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL6Gg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156512/job/21564160538"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL5Qg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156512/job/21564160322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL42A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156513/job/21564160216"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVL7wg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156513/job/21564160962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVgwBw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7901156512/job/21564502023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVR9vw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "85a3d85c9f682658bea9d4b118bfdcbbbad5833e",
                "additions": 51899,
                "deletions": 32521,
                "committedDate": "2024-03-06T12:38:59Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "06da8d06c0951c812dd41f3b3152b47b91d98c95",
                "additions": 152,
                "deletions": 28,
                "committedDate": "2024-03-07T12:39:41Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpML-w",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188250481/job/22390443003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMVYQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251254/job/22390445409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMWYA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251250/job/22390445664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpML_A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188250480/job/22390443004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMXoQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251254/job/22390445985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMXbQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251250/job/22390445933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMM4A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188250480/job/22390443232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMWXQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251254/job/22390445661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMVFg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251250/job/22390445334"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMZ4w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251254/job/22390446563"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMYbA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251250/job/22390446188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMZRg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251250/job/22390446406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMY1g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251254/job/22390446294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpMa_w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251254/job/22390446847"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNqHN3A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8188251250/job/22391410140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFNpOBUA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "85913da5571b8995e4375cb368d40fd656018f42",
                "additions": 98425,
                "deletions": 58876,
                "committedDate": "2024-05-05T16:58:53Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1QGA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842110/job/24605708312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1QKQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842112/job/24605708329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1VTg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842626/job/24605709646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1Uuw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842627/job/24605709499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1QHQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842109/job/24605708317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1UJQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842626/job/24605709349"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1Vww",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842627/job/24605709763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1QVQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842109/job/24605708373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1VQg",
                        "name": "Check all files imported",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842627/job/24605709634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1VkQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842626/job/24605709713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1UuA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842626/job/24605709496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1Vfg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842627/job/24605709694"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1UMA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842627/job/24605709360"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1V5Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842626/job/24605709797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup57Aw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842627/job/24605784835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1WKA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959842626/job/24605709864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1XOA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24605710136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup1ynw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "24acc8b4ec54bd965e2fc149985803b78ed02ec0",
                "additions": 0,
                "deletions": 872,
                "committedDate": "2024-05-05T17:13:08Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zcw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878575/job/24605782899"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zeQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878573/job/24605782905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5xgw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878237/job/24605782403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5xeg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878232/job/24605782394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zqw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878569/job/24605782955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zNA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878237/job/24605782836"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5x7Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878232/job/24605782509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zbw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878569/job/24605782895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5ykQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878237/job/24605782673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zDg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878232/job/24605782798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5y8A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878237/job/24605782768"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5yWQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878232/job/24605782617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5yyQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878232/job/24605782729"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5yFg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878237/job/24605782550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup5zcg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878237/job/24605782898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFuqLHKA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8959878232/job/24606066472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup56Yg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24605784674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFup6Lkw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ed98ab123b247f3dd17be7028c92849a0886cf43",
                "additions": 0,
                "deletions": 73,
                "committedDate": "2024-05-05T19:49:43Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6aff21408590746f7057d2b11fafd77d9b95d255",
                "additions": 59,
                "deletions": 93,
                "committedDate": "2024-05-05T19:50:09Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlhZA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722934/job/24607547748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlhOw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722931/job/24607547707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgIg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722812/job/24607547426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgWA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722814/job/24607547480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlhSA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722932/job/24607547720"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlg7Q",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722814/job/24607547629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgww",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722812/job/24607547587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlhdA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722932/job/24607547764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgYg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722812/job/24607547490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgkA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722814/job/24607547536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlglw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722812/job/24607547543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgIQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722814/job/24607547425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlgvQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722814/job/24607547581"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlg9Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722812/job/24607547637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmt0Q",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722814/job/24607567313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlhOA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960722812/job/24607547704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlkPA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24607548476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurlxTg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "eb097b02e6666adfc8f03078d2f0e40ee61c02e6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-05-05T19:52:09Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnbw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731729/job/24607565679"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnbA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731721/job/24607565676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmmMg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731561/job/24607565362"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmmRg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731562/job/24607565382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnSQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731717/job/24607565641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnGw",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731562/job/24607565595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmntg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731561/job/24607565750"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnww",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731717/job/24607565763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnIw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731561/job/24607565603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmmiw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731562/job/24607565451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmm3Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731561/job/24607565533"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmm2Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731562/job/24607565529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmnhQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731562/job/24607565701"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmmfg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731561/job/24607565438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurm4Bg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731562/job/24607569926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmn_A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960731561/job/24607565820"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmseQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24607566969"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c9c31c2f6f5112caf5c6f15a83635b504c6f5ad8",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-05-05T19:52:26Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwJg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732521/job/24607567910"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwQQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732523/job/24607567937"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmv3Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732483/job/24607567837"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmv1Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732482/job/24607567829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwXA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732524/job/24607567964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwgQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732483/job/24607568001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmvsA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732482/job/24607567792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwMA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732524/job/24607567920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwDw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732483/job/24607567887"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmvhQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732482/job/24607567749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwUw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732483/job/24607567955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwBw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732482/job/24607567879"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwUQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732482/job/24607567953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmvoQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732483/job/24607567777"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurmwqA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732483/job/24607568040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurpd_w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960732482/job/24607612415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurm1Ew",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24607569171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFurm3Wg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6136cba81b2550dd0e97328b93dfd508867ea9d6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-05-05T20:23:36Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-XQw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918802/job/24607954755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-XPw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918806/job/24607954751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-VwQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918546/job/24607954369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-WfA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918544/job/24607954556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-XUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918808/job/24607954770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-XQg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918546/job/24607954754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-WyA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918544/job/24607954632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-XtQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918808/job/24607954869"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-Weg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918546/job/24607954554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-V2A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918544/job/24607954392"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-W2g",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918546/job/24607954650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-VhQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918544/job/24607954309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-WLw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918544/job/24607954479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-WFw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918546/job/24607954455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-Xkw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918546/job/24607954835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusHplw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8960918544/job/24608106903"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-ehQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24607956613"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFur-0Sg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "da788cf3304585fbc859ea97932010670e2740c4",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2024-05-05T20:54:53Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOkw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069881/job/24608280211"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOcg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069880/job/24608280178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSNvg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069782/job/24608279998"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSNjA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069774/job/24608279948"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOqA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069879/job/24608280232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSNfg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069782/job/24608279934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSNTg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069774/job/24608279886"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOcw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069879/job/24608280179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSN7w",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069782/job/24608280047"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSN9w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069774/job/24608280055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOIA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069782/job/24608280096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOKw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069774/job/24608280107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSNyA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069774/job/24608280008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOZQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069782/job/24608280165"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSOmw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069782/job/24608280219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusfVew",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961069774/job/24608494971"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSSYA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24608281184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusSh5g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ee2ddfba025196774d647867e13ce26b425aa0e5",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-05-05T21:14:44Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "A.Baliuka@physik.uni-muenchen.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFush0TA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194216/job/24608535628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFush0Qg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194215/job/24608535618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushzRA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194050/job/24608535364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushy6A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194049/job/24608535272"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFush0kg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194217/job/24608535698"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushysQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194050/job/24608535217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushziQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194049/job/24608535433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFush0Vw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194217/job/24608535639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushy7g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194050/job/24608535278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushzHA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194049/job/24608535324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushzzg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194050/job/24608535502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushzVg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194049/job/24608535382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushzgQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194050/job/24608535425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFushyvw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194049/job/24608535231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFush0EQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194050/job/24608535569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusypFg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8961194049/job/24608811286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFush4JQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24608536613"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFusiRiA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "aaf442c4e675ad9d67298c4f5e7ca94a0c1f95d2",
                "additions": 27,
                "deletions": 78,
                "committedDate": "2024-05-06T08:56:41Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "db715ed61978c84c6e1873af4c21e6ecea8d29f6",
                "additions": 8,
                "deletions": 14,
                "committedDate": "2024-05-06T09:03:21Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AoIg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966673254/job/24622671906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6Aovw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966673256/job/24622672063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AjJQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672849/job/24622670629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AjVQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672838/job/24622670677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6ApbQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966673257/job/24622672237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6Am8Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672849/job/24622671601"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AiZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672838/job/24622670437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AoYA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966673257/job/24622671968"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AlIA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672849/job/24622671136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AkUQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672838/job/24622670929"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AmAw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672849/job/24622671363"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AlUw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672838/job/24622671187"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AkOQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672849/job/24622670905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AmPg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672838/job/24622671422"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6AoBg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672849/job/24622671878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu64XpA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8966672838/job/24623585188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6BACA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24622678024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFu6CReQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3b17a3fcab3665d9aa6df255677a33e4fb0dcef3",
                "additions": 77768,
                "deletions": 51109,
                "committedDate": "2024-06-01T18:07:25Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2vSw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332244672/job/25687863115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2ytQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245035/job/25687863989"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2zUg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245041/job/25687864146"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2vUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332244671/job/25687863122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2zXg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245035/job/25687864158"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x20hA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245041/job/25687864452"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2v1w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332244671/job/25687863255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x20fQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245035/job/25687864445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2z7g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245041/job/25687864302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x21CQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245035/job/25687864585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x21BA",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245041/job/25687864580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2z4A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245035/job/25687864288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x2yaA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245041/job/25687863912"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x21dw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245035/job/25687864695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-yBniA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9332245041/job/25688041352"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x24-Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25687865593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-x3MFg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "466eeffca00b32f9e8d009009c1327722baa7ef1",
                "additions": 217,
                "deletions": 84,
                "committedDate": "2024-06-01T21:15:22Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5ygQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225310/job/25690010241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5wzw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225096/job/25690009807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5xRw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225097/job/25690009927"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5y5w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225312/job/25690010343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5x1g",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225097/job/25690010070"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5xrA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225096/job/25690010028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5yjg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225312/job/25690010254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5xYA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225096/job/25690009952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5xCA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225097/job/25690009864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5yJg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225096/job/25690010150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5wqg",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225097/job/25690009770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5xhg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225097/job/25690009990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5xJg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225096/job/25690009894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z-OIQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225097/job/25690082849"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z5yiw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333225096/job/25690010251"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z58CA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25690012680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6KuQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a7fde9017ff2239eb1e0ebbdcd13266b4f9d4cdc",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-01T21:16:30Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mwg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232258/job/25690023618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6lqA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232136/job/25690023336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mAw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232135/job/25690023427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mqQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232260/job/25690023593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mog",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232135/job/25690023586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mCg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232136/job/25690023434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6m_A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232260/job/25690023676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6m7A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232136/job/25690023660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mUA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232135/job/25690023504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6nOw",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232136/job/25690023739"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6m8g",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232135/job/25690023666"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6lyA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232135/job/25690023368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6mbA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232136/job/25690023532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6nhw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232136/job/25690023815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-0DJ5w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9333232135/job/25690163687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6s9A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25690025204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-z6-Yg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "883bd4ad09f7c8967f757e6fda70d193b0d02642",
                "additions": 0,
                "deletions": 33,
                "committedDate": "2024-06-02T10:11:09Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832Gw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472824/job/25699415579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-831HA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472694/job/25699415324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-831mA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472693/job/25699415448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832LQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472825/job/25699415597"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832KQ",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472693/job/25699415593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-831zA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472694/job/25699415500"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832gg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472825/job/25699415682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-831hw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472694/job/25699415431"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-8313A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472693/job/25699415516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832bg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472694/job/25699415662"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832dQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472693/job/25699415669"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-831PA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472693/job/25699415356"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832Ig",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472694/job/25699415586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-9BhmQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472693/job/25699574169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-832uA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337472694/job/25699415736"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-8367Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25699416813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-84QaQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "daa6c5a1cf71598679f05115c47306cabf39c06a",
                "additions": 7,
                "deletions": 2,
                "committedDate": "2024-06-02T10:18:45Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89kbw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337515404/job/25699509359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89iYw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514967/job/25699508835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89iCA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514968/job/25699508744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89ksQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337515403/job/25699509425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89i7g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514967/job/25699508974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89iRg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514968/job/25699508806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89kXQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337515403/job/25699509341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89ioA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514967/job/25699508896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89igw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514968/job/25699508867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89jSQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514967/job/25699509065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89jHQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514968/job/25699509021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89ixg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514968/job/25699508934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89iFQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514967/job/25699508757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89jmA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514967/job/25699509144"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-9HgbA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9337514968/job/25699672172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-89r4Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25699511265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF-8-BgQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ee5e7cc749c1a29c57d145e6c3c4e36252e9c774",
                "additions": 110,
                "deletions": 34,
                "committedDate": "2024-06-02T17:12:17Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHh_Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931718/job/25704915453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHgyw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931607/job/25704915147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhGg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931605/job/25704915226"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHh-w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931714/job/25704915451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhfw",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931605/job/25704915327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhvQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931607/job/25704915389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhxg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931714/job/25704915398"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhQQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931607/job/25704915265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhSw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931605/job/25704915275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhdw",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931607/job/25704915319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhwQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931605/job/25704915393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHg3w",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931605/job/25704915167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHhEg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931607/job/25704915218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CMlIA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931605/job/25704998176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHh-Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339931607/job/25704915449"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CHnbg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25704916846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CH-HQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1559627f502c6292a51f196034e818380f687e53",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-02T17:13:43Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CInmg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339941082/job/25704933274"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIlew",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940708/job/25704932731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIlig",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940709/job/25704932746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CInrQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339941083/job/25704933293"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CImCA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940708/job/25704932872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIl0w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940709/job/25704932819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIoBQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339941083/job/25704933381"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CImSg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940708/job/25704932938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CImlg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940709/job/25704933014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIlwg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940708/job/25704932802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIm2Q",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940709/job/25704933081"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CImRQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940709/job/25704932933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CImmA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940708/job/25704933016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIm4w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940708/job/25704933091"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CRyZg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9339940709/job/25705083494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIumQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25704935065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CIqGA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4588f8cbcc136ef5a594240c07ca1dfaa9062f78",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2024-06-02T17:41:56Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "23fc16c8c98f5ee5ad2775d5a1888dbcfc727a70",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2024-06-02T17:43:09Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "70e3ce753edac6e08b5c6831652f63453172e123",
                "additions": 2,
                "deletions": 7,
                "committedDate": "2024-06-02T17:50:02Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CkKjw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340165013/job/25705384591"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CnrAg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340187003/job/25705442050"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CkKMA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340165011/job/25705384496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Cnq5Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340187001/job/25705442021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chnpg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146825/job/25705342886"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_ChmKA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146693/job/25705342504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chm5A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146679/job/25705342692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chnsw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146822/job/25705342899"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CkKPw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340165013/job/25705384511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Cnrgg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340187003/job/25705442178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chm1w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146693/job/25705342679"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_ChmoA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146679/job/25705342624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chngw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146822/job/25705342851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chndg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146693/job/25705342838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_ChnaQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146679/job/25705342825"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chmgw",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146693/job/25705342595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chnng",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146679/job/25705342878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_ChmMw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146679/job/25705342515"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_ChnNg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146693/job/25705342774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_ChnqA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146693/job/25705342888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_CqZyA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340146679/job/25705486792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Chq0g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25705343698"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Ch86g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c613c03dcdcd0741af16a0b56f16972d136715df",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2024-06-02T18:14:13Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_II-Sg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9342710369/job/25711230538"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_IJDcQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9342710353/job/25711231857"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_II8rg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9342710358/job/25711230126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0m9w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280458/job/25705654007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0lxw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280247/job/25705653703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0mnQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280246/job/25705653917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0m_Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280459/job/25705654013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_II89g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9342710369/job/25711230198"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0mbw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280247/job/25705653871"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0m5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280246/job/25705653988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0nYQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280459/job/25705654113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0mDg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280247/job/25705653774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0mNA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280246/job/25705653812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0muA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280247/job/25705653944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0nUg",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280246/job/25705654098"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0lwA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280246/job/25705653696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0nCg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280247/job/25705654026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0ncg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280247/job/25705654130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C-u8Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9340280246/job/25705819889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C0tOQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25705655609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_C1D4A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4de1c24a248186d50bfed7600b1775bfc42c95ac",
                "additions": 3,
                "deletions": 8,
                "committedDate": "2024-06-03T07:37:09Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4nVA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153661/job/25720399700"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4lQQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153424/job/25720399169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4meQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153423/job/25720399481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4oqg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153665/job/25720400042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4ovQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153423/job/25720400061"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4nmQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153424/job/25720399769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4n4g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153665/job/25720399842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4mSg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153424/job/25720399434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4n3g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153423/job/25720399838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4olA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153424/job/25720400020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4phw",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153423/job/25720400263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4lVQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153423/job/25720399189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4pig",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153424/job/25720400266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q6dvg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153423/job/25720430014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q4qYw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346153424/job/25720400483"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q474g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720404962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5sgQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d1dd4b5e498845b3ee56f09f2c981fb4a7e367b1",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2024-06-03T07:37:36Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5mQw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158972/job/25720415811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5jsQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158647/job/25720415153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5lSw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158643/job/25720415563"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5mRA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158979/job/25720415812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5lww",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158647/job/25720415683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5iBQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158643/job/25720414725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5nVg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158979/job/25720416086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5kpQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158647/job/25720415397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5kPg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158643/job/25720415294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5nFg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158647/job/25720416022"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5jTQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158643/job/25720415053"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5mEw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158643/job/25720415763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5iYA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158647/job/25720414816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7tHA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158643/job/25720450332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q5oHQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346158647/job/25720416285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q55Qg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720420674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q60hw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "232a349bda31fa821c7d597f4bb74a71ae2e2863",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-06-03T07:38:17Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7MpQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166855/job/25720442021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7LMw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166718/job/25720441651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7MdQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166720/job/25720441973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7NTg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166850/job/25720442190"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7NJA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166718/job/25720442148"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7LfQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166720/job/25720441725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7Mpw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166850/job/25720442023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7MIQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166718/job/25720441889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7NOg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166720/job/25720442170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7OlA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166718/job/25720442516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7Kfg",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166720/job/25720441470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7N-w",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166720/job/25720442363"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7N4A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166718/job/25720442336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RJIZQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166720/job/25720670309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7PXA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346166718/job/25720442716"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q7dNg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720446262"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q78dg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5c7e6bd9fddabb761cad5ea670a3f91c2802334c",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2024-06-03T07:39:33Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q99BQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179450/job/25720487173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q97Rg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179336/job/25720486726"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q99cw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179344/job/25720487283"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q99ww",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179446/job/25720487363"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q9-PQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179344/job/25720487485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q9-oQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179336/job/25720487585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q98nA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179446/job/25720487068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q99qQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179336/job/25720487337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q98Pw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179344/job/25720486975"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q98Kg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179336/job/25720486954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q9_Kw",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179344/job/25720487723"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q97YA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179344/job/25720486752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q9_lg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179336/job/25720487830"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_13Q",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179344/job/25720518109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q-AYw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346179336/job/25720488035"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q-OJQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720491557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q-v3Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d791d68a92d553e2bae3421aa5b19134c61183d0",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-03T07:40:10Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RCRyA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346201852/job/25720558024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RCRuQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346201854/job/25720558009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_TVQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186725/job/25720509269"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_RdQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186324/job/25720508789"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_RiA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186325/job/25720508808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_VCg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186730/job/25720509706"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RCS-g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346201852/job/25720558330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_TRg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186324/job/25720509254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_ULg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186325/job/25720509486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_UIg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186730/job/25720509474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_SVA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186324/job/25720509012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_TMA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186325/job/25720509232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_VZA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186324/job/25720509796"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_SWg",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186325/job/25720509018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_VHQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186325/job/25720509725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_Ufg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186324/job/25720509566"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_WVw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186324/job/25720510039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RCRgw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346186325/job/25720557955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Q_ptw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720514999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RAWzg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7f6113f523d65c17e5d79c0a03e8fc18d5ca8633",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-03T07:42:51Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFIeA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217556/job/25720604792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFGbw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217372/job/25720604271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFHTw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217369/job/25720604495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFIBg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217554/job/25720604678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFIJQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217369/job/25720604709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFJUA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217372/job/25720605008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFJAg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217554/job/25720604930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFITg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217372/job/25720604750"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFGcw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217369/job/25720604275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFKGg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217372/job/25720605210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFJLQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217369/job/25720604973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFFxA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217369/job/25720604100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFHVA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217372/job/25720604500"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RG1VQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217369/job/25720632661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFK2A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346217372/job/25720605400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RFYVg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720608854"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "db45d3219611546c2e638ef05621614d8f03bd9e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-03T07:43:13Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF8dA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346222063/job/25720618100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF5nA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221928/job/25720617372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF6lg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221931/job/25720617622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF9Qw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346222061/job/25720618307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF8Lw",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221931/job/25720618031"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF6kQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221928/job/25720617617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF8Ug",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346222061/job/25720618066"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF9TQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221928/job/25720618317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF7YQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221931/job/25720617825"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF7dg",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221928/job/25720617846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF9EQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221931/job/25720618257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF55Q",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221931/job/25720617445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF8fA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221928/job/25720618108"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RHqmw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221931/job/25720646299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RF96g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346221928/job/25720618474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGN3w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720622559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGMRg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "59fd3bb987b93a2887fe53fb0e85fd8b112727ae",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-03T07:43:33Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGpnQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225680/job/25720629661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGnaA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225491/job/25720629096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGo2w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225495/job/25720629467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGqnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225684/job/25720629919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGrTg",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225495/job/25720630094"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGosw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225491/job/25720629427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGpnA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225684/job/25720629660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGrog",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225491/job/25720630178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGqUA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225495/job/25720629840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGpgA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225491/job/25720629632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGsJw",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225495/job/25720630311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGn6Q",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225495/job/25720629225"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGqnA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225491/job/25720629916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIvug",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225495/job/25720663994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RGsjQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346225491/job/25720630413"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RHAlA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720635540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RHYLQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "01411ac95cb841201bcb642e0776c7dc8ee16d44",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-03T07:44:10Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIBNQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346233131/job/25720652085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RH_Dw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232977/job/25720651535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIAEg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232978/job/25720651794"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RICfA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346233128/job/25720652412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RICcA",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232978/job/25720652400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIB_A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232977/job/25720652284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIBOw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346233128/job/25720652091"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIAPQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232977/job/25720651837"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIBIQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232978/job/25720652065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIDIQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232977/job/25720652577"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIDbQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232978/job/25720652653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RH-rQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232978/job/25720651437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIEFQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232977/job/25720652821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RJyJg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232978/job/25720680998"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIFAg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346232977/job/25720653058"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RITyA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720656840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RIgmQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f6e04058d5097d1b17b5a426472ec1f8be055664",
                "additions": 1,
                "deletions": 4,
                "committedDate": "2024-06-03T07:44:34Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI4Dg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237464/job/25720666126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI3Tw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237318/job/25720665935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI3zQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237315/job/25720666061"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI5NQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237467/job/25720666421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI6DA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237318/job/25720666636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI6AQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237315/job/25720666625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI4HA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237467/job/25720666140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI4tA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237318/job/25720666292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI1vA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237315/job/25720665532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI7AQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237318/job/25720666881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI5HQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237315/job/25720666397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI24A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237315/job/25720665824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI2Qw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237318/job/25720665667"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RI8FQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237318/job/25720667157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RL46A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346237315/job/25720715496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RJMCw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720671243"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RJm6A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "674704984d9a5c6b6d79e4d614c2ae09116a74fc",
                "additions": 4,
                "deletions": 9,
                "committedDate": "2024-06-03T07:45:46Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RwkOw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346449934/job/25721316411"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rwipg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346449936/job/25721316006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLnLg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251402/job/25720710958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLkRw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251283/job/25720710215"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLk4A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251287/job/25720710368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLncA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251409/job/25720711024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rwi_Q",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346449934/job/25721316093"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLldA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251283/job/25720710516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLnBA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251287/job/25720710916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLoXw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251409/job/25720711263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLmzw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251283/job/25720710863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLl7Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251287/job/25720710637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLoDA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251283/job/25720711180"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLozg",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251287/job/25720711374"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLn9Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251287/job/25720711157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLpuA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251283/job/25720711608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RLrDg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251283/job/25720711950"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RQFyg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346251287/job/25720784330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RL5eQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25720715641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RMm5Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b3589b423e66ffefaf268b308633275ae46b6129",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2024-06-03T07:56:35Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e5f20e57ff9ccb2938f5dd30dff467f07b486fe9",
                "additions": 3,
                "deletions": 19,
                "committedDate": "2024-06-03T08:01:20Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw54A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451889/job/25721321952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw2fA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451525/job/25721321084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw4UQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451531/job/25721321553"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw6uw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451897/job/25721322171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw4-Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451525/job/25721321721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw6ew",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451531/job/25721322107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw75A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451897/job/25721322468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw7PQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451525/job/25721322301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw5VQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451531/job/25721321813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw34w",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451525/job/25721321443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw7nA",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451531/job/25721322396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw2_A",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451531/job/25721321212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw6Hg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451525/job/25721322014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_SDMOA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451531/job/25721621560"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rw8jA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346451525/job/25721322636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_RxSTA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25721328204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Rx-RQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "16c8ff032f88c6e6d049033b0d67d49fbde54048",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-03T08:03:00Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0dag",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470845/job/25721380202"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0dJA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470783/job/25721380132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0dDQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470786/job/25721380109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0d_A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470846/job/25721380348"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0enQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470783/job/25721380509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0fgg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470786/job/25721380738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0fJQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470846/job/25721380645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0bug",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470783/job/25721379770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0egA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470786/job/25721380480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0foQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470783/job/25721380769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0gUA",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470786/job/25721380944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0bzw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470786/job/25721379791"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0glw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470783/job/25721381015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0hwQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470783/job/25721381313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_SYBsg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9346470786/job/25721962930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R0wTA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25721385036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_R1ufA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "264fe7dec4ecaeadb92bf9a4274edd91385a7de6",
                "additions": 16,
                "deletions": 13,
                "committedDate": "2024-06-03T09:02:56Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d9999bc09ab5dd8dd38e30a506d0e308d9f00534",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-06-03T09:04:09Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UpIRA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347404607/job/25724340292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UrOgQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347416006/job/25724374657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UpGxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347404606/job/25724339908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UrNIA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347416012/job/25724374304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdEAA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340667/job/25724142592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Uc-vA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340294/job/25724141244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdAWg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340293/job/25724141658"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdFnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340670/job/25724143007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UpG3w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347404607/job/25724339935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UrNLw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347416006/job/25724374319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdCVg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340294/job/25724142166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdDRg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340293/job/25724142406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdEbw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340670/job/25724142703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdAAA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340294/job/25724141568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdBxg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340293/job/25724142022"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdDZQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340294/job/25724142437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdEXw",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340293/job/25724142687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdBKw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340294/job/25724141867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Uc_Jg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340293/job/25724141350"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_UdFHg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340294/job/25724142878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_VB2jA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9347340293/job/25724745356"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Udemw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25724149403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Ueveg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "63b9b3fdbd1ebe41aafae5c16b840cda17f2aea8",
                "additions": 6,
                "deletions": 21,
                "committedDate": "2024-06-03T09:56:11Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Wqs7g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080659/job/25726463214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqjxA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080002/job/25726460868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqlJg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080004/job/25726461222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WquLQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080658/job/25726463533"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqmNQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080002/job/25726461493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqnpA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080004/job/25726461860"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Wqs4g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080658/job/25726463202"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqnRg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080002/job/25726461766"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqmdQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080004/job/25726461557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Wqk5w",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080002/job/25726461159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_Wqoxg",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080004/job/25726462150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqkJw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080004/job/25726460967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqoiQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080002/job/25726462089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_XEyvQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080004/job/25726890685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WqpiA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348080002/job/25726462344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WrByg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25726468554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_WsC0w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "0d1019a572c976eecab2de2fd1ac81de9a7fb270",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-06-03T10:00:37Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_i8XHw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352078440/job/25739335455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_i8RgA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352078384/job/25739334016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_i8T0Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352078445/job/25739334609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2NYg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143542/job/25726651746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2HBg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143095/job/25726650118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2GtA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143099/job/25726650036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2OTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143537/job/25726651980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_i8S7w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352078440/job/25739334383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2LGw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143095/job/25726651163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2Jhw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143099/job/25726650759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2NPg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143537/job/25726651710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2ICA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143095/job/25726650376"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2Krw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143099/job/25726651055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2M1g",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143095/job/25726651606"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2Lug",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143099/job/25726651322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2JvQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143095/job/25726650813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2H7A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143099/job/25726650348"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2OlA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143095/job/25726652052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_XZYZQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9348143099/job/25727228005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W2oeQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25726658681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_W301w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "bc6afc6fc63ba5405eb0a150f0c9d64e8b07656e",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2024-06-03T14:32:31Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEBSw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115503/job/25739460939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jD9Pg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115205/job/25739459902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jD_fA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115203/job/25739460476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEBOg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115500/job/25739460922"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jD-8g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115205/job/25739460338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEC7w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115203/job/25739461359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEC_Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115500/job/25739461373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEBFw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115205/job/25739460887"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEBMQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115203/job/25739460913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEDCw",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115205/job/25739461387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEELQ",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115203/job/25739461677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jD94Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115203/job/25739460065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEEmA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115205/job/25739461784"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEGMg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115205/job/25739462194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jI2fw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352115203/job/25739540095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jEejA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25739468428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jFolQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "0694a38bc42117aa57f8c55669a2f262d6dd67c0",
                "additions": 10,
                "deletions": 10,
                "committedDate": "2024-06-03T14:37:54Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3435f657ab6f740e698134dd2e4105f580fd2dd6",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2024-06-03T14:38:24Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jan3A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352222297/job/25739831260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jal6w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352222307/job/25739830763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZJzw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352216085/job/25739807183"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZCHA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215445/job/25739805212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZDhQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215443/job/25739805573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZKyg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352216081/job/25739807434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jamUA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352222297/job/25739830864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZH5g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215445/job/25739806694"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZHmA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215443/job/25739806616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZJiA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352216081/job/25739807112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZE3A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215445/job/25739805916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZB3g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215443/job/25739805150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZDlQ",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215445/job/25739805589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZE3Q",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215443/job/25739805917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZGbw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215445/job/25739806319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZGJw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215443/job/25739806247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZJUQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215445/job/25739807057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_kBTjQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9352215443/job/25740465037"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jZmxw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25739814599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF_jbstA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9734"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "298805dc2e610972c8d2920503c5b5c37074321a",
                "additions": 373,
                "deletions": 102,
                "committedDate": "2024-06-12T16:59:05Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig8BA",
                        "name": "build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486664121/job/26141539332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFrG-WQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9489396210/job/26150551129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGGB_jzw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9497600194/job/26174546895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGGCks8A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9497790073/job/26175155440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFrG8Qw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9489396211/job/26150550595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFrG8KA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9489396218/job/26150550568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGGB_iSw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9497600193/job/26174546507"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGGCkruA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9497790069/job/26175155128"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig8Ng",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486664124/job/26141539382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig2iA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663402/job/26141537928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig0lw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663399/job/26141537431"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig9Pw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486664120/job/26141539647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig3_w",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663399/job/26141538303"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFrG9aA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9489396210/job/26150550888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGGB_ikQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9497600194/job/26174546577"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGGCkr1Q",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9497790073/job/26175155157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig3vQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663402/job/26141538237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig8RQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486664120/job/26141539397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig1RA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663402/job/26141537604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig2wQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663399/job/26141537985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig5Tw",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663402/job/26141538639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig49Q",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663399/job/26141538549"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig1tw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663399/job/26141537719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFigz7g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663402/job/26141537262"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFig7QQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663402/job/26141539137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFi8q1w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9486663399/job/26141993687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFihUrg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26141545646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGFiiMAw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ccceb4d5a15d7b8ae551381215251c62813eca83",
                "additions": 18,
                "deletions": 19,
                "committedDate": "2024-06-12T17:04:08Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d2663c979dadc71a9495d0a9a161c7576a9cd988",
                "additions": 213,
                "deletions": 20,
                "committedDate": "2024-06-27T17:54:12Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TEWg",
                        "name": "build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701304015/job/26774651994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TFWA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701304029/job/26774652248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-S_rQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303420/job/26774650797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TAzQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303421/job/26774651085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TERg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701304018/job/26774651974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TC9Q",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303421/job/26774651637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TCzw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303420/job/26774651599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TFiw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701304018/job/26774652299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TBOQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303420/job/26774651193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TB9A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303421/job/26774651380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TFPA",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303420/job/26774652220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TD8Q",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303421/job/26774651889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-S_pw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303421/job/26774650791"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TD2g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303420/job/26774651866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-t0dQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303421/job/26775090293"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TGaQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701303420/job/26774652521"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-TVyw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26774656459"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-UMjQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9fa62dcd16c7d2ddf01b3510bbdb720d3e4809bc",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2024-06-27T17:57:00Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ff21379a505c86b73e5a9de3204355978a2b1c77",
                "additions": 51464,
                "deletions": 22321,
                "committedDate": "2024-06-27T17:57:37Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fU2g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364045/job/26774852826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fVAA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364037/job/26774852864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fXbg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364244/job/26774853486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fWdg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364238/job/26774853238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fUvw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364042/job/26774852799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fWiQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364244/job/26774853257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fXUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364238/job/26774853458"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fVnA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364042/job/26774853020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fY5w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364244/job/26774853863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fYJA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364238/job/26774853668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fZFQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364238/job/26774853909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fYGw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364244/job/26774853659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fZoQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364244/job/26774854049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-8FHw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701364238/job/26775323935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-fnaA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26774857576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO-geMg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "dfe3c7513b1404e6fd1855fb72e4f3c1a00dc421",
                "additions": 16,
                "deletions": 32,
                "committedDate": "2024-06-27T18:07:31Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "387e0d0be677e0620fc7131bd43ef0d450f308c7",
                "additions": 13,
                "deletions": 13,
                "committedDate": "2024-06-27T18:21:52Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGPqerVA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9716742354/job/26820979540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQJqwtg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9730493312/job/26853683382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGPqeqlg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9716742355/job/26820979350"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGPqeqjg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9716742358/job/26820979342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQJqv_w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9730493304/job/26853683199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQJqwog",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9730493315/job/26853683362"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZaVw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701669437/job/26775804503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_Za7w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701669440/job/26775804655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZUng",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668369/job/26775803038"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZR_A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668372/job/26775802364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZaeA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701669426/job/26775804536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGPqeshQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9716742354/job/26820979845"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQJqv9w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9730493312/job/26853683191"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZSaA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668369/job/26775802472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZT7Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668372/job/26775802861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_Zb0A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701669426/job/26775804880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZQvw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668369/job/26775802047"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZS3Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668372/job/26775802589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZTlg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668369/job/26775802774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZQ5Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668372/job/26775802085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZVlQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668369/job/26775803285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_zVaA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9701668372/job/26776229224"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_ZyQA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26775810624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGO_alIw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fab2002a9aa7ebbdfb366d13e745db13b19c9bd6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-30T13:41:17Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7dqg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732463007/job/26858151338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7dqw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732463008/job/26858151339"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7cjA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462858/job/26858151052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7cyA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462857/job/26858151112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7eEA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732463009/job/26858151440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7ddg",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462857/job/26858151286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7doA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462858/job/26858151328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7dwg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732463009/job/26858151362"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7dQw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462858/job/26858151235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7cew",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462857/job/26858151035"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7dIw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462857/job/26858151203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7c5A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462858/job/26858151140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN79BA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462857/job/26858159364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7eDQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732462858/job/26858151437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7jOA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26858152760"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "532b7f34d14dcd9ede13fd1f4ab30a21c964a751",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-30T13:41:33Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7piQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464158/job/26858154377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7paQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464156/job/26858154345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7o2w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464094/job/26858154203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7o4Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464092/job/26858154209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7pog",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464154/job/26858154402"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7pnQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464092/job/26858154397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7p4Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464094/job/26858154465"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7pWQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464154/job/26858154329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7pGw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464094/job/26858154267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7p4A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464092/job/26858154464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7pLw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464092/job/26858154287"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7pkQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464094/job/26858154385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8LRg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464092/job/26858163014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7qHQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732464094/job/26858154525"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7yNQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26858156597"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN7z2Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7421f1fe80f8291fa7e9668e2b3e4bc3eaafb936",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-06-30T13:41:54Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76_A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465964/job/26858158844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN767Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465966/job/26858158829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN75vw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465875/job/26858158527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76FA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465876/job/26858158612"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN77NA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465963/job/26858158900"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76nw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465875/job/26858158751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76jA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465876/job/26858158732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN767A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465963/job/26858158828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76Ew",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465875/job/26858158611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76VQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465876/job/26858158677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN751A",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465876/job/26858158548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN76WQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465875/job/26858158681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQOAWXQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465876/job/26858231389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN764w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732465875/job/26858158819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8A5Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26858160357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8Kuw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fd95ecd7dfcc3c59a8b9a24a0dbeedfbba39123c",
                "additions": 4,
                "deletions": 14,
                "committedDate": "2024-06-30T13:43:01Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nTw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470566/job/26858170191"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nRQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470567/job/26858170181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8mxw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470516/job/26858170055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8m9Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470512/job/26858170101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nqQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470568/job/26858170281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nZQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470516/job/26858170213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nmw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470512/job/26858170267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nbA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470568/job/26858170220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nAA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470516/job/26858170112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8nPA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470512/job/26858170172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8npg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470516/job/26858170278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8mrA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470512/job/26858170028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8n1w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470516/job/26858170327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQODoVA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9732470512/job/26858285140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN8rmQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26858171289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQN83Tw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3f69a423375549440670b417e5b01fb2264b7a76",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2024-06-30T22:49:18Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqYA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518534/job/26864822880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqZg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518537/job/26864822886"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSppQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518472/job/26864822693"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSp6g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518471/job/26864822762"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqng",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518533/job/26864822942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSp3w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518472/job/26864822751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqNw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518471/job/26864822839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqXQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518533/job/26864822877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqTw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518472/job/26864822863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqDA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518471/job/26864822796"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqEw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518472/job/26864822803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSptw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518471/job/26864822711"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSqkg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518472/job/26864822930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUYv2A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9735518471/job/26864922584"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUSvtg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26864824246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQUS8hg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "63226e8852cc45c430c835f819b4dbc060139126",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2024-06-30T22:58:42Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb47ea010b3496120e565f33081427da9bc4221e",
                "additions": 65,
                "deletions": 47,
                "committedDate": "2024-06-30T23:56:39Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0562c22a91ad00a8c647d97eeae6f4ae72674f10",
                "additions": 14,
                "deletions": 40,
                "committedDate": "2024-07-01T00:13:40Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7cb3707b0e57363ec52710693e65d7df0b22e5dd",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2024-07-01T00:20:07Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi0hQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736059181/job/26866136197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi0fA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736059193/job/26866136188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQViyUw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058869/job/26866135635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQViyUg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058866/job/26866135634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi1Gw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736059185/job/26866136347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVizBg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058869/job/26866135814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi0bQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058866/job/26866136173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi11Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736059185/job/26866136533"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi05Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058869/job/26866136293"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVizvw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058866/job/26866135999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQViz4A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058869/job/26866136032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQViy4g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058866/job/26866135778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVi1jw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058869/job/26866136463"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVyErA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9736058866/job/26866386092"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVjFMA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26866140464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGQVjkGQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6368935991aaa4a377399a974f6027da016c6b7f",
                "additions": 134,
                "deletions": 89,
                "committedDate": "2024-07-01T21:09:53Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRYDQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108798/job/26911987725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRYFA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108804/job/26911987732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRU0A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108372/job/26911986896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRXAg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108366/job/26911987458"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRYiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108813/job/26911987851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRVnw",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108366/job/26911987103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRXbg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108372/job/26911987566"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRZYQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108813/job/26911988065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRWfA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108372/job/26911987324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRUfw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108366/job/26911986815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRWYg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108366/job/26911987298"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRVsw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108372/job/26911987123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBf1cw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108366/job/26912224627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRYaw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751108372/job/26911987819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBRyUA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26911994448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBSjWQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6f0d71065b1fd96b50258efc5073e7cfc472876f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-07-01T21:11:26Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBY4jA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751149990/job/26912110732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBY3ng",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751149998/job/26912110494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUKhA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751124030/job/26912033412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUJ1Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751124029/job/26912033237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUHnQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123821/job/26912032669"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUIoQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123819/job/26912032929"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUJwQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751124031/job/26912033217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBY3gQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751149990/job/26912110465"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUJww",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123821/job/26912033219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUJnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123819/job/26912033183"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUK7g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751124031/job/26912033518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUIpw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123821/job/26912032935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUK9w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123819/job/26912033527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBULKA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123821/job/26912033576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUHkA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123819/job/26912032656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUMmg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123821/job/26912033946"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBq8XQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9751123819/job/26912406621"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBUd4A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26912038368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRBVMOA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "13c8c5738ba48ca8b1029da9ec67147bdc0b4dc6",
                "additions": 73,
                "deletions": 125,
                "committedDate": "2024-07-02T13:39:46Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSdJuUA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9782311349/job/27008331344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCp8eg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820319650/job/27114765434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDcKSw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820708962/job/27115588171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSdJsVw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9782311333/job/27008330839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSdJq3g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9782311351/job/27008330462"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCp8Qw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820319654/job/27114765379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCp8VA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820319656/job/27114765396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDcKXQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820708959/job/27115588189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDcKSA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820708961/job/27115588168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4kYg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762840685/job/26947232866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4kuA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762840680/job/26947232952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4aOQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839976/job/26947230265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4b3A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839973/job/26947230684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4lUQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762840679/job/26947233105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSdJrAA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9782311349/job/27008330496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCp8BA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820319650/job/27114765316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDcK5Q",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820708962/job/27115588325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4dMw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839976/job/26947231027"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4e1Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839973/job/26947231445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4j9A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762840679/job/26947232756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4bug",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839976/job/26947230650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4dNw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839973/job/26947231031"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4fFg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839976/job/26947231510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4aVw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839973/job/26947230295"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi4gjQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839976/job/26947231885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRjg16A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9762839973/job/26947892712"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi5nVA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26947250004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGRi6dpQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9f74760806e55e81eff3cd07c11c2cbcabec45ec",
                "additions": 6,
                "deletions": 12,
                "committedDate": "2024-07-07T13:04:34Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfPRg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531729/job/27130318662"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfO7Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531726/job/27130318573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfN1w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531619/job/27130318295"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfNxg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531623/job/27130318278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfPJg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531725/job/27130318630"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfO1g",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531623/job/27130318550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfPpw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531619/job/27130318759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfPrA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531725/job/27130318764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfO8A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531619/job/27130318576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfORg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531623/job/27130318406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfPuA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531623/job/27130318776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfOWQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531619/job/27130318425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgEjg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531623/job/27130332302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfQmA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827531619/job/27130319000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfX_Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130320893"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "550ec523820b17728bcebf37e9936422454cc9c3",
                "additions": 2,
                "deletions": 5,
                "committedDate": "2024-07-07T13:04:56Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfntg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534564/job/27130324918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfnTg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534554/job/27130324814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURflrA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534374/job/27130324396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfmwQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534373/job/27130324673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfoBA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534555/job/27130324996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfnkg",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534373/job/27130324882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfniQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534374/job/27130324873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfm6Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534555/job/27130324713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfoMg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534374/job/27130325042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURflRg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534373/job/27130324294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfl4g",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534373/job/27130324450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfmbQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534374/job/27130324589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgxDA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534373/job/27130343692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfosA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827534374/job/27130325168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfxxQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130327493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURfwCA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "944ced5a23ca1ed247c3d877020b2b27f043f05e",
                "additions": 2,
                "deletions": 12,
                "committedDate": "2024-07-07T13:05:32Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgVWA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539410/job/27130336600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgVYA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539409/job/27130336608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgUlQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539234/job/27130336405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgToA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539242/job/27130336160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgWBQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539406/job/27130336773"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgUxg",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539242/job/27130336454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgVhg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539234/job/27130336646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgVIg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539406/job/27130336546"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgTqQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539234/job/27130336169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgUQg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539242/job/27130336322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgV8w",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539242/job/27130336755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgWCw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539234/job/27130336779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhBrg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539242/job/27130347950"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgWmw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827539234/job/27130336923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURghWQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130339673"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9f7b55130c2501dfa1d55c59d1111ca7455a102d",
                "additions": 2,
                "deletions": 13,
                "committedDate": "2024-07-07T13:05:45Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURglVg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541174/job/27130340694"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURglWw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541181/job/27130340699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgjyA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541036/job/27130340296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgkMA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541033/job/27130340400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURglZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541179/job/27130340709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgk_Q",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541033/job/27130340605"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgkyA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541036/job/27130340552"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgl0A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541179/job/27130340816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgkNQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541036/job/27130340405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgklQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541033/job/27130340501"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgj2g",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541033/job/27130340314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURglTw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541036/job/27130340687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhVBQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541033/job/27130352901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURglwg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827541036/job/27130340802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURgwqA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130343592"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c58caead80f2f94155edb04ca2dee7328b18100d",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-07-07T13:05:59Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg2UQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542901/job/27130345041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg2dw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542900/job/27130345079"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg00A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542779/job/27130344656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg1KQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542784/job/27130344745"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg2VA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542904/job/27130345044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg25Q",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542784/job/27130345189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg1Zg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542779/job/27130344806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg20Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542904/job/27130345169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg2Nw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542779/job/27130345015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg2Ig",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542784/job/27130344994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg1vw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542784/job/27130344895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg1xg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542779/job/27130344902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhjCA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542784/job/27130356488"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg2yQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827542779/job/27130345161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg_1A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130347476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURg9FQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a7f3110c86ac7b7c398ee59b21e50ebe74d70c29",
                "additions": 4,
                "deletions": 33,
                "committedDate": "2024-07-07T13:06:12Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhFxA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544457/job/27130348996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhF4g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544467/job/27130349026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhFRg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544461/job/27130348870"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhGJw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544453/job/27130349095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhF2g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544455/job/27130349018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhHjQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544453/job/27130349453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhHAQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544461/job/27130349313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhFJg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544455/job/27130348838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhHng",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544461/job/27130349470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhGtQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544453/job/27130349237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhFQA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544453/job/27130348864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhGPg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544461/job/27130349118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhzJg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544453/job/27130360614"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhIKA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827544461/job/27130349608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhPtA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130351540"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "de5c3f5a907152d554c84a89ef5e2e0f5d9af02c",
                "additions": 5,
                "deletions": 21,
                "committedDate": "2024-07-07T13:06:26Z",
                "author": {
                  "name": "adomasbaliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSDgaQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827791615/job/27130912873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSDgZg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827791619/job/27130912870"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhWTw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546064/job/27130353231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhXCw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546065/job/27130353419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhVfA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546030/job/27130353020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhWLw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546031/job/27130353199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhWpw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546061/job/27130353319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSDguw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827791615/job/27130912955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhW8Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546030/job/27130353393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhXiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546031/job/27130353547"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhXkw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546061/job/27130353555"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhWCw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546030/job/27130353163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhW7w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546031/job/27130353391"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhXhQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546030/job/27130353541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhVsA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546031/job/27130353072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhYIA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546030/job/27130353696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURsZsw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827546031/job/27130534323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhe1A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130355412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGURhh6w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fbfce4a60cf72206b52bfb68fea3c5ff32c64a18",
                "additions": 1,
                "deletions": 9,
                "committedDate": "2024-07-07T13:36:03Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1998396bddbbd4d4d3c0bf0abc7ea5cc2b41953f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-07-07T13:52:47Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIwWw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829384/job/27130998875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIwUw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829381/job/27130998867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIuYw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829240/job/27130998371"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIupQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829241/job/27130998437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIwTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829380/job/27130998860"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIuoQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829240/job/27130998433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIu3w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829241/job/27130998495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIwew",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829380/job/27130998907"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIvGw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829240/job/27130998555"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIvIg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829241/job/27130998562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIu4g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829240/job/27130998498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIubw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829241/job/27130998383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSIvRA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829240/job/27130998596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSQHsQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827829241/job/27131119537"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSI0Xg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27130999902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSJE3A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1362be32793186c9dee6f82fb76ed20cea37b985",
                "additions": 4,
                "deletions": 6,
                "committedDate": "2024-07-07T13:57:50Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "980da2ada28c35df29b62fff24aff392c0f0a259",
                "additions": 10,
                "deletions": 11,
                "committedDate": "2024-07-07T14:06:04Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4a55d09d5955296353fdeeb667ece97e74341cf5",
                "additions": 7,
                "deletions": 10,
                "committedDate": "2024-07-07T14:13:12Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "186ceea9cc35f15fe7d6f88ceb13aafaaca0a21d",
                "additions": 0,
                "deletions": 33,
                "committedDate": "2024-07-07T14:15:05Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cd51034a737474b2debb4d83933eeccb5a9fd04d",
                "additions": 4,
                "deletions": 9,
                "committedDate": "2024-07-07T14:17:39Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUXyIwg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830575627/job/27136919746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUXyIaQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830575631/job/27136919657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdhZQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988925/job/27131339109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdhWQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988926/job/27131339097"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdf7Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988656/job/27131338733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdgPw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988648/job/27131338815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdhag",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988930/job/27131339114"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUXyIgA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830575627/job/27136919680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdgPg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988656/job/27131338814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdg0g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988648/job/27131338962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdhvg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988930/job/27131339198"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdg1Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988656/job/27131338965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdgfQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988648/job/27131338877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdggA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988656/job/27131338880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdf9A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988648/job/27131338740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdhHA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988656/job/27131339036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSnRvg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827988648/job/27131498942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdnyQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27131340745"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUSdtHQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "959a8f9ae9f81872e79ff588ad411f6c71c3f4f0",
                "additions": 20,
                "deletions": 17,
                "committedDate": "2024-07-07T22:09:45Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUai-qQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9831850981/job/27139817129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUai-Kw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9831850983/job/27139817003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX80yw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830654183/job/27137094859"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX807g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830654184/job/27137094894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8yvg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653913/job/27137094334"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8y8A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653917/job/27137094384"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX81Eg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830654185/job/27137094930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUai-Pg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9831850981/job/27139817022"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8zyg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653913/job/27137094602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8zlA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653917/job/27137094548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX81XQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830654185/job/27137095005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8zGQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653913/job/27137094425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8zSg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653917/job/27137094474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8zfA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653913/job/27137094524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8ykA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653917/job/27137094288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX80Lw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653913/job/27137094703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUYKyoA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9830653917/job/27137323680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX8_Xw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27137097567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUX9TBQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6809828028bb8941c0653809a1b1f7ad4b31d124",
                "additions": 14,
                "deletions": 30,
                "committedDate": "2024-07-08T07:51:32Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9S_Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835641000/job/27149685501"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVMxQzQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9849192401/job/27192479949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVdGdMw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9855196641/job/27209604403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGV7PK0A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9865048757/job/27241204432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9SKg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835640999/job/27149685290"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVMxPRA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9849192399/job/27192479556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVMxPog",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9849192410/job/27192479650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVdGamQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9855196624/job/27209603737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVdGa3Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9855196638/job/27209603805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGV7PKSg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9865048758/job/27241204298"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9E5Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835640122/job/27149681893"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9E9A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835640123/job/27149681908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj89qA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639568/job/27149680040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj8-KQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639565/job/27149680169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9FKQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835640124/job/27149681961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9SCQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835641000/job/27149685257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVMxPeA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9849192401/job/27192479608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVdGb9w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9855196641/job/27209604087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGV7PKKg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9865048757/job/27241204266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj8_ZA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639568/job/27149680484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj8_Bg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639565/job/27149680390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9GBQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835640124/job/27149682181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9AKQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639568/job/27149680681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9AjA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639565/job/27149680780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj8-pA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639568/job/27149680292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj8_yw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639565/job/27149680587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9BHg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639568/job/27149680926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUkXUmg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9835639565/job/27150111898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj9YoA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27149686944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUj-PBw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c538462d43f0cde033c5e28bc9577b9d9e61f1aa",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2024-07-09T21:48:04Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0cbffa922307d81a84cdde6dc0bc5baf66cb15fc",
                "additions": 4,
                "deletions": 8,
                "committedDate": "2024-07-09T21:50:10Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6a05dca4e841ecb81ab910bbae122c18fd6550bb",
                "additions": 13,
                "deletions": 14,
                "committedDate": "2024-07-09T22:49:22Z",
                "author": {
                  "name": "Adomas Baliuka",
                  "email": "52975890+adomasbaliuka@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2024-01-14T02:23:22Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/BinaryEntropy.lean",
              "additions": 449,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/Deriv.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/NegMulLog.lean",
              "additions": 8,
              "deletions": 1
            }
          ]
        },
        "headRefName": "adomas_binary_entropy",
        "headRefOid": "ef058a96090323072b3782aef961fe353984c214",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5kA7x6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c58uTG6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-02T17:12:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Fw4PH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-18T01:13:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FrC00",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-16T12:55:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wYoSv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-16T16:07:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FrA1N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-08-16T12:52:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5EEB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:06:14Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 9734,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5v5BCe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:02:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5CFl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:03:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5Cs0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:04:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5DBH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:04:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5Dfk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:05:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5D2_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:06:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v5EEB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-02-13T09:06:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v8TYv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-13T14:20:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v8fBl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-13T14:38:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v8u8R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-13T15:01:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v_AVU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-13T19:46:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wDUeg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-14T10:35:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wDck8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-14T10:48:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wENmi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-14T12:26:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wESrZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-14T12:38:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wFoof",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-14T14:58:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wFoyI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-14T14:58:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wRk-7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-02-15T19:27:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wYoSv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-16T16:07:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c55lJ5B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-05-05T19:50:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c55lJ9h",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-05-05T19:52:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58tBRz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-01T21:16:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58uTG6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-02T17:12:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58ujcc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-06-02T17:54:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58uk4k",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-02T18:00:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58uwFu",
              "body": "This is globally in pretty good shape, thanks for putting in the work! I have a first round of fairly minor comments on the beginning of the file, and I haven't looked at the parts with \"todos\" yet.",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-06-03T01:11:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58wOWM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-03T07:41:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58wYhd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-03T08:01:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58xJ7w",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-03T09:08:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58xKU0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-03T09:09:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c58z_S0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-06-03T14:30:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c580RIU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-03T14:39:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5-A6vU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-06-12T20:37:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5-FX81",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-06-13T09:59:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5-FeuU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-06-13T10:11:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ACzaD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-06-28T17:53:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6AJgZJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-06-30T08:06:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ASOTG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-01T21:13:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6AkEO1",
              "body": "Very nice, looks like it's coming along nicely! I have a first batch of comments, and I'll have a look at the rest of the file later.",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-07-03T17:27:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A1oiA",
              "body": "I just finished going through the file and have only a few more comments. Once all these are implemented, I think it will be pretty much ready to merge, it's in very good shape now!",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-07-06T15:29:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A1qo3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-07-06T16:42:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A229P",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-07T13:45:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A3G-L",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-07T21:57:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A3bu9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-07-08T01:07:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A5bu_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-08T07:51:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6BBaDF",
              "body": "Indeed I had skipped the `NegMulLog.lean` file, sorry! Here are my comments about that one.",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-07-09T01:00:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6BFykn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-09T10:15:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6BMyyl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-09T22:26:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6BM8tn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-09T23:07:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6BNFjd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-07-09T23:41:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FAWrf",
              "body": "Very nice! I just have one last golf and some cosmetic comments, but we're ε away from merging now.",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-10T15:18:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBUka",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-10T23:51:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBWlf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-11T01:33:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBWoR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-11T01:36:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBWpW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-11T01:36:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBZds",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-11T04:36:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBZvg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-11T04:51:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBjOV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-11T09:25:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBjPq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-11T09:25:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBjXL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-11T09:28:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBjaf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-11T09:30:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBsPy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-11T13:01:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBsRS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-11T13:01:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBsiz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-11T13:07:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FBv1B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-11T14:23:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FB29S",
              "body": "I'm happy with this version, I think we can merge if Yaël is also happy with it. Thanks again for bearing with us!",
              "state": "APPROVED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-11T16:55:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FFxld",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-12T13:03:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FGFn7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T13:06:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FGGdJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-12T13:08:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FGGsZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T13:08:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FGsfj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-12T13:59:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FGtFi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-12T14:00:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FGtn6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-12T14:00:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FHGQp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-12T14:31:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FJphN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T19:53:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FJp3v",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T19:54:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FJsuE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T20:01:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FJsx2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T20:02:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FJtjj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-12T20:04:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FNdfg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-13T08:38:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FQ9ah",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-13T14:59:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FQ-Nh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-13T15:00:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FlaOl",
              "body": "Now looks good enough to me\r\n\r\nmaintainer merge ",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-15T19:31:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FrA1N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-08-16T12:52:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FrC00",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-16T12:55:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FrEIY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-16T12:58:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Frni-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-16T14:08:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FwfUB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-17T10:24:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FwfZp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-17T10:28:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FwzaE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-17T22:53:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Fw0Ws",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomasbaliuka"
              },
              "submittedAt": "2024-08-17T23:39:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Fw4PH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-18T01:13:39Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqIUA",
                    "body": "`one` in the name, not `1`",
                    "createdAt": "2024-02-13T09:02:35Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqIs4",
                    "body": "Should be a longer name, e.g. `shannonEntropy`, or perhaps `Entropy.shannon` is okay. Although maybe that should be reserved for the entropy of something more general.\r\n\r\nIn any case, `h\\_2` is not okay as a definition name, I think.",
                    "createdAt": "2024-02-13T09:03:50Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsD9Z",
                    "body": "Hopefully Mathlib will one day define Shannon entropy of arbitrary discrete probability distributions. I would not use that name here. So I guess you would suggest to call it `Entropy.binaryEntropy` or something like that? I thought `Entropy.h\\_2` might be OK given the namespace.",
                    "createdAt": "2024-02-13T14:20:52Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqI8b",
                    "body": "`0 = .` is weird, should be the other way round.",
                    "createdAt": "2024-02-13T09:04:35Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqJEt",
                    "body": "Just `of_lt_half`, no need for `_p` in there.",
                    "createdAt": "2024-02-13T09:04:58Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqJSH",
                    "body": "Use\r\n```\r\n/-! ### Derivatives -/\r\n```",
                    "createdAt": "2024-02-13T09:05:33Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqJaw",
                    "body": "Rename.",
                    "createdAt": "2024-02-13T09:06:00Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsL2T",
                    "body": "Do you mean the lemma or the `have`? Assuming you mean the lemma: why rename it? Of course it has to be renamed once `h\\_2` is renamed. For now, the pattern overall matches e.g. `Real.hasDerivAt_log`.",
                    "createdAt": "2024-02-13T14:38:54Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YqJe-",
                    "body": "Does `fun_prop` help in here?",
                    "createdAt": "2024-02-13T09:06:14Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsXsn",
                    "body": "I don't know how to use `fun_prop`. Seems like a very recent addition (It's not even in [\"the tactics list\"](https://github.com/haruhisa-enomoto/mathlib4-all-tactics)).\r\n\r\nI tried to stick it into various places (had to  rebase on origin/main to access it) but to no avail so far.",
                    "createdAt": "2024-02-13T15:01:51Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YuJ2b",
                    "body": "I think it should be doable, just `import Mathlib.Tactic.FunProp.Differentiable` and the try the proof with `fun_prop (disch:=aesop)`.",
                    "createdAt": "2024-02-13T19:46:53Z",
                    "author": {
                      "login": "lecopivo"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YxDpF",
                    "body": "Now it works in some cases where I can replace *one* individual `apply X` or `exact X` by `fun_prop (disch:=aesop)`. I haven't been able to use it to replace more than one line. Is it still worth using? It might make the proof brittle when `fun_prop` or `aesop` are updated in the future. Basically, this problem is analogous to \"non-terminal simp\"?\r\n\r\nMy file has a lot of divisions by `log 2` (binary logarithms) which is bad for the automated tooling (because it needs to know `log 2 ≠ 0`). Maybe I should have done base-e logs instead. On the other hand, I prefer measuring entropy in bits and don't want to make this decision just based on pleasing the automation.",
                    "createdAt": "2024-02-14T10:35:42Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YxIce",
                    "body": "It should be just one call to `fun_prop`. I will give it a try if you update the branch to a mathlib version that has `fun_prop`.",
                    "createdAt": "2024-02-14T10:48:51Z",
                    "author": {
                      "login": "lecopivo"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YxkzX",
                    "body": "@lecopivo  Updated the branch.",
                    "createdAt": "2024-02-14T12:26:46Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YxoCm",
                    "body": "The failed CI is just \"unused import\" because I deleted my attempts at using `fun_prop`...",
                    "createdAt": "2024-02-14T12:38:27Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YycSk",
                    "body": "The proof can can be simplified to this:\r\n```\r\n lemma deriv_h₂' {x : ℝ} (h: x ≠ 0) (hh : x ≠ 1) :\r\n    deriv (fun p => -p * log₂ p - (1 - p) * log₂ (1 - p)) x = log₂ (1 - x) - log₂ x := by\r\n  simp [log₂, logb]\r\n  have : Real.log 2 ≠ 0 := by sorry\r\n  have : 1 - x ≠ 0 := by sorry\r\n  rw [deriv_sub (by fun_prop (disch:=assumption)) (by fun_prop (disch:=assumption)), deriv.neg]\r\n  simp_rw [mul_div]\r\n  rw [deriv_div_const, deriv_mul_log h, deriv_div_const]\r\n  simp_rw [mul_sub_right_distrib]\r\n  simp only [one_mul]\r\n  rw [deriv_sub (by fun_prop (disch:=assumption)) (by fun_prop (disch:=assumption)),\r\n      deriv_log_one_sub hh]\r\n  rw [deriv_mul (by fun_prop) (by fun_prop (disch:=assumption)), deriv_id'']\r\n  rw [deriv.log (by fun_prop (disch:=assumption))]\r\n  simp only [one_mul, deriv_one_minus]\r\n  field_simp\r\n  ring_nf\r\n  assumption\r\n\r\n```\r\n\r\nOnce I port `fun_trans` tactic the proof will become \r\n```\r\n  simp [log₂, logb]\r\n  have : Real.log 2 ≠ 0 := by sorry\r\n  have : 1 - x ≠ 0 := by sorry\r\n  fun_trans (disch:=assumption) \r\n  field_simp\r\n  ring_nf\r\n```",
                    "createdAt": "2024-02-14T14:58:09Z",
                    "author": {
                      "login": "lecopivo"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YycZA",
                    "body": "A useful strategy is to run `fun_prop (disch:=trace_state;sorry)`. \r\n\r\nThen you look at the info view see what was sorried to close the goal. Now you can add these statement to the local context and use `fun_prop (disch:=assumption)`",
                    "createdAt": "2024-02-14T14:58:21Z",
                    "author": {
                      "login": "lecopivo"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y5soX",
                    "body": "This is interesting. Feel free to push to the branch. I will not do any further work on this PR until b-mehta compares with their code.",
                    "createdAt": "2024-02-15T19:27:32Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y-KMB",
                    "body": "I will do that once I port `fun_trans` tactic and the proof will be just few lines.",
                    "createdAt": "2024-02-16T16:07:14Z",
                    "author": {
                      "login": "lecopivo"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ey43V",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  · simp_rw [← neg_mul_eq_neg_mul]\n```\n",
                    "createdAt": "2024-05-05T19:50:51Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ey43X",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  simp_rw [← neg_mul_eq_neg_mul]\n```\n",
                    "createdAt": "2024-05-05T19:50:51Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ey49i",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  simp_rw [← neg_mul_eq_neg_mul]\n```\n",
                    "createdAt": "2024-05-05T19:52:44Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gwVXX",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    deriv (fun p ↦ -p * p.log - (1 - p) * (1 - p).log) x = log (1 - x) - log x := by\n```\n",
                    "createdAt": "2024-06-01T21:16:05Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gxbqN",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    (hx : x < 1 - (↑q)⁻¹) :\n```\n",
                    "createdAt": "2024-06-02T17:12:56Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gxoP-",
                    "body": "Ouch. Doesn't `fun_prop` work here?",
                    "createdAt": "2024-06-02T17:54:16Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5gxpVl",
                    "body": "Simply `by fun_prop` does not work. lecopivo already pointed out some ways to shorten things using `fun_prop` but I haven't spent enough time on it to be able to do it yet.\r\n\r\nIn any case, right now my focus is getting the definitions and statements right. I'll try to make the proofs shorter next. ",
                    "createdAt": "2024-06-02T18:00:19Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx1T5",
                    "body": "```suggestion\r\nlemma binaryEntropy_eq : binaryEntropy = (fun p => -p * log p - (1 - p) * log (1 - p)) := by\r\n  have : (2 : ℝ) - 1 = 1 := by norm_num\r\n  ext\r\n  simp [binaryEntropy, qaryEntropy, this]\r\n```",
                    "createdAt": "2024-06-02T23:53:59Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx1eZ",
                    "body": "```suggestion\r\n@[simp] lemma qaryEntropy_zero {q : ℕ} : qaryEntropy q 0 = 0 := by\r\n  simp only [qaryEntropy, zero_mul, log_zero, mul_zero, sub_self, sub_zero, log_one]\r\n```\r\n`simp` can actually be used to unfold definitions like this.",
                    "createdAt": "2024-06-02T23:57:28Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx1-F",
                    "body": "```suggestion\r\n@[simp] lemma binaryEntropy_onehalf : binaryEntropy 2⁻¹ = log 2 := by\r\n  simp only [binaryEntropy_eq']\r\n  have : (1 : ℝ) - 2⁻¹ = 2⁻¹ := by norm_num\r\n  simp only [this, log_inv]\r\n  field_simp\r\n```\r\nWith tactics like `norm_num` used in the middle of a proof, it's a bit better to be more explicit about what we want them to do (especially since here it does a bit \"too much\" which then gets undone by the `simp` call right after).",
                    "createdAt": "2024-06-03T00:08:06Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx2Bq",
                    "body": "```suggestion\r\n/-- `binaryEntropy` is symmetric about 1/2, i.e., `binaryEntropy (1 - p) = binaryEntropy p` -/\r\n```",
                    "createdAt": "2024-06-03T00:08:53Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx2Hd",
                    "body": "```suggestion\r\n@[simp] lemma binaryEntropy_one_sub (p : ℝ) :\r\n    binaryEntropy (1 - p) = binaryEntropy p := by\r\n  simp only [binaryEntropy_eq', neg_sub, sub_sub_cancel, neg_mul]\r\n  ring\r\n```\r\nThe standard name we use for subtraction is `sub`, and the original name was backwards compared to the actual statement.",
                    "createdAt": "2024-06-03T00:10:12Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx2S2",
                    "body": "I don't think it really makes sense to have this namespaced, since `binaryEntropy` and `qaryEntropy` won't collide with anything else.",
                    "createdAt": "2024-06-03T00:12:56Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5gyw7w",
                    "body": "I heard there was a trend towards namespacing everything in Mathlib (which I would naively be in favor of). Is there some higher-level namespace this could/should go into? Something like `SpecialFunctions`?",
                    "createdAt": "2024-06-03T07:41:33Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5g1HT8",
                    "body": "There was some talk of namespacing *all* of mathlib for the sake of interoperability with other libraries, but that's a different story. The policy hasn't really changed: if there were a risk that `binaryEntropy` and `qaryEntropy` would have different meanings in different areas of math, then namespacing would definitely make sense. But I can't really see this happening here.",
                    "createdAt": "2024-06-03T14:14:40Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx3d1",
                    "body": "```suggestion\r\nprotected lemma nonneg_reallog_sub_one (n : ℕ) : 0 ≤ Real.log (n - 1) := by\r\n  have : n - (1 : ℝ) = (n - 1 : ℤ) := by norm_cast\r\n  rw [this]\r\n  exact Real.log_intCast_nonneg _\r\n```\r\nBut I would suggest not having this at all, and just inlining the proof wherever this is needed.",
                    "createdAt": "2024-06-03T00:33:51Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5gy3J4",
                    "body": "Thanks for the shortened proof. I inlined it.",
                    "createdAt": "2024-06-03T08:01:37Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx3l_",
                    "body": "It would be more natural to split this off as a separate lemma called `binaryEntropy_pos`, and then use it to prove the q-ary case.",
                    "createdAt": "2024-06-03T00:36:16Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5gzYth",
                    "body": "Done.",
                    "createdAt": "2024-06-03T09:09:11Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx3nI",
                    "body": "```suggestion\r\nlemma qaryEntropy_pos {q : ℕ} {p : ℝ} (pgt0 : 0 < p) (ple1 : p < 1) : 0 < qaryEntropy q p := by\r\n```\r\nThis is more in line with the naming conventions.",
                    "createdAt": "2024-06-03T00:36:39Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx3sV",
                    "body": "```suggestion\r\n/-- For probability `p < 0.5`, `binaryEntropy p < log 2`. -/\r\n```",
                    "createdAt": "2024-06-03T00:38:25Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx3to",
                    "body": "```suggestion\r\nlemma binaryEntropy_lt_log2_of_lt_half {p : ℝ} (pge0 : 0 ≤ p) (plehalf : p < 1/2) :\r\n    binaryEntropy p < log 2 := by\r\n```",
                    "createdAt": "2024-06-03T00:38:51Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5gzYdI",
                    "body": "Thanks a lot for the review! This name should be fixed now.",
                    "createdAt": "2024-06-03T09:08:25Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx3y3",
                    "body": "```suggestion\r\nlemma binaryEntropy_lt_log2_of_gt_log2 {p : ℝ} : 1/2 < p → p ≤ 1 → binaryEntropy p < log 2 := by\r\n  intros\r\n```",
                    "createdAt": "2024-06-03T00:39:59Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx32E",
                    "body": "```suggestion\r\nlemma binaryEntropy_eq_log2_iff_eq_half {p : ℝ} (pge0 : 0 ≤ p) (ple1 : p ≤ 1) :\r\n    binaryEntropy p = log 2 ↔ p = 1/2 := by\r\n```",
                    "createdAt": "2024-06-03T00:40:35Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx367",
                    "body": "```suggestion\r\nlemma binaryEntropy_le_log2 {p : ℝ} (pge0 : 0 ≤ p) (ple1 : p ≤ 1) :\r\n    binaryEntropy p ≤ log 2 := by\r\n```\r\nDebatable, but I think this looks a bit nicer.",
                    "createdAt": "2024-06-03T00:41:47Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx4oI",
                    "body": "```suggestion\r\nThis is due to definition of `Real.log` for negative numbers. -/\r\n@[fun_prop] lemma qaryEntropy_continuous {q : ℕ} : Continuous (qaryEntropy q) := by\r\n  refine Continuous.add ?_ (Continuous.neg ?_)\r\n  · exact Continuous.sub (by fun_prop) continuous_mul_log\r\n  · exact Continuous.comp continuous_mul_log (continuous_sub_left 1)\r\n```\r\nI golfed it quite a bit, but the main issue with the original proof is that it wasn't structured with a bullet point per goal (i.e. the first `apply Continuous.add` produced two goals and was not followed with the bullet points. I personally find it cleaner to use `refine` in this situation, but opinions differ.",
                    "createdAt": "2024-06-03T00:52:52Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5gx4u3",
                    "body": "```suggestion\r\n@[fun_prop] lemma binaryEntropy_continuous : Continuous binaryEntropy := qaryEntropy_continuous\r\n\r\n```",
                    "createdAt": "2024-06-03T00:54:36Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5g1JQ3",
                    "body": "```suggestion\r\n/-- The q-ary entropy function is continuous everywhere.\r\nThis is due to definition of `Real.log` for negative numbers. -/\r\n```\r\nThis isn't just extreme pickiness, there's actually a syntactic difference here: `/-- this -/` is the docstring of the lemma that follows, it's displayed in the documentation and in mouseovers in VSCode, whereas `/- this -/` is just a normal comment.",
                    "createdAt": "2024-06-03T14:20:08Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5g1R9D",
                    "body": "Thanks. Fixed all docstrings.",
                    "createdAt": "2024-06-03T14:39:19Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5g1OYf",
                    "body": "```suggestion\r\n  simp only [← neg_mul, ← binaryEntropy_eq']\r\n  exact binaryEntropy_pos pgt0 ple1\r\n```",
                    "createdAt": "2024-06-03T14:30:00Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hk22Q",
                    "body": "Are you meaning to use `private`",
                    "createdAt": "2024-06-12T20:36:17Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5hoPFS",
                    "body": "Maybe. What would you suggest? Using `private`? Or inlining the lemma? Or do I *have* to find a much shorter proof and eliminate the lemma completely?",
                    "createdAt": "2024-06-13T09:59:11Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5hoTG-",
                    "body": "I think using `private` is fine here",
                    "createdAt": "2024-06-13T10:11:51Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i4Dia",
                    "body": "```suggestion\r\nThis file assumes that entropy is measured in Nats, hence the use of natural logarithms.\r\nMost lemmas are also valid using a logarithm in a different base.\r\n```",
                    "createdAt": "2024-06-28T14:40:45Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i4-EE",
                    "body": "```suggestion\r\n# Properties of Shannon q-ary entropy and binary entropy functions\r\n\r\n```\r\nI think the parentheses look a bit weird in the title.",
                    "createdAt": "2024-06-28T17:37:35Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i5B_M",
                    "body": "```suggestion\r\n  refine DifferentiableAt.sub (DifferentiableAt.mul (by fun_prop) ?_)\r\n      (DifferentiableAt.mul (by fun_prop)\r\n        (DifferentiableAt.log (by fun_prop) (sub_ne_zero.mpr gne1.symm)))\r\n  exact DifferentiableAt.log differentiableAt_id' xne0\r\n```\r\nIt turns out that `fun_prop` can handle some of the smaller subgoals. Note that the original proof would have needed bullet points to separate subgoals.",
                    "createdAt": "2024-06-28T17:48:27Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i5Ccn",
                    "body": "```suggestion\r\n@[simp] lemma differentiableAt_log_const_neg {x c : ℝ} (h : x ≠ c) :\r\n    DifferentiableAt ℝ (fun p ↦ log (c - p)) x :=\r\nDifferentiableAt.log (by fun_prop) (sub_ne_zero.mpr h.symm)\r\n\r\n```\r\nThis can probably be inlined wherever it's used.",
                    "createdAt": "2024-06-28T17:50:29Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i5C7t",
                    "body": "At this point in the proof, there are 5 goals in the tactic state: many of them can be inlined, and the rest should be structured with bullet points. The same goes for the next lemma below.",
                    "createdAt": "2024-06-28T17:52:47Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i8xHQ",
                    "body": "```suggestion\r\n  p * log (q - 1) - p * log p - (1 - p) * log (1 - p)\r\n```",
                    "createdAt": "2024-06-30T08:04:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5i8xNF",
                    "body": "```suggestion\r\nlemma DifferentiableAt.add_iff_left (hg : DifferentiableAt 𝕜 g x) :\r\n    DifferentiableAt 𝕜 (fun y => f y + g y) x ↔ DifferentiableAt 𝕜 f x := by\r\n```\r\nand this will need to move to an earlier file",
                    "createdAt": "2024-06-30T08:06:31Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jCTZ3",
                    "body": "Changed these lemmas. \r\n\r\nGenerally, there's quite a few things to move to other files. Please comment on whether those lemmas *can* be moved and kept in Mathlib.",
                    "createdAt": "2024-07-01T21:13:36Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNhUl",
                    "body": "This can be proven by `positivity`, so you can just delete it.",
                    "createdAt": "2024-07-03T16:49:49Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNiUt",
                    "body": "This can be proven by just `rw [deriv_const_sub 1, deriv_id'']`, so you can inline it.",
                    "createdAt": "2024-07-03T16:53:46Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNkLl",
                    "body": "I think this one and the next could go in another file (`#find_home` says `Mathlib.Analysis.Calculus.FDeriv.Add` which seems like a good choice).",
                    "createdAt": "2024-07-03T17:00:58Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNkr-",
                    "body": "This feels a bit specific, I think inlining it would be a good option since it's only used once.",
                    "createdAt": "2024-07-03T17:03:03Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jaC73",
                    "body": "Is it specific? I would think it could come up often when trying to prove something is *not* differentiable, assuming, e.g., this junk value thing is worth doing. I would maybe rename it to `DifferentiableAt.iff_comp_mul_add`. It seems to me no less useful than `add_iff_left`.\r\n\r\nThere's also things like several variants of ``[intervalIntegral.mul_integral_comp_mul_add](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/SpecialFunctions/Integrals.html#intervalIntegral.mul_integral_comp_mul_add).",
                    "createdAt": "2024-07-07T21:57:20Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNlBa",
                    "body": "I think this one should be deleted, and the next one renamed to `differentiableAt_binaryEntropy`.",
                    "createdAt": "2024-07-03T17:04:32Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNq8v",
                    "body": "```suggestion\r\nlemma deriv_log_one_sub_at_1 : deriv (fun p ↦ log (1 - p)) 1 = 0 := by\r\n  have : ¬ DifferentiableAt ℝ (fun p ↦ log (1 - p)) 1 := by\r\n    by_contra h_contra\r\n    have h₁ : ¬ DifferentiableAt ℝ log 0 := by simp [Real.differentiableAt_log_iff]\r\n    have h₂ : DifferentiableAt ℝ log 0 := by\r\n      have : Real.log = (fun p ↦ log (1 - p)) ∘ (fun x => 1 - x) := by ext; simp\r\n      rw [this]\r\n      refine DifferentiableAt.comp _ ?_ (by fun_prop)\r\n      simp only [sub_zero, h_contra]\r\n    contradiction\r\n  exact deriv_zero_of_not_differentiableAt this\r\n```\r\nMaybe this is golfed enough to inline...?",
                    "createdAt": "2024-07-03T17:22:33Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNrIC",
                    "body": "```suggestion\r\nlemma deriv_log_one_sub {x : ℝ} : deriv (fun p ↦ log (1 - p)) x = -(1-x)⁻¹ := by\r\n  by_cases xis1 : x = 1\r\n  · simp only [xis1, sub_self, inv_zero, neg_zero, deriv_log_one_sub_at_1]\r\n  · rw [deriv.log]\r\n    field_simp [deriv_one_minus]\r\n    fun_prop\r\n    exact sub_ne_zero_of_ne fun a ↦ xis1 a.symm\r\n```\r\nSame here?",
                    "createdAt": "2024-07-03T17:23:06Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNrbQ",
                    "body": "What's the difference between this and the previous lemma?",
                    "createdAt": "2024-07-03T17:24:11Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jNrq7",
                    "body": "If it's just about unfolding the definition, I think we should just keep this and the next one about `binaryEntropy`.",
                    "createdAt": "2024-07-03T17:25:04Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jYjV8",
                    "body": "```suggestion\r\n  have : x < x + ε := lt_add_of_pos_right x epsPos\r\n  filter_upwards [Ioo_mem_nhdsWithin_Ioi' this] using h\r\n```\r\nAnd this is probably worth just inlining.",
                    "createdAt": "2024-07-06T15:12:48Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jZw2J",
                    "body": "I would have liked to have this lemma when starting out (and had a very cumbersome proof, as you saw).\r\n\r\nI think quite a few people starting to learn Mathlib don't \"think in filters\" at first and it's nice to have these lemmas that one can find using Loogle and then see how it's proved.",
                    "createdAt": "2024-07-07T13:45:45Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jaRFv",
                    "body": "Yes, I've definitely been there as well! I don't think having these lemmas in mathlib is the way to go however: the main reason we use filters in the first place is to avoid having lemmas for every conceivable kinds of limits; if we start, it will basically never end. So I think it's best to leave this to tutorials, see e.g. Chapter 9 of Mathematics in Lean.",
                    "createdAt": "2024-07-08T01:07:01Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jbgTt",
                    "body": "Inlined.",
                    "createdAt": "2024-07-08T07:51:45Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jYjWz",
                    "body": "```suggestion\r\n  have : x - ε < x := sub_lt_self x epsPos\r\n  filter_upwards [Ioo_mem_nhdsWithin_Iio' this] using h\r\n```\r\nSame thing here.",
                    "createdAt": "2024-07-06T15:13:33Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jYjqJ",
                    "body": "This is basically `Filter.tendsto_neg_atTop_iff`.",
                    "createdAt": "2024-07-06T15:23:30Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jYjzF",
                    "body": "```suggestion\r\n```\r\n`exact` will do the unfolding anyway.",
                    "createdAt": "2024-07-06T15:27:08Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jYl5a",
                    "body": "```suggestion\r\n  · have h₁ : (1 : ℝ) - (2 : ℝ)⁻¹ < 1 := by norm_num\r\n    filter_upwards [Ico_mem_nhdsWithin_Iio' h₁] with x hx\r\n    gcongr\r\n    exact hx.1\r\n```",
                    "createdAt": "2024-07-06T16:37:29Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jYmEr",
                    "body": "```suggestion\r\n  · have h₁ : (0 : ℝ) < 1 / 2 := by norm_num\r\n    filter_upwards [Ioc_mem_nhdsWithin_Ioi' h₁] with x hx\r\n    gcongr\r\n    have : x ≤ 1/2 := hx.2\r\n    linarith\r\n```",
                    "createdAt": "2024-07-06T16:41:56Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jgeyJ",
                    "body": "I think this one and the next should either be private or inlined (since they're both only used once).",
                    "createdAt": "2024-07-08T23:58:29Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jgmMZ",
                    "body": "This can be moved up to just below `hasDerivAt_mul_log` without changing anything. And from this, you can probably prove `lemma isLittleO_nhds_zero_id_deriv_mul_log : id =o[𝓝[>] 0] (deriv (fun x ↦ x * log x))` fairly directly, and then use that to prove non-differentiability faster.",
                    "createdAt": "2024-07-09T00:42:21Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jgpcv",
                    "body": "I think these could be generalized to something like\r\n```\r\nlemma not_continuousAt_of_tendsto {f : ℝ → ℝ} {l₁ l₂ : Filter ℝ} (x : ℝ)\r\n    (hf : Tendsto f l₁ l₂) [l₁.NeBot] (hl₁ : l₁ ≤ 𝓝 x) (hl₂ : l₂ ⊓ 𝓝 (f x) = ⊥) :\r\n    ¬ ContinuousAt f x := by sorry\r\n```\r\n(but properly generalized to more than just real functions). Or they could just be inlined since the proofs are quite short anyway. I think having the lemma would be nice, since it's a bit more discoverable than having to resort to lemmas about tendsto.",
                    "createdAt": "2024-07-09T00:59:30Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jnjJx",
                    "body": "Assuming I could prove that, not sure how to use this `not_continuousAt_of_tendsto`. For example, to specialize to my case, automation doesn't seem to do it and the best I could come up with is\r\n```lean4\r\nlemma not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop {f : ℝ → ℝ} {x : ℝ}\r\n    (hf : Tendsto f (𝓝[>] x) atTop) :\r\n    ¬ ContinuousAt f x := by\r\n  apply not_continuousAt_of_tendsto x hf nhdsWithin_le_nhds\r\n  apply inf_eq_bot_iff.mpr\r\n  use Set.Ioi (f x + 2)\r\n  constructor\r\n  · exact Ioi_mem_atTop (f x + 2)\r\n  · use Set.Ioo (f x - 1) (f x + 1)\r\n    constructor\r\n    · exact Ioo_mem_nhds (by linarith) (by linarith)\r\n    · rw [Set.Ioi_inter_Ioo]\r\n      simp only [max_lt_iff, add_lt_add_iff_left, Nat.not_ofNat_lt_one, false_and,\r\n        not_false_eq_true, Set.Ioo_eq_empty]\r\n```\r\n\r\nIdeally, one would need more lemmas (or something else?) such that `exact?` or `aesop` can prove this.",
                    "createdAt": "2024-07-09T22:26:35Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jnu2b",
                    "body": "As requested by Yael, this is now in a new PR https://github.com/leanprover-community/mathlib4/pull/14594",
                    "createdAt": "2024-07-09T23:41:46Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jjS4l",
                    "body": "Can you open a separate PR for these changes?",
                    "createdAt": "2024-07-09T10:08:41Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jnphX",
                    "body": "https://github.com/leanprover-community/mathlib4/pull/14593",
                    "createdAt": "2024-07-09T23:07:19Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jjT84",
                    "body": "Please open a separate PR for these changes",
                    "createdAt": "2024-07-09T10:10:31Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jjWEF",
                    "body": "Something like\r\n```suggestion\r\n    |min L R| < x := by\r\n  rw [abs_of_nonneg (le_min hL hR)]\r\n  exact min_lt_of_left Llx\r\n```\r\nDefinitely inline",
                    "createdAt": "2024-07-09T10:15:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mFRk1",
                    "body": "```suggestion\r\n        have h₁ : negMulLog = (fun p ↦ -(1 - p) * log (1 - p)) ∘ (fun x => 1 - x) := by\r\n          ext; simp [negMulLog]\r\n        have h₂ : DifferentiableAt ℝ negMulLog 0 := by\r\n          rw [h₁]\r\n          refine DifferentiableAt.comp _ ?_ (by fun_prop)\r\n          simpa only [neg_sub, differentiableAt_id', differentiableAt_const, DifferentiableAt.sub,\r\n            sub_zero] using notTrue\r\n        rw [differentiableAt_negMulLog_iff] at h₂\r\n        exact fun _ ↦ h₂ rfl\r\n```\r\nWith this, you can delete `iff_comp_mul_add` above.",
                    "createdAt": "2024-08-10T14:53:29Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mFSF8",
                    "body": "```suggestion\r\nlemma binaryEntropy_two_inv_add (p : ℝ) :\r\n    binaryEntropy (2⁻¹ + p) = binaryEntropy (2⁻¹ - p) := by\r\n```\r\nI searched around the docs a bit, and it seems like `2⁻¹` is usually referred to as `two_inv` in lemma names, `1 / 2` as `one_half` (and `half` by itself is the operation of dividing by two). Let's just go with that.",
                    "createdAt": "2024-08-10T15:11:18Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mFSH3",
                    "body": "```suggestion\r\n/-- For probability `p < 0.5`, `binaryEntropy p < log 2`. -/\r\nlemma binaryEntropy_lt_log2_of_lt_one_half {p : ℝ} (p_nonneg : 0 ≤ p) (p_lt : p < 1/2) :\r\n```",
                    "createdAt": "2024-08-10T15:12:24Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mFSMq",
                    "body": "```suggestion\r\nlemma binaryEntropy_pos {p : ℝ} (pgt0 : 0 < p) (plt1 : p < 1) : 0 < binaryEntropy p := by\r\n  simp only [binaryEntropy_eq']\r\n```",
                    "createdAt": "2024-08-10T15:15:22Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mFSNH",
                    "body": "```suggestion\r\nlemma qaryEntropy_pos {q : ℕ} {p : ℝ} (pgt0 : 0 < p) (plt1 : p < 1) : 0 < qaryEntropy q p := by\r\n  unfold qaryEntropy\r\n```",
                    "createdAt": "2024-08-10T15:15:33Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mFSP9",
                    "body": "```suggestion\r\nprivate lemma deriv_log_one_sub {x : ℝ} : deriv (fun p ↦ log (1 - p)) x = -(1 - x)⁻¹ := by\r\n```",
                    "createdAt": "2024-08-10T15:17:18Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF2AZ",
                    "body": ",\n```suggestion\nentropy, Shannon, binary, nit, nepit\n```\n",
                    "createdAt": "2024-08-10T23:33:42Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGB3f",
                    "body": "I'm pretty sure \"nat\" is *much* more common than those two (in fact, this is the first time I see \"nit\" and \"nepit\"...)",
                    "createdAt": "2024-08-11T01:33:00Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGCMl",
                    "body": "(On second thought, \"nat\" is probably a really bad search keyword for mathlib :-) )",
                    "createdAt": "2024-08-11T01:36:48Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF2ky",
                    "body": "```suggestion\nlemma binaryEntropy_apply (p : ℝ) : binaryEntropy p = -p * log p - (1 - p) * log (1 - p) := by\n```\n",
                    "createdAt": "2024-08-10T23:39:20Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGX4q",
                    "body": "What's the logic behind calling this \"apply\"?",
                    "createdAt": "2024-08-11T09:25:17Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF2p3",
                    "body": "```suggestion\n@[simp] lemma binaryEntropy_half : binaryEntropy 2⁻¹ = log 2 := by\n```\n",
                    "createdAt": "2024-08-10T23:39:59Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGCIh",
                    "body": "In my earlier review, I said that a quick doc search revealed that `half` was mostly (only?) used for division by two (i.e. `x / 2`), `one_half` for `1 / 2` (see e.g. `one_half_lt_one`, and `two_inv` for `2⁻¹`. Shall we go with that convention?",
                    "createdAt": "2024-08-11T01:36:06Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGN6l",
                    "body": "I guess that's a fine convention. I would like to point out that we probably don't want `1 / 2` as we have eliminated almost all uses of `1 / x` in favour of `x⁻¹`.",
                    "createdAt": "2024-08-11T04:36:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGX6Y",
                    "body": "So what name should it use?",
                    "createdAt": "2024-08-11T09:25:46Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGgq7",
                    "body": "That would be `binaryEntropy_two_inv`",
                    "createdAt": "2024-08-11T13:01:10Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF24b",
                    "body": "Did you mean for this to be a docstring?",
                    "createdAt": "2024-08-10T23:42:07Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGYCi",
                    "body": "Yes. I'm sure it could be improved. As a beginner, I tend to think it important to point out in docstrings how \"junk values\" behave and where things work differently than what you would see in normal maths.",
                    "createdAt": "2024-08-11T09:28:51Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGgse",
                    "body": "I think the point is that if it's a doctring, it should start with two dashes.",
                    "createdAt": "2024-08-11T13:01:38Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGkSB",
                    "body": "Thanks, done.",
                    "createdAt": "2024-08-11T14:23:49Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF2-Y",
                    "body": "```suggestion\nlemma binaryEntropy_eq_zero {p : ℝ} : binaryEntropy p = 0 ↔ p = 0 ∨ p = 1 := by\n```\nThe `iff` is inferred and the RHS is obvious enough",
                    "createdAt": "2024-08-10T23:43:07Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF3W0",
                    "body": "No point indenting the main part of a proof. Also please use `obtain` along with `rfl` and `eq_or_ne` for shorter proofs which are still readable.\n```suggestion\n    · by_cases pgt1 : p > 1\n      · linarith [binaryEntropy_neg_of_gt_one pgt1]\n      obtain rfl | pz := eq_or_ne p 0\n      · simp\n      obtain rfl | pone := eq_or_ne p 1\n      · simp\n      have : 0 < binaryEntropy p := by\n        apply binaryEntropy_pos (pz.lt_of_le (le_of_not_lt plt0))\n        exact pone.lt_of_le (le_of_not_lt pgt1)\n      linarith\n```\n",
                    "createdAt": "2024-08-10T23:47:18Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGORG",
                    "body": "In fact, you are doing way too much work with the order disjunctions here. Here is a shorter proof\r\n```suggestion\r\n  · contrapose! h\r\n    obtain hp₀ | hp₀ := h.1.lt_or_lt\r\n    · exact (binaryEntropy_neg_of_neg hp₀).ne\r\n    obtain hp₁ | hp₁ := h.2.lt_or_lt.symm\r\n    · exact (binaryEntropy_neg_of_gt_one hp₁).ne\r\n    · exact (binaryEntropy_pos hp₀ hp₁).ne'\r\n```",
                    "createdAt": "2024-08-11T04:51:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGYFt",
                    "body": "Is that a change?",
                    "createdAt": "2024-08-11T09:30:10Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mGg8R",
                    "body": "Whoop sorry, not sure what happened there",
                    "createdAt": "2024-08-11T13:07:46Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mF3s-",
                    "body": "```suggestion\n/-- Qary entropy is strictly increasing in the interval [0, 1 - q⁻¹]. -/\n```\n",
                    "createdAt": "2024-08-10T23:50:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJKrJ",
                    "body": "I would just like some comment on the name of this file given that it's now about q-ary entropy.",
                    "createdAt": "2024-08-12T12:37:47Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJYSa",
                    "body": "Since binary entropy is a much more well-known concept, I think it would make sense to keep the current name. What do you think @dupuisf  ?",
                    "createdAt": "2024-08-12T13:06:53Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJYy1",
                    "body": "Okay, and what about `BinEntropy` the file vs `binaryEntropy` the declaration? (if you ask for my opinion, I will say that `binEntropy` is fine/better as a declaration name)",
                    "createdAt": "2024-08-12T13:08:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJw7w",
                    "body": "I think it's ok to name the file after binary entropy, it is indeed much better known. I have no strong opinion on `binEntropy` vs `binaryEntropy`.",
                    "createdAt": "2024-08-12T13:59:05Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mLkCe",
                    "body": "I renamed the file to `BinaryEntropy.lean` (no reason not to be explicit in the file name, which is typed rarely).\r\nI'm not sure about `binEntropy` vs `binaryEntropy`. Have a small tendency towards the more explicit version (current name) but if @YaelDillies thinks it's more idiomatic to shorten it then let's shorten.\r\n\r\nI renamed `binaryEntropy` to `binEntropy`.",
                    "createdAt": "2024-08-12T20:04:05Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJN7_",
                    "body": "```suggestion\r\nwith possible outcomes `{1, ..., q}`, where outcome `1` has probability `1 - p`\r\n```",
                    "createdAt": "2024-08-12T12:42:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJOMe",
                    "body": "```suggestion\r\nwhere outcome `1` has probability `1 - p` and all other outcomes are equally likely.\r\n```",
                    "createdAt": "2024-08-12T12:43:07Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJPKd",
                    "body": "I somewhat suspect we want `qaryEntropy` and `binEntropy` to be in the `Real` namespace since they are real-valued. Indeed I suspect that we might want nnreal-valued versionq in the future, whose names would then be `NNReal.qaryEntropy` and `NNReal.binEntropy`",
                    "createdAt": "2024-08-12T12:44:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJxRb",
                    "body": "Yeah, that makes sense; most other functions are already like this, like `Real.log`, `Real.rpow`, etc.",
                    "createdAt": "2024-08-12T14:00:01Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mLjgw",
                    "body": "I put everything in `namespace Real`.",
                    "createdAt": "2024-08-12T20:01:56Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJR0v",
                    "body": "What's the use case for this unapplied lemma?",
                    "createdAt": "2024-08-12T12:50:33Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJY9R",
                    "body": "It shows that the difference between them is a linear term... I guess we could also remove it but I did put it in on purpose",
                    "createdAt": "2024-08-12T13:08:47Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mKAeE",
                    "body": "I indeed doubt anyone will use it. If you really want to state that the difference between them is a linear term, then I would suggest you write that term as the coercion to function of some `LinearMap`.\r\n\r\nBut really I want to say \"Let's not have this lemma until someone needs it, as they will know best what spelling they want\".",
                    "createdAt": "2024-08-12T14:31:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mLhrw",
                    "body": "Removed both `qaryEntropy_eq_log_mul_add_binaryEntropy` and `qaryEntropy_eq_log_mul_add_binaryEntropy'`",
                    "createdAt": "2024-08-12T19:54:32Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJSGa",
                    "body": "```suggestion\r\n/-- Outside its usual range of `binaryEntropy`, it is negative. This is due to `log x = log |x|` -/\r\n```\r\nand below",
                    "createdAt": "2024-08-12T12:51:15Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJxmM",
                    "body": "\"Outside the usual range\", no?",
                    "createdAt": "2024-08-12T14:00:52Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mN03d",
                    "body": "Yes, that's probably better",
                    "createdAt": "2024-08-13T08:38:07Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mP7Xm",
                    "body": "Used \"the\".",
                    "createdAt": "2024-08-13T14:59:25Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJSkk",
                    "body": "Please use `2⁻¹`\r\n```suggestion\r\n    binaryEntropy p = log 2 ↔ p = 2⁻¹ := by\r\n```",
                    "createdAt": "2024-08-12T12:52:17Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJSom",
                    "body": "```suggestion\r\nlemma binaryEntropy_le_log_two {p : ℝ} (pge0 : 0 ≤ p) (ple1 : p ≤ 1) :\r\n```",
                    "createdAt": "2024-08-12T12:52:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJTWk",
                    "body": "What happens if you tag `continuous_mul_log` with `fun_prop`? Does it make the following proof work?\r\n```suggestion\r\n  fun_prop\r\n```",
                    "createdAt": "2024-08-12T12:53:58Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mP720",
                    "body": "No, does not work.",
                    "createdAt": "2024-08-13T15:00:42Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJWQ9",
                    "body": "```suggestion\r\nlemma deriv_qaryEntropy {q : ℕ} {x : ℝ} (h : x ≠ 0) (hh : x ≠ 1) :\r\n```",
                    "createdAt": "2024-08-12T13:01:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJWXl",
                    "body": "```suggestion\r\nlemma differentiableAt_binaryEntropy {x : ℝ} (xne0 : x ≠ 0) (gne1 : x ≠ 1) :\r\n```",
                    "createdAt": "2024-08-12T13:01:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJWs1",
                    "body": "Can you be more consistent about whether the input to `qaryEntropy`/`binaryEntropy` is called `p` or `x`?",
                    "createdAt": "2024-08-12T13:02:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mLjis",
                    "body": "Done.",
                    "createdAt": "2024-08-12T20:02:04Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJW_y",
                    "body": "Can you prove it's strictly antitone on `Icc 2⁻¹ 1`?",
                    "createdAt": "2024-08-12T13:03:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mLheC",
                    "body": "Done.",
                    "createdAt": "2024-08-12T19:53:38Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJXBr",
                    "body": "```suggestion\r\nlemma binaryEntropy_strictMonoOn : StrictMonoOn binaryEntropy (Icc 0 2⁻¹) := by\r\n```",
                    "createdAt": "2024-08-12T13:03:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mJXFJ",
                    "body": "```suggestion\r\nlemma strictConcaveOn_qaryEntropy {q : ℕ} : StrictConcaveOn ℝ (Icc 0 1) (qaryEntropy q) := by\r\n```",
                    "createdAt": "2024-08-12T13:03:35Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mghNk",
                    "body": "Please add a list with the main declarations. Are there some lemmas in this file that you think deserve to be listed at the top of the file? If so, please add them to the list.\r\n```suggestion\r\n\r\n## Main declarations\r\n\r\n* `Real.binEntropy`: the binary entropy function\r\n* `Real.qaryEntropy`: the `q`-ary entropy function\r\n\r\n```",
                    "createdAt": "2024-08-16T12:50:19Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mkKCe",
                    "body": "I think there's no need to add lemmas there. `NegMulLog.lean` also does not add any. We could copy the definitions for the two functions.",
                    "createdAt": "2024-08-17T10:28:37Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mkgbs",
                    "body": "I think concavity could go in there, maybe also monotonicity.",
                    "createdAt": "2024-08-17T22:53:16Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mkhkW",
                    "body": "I wrote something",
                    "createdAt": "2024-08-17T23:39:18Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mklz0",
                    "body": "Perfect, thanks!",
                    "createdAt": "2024-08-18T01:13:38Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mghzm",
                    "body": "If at all possible, I think it would be very nice if the name could avoid hard-coding a variable name. I'm still sad that we have the name `padicInt` in mathlib, and the `q` in `qary` is another example.\r\n\r\nCould this be called `shannonEntropy` instead? Or would `aryEntropy` be an option?\r\n\r\nAnyway, I don't want to block this PR on this issue, if you think another name doesn't work well...",
                    "createdAt": "2024-08-16T12:52:45Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mgiax",
                    "body": "I don't think `shannonEntropy` is a good name, as this is merely a special case of the Shannon entropy, namely it is the Shannon entropy of a random variable on `q` values, where one value is taken with probability `1 - p` and the other `q - 1` values are equally likely.",
                    "createdAt": "2024-08-16T12:55:23Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mgjQt",
                    "body": "I believe \"q-ary entropy\" is *the* standard name for this concept. It was added upon suggestion by @dupuisf , what do you think? \r\n\r\nShannon entropy is for sure a distinct and more general concept that will be in Mathlib as well (https://github.com/leanprover-community/mathlib4/pull/10493 although it seems stalled for now).\r\n",
                    "createdAt": "2024-08-16T12:58:38Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mg4e6",
                    "body": "Yeah, `shannonEntropy` suggests something very different (and we want to keep that name available for that). Unfortunately I can't think of another name for this, and certainly not one that people will spontaneously search for.",
                    "createdAt": "2024-08-16T14:08:03Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mkJ7H",
                    "body": "@jcommelin I think that means we would like to keep the name.",
                    "createdAt": "2024-08-17T10:24:55Z",
                    "author": {
                      "login": "adomasbaliuka"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjUyOTc1ODkw",
              "login": "adomasbaliuka"
            },
            {
              "id": "MDQ6VXNlcjI3NzM0NDIx",
              "login": "kspalaiologos"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjQ2NDY3MjU=",
              "login": "jorsn"
            },
            {
              "id": "MDQ6VXNlcjMxMTAxODkz",
              "login": "dupuisf"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjY1OTYzMDU=",
              "login": "lecopivo"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxlTA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042105/job/28900615500"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGurCmiQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436646950/job/28901942921"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxlIg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042106/job/28900615458"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGurCmgw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436646953/job/28901942915"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjOQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042005/job/28900614969"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjNw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042007/job/28900614967"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxiow",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041972/job/28900614819"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxizQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041971/job/28900614861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjaw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042008/job/28900615019"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxlHg",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042105/job/28900615454"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGurCm1w",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436646950/job/28901942999"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjDg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041972/job/28900614926"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxi7g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041971/job/28900614894"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjUA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436042008/job/28900614992"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxi6g",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041972/job/28900614890"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjDw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041971/job/28900614927"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxixw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041972/job/28900614855"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxioQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041971/job/28900614817"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxjLA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041972/job/28900614956"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGup2i5A",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10436041971/job/28900696804"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupxnhA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28900616068"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGupx5_A",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9734&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHLvtyZw",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5152",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Binary entropy",
        "updatedAt": "2024-08-18T02:14:20Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/9734",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAKsPbC6",
              "createdAt": "2024-01-14T02:23:22Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAKsPbC9",
              "createdAt": "2024-01-14T02:23:22Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAKsPbDA",
              "createdAt": "2024-01-14T02:23:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "ConvertToDraftEvent",
              "id": "CTDE_lADOFcwZ1c58ArTWzwAAAAKsPb9c",
              "createdAt": "2024-01-14T02:25:07Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5wtKvR",
              "createdAt": "2024-01-14T08:51:40Z",
              "body": "Shouldn't binary entropy be put under InformationTheory? Why not use capital H_2 for the function's name?",
              "author": {
                "login": "kspalaiologos"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5wtc2b",
              "createdAt": "2024-01-14T14:07:09Z",
              "body": "@kspalaiologos Thanks for the comment! I moved it to `InformationTheory`. For the name, did you mean to use  `H₂` or `H_2`? The danger is that it might be confused with Rényi entropy (collision entropy), which is written `H₂`.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58ArTWzwAAAAKxO7if",
              "createdAt": "2024-01-23T00:15:35Z"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c58ArTWzwAAAAKxO9Cv",
              "createdAt": "2024-01-23T00:16:40Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58ArTWzwAAAAK3kyds",
              "createdAt": "2024-02-01T13:01:08Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5BCe",
              "createdAt": "2024-02-13T09:02:35Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5CFl",
              "createdAt": "2024-02-13T09:03:50Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5Cs0",
              "createdAt": "2024-02-13T09:04:35Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5DBH",
              "createdAt": "2024-02-13T09:04:58Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5Dfk",
              "createdAt": "2024-02-13T09:05:33Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5D2_",
              "createdAt": "2024-02-13T09:06:00Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v5EEB",
              "createdAt": "2024-02-13T09:06:14Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zruZN",
              "createdAt": "2024-02-13T09:09:33Z",
              "body": "@b-mehta and I have material about the binary entropy function. We needed it a year ago in the context of the progress on the Frankl set family conjecture. I suggest we wait for Bhavik to provide the code to compare.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zzvRd",
              "createdAt": "2024-02-14T01:21:16Z",
              "body": "Yes, I developed that further since this function is fundamental to my Ramsey proof. I will make a detailed comparison in the next day or two.",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58ArTWzwAAAAK_Zc0m",
              "createdAt": "2024-02-14T12:26:21Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c504uA3",
              "createdAt": "2024-02-23T09:53:09Z",
              "body": "@b-mehta Any news? If you're too busy, you could also upload your files and let someone else compare it...",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c516LC_",
              "createdAt": "2024-03-05T08:14:30Z",
              "body": "@YaelDillies @lecopivo @semorrison  \r\nIt seems that @b-mehta is not available at the moment. Would you propose to wait or maybe continue with this?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c516fQL",
              "createdAt": "2024-03-05T09:03:55Z",
              "body": "Hopefully I can find the relevant files in the `ramsey` branch of mathlib3.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c518jsq",
              "createdAt": "2024-03-05T13:45:38Z",
              "body": "I guess it's this file?\r\nhttps://github.com/leanprover-community/mathlib/blob/exponential-ramsey/src/information_theory/binary_entropy.lean\r\nIt allows arbitrary base for the logs while I use 2. Maybe I should generalize everything and put 2 as the default base...",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51_x2t",
              "createdAt": "2024-03-05T21:19:46Z",
              "body": "I need a few things myself about the binary entropy. Mind if I touch this PR?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c52AVGi",
              "createdAt": "2024-03-05T23:15:05Z",
              "body": "> I need a few things myself about the binary entropy. Mind if I touch this PR?\r\n\r\nSure, go for it!",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAALm-BGH",
              "createdAt": "2024-04-15T08:13:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c57Q8Y-",
              "createdAt": "2024-04-21T13:13:29Z",
              "body": "@YaelDillies Can you think of anything I could do to increase the chances of this getting merged?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c57Q-5e",
              "createdAt": "2024-04-21T13:44:06Z",
              "body": "Sorry, I am not done adding the material because I ran out of Lean time for my holidays. I won't have more time until July.\r\n\r\nHowever there are things you can do in the meantime, eg give up binary entropy (for now) and only define base e entropy. This is much easier because `log` has more API than `logb` and also nicer expressions.\r\n\r\nYou can then relegate binary entropy to a second PR depending on the present one.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c57UJId",
              "createdAt": "2024-04-22T09:07:05Z",
              "body": "@YaelDillies By \"entropy\", do you mean for arbitrary probability distributions? That seems like a major API decision for Mathlib, which concerns the entire way how \"probability\" is set up (which I don't even understand at the moment). Not sure if I can really do anything useful there. Or did you mean something else?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c57UlAJ",
              "createdAt": "2024-04-22T10:03:21Z",
              "body": "Sorry, I got my terminology wrong. Replace \"binary entropy\" with \"base 2 binary entropy\" and \"entropy\" with \"binary entropy\" in my previous message and everything should hopefully make sense.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583L5N",
              "createdAt": "2024-05-05T14:58:33Z",
              "body": "@YaelDillies Since I seem to be prone to misunderstanding you, just to clarify: You're saying I should replace all `log2` by `log` in the current file? \r\n\r\nI don't really see how that's *much* easier but could certainly do it. However, people who might be using this API one day might want the binary-log version as well. Could also make a general version that allows setting the base and having a default.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583R5E",
              "createdAt": "2024-05-05T16:18:19Z",
              "body": "Yes that's what I mean.\r\n\r\n> I don't really see how that's _much_ easier but could certainly do it.\r\n\r\nIt's much easier because the preliminary API lemmas about `log` already exists. This is not the case with `logb`, cf the ton of lemmas I had to add in my last few commits. The general case would be nice to have but I would argue it should be a separate definition (instead of replacing the base e one) in order to have one API without all the `log b` factors.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583S87",
              "createdAt": "2024-05-05T16:35:22Z",
              "body": "@YaelDillies another question: The way to \"get up to date with master\" is to merge it, as you did? I had previously rebased (which I now probably wouldn't do since you have also worked on the branch). The docs (https://leanprover-community.github.io/contribute/index.html#dealing-with-merge-conflicts) aren't very explicit about this. Thanks for the help!\r\n\r\nGuess I will merge master again before changing the logarithm base.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583TFT",
              "createdAt": "2024-05-05T16:37:29Z",
              "body": "Yes, merging is the usual thing. You can of course rebase and I really don't mind if I lose authorship of some commits 😄 ",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58ArTWzwAAAAL1c4MD",
              "createdAt": "2024-05-05T17:21:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c55lJ5B",
              "createdAt": "2024-05-05T19:50:51Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c55lJ9h",
              "createdAt": "2024-05-05T19:52:44Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583hRM",
              "createdAt": "2024-05-05T19:55:02Z",
              "body": "@YaelDillies I reversed your additions to [Mathlib/Analysis/SpecialFunctions/Log/Base.lean](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ed98ab123b247f3dd17be7028c92849a0886cf43#diff-65f5aea892f7b42adf3f0b41b364a438db50e26b67e23a0ca2e20a095cf9ac8a) and [Mathlib/Analysis/SpecialFunctions/Log/NegMulLog.lean](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ed98ab123b247f3dd17be7028c92849a0886cf43#diff-5262eb8af9650701e05eee3fa60cb996837b1fbdc9c983f031d182b6072f7c0f) because they are not needed for this PR any longer (what with using natural logs) and they no longer worked with the current master branch.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583i72",
              "createdAt": "2024-05-05T20:18:46Z",
              "body": "That's fine. Please just keep them on a branch somewhere so that we can add them when needed.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c583k1v",
              "createdAt": "2024-05-05T20:42:18Z",
              "body": "> That's fine. Please just keep them on a branch somewhere so that we can add them when needed.\r\n\r\nThe branch: [Yael-logb-lemmas](https://github.com/leanprover-community/mathlib4/tree/Yael-logb-lemmas)\r\nNote: these are only those changes that didn't work with master and that I removed in [ed98ab1](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ed98ab123b247f3dd17be7028c92849a0886cf43). All other changes are still in this PR.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c585OqN",
              "createdAt": "2024-05-06T07:44:33Z",
              "body": "I've opened #12693. Would you mind either\r\n* Removing the corresponding lines from the diff and updating the labels, assuming this PR doesn't need the new lemmas.\r\n* Marking this PR as depending on #12693.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c585waB",
              "createdAt": "2024-05-06T09:08:05Z",
              "body": "@YaelDillies  This PR does not require #12693. I removed the changes as you suggested. This PR now just adds `BinEntropy.lean`, nothing else.\r\n\r\nBy \"updating labels\", do you mean the PR labels on GitHub? Feel free to change those, I'm not sure what they should be.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58ArTWzwAAAAL1tgml",
              "createdAt": "2024-05-06T09:21:34Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58ArTWzwAAAAL1tgmx",
              "createdAt": "2024-05-06T09:21:34Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAL1tgm3",
              "createdAt": "2024-05-06T09:21:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAL1tgm_",
              "createdAt": "2024-05-06T09:21:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59zZJp",
              "createdAt": "2024-05-14T16:13:32Z",
              "body": "Hi, great to have some people working on entropies! Are you aware of https://github.com/leanprover-community/mathlib4/pull/10493 and should the binary entropy be based on it? I think at least the following lemmas follow trivially from the general case:\r\n\r\n- `h2_gt_0` holds by `measureEntropy_nonneg` and `measureEntropy_dirac`\r\n- `h2_zero_iff_zero_or_one` by `measureEntropy_dirac`\r\n- `h2_one_iff_eq_half` by `measureEntropy_eq_card_iff_measure_eq`\r\n- `h2_le_log_2` by `measureEntropy_le_log_card `\r\n- `h₂_continuous` (not in #10493, I think; If I understand correctly, the lemma refers to continuity of the function $h2$ in $p$. It follows since the Bernoulli distribution is continuous in $p$ and the entropy is continuous in the distribution (even concave, see below).\r\n- `strictConcave_h2` (not in #10493, I think)",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59zdrn",
              "createdAt": "2024-05-14T16:22:52Z",
              "body": "> Shouldn't binary entropy be put under InformationTheory? Why not use capital H_2 for the function's name?\r\n-- https://github.com/leanprover-community/mathlib4/pull/9734#issuecomment-1890888657\r\n\r\n> @kspalaiologos Thanks for the comment! I moved it to InformationTheory. For the name, did you mean to use H₂ or H_2? The danger is that it might be confused with Rényi entropy (collision entropy), which is written H₂.\r\n-- https://github.com/leanprover-community/mathlib4/pull/9734#issuecomment-1890962843\r\n\r\n\r\nAbout the naming, you are currently using both `h2` and `h₂`. I think it should be only one of them. Other possible, less ambiguous names: `Hbin`, `Hbern`, where the latter is consistent with `Hm` (entropy of a measure #10493), but to my experience less conventional in Information Theory than `Hbin`.\r\n\r\n$h_2$ could be a differential Renyi-2-entropy, but this is maybe not that frequent.\r\nIn general, $H_2, h, h_2$ could all have naming collisions.",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c590RlM",
              "createdAt": "2024-05-14T18:26:50Z",
              "body": "To follow the capitalisation rules, it should be `hbin`/`hbern`.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c594bpF",
              "createdAt": "2024-05-15T08:56:37Z",
              "body": "Very nice to see some work on information theory! Just one initial comment: I really think it should be named something longer, i.e. `binaryEntropy` seems like the obvious name. `h₂` can then be used as local notation for it where appropriate, but reserving this name for all time seems a bit extreme (i.e. I use `h₂` all the time for hypothesis names...).\r\n\r\nAlso, it might be good to generalize it to the q-ary entropy (see, e.g., [this book](https://cse.buffalo.edu/faculty/atri/courses/coding-theory/book/), section 3.3).",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c595jI_",
              "createdAt": "2024-05-15T11:12:33Z",
              "body": "> Also, it might be good to generalize it to the q-ary entropy (see, e.g., [this book](https://cse.buffalo.edu/faculty/atri/courses/coding-theory/book/), section 3.3).\r\n\r\nThis was roughly the state of the PR before I told Adomas to use `log` instead of `logb`. My motivation is that the `logb` API is very underdeveloped compared to the `log` API and that the `binaryEntropy` defined using `log` has a nicer derivative (which I need in an upcoming PR).\r\n\r\nMy opinion is that the `q`-ary entropy function should be a separate function, and be defined in a later PR.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c599OpO",
              "createdAt": "2024-05-15T18:36:32Z",
              "body": "I didn't mean to change the base of the log; I'm perfectly happy with the natural log. I only meant to add the `x * log (q-1)` term. Once we have that, I really don't see the point of having a separate case for `q=2`, it's literally just `qaryEntropy 2`.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c599bKs",
              "createdAt": "2024-05-15T18:58:38Z",
              "body": "Yes, so `qaryEntropy 2` is not \"literally just\" the definition in this PR because this PR uses base e, not base 2.\r\n\r\nOr do you mean that q-ary entropy does not need to use log base 2?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c599qwR",
              "createdAt": "2024-05-15T19:33:41Z",
              "body": "- Given that this is going into `SpecialFunctions`, I currently tend toward **naming** it `binaryEntropy` as suggested by @dupuisf.\r\n- Concerning #10493, I didn't know about this PR. Thanks for pointing it out. I think if this is going into `SpecialFunctions`, it would make sense to prove the properties here like this for now and then later prove that this definition equals the Shannon entropy of a Bernoulli distribution once #10493 is merged. I'm open to shortening the proofs here later using things from general entropy. However, if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...).\r\n- I'm interested in opinions what **namespace** this should be in.\r\n-  The **q-ary entropy**, according to that book, seems to be a slightly different thing. I'm talking about the Shannon entropy of a Bernoulli random variable (as [Wikipedia](https://en.wikipedia.org/wiki/Entropy_(information_theory)) does). One can measure this in bits (base-2 logs), Nats (natural logs), etc. The definition of q-ary entropy isn't the same, as the book points out, (even though they coincide for base-2 logs). So I would say those definitions are separate. Alternatively, one could fix the base to two (I used base-two logs originally) and *force* them to coincide.\r\n",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c599ulK",
              "createdAt": "2024-05-15T19:44:31Z",
              "body": "> * if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...)\r\n\r\nAgreed. That is precisely my use case.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-Ba6Q",
              "createdAt": "2024-05-16T07:47:02Z",
              "body": "> Yes, so `qaryEntropy 2` is not \"literally just\" the definition in this PR because this PR uses base e, not base 2.\r\n> \r\n> Or do you mean that q-ary entropy does not need to use log base 2?\r\n\r\nRight, I see no particular reason why q-ary entropy needs to be in base q, especially if all other versions of entropy are using natural logs.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-BeOT",
              "createdAt": "2024-05-16T07:52:27Z",
              "body": "Okay then I'm happy for this PR to be about the base e q-ary entropy!",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-BeOe",
              "createdAt": "2024-05-16T07:52:28Z",
              "body": "> * Given that this is going into `SpecialFunctions`, I currently tend toward **naming** it `binaryEntropy` as suggested by @dupuisf.\r\n> \r\n>     * Concerning [feat: entropy of a measure #10493](https://github.com/leanprover-community/mathlib4/pull/10493), I didn't know about this PR. Thanks for pointing it out. I think if this is going into `SpecialFunctions`, it would make sense to prove the properties here like this for now and then later prove that this definition equals the Shannon entropy of a Bernoulli distribution once [feat: entropy of a measure #10493](https://github.com/leanprover-community/mathlib4/pull/10493) is merged. I'm open to shortening the proofs here later using things from general entropy. However, if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...).\r\n> \r\n>     * I'm interested in opinions what **namespace** this should be in.\r\n> \r\n>     * The **q-ary entropy**, according to that book, seems to be a slightly different thing. I'm talking about the Shannon entropy of a Bernoulli random variable (as [Wikipedia](https://en.wikipedia.org/wiki/Entropy_(information_theory)) does). One can measure this in bits (base-2 logs), Nats (natural logs), etc. The definition of q-ary entropy isn't the same, as the book points out, (even though they coincide for base-2 logs). So I would say those definitions are separate. Alternatively, one could fix the base to two (I used base-two logs originally) and _force_ them to coincide.\r\n\r\nNo, q-ary entropy is very much a generalization of the binary entropy: it's the Shannon entropy of a random variable over {1,...,q}, where 1 has probability 1-x and the rest of the probability is evenly distributed over the rest. It's used for things like bounding the volume of Hamming balls and that sort of thing, much like the binary entropy. And if we're going to standardize to natural logs for defining various versions of the entropy, it should also follow suit.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-IwIW",
              "createdAt": "2024-05-16T21:30:22Z",
              "body": "> * However, if we treat `binaryEntropy` as a \"special function that maps Real -> Real\", a user of the API shouldn't need to define a random variable (or even know what that is) to use the function and its properties as far as they only concern the function itself (e.g. concavity, differentiability...).\r\n\r\nI agree. Though, when(!) we have a proof of the same property for the general entropy, the proof would simply consist of proving that the function gives the entropy Bern(p), or in the q-ary case of, e.g., $qSC_p(1)$, the output distribution of a q-ary symmetric channel, and the remaining part is `exact`ly the respective property of the general entropy. The probability setup would not be exposed (except for the proof that this is the entropy of some probability measure).\r\n\r\nFor continuity/concavity, I am not sure it is easy enough to be worth it: One would also have to show these properties for the map from p to the PMF. This holds since the pmfs depend affinely on q $P = (1, 0, 0, ...) + (-1, 1/q, 1/q, ...) * p)$. I have no idea if this argument is easy in Lean. I might try it as an exercise (I'm a complete newbie but would be happy if i can contribute to and use Lean for information Theory).",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-MCxD",
              "createdAt": "2024-05-17T09:02:34Z",
              "body": "Regarding the point about defining this via the general Shannon entropy, I disagree for practical reasons: it would make the imports of this file *much* heavier, and since the work has already been done it's hardly worth it. Also, note that this function is used in areas like combinatorics where it might be the only bit of information theory that is used, so making its imports heavier would impact the imports of anything downstream as well.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-N6km",
              "createdAt": "2024-05-17T13:12:54Z",
              "body": "@dupuisf: Just for clarification: You mean the proofs, not the definition, don't you? I think noone proposed to define `qaryEntropy` in terms of `measureEntropy`.\r\n\r\nI'm not opposed to keeping things separate in principle. Is loading of files a perormance issue in lean, e.g. are they eagerly or lazily loaded?\r\n\r\nThat said, if you want to keep this file independent and want to have a proof that the q-ary entropy function gives indeed the entropy of some probability distribution, then this proof must be outsourced, e.g. to accompany the general entropy.",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-OJF2",
              "createdAt": "2024-05-17T13:41:25Z",
              "body": "> @dupuisf: Just for clarification: You mean the proofs, not the definition, don't you? I think noone proposed to define `qaryEntropy` in terms of `measureEntropy`.\r\n> \r\n> I'm not opposed to keeping things separate in principle. Is loading of files a perormance issue in lean, e.g. are they eagerly or lazily loaded?\r\n> \r\n> That said, if you want to keep this file independent and want to have a proof that the q-ary entropy function gives indeed the entropy of some probability distribution, then this proof must be outsourced, e.g. to accompany the general entropy.\r\n\r\nI mean both the proofs and the definition; I think it should be usable without importing a massive chunk of measure theory. Having unnecessary imports has already caused problems in the past (it restricts what can be compiled in parallel, any changes that are made in earlier files triggers a recompilation of all its dependencies, etc). And hopefully, at some point it will become possible for a downstream project to only import the parts of mathlib it actually depends on, which will only add to the benefits of having shallow imports.\r\n\r\nAnd yes, this means that the connection between this and the general Shannon entropy should then be located in some other file.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-O185",
              "createdAt": "2024-05-17T15:13:28Z",
              "body": "- Given the discussion so far, I propose to continue with this PR for now without connecting it to the general entropy definition and add the connection in a separate file later, after both this PR and #10493 are merged.\r\n- I'm not completely sure what exactly should the definition be if we include the generalization to \"q-ary entropy\". If we generalize, I would still prefer to *also* keep the special case of binary entropy as a `def` with a good informative name, because binary entropy seems to be a better known concept than the generalization. \r\n\r\n    The book @dupuisf referenced says that \"there is no similar analogue\" for the q-ary entropy as the Shannon entropy of a random variable, and uses logs-base-q, so I was bit confused about that, as I wasn't familiar with q-ary entropy until now. Do we want to define `qaryEntropy (q : Nat) (p : Real)` as \"the Shannon entropy (measured in Nats) of the random variable '1 with probability (1 - p) and any of 2...q with equal probability' \", so `p * log (q − 1) − p * log p − (1 − p) * log (1 − p)`? That definition would not even match the definition from the book for q=2 (because of the log-base, which does seem to be there on purpose?!) but if you say this makes sense, let's do it.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-QRLa",
              "createdAt": "2024-05-17T18:47:25Z",
              "body": "> * Given the discussion so far, I propose to continue with this PR for now without connecting it to the general entropy definition and add the connection in a separate file later, after both this PR and [feat: entropy of a measure #10493](https://github.com/leanprover-community/mathlib4/pull/10493) are merged.\r\n> \r\n>     * I'm not completely sure what exactly should the definition be if we include the generalization to \"q-ary entropy\". If we generalize, I would still prefer to _also_ keep the special case of binary entropy as a `def` with a good informative name, because binary entropy seems to be a better known concept than the generalization.\r\n>       The book @dupuisf referenced says that \"there is no similar analogue\" for the q-ary entropy as the Shannon entropy of a random variable, and uses logs-base-q, so I was bit confused about that, as I wasn't familiar with q-ary entropy until now. Do we want to define `qaryEntropy (q : Nat) (p : Real)` as \"the Shannon entropy (measured in Nats) of the random variable '1 with probability (1 - p) and any of 2...q with equal probability' \", so `p * log (q − 1) − p * log p − (1 − p) * log (1 − p)`? That definition would not even match the definition from the book for q=2 (because of the log-base, which does seem to be there on purpose?!) but if you say this makes sense, let's do it.\r\n\r\nYes, that's basically it. The base of the log is just a scaling factor, and I think in mathlib we'll anyway want to standardize to using natural logs. I guess we can always have `abbrev binaryEntropy := qaryEntropy 2` with specialized lemmas under that name.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-Q2ni",
              "createdAt": "2024-05-17T20:32:46Z",
              "body": "> we can always have `abbrev binaryEntropy := qaryEntropy 2` with specialized lemmas under that name\r\n\r\nActually you could make `h₂` (scoped) notation for `qaryEntropy 2`.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-S6O_",
              "createdAt": "2024-05-18T17:21:08Z",
              "body": "I think, in any case, the base should be emphasized in the documentation: I am not sure where else the function is used, but base $q$ looks like the convention in coding theory to me, since base $q$ is used in the books by Guruswami–Rudra–Sudan, by [Roth](https://doi.org/10.1017/CBO9780511808968) and in some papers I glanced into. Next week, I could ask a coding theorist if they would be very surprised about base $e$.\r\n\r\nBase $q$ makes sense in coding theory since they define the rate of a $k$-dimensional linear code (subspace) in $\\mathbb{F}_q^n$ as $k/n$, i.e. they measure in $q$-its.",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_YYZi",
              "createdAt": "2024-05-29T10:38:02Z",
              "body": "@jorsn Any news from the coding theorist on how surprising base-e would be?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_aZpA",
              "createdAt": "2024-05-29T14:58:06Z",
              "body": "I doubt it would be that much more surprising than an information theorist seeing natural logs rather than base 2 (i.e. clearly a minority choice, but not shocking). However, it's worth keeping in mind that using a different base than e has a cost in mathlib that doesn't exist on paper: `log` has a more complete API than `logb`, and this is likely to remain that way for the foreseeable future.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_g-Mf",
              "createdAt": "2024-05-30T11:27:47Z",
              "body": "My collegue says, it is mostly but not always in base q, and he always checks it. So the natural basis is fine, I think.",
              "author": {
                "login": "jorsn"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c58tBRz",
              "createdAt": "2024-06-01T21:16:05Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c58uTG6",
              "createdAt": "2024-06-02T17:12:56Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c58ujcc",
              "createdAt": "2024-06-02T17:54:16Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_yosg",
              "createdAt": "2024-06-02T18:33:32Z",
              "body": "Any comments on the definitions or lemma statements?\r\n\r\nI'm not sure what to do about linter complaining that `binaryEntropy_one : binaryEntropy 1 = 0` is not in simp-normal-form. Linter says it would want to replace it by `(2-1).log = 0`. What should I do?\r\n- Remove the lemma completely because it \"follows obviously\" from `qaryEntropy_one` (Personally, I'd rather keep it)\r\n- remove the `simp` attribute\r\n- Add `(2-1).log = 0` as a new simp-lemma (presumably in a different file) as suggested by the linter (??)",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_yp4E",
              "createdAt": "2024-06-02T18:53:59Z",
              "body": "The fourth option would be to not make `binaryEntropy` an `abbrev`. (note saying this is good or bad, I haven't thought about it)\r\n\r\nAlso note that the simp lemma you would need is not `log (2-1) = 0` but rather `2 - 1 = 1` since `log 1 = 0` is already a simp lemma. Or maybe there should be a simproc for numerals instead. (again, not saying this is good or bad, haven't thought about it).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c58uwFu",
              "createdAt": "2024-06-02T23:53:59Z",
              "body": "This is globally in pretty good shape, thanks for putting in the work! I have a first round of fairly minor comments on the beginning of the file, and I haven't looked at the parts with \"todos\" yet.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_1Spq",
              "createdAt": "2024-06-03T09:06:15Z",
              "body": "> The fourth option would be to not make `binaryEntropy` an `abbrev`. (note saying this is good or bad, I haven't thought about it)\r\n> \r\n> Also note that the simp lemma you would need is not `log (2-1) = 0` but rather `2 - 1 = 1` since `log 1 = 0` is already a simp lemma. Or maybe there should be a simproc for numerals instead. (again, not saying this is good or bad, haven't thought about it).\r\n\r\nI changed `abbrev` to `def` for `binaryEntropy`. Since many people using `binaryEntropy` will probably not care about `qaryEntropy`, it's maybe better if it doesn't get unfolded into `qaryEntropy`.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c58z_S0",
              "createdAt": "2024-06-03T14:14:40Z",
              "body": "",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_4DVl",
              "createdAt": "2024-06-03T14:49:10Z",
              "body": "All remaining `-- TODO` comments concern lemmas that have assumptions which are not strictly necessary. However, I'm having a hard time proving the statements without those assumptions (it involves proving things like `¬DifferentiableAt` in order to use junk values of `deriv`).\r\n\r\nProbably nobody will ever need those junk values, however, it would of course be nice overall to never have unnecessary assumptions. I asked for hints about how to do it on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Proving.20.60.C2.AC.20DifferentiableAt.60/near/412820748) but haven't done it yet. On the other hand, e.g., `deriv2_mul_log` also has unnecessary assumptions, so maybe I shouldn't worry about it?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_6I65",
              "createdAt": "2024-06-03T19:20:02Z",
              "body": "> All remaining `-- TODO` comments concern lemmas that have assumptions which are not strictly necessary. However, I'm having a hard time proving the statements without those assumptions (it involves proving things like `¬DifferentiableAt` in order to use junk values of `deriv`).\r\n> \r\n> Probably nobody will ever need those junk values, however, it would of course be nice overall to never have unnecessary assumptions. I asked for hints about how to do it on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Proving.20.60.C2.AC.20DifferentiableAt.60/near/412820748) but haven't done it yet. On the other hand, e.g., `deriv2_mul_log` also has unnecessary assumptions, so maybe I shouldn't worry about it?\r\n\r\nI think there are missing lemmas in mathlib about e.g. `deriv log 0`, etc, for precisely this reason. With those, you could then proceed by cases without too many problems I think. I agree the junk values are not so useful, but removing assumptions from lemma statements makes them easier to use, so it's worth doing.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AKR-j",
              "createdAt": "2024-06-05T14:28:48Z",
              "body": "@dupuisf We can prove `deriv log 0 = 0` using `differentiableAt_log_iff`. However, the approach in the proof of `differentiableAt_log_iff` seems hard to generalize.\r\n\r\nSomething like `deriv_add` *has to* require that both functions are `differentiableAt` and the converse is false (because \"two non-differentiables can cancel each other\"). In order to be able to use junk values here, I would have to prove (assuming it's true) something like\r\n```lean4\r\n¬ DifferentiableAt 𝕜 f x → DifferentiableAt 𝕜 g x → ¬ DifferentiableAt 𝕜 (fun y => f y + g y) x\r\n```\r\n\r\nand right now I don't really know how to approach it.\r\n\r\nIn general, the API for proving that things are *not* differentiable does not seem complete or easy to use for a beginner like me.",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AK97h",
              "createdAt": "2024-06-05T15:28:27Z",
              "body": "That's definitely not true as, as you say, non-differentianle functions can add up to a differentiable one",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AK_GQ",
              "createdAt": "2024-06-05T15:30:37Z",
              "body": "> That's definitely not true as, as you say, non-differentianle functions can add up to a differentiable one\r\n\r\nI'm adding a non-differentiable function to a differentiable one and claiming the result is non-differentiable. Do you have a counter-example?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ALHUG",
              "createdAt": "2024-06-05T15:46:30Z",
              "body": "> > That's definitely not true as, as you say, non-differentianle functions can add up to a differentiable one\r\n> \r\n> I'm adding a non-differentiable function to a differentiable one and claiming the result is non-differentiable. Do you have a counter-example?\r\n\r\nYou can show non-differentiability by contradiction here: if `g = f₁ + f₂` is differentiable at `x` and so is `f₂`, then `f₁` must also be differentiable there since it's the difference of two differentiable functions.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ALSvh",
              "createdAt": "2024-06-05T16:07:54Z",
              "body": "Sorry, was (mis)reading on my phone",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AP24c",
              "createdAt": "2024-06-06T07:53:55Z",
              "body": "> You can show non-differentiability by contradiction here: if `g = f₁ + f₂` is differentiable at `x` and so is `f₂`, then `f₁` must also be differentiable there since it's the difference of two differentiable functions.\r\n\r\nThanks for the hint! I proved `¬ DifferentiableAt 𝕜 f x → DifferentiableAt 𝕜 g x → ¬ DifferentiableAt 𝕜 (fun y => f y + g y) x`.\r\n\r\nHowever, the same approach doesn't work for `¬ DifferentiableAt ℝ (fun x => x * log x) 0` because \"multiplication with zero\" has no functional inverse (let alone one that's differentiable there). In my analysis class many years ago I might have tried an argument (applied to `x * log |x|`, which is what we have here) like \r\n\r\n> it's differentiable in any (punctured) neighborhood of 0 and the derivative grows without bound when approaching 0, hence the derivative at zero cannot exist. \r\n\r\nBut I don't know how to do this in Lean (this direction led me to my question at [Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Proving.20.60.C2.AC.20DifferentiableAt.60/near/412820748)).",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5-A6vU",
              "createdAt": "2024-06-12T20:36:17Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6C2gHG",
              "createdAt": "2024-06-27T18:00:26Z",
              "body": "### PR summary [ff21379a50](https://github.com/leanprover-community/mathlib4/pull/9734/commits/ff21379a505c86b73e5a9de3204355978a2b1c77)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ extracted_1`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ ne_one_of_lt_onehalf`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ tendsto_nhdsWithin_of_eventuallyEq`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6C209f",
              "createdAt": "2024-06-27T18:22:36Z",
              "body": "### PR summary [387e0d0be6](https://github.com/leanprover-community/mathlib4/pull/9734/commits/387e0d0be677e0620fc7131bd43ef0d450f308c7)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ACzaD",
              "createdAt": "2024-06-28T14:40:45Z",
              "body": "",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6AJgZJ",
              "createdAt": "2024-06-30T08:04:26Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58ArTWzwAAAAMbOGM9",
              "createdAt": "2024-06-30T08:06:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAMbOGM_",
              "createdAt": "2024-06-30T08:06:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DC3zJ",
              "createdAt": "2024-06-30T13:41:56Z",
              "body": "### PR summary [fab2002a9a](https://github.com/leanprover-community/mathlib4/pull/9734/commits/fab2002a9aa7ebbdfb366d13e745db13b19c9bd6)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DC30A",
              "createdAt": "2024-06-30T13:42:11Z",
              "body": "### PR summary [532b7f34d1](https://github.com/leanprover-community/mathlib4/pull/9734/commits/532b7f34d14dcd9ede13fd1f4ab30a21c964a751)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DC31U",
              "createdAt": "2024-06-30T13:42:31Z",
              "body": "### PR summary [7421f1fe80](https://github.com/leanprover-community/mathlib4/pull/9734/commits/7421f1fe80f8291fa7e9668e2b3e4bc3eaafb936)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DC35t",
              "createdAt": "2024-06-30T13:43:38Z",
              "body": "### PR summary [fd95ecd7df](https://github.com/leanprover-community/mathlib4/pull/9734/commits/fd95ecd7dfcc3c59a8b9a24a0dbeedfbba39123c)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DDt0b",
              "createdAt": "2024-06-30T22:49:59Z",
              "body": "### PR summary [3f69a42337](https://github.com/leanprover-community/mathlib4/pull/9734/commits/3f69a423375549440670b417e5b01fb2264b7a76)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_log_const_neg`\n`+ differentiableAt_negMulLog_iff`\n`+ differentiable_const_minus`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ fderiv_deriv'`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DD2Vr",
              "createdAt": "2024-07-01T00:20:58Z",
              "body": "### PR summary [7cb3707b0e](https://github.com/leanprover-community/mathlib4/pull/9734/commits/7cb3707b0e57363ec52710693e65d7df0b22e5dd)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_DifferentiableAt_add_not_DifferentiableAt`\n`+ not_DifferentiableAt_of_not_DifferentiableAt_add_DifferentiableAt_`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DMc6-",
              "createdAt": "2024-07-01T21:10:49Z",
              "body": "### PR summary [6368935991](https://github.com/leanprover-community/mathlib4/pull/9734/commits/6368935991aaa4a377399a974f6027da016c6b7f)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ log_le_log_of_neg`\n`+ log_lt_log_of_neg`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DMda5",
              "createdAt": "2024-07-01T21:12:04Z",
              "body": "### PR summary [6f0d71065b](https://github.com/leanprover-community/mathlib4/pull/9734/commits/6f0d71065b1fd96b50258efc5073e7cfc472876f)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ log_le_log_of_neg`\n`+ log_lt_log_of_neg`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DVMHd",
              "createdAt": "2024-07-02T14:27:25Z",
              "body": "### PR summary [13c8c5738b](https://github.com/leanprover-community/mathlib4/pull/9734/commits/13c8c5738ba48ca8b1029da9ec67147bdc0b4dc6)\n\n#### Import changes\n\nNo significant changes to the import graph\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dew_m",
              "createdAt": "2024-07-03T11:42:29Z",
              "body": "There are several helper lemmas (about limits and about differentiability) which should either be inlined/refactored, or should go into different files. Please comment on which Lemmas would be OK to keep, assuming they're properly generalized, etc. Are there any other major things to be done?",
              "author": {
                "login": "adomasbaliuka"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58ArTWzwAAAAMdd3Dc",
              "createdAt": "2024-07-03T11:42:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAMdd3Dl",
              "createdAt": "2024-07-03T11:42:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6AkEO1",
              "createdAt": "2024-07-03T16:49:49Z",
              "body": "Very nice, looks like it's coming along nicely! I have a first batch of comments, and I'll have a look at the rest of the file later.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6A1oiA",
              "createdAt": "2024-07-06T15:12:48Z",
              "body": "I just finished going through the file and have only a few more comments. Once all these are implemented, I think it will be pretty much ready to merge, it's in very good shape now!",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6A1qo3",
              "createdAt": "2024-07-06T16:37:29Z",
              "body": "",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58ArTWzwAAAAMfiYaE",
              "createdAt": "2024-07-07T12:24:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58ArTWzwAAAAMfiYaG",
              "createdAt": "2024-07-07T12:24:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3zZX",
              "createdAt": "2024-07-07T13:05:16Z",
              "body": "### PR summary [9f74760806](https://github.com/leanprover-community/mathlib4/pull/9734/commits/9f74760806e55e81eff3cd07c11c2cbcabec45ec)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3za1",
              "createdAt": "2024-07-07T13:05:34Z",
              "body": "### PR summary [550ec52382](https://github.com/leanprover-community/mathlib4/pull/9734/commits/550ec523820b17728bcebf37e9936422454cc9c3)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3zfr",
              "createdAt": "2024-07-07T13:06:11Z",
              "body": "### PR summary [944ced5a23](https://github.com/leanprover-community/mathlib4/pull/9734/commits/944ced5a23ca1ed247c3d877020b2b27f043f05e)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3zhf",
              "createdAt": "2024-07-07T13:06:25Z",
              "body": "### PR summary [9f7b55130c](https://github.com/leanprover-community/mathlib4/pull/9734/commits/9f7b55130c2501dfa1d55c59d1111ca7455a102d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3zjN",
              "createdAt": "2024-07-07T13:06:41Z",
              "body": "### PR summary [a7f3110c86](https://github.com/leanprover-community/mathlib4/pull/9734/commits/a7f3110c86ac7b7c398ee59b21e50ebe74d70c29)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3zj4",
              "createdAt": "2024-07-07T13:06:50Z",
              "body": "### PR summary [a7f3110c86](https://github.com/leanprover-community/mathlib4/pull/9734/commits/a7f3110c86ac7b7c398ee59b21e50ebe74d70c29)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3zlc",
              "createdAt": "2024-07-07T13:07:07Z",
              "body": "### PR summary [de5c3f5a90](https://github.com/leanprover-community/mathlib4/pull/9734/commits/de5c3f5a907152d554c84a89ef5e2e0f5d9af02c)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.SpecialFunctions.BinEntropy`|1582|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DifferentiableAt.add_iff_left`\n`+ DifferentiableAt.add_iff_right`\n`+ abs_min_lt_of_nonneg`\n`+ binaryEntropy`\n`+ binaryEntropy_add_onehalf`\n`+ binaryEntropy_continuous`\n`+ binaryEntropy_eq`\n`+ binaryEntropy_eq'`\n`+ binaryEntropy_eq_log2_iff_eq_half`\n`+ binaryEntropy_le_log2`\n`+ binaryEntropy_lt_log2_of_gt_half`\n`+ binaryEntropy_lt_log2_of_lt_half`\n`+ binaryEntropy_neg_of_gt_one`\n`+ binaryEntropy_neg_of_neg`\n`+ binaryEntropy_one`\n`+ binaryEntropy_one_sub`\n`+ binaryEntropy_onehalf`\n`+ binaryEntropy_pos`\n`+ binaryEntropy_strictMono`\n`+ binaryEntropy_zero_iff_zero_or_one`\n`+ deriv2_binaryEntropy`\n`+ deriv2_qaryEntropy`\n`+ deriv_binaryEntropy`\n`+ deriv_binaryEntropy'`\n`+ deriv_binaryEntropy'''`\n`+ deriv_log_one_sub`\n`+ deriv_log_one_sub_at_1`\n`+ deriv_mul_log_zero`\n`+ deriv_one_minus`\n`+ deriv_qaryEntropy`\n`+ deriv_qaryEntropy'`\n`+ differentiableAt_binaryEntropy`\n`+ differentiableAt_binaryEntropy'`\n`+ differentiableAt_binaryEntropy_iff_ne_zero_one`\n`+ differentiableAt_iff_differentiableAt_comp_mul_add`\n`+ differentiableAt_negMulLog_iff`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_left`\n`+ eventuallyEq_nhdsWithin_of_eqOn_interval_right`\n`+ hasDerivAt_binaryEntropy`\n`+ hasDerivAt_qaryEntropy`\n`+ not_DifferentiableAt_log_mul_zero`\n`+ not_DifferentiableAt_of_not_eventuallly_bounded_derivative`\n`+ not_continuousAt_deriv_mul_log_zero`\n`+ not_continuousAt_deriv_qaryEntropy_one`\n`+ not_continuousAt_deriv_qaryEntropy_zero`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Iio_atTop`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atBot`\n`+ not_continuousAt_of_tendsto_nhdsWithin_Ioi_atTop`\n`+ not_eventually_bounded_derivative_zero_mul_log`\n`+ qaryEntropy`\n`+ qaryEntropy_continuous`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy`\n`+ qaryEntropy_eq_log_mul_add_binaryEntropy'`\n`+ qaryEntropy_one`\n`+ qaryEntropy_pos`\n`+ qaryEntropy_strictMono`\n`+ qaryEntropy_zero`\n`+ strictConcave_binaryEntropy`\n`+ strictConcave_qaryEntropy`\n`+ tendsto_atTop_if_tendsto_neg_atBot`\n`+ tendsto_deriv_mul_log_nhdsWithin_zero`\n`+ zero_lt_log_two`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        }
      }
    }
  }
}
