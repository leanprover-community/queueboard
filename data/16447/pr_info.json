{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 164,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define the weighted L2 inner product of functions `f g : ‚àÄ i, E i` where `Œπ` is a fintype and the `E i` are `ùïú`-inner product spaces where `ùïú` is `RCLike` as `‚àë i, w i ‚Ä¢ inner (f i) (g i)`. This \"duplicates\" `inner` but is necessary because there are two useful (to discrete analysis) inner products on `G ‚Üí R` given inner products on `R` and `Fintype G`, namely\r\n* the usual \"discrete\" inner product `‚àë i, conj (f i) * g i`\r\n* the less usual but nevertheless crucial \"compact\" inner product `ùîº i, conj (f i) * g i`\r\n\r\nFrom LeanAPAP\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #17384\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-10-11T13:31:58Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6KqJcG",
              "body": "### PR summary [8b66c81617](https://github.com/leanprover-community/mathlib4/pull/16447/commits/8b66c816172148915e9d426099570fc6313fde18)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.RCLike.Inner`|1650|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_wInner_le`\n`+ cWeight`\n`+ conj_wInner_symm`\n`+ inner_eq_wInner_one`\n`+ linearIndependent_of_ne_zero_of_wInner_cWeight_eq_zero`\n`+ linearIndependent_of_ne_zero_of_wInner_one_eq_zero`\n`+ mul_wInner_left`\n`+ norm_wInner_le`\n`+ wInner`\n`+ wInner_add_left`\n`+ wInner_add_right`\n`+ wInner_cWeight_const_left`\n`+ wInner_cWeight_const_right`\n`+ wInner_cWeight_eq_expect`\n`+ wInner_cWeight_eq_smul_wInner_one`\n`+ wInner_const_left`\n`+ wInner_const_right`\n`+ wInner_neg_left`\n`+ wInner_neg_right`\n`+ wInner_nonneg`\n`+ wInner_of_isEmpty`\n`+ wInner_one_const_left`\n`+ wInner_one_const_right`\n`+ wInner_one_eq_inner`\n`+ wInner_one_eq_sum`\n`+ wInner_smul_left`\n`+ wInner_smul_right`\n`+ wInner_sub_left`\n`+ wInner_sub_right`\n`+ wInner_zero_left`\n`+ wInner_zero_right`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-03T11:40:17Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LBwGo",
              "body": "Am I missing a good reason not to instead create an intermediate type class under `InnerProductSpace` that contains the algebraic operations but none of the topology?\n\nAt a glance, that seems like it would solve the duplication problems here, and I know this has been requested before.",
              "createdAt": "2024-09-05T19:34:34Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LB7Ht",
              "body": "What instances would there be for this typeclass? I suspect that answering this question will quickly make you run into the problem that there are two useful (to discrete analysis) inner products on `G ‚Üí R` given inner products on `R` and `Fintype G`, namely\r\n* the usual \"discrete\" inner product `‚àë i, conj (f i) * g i`\r\n* the less usual but nevertheless crucial \"compact\" inner product `ùîº i, conj (f i) * g i` (using the notation from #15883)\r\n\r\nI really need both because Plancherel says that [the *discrete* inner product of the compact Fourier transforms of `f` and `g` is equal to the *compact* inner product of `f` and `g`](https://yaeldillies.github.io/LeanAPAP/docs/LeanAPAP/Prereqs/FourierTransform/Compact.html#dL2Inner_cft). Or alternatively [the *compact* inner product of the discrete Fourier transforms of `f` and `g` is equal to the *discrete* inner product of `f` and `g`](https://yaeldillies.github.io/LeanAPAP/docs/LeanAPAP/Prereqs/FourierTransform/Discrete.html#cL2Inner_dft).",
              "createdAt": "2024-09-05T20:04:18Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Ob92L",
              "body": "> looks mostly good to me. It would be nice to have the inner product space construction for a nonnegative weight function (obviously not as an instance) just so that we have access to it when we want it.\r\n\r\nThis is hard to provide without the weighted Lp norm (which is a future PR), so I have left a TODO instead.",
              "createdAt": "2024-10-02T21:05:32Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Oinm8",
              "body": "That's totally fine. Thanks!",
              "createdAt": "2024-10-03T13:35:06Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OwQqX",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17384~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-05T10:47:35Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pe7iH",
              "body": "bors d+",
              "createdAt": "2024-10-11T11:51:38Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pe7jN",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-10-11T11:51:40Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PfTQs",
              "body": "bors merge",
              "createdAt": "2024-10-11T12:49:24Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PfmJo",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11292985425/job/31410123707)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11292985425/job/31410124480)",
              "createdAt": "2024-10-11T13:31:57Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "b4d3a1816226850a67331779923cd31e26fcc696",
                "additions": 172,
                "deletions": 0,
                "committedDate": "2024-10-11T12:44:43Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2585000f558d3e5f4042af66891eb8f694d1f29f",
                "additions": 160,
                "deletions": 172,
                "committedDate": "2024-10-11T12:44:43Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bb9dbc4e4f6eaeb6185f08fc443e08385bbc3c81",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-10-11T12:44:43Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8b66c816172148915e9d426099570fc6313fde18",
                "additions": 5,
                "deletions": 1,
                "committedDate": "2024-10-11T12:48:19Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-WGw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633231/job/31409018395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-WaA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633229/job/31409018472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-RWw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409017179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-R6A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409017320"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-X7w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633232/job/31409018863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-TGw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409017627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-QtQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409017013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-W6w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633232/job/31409018603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-UaQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409017961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-TGA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409017624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB-Vzg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409018318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUCZcbg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409462382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUB_Ydg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31409035382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUCAGvQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16447&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHbsL-2w",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6349",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-03T11:39:36Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/RCLike/Inner.lean",
              "additions": 163,
              "deletions": 0
            }
          ]
        },
        "headRefName": "dl2inner",
        "headRefOid": "8b66c816172148915e9d426099570fc6313fde18",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c56QIaK",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6L0Npk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-03T14:02:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M1mTs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-11T13:49:38Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16447,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Lsi8i",
              "body": "looks mostly good to me. It would be nice to have the inner product space construction for a nonnegative weight function (obviously not as an instance) just so that we have access to it when we want it.",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-02T18:14:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LtCiq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-02T18:50:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LuAm8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-02T20:57:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LuD47",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-02T21:06:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Lz7CA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-03T13:35:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L0JQv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-03T13:56:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L0Npk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-03T14:02:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L0N8c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-03T14:03:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L1KpH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-03T15:32:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L1LPq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-03T15:33:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M1mTs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-11T13:49:38Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qZPUu",
                    "body": "The module docstring needs updating now.",
                    "createdAt": "2024-10-02T18:05:14Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qaKLp",
                    "body": "Does it? It seems up to date. `RCLike.innerProductSpace` still has its conjugation on the left, no?",
                    "createdAt": "2024-10-02T20:57:29Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qd9lG",
                    "body": "There's no weight in that sum.",
                    "createdAt": "2024-10-03T13:35:51Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qev_9",
                    "body": "Sure, but I'm not saying that they are equal. I'm saying they are using the same convention when it comes to picking a side in which the inner product is antilinear.",
                    "createdAt": "2024-10-03T15:33:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rG93c",
                    "body": "This reads to me as if you are saying they are equal: \r\n\"This file defines the weighted L2 inner product of functions `f g : Œπ ‚Üí R` where `Œπ` is a fintype as\r\n`‚àë i, conj (f i) * g i`.\"\r\nAs Jireh says, this sentence says you're defining the weighted inner product, but there's no weighting here",
                    "createdAt": "2024-10-11T13:49:38Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qZQLp",
                    "body": "I'm not sure about the name here. `RCLike.cWeight` doesn't seem very descriptive. And it doesn't seem to be connected meaningfully to the notation below.",
                    "createdAt": "2024-10-02T18:06:48Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qaML1",
                    "body": "What would you suggest instead?\r\n\r\nThere might an option of writing a more complicated elaborator that figures `Œπ` out from `f`, but I haven't written such a complicated thing yet.",
                    "createdAt": "2024-10-02T21:06:33Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qeGCU",
                    "body": "I don't know, which is why I didn't suggest anything before. Maybe `cardWeight`? I'm not going to force it though if you don't like it better.",
                    "createdAt": "2024-10-03T13:56:10Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qeI2n",
                    "body": "`c` stands for \"compact\", not \"card\"",
                    "createdAt": "2024-10-03T14:03:20Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qZRrQ",
                    "body": "```suggestion\r\n    ‚ü™f, c ‚Ä¢ g‚ü´_[ùïú, w] = c * ‚ü™f, g‚ü´_[ùïú, w] := by\r\n```",
                    "createdAt": "2024-10-02T18:09:16Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qZjCg",
                    "body": "`c : ùïù`, so that's wrong?",
                    "createdAt": "2024-10-02T18:50:30Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qeIru",
                    "body": "oops, sorry, but now I'm just confused about why you want the lemma in this generality without the corresponding version for `left`? It seems weird to have this asymmetry. (note: I realize that these assumptions aren't sufficient for `left`, you would need some `StarModule` assumptions).",
                    "createdAt": "2024-10-03T14:02:52Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qevnz",
                    "body": "The reason was that we don't have a version of `inner_smul_left` in a satisfying generality, but I figured this was fixable. See #17384.",
                    "createdAt": "2024-10-03T15:32:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qZUHn",
                    "body": "If you `open ComplexOrder`, you can get `0 ‚â§ ‚ü™f, f‚ü´_[ùïú, w]` for any `f` and `RCLike ùïú`.",
                    "createdAt": "2024-10-02T18:13:31Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-WGw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633231/job/31409018395"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-WaA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633229/job/31409018472"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-RWw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409017179"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-R6A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409017320"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-X7w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633232/job/31409018863"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-TGw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409017627"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-QtQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409017013"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-W6w",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292633232/job/31409018603"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-UaQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409017961"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-TGA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409017624"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB-Vzg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632846/job/31409018318"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUCZcbg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11292632835/job/31409462382"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUB_Ydg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31409035382"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUCAGvQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16447&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHbsL-2w",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6349",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: L2 inner product of finite sequences",
        "updatedAt": "2024-10-11T13:49:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16447",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VK2v6zwAAAANJP9Aq",
              "createdAt": "2024-09-03T11:39:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5U0yX6",
              "createdAt": "2024-09-03T11:40:12Z",
              "source": {
                "id": "PR_kwDOFcwZ1c542pEN",
                "title": "feat: Pontryagin duality for finite abelian groups",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15999"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KqJcG",
              "createdAt": "2024-09-03T11:40:17Z",
              "body": "### PR summary [8b66c81617](https://github.com/leanprover-community/mathlib4/pull/16447/commits/8b66c816172148915e9d426099570fc6313fde18)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.RCLike.Inner`|1650|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_wInner_le`\n`+ cWeight`\n`+ conj_wInner_symm`\n`+ inner_eq_wInner_one`\n`+ linearIndependent_of_ne_zero_of_wInner_cWeight_eq_zero`\n`+ linearIndependent_of_ne_zero_of_wInner_one_eq_zero`\n`+ mul_wInner_left`\n`+ norm_wInner_le`\n`+ wInner`\n`+ wInner_add_left`\n`+ wInner_add_right`\n`+ wInner_cWeight_const_left`\n`+ wInner_cWeight_const_right`\n`+ wInner_cWeight_eq_expect`\n`+ wInner_cWeight_eq_smul_wInner_one`\n`+ wInner_const_left`\n`+ wInner_const_right`\n`+ wInner_neg_left`\n`+ wInner_neg_right`\n`+ wInner_nonneg`\n`+ wInner_of_isEmpty`\n`+ wInner_one_const_left`\n`+ wInner_one_const_right`\n`+ wInner_one_eq_inner`\n`+ wInner_one_eq_sum`\n`+ wInner_smul_left`\n`+ wInner_smul_right`\n`+ wInner_sub_left`\n`+ wInner_sub_right`\n`+ wInner_zero_left`\n`+ wInner_zero_right`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LBwGo",
              "createdAt": "2024-09-05T19:34:34Z",
              "body": "Am I missing a good reason not to instead create an intermediate type class under `InnerProductSpace` that contains the algebraic operations but none of the topology?\n\nAt a glance, that seems like it would solve the duplication problems here, and I know this has been requested before.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LB7Ht",
              "createdAt": "2024-09-05T20:04:18Z",
              "body": "What instances would there be for this typeclass? I suspect that answering this question will quickly make you run into the problem that there are two useful (to discrete analysis) inner products on `G ‚Üí R` given inner products on `R` and `Fintype G`, namely\r\n* the usual \"discrete\" inner product `‚àë i, conj (f i) * g i`\r\n* the less usual but nevertheless crucial \"compact\" inner product `ùîº i, conj (f i) * g i` (using the notation from #15883)\r\n\r\nI really need both because Plancherel says that [the *discrete* inner product of the compact Fourier transforms of `f` and `g` is equal to the *compact* inner product of `f` and `g`](https://yaeldillies.github.io/LeanAPAP/docs/LeanAPAP/Prereqs/FourierTransform/Compact.html#dL2Inner_cft). Or alternatively [the *compact* inner product of the discrete Fourier transforms of `f` and `g` is equal to the *discrete* inner product of `f` and `g`](https://yaeldillies.github.io/LeanAPAP/docs/LeanAPAP/Prereqs/FourierTransform/Discrete.html#cL2Inner_dft).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6VK2v6zwAAAANfdK5I",
              "createdAt": "2024-10-02T10:17:15Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6VK2v6zwAAAANfda_S",
              "createdAt": "2024-10-02T10:22:58Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Lsi8i",
              "createdAt": "2024-10-02T18:05:14Z",
              "body": "looks mostly good to me. It would be nice to have the inner product space construction for a nonnegative weight function (obviously not as an instance) just so that we have access to it when we want it.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VK2v6zwAAAANf3rPj",
              "createdAt": "2024-10-02T18:14:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Ob92L",
              "createdAt": "2024-10-02T21:05:32Z",
              "body": "> looks mostly good to me. It would be nice to have the inner product space construction for a nonnegative weight function (obviously not as an instance) just so that we have access to it when we want it.\r\n\r\nThis is hard to provide without the weighted Lp norm (which is a future PR), so I have left a TODO instead.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6VK2v6zwAAAANf_X4q",
              "createdAt": "2024-10-02T21:05:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Oinm8",
              "createdAt": "2024-10-03T13:35:06Z",
              "body": "That's totally fine. Thanks!",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VK2v6zwAAAANgklJ9",
              "createdAt": "2024-10-03T14:03:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6VK2v6zwAAAANgp1AF",
              "createdAt": "2024-10-03T15:33:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VK2v6zwAAAANgp1AV",
              "createdAt": "2024-10-03T15:33:50Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6VK2v6zwAAAANh56tk",
              "createdAt": "2024-10-05T10:47:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OwQqX",
              "createdAt": "2024-10-05T10:47:35Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17384~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VK2v6zwAAAANh6GgM",
              "createdAt": "2024-10-05T11:13:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6VK2v6zwAAAANh7uyw",
              "createdAt": "2024-10-05T13:34:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6VK2v6zwAAAANh7u3b",
              "createdAt": "2024-10-05T13:34:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pe7iH",
              "createdAt": "2024-10-11T11:51:38Z",
              "body": "bors d+",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pe7jN",
              "createdAt": "2024-10-11T11:51:40Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VK2v6zwAAAANmrWXn",
              "createdAt": "2024-10-11T11:51:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6VK2v6zwAAAANmuH09",
              "createdAt": "2024-10-11T12:48:26Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PfTQs",
              "createdAt": "2024-10-11T12:49:24Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PfmJo",
              "createdAt": "2024-10-11T13:31:57Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11292985425/job/31410123707)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11292985425/job/31410124480)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6VK2v6zwAAAANmwZ8T",
              "createdAt": "2024-10-11T13:31:58Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6VK2v6zwAAAANmwaKV",
              "createdAt": "2024-10-11T13:32:02Z"
            }
          ]
        }
      }
    }
  }
}
