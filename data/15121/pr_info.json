{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 40,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Eloitor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6GF6vG",
              "body": "### PR summary [7ebce4a160](https://github.com/leanprover-community/mathlib4/pull/15121/commits/7ebce4a160a692a9d2316ffd80c51a7d0d816511)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ SplitEpi.op`\n`+ SplitEpi.unop`\n`+ SplitMono.op`\n`+ SplitMono.unop`\n`+ isSplitEpi_iff_isSplitMono_unop`\n`+ isSplitMono_iff_isSplitEpi_unop`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-07-25T07:58:02Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7ebce4a160a692a9d2316ffd80c51a7d0d816511",
                "additions": 40,
                "deletions": 0,
                "committedDate": "2024-08-06T10:57:40Z",
                "author": {
                  "name": "Eloi Torrents",
                  "email": "eloitor@disroot.org"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JDz4A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502676/job/29537399776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JFAnQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512068/job/29537419421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JDzxw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502677/job/29537399751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JFAVw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512072/job/29537419351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JDzdQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502678/job/29537399669"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JFATQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512066/job/29537419341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQa4g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217569/job/28400949986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQa6A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217568/job/28400949992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQX5g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400949222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQX5A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQcRQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217571/job/28400950341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JDzgg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502676/job/29537399682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG4JFAVQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512068/job/29537419349"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQbmA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400950168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQZpg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949670"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQbeg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217571/job/28400950138"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQaAQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400949761"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQYpg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949414"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQajw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949903"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQY0Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400949457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQcmg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400950426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnOTPTg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28402044750"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNQwrA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28400955564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGnNRsxw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15121&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-25T07:57:24Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/EpiMono.lean",
              "additions": 40,
              "deletions": 0
            }
          ]
        },
        "headRefName": "eloitor/category_split_op_iff",
        "headRefOid": "7ebce4a160a692a9d2316ffd80c51a7d0d816511",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c52bh2z",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HkfUn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-09-01T21:31:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Doyrf",
              "body": "I'd suggest \r\n1. Filling the `sorry`'s in \r\n```lean\r\ndef SplitMono.op {X Y : C} {f : X ⟶ Y} (sm : SplitMono f) : SplitEpi f.op where\r\n  section_ := sorry\r\n  id := sorry\r\n\r\ndef SplitMono.unop {X Y : C} {f : Opposite.op Y ⟶  Opposite.op X} (sm : SplitMono f) : \r\n    SplitEpi f.unop where\r\n  section_ := sorry\r\n  id := sorry\r\n\r\ndef SplitEpi.op {X Y : C} {f : X ⟶ Y} (se : SplitEpi f) : SplitMono f.op where\r\n  retraction := sorry\r\n  id := sorry\r\n\r\ndef SplitEpi.unop {X Y : C} {f : Opposite.op Y ⟶  Opposite.op X} (se : SplitEpi f) : \r\n    SplitMono f.unop where\r\n  retraction := sorry\r\n  id := sorry\r\n```\r\n2. Stating the `iff` results in terms of morphisms in the opposite category \r\n```lean\r\ntheorem isSplitEpi_iff_isSplitMono_unop {X Y : C} (f : Opposite.op X ⟶  Opposite.op Y) : IsSplitEpi f ↔ IsSplitMono f.unop := sorry\r\n \r\ntheorem isSplitMono_iff_isSplitEpi_unop {X Y : C} (f : Opposite.op Y ⟶  Opposite.op Y) : IsSplitMono f ↔ IsSplitEpi f.unop := sorry\r\n```\r\nand using the above `def`s to fill these in. ",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-07-30T19:27:39Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15121,
        "potentialMergeCommit": {
          "oid": "cc0b10beafb764733567376bab7d14b082e63f08"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Doyrf",
              "body": "I'd suggest \r\n1. Filling the `sorry`'s in \r\n```lean\r\ndef SplitMono.op {X Y : C} {f : X ⟶ Y} (sm : SplitMono f) : SplitEpi f.op where\r\n  section_ := sorry\r\n  id := sorry\r\n\r\ndef SplitMono.unop {X Y : C} {f : Opposite.op Y ⟶  Opposite.op X} (sm : SplitMono f) : \r\n    SplitEpi f.unop where\r\n  section_ := sorry\r\n  id := sorry\r\n\r\ndef SplitEpi.op {X Y : C} {f : X ⟶ Y} (se : SplitEpi f) : SplitMono f.op where\r\n  retraction := sorry\r\n  id := sorry\r\n\r\ndef SplitEpi.unop {X Y : C} {f : Opposite.op Y ⟶  Opposite.op X} (se : SplitEpi f) : \r\n    SplitMono f.unop where\r\n  retraction := sorry\r\n  id := sorry\r\n```\r\n2. Stating the `iff` results in terms of morphisms in the opposite category \r\n```lean\r\ntheorem isSplitEpi_iff_isSplitMono_unop {X Y : C} (f : Opposite.op X ⟶  Opposite.op Y) : IsSplitEpi f ↔ IsSplitMono f.unop := sorry\r\n \r\ntheorem isSplitMono_iff_isSplitEpi_unop {X Y : C} (f : Opposite.op Y ⟶  Opposite.op Y) : IsSplitMono f ↔ IsSplitEpi f.unop := sorry\r\n```\r\nand using the above `def`s to fill these in. ",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-07-30T19:27:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6HkfRg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-09-01T21:30:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6HkfUn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-09-01T21:31:46Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nuU2M",
                    "body": "In mathlib, we basically do not use `λ`. Could you use `fun` instead?\r\nIn addition to the `isSplitEpi_iff_...` theorems, could you also add `splitEpi.opEquiv`, etc?",
                    "createdAt": "2024-09-01T21:30:21Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nuU4x",
                    "body": "It would be better if `f : Y ⟶ X` was a morphisms between objects `Y` and `X` of the opposite category of `C`, instead of `op Y ⟶ op X` with `X` and `Y` in `C`.",
                    "createdAt": "2024-09-01T21:31:46Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE3Nzk1NTcy",
              "login": "Eloitor"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjI1NjIzODI5",
              "login": "dagurtomas"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JDz4A",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502676/job/29537399776"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JFAnQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512068/job/29537419421"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JDzxw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502677/job/29537399751"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JFAVw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512072/job/29537419351"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JDzdQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502678/job/29537399669"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JFATQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512066/job/29537419341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQa4g",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217569/job/28400949986"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQa6A",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217568/job/28400949992"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQX5g",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400949222"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQX5A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQcRQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217571/job/28400950341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JDzgg",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657502676/job/29537399682"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG4JFAVQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10657512068/job/29537419349"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQbmA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400950168"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQZpg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949670"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQbeg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217571/job/28400950138"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQaAQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400949761"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQYpg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949414"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQajw",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28400949903"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQY0Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400949457"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQcmg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217284/job/28400950426"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnOTPTg",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10265217286/job/28402044750"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNQwrA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28400955564"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGnNRsxw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15121&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: iff theorems for IsSplitEpi and IsSplitMono in opposite category",
        "updatedAt": "2024-09-01T21:31:46Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15121",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QzB18zwAAAAMtGp0x",
              "createdAt": "2024-07-25T07:57:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GF6vG",
              "createdAt": "2024-07-25T07:58:02Z",
              "body": "### PR summary [7ebce4a160](https://github.com/leanprover-community/mathlib4/pull/15121/commits/7ebce4a160a692a9d2316ffd80c51a7d0d816511)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ SplitEpi.op`\n`+ SplitEpi.unop`\n`+ SplitMono.op`\n`+ SplitMono.unop`\n`+ isSplitEpi_iff_isSplitMono_unop`\n`+ isSplitMono_iff_isSplitEpi_unop`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6QzB18zwAAAAMwIELG",
              "createdAt": "2024-07-30T08:42:53Z",
              "requestedReviewer": {
                "id": "U_kgDOBfZl7g",
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Doyrf",
              "createdAt": "2024-07-30T19:27:39Z",
              "body": "I'd suggest \r\n1. Filling the `sorry`'s in \r\n```lean\r\ndef SplitMono.op {X Y : C} {f : X ⟶ Y} (sm : SplitMono f) : SplitEpi f.op where\r\n  section_ := sorry\r\n  id := sorry\r\n\r\ndef SplitMono.unop {X Y : C} {f : Opposite.op Y ⟶  Opposite.op X} (sm : SplitMono f) : \r\n    SplitEpi f.unop where\r\n  section_ := sorry\r\n  id := sorry\r\n\r\ndef SplitEpi.op {X Y : C} {f : X ⟶ Y} (se : SplitEpi f) : SplitMono f.op where\r\n  retraction := sorry\r\n  id := sorry\r\n\r\ndef SplitEpi.unop {X Y : C} {f : Opposite.op Y ⟶  Opposite.op X} (se : SplitEpi f) : \r\n    SplitMono f.unop where\r\n  retraction := sorry\r\n  id := sorry\r\n```\r\n2. Stating the `iff` results in terms of morphisms in the opposite category \r\n```lean\r\ntheorem isSplitEpi_iff_isSplitMono_unop {X Y : C} (f : Opposite.op X ⟶  Opposite.op Y) : IsSplitEpi f ↔ IsSplitMono f.unop := sorry\r\n \r\ntheorem isSplitMono_iff_isSplitEpi_unop {X Y : C} (f : Opposite.op Y ⟶  Opposite.op Y) : IsSplitMono f ↔ IsSplitEpi f.unop := sorry\r\n```\r\nand using the above `def`s to fill these in. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QzB18zwAAAAMx6OaS",
              "createdAt": "2024-08-01T08:50:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QzB18zwAAAAMx6Oaj",
              "createdAt": "2024-08-01T08:50:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6QzB18zwAAAAM1KSoH",
              "createdAt": "2024-08-06T10:55:37Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6QzB18zwAAAAM1KY3M",
              "createdAt": "2024-08-06T10:57:49Z"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HkfRg",
              "createdAt": "2024-09-01T21:30:21Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HkfUn",
              "createdAt": "2024-09-01T21:31:46Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            }
          ]
        }
      }
    }
  }
}
