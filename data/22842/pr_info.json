{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 412,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "loefflerd"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR makes the following changes:\r\n\r\n- Define a mixin class `NormMulClass` for norms satisfying `‚Äña * b‚Äñ = ‚Äña‚Äñ * ‚Äñb‚Äñ`, and show that any `NormedDivisionRing` satisfies it.\r\n- Generalise some of the lemmas we currently have for `NormedDivisionRing` or `NormedField` to any normed ring satisfying `NormMulClass`.\r\n- Some minor cleanup I noticed along the way (e.g. deleting a bunch of unnecessary instances in `PadicInt`).\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n\r\n-->\r\n- [ ] depends on: #22871\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 36,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6h1oop",
              "body": "### PR summary [4d64252caf](https://github.com/leanprover-community/mathlib4/pull/22842/commits/4d64252cafb69b70cb3acb7c4cf0104673b46b79)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.Normed.Ring.Lemmas | 1330 | 1354 | +24 (+1.80%) |\n| Mathlib.Analysis.Normed.Field.Basic | 1204 | 1203 | -1 (-0.08%) |\n| Mathlib.Analysis.Asymptotics.Defs | 1205 | 1204 | -1 (-0.08%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>10 files</summary> `Mathlib.Analysis.Asymptotics.Defs` `Mathlib.Analysis.Asymptotics.Lemmas` `Mathlib.Analysis.Normed.Field.Basic` `Mathlib.Analysis.Normed.Field.Ultra` `Mathlib.Analysis.Normed.Group.NullSubmodule` `Mathlib.Analysis.Normed.MulAction` `Mathlib.Analysis.Normed.Operator.ContinuousLinearMap` `Mathlib.Order.Filter.ZeroAndBoundedAtFilter` `Mathlib.Topology.Algebra.InfiniteSum.Field` `Mathlib.Topology.MetricSpace.CauSeqFilter`</details>|-1|\n|<details><summary>3 files</summary> `Mathlib.NumberTheory.LegendreSymbol.GaussEisensteinLemmas` `Mathlib.NumberTheory.SumTwoSquares` `Mathlib.NumberTheory.Zsqrtd.QuadraticReciprocity`</details>|2|\n|<details><summary>4 files</summary> `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital` `Mathlib.Analysis.Normed.Field.Instances` `Mathlib.Topology.Algebra.Polynomial` `Mathlib.Topology.ContinuousMap.Polynomial`</details>|22|\n| `Mathlib.Analysis.Meromorphic.Divisor.Basic`|23|\n|<details><summary>4 files</summary> `Mathlib.Analysis.Normed.Ring.InfiniteSum` `Mathlib.Analysis.Normed.Ring.Lemmas` `Mathlib.Analysis.NormedSpace.Int` `Mathlib.Topology.Bornology.BoundedOperation`</details>|24|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Dilation.mulLeft`\n`+ Dilation.mulRight`\n`+ Int.instNormMulClass`\n`+ NormMulClass`\n`+ NormMulClass.induced`\n`+ NormMulClass.isAbsoluteValue_norm`\n`+ NormMulClass.isDomain`\n`+ NormMulClass.toNormOneClass`\n`+ instance (priority := 100) NormedDivisionRing.toNormMulClass [Œ≤ : NormedDivisionRing Œ±] :`\n`+ instance : NormMulClass ‚Ñ§_[p] := ‚ü®fun x y ‚Ü¶ by simp [norm_def]‚ü©`\n`+ instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤)`\n`+ instance [NonUnitalNormedCommRing E] : NonUnitalNormedCommRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NonUnitalNormedRing E] : NonUnitalNormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NonUnitalSeminormedCommRing E] : NonUnitalSeminormedCommRing (RestrictScalars ùïú ùïú' E)`\n`+ instance [NonUnitalSeminormedRing E] : NonUnitalSeminormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NormedAddCommGroup E] : NormedAddCommGroup (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NormedCommRing E] : NormedCommRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NormedRing E] : NormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [SeminormedAddCommGroup E] : SeminormedAddCommGroup (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [SeminormedCommRing E] : SeminormedCommRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [SeminormedRing E] : SeminormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ toNormMulClass`\n`+ toSeminormedRing`\n`+-- norm_mul`\n`- Int.instNormOneClass`\n`- antilipschitzWith_mul_left`\n`- instNormedSpace`\n`- instance (priority := 900) NormedDivisionRing.to_normOneClass : NormOneClass Œ±`\n`- instance : Add ‚Ñ§_[p] := (by infer_instance : Add (subring p))`\n`- instance : AddCommGroup ‚Ñ§_[p] := (by infer_instance : AddCommGroup (subring p))`\n`- instance : IsDomain ‚Ñ§_[p] := Function.Injective.isDomain (subring p).subtype Subtype.coe_injective`\n`- instance : Mul ‚Ñ§_[p] := (by infer_instance : Mul (subring p))`\n`- instance : Neg ‚Ñ§_[p] := (by infer_instance : Neg (subring p))`\n`- instance : NormOneClass ‚Ñ§_[p]`\n`- instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤) where norm_smul_le k f := (norm_smul_le k f.toBCF :)`\n`- instance : One ‚Ñ§_[p] := ‚ü®‚ü®1, by norm_num‚ü©‚ü©`\n`- instance : Sub ‚Ñ§_[p] := (by infer_instance : Sub (subring p))`\n`- instance : Zero ‚Ñ§_[p] := (by infer_instance : Zero (subring p))`\n`- instance [I : NonUnitalNormedCommRing E] :`\n`- instance [I : NonUnitalNormedRing E] :`\n`- instance [I : NonUnitalSeminormedCommRing E] :`\n`- instance [I : NonUnitalSeminormedRing E] :`\n`- instance [I : NormedAddCommGroup E] :`\n`- instance [I : NormedCommRing E] :`\n`- instance [I : NormedRing E] :`\n`- instance [I : SeminormedAddCommGroup E] :`\n`- instance [I : SeminormedCommRing E] :`\n`- instance [I : SeminormedRing E] :`\n`- isAbsoluteValue`\n`- isAbsoluteValue_norm`\n`- norm_pow`\n`- toSemiNormedRing`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-11T17:41:02Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h-LvE",
              "body": "> * Rename the field `norm_smul_le` of `NormedSpace` and `NormedAlgebra` to `norm_smul_le'`, to avoid a naming conflict with the lemma inherited via `IsBoundedSMul`. [_These structure field renames are trivial, but make up most of the diff._]\r\n\r\nWhat's the conflict here? Why does it matter if the field name is the same as a lemma name?",
              "createdAt": "2025-03-12T10:41:07Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h-MMX",
              "body": "> * Rename the field `norm_mul` of the normed ring classes, which states that `‚Äña * b‚Äñ ‚â§ ‚Äña‚Äñ * ‚Äñb‚Äñ`, to `norm_mul_le`, to avoid a naming conflict with the `norm_mul` of `NormMulClass`.\r\n\r\nCould you split this to its own PR? Independently of whether it clashes, I agree this is a better name.",
              "createdAt": "2025-03-12T10:41:37Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h-Nwq",
              "body": "> > * Rename the field `norm_smul_le` of `NormedSpace` and `NormedAlgebra` to `norm_smul_le'`, to avoid a naming conflict with the lemma inherited via `IsBoundedSMul`. [_These structure field renames are trivial, but make up most of the diff._]\r\n> \r\n> What's the conflict here? Why does it matter if the field name is the same as a lemma name?\r\n\r\nIf you have `NormedSpace` open, if you try to apply `norm_smul_le` you have to specify whether you mean `_root_.norm_smul_le` or `NormedSpace.norm_smul_le` (which is annoying since they are both, in fact, asserting exactly the same thing!)",
              "createdAt": "2025-03-12T10:44:20Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h-W2Z",
              "body": "\r\n> If you have `NormedSpace` open, if you try to apply `norm_smul_le` you have to specify whether you mean `_root_.norm_smul_le` or `NormedSpace.norm_smul_le` (which is annoying since they are both, in fact, asserting exactly the same thing!)\r\n\r\nThen the fix is to put `protected` before `norm_smul_le` in `NormedSpace`",
              "createdAt": "2025-03-12T10:58:47Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h-g-_",
              "body": "> > If you have `NormedSpace` open, if you try to apply `norm_smul_le` you have to specify whether you mean `_root_.norm_smul_le` or `NormedSpace.norm_smul_le` (which is annoying since they are both, in fact, asserting exactly the same thing!)\r\n> \r\n> Then the fix is to put `protected` before `norm_smul_le` in `NormedSpace`\r\n\r\nCan you protect a structure field, rather than a lemma? I didn't know that was possible. (We seem to have a pretty consistent design pattern where `foo'` is a structure field and `foo` the lemma which accesses it.)",
              "createdAt": "2025-03-12T11:15:28Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h_JX-",
              "body": "> Can you protect a structure field, rather than a lemma? \r\n\r\nYes!\r\n\r\n> We seem to have a pretty consistent design pattern where `foo'` is a structure field and `foo` the lemma which accesses it.\r\n\r\nUsually the pattern is that `foo'` is the lemma about some internal implementation detail, like `toFun`, and `foo` is the lemma about the spelling using a notation class.",
              "createdAt": "2025-03-12T12:13:32Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6iAFBB",
              "body": "> > Can you protect a structure field, rather than a lemma?\r\n> \r\n> Yes!\r\n> \r\n> > We seem to have a pretty consistent design pattern where `foo'` is a structure field and `foo` the lemma which accesses it.\r\n> \r\n> Usually the pattern is that `foo'` is the lemma about some internal implementation detail, like `toFun`, and `foo` is the lemma about the spelling using a notation class.\r\n\r\n`NormedDivisionRing.norm_mul'` doesn't seem to fit this. I guess that's because `norm_mul` (unprimed) was previously used for the inequality, so should we now rename `NormedDivisionRing.norm_mul'` to `NormedDivisionRing.norm_mul`?",
              "createdAt": "2025-03-12T13:42:23Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6iCA5C",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#22871\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-03-12T16:22:32Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9e78c8316177759785fbf15cfad05c1ef69e0f59",
                "additions": 117,
                "deletions": 144,
                "committedDate": "2025-03-12T15:47:10Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pAlg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648037526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAdyfYw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13827849401/job/38685941603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAdzKcg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13827853011/job/38685952626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pICA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657832/job/38648039432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAdygEg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13827849402/job/38685941778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAdzKtA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13827853018/job/38685952692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pHAA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657823/job/38648039168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAdyfcw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13827849413/job/38685941619"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAdzKbw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13827853010/job/38685952623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5uOmQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38648123033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pHKQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657820/job/38648039209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5o-Kg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648036906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5uRKA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38648123688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pJmQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657820/job/38648039833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pDHg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648038174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_7IorA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38649604268"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5puBw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38648049159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5rmgg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22871&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b7760ac1d7f4e02113e63dbfa97694ee953a4683",
                "additions": 176,
                "deletions": 180,
                "committedDate": "2025-03-12T15:58:01Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_8Ibiw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13816410760/job/38650649483"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kNxg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815938472/job/38649007558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kXNg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815939344/job/38649009974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kVLg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815939291/job/38649009454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kNOA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815938508/job/38649007416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kXHQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815939303/job/38649009949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kRTQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815938472/job/38649008461"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kPFA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815938508/job/38649007892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kVEA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815939303/job/38649009424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6kT2w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815938472/job/38649009115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_7_YBg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815938508/job/38650501126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6k4UA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38649018448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_6mncA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22842&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "95ae4efdd605d2bd66e9405e970c3fee5c09d6dc",
                "additions": 66,
                "deletions": 43,
                "committedDate": "2025-03-12T20:12:52Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDm3w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751228/job/38665250527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDrQQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751516/job/38665251649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDqlw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751517/job/38665251479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDoSQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751224/job/38665250889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDsMQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751512/job/38665251889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDoew",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751228/job/38665250939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDmuQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751224/job/38665250489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDqwg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751512/job/38665251522"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKDqBA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751228/job/38665251332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJALQ6Pw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13820751224/job/38666517055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKEGAA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38665258496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAKFnYQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22842&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7ca7a1e640cc9b717b8087d4cbf88acf4192daec",
                "additions": 12,
                "deletions": 6,
                "committedDate": "2025-03-12T20:22:20Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrVnQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821585647/job/38667998621"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMraZA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821586103/job/38667999844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMratQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821586102/job/38667999925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrWng",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821585645/job/38667998878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrabw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821586097/job/38667999855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrWwg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821585647/job/38667998914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrVng",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821585645/job/38667998622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrbog",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821586097/job/38668000162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMrXvw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821585647/job/38667999167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJANNoug",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13821585645/job/38668560570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMry9Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38668006133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAMtJcg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22842&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4d64252cafb69b70cb3acb7c4cf0104673b46b79",
                "additions": 42,
                "deletions": 38,
                "committedDate": "2025-03-12T21:59:11Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9V9A",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336897/job/38670390772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9V_Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336899/job/38670390781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9Xaw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337183/job/38670391147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9XMw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337185/job/38670391091"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9Y6Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337197/job/38670391529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9Uzg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336897/job/38670390478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9UsA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336899/job/38670390448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9YDA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337197/job/38670391308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9W0Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336899/job/38670390993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAPUwQQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336897/job/38670774337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO9udg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38670397046"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJAO-yGw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22842&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-11T17:30:55Z",
        "deletions": 410,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Asymptotics/Defs.lean",
              "additions": 42,
              "deletions": 38
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/CStarMatrix.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Matrix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Multiplier.lean",
              "additions": 2,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/lpSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/BalancedCoreHull.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Matrix.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Spectrum.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/TrivSqZeroExt.lean",
              "additions": 12,
              "deletions": 13
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Unitization.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/UnitizationL1.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Basic.lean",
              "additions": 13,
              "deletions": 66
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Lemmas.lean",
              "additions": 8,
              "deletions": 41
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/UnitBall.lean",
              "additions": 12,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Quotient.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/lpSpace.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/Basic.lean",
              "additions": 34,
              "deletions": 57
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/Completion.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Analysis/Normed/Order/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Ring/Basic.lean",
              "additions": 158,
              "deletions": 39
            },
            {
              "path": "Mathlib/Analysis/Normed/Ring/Lemmas.lean",
              "additions": 73,
              "deletions": 20
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/Basic.lean",
              "additions": 3,
              "deletions": 10
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/NormedSpace.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/PiTensorProduct/InjectiveSeminorm.lean",
              "additions": 1,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Quaternion.lean",
              "additions": 1,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSpace/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Lebesgue/VolumeOfBalls.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/NumberTheory/Padics/Hensel.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/Padics/PadicIntegers.lean",
              "additions": 6,
              "deletions": 49
            },
            {
              "path": "Mathlib/NumberTheory/Padics/PadicNumbers.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Valued/NormedValued.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Bounded/Basic.lean",
              "additions": 8,
              "deletions": 12
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Compact.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ContinuousMapZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ZeroAtInfty.lean",
              "additions": 4,
              "deletions": 4
            }
          ]
        },
        "headRefName": "DL_norm_mul",
        "headRefOid": "4d64252cafb69b70cb3acb7c4cf0104673b46b79",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6ONQLA",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6fvSPj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2025-03-12T22:00:26Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22842,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6fvSPj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2025-03-12T22:00:26Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52wPUc",
                    "body": "**[lint-style (comment with \"bot fix style\" to have the bot commit all style suggestions)]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    f =o[l] fun x => c * g x :=\n```\n\n<!-- __reviewdog__:ChA0YzE1YjI3YmMxNmMzOTNmElZsaW50LXN0eWxlIChjb21tZW50IHdpdGggImJvdCBmaXggc3R5bGUiIHRvIGhhdmUgdGhlIGJvdCBjb21taXQgYWxsIHN0eWxlIHN1Z2dlc3Rpb25zKQ== -->\n",
                    "createdAt": "2025-03-12T22:00:25Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52wPUh",
                    "body": "**[lint-style (comment with \"bot fix style\" to have the bot commit all style suggestions)]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\ntheorem IsBigOWith.pow [Nontrivial S] [NormOneClass R]\n```\n\n<!-- __reviewdog__:ChBiMWRkNjQ1ODc1NTI2YzNlElZsaW50LXN0eWxlIChjb21tZW50IHdpdGggImJvdCBmaXggc3R5bGUiIHRvIGhhdmUgdGhlIGJvdCBjb21taXQgYWxsIHN0eWxlIHN1Z2dlc3Rpb25zKQ== -->\n",
                    "createdAt": "2025-03-12T22:00:25Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52wPUk",
                    "body": "**[lint-style (comment with \"bot fix style\" to have the bot commit all style suggestions)]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\ntheorem IsBigOWith.of_pow [Nontrivial S] {n : ‚Ñï} {f : Œ± ‚Üí S} {g : Œ± ‚Üí R}\n    (h : IsBigOWith c l (f ^ n) (g ^ n)) (hn : n ‚â† 0) (hc : c ‚â§ c' ^ n) (hc' : 0 ‚â§ c') :\n```\n\n<!-- __reviewdog__:ChBlNjAwNTgzOTAyNTllN2IyElZsaW50LXN0eWxlIChjb21tZW50IHdpdGggImJvdCBmaXggc3R5bGUiIHRvIGhhdmUgdGhlIGJvdCBjb21taXQgYWxsIHN0eWxlIHN1Z2dlc3Rpb25zKQ== -->\n",
                    "createdAt": "2025-03-12T22:00:25Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52wPUm",
                    "body": "**[lint-style (comment with \"bot fix style\" to have the bot commit all style suggestions)]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\ntheorem IsLittleO.of_pow [Nontrivial S] {f : Œ± ‚Üí S} {g : Œ± ‚Üí R} {n : ‚Ñï}\n```\n\n<!-- __reviewdog__:ChA3YmJiZmRiYjg3NzViMDQ3ElZsaW50LXN0eWxlIChjb21tZW50IHdpdGggImJvdCBmaXggc3R5bGUiIHRvIGhhdmUgdGhlIGJvdCBjb21taXQgYWxsIHN0eWxlIHN1Z2dlc3Rpb25zKQ== -->\n",
                    "createdAt": "2025-03-12T22:00:25Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9V9A",
                "name": "Lint style",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336897/job/38670390772"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9V_Q",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336899/job/38670390781"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9Xaw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337183/job/38670391147"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9XMw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337185/job/38670391091"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9Y6Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337197/job/38670391529"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9Uzg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336897/job/38670390478"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9UsA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336899/job/38670390448"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9YDA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822337197/job/38670391308"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9W0Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336899/job/38670390993"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAPUwQQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13822336897/job/38670774337"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO9udg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38670397046"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJAO-yGw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22842&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Analysis/Normed): Class for strict multiplicativity of norm",
        "updatedAt": "2025-03-13T05:45:07Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22842",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6th6jmzwAAAAPjCVjr",
              "createdAt": "2025-03-11T17:30:55Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6th6jmzwAAAAPjDGK9",
              "createdAt": "2025-03-11T17:40:02Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h1oop",
              "createdAt": "2025-03-11T17:41:02Z",
              "body": "### PR summary [4d64252caf](https://github.com/leanprover-community/mathlib4/pull/22842/commits/4d64252cafb69b70cb3acb7c4cf0104673b46b79)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.Normed.Ring.Lemmas | 1330 | 1354 | +24 (+1.80%) |\n| Mathlib.Analysis.Normed.Field.Basic | 1204 | 1203 | -1 (-0.08%) |\n| Mathlib.Analysis.Asymptotics.Defs | 1205 | 1204 | -1 (-0.08%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>10 files</summary> `Mathlib.Analysis.Asymptotics.Defs` `Mathlib.Analysis.Asymptotics.Lemmas` `Mathlib.Analysis.Normed.Field.Basic` `Mathlib.Analysis.Normed.Field.Ultra` `Mathlib.Analysis.Normed.Group.NullSubmodule` `Mathlib.Analysis.Normed.MulAction` `Mathlib.Analysis.Normed.Operator.ContinuousLinearMap` `Mathlib.Order.Filter.ZeroAndBoundedAtFilter` `Mathlib.Topology.Algebra.InfiniteSum.Field` `Mathlib.Topology.MetricSpace.CauSeqFilter`</details>|-1|\n|<details><summary>3 files</summary> `Mathlib.NumberTheory.LegendreSymbol.GaussEisensteinLemmas` `Mathlib.NumberTheory.SumTwoSquares` `Mathlib.NumberTheory.Zsqrtd.QuadraticReciprocity`</details>|2|\n|<details><summary>4 files</summary> `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital` `Mathlib.Analysis.Normed.Field.Instances` `Mathlib.Topology.Algebra.Polynomial` `Mathlib.Topology.ContinuousMap.Polynomial`</details>|22|\n| `Mathlib.Analysis.Meromorphic.Divisor.Basic`|23|\n|<details><summary>4 files</summary> `Mathlib.Analysis.Normed.Ring.InfiniteSum` `Mathlib.Analysis.Normed.Ring.Lemmas` `Mathlib.Analysis.NormedSpace.Int` `Mathlib.Topology.Bornology.BoundedOperation`</details>|24|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Dilation.mulLeft`\n`+ Dilation.mulRight`\n`+ Int.instNormMulClass`\n`+ NormMulClass`\n`+ NormMulClass.induced`\n`+ NormMulClass.isAbsoluteValue_norm`\n`+ NormMulClass.isDomain`\n`+ NormMulClass.toNormOneClass`\n`+ instance (priority := 100) NormedDivisionRing.toNormMulClass [Œ≤ : NormedDivisionRing Œ±] :`\n`+ instance : NormMulClass ‚Ñ§_[p] := ‚ü®fun x y ‚Ü¶ by simp [norm_def]‚ü©`\n`+ instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤)`\n`+ instance [NonUnitalNormedCommRing E] : NonUnitalNormedCommRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NonUnitalNormedRing E] : NonUnitalNormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NonUnitalSeminormedCommRing E] : NonUnitalSeminormedCommRing (RestrictScalars ùïú ùïú' E)`\n`+ instance [NonUnitalSeminormedRing E] : NonUnitalSeminormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NormedAddCommGroup E] : NormedAddCommGroup (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NormedCommRing E] : NormedCommRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [NormedRing E] : NormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [SeminormedAddCommGroup E] : SeminormedAddCommGroup (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [SeminormedCommRing E] : SeminormedCommRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ instance [SeminormedRing E] : SeminormedRing (RestrictScalars ùïú ùïú' E) := ‚Äπ_‚Ä∫`\n`+ toNormMulClass`\n`+ toSeminormedRing`\n`+-- norm_mul`\n`- Int.instNormOneClass`\n`- antilipschitzWith_mul_left`\n`- instNormedSpace`\n`- instance (priority := 900) NormedDivisionRing.to_normOneClass : NormOneClass Œ±`\n`- instance : Add ‚Ñ§_[p] := (by infer_instance : Add (subring p))`\n`- instance : AddCommGroup ‚Ñ§_[p] := (by infer_instance : AddCommGroup (subring p))`\n`- instance : IsDomain ‚Ñ§_[p] := Function.Injective.isDomain (subring p).subtype Subtype.coe_injective`\n`- instance : Mul ‚Ñ§_[p] := (by infer_instance : Mul (subring p))`\n`- instance : Neg ‚Ñ§_[p] := (by infer_instance : Neg (subring p))`\n`- instance : NormOneClass ‚Ñ§_[p]`\n`- instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤) where norm_smul_le k f := (norm_smul_le k f.toBCF :)`\n`- instance : One ‚Ñ§_[p] := ‚ü®‚ü®1, by norm_num‚ü©‚ü©`\n`- instance : Sub ‚Ñ§_[p] := (by infer_instance : Sub (subring p))`\n`- instance : Zero ‚Ñ§_[p] := (by infer_instance : Zero (subring p))`\n`- instance [I : NonUnitalNormedCommRing E] :`\n`- instance [I : NonUnitalNormedRing E] :`\n`- instance [I : NonUnitalSeminormedCommRing E] :`\n`- instance [I : NonUnitalSeminormedRing E] :`\n`- instance [I : NormedAddCommGroup E] :`\n`- instance [I : NormedCommRing E] :`\n`- instance [I : NormedRing E] :`\n`- instance [I : SeminormedAddCommGroup E] :`\n`- instance [I : SeminormedCommRing E] :`\n`- instance [I : SeminormedRing E] :`\n`- isAbsoluteValue`\n`- isAbsoluteValue_norm`\n`- norm_pow`\n`- toSemiNormedRing`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6th6jmzwAAAAPjT-gc",
              "createdAt": "2025-03-11T21:43:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6th6jmzwAAAAPjT-ql",
              "createdAt": "2025-03-11T21:43:55Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h-LvE",
              "createdAt": "2025-03-12T10:41:07Z",
              "body": "> * Rename the field `norm_smul_le` of `NormedSpace` and `NormedAlgebra` to `norm_smul_le'`, to avoid a naming conflict with the lemma inherited via `IsBoundedSMul`. [_These structure field renames are trivial, but make up most of the diff._]\r\n\r\nWhat's the conflict here? Why does it matter if the field name is the same as a lemma name?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h-MMX",
              "createdAt": "2025-03-12T10:41:37Z",
              "body": "> * Rename the field `norm_mul` of the normed ring classes, which states that `‚Äña * b‚Äñ ‚â§ ‚Äña‚Äñ * ‚Äñb‚Äñ`, to `norm_mul_le`, to avoid a naming conflict with the `norm_mul` of `NormMulClass`.\r\n\r\nCould you split this to its own PR? Independently of whether it clashes, I agree this is a better name.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h-Nwq",
              "createdAt": "2025-03-12T10:44:20Z",
              "body": "> > * Rename the field `norm_smul_le` of `NormedSpace` and `NormedAlgebra` to `norm_smul_le'`, to avoid a naming conflict with the lemma inherited via `IsBoundedSMul`. [_These structure field renames are trivial, but make up most of the diff._]\r\n> \r\n> What's the conflict here? Why does it matter if the field name is the same as a lemma name?\r\n\r\nIf you have `NormedSpace` open, if you try to apply `norm_smul_le` you have to specify whether you mean `_root_.norm_smul_le` or `NormedSpace.norm_smul_le` (which is annoying since they are both, in fact, asserting exactly the same thing!)",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h-W2Z",
              "createdAt": "2025-03-12T10:58:47Z",
              "body": "\r\n> If you have `NormedSpace` open, if you try to apply `norm_smul_le` you have to specify whether you mean `_root_.norm_smul_le` or `NormedSpace.norm_smul_le` (which is annoying since they are both, in fact, asserting exactly the same thing!)\r\n\r\nThen the fix is to put `protected` before `norm_smul_le` in `NormedSpace`",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h-g-_",
              "createdAt": "2025-03-12T11:15:28Z",
              "body": "> > If you have `NormedSpace` open, if you try to apply `norm_smul_le` you have to specify whether you mean `_root_.norm_smul_le` or `NormedSpace.norm_smul_le` (which is annoying since they are both, in fact, asserting exactly the same thing!)\r\n> \r\n> Then the fix is to put `protected` before `norm_smul_le` in `NormedSpace`\r\n\r\nCan you protect a structure field, rather than a lemma? I didn't know that was possible. (We seem to have a pretty consistent design pattern where `foo'` is a structure field and `foo` the lemma which accesses it.)",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6A7Ipo",
              "createdAt": "2025-03-12T11:22:43Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6OU8oW",
                "title": "chore (Analysis/Normed): rename `norm_mul` to `norm_mul_le`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22871"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h_JX-",
              "createdAt": "2025-03-12T12:13:32Z",
              "body": "> Can you protect a structure field, rather than a lemma? \r\n\r\nYes!\r\n\r\n> We seem to have a pretty consistent design pattern where `foo'` is a structure field and `foo` the lemma which accesses it.\r\n\r\nUsually the pattern is that `foo'` is the lemma about some internal implementation detail, like `toFun`, and `foo` is the lemma about the spelling using a notation class.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6iAFBB",
              "createdAt": "2025-03-12T13:42:23Z",
              "body": "> > Can you protect a structure field, rather than a lemma?\r\n> \r\n> Yes!\r\n> \r\n> > We seem to have a pretty consistent design pattern where `foo'` is a structure field and `foo` the lemma which accesses it.\r\n> \r\n> Usually the pattern is that `foo'` is the lemma about some internal implementation detail, like `toFun`, and `foo` is the lemma about the spelling using a notation class.\r\n\r\n`NormedDivisionRing.norm_mul'` doesn't seem to fit this. I guess that's because `norm_mul` (unprimed) was previously used for the inequality, so should we now rename `NormedDivisionRing.norm_mul'` to `NormedDivisionRing.norm_mul`?",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6th6jmzwAAAAPkUnDv",
              "createdAt": "2025-03-12T14:55:31Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9e78c8316177759785fbf15cfad05c1ef69e0f59"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b7760ac1d7f4e02113e63dbfa97694ee953a4683"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6th6jmzwAAAAPkZC-X",
              "createdAt": "2025-03-12T16:00:37Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6th6jmzwAAAAPkaeOH",
              "createdAt": "2025-03-12T16:22:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6iCA5C",
              "createdAt": "2025-03-12T16:22:32Z",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#22871\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "95ae4efdd605d2bd66e9405e970c3fee5c09d6dc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7ca7a1e640cc9b717b8087d4cbf88acf4192daec"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4d64252cafb69b70cb3acb7c4cf0104673b46b79"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fvSPj",
              "createdAt": "2025-03-12T22:00:25Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6th6jmzwAAAAPk7d1L",
              "createdAt": "2025-03-13T05:45:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
