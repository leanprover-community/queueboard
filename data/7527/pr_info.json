{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 168,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adamtopaz"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "See relevant zulip discussions [here](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/MVars.20from.20implicit.20variables/near/394893597) and [here](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/apply.20at/near/394509077)\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": true,
        "closedAt": "2023-10-24T16:06:46Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5oRqdE",
              "body": "I had already looked at this while it was developing.  Maybe, it makes sense to add the example in the Zulip chat as a test for the tactic?  Or something that is useful for NNG4?",
              "createdAt": "2023-10-05T18:48:30Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oRwDM",
              "body": "Also, I still wonder whether it would be better to use `apply` rather than building the term \"by hand\" with `mkAppOptM'`.  I think that `apply` would be more robust and might see through some `DefEq`s that the explicit term would not.  I will not have time to see if I can find an example where one method works and the other does not, but I would probably try with something like `apply f.Injective at (f a = f b)`.",
              "createdAt": "2023-10-05T19:03:30Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pu8Aw",
              "body": "Thanks for the review!\r\n\r\n> Looks very clean, and the test cases seem extensive!\r\n> \r\n> (I don't fully understand why `mkAppOptM' f (x |>.map fun e => some e))` does something different than `mkAppM' f x)`, but that's unrelated to this PR.)\r\n\r\nI tried changing to `mkAppM'` and indeed that makes some of the tests fail. I can't say that I fully understand why, and I don't have much time to investigate right now, unfortunately. So I just left it with `mkAppOptM'` for now.\r\n",
              "createdAt": "2023-10-21T20:14:15Z",
              "author": {
                "login": "adamtopaz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pvV0v",
              "body": "One last thought I just had, it would be awesome if `apply f at a b ‚ä¢` and `apply f at *` were valid syntax, for consistency with other tactics. But I think that could be a follow-up PR.\r\n\r\n(oops, I accidentally merged master and pushed :/ meant for another branch. but I guess it doesn't hurt)",
              "createdAt": "2023-10-22T07:19:34Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5p8Lmc",
              "body": "bors merge",
              "createdAt": "2023-10-24T14:44:13Z",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5p825q",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6628521367/job/18005773984)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6628521367/job/18005773337)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6628521367/job/18005772988)",
              "createdAt": "2023-10-24T16:06:44Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "eedae25cb88a92ff5089cb4db1bf1555f6947e1c",
                "additions": 16,
                "deletions": 0,
                "committedDate": "2023-10-03T20:57:29Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b2510528258e45823fbdec2edc5fa53cb2a5e273",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-10-03T20:57:46Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "15992ca7efb0a22d0cd5d55ef1e44519420ecb2e",
                "additions": 45,
                "deletions": 11,
                "committedDate": "2023-10-04T13:42:01Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "49b0888bf2dcfcfc90885ea4578dc3087aed9d82",
                "additions": 29,
                "deletions": 20,
                "committedDate": "2023-10-04T17:50:20Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5b9904c8ea4dac46a273bd3b6303f6b62cd924c1",
                "additions": 3,
                "deletions": 22,
                "committedDate": "2023-10-04T20:21:13Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "476c3b905199e4b64bb071047dac5a46f9685422",
                "additions": 7,
                "deletions": 2,
                "committedDate": "2023-10-05T14:57:54Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f248cf301021d6701b34dd5121a4515a25cd022b",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-10-05T14:57:58Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "59e23333c71d524b06dc9a2c0184c7eb0d3dbb9e",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-05T15:07:09Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "600a20f2e105a9743c8d1adc83a3275b096a2533",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-10-05T16:51:05Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f37153c3081d796f658f52a88592d63c09dd4a07",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2023-10-05T16:59:43Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3f9f14066bef4e83064929956cb567dd6341ae40",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-10-05T17:01:08Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "df7c3f7f67201670b50c9a5c36d049cac41fbf04",
                "additions": 6,
                "deletions": 3,
                "committedDate": "2023-10-05T18:39:39Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "80f1571f18fd2aa89639b0f554ec322b379e1e55",
                "additions": 31,
                "deletions": 28,
                "committedDate": "2023-10-05T21:17:33Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "02ddb3ddb9c19f77e48aaf95a7a96420305bf54d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-06T00:57:04Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "683f9b306ae02d83fca59b3c8639c13b080acc4b",
                "additions": 57,
                "deletions": 0,
                "committedDate": "2023-10-06T01:11:20Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "37a80b6772dc35b82080758cfa4cf0d1731a24a3",
                "additions": 15,
                "deletions": 2,
                "committedDate": "2023-10-06T02:05:25Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "77196b314879a7c9dc07ac760afa34a32f71e58a",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2023-10-06T02:26:12Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8dbf8ceedf3b2a3e348f5f53316e106ae495ba4d",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-10-21T19:42:17Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "84ccf2273c1a26f183c845c637f4754bcf93f1ed",
                "additions": 10,
                "deletions": 3,
                "committedDate": "2023-10-21T19:52:47Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1d6f4e6d50b1e060ab28a48100dbc04f8e276978",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-10-21T19:54:36Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9e2ae364280890ca85da893d483a08678467be17",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-21T19:55:44Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "922fdb9dc4b47a77385eafb9a81c43cbf2016255",
                "additions": 24,
                "deletions": 3,
                "committedDate": "2023-10-21T20:00:18Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "43fca7ec0f8f808f024f48bee66243acc91c0b2b",
                "additions": 11242,
                "deletions": 4594,
                "committedDate": "2023-10-22T02:22:01Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1056f8961ea8d06f8a69d551d948202f236b752",
                "additions": 9458,
                "deletions": 4806,
                "committedDate": "2023-10-23T07:16:02Z",
                "author": {
                  "name": "joneugster",
                  "email": "eugster.jon@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-05T16:52:31Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/Meta/Basic.lean",
              "additions": 33,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ApplyAt.lean",
              "additions": 40,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Common.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/ApplyAt.lean",
              "additions": 92,
              "deletions": 0
            }
          ]
        },
        "headRefName": "AT-apply_at_experiment",
        "headRefOid": "c1056f8961ea8d06f8a69d551d948202f236b752",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5cCE7v",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5i-bE2",
              "body": "Thanks! However, this definitely requires tests.",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-10-05T19:07:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i-TQv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-10-05T18:46:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kzqLP",
              "body": "Looks very clean, and the test cases seem extensive!\r\n\r\n(I don't fully understand why `mkAppOptM' f (x |>.map fun e => some e))` does something different than `mkAppM' f x)`, but that's unrelated to this PR.)",
              "state": "APPROVED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-10-21T15:09:58Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7527,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "utensil"
                },
                {
                  "login": "juergenuhl"
                },
                {
                  "login": "kbuzzard"
                },
                {
                  "login": "Shreyas4991"
                },
                {
                  "login": "joneugster"
                },
                {
                  "login": "lakesare"
                },
                {
                  "login": "Seasawher"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5i-TQv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-10-05T18:46:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i-bE2",
              "body": "Thanks! However, this definitely requires tests.",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-10-05T19:07:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i_Hmo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-05T21:05:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i_QY9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-05T21:17:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i_QcK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-05T21:18:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jAGmE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-06T00:56:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kzqLP",
              "body": "Looks very clean, and the test cases seem extensive!\r\n\r\n(I don't fully understand why `mkAppOptM' f (x |>.map fun e => some e))` does something different than `mkAppM' f x)`, but that's unrelated to this PR.)",
              "state": "APPROVED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-10-21T15:09:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz58C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:42:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz58c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:42:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6KQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:53:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6NV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:54:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6OU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:55:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6Oq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:55:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6P9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:56:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6RR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:57:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6SC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T19:57:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kz6WB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-10-21T20:00:35Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QVmJb",
                    "body": "```suggestion\r\n    throwErrorAt i m!\"Identifier {i} not found\"\r\n```\r\nThis underlines where the error actually is.",
                    "createdAt": "2023-10-05T18:46:24Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QWv0v",
                    "body": "Thanks! Done.",
                    "createdAt": "2023-10-06T00:56:50Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QVqv7",
                    "body": "This function has nothing to do here, it should be in some utility file, ultimately scheduled for move to sdt4.",
                    "createdAt": "2023-10-05T19:05:57Z",
                    "author": {
                      "login": "PatrickMassot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QWGHe",
                    "body": "I agree. Do you have a suggestion for where it should be moved? Perhaps in `Mathlib/Lean/Meta/Basic`, given that `forallMetaTelescopeReducing` appears in `Lean/Meta/Basic` in core?",
                    "createdAt": "2023-10-05T21:05:19Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QWLh6",
                    "body": "Ok, moved to `Mathlib/Lean/Meta/Basic`.",
                    "createdAt": "2023-10-05T21:17:50Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QVq7O",
                    "body": "Did you really meant \"function\" here?",
                    "createdAt": "2023-10-05T19:06:37Z",
                    "author": {
                      "login": "PatrickMassot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QWLj5",
                    "body": "I reworded this a bit.",
                    "createdAt": "2023-10-05T21:18:01Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhft7",
                    "body": "```suggestion\r\n  exact (a, g)\r\n```",
                    "createdAt": "2023-10-21T14:04:27Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhfuN",
                    "body": "```suggestion\r\n  exact (a, b)\r\n```",
                    "createdAt": "2023-10-21T14:04:36Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtSf",
                    "body": "done.",
                    "createdAt": "2023-10-21T19:57:20Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhfvE",
                    "body": "```suggestion\r\n  exact (a, b)\r\n```",
                    "createdAt": "2023-10-21T14:04:51Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtTk",
                    "body": "done",
                    "createdAt": "2023-10-21T19:57:46Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhf6B",
                    "body": "Could you additionally import `ApplyAt` in `Mathlib/Tactic/Common.lean`, too?",
                    "createdAt": "2023-10-21T14:09:32Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtMI",
                    "body": "Done!",
                    "createdAt": "2023-10-21T19:54:46Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhgYW",
                    "body": "Two more tests to test the content of the error messages as well:\r\n\r\n```lean\r\n/--\r\nerror: Failed to find Œ≥ as the type of a parameter of Œ± ‚Üí Œ≤.\r\n-/\r\n#guard_msgs in\r\nexample {Œ± Œ≤ Œ≥ : Type*} (f : Œ± ‚Üí Œ≤) (g : Œ≥) (a : Œ±) : Œ≤ √ó Œ≥  := by\r\n  apply f at g\r\n\r\n/--\r\nerror: Failed: Œ± is not the type of a function.\r\n-/\r\n#guard_msgs in\r\nexample {Œ± Œ≤ : Type*} (a : Œ±) (_b : Œ≤) : Œ± √ó Œ≤ := by\r\n  apply a at _b\r\n```",
                    "createdAt": "2023-10-21T14:23:42Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtX7",
                    "body": "Added these tests. Thanks!",
                    "createdAt": "2023-10-21T20:00:34Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhgat",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-10-21T14:24:59Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhs1A",
                    "body": "Done",
                    "createdAt": "2023-10-21T19:42:33Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhgbI",
                    "body": "```suggestion\r\n  let mut mvs : Array Expr := ms\r\n  let mut bis : Array BinderInfo := bs\r\n```",
                    "createdAt": "2023-10-21T14:25:14Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhs1f",
                    "body": "Thanks, done.",
                    "createdAt": "2023-10-21T19:42:52Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhgg1",
                    "body": "```suggestion\r\n  let some ldecl := (‚Üê getLCtx).findFromUserName? i.getId\r\n    | throwErrorAt i m!\"Identifier {i} not found\"\r\n```",
                    "createdAt": "2023-10-21T14:28:18Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtOv",
                    "body": "Done.",
                    "createdAt": "2023-10-21T19:55:20Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhghp",
                    "body": "```suggestion\r\n  for (m, b) in mvs.zip bis do\r\n```",
                    "createdAt": "2023-10-21T14:29:04Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtPA",
                    "body": "done",
                    "createdAt": "2023-10-21T19:55:33Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhgmO",
                    "body": "I would personally prefer if the docstring explained at least the return types instead of just linking to `forallMetaTelescopeReducing ` which in turn links to `forallMetaTelescope`. But I don't know the mathlib-standard in this regard.",
                    "createdAt": "2023-10-21T14:31:48Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtIp",
                    "body": "Agreed. done.",
                    "createdAt": "2023-10-21T19:53:02Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rhh_r",
                    "body": "```suggestion\r\n\r\n/-- `apply at` cannot clear mvarid if still used. -/\r\nexample {Œ± : Type} (Œ≥ : Œ± ‚Üí Type) (a : Œ±) (f : Œ± ‚Üí Œ≥ a) : Œ≥ a := by\r\n  apply f at a\r\n  rename_i a‚ÇÇ\r\n  guard_hyp a :‚Çõ Œ≥ a‚ÇÇ\r\n  exact a\r\n\r\n```",
                    "createdAt": "2023-10-21T15:05:40Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhiA_",
                    "body": "(maybe not useful, but I wrote that trying to understand what `mainGoal.tryClear` does.)",
                    "createdAt": "2023-10-21T15:06:51Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RhtQy",
                    "body": "I think it's useful. Adding it now.",
                    "createdAt": "2023-10-21T19:56:26Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU1Nzc2ODc=",
              "login": "adamtopaz"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "MDQ6VXNlcjE0MDYwODgz",
              "login": "PatrickMassot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: `apply _ at _` tactic",
        "updatedAt": "2023-10-24T16:06:50Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7527",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "eedae25cb88a92ff5089cb4db1bf1555f6947e1c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b2510528258e45823fbdec2edc5fa53cb2a5e273"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "15992ca7efb0a22d0cd5d55ef1e44519420ecb2e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "49b0888bf2dcfcfc90885ea4578dc3087aed9d82"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5b9904c8ea4dac46a273bd3b6303f6b62cd924c1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "476c3b905199e4b64bb071047dac5a46f9685422"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f248cf301021d6701b34dd5121a4515a25cd022b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "59e23333c71d524b06dc9a2c0184c7eb0d3dbb9e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "600a20f2e105a9743c8d1adc83a3275b096a2533"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y9ao0zwAAAAJ1zfkO",
              "createdAt": "2023-10-05T16:52:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f37153c3081d796f658f52a88592d63c09dd4a07"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3f9f14066bef4e83064929956cb567dd6341ae40"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y9ao0zwAAAAJ12usU",
              "createdAt": "2023-10-05T18:30:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5y9ao0zwAAAAJ12x6a",
              "createdAt": "2023-10-05T18:32:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "df7c3f7f67201670b50c9a5c36d049cac41fbf04"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y9ao0zwAAAAJ13CVI",
              "createdAt": "2023-10-05T18:39:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5i-TQv",
              "createdAt": "2023-10-05T18:46:24Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oRqdE",
              "createdAt": "2023-10-05T18:48:30Z",
              "body": "I had already looked at this while it was developing.  Maybe, it makes sense to add the example in the Zulip chat as a test for the tactic?  Or something that is useful for NNG4?",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oRwDM",
              "createdAt": "2023-10-05T19:03:30Z",
              "body": "Also, I still wonder whether it would be better to use `apply` rather than building the term \"by hand\" with `mkAppOptM'`.  I think that `apply` would be more robust and might see through some `DefEq`s that the explicit term would not.  I will not have time to see if I can find an example where one method works and the other does not, but I would probably try with something like `apply f.Injective at (f a = f b)`.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5i-bE2",
              "createdAt": "2023-10-05T19:05:56Z",
              "body": "Thanks! However, this definitely requires tests.",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "80f1571f18fd2aa89639b0f554ec322b379e1e55"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "02ddb3ddb9c19f77e48aaf95a7a96420305bf54d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "683f9b306ae02d83fca59b3c8639c13b080acc4b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "37a80b6772dc35b82080758cfa4cf0d1731a24a3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "77196b314879a7c9dc07ac760afa34a32f71e58a"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kzqLP",
              "createdAt": "2023-10-21T14:04:26Z",
              "body": "Looks very clean, and the test cases seem extensive!\r\n\r\n(I don't fully understand why `mkAppOptM' f (x |>.map fun e => some e))` does something different than `mkAppM' f x)`, but that's unrelated to this PR.)",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8dbf8ceedf3b2a3e348f5f53316e106ae495ba4d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "84ccf2273c1a26f183c845c637f4754bcf93f1ed"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1d6f4e6d50b1e060ab28a48100dbc04f8e276978"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9e2ae364280890ca85da893d483a08678467be17"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "922fdb9dc4b47a77385eafb9a81c43cbf2016255"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pu8Aw",
              "createdAt": "2023-10-21T20:14:15Z",
              "body": "Thanks for the review!\r\n\r\n> Looks very clean, and the test cases seem extensive!\r\n> \r\n> (I don't fully understand why `mkAppOptM' f (x |>.map fun e => some e))` does something different than `mkAppM' f x)`, but that's unrelated to this PR.)\r\n\r\nI tried changing to `mkAppM'` and indeed that makes some of the tests fail. I can't say that I fully understand why, and I don't have much time to investigate right now, unfortunately. So I just left it with `mkAppOptM'` for now.\r\n",
              "author": {
                "login": "adamtopaz"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "43fca7ec0f8f808f024f48bee66243acc91c0b2b"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pvV0v",
              "createdAt": "2023-10-22T07:19:34Z",
              "body": "One last thought I just had, it would be awesome if `apply f at a b ‚ä¢` and `apply f at *` were valid syntax, for consistency with other tactics. But I think that could be a follow-up PR.\r\n\r\n(oops, I accidentally merged master and pushed :/ meant for another branch. but I guess it doesn't hurt)",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1056f8961ea8d06f8a69d551d948202f236b752"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5p8Lmc",
              "createdAt": "2023-10-24T14:44:13Z",
              "body": "bors merge",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y9ao0zwAAAAKBDPyh",
              "createdAt": "2023-10-24T14:44:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5y9ao0zwAAAAKBDP5C",
              "createdAt": "2023-10-24T14:44:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5p825q",
              "createdAt": "2023-10-24T16:06:44Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6628521367/job/18005773984)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6628521367/job/18005773337)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6628521367/job/18005772988)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5y9ao0zwAAAAKBH5Oi",
              "createdAt": "2023-10-24T16:06:46Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5y9ao0zwAAAAKBH5ZW",
              "createdAt": "2023-10-24T16:06:50Z"
            }
          ]
        }
      }
    }
  }
}
