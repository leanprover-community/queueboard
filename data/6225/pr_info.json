{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 105,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kkytola"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Adding results about convergence of measures of sets assuming convergence of indicator functions.\r\n\r\n---\r\n\r\nI could find surprisingly few results about the use of indicators in measure theory, and they were scattered in different places.\r\n\r\nThe immediate use case for me is the portmanteau theorem (specifically showing that if for all Borel sets with null boundary we have convergence of measures of the set to its measure in the candidate limit, then for all closed sets we have limsup of the measures of the set at most its measure in the candidate limit). For this purpose only the lemma `tendsto_measure_of_tendsto_indicator_of_isFiniteMeasure'` is needed, but the other formulations come with almost no additional effort.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n- [x] depends on: #6445 [a.e. measurability for indicators]\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-08-25T05:51:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5juP0j",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#6445~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-08-10T11:46:55Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k09Ct",
              "body": "Are all the conversations above resolved? If they are, could you mark them accordingly?\r\n@ADedecker, does the PR look good to you now?",
              "createdAt": "2023-08-24T12:42:04Z",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k1AqQ",
              "body": "Oh sorry this went out of my head. I just had a quick look and everything looks good to me (and I believe all the conversations are indeed resolved). The only thing I'm not sure about is whether the measure arguments should be implicit/use `volume_tac`, but you probably know the convention better than me so I'll let you comment on it.",
              "createdAt": "2023-08-24T12:52:05Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k1N8v",
              "body": ":v: kkytola can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-24T13:25:10Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k1ew4",
              "body": "> Are all the conversations above resolved? If they are, could you mark them accordingly?\r\n\r\nSorry, I realize I didn't know the appropriate protocol in these generally. I checked <https://leanprover-community.github.io/contribute/index.html>, and it says explicitly that the PR author should mark conversations as resolved. The reason I had been hesitant to mark anything other that direct suggested changes as resolved was because it instinctively seemed to me it should be up to the reviewers to decide whether they are happy with the solution to the issue they raised (I often felt my solutions maybe managed to address the issue only partially or lead to different issues). I will try to overcome my hesitation in the future, perhaps asking explicitly when I'm unsure about resolving. Thanks for reminding me to resolve conversations and thanks for the clear instructions on the community webpage!",
              "createdAt": "2023-08-24T14:00:26Z",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k1gKA",
              "body": "> It looks like some of the measure arguments should be implicit, but otherwise it all looks good to me. bors d+\r\n\r\nThanks!\r\n\r\nI will make these implicit. Probably the reason I write more explicit measure arguments than the other parts of the library is that I use these for weak convergence of measures where there are always multiple measures and so it is often necessary to specify the measure. But with Lean4's named arguments, this should be quite smooth with implicit measures as well.",
              "createdAt": "2023-08-24T14:03:42Z",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k4QpL",
              "body": "> ✌️ kkytola can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).\r\n\r\nbors r+",
              "createdAt": "2023-08-24T21:58:30Z",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k4RW7",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5969300717/job/16194912645)",
              "createdAt": "2023-08-24T22:01:43Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k5dGS",
              "body": "bors r+",
              "createdAt": "2023-08-25T05:30:19Z",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k5hQL",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5972281057/job/16202560568)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5972281057/job/16202560316)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5972281057/job/16202560450)",
              "createdAt": "2023-08-25T05:51:30Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lNH6J",
              "body": "@kkytola This PR has added a ***huge*** import to `Integral/Lebesgue`: a file that imports a significant part of the analysis library.\r\n\r\nCould you please undo that part of the PR (maybe move the new lemmas to a new file) and add a line `assert_not_exists NormedSpace` to make sure we don't add such a big import to this file again? Thanks!",
              "createdAt": "2023-08-29T18:31:17Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lNf0r",
              "body": "> @kkytola This PR has added a _**huge**_ import to `Integral/Lebesgue`: a file that imports a significant part of the analysis library.\r\n> \r\n> Could you please undo that part of the PR (maybe move the new lemmas to a new file) and add a line `assert_not_exists NormedSpace` to make sure we don't add such a big import to this file again? Thanks!\r\n\r\nPR #6850 creates a new file for two lemmas and undoes the adding of the import.\r\n\r\nIn the original PR and review, the creation of a new file vs. adding an import [was discussed from the start](https://github.com/leanprover-community/mathlib4/pull/6225#discussion_r1279767582). To me, these are still complicated trade-offs. I definitely understand the goal to minimize imports for efficiency and even mathematical elegance, but how to weigh that against creation of new files and scattering thematically related lemmas to different places is not easy for me. Sorry about having created an unsatisfactory situation, I hope the fix PR makes it better!\r\n",
              "createdAt": "2023-08-29T19:49:26Z",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lOEBV",
              "body": "Ah yes sorry this is my fault, I suggested this move. I didn't realize importing `borel` was a heavy import for measure theory (maybe Bourbaki bias here...). @fpvandoorn do you think it would make sense to split off the `NormedAddCommGroup` lemmas from [Mathlib.MeasureTheory.Constructions.BorelSpace.Basic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html)? Would that be enough to make this import viable again?",
              "createdAt": "2023-08-29T21:43:32Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lOLlN",
              "body": "Thanks for the new PR, and no worries, these things can happen!\r\n\r\nYes, I was also wondering if the problem was somewhere else.\r\n\r\nIf easy it might be nice if [`MeasureTheory.Constructions.BorelSpace.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#top) doesn't import [`Mathlib.Analysis.Normed.Group.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Normed/Group/Basic.html), but I don't think that import is too bad. \r\nIn this case the relevant thing is that [`MeasureTheory.Constructions.BorelSpace.Metrizable`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/BorelSpace/Metrizable.html#top) has the much heavier import [`Mathlib.Topology.MetricSpace.Metrizable`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/MetricSpace/Metrizable.html#top) since that imports [`Mathlib.Analysis.SpecificLimits.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/SpecificLimits/Basic.html). Somewhere this chain should probably be broken.\r\n\r\nI also added a comment to #6850 that probably allows us to make the lemmas added in this PR more elementary.",
              "createdAt": "2023-08-29T22:14:57Z",
              "author": {
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "38d468da2302c1ef431ff1958fe1915af7b1cdbb",
                "additions": 117,
                "deletions": 0,
                "committedDate": "2023-07-28T23:49:59Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b88e4b0ce16b5541eee5e414056b30a5d6762974",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-07-28T23:53:03Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "603db2d9c7938593cc8ecd59685f37680fe9fc62",
                "additions": 85,
                "deletions": 18,
                "committedDate": "2023-07-29T09:47:21Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "531c1175c639b1f162b179b97206dc97161f42b0",
                "additions": 34,
                "deletions": 17,
                "committedDate": "2023-07-29T11:11:06Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "59cd6bd117b584cf93dd3a718c2cd2971f067729",
                "additions": 10,
                "deletions": 19,
                "committedDate": "2023-07-29T12:07:09Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9a2e93440524fd3ae18ccdb219a56d4f22ed4a00",
                "additions": 50,
                "deletions": 34,
                "committedDate": "2023-07-31T09:57:26Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2e510b9a417d7f61bf8e47431babc5b5c554cd58",
                "additions": 22,
                "deletions": 2,
                "committedDate": "2023-07-31T11:30:57Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "615368c5c1c86be058f2f61ba4a68c5e3d5bfa8b",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-07-31T15:08:50Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8b71b954511ed2e7be3c13dc2c2214e402579b61",
                "additions": 6,
                "deletions": 7,
                "committedDate": "2023-07-31T15:24:23Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "520a9db13f52f76e74540d2b71801ad8668f3a1f",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-02T08:37:04Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0ea8e523088dba649eb6012671db1c02dfaee334",
                "additions": 40,
                "deletions": 60,
                "committedDate": "2023-08-07T16:31:42Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "511903b8e1aba5e691956e218313de5d2f310ecb",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2023-08-07T17:36:44Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7b7e728190bf56ec3cf1b2115942fefc3cf4ea87",
                "additions": 7,
                "deletions": 22,
                "committedDate": "2023-08-09T20:21:34Z",
                "author": {
                  "name": "kkytola",
                  "email": "39528102+kkytola@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5bead07fb904402f8c0a32b0c296912272e0b1f7",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-08-09T20:26:30Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "01d3dcc450f351ff77fc624c23bf27406698a95b",
                "additions": 27812,
                "deletions": 17083,
                "committedDate": "2023-08-10T23:32:11Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "42e33e6de1880da0050b939bcba5b6a21a806279",
                "additions": 8,
                "deletions": 23,
                "committedDate": "2023-08-11T16:05:40Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3080b5ae83928b64e375ee91d3407b106dee01a3",
                "additions": 4,
                "deletions": 11,
                "committedDate": "2023-08-11T16:14:19Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "212160df5bb49d6b5db58ed650e46aab13c12ea7",
                "additions": 21,
                "deletions": 32,
                "committedDate": "2023-08-11T16:28:03Z",
                "author": {
                  "name": "kkytola",
                  "email": "“kalle.kytola@aalto.fi”"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "33fafe4d7b82fa5c2c0c651c4b07f3aa48673310",
                "additions": 34,
                "deletions": 22,
                "committedDate": "2023-08-11T20:50:36Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b77364e2a45b6aab2fbee645b27c6f5abdfcecdc",
                "additions": 4,
                "deletions": 5,
                "committedDate": "2023-08-11T20:53:47Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "392c5d5881522237ef3a439bd4db47199875107c",
                "additions": 52,
                "deletions": 6,
                "committedDate": "2023-08-13T15:26:23Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b17b815cbbf4fff033542ef87d4b3cdb2d6aac80",
                "additions": 0,
                "deletions": 14,
                "committedDate": "2023-08-13T17:23:38Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d5182395580c6f3ff17d0a4476838ae6a87ccbe3",
                "additions": 15,
                "deletions": 49,
                "committedDate": "2023-08-13T20:21:06Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d1051d337f4c222e6967f39362d051af2909cff8",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-08-15T21:33:47Z",
                "author": {
                  "name": "kkytola",
                  "email": "39528102+kkytola@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "75d5d28aaa4422382b898b515556c758f1d95542",
                "additions": 32,
                "deletions": 10,
                "committedDate": "2023-08-15T21:55:39Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "70511a7219d157265493ab5da7cd44d14fa08a98",
                "additions": 2,
                "deletions": 18,
                "committedDate": "2023-08-15T21:56:52Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "74396cefb8f2cfbc5c21d89ee9fdf33a40dc782e",
                "additions": 0,
                "deletions": 65,
                "committedDate": "2023-08-15T21:58:04Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "682ed0ff976c489aaf08e5653dcc402c91198980",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-08-24T14:06:49Z",
                "author": {
                  "name": "kkytola",
                  "email": "39528102+kkytola@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1e8fcf8d37ab648d85d50843a91cf61b68afa629",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-08-24T19:56:43Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7bf68b21482f943d3a7036157ae0bf1f81f56668",
                "additions": 17631,
                "deletions": 7347,
                "committedDate": "2023-08-24T22:04:26Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4a4e59942f9e33227c97680e92ef9f4b6fa4ba16",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-24T22:15:21Z",
                "author": {
                  "name": "Kalle",
                  "email": "kalle.kytola@aalto.fi"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-28T23:56:17Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Metrizable.lean",
              "additions": 25,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Lebesgue.lean",
              "additions": 60,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/MeasurableSpace.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/AEMeasurable.lean",
              "additions": 10,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kkytola/tendsto_measure_of_tendsto_indicator_results",
        "headRefOid": "4a4e59942f9e33227c97680e92ef9f4b6fa4ba16",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Wsph9",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eF_8C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-15T16:28:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-98o",
              "body": "It looks like some of the measure arguments should be implicit, but otherwise it all looks good to me.\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2023-08-24T13:25:08Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6225,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cuGdZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-07-31T19:20:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cuHQp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-07-31T19:22:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c7Q5A",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-02T14:05:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dVPPk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-07T17:30:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dVTE8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-07T17:39:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5daVoS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-08T13:13:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dhUWF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-09T08:23:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dnaBQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-09T21:45:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0pcD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-11T17:01:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d1phi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-11T20:41:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7iZb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-13T20:24:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7ioh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-13T20:33:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eF_8C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-15T16:28:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-98o",
              "body": "It looks like some of the measure arguments should be implicit, but otherwise it all looks good to me.\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2023-08-24T13:25:08Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MR7Qe",
                    "body": "If this material is put into a new file (like in the PR currently), I will write a proper module docstring. But I would like to ask the reviewers to also comment on whether these lemmas should be placed in (various) existing files instead.",
                    "createdAt": "2023-07-31T19:20:37Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_C2X",
                    "body": "I think I will be able to move these to rather naturally chosen existing files. The results of the same flavor will then be somewhat scattered, but they do rely on different definitions (measurability vs a.e.-meaurability, null-measurability, etc.), so that seems ok to me, at least.",
                    "createdAt": "2023-08-11T17:01:53Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_qtL",
                    "body": "Yes that sounds good",
                    "createdAt": "2023-08-11T20:41:02Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ND1f-",
                    "body": "Actually, for the two remaining lemmas (mainly `tendsto_measure_of_tendsto_indicator`) in the new file `Indicator.lean`, I could not find natural places after all. The import-prerequisites are `Mathlib.MeasureTheory.Constructions.BorelSpace.Metrizable` and\r\n`Mathlib.MeasureTheory.Integral.Lebesgue`.\r\n\r\nWere there tools for this besides `#find_home`? That tool unfortunately reports `Mathlib.MeasureTheory.Integral.Indicator`, i.e., the new file itself.\r\n\r\nBesides these two lemmas, the others are now scattered in different files in a way that I believe is quite natural.",
                    "createdAt": "2023-08-13T20:24:59Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ND1u8",
                    "body": "Of course one could argue that these lemmas do almost nothing but combine the `tendsto_measure_of_ae_tendsto_indicator` with preservation of measurability in limits (and the second one with an obvious dominating function if the measure is finite). But I think for good API, it is  nicer not to request the user to explicitly provide that trivial preservation of measurability (or dominating function). That is why I think we should have the remaining two lemmas.",
                    "createdAt": "2023-08-13T20:33:20Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NLdKs",
                    "body": "I would say it's fine to import `Mathlib.MeasureTheory.Constructions.BorelSpace.Metrizable` in `Mathlib.MeasureTheory.Integral.Lebesgue` and then put those result there.",
                    "createdAt": "2023-08-15T16:28:34Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MR7we",
                    "body": "Golfing this proof would be very welcome!\r\n\r\n(Also I am not sure if some variant of the statement of this lemma and the related `nullMeasurableSet_of_tendsto_indicator` would be more helpful instead.)",
                    "createdAt": "2023-07-31T19:22:48Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MaSDR",
                    "body": "As I suggested above, I think a first step would be to split out the case where `b` is nonzero. Also, I'd say this is fundamentally a statement about `AEMeasurable`, not `AEStronglyMeasurable`, and it would probably save you some troubles.\r\n\r\nOther than that, it's generally best to avoid unfolding the definitions of `AEMeasurable` and `NullMeasurableSet` when you can, and I think [AEMeasurable.nullMeasurable](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/AEMeasurable.html#AEMeasurable.nullMeasurable) allows you to avoid that when getting measurability of the set from measurability of the indicator. For the other direction, I suggest modifying [AEMeasurable.indicator](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/AEMeasurable.html#AEMeasurable.indicator) to work with a null measurable set, using [indicator_eventuallyEq](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Filter/IndicatorFunction.html#indicator_eventuallyEq)",
                    "createdAt": "2023-08-02T14:04:57Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mqb1D",
                    "body": "I changed this to about` AEMeasurable`.\r\n\r\nGeneralizing [AEMeasurable.indicator](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/AEMeasurable.html#AEMeasurable.indicator) to null-measurable instead of measurable sets seems to require generalizing the chain <- [aemeasurable_indicator_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/AEMeasurable.html#aemeasurable_indicator_iff) <- [indicator_ae_eq_restrict](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#indicator_ae_eq_restrict) <- [piecewise_ae_eq_restrict](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#piecewise_ae_eq_restrict) <- [ae_restrict_eq](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.ae_restrict_eq) <- [restrict_apply_eq_zero'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.restrict_apply_eq_zero') <- [restrict_apply'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.restrict_apply') (<- [restrict_toOuterMeasure_eq_toOuterMeasure_restrict](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.restrict_toOuterMeasure_eq_toOuterMeasure_restrict) <- ...). That might be a worthwhile refactor, but in #6253 I would only need the measurable sets case, so I'd prefer to either keep these more ad hoc proofs or remove the null-measurable and a.e.-measurable versions altogether for now.",
                    "createdAt": "2023-08-07T17:30:28Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mt0Fu",
                    "body": "I opened #6445 with this generalization of `AEMeasurable.indicator`. Could you make this PR depend on that one? It should allow you to make a simpler proof.",
                    "createdAt": "2023-08-08T12:55:16Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mx02p",
                    "body": "Thank you very much, this is great! I also realized that contrary to what I said above, I probably do want the a.e.-measurable/null-measurable versions after all, so I will be extremely happy if these versions are kept in the PR (with better proofs enabled by your PR).\r\n\r\nI don't know if I marked the \"depends on #6445\" correctly, since this PR didn't become automatically marked \"blocked by another PR\". Do I need to add that label by hand when I add a \"depends on\" not at the PR creation but later?",
                    "createdAt": "2023-08-09T08:23:12Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M2Csk",
                    "body": "If [this message](https://github.com/leanprover-community/mathlib4/pull/6225#issuecomment-1670885097) appears then it's correctly marked. I think the bot is supposed to add the label by itself, but sometimes it takes some time / doesn't work.",
                    "createdAt": "2023-08-09T21:45:32Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MaJoc",
                    "body": "The lemmas later in this file strongly suggest that you want a version of the form `Measurable (A.indicator (fun _ ↦ b)) ↔ MeasurableSet A` assuming that `b` is nonzero. You could even write that assumption using [NeZero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/NeZero.html#NeZero), so that you don't even need to write `one_ne_zero` when applying this lemma. You can then deduce the current version quite easily I think. \r\n\r\nSame for the two following lemmas.\r\n\r\nAlso, I don't think having a version asking for `MeasurableSet ({0} : Set β)` is useful: it's very unlikely that we'd have to use it, and if one needs it it's very easy to add.",
                    "createdAt": "2023-08-02T13:40:16Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mqd60",
                    "body": "I agree, this is nicer. I made everything assume `[MeasurableSingletonClass]` and `[NeZero]`.",
                    "createdAt": "2023-08-07T17:39:48Z",
                    "author": {
                      "login": "kkytola"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mt0c7",
                    "body": "Oh I didn't mean entirely removing the old version. That said if you don't need them it's probably fine not to add them since they're a bit clunky and avoidable.",
                    "createdAt": "2023-08-08T12:56:28Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mtsfy",
                    "body": "```suggestion\r\n    rcases indicator_const_preimage A B b with ⟨hB⟩ | ⟨hB | ⟨hB | (hB : _ = _)⟩⟩ <;>\r\n    simp [hB, A_mble]\r\n```",
                    "createdAt": "2023-08-08T12:29:40Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mt5Th",
                    "body": "```suggestion\r\n  simp_rw [← measurable_indicator_const_iff _ (1 : ℝ≥0∞)] at As_mble ⊢\r\n  exact measurable_of_tendsto_ennreal' L As_mble h_lim\r\n```",
                    "createdAt": "2023-08-08T13:12:30Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mt5Z2",
                    "body": "```suggestion\r\n  simp_rw [← aeMeasurable_indicator_const_iff _ μ (1 : ℝ≥0∞)] at As_mble ⊢\r\n  exact aemeasurable_of_tendsto_metrizable_ae L As_mble h_lim\r\n```",
                    "createdAt": "2023-08-08T13:12:49Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mt5kb",
                    "body": "```suggestion\r\nlemma tendsto_measure_of_ae_tendsto_indicator (μ : Measure α) (A_mble : MeasurableSet A)\r\n```\r\nSame below",
                    "createdAt": "2023-08-08T13:13:22Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NKqPy",
                    "body": "```suggestion\r\nlemma aemeasurable_indicator_const_iff [MeasurableSingletonClass β] (b : β) [NeZero b] :\r\n```\r\nHere there could be no measurable version so I think it's best not to add the `₀`",
                    "createdAt": "2023-08-15T14:03:50Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NKs3I",
                    "body": "```suggestion\r\n    (h_lim : Tendsto (fun i ↦ (As i).indicator (1 : α → ℝ≥0∞))\r\n      L (𝓝 (A.indicator 1))) :\r\n```",
                    "createdAt": "2023-08-15T14:12:12Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NLaTG",
                    "body": "Same in a lot of places.",
                    "createdAt": "2023-08-15T16:18:30Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nvh-f",
                    "body": "```suggestion\r\nlemma nullMeasurableSet_of_tendsto_indicator [NeBot L] {μ : Measure α}\r\n```",
                    "createdAt": "2023-08-24T13:15:47Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NviKe",
                    "body": "```suggestion\r\nlemma tendsto_measure_of_ae_tendsto_indicator {μ : Measure α} (A_mble : MeasurableSet A)\r\n```",
                    "createdAt": "2023-08-24T13:16:15Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NvlKh",
                    "body": "```suggestion\r\nlemma tendsto_measure_of_tendsto_indicator [NeBot L] {μ : Measure α}\r\n```",
                    "createdAt": "2023-08-24T13:23:05Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NvlRl",
                    "body": "```suggestion\r\n    {μ : Measure α} [IsFiniteMeasure μ] (A_mble : MeasurableSet A)\r\n```",
                    "createdAt": "2023-08-24T13:23:24Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM5NTI4MTAy",
              "login": "kkytola"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjQwOTQ3MzI=",
              "login": "RemyDegenne"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: Results about convergence of measures of sets assuming convergence of indicator functions.",
        "updatedAt": "2023-08-29T22:15:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6225",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "38d468da2302c1ef431ff1958fe1915af7b1cdbb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b88e4b0ce16b5541eee5e414056b30a5d6762974"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJRQbj6",
              "createdAt": "2023-07-28T23:56:17Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJRQbj7",
              "createdAt": "2023-07-28T23:56:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
                "name": "t-measure-probability"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "603db2d9c7938593cc8ecd59685f37680fe9fc62"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "531c1175c639b1f162b179b97206dc97161f42b0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "59cd6bd117b584cf93dd3a718c2cd2971f067729"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NvFDp",
              "createdAt": "2023-07-30T21:52:40Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WvcAE",
                "title": "[Merged by Bors] - feat: add the portmanteau implication from Borel set limit condition to closed set limsup condition",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6253"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9a2e93440524fd3ae18ccdb219a56d4f22ed4a00"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2e510b9a417d7f61bf8e47431babc5b5c554cd58"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "615368c5c1c86be058f2f61ba4a68c5e3d5bfa8b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8b71b954511ed2e7be3c13dc2c2214e402579b61"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJSIw-b",
              "createdAt": "2023-07-31T19:18:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJSIw-j",
              "createdAt": "2023-07-31T19:18:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cuGdZ",
              "createdAt": "2023-07-31T19:20:37Z",
              "body": "",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cuHQp",
              "createdAt": "2023-07-31T19:22:48Z",
              "body": "",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "520a9db13f52f76e74540d2b71801ad8668f3a1f"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c7Q5A",
              "createdAt": "2023-08-02T13:40:16Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJTXekX",
              "createdAt": "2023-08-02T14:05:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJTXekb",
              "createdAt": "2023-08-02T14:05:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0ea8e523088dba649eb6012671db1c02dfaee334"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "511903b8e1aba5e691956e218313de5d2f310ecb"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5daVoS",
              "createdAt": "2023-08-08T12:29:39Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJWqXFp",
              "createdAt": "2023-08-09T08:21:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7b7e728190bf56ec3cf1b2115942fefc3cf4ea87"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5bead07fb904402f8c0a32b0c296912272e0b1f7"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N5k7S",
              "createdAt": "2023-08-09T20:35:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5XbicM",
                "title": "[Merged by Bors] - feat: generalize `AEMeasurable.indicator` to `NullMeasurableSet`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6445"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJXh0Xf",
              "createdAt": "2023-08-10T11:46:53Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5juP0j",
              "createdAt": "2023-08-10T11:46:55Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#6445~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "01d3dcc450f351ff77fc624c23bf27406698a95b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "42e33e6de1880da0050b939bcba5b6a21a806279"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3080b5ae83928b64e375ee91d3407b106dee01a3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "212160df5bb49d6b5db58ed650e46aab13c12ea7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "33fafe4d7b82fa5c2c0c651c4b07f3aa48673310"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b77364e2a45b6aab2fbee645b27c6f5abdfcecdc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "392c5d5881522237ef3a439bd4db47199875107c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b17b815cbbf4fff033542ef87d4b3cdb2d6aac80"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d5182395580c6f3ff17d0a4476838ae6a87ccbe3"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJY2UuT",
              "createdAt": "2023-08-13T20:47:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJY2UuU",
              "createdAt": "2023-08-13T20:47:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eF_8C",
              "createdAt": "2023-08-15T14:03:50Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJZ8tSq",
              "createdAt": "2023-08-15T16:28:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJZ8tS0",
              "createdAt": "2023-08-15T16:28:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d1051d337f4c222e6967f39362d051af2909cff8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "75d5d28aaa4422382b898b515556c758f1d95542"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "70511a7219d157265493ab5da7cd44d14fa08a98"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "74396cefb8f2cfbc5c21d89ee9fdf33a40dc782e"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJaIsX5",
              "createdAt": "2023-08-15T22:41:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJaIsYB",
              "createdAt": "2023-08-15T22:41:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k09Ct",
              "createdAt": "2023-08-24T12:42:04Z",
              "body": "Are all the conversations above resolved? If they are, could you mark them accordingly?\r\n@ADedecker, does the PR look good to you now?",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k1AqQ",
              "createdAt": "2023-08-24T12:52:05Z",
              "body": "Oh sorry this went out of my head. I just had a quick look and everything looks good to me (and I believe all the conversations are indeed resolved). The only thing I'm not sure about is whether the measure arguments should be implicit/use `volume_tac`, but you probably know the convention better than me so I'll let you comment on it.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e-98o",
              "createdAt": "2023-08-24T13:15:47Z",
              "body": "It looks like some of the measure arguments should be implicit, but otherwise it all looks good to me.\r\nbors d+",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k1N8v",
              "createdAt": "2023-08-24T13:25:10Z",
              "body": ":v: kkytola can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s6TmhzwAAAAJe3JNa",
              "createdAt": "2023-08-24T13:25:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s6TmhzwAAAAJe3JQr",
              "createdAt": "2023-08-24T13:25:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k1ew4",
              "createdAt": "2023-08-24T14:00:26Z",
              "body": "> Are all the conversations above resolved? If they are, could you mark them accordingly?\r\n\r\nSorry, I realize I didn't know the appropriate protocol in these generally. I checked <https://leanprover-community.github.io/contribute/index.html>, and it says explicitly that the PR author should mark conversations as resolved. The reason I had been hesitant to mark anything other that direct suggested changes as resolved was because it instinctively seemed to me it should be up to the reviewers to decide whether they are happy with the solution to the issue they raised (I often felt my solutions maybe managed to address the issue only partially or lead to different issues). I will try to overcome my hesitation in the future, perhaps asking explicitly when I'm unsure about resolving. Thanks for reminding me to resolve conversations and thanks for the clear instructions on the community webpage!",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k1gKA",
              "createdAt": "2023-08-24T14:03:42Z",
              "body": "> It looks like some of the measure arguments should be implicit, but otherwise it all looks good to me. bors d+\r\n\r\nThanks!\r\n\r\nI will make these implicit. Probably the reason I write more explicit measure arguments than the other parts of the library is that I use these for weak convergence of measures where there are always multiple measures and so it is often necessary to specify the measure. But with Lean4's named arguments, this should be quite smooth with implicit measures as well.",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "682ed0ff976c489aaf08e5653dcc402c91198980"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1e8fcf8d37ab648d85d50843a91cf61b68afa629"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k4QpL",
              "createdAt": "2023-08-24T21:58:30Z",
              "body": "> ✌️ kkytola can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).\r\n\r\nbors r+",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k4RW7",
              "createdAt": "2023-08-24T22:01:43Z",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5969300717/job/16194912645)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7bf68b21482f943d3a7036157ae0bf1f81f56668"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4a4e59942f9e33227c97680e92ef9f4b6fa4ba16"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k5dGS",
              "createdAt": "2023-08-25T05:30:19Z",
              "body": "bors r+",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k5hQL",
              "createdAt": "2023-08-25T05:51:30Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5972281057/job/16202560568)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5972281057/job/16202560316)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5972281057/job/16202560450)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5s6TmhzwAAAAJfTZbq",
              "createdAt": "2023-08-25T05:51:32Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5s6TmhzwAAAAJfTZjg",
              "createdAt": "2023-08-25T05:51:36Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lNH6J",
              "createdAt": "2023-08-29T18:31:17Z",
              "body": "@kkytola This PR has added a ***huge*** import to `Integral/Lebesgue`: a file that imports a significant part of the analysis library.\r\n\r\nCould you please undo that part of the PR (maybe move the new lemmas to a new file) and add a line `assert_not_exists NormedSpace` to make sure we don't add such a big import to this file again? Thanks!",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OLh_a",
              "createdAt": "2023-08-29T19:37:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ZEV2-",
                "title": "[Merged by Bors] - chore: Undo adding a heavy import in MeasureTheory.Integral.Lebesgue.",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6850"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lNf0r",
              "createdAt": "2023-08-29T19:49:26Z",
              "body": "> @kkytola This PR has added a _**huge**_ import to `Integral/Lebesgue`: a file that imports a significant part of the analysis library.\r\n> \r\n> Could you please undo that part of the PR (maybe move the new lemmas to a new file) and add a line `assert_not_exists NormedSpace` to make sure we don't add such a big import to this file again? Thanks!\r\n\r\nPR #6850 creates a new file for two lemmas and undoes the adding of the import.\r\n\r\nIn the original PR and review, the creation of a new file vs. adding an import [was discussed from the start](https://github.com/leanprover-community/mathlib4/pull/6225#discussion_r1279767582). To me, these are still complicated trade-offs. I definitely understand the goal to minimize imports for efficiency and even mathematical elegance, but how to weigh that against creation of new files and scattering thematically related lemmas to different places is not easy for me. Sorry about having created an unsatisfactory situation, I hope the fix PR makes it better!\r\n",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lOEBV",
              "createdAt": "2023-08-29T21:43:32Z",
              "body": "Ah yes sorry this is my fault, I suggested this move. I didn't realize importing `borel` was a heavy import for measure theory (maybe Bourbaki bias here...). @fpvandoorn do you think it would make sense to split off the `NormedAddCommGroup` lemmas from [Mathlib.MeasureTheory.Constructions.BorelSpace.Basic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html)? Would that be enough to make this import viable again?",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lOLlN",
              "createdAt": "2023-08-29T22:14:57Z",
              "body": "Thanks for the new PR, and no worries, these things can happen!\r\n\r\nYes, I was also wondering if the problem was somewhere else.\r\n\r\nIf easy it might be nice if [`MeasureTheory.Constructions.BorelSpace.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#top) doesn't import [`Mathlib.Analysis.Normed.Group.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Normed/Group/Basic.html), but I don't think that import is too bad. \r\nIn this case the relevant thing is that [`MeasureTheory.Constructions.BorelSpace.Metrizable`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Constructions/BorelSpace/Metrizable.html#top) has the much heavier import [`Mathlib.Topology.MetricSpace.Metrizable`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/MetricSpace/Metrizable.html#top) since that imports [`Mathlib.Analysis.SpecificLimits.Basic`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/SpecificLimits/Basic.html). Somewhere this chain should probably be broken.\r\n\r\nI also added a comment to #6850 that probably allows us to make the lemmas added in this PR more elementary.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
