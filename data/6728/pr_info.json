{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 44,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "MohanadAhmed"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "For a sorted (monotone) tuple containing n elements with exactly r elements less than or equal some value, all these elements are at the first r locations of the tuple.\r\n\r\nProofs by @Ruben-VandeVelde , @ericrbg @eric-wieser see [Zulip Thread](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sorted.20nonnegative.20tuple.20must.20have.20zero.20elements.20at.20start)\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-09-02T21:54:37Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5knztH",
              "body": "You don't have to put in who wrote the proof! Thought is appreciated though :) I think splitting off the lemma that EricW said would be good",
              "createdAt": "2023-08-22T13:08:50Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kn1WK",
              "body": "> You don't have to put in who wrote the proof! Thought is appreciated though :) I think splitting off the lemma that EricW said would be good\r\n\r\nWhich suggestion for a split off lemma do you mean? Which lemma?",
              "createdAt": "2023-08-22T13:12:25Z",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kn2bA",
              "body": "Do you mean this suggestion:\r\n@_**Eric Wieser|310045** [said](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sorted.20nonnegative.20tuple.20must.20have.20zero.20elements.20at.20start/near/386249454):\r\n```quote\r\nThe proof would probably be clearer with a `calc` block or `transitivity` where that `show` is\r\n```",
              "createdAt": "2023-08-22T13:15:04Z",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kn41u",
              "body": "No, this one:\r\n\r\n```lean\r\n/-- All the elements `· ≤ a` appear the start of a sorted tuple -/\r\nlemma wierd2' {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n    (h_sorted : Monotone f)\r\n    (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n    f j ≤ a := by\r\n```",
              "createdAt": "2023-08-22T13:21:06Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kn57I",
              "body": "> No, this one:\r\n> \r\n> ```lean\r\n> /-- All the elements `· ≤ a` appear the start of a sorted tuple -/\r\n> lemma wierd2' {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n>     (h_sorted : Monotone f)\r\n>     (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n>     f j ≤ a := by\r\n> ```\r\n\r\nBut that is exactly what is in the PR:\r\nI just called it a different name `sort_lt_at_start_of_monotone`\r\n```lean\r\ntheorem sort_lt_at_start_of_monotone {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n    (h_sorted : Monotone f)\r\n    (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n    f j ≤ a := by\r\n```",
              "createdAt": "2023-08-22T13:23:44Z",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kn6Rs",
              "body": "apologies! I'm clearly asleep at the wheel...",
              "createdAt": "2023-08-22T13:24:37Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k3r9G",
              "body": "So you are requiring LE.le on the type to be decidable. But since we have the condition of cardinality of (. <= a) we have already compared against all elements and came up with true or false answers. By transivity of LE all the elements are comparable and we are back to linear order.\n\nUnless you want to replace LinearOrder with a predicate about comparison between the m elements and the comparer a \nI think what you is basically LinearOrder.\n\nCan you think of an example satisfying PartialOrder and Decidable LE but not a LinearOrder? ",
              "createdAt": "2023-08-24T19:53:37Z",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k3wbg",
              "body": "We've compared all elements against `a`. Because the order is partial you cannot just flip. The relation ≤ on N given by a ≤ b iff a = b is decidable, but is not linear.",
              "createdAt": "2023-08-24T20:08:03Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k3y9m",
              "body": "> Can you think of an example satisfying PartialOrder and Decidable LE but not a LinearOrder?\r\n\r\nYes, ` α = Finset Nat`, which orders by subset inclusion\r\n\r\n",
              "createdAt": "2023-08-24T20:15:56Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lKNyc",
              "body": "@eric-wieser Any more issues or can you please merge this?",
              "createdAt": "2023-08-29T10:29:54Z",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ljzry",
              "body": ":v: MohanadAhmed can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-02T16:44:19Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lkAMN",
              "body": "> ✌️ MohanadAhmed can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).\r\n\r\nbors r+\r\n\r\nThanks a lot @ocfnash ",
              "createdAt": "2023-09-02T20:42:42Z",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lkDVH",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6060430361/job/16444601777)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6060430361/job/16444601879)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6060430361/job/16444601734)",
              "createdAt": "2023-09-02T21:54:36Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "191bb89cfd21493e232fc116ed1b54728d32a9b0",
                "additions": 15,
                "deletions": 0,
                "committedDate": "2023-08-22T13:01:46Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ab6d485b0994d02d1f7aa061e4eece9c560c8e8d",
                "additions": 70,
                "deletions": 6,
                "committedDate": "2023-08-22T23:53:37Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cc3b9d0c605b2e5cdde8d4002a99d0e44df093a0",
                "additions": 10,
                "deletions": 20,
                "committedDate": "2023-08-23T00:04:36Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "42c59fd6c0b1208111887a5d850b22d884d9f94c",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-08-23T00:06:37Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d49f407641eb53e10a4f483ecfc51b938c0f8cbc",
                "additions": 7,
                "deletions": 8,
                "committedDate": "2023-08-23T10:04:58Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1051430856354d850582ca8a18e35e3f6b044ad",
                "additions": 7,
                "deletions": 13,
                "committedDate": "2023-08-23T10:21:00Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b293f3eb65167ea8459da70c88fd6b0114f5793b",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-23T10:25:22Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "16a4b1594835dfbadf5848fbf1ae285a22cf1003",
                "additions": 37,
                "deletions": 0,
                "committedDate": "2023-08-23T11:12:25Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f9dfd8178fe5ad9cd697ed4aa2de97bf21f3af64",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-08-23T11:20:26Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "19091683f048cf7a9b1dd3d5d30901d95a358ca6",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-23T11:59:28Z",
                "author": {
                  "name": "MohanadAhmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "87a12d4e9937cae22f8da1fea4d4ea380b9ef328",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-23T11:59:42Z",
                "author": {
                  "name": "MohanadAhmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "55fdd0fce9cf91f07e68f6f214c63e34df183595",
                "additions": 10,
                "deletions": 29,
                "committedDate": "2023-08-23T12:22:58Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f4ac8b08e70b841c13aa2a510e526fc3c215bbe2",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-23T12:23:11Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fccc606edf45629b0aa9bc4201890d9cdceb9eb4",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-08-23T12:42:46Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6a4b9cfbfc83cfcc0121807106536ca8af9f98b1",
                "additions": 4,
                "deletions": 1,
                "committedDate": "2023-08-23T12:54:13Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "170e3d4304f89252f79c14d4841464b9e34459ac",
                "additions": 0,
                "deletions": 14,
                "committedDate": "2023-08-24T06:31:51Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3464ad5d6c37ff7ec2c56cb789db9b8a40e080f4",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-24T06:50:04Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3815ce83fac26861b1ec04a29075b8db5f187df6",
                "additions": 24,
                "deletions": 49,
                "committedDate": "2023-08-24T10:56:20Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "78c54156e0cfb02745167bf72ad882c623eff55c",
                "additions": 24,
                "deletions": 49,
                "committedDate": "2023-08-24T10:58:02Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0a300a176728970f52e7d3527d702a1e92cbc784",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-08-24T11:07:13Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6a0f8dd960e7f8d7318d621b608c5a1083fbe314",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-24T11:18:04Z",
                "author": {
                  "name": "MohanadAhmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "168b24c50d40476a5ba70195afe9c55ec41db8c7",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-24T11:19:34Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "07951beec66b5905d82801246d9dc69039a5ce49",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-24T12:56:26Z",
                "author": {
                  "name": "MohanadAhmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dfd068090d30c1eee1d2a0ecd972e319de7dfb64",
                "additions": 9,
                "deletions": 4,
                "committedDate": "2023-08-24T14:18:21Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "854e427292a4da4077616f308f230d7819069466",
                "additions": 10,
                "deletions": 15,
                "committedDate": "2023-08-24T14:26:30Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f2fdfea148184575171b1fdbf0e99f299d877a93",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2023-08-24T14:28:29Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb5c009c1a31630567e4086bb3644f8d4a2705d6",
                "additions": 28,
                "deletions": 25,
                "committedDate": "2023-09-02T19:02:43Z",
                "author": {
                  "name": "MohanadAhmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ebaf90ecbd4685e18b5d8394da97d6d7f05a3f89",
                "additions": 9,
                "deletions": 10,
                "committedDate": "2023-09-02T19:18:50Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-22T13:04:37Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Fin/Tuple/Sort.lean",
              "additions": 35,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Fintype/Card.lean",
              "additions": 9,
              "deletions": 0
            }
          ]
        },
        "headRefName": "MohanadAhmed/sortingLemma",
        "headRefOid": "ebaf90ecbd4685e18b5d8394da97d6d7f05a3f89",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Yfy-N",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5e_mIM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-24T14:18:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ewwjr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-22T16:17:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f3UUX",
              "body": "Please apply the suggestions and then feel free to merge.\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-02T16:44:18Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6728,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ewwjr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-22T16:17:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5exOy5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-22T17:20:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5exPB2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-22T17:21:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e0HqQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T04:09:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e0Hz6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T04:10:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e0IKK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T04:12:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e2J19",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-23T10:13:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e2Mxy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-23T10:21:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e2tHn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T11:42:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e2tll",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T11:43:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e2t_b",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T11:44:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e2x5A",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-23T11:54:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e20su",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T12:01:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e3Cu4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T12:34:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e3DsY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T12:36:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e3EQG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T12:37:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e3Eef",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T12:38:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e3HzV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-23T12:45:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e3MfP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-23T12:55:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e93Kv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-24T10:26:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e94BG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-24T10:27:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-JHH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-24T11:13:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-omf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-24T12:30:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-wRs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-24T12:48:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-0Kz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-08-24T12:56:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e_mIM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-24T14:18:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f3UUX",
              "body": "Please apply the suggestions and then feel free to merge.\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-09-02T16:44:18Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NmTuZ",
                    "body": "somewhat shorter, using `Iio` rather than `Ici`:\r\n```suggestion\r\n  rw [← Fin.card_Iio, Fintype.card_subtype]\r\n  refine Finset.card_mono (fun i => Function.mtr ?_)\r\n  simp_rw [Finset.mem_filter, Finset.mem_univ, true_and, Finset.mem_Iio]\r\n  exact fun hij => (h.trans_le <| h_sorted <| le_of_not_lt hij).not_le\r\n```",
                    "createdAt": "2023-08-22T16:17:28Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Np0s6",
                    "body": "Thanks I replaced the old one",
                    "createdAt": "2023-08-23T10:21:28Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nmmkg",
                    "body": "Repeating my Zulip comment: I think it would be best to have the `Iff` proof straight away.",
                    "createdAt": "2023-08-22T17:20:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NmmuE",
                    "body": "We should have the `Antitone` variant too which just swaps the arguments of the `le` in the appropriate places. If you're lucky it follows immediately from `OrderDual`.",
                    "createdAt": "2023-08-22T17:21:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NofU4",
                    "body": "Using `rw` in `Type` is generally a bad idea.\r\n\r\nThere should be a `subtypeCongr` or similar which makes this a trivial consequence.",
                    "createdAt": "2023-08-23T04:09:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Npy2K",
                    "body": "Why is it a bad idea?",
                    "createdAt": "2023-08-23T10:13:56Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nofbv",
                    "body": "Using `Fintype.card_congr` will get you there faster",
                    "createdAt": "2023-08-23T04:10:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NofrR",
                    "body": "Nice!",
                    "createdAt": "2023-08-23T04:12:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqI22",
                    "body": "```suggestion\r\n  refine Fintype.card_congr ?_\r\n```\r\n(untested)\r\n\r\nNote that generally you should prefer `refine` over `refine'`; the latter was for Lean 3 compatibility when we were porting.",
                    "createdAt": "2023-08-23T11:42:32Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqJLO",
                    "body": "Did you try to prove this via `OrderDual`? It should follow almost trivially from your previous result.",
                    "createdAt": "2023-08-23T11:43:48Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqL7u",
                    "body": "I took a brief look at the API and it seemed like something that needs a bit of mental bandwidth that was exhausted by the previous proofs!!!!\r\nAny pointers on how to use it?",
                    "createdAt": "2023-08-23T11:54:41Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqNyC",
                    "body": "You could start by doing\r\n```lean\r\nhave := @sort_lt_at_start_of_monotone' (OrderDual α)\r\n```\r\nand then work out sensible arguments one by one",
                    "createdAt": "2023-08-23T12:01:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqJcC",
                    "body": "```suggestion\r\n```\r\nThis probably shouldn't be in the source code; this type of thing is best left to the PR description, perhaps via `Co-authored-by`.",
                    "createdAt": "2023-08-23T11:44:50Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqWpU",
                    "body": "I think this might be `h_sorted.dual` or similar?",
                    "createdAt": "2023-08-23T12:34:24Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqXNr",
                    "body": "\r\nI think by making `f` and `a` the right type, you can drop the `@`\r\n```suggestion\r\n  haveI h1 := sort_lt_at_start_of_monotone_iff m (toDual \\comp f) (toDual a)\r\n```",
                    "createdAt": "2023-08-23T12:36:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqXpq",
                    "body": "Can't `simp_rw [and_comm]` close this one? In which case, I don't think this lemma is that useful.",
                    "createdAt": "2023-08-23T12:37:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqZ3Z",
                    "body": "This was a `simp_rw`! \r\nYou wrote it was a bad idea to do rw on Subtypes (I still don't know why?) , but I changed it anyway into this!",
                    "createdAt": "2023-08-23T12:45:29Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NqXzf",
                    "body": "This docstring is wrong; the theorem says \"all the elements at the start are `≤ a`\"; this docstring belongs on `sort_lt_at_start_of_monotone'` instead.",
                    "createdAt": "2023-08-23T12:38:12Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nqczf",
                    "body": "This was the doc string from your golf on the Zulipchat. I changed it to another description\r\n\r\n@_**Eric Wieser|310045** [said](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sorted.20nonnegative.20tuple.20must.20have.20zero.20elements.20at.20start/near/386244663):\r\n````quote\r\nThis seems like a slightly nicer lemma:\r\n```\r\n/-- All the elements `· ≤ a` appear the start of a sorted tuple -/\r\nlemma wierd2' {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n    (h_sorted : Monotone f)\r\n    (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n    f j ≤ a := by",
                    "createdAt": "2023-08-23T12:55:13Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nu18Q",
                    "body": "Can you inline both proofs into this `iff`? I don't think the single directions are that useful, and the `iff` is easier to explain with a docstring:\r\n\r\n```suggestion\r\n    (j < Fintype.card {i // f i ≤ a}) ↔ f j ≤ a := by\r\n  constructor\r\n  \\. one_proof\r\n  \\. the_other_prood\r\n```",
                    "createdAt": "2023-08-24T10:26:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nu2Oj",
                    "body": "With the above suggestion these can be deleted.",
                    "createdAt": "2023-08-24T10:27:29Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NvBIC",
                    "body": "This feels like a slightly more standard name to me:\r\n```suggestion\r\ntheorem lt_card_le_iff_apply_le_of_monotone {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n```",
                    "createdAt": "2023-08-24T11:13:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NvUi9",
                    "body": "Is `LinearOrder` still needed, or is this now true on partial orders?",
                    "createdAt": "2023-08-24T12:30:32Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NvZhX",
                    "body": "I don't think partial order will work here. All the elements must be comparable with each other. Partial order allows non-comparability for some cases",
                    "createdAt": "2023-08-24T12:48:00Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nv7rT",
                    "body": "It works fine, with minimal proof changes",
                    "createdAt": "2023-08-24T14:18:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nvb7q",
                    "body": "``\r\n```suggestion\r\ntheorem lt_card_ge_iff_apply_ge_of_antitone {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n```",
                    "createdAt": "2023-08-24T12:56:15Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OUFIg",
                    "body": "```suggestion\r\ntheorem Fintype.card_fin_lt_of_le {m n : ℕ} (h : m ≤ n) :\r\n    Fintype.card {i : Fin n // i < m} = m := by\r\n  conv_rhs => rw [← Fintype.card_fin m]\r\n  apply Fintype.card_congr\r\n  exact { toFun := fun ⟨⟨i, _⟩, hi⟩ ↦ ⟨i, hi⟩\r\n          invFun := fun ⟨i, hi⟩ ↦ ⟨⟨i, lt_of_lt_of_le hi h⟩, hi⟩\r\n          left_inv := fun i ↦ rfl\r\n          right_inv := fun i ↦ rfl }\r\n```\r\nAlso, this lemma has nothing to do with sorting tuples; please place it below `Finset.card_fin` in `Data.Fintype.Card`.",
                    "createdAt": "2023-09-02T16:08:29Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OUGvx",
                    "body": "I don't think I could understand this comment without the formal statement below. I admit it's hard to summarise the statement concisely but I suggest the following as an improvement:\r\n```suggestion\r\n/-- If `f₀ ≤ f₁ ≤ f₂ ≤ ⋯` is a sorted `m`-tuple of elements of `α`, then for any `j : Fin m` and\r\n`a : α` we have `j < #{i | fᵢ ≤ a}` iff `fⱼ ≤ a`. -/\r\n```",
                    "createdAt": "2023-09-02T16:20:35Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OUI6a",
                    "body": "Most of this is just nitpicks but the original proof did commit two minor stylistic sins, namely:\r\n 1. It did not capture the `suffices` goal using `· ` (instead immediately working on the head goal with `refine`)\r\n 2. It spawned a subgoal in the rewrite using `Fintype.card_fin_lt_nat` (which I have renamed to `Fintype.card_fin_lt_of_le`). Spawning subgoals during a rewrite like this makes proofs harder to follow and maintain so it is better to create the require hypothesis in advance (as I have done with `h_le`).\r\n```suggestion\r\n  · refine ⟨h1 j, fun h ↦ ?_⟩\r\n    by_contra' hc\r\n    let p : Fin m → Prop := fun x ↦ f x ≤ a\r\n    let q : Fin m → Prop := fun x ↦ x < Fintype.card {i // f i ≤ a}\r\n    let q' : {i // f i ≤ a} → Prop := fun x ↦ q x\r\n    have hw : 0 < Fintype.card {j : {x : Fin m // f x ≤ a} // ¬ q' j} :=\r\n      Fintype.card_pos_iff.2 ⟨⟨⟨j, h⟩, not_lt.2 hc⟩⟩\r\n    apply hw.ne'\r\n    have he := Fintype.card_congr <| Equiv.sumCompl <| q'\r\n    have h4 := (Fintype.card_congr (@Equiv.subtypeSubtypeEquivSubtype _ p q (h1 _)))\r\n    have h_le : Fintype.card { i // f i ≤ a } ≤ m := by\r\n      conv_rhs => rw [← Fintype.card_fin m]\r\n      exact Fintype.card_subtype_le _\r\n    rwa [Fintype.card_sum, h4, Fintype.card_fin_lt_of_le h_le, add_right_eq_self] at he\r\n  intro _ h\r\n  contrapose! h\r\n  rw [← Fin.card_Iio, Fintype.card_subtype]\r\n  refine Finset.card_mono (fun i => Function.mtr ?_)\r\n  simp_rw [Finset.mem_filter, Finset.mem_univ, true_and, Finset.mem_Iio]\r\n  intro hij hia\r\n  apply h\r\n  exact (h_sorted (le_of_not_lt hij)).trans hia\r\n```\r\nFurther optimisations are still possible but I think the above will do.",
                    "createdAt": "2023-09-02T16:42:58Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjYwNjAxMzY=",
              "login": "MohanadAhmed"
            },
            {
              "id": "MDQ6VXNlcjM3OTg0ODUx",
              "login": "ericrbg"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: Elements less than some value of a sorted tuple are at the beginning of the tuple.",
        "updatedAt": "2023-09-02T21:54:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6728",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "191bb89cfd21493e232fc116ed1b54728d32a9b0"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJdfEeu",
              "createdAt": "2023-08-22T13:05:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJdfEe2",
              "createdAt": "2023-08-22T13:05:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5knztH",
              "createdAt": "2023-08-22T13:08:50Z",
              "body": "You don't have to put in who wrote the proof! Thought is appreciated though :) I think splitting off the lemma that EricW said would be good",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kn1WK",
              "createdAt": "2023-08-22T13:12:25Z",
              "body": "> You don't have to put in who wrote the proof! Thought is appreciated though :) I think splitting off the lemma that EricW said would be good\r\n\r\nWhich suggestion for a split off lemma do you mean? Which lemma?",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kn2bA",
              "createdAt": "2023-08-22T13:15:04Z",
              "body": "Do you mean this suggestion:\r\n@_**Eric Wieser|310045** [said](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Sorted.20nonnegative.20tuple.20must.20have.20zero.20elements.20at.20start/near/386249454):\r\n```quote\r\nThe proof would probably be clearer with a `calc` block or `transitivity` where that `show` is\r\n```",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kn41u",
              "createdAt": "2023-08-22T13:21:06Z",
              "body": "No, this one:\r\n\r\n```lean\r\n/-- All the elements `· ≤ a` appear the start of a sorted tuple -/\r\nlemma wierd2' {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n    (h_sorted : Monotone f)\r\n    (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n    f j ≤ a := by\r\n```",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kn57I",
              "createdAt": "2023-08-22T13:23:44Z",
              "body": "> No, this one:\r\n> \r\n> ```lean\r\n> /-- All the elements `· ≤ a` appear the start of a sorted tuple -/\r\n> lemma wierd2' {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n>     (h_sorted : Monotone f)\r\n>     (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n>     f j ≤ a := by\r\n> ```\r\n\r\nBut that is exactly what is in the PR:\r\nI just called it a different name `sort_lt_at_start_of_monotone`\r\n```lean\r\ntheorem sort_lt_at_start_of_monotone {α} [LinearOrder α] (m : ℕ) (f : Fin m → α) (a : α)\r\n    (h_sorted : Monotone f)\r\n    (j : Fin m) (h : j < Fintype.card {i // f i ≤ a}) :\r\n    f j ≤ a := by\r\n```",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kn6Rs",
              "createdAt": "2023-08-22T13:24:37Z",
              "body": "apologies! I'm clearly asleep at the wheel...",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u8xRqzwAAAAJdf9dz",
              "createdAt": "2023-08-22T13:25:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJdkGY4",
              "createdAt": "2023-08-22T14:52:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ewwjr",
              "createdAt": "2023-08-22T16:17:27Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5exOy5",
              "createdAt": "2023-08-22T17:20:30Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5exPB2",
              "createdAt": "2023-08-22T17:21:10Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ab6d485b0994d02d1f7aa061e4eece9c560c8e8d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cc3b9d0c605b2e5cdde8d4002a99d0e44df093a0"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u8xRqzwAAAAJd07vP",
              "createdAt": "2023-08-23T00:05:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJd07vU",
              "createdAt": "2023-08-23T00:05:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u8xRqzwAAAAJd076r",
              "createdAt": "2023-08-23T00:05:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "42c59fd6c0b1208111887a5d850b22d884d9f94c"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e0HqQ",
              "createdAt": "2023-08-23T04:09:27Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e0Hz6",
              "createdAt": "2023-08-23T04:10:27Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e0IKK",
              "createdAt": "2023-08-23T04:12:45Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d49f407641eb53e10a4f483ecfc51b938c0f8cbc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1051430856354d850582ca8a18e35e3f6b044ad"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b293f3eb65167ea8459da70c88fd6b0114f5793b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "16a4b1594835dfbadf5848fbf1ae285a22cf1003"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f9dfd8178fe5ad9cd697ed4aa2de97bf21f3af64"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u8xRqzwAAAAJeHRaL",
              "createdAt": "2023-08-23T11:20:50Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJeHRaX",
              "createdAt": "2023-08-23T11:20:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJeHRad",
              "createdAt": "2023-08-23T11:20:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e2tHn",
              "createdAt": "2023-08-23T11:42:32Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e2tll",
              "createdAt": "2023-08-23T11:43:47Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u8xRqzwAAAAJeIEqC",
              "createdAt": "2023-08-23T11:43:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e2t_b",
              "createdAt": "2023-08-23T11:44:50Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "19091683f048cf7a9b1dd3d5d30901d95a358ca6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "87a12d4e9937cae22f8da1fea4d4ea380b9ef328"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "55fdd0fce9cf91f07e68f6f214c63e34df183595"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f4ac8b08e70b841c13aa2a510e526fc3c215bbe2"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e3Cu4",
              "createdAt": "2023-08-23T12:34:24Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e3DsY",
              "createdAt": "2023-08-23T12:36:25Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e3EQG",
              "createdAt": "2023-08-23T12:37:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e3Eef",
              "createdAt": "2023-08-23T12:38:12Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fccc606edf45629b0aa9bc4201890d9cdceb9eb4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6a4b9cfbfc83cfcc0121807106536ca8af9f98b1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "170e3d4304f89252f79c14d4841464b9e34459ac"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3464ad5d6c37ff7ec2c56cb789db9b8a40e080f4"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e93Kv",
              "createdAt": "2023-08-24T10:26:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e94BG",
              "createdAt": "2023-08-24T10:27:28Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3815ce83fac26861b1ec04a29075b8db5f187df6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "78c54156e0cfb02745167bf72ad882c623eff55c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0a300a176728970f52e7d3527d702a1e92cbc784"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e-JHH",
              "createdAt": "2023-08-24T11:13:14Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6a0f8dd960e7f8d7318d621b608c5a1083fbe314"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "168b24c50d40476a5ba70195afe9c55ec41db8c7"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e-omf",
              "createdAt": "2023-08-24T12:30:32Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e-0Kz",
              "createdAt": "2023-08-24T12:56:15Z",
              "body": "",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "07951beec66b5905d82801246d9dc69039a5ce49"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dfd068090d30c1eee1d2a0ecd972e319de7dfb64"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "854e427292a4da4077616f308f230d7819069466"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2fdfea148184575171b1fdbf0e99f299d877a93"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k3r9G",
              "createdAt": "2023-08-24T19:53:37Z",
              "body": "So you are requiring LE.le on the type to be decidable. But since we have the condition of cardinality of (. <= a) we have already compared against all elements and came up with true or false answers. By transivity of LE all the elements are comparable and we are back to linear order.\n\nUnless you want to replace LinearOrder with a predicate about comparison between the m elements and the comparer a \nI think what you is basically LinearOrder.\n\nCan you think of an example satisfying PartialOrder and Decidable LE but not a LinearOrder? ",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k3wbg",
              "createdAt": "2023-08-24T20:08:03Z",
              "body": "We've compared all elements against `a`. Because the order is partial you cannot just flip. The relation ≤ on N given by a ≤ b iff a = b is decidable, but is not linear.",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k3y9m",
              "createdAt": "2023-08-24T20:15:56Z",
              "body": "> Can you think of an example satisfying PartialOrder and Decidable LE but not a LinearOrder?\r\n\r\nYes, ` α = Finset Nat`, which orders by subset inclusion\r\n\r\n",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lKNyc",
              "createdAt": "2023-08-29T10:29:54Z",
              "body": "@eric-wieser Any more issues or can you please merge this?",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5f3UUX",
              "createdAt": "2023-09-02T16:08:29Z",
              "body": "Please apply the suggestions and then feel free to merge.\r\n\r\nbors d+",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ljzry",
              "createdAt": "2023-09-02T16:44:19Z",
              "body": ":v: MohanadAhmed can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u8xRqzwAAAAJjzwpv",
              "createdAt": "2023-09-02T16:44:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u8xRqzwAAAAJjzwqN",
              "createdAt": "2023-09-02T16:44:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cb5c009c1a31630567e4086bb3644f8d4a2705d6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ebaf90ecbd4685e18b5d8394da97d6d7f05a3f89"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lkAMN",
              "createdAt": "2023-09-02T20:42:42Z",
              "body": "> ✌️ MohanadAhmed can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).\r\n\r\nbors r+\r\n\r\nThanks a lot @ocfnash ",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lkDVH",
              "createdAt": "2023-09-02T21:54:36Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6060430361/job/16444601777)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6060430361/job/16444601879)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6060430361/job/16444601734)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5u8xRqzwAAAAJj1fWr",
              "createdAt": "2023-09-02T21:54:37Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5u8xRqzwAAAAJj1fXx",
              "createdAt": "2023-09-02T21:54:40Z"
            }
          ]
        }
      }
    }
  }
}
