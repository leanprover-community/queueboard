{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 230,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "sven-manthe"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Since Zigzag is the more appropriate name for the new concept and not for the old one (which is its propositional truncation), I renamed the old one to Zigzagable. I intend to use this for a proof that the colimit of a functor mapping all morphisms to isomorphisms with filtered domain exists (and is trivial).\r\nTaken from https://github.com/sven-manthe/A-formalization-of-Borel-determinacy-in-Lean\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 15,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6TfWnf",
              "body": "### PR summary [aa9717afbd](https://github.com/leanprover-community/mathlib4/pull/18998/commits/aa9717afbd39d6c4fc3f29694e91a70276f60e3d)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.IsConnected | 341 | 342 | +1 (+0.29%) |\n| Mathlib.CategoryTheory.ConnectedComponents | 343 | 344 | +1 (+0.29%) |\n| Mathlib.GroupTheory.FreeGroup.NielsenSchreier | 796 | 797 | +1 (+0.13%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>9 files</summary> `Mathlib.CategoryTheory.Limits.Constructions.Over.Connected` `Mathlib.GroupTheory.FreeGroup.NielsenSchreier` `Mathlib.CategoryTheory.Action` `Mathlib.CategoryTheory.ConnectedComponents` `Mathlib.CategoryTheory.Category.Cat.Adjunction` `Mathlib.CategoryTheory.Limits.Shapes.Connected` `Mathlib.CategoryTheory.Filtered.Connected` `Mathlib.CategoryTheory.Limits.Connected` `Mathlib.CategoryTheory.IsConnected`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Zag.codom`\n`+ Zag.dom`\n`+ Zagable`\n`+ Zagable.of_hom`\n`+ Zagable.of_inv`\n`+ Zagable.refl`\n`+ Zagable.symm`\n`+ Zigzag.append`\n`+ Zigzag.map`\n`+ Zigzag.map_refl`\n`+ Zigzag.map_symm`\n`+ Zigzag.map_trans`\n`+ Zigzag.of_isos`\n`+ Zigzag.of_isos.comp`\n`+ Zigzag.symm_refl`\n`+ Zigzagable`\n`+ Zigzagable.of_hom`\n`+ Zigzagable.of_hom_hom`\n`+ Zigzagable.of_hom_inv`\n`+ Zigzagable.of_inv`\n`+ Zigzagable.of_inv_hom`\n`+ Zigzagable.of_inv_inv`\n`+ Zigzagable.of_zag_trans`\n`+ Zigzagable.of_zagable`\n`+ Zigzagable.refl`\n`+ Zigzagable.setoid`\n`+ Zigzagable.symm`\n`+ Zigzagable.trans`\n`+ instance : IsIso (leftZigzagable η.hom ε.hom)`\n`+ instance : IsIso (rightZigzagable η.hom ε.hom)`\n`+ isPreconnected_iff_nonempty_zigzag`\n`+ leftZigzagable`\n`+ leftZigzagableIso`\n`+ leftZigzagableIso_hom`\n`+ leftZigzagableIso_inv`\n`+ leftZigzagableIso_symm`\n`+ nonempty_zigzag_iff_zigzagable`\n`+ rightZigzagable`\n`+ rightZigzagableIso`\n`+ rightZigzagableIso_hom`\n`+ rightZigzagableIso_inv`\n`+ rightZigzagableIso_symm`\n`+ rightZigzagable_idempotent_of_left_triangle`\n`+ zigzagableSetoid`\n`++ zigzagable_of_eqvGen_quot_rel`\n`- Zag.of_hom`\n`- Zag.of_inv`\n`- Zag.refl`\n`- Zag.symm`\n`- Zigzag.of_hom`\n`- Zigzag.of_hom_hom`\n`- Zigzag.of_hom_inv`\n`- Zigzag.of_inv`\n`- Zigzag.of_inv_hom`\n`- Zigzag.of_inv_inv`\n`- Zigzag.of_zag_trans`\n`- Zigzag.refl`\n`- Zigzag.setoid`\n`- instance : IsIso (leftZigzag η.hom ε.hom) := inferInstanceAs <| IsIso (leftZigzagIso η ε).hom`\n`- instance : IsIso (rightZigzag η.hom ε.hom) := inferInstanceAs <| IsIso (rightZigzagIso η ε).hom`\n`- leftZigzag`\n`- leftZigzagIso`\n`- leftZigzagIso_hom`\n`- leftZigzagIso_inv`\n`- leftZigzagIso_symm`\n`- rightZigzag`\n`- rightZigzagIso`\n`- rightZigzagIso_hom`\n`- rightZigzagIso_inv`\n`- rightZigzagIso_symm`\n`- rightZigzag_idempotent_of_left_triangle`\n`- zigzagSetoid`\n`-- zigzag_of_eqvGen_quot_rel`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-11-13T18:52:18Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TgZMf",
              "body": "I must say I am not very enthousiastic about the name change. Instead, given a category `C`, I would suggest defining a quiver \"ZigzagQuiv C\" (which should be `LocQuiver W` from `CategoryTheory.Localization.Construction` for the class of morphisms `W := ⊤`), and then considering the path category of this quiver. It would be even better to improve this `LocQuiver`/path category API for a general class of morphisms `W`.\r\n\r\nThe application you suggest may probably be interpreted in terms of the localization of categories API, as a functor `F : J ⥤ C` which maps all morphisms to isomorphisms factors through the localization `J[W^{-1}]` with `W :=⊤` and it seems that what you want to show is that the category `J[W^{-1}]` is equivalent to the punctual category, and then `F` is isomorphic to a constant functor, etc.\r\n\r\nActually, I have a stronger version of the dual statement in this file https://github.com/leanprover-community/mathlib4/blob/jriou_localization/Mathlib/CategoryTheory/Limits/Constructions/EventuallyConstant.lean\r\nIf a functor `F : J ⥤ C` from a cofiltered category is \"eventually constant\" (some suitable transition maps are isomorphisms), then `F` has a limit. If your work only need this result, I may PR it to mathlib (I will need it anyway for some applications to homology).",
              "createdAt": "2024-11-13T20:41:48Z",
              "author": {
                "login": "joelriou"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2f97643042110424399a06a4cf813bbf01e782ec",
                "additions": 127,
                "deletions": 55,
                "committedDate": "2024-11-13T18:46:47Z",
                "author": {
                  "name": "Sven Manthe",
                  "email": "sven.manthe@gmerek-manthe.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5ufMA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798181/job/32943873840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5uhOQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798186/job/32943874361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5ugSg",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798186/job/32943874122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5uhjg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798181/job/32943874446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5ufEw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798186/job/32943873811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5ugbA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798181/job/32943874156"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5uipA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798181/job/32943874724"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5zahA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823798186/job/32943954564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq57k-w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18998&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "db8308ba9e6a7d3206019186d8ba9b10673a9671",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2024-11-13T18:51:33Z",
                "author": {
                  "name": "Sven Manthe",
                  "email": "sven.manthe@gmerek-manthe.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58f8w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823869293/job/32944103411"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58gQg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823869296/job/32944103490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58byw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868917/job/32944102347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58ekA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868919/job/32944103056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58h1A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823869302/job/32944103892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58ejA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868917/job/32944103052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58cQg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868919/job/32944102466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58gcw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823869302/job/32944103539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58dfA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868919/job/32944102780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58c_w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868917/job/32944102655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq58gWA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868917/job/32944103512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6Au1w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11823868919/job/32944172759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq581WQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32944108889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq5-A1w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18998&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "aa9717afbd39d6c4fc3f29694e91a70276f60e3d",
                "additions": 104,
                "deletions": 102,
                "committedDate": "2024-11-13T19:08:04Z",
                "author": {
                  "name": "Sven Manthe",
                  "email": "sven.manthe@gmerek-manthe.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t8NA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116848/job/32944913460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t8rg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116857/job/32944913582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t2Jg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944911910"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t2Ow",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32944911931"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t8ag",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116859/job/32944913514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t3oA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944912288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t6gw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32944913027"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t9yg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116859/job/32944913866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t5BQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32944912645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t5Tw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944912719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6t6zQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944913101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq7UKbA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32945539692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6uUKw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32944919595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHq6v3PA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18998&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-13T18:50:43Z",
        "deletions": 157,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Adjunction.lean",
              "additions": 44,
              "deletions": 42
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Kan/Adjunction.lean",
              "additions": 17,
              "deletions": 17
            },
            {
              "path": "Mathlib/CategoryTheory/ConnectedComponents.lean",
              "additions": 14,
              "deletions": 14
            },
            {
              "path": "Mathlib/CategoryTheory/GuitartExact/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/IsConnected.lean",
              "additions": 112,
              "deletions": 41
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Final.lean",
              "additions": 12,
              "deletions": 12
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Final/ParallelPair.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/IsConnected.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Countable.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Sifted.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Localization/DerivabilityStructure/Constructor.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/ConnectedComponent.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/NielsenSchreier.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Sheaves/SheafCondition/PairwiseIntersections.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/no_lints_prime_decls.txt",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "sven-add-zigzag",
        "headRefOid": "aa9717afbd39d6c4fc3f29694e91a70276f60e3d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6B02Y2",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 18998,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCM_8eQ",
              "login": "sven-manthe"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t8NA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116848/job/32944913460"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t8rg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116857/job/32944913582"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t2Jg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944911910"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t2Ow",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32944911931"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t8ag",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116859/job/32944913514"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t3oA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944912288"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t6gw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32944913027"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t9yg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116859/job/32944913866"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t5BQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32944912645"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t5Tw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944912719"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6t6zQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116172/job/32944913101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq7UKbA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11824116143/job/32945539692"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6uUKw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32944919595"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHq6v3PA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18998&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: add constructive version of CategoryTheory.Zigzag",
        "updatedAt": "2024-11-13T20:41:56Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/18998",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6eVni9zwAAAAOPO-lu",
              "createdAt": "2024-11-13T18:51:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TfWnf",
              "createdAt": "2024-11-13T18:52:18Z",
              "body": "### PR summary [aa9717afbd](https://github.com/leanprover-community/mathlib4/pull/18998/commits/aa9717afbd39d6c4fc3f29694e91a70276f60e3d)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.IsConnected | 341 | 342 | +1 (+0.29%) |\n| Mathlib.CategoryTheory.ConnectedComponents | 343 | 344 | +1 (+0.29%) |\n| Mathlib.GroupTheory.FreeGroup.NielsenSchreier | 796 | 797 | +1 (+0.13%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>9 files</summary> `Mathlib.CategoryTheory.Limits.Constructions.Over.Connected` `Mathlib.GroupTheory.FreeGroup.NielsenSchreier` `Mathlib.CategoryTheory.Action` `Mathlib.CategoryTheory.ConnectedComponents` `Mathlib.CategoryTheory.Category.Cat.Adjunction` `Mathlib.CategoryTheory.Limits.Shapes.Connected` `Mathlib.CategoryTheory.Filtered.Connected` `Mathlib.CategoryTheory.Limits.Connected` `Mathlib.CategoryTheory.IsConnected`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Zag.codom`\n`+ Zag.dom`\n`+ Zagable`\n`+ Zagable.of_hom`\n`+ Zagable.of_inv`\n`+ Zagable.refl`\n`+ Zagable.symm`\n`+ Zigzag.append`\n`+ Zigzag.map`\n`+ Zigzag.map_refl`\n`+ Zigzag.map_symm`\n`+ Zigzag.map_trans`\n`+ Zigzag.of_isos`\n`+ Zigzag.of_isos.comp`\n`+ Zigzag.symm_refl`\n`+ Zigzagable`\n`+ Zigzagable.of_hom`\n`+ Zigzagable.of_hom_hom`\n`+ Zigzagable.of_hom_inv`\n`+ Zigzagable.of_inv`\n`+ Zigzagable.of_inv_hom`\n`+ Zigzagable.of_inv_inv`\n`+ Zigzagable.of_zag_trans`\n`+ Zigzagable.of_zagable`\n`+ Zigzagable.refl`\n`+ Zigzagable.setoid`\n`+ Zigzagable.symm`\n`+ Zigzagable.trans`\n`+ instance : IsIso (leftZigzagable η.hom ε.hom)`\n`+ instance : IsIso (rightZigzagable η.hom ε.hom)`\n`+ isPreconnected_iff_nonempty_zigzag`\n`+ leftZigzagable`\n`+ leftZigzagableIso`\n`+ leftZigzagableIso_hom`\n`+ leftZigzagableIso_inv`\n`+ leftZigzagableIso_symm`\n`+ nonempty_zigzag_iff_zigzagable`\n`+ rightZigzagable`\n`+ rightZigzagableIso`\n`+ rightZigzagableIso_hom`\n`+ rightZigzagableIso_inv`\n`+ rightZigzagableIso_symm`\n`+ rightZigzagable_idempotent_of_left_triangle`\n`+ zigzagableSetoid`\n`++ zigzagable_of_eqvGen_quot_rel`\n`- Zag.of_hom`\n`- Zag.of_inv`\n`- Zag.refl`\n`- Zag.symm`\n`- Zigzag.of_hom`\n`- Zigzag.of_hom_hom`\n`- Zigzag.of_hom_inv`\n`- Zigzag.of_inv`\n`- Zigzag.of_inv_hom`\n`- Zigzag.of_inv_inv`\n`- Zigzag.of_zag_trans`\n`- Zigzag.refl`\n`- Zigzag.setoid`\n`- instance : IsIso (leftZigzag η.hom ε.hom) := inferInstanceAs <| IsIso (leftZigzagIso η ε).hom`\n`- instance : IsIso (rightZigzag η.hom ε.hom) := inferInstanceAs <| IsIso (rightZigzagIso η ε).hom`\n`- leftZigzag`\n`- leftZigzagIso`\n`- leftZigzagIso_hom`\n`- leftZigzagIso_inv`\n`- leftZigzagIso_symm`\n`- rightZigzag`\n`- rightZigzagIso`\n`- rightZigzagIso_hom`\n`- rightZigzagIso_inv`\n`- rightZigzagIso_symm`\n`- rightZigzag_idempotent_of_left_triangle`\n`- zigzagSetoid`\n`-- zigzag_of_eqvGen_quot_rel`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TgZMf",
              "createdAt": "2024-11-13T20:41:48Z",
              "body": "I must say I am not very enthousiastic about the name change. Instead, given a category `C`, I would suggest defining a quiver \"ZigzagQuiv C\" (which should be `LocQuiver W` from `CategoryTheory.Localization.Construction` for the class of morphisms `W := ⊤`), and then considering the path category of this quiver. It would be even better to improve this `LocQuiver`/path category API for a general class of morphisms `W`.\r\n\r\nThe application you suggest may probably be interpreted in terms of the localization of categories API, as a functor `F : J ⥤ C` which maps all morphisms to isomorphisms factors through the localization `J[W^{-1}]` with `W :=⊤` and it seems that what you want to show is that the category `J[W^{-1}]` is equivalent to the punctual category, and then `F` is isomorphic to a constant functor, etc.\r\n\r\nActually, I have a stronger version of the dual statement in this file https://github.com/leanprover-community/mathlib4/blob/jriou_localization/Mathlib/CategoryTheory/Limits/Constructions/EventuallyConstant.lean\r\nIf a functor `F : J ⥤ C` from a cofiltered category is \"eventually constant\" (some suitable transition maps are isomorphisms), then `F` has a limit. If your work only need this result, I may PR it to mathlib (I will need it anyway for some applications to homology).",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6eVni9zwAAAAOPTOcX",
              "createdAt": "2024-11-13T20:41:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            }
          ]
        }
      }
    }
  }
}
