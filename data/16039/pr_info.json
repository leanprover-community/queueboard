{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 29,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "girving"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`Int.ceil_lt_add_one` and `Real.log_pos` came up in https://github.com/girving/ray, and I've registered a variety of nearby lemmas.\r\n\r\n---\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-09-05T01:24:10Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6JPYQf",
              "body": "### PR summary [10d003066e](https://github.com/leanprover-community/mathlib4/pull/16039/commits/10d003066ea19502e8c98e9c758d4986bb08408a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-08-21T16:32:10Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZEvX",
              "body": "@girving I'm tempted to trust you, and just merge this, but I'm waiting because I have a larger question, which I believe needs answering:\r\n\r\nWhat constitutes a bad `@[bound]` lemma?\r\n\r\nMy concern is that without this kind of guidance, we'll end up tagging lemmas with `@[bound]` that cause extremely serious performance degradation‚Äå. Moreover, it may not show up immediately with `!bench`. Is there somewhere this is addressed that I have missed?",
              "createdAt": "2024-08-22T15:35:00Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZWQT",
              "body": "The main performance constraint is that expressions on either side of inequality hypotheses should be strict subexpressions of the conclusion (unless they are very simple expressions like 0 or 1), to (1) avoid loops and (2) adhere to the general goal of `bound`. However, I am not sure what the precise formalization of this should be, or whether there is a precise formalization that definitely avoids loops.\r\n\r\nNote that this requirement holds vacuously if there are no hypotheses, which is true of a lot of the non-gcongr-like lemmas tagged here. `Real.log_pos` shows why you need \"unless they are very simple\", as it turns `0 < log x` into `1 < x` where 1 doesn't occur in the goal.",
              "createdAt": "2024-08-22T16:00:01Z",
              "author": {
                "login": "girving"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZZ3C",
              "body": "If we can find a satisfactory version of this which is programmatic I could make a test enforcing it, or enforce it at attribute time. ",
              "createdAt": "2024-08-22T16:07:21Z",
              "author": {
                "login": "girving"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K5kAW",
              "body": "!bench",
              "createdAt": "2024-09-05T00:00:59Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K5lKG",
              "body": "if you are able to write some tests to prevent some bad uses of the attribute, I encourage you to do so; that would be well-received! But that seems like it's material for a follow up.\r\n\r\nmaintainer merge\r\n\r\n(@j-loreaux)",
              "createdAt": "2024-09-05T00:06:12Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K5lPD",
              "body": "üöÄ Pull request has been placed on the maintainer queue by joneugster.",
              "createdAt": "2024-09-05T00:06:34Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K5qJ7",
              "body": "bors merge",
              "createdAt": "2024-09-05T00:27:12Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K5rA0",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/defefba4-d007-4a10-ac93-3826a690e02f) for commit 10d003066ea19502e8c98e9c758d4986bb08408a.\nThere were [no significant changes](http://speed.lean-fro.org/mathlib4/compare/c1e1e2dc-8578-4bc1-af56-86d2b6821c1f/to/defefba4-d007-4a10-ac93-3826a690e02f) against commit 22e3994a32b5b88e8d81124b3e4ee1accbd00bd6.",
              "createdAt": "2024-09-05T00:31:07Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K52fm",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10711622442/job/29700650143)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10711622442/job/29700649839)",
              "createdAt": "2024-09-05T01:24:09Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LKCkZ",
              "body": "@joneugster Thank you! I will eventually write the subexpression test, but there may be a delay involved.",
              "createdAt": "2024-09-06T19:11:30Z",
              "author": {
                "login": "girving"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "10d003066ea19502e8c98e9c758d4986bb08408a",
                "additions": 29,
                "deletions": 7,
                "committedDate": "2024-08-21T16:28:57Z",
                "author": {
                  "name": "Geoffrey Irving",
                  "email": "irving@naml.us"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ7rBA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784415/job/29068552964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ7q3Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784422/job/29068552925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2FNQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068461365"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2FIA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068461344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ7sPQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784412/job/29068553277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2IjA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068462220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2IIg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068462114"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ7q7w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784412/job/29068552943"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2Hcw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068461939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2GOw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068461627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2Gaw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068461675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2HEw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068461843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ2JxA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068462532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxLr-mQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29070392985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ7-GA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29068557848"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGxJ9Euw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16039&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHQ1G83g",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5577",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-21T16:31:28Z",
        "deletions": 7,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/Floor.lean",
              "additions": 25,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/Basic.lean",
              "additions": 4,
              "deletions": 1
            }
          ]
        },
        "headRefName": "GI_bound",
        "headRefOid": "10d003066ea19502e8c98e9c758d4986bb08408a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c55AhBP",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16039,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcwNTEx",
              "login": "girving"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ7rBA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784415/job/29068552964"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ7q3Q",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784422/job/29068552925"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2FNQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068461365"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2FIA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068461344"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ7sPQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784412/job/29068553277"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2IjA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068462220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2IIg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068462114"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ7q7w",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493784412/job/29068552943"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2Hcw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068461939"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2GOw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068461627"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2Gaw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068461675"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2HEw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29068461843"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ2JxA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759108/job/29068462532"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxLr-mQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10493759091/job/29070392985"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ7-GA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29068557848"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGxJ9Euw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16039&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHQ1G83g",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5577",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Register more @[bound] lemmas for floor, ceil, and log",
        "updatedAt": "2024-09-06T19:11:31Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16039",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JPYQf",
              "createdAt": "2024-08-21T16:32:10Z",
              "body": "### PR summary [10d003066e](https://github.com/leanprover-community/mathlib4/pull/16039/commits/10d003066ea19502e8c98e9c758d4986bb08408a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TupNZzwAAAANASWAd",
              "createdAt": "2024-08-21T16:33:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZEvX",
              "createdAt": "2024-08-22T15:35:00Z",
              "body": "@girving I'm tempted to trust you, and just merge this, but I'm waiting because I have a larger question, which I believe needs answering:\r\n\r\nWhat constitutes a bad `@[bound]` lemma?\r\n\r\nMy concern is that without this kind of guidance, we'll end up tagging lemmas with `@[bound]` that cause extremely serious performance degradation‚Äå. Moreover, it may not show up immediately with `!bench`. Is there somewhere this is addressed that I have missed?",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TupNZzwAAAANBP6RL",
              "createdAt": "2024-08-22T15:35:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZWQT",
              "createdAt": "2024-08-22T16:00:01Z",
              "body": "The main performance constraint is that expressions on either side of inequality hypotheses should be strict subexpressions of the conclusion (unless they are very simple expressions like 0 or 1), to (1) avoid loops and (2) adhere to the general goal of `bound`. However, I am not sure what the precise formalization of this should be, or whether there is a precise formalization that definitely avoids loops.\r\n\r\nNote that this requirement holds vacuously if there are no hypotheses, which is true of a lot of the non-gcongr-like lemmas tagged here. `Real.log_pos` shows why you need \"unless they are very simple\", as it turns `0 < log x` into `1 < x` where 1 doesn't occur in the goal.",
              "author": {
                "login": "girving"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZZ3C",
              "createdAt": "2024-08-22T16:07:21Z",
              "body": "If we can find a satisfactory version of this which is programmatic I could make a test enforcing it, or enforce it at attribute time. ",
              "author": {
                "login": "girving"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TupNZzwAAAANBXZHT",
              "createdAt": "2024-08-22T17:04:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5kAW",
              "createdAt": "2024-09-05T00:00:59Z",
              "body": "!bench",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5lKG",
              "createdAt": "2024-09-05T00:06:12Z",
              "body": "if you are able to write some tests to prevent some bad uses of the attribute, I encourage you to do so; that would be well-received! But that seems like it's material for a follow up.\r\n\r\nmaintainer merge\r\n\r\n(@j-loreaux)",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5lPD",
              "createdAt": "2024-09-05T00:06:34Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by joneugster.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TupNZzwAAAANKvn0o",
              "createdAt": "2024-09-05T00:06:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5qJ7",
              "createdAt": "2024-09-05T00:27:12Z",
              "body": "bors merge",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TupNZzwAAAANKwFH3",
              "createdAt": "2024-09-05T00:27:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5rA0",
              "createdAt": "2024-09-05T00:31:07Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/defefba4-d007-4a10-ac93-3826a690e02f) for commit 10d003066ea19502e8c98e9c758d4986bb08408a.\nThere were [no significant changes](http://speed.lean-fro.org/mathlib4/compare/c1e1e2dc-8578-4bc1-af56-86d2b6821c1f/to/defefba4-d007-4a10-ac93-3826a690e02f) against commit 22e3994a32b5b88e8d81124b3e4ee1accbd00bd6.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K52fm",
              "createdAt": "2024-09-05T01:24:09Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10711622442/job/29700650143)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10711622442/job/29700649839)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6TupNZzwAAAANKxXJH",
              "createdAt": "2024-09-05T01:24:10Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6TupNZzwAAAANKxXMd",
              "createdAt": "2024-09-05T01:24:13Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LKCkZ",
              "createdAt": "2024-09-06T19:11:30Z",
              "body": "@joneugster Thank you! I will eventually write the subexpression test, but there may be a delay involved.",
              "author": {
                "login": "girving"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
