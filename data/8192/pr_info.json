{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 5,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-11-22T06:12:39Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5q6HPJ",
              "body": "I don't use the `config` argument in the initial `simp only` step, only because I don't know how to take the Syntax, add `failIfUnchanged := true`, and then turn it back to Syntax.\r\n\r\n(Relying on Syntax level tactics is great, until it isn't.)",
              "createdAt": "2023-11-05T03:08:17Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5smzFO",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2023-11-22T04:48:25Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5snCO4",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6953073990/job/18917665629)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6953073990/job/18917665412)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6953073990/job/18917665215)",
              "createdAt": "2023-11-22T06:12:38Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e57093e8e71bc6fbbb6181eb48f7499e480afd13",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-11-05T03:06:10Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ae5149892604ee72d683e18bd98267df494f2cbc",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-11-09T02:36:58Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott@tqft.net"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-05T03:06:59Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/SimpRw.lean",
              "additions": 5,
              "deletions": 3
            }
          ]
        },
        "headRefName": "simp_rw_cfg",
        "headRefOid": "ae5149892604ee72d683e18bd98267df494f2cbc",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5em_FP",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8192,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mnXHr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-09T02:36:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sskkj",
                    "body": "```suggestion\r\n  -- TODO We should use the passed `cfg` here too,\r\n  -- but I don't know how to convert it back and forth from `Syntax`.\r\n  evalTactic (‚Üê `(tactic| simp%$s (config := { failIfUnchanged := false }) only $g ?))\r\n```",
                    "createdAt": "2023-11-09T02:36:54Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: simp_rw (config := ...)",
        "updatedAt": "2023-11-22T06:12:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8192",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e57093e8e71bc6fbbb6181eb48f7499e480afd13"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c513-MnzwAAAAKHjOUt",
              "createdAt": "2023-11-05T03:06:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c513-MnzwAAAAKHjOUv",
              "createdAt": "2023-11-05T03:06:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c513-MnzwAAAAKHjOUx",
              "createdAt": "2023-11-05T03:06:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6HPJ",
              "createdAt": "2023-11-05T03:08:17Z",
              "body": "I don't use the `config` argument in the initial `simp only` step, only because I don't know how to take the Syntax, add `failIfUnchanged := true`, and then turn it back to Syntax.\r\n\r\n(Relying on Syntax level tactics is great, until it isn't.)",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c513-MnzwAAAAKHjlG_",
              "createdAt": "2023-11-05T04:21:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mnXHr",
              "createdAt": "2023-11-09T02:36:54Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ae5149892604ee72d683e18bd98267df494f2cbc"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5smzFO",
              "createdAt": "2023-11-22T04:48:25Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c513-MnzwAAAAKRjAiE",
              "createdAt": "2023-11-22T04:48:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c513-MnzwAAAAKRjAjX",
              "createdAt": "2023-11-22T04:48:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5snCO4",
              "createdAt": "2023-11-22T06:12:38Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6953073990/job/18917665629)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6953073990/job/18917665412)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6953073990/job/18917665215)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c513-MnzwAAAAKRkvlF",
              "createdAt": "2023-11-22T06:12:40Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c513-MnzwAAAAKRkvsQ",
              "createdAt": "2023-11-22T06:12:44Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
