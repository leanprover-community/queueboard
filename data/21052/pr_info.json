{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 344,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "erdOne"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6bzgGN",
              "body": "### PR summary [1e4d2ad556](https://github.com/leanprover-community/mathlib4/pull/21052/commits/1e4d2ad55679eecfa74c52e583266277088cc379)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.AlgebraicGeometry.IdealSheaf` (new file)|1848|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IdealSheafData`\n`+ _root_.AlgebraicGeometry.Scheme.affineBasicOpen_le`\n`+ equivOfIsAffine`\n`+ ext_of_isAffine`\n`+ gi`\n`+ ideal_biInf`\n`+ ideal_bot`\n`+ ideal_ext_iff`\n`+ ideal_iInf`\n`+ ideal_iSup`\n`+ ideal_inf`\n`+ ideal_le_comap_ideal`\n`+ ideal_le_iff`\n`+ ideal_mono`\n`+ ideal_ofIdeals_le`\n`+ ideal_sSup`\n`+ ideal_sup`\n`+ ideal_top`\n`+ instance : CompleteLattice (IdealSheafData X)`\n`+ instance : CompleteSemilatticeSup (IdealSheafData X)`\n`+ instance : PartialOrder (IdealSheafData X) := PartialOrder.lift ideal fun _ _ ↦ IdealSheafData.ext`\n`+ isClosed_support`\n`+ le_def`\n`+ le_ofIdeals_iff`\n`+ le_of_isAffine`\n`+ map_ideal`\n`+ map_ideal'`\n`+ map_radical`\n`+ mem_ideal_iff`\n`+ mem_support_iff`\n`+ mem_support_iff_of_mem`\n`+ ofIdealTop`\n`+ ofIdeals`\n`+ ofIdeals_ideal`\n`+ ofIdeals_mono`\n`+ strictMono_ideal`\n`+ support`\n`+ support_antitone`\n`+ support_bot`\n`+ support_eq_empty_iff`\n`+ support_inter`\n`+ support_ofIdealTop`\n`+ support_subset_zeroLocus`\n`+ support_top`\n`+ zeroLocus_inter_subset_support`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-25T13:39:04Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f2b17ff0c68e6920e488db358a26ffeb3b6c3676",
                "additions": 345,
                "deletions": 0,
                "committedDate": "2025-01-25T13:37:52Z",
                "author": {
                  "name": "Andrew Yang",
                  "email": "the.erd.one@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zkfw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965449465/job/36165182591"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zT3Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965447423/job/36165178333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf1jm3A",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13078454923/job/36496271068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf1jXpg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13078453129/job/36496267174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3pQZg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079155529/job/36498460774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3wuQg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079194211/job/36498583106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zg1Q",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965448993/job/36165181653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zglA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965448982/job/36165181588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf1jVBg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13078453106/job/36496266502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3pQWw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079155533/job/36498460763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3wu-w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079194216/job/36498583291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zgmA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965448988/job/36165181592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf1jU2g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13078453105/job/36496266458"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3pQog",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079155520/job/36498460834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3wuQw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079194213/job/36498583107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zUMA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965447421/job/36165178416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zhGQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965448992/job/36165181721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zUOQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965447423/job/36165178425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zT4w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965447421/job/36165178339"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zgsg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965448992/job/36165181618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zUhA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965447423/job/36165178500"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa59u1w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965447421/job/36165349079"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5znUA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36165183312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5zwKA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21052&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1e4d2ad55679eecfa74c52e583266277088cc379",
                "additions": 10,
                "deletions": 11,
                "committedDate": "2025-01-31T19:09:02Z",
                "author": {
                  "name": "Andrew Yang",
                  "email": "36414270+erdOne@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xmCQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199057/job/36498597385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xpEw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199436/job/36498598163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xpTw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199438/job/36498598223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xmEw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199063/job/36498597395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xqjQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199449/job/36498598541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xniw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199057/job/36498597771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xnWQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199063/job/36498597721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xpig",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199449/job/36498598282"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3xoyA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199057/job/36498598088"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf4KpUQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199063/job/36499007825"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3yM0g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36498607314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIf3yNAw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21052&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-25T13:38:07Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/AffineScheme.lean",
              "additions": 32,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/IdealSheaf.lean",
              "additions": 300,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Localization/Ideal.lean",
              "additions": 11,
              "deletions": 0
            }
          ]
        },
        "headRefName": "erd1/idealsheafdata",
        "headRefOid": "1e4d2ad55679eecfa74c52e583266277088cc379",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6I-wEf",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
              "color": "33DBEC",
              "name": "t-algebraic-geometry"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6aOBYl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2025-01-31T18:18:16Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21052,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6aOBYl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2025-01-31T18:18:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aO1O1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2025-01-31T19:06:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aO2R3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2025-01-31T19:08:45Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zfj9J",
                    "body": "Why do you write `Π U : X.affineOpens, Ideal Γ(X, U)` here, but `∀ U : X.affineOpens, Ideal Γ(X, U)` above?",
                    "createdAt": "2025-01-31T17:33:15Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zflNl",
                    "body": "Is there a naming convention for `GaloisCoinsertion` vs. `GaloisInsertion`? Both `gci` and `gi` seem to be used, but I would slightly prefer `gci` to disambiguate.",
                    "createdAt": "2025-01-31T17:38:04Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zflcC",
                    "body": "Should this be the other way round, i.e. analogous to `Ideal.map_le_iff_le_comap`. Also maybe then `ideal_le_iff_le_ofIdeals` as a name?",
                    "createdAt": "2025-01-31T17:38:53Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zfvcj",
                    "body": "```suggestion\r\n    I ≤ J ↔ ∀ (x : X) (hxU : x ∈ U),\r\n      I.map (X.presheaf.germ U x hxU).hom ≤ J.map (X.presheaf.germ U x hxU).hom :=\r\n```\r\nto make it easier to parse when reading the code. Same below.",
                    "createdAt": "2025-01-31T17:51:15Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zgEy_",
                    "body": "I personally think this makes it harder to parse code because it adds extra noise without providing new information but I don't have strong feelings on this and I'll change it.",
                    "createdAt": "2025-01-31T19:06:06Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zfzjw",
                    "body": "This makes me wonder, if not in the definition it should be stated in terms of `algebraMap Γ(X, U) Γ(X, X.basicOpen f)`? `simp` doesn't do anything either way right now.",
                    "createdAt": "2025-01-31T17:56:15Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zgFa1",
                    "body": "I'm not sure if I understand this comment. Do you mean we should use `algebraMap Γ(X, U) Γ(X, X.basicOpen f)` instead of `(X.presheaf.map (homOfLE (X.basicOpen_le f)).op).hom` everywhere?",
                    "createdAt": "2025-01-31T19:08:45Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zf2_G",
                    "body": "```suggestion\r\n  simp only [Ideal.map_map, ← RingHom.comp_apply, ← CommRingCat.hom_comp,\r\n    affineBasicOpen_coe, X.presheaf.germ_res] at this ⊢\r\n  simp only [homOfLE_leOfHom, TopCat.Presheaf.germ_res', this]\r\n```",
                    "createdAt": "2025-01-31T18:09:56Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zf4E6",
                    "body": "```suggestion\r\n  suffices ∀ U : X.affineOpens, (ofIdealTop I).support ∩ U = X.zeroLocus (U := ⊤) I ∩ U by\r\n    ext x\r\n    obtain ⟨_, ⟨U, hU, rfl⟩, hxU, -⟩ :=\r\n      (isBasis_affine_open X).exists_subset_of_mem_open (Set.mem_univ x) isOpen_univ\r\n    simpa [hxU] using congr(x ∈ $(this ⟨U, hU⟩))\r\n  intro U\r\n  rw [support_inter, ofIdealTop_ideal, Ideal.map, zeroLocus_span, zeroLocus_map,\r\n    Set.union_inter_distrib_right, Set.compl_inter_self, Set.union_empty]\r\n```",
                    "createdAt": "2025-01-31T18:14:39Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM2NDE0Mjcw",
              "login": "erdOne"
            },
            {
              "id": "U_kgDOCB8vYg",
              "login": "chrisflav"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xmCQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199057/job/36498597385"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xpEw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199436/job/36498598163"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xpTw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199438/job/36498598223"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xmEw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199063/job/36498597395"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xqjQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199449/job/36498598541"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xniw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199057/job/36498597771"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xnWQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199063/job/36498597721"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xpig",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199449/job/36498598282"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3xoyA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199057/job/36498598088"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf4KpUQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13079199063/job/36499007825"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3yM0g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36498607314"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIf3yNAw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21052&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(AlgebraicGeometry): ideal sheaf data on a scheme",
        "updatedAt": "2025-01-31T19:09:56Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21052",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2b17ff0c68e6920e488db358a26ffeb3b6c3676"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6njEXXzwAAAAO9sZxE",
              "createdAt": "2025-01-25T13:38:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
                "name": "t-algebraic-geometry"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bzgGN",
              "createdAt": "2025-01-25T13:39:04Z",
              "body": "### PR summary [1e4d2ad556](https://github.com/leanprover-community/mathlib4/pull/21052/commits/1e4d2ad55679eecfa74c52e583266277088cc379)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.AlgebraicGeometry.IdealSheaf` (new file)|1848|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IdealSheafData`\n`+ _root_.AlgebraicGeometry.Scheme.affineBasicOpen_le`\n`+ equivOfIsAffine`\n`+ ext_of_isAffine`\n`+ gi`\n`+ ideal_biInf`\n`+ ideal_bot`\n`+ ideal_ext_iff`\n`+ ideal_iInf`\n`+ ideal_iSup`\n`+ ideal_inf`\n`+ ideal_le_comap_ideal`\n`+ ideal_le_iff`\n`+ ideal_mono`\n`+ ideal_ofIdeals_le`\n`+ ideal_sSup`\n`+ ideal_sup`\n`+ ideal_top`\n`+ instance : CompleteLattice (IdealSheafData X)`\n`+ instance : CompleteSemilatticeSup (IdealSheafData X)`\n`+ instance : PartialOrder (IdealSheafData X) := PartialOrder.lift ideal fun _ _ ↦ IdealSheafData.ext`\n`+ isClosed_support`\n`+ le_def`\n`+ le_ofIdeals_iff`\n`+ le_of_isAffine`\n`+ map_ideal`\n`+ map_ideal'`\n`+ map_radical`\n`+ mem_ideal_iff`\n`+ mem_support_iff`\n`+ mem_support_iff_of_mem`\n`+ ofIdealTop`\n`+ ofIdeals`\n`+ ofIdeals_ideal`\n`+ ofIdeals_mono`\n`+ strictMono_ideal`\n`+ support`\n`+ support_antitone`\n`+ support_bot`\n`+ support_eq_empty_iff`\n`+ support_inter`\n`+ support_ofIdealTop`\n`+ support_subset_zeroLocus`\n`+ support_top`\n`+ zeroLocus_inter_subset_support`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6aOBYl",
              "createdAt": "2025-01-31T17:33:15Z",
              "body": "",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6njEXXzwAAAAPCQ3mB",
              "createdAt": "2025-01-31T18:18:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1e4d2ad55679eecfa74c52e583266277088cc379"
              }
            }
          ]
        }
      }
    }
  }
}
