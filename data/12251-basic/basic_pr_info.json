{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1059,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ScottCarnahan"
        },
        "baseRefName": "master",
        "body": "This PR is a container for several smaller PRs that refactor and generalize the existing Hahn series theory.  It is (I think) all we need from Hahn series to get a palatable theory of vertex algebras off the ground (other prerequisites from Lie algebras will eventually come in a different PR).  Major changes include:\r\n\r\n- equivalence between iterated Hahn series and Hahn series on Lex products.\r\n- introduce `orderTop` and `leadingCoeff` functions.  Here, `orderTop` is a `WithTop Î“`-valued version of `order` that does not need `[Zero Î“]` and `leadingCoeff` returns the coefficient of the minimal element of support (or zero if empty).\r\n- introduce ordered and cancellative vector addition classes together with some basic theory e.g., finiteness of antidiagonals for partially well-ordered sets.\r\n- `HahnSeries Î“ R`-module structure on `HahnModule Î“' R V`, when `Î“` is an `OrderedCancelAddCommMonoid`, `Î“'` is a `PartialOrder` with `OrderedCancelVAdd Î“ Î“'`, `R` is a semiring, and `V` is an `R`-module.\r\n- Move `AddVal` to a separate file - the underlying function is just `orderTop`, but the description of the valuation needs an additional import and an `IsDomain` hypothesis.  Results that depended on `AddVal` are changed to use `orderTop` and generalized.\r\n\r\n---\r\n\r\n- [x] depends on: #10781  [HahnSeries on Lex product]\r\n- [x] depends on: #10846  [HahnModule]\r\n- [x] depends on: #11965  [orderTop]\r\n- [x] depends on: #11979  [OrderedVAdd]\r\n- [x] depends on: #12996  [leadingTerm]\r\n- [x] depends on: #16649 \r\n- [x] depends on: #16701 \r\n- [x] depends on: #17004 \r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6AZqlM",
              "body": "### Import summary\n\n<details><summary>Dependency changes</summary>\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.RingTheory.HahnSeries.Summable | 895 | 890 | -5 (-0.56%) |\n</details>",
              "createdAt": "2024-06-07T06:56:51Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Aga6P",
              "body": "### PR summary [f1e4055e88](https://github.com/leanprover-community/mathlib4/pull/12251/commits/f1e4055e8817efb75ffe1bdf3888f6d0f4ecd083)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Fintype_of_pos_order`\n`+ PiFamily`\n`+ SMulCommClass`\n`+ add_coeffTop_map`\n`+ add_leading_orderTop_ne`\n`+ add_ne_top`\n`+ add_untop`\n`+ coeffTop`\n`+ coeffTop_Top`\n`+ coeffTop_add`\n`+ coeffTop_eq`\n`+ coeffTop_eq_zero_of_lt_orderTop`\n`+ coeff_add_leading`\n`+ coeff_eq_of_not_orderTop`\n`+ coeff_sum`\n`+ coeff_untop_eq`\n`+ coeff_zsmul`\n`+ equiv_map_on_finset_finsupp`\n`+ equiv_map_on_fintype_finsupp`\n`+ finsum_antidiagonal_prod`\n`+ finsum_prod`\n`+ heval`\n`+ heval_mul`\n`+ heval_unit`\n`+ hsum_pi_family`\n`+ inf_orderTop_le_orderTop_sum`\n`+ instGroupModule`\n`+ isPWO_iUnion_support_MVpow`\n`+ isPWO_iUnion_support_MVpow_support`\n`+ isPWO_iUnion_support_powers`\n`+ isPWO_iUnion_support_smul_MVpowers`\n`+ isPWO_iUnion_support_smul_pow`\n`+ le_orderTop_iff`\n`+ leadingCoeff_leadingTerm`\n`+ leadingCoeff_mul_of_nonzero`\n`+ leadingCoeff_pow_of_nonzero`\n`+ leadingTerm`\n`+ leadingTerm_eq`\n`+ leadingTerm_ne_iff`\n`+ leadingTerm_of_ne`\n`+ leadingTerm_zero`\n`+ lof`\n`+ mvPowerSeriesFamily`\n`+ mvPowerSeriesFamilyAdd`\n`+ mvPowerSeriesFamilySMul`\n`+ mvPowerSeriesFamily_supp_subset`\n`+ mvPowerSeries_family_prod_eq_family_mul`\n`+ mvPowers`\n`+ mvPowers_apply`\n`+ mvpow_finite_co_support`\n`+ ne_zero_of_coeffTop_ne_zero`\n`+ ne_zero_of_order_ne`\n`+ nonzero_of_nonzero_add_leading`\n`+ ofIterate.linearMap`\n`+ one_minus_single_mul`\n`+ orderTop_le_of_coeffTop_ne_zero`\n`+ orderTop_le_orderTop_add`\n`+ orderTop_lt_add_single_support_orderTop`\n`+ orderTop_mul_of_nonzero`\n`+ orderTop_one_le`\n`+ orderTop_pow_of_nonzero`\n`+ orderTop_smul_of_nonzero`\n`+ order_lt_add_single_support_order`\n`+ piFamily_cons`\n`+ pi_PWO_iUnion_support`\n`+ pi_finite_co_support`\n`+ prodPiCons_mem`\n`+ prod_mul`\n`+ single_add`\n`+ smul_coeffTop_orderTop_vAdd_orderTop`\n`+ smul_comm`\n`+ smul_pow_finite_co_support`\n`+ sum_eq_top`\n`+ sum_orderTop_le_orderTop_prod`\n`+ sum_untop`\n`+ supp_eq_univ_of_pos`\n`+ supp_eq_univ_of_pos_fintype`\n`+ support_MVpow_subset_closure`\n`+ support_MVpow_subset_closure_support`\n`+ support_pow_subset_closure`\n`+ support_prod_subset_add_support`\n`+ support_smul_MVpow_subset_closure`\n`+ support_smul_MVpow_subset_closure_support`\n`+ support_smul_pow_subset_closure`\n`+ support_subset_add_single_support`\n`+ toIterate.linearMap`\n`++ heval_coeff`\n`++ heval_coeff_zero`\n`- coeff_heval`\n`- coeff_heval_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-06-08T10:37:22Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6RWGuS",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#10781~~\n* ~~leanprover-community/mathlib4#10846~~\n* ~~leanprover-community/mathlib4#11965~~\n* ~~leanprover-community/mathlib4#11979~~\n* ~~leanprover-community/mathlib4#12996~~\n* ~~leanprover-community/mathlib4#16649~~\n* ~~leanprover-community/mathlib4#16701~~\n* ~~leanprover-community/mathlib4#17004~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-25T18:05:23Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-04-18T17:48:39Z",
        "deletions": 97,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/RingTheory/HahnSeries/Addition.lean",
              "additions": 134,
              "deletions": 12
            },
            {
              "path": "Mathlib/RingTheory/HahnSeries/Basic.lean",
              "additions": 103,
              "deletions": 13
            },
            {
              "path": "Mathlib/RingTheory/HahnSeries/HEval.lean",
              "additions": 510,
              "deletions": 14
            },
            {
              "path": "Mathlib/RingTheory/HahnSeries/Multiplication.lean",
              "additions": 136,
              "deletions": 33
            },
            {
              "path": "Mathlib/RingTheory/HahnSeries/PowerSeries.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/HahnSeries/Summable.lean",
              "additions": 174,
              "deletions": 25
            }
          ]
        },
        "headRefName": "ScottCarnahan/HahnRefactor",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5tFHRE",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "number": 12251,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeneA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883842/job/38810396536"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeiSA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883314/job/38810395208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeiNw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883305/job/38810395191"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeoPA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883838/job/38810396732"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeisQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883308/job/38810395313"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeoPg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883842/job/38810396734"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUenkA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883838/job/38810396560"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeiOQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883308/job/38810395193"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUeo1Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883842/job/38810396885"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUrXHg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13867883838/job/38810605342"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUetWQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38810398041"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCUfQOg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=12251&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(RingTheory/HahnSeries) : several generalizations",
        "updatedAt": "2025-03-15T01:03:41Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/12251"
      }
    }
  }
}
