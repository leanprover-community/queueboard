{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 512,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This is a linter that enforces that modules in certain directories should not import modules in certain others. For example, `Mathlib.Algebra.Notation` can only import `Mathlib.Algebra` files that are also in `Mathlib.Algebra.Notation`. The goal is that this improves modularity and organization in where we put files. At least it should force us to think a bit more about the directory structure of Mathlib.\r\n\r\nThere are certainly things to improve: the prefix search can probably be optimized using a trie or similar, and the list of directories is autogenerated based on the current state. But it works, so I want to make this PR and at least start the discussion.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 8,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6jE--9",
              "body": "### PR summary [d2997d8c1f](https://github.com/leanprover-community/mathlib4/pull/23088/commits/d2997d8c1f5079471b076ffb8793373622fb6b46)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +5.00% | `Mathlib.Init` |\n| +50.00% | `Mathlib.Tactic.Linter.Header` |\n| +4.35% | `Mathlib.Util.AssertExists` |\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\nThere are 6097 files with changed transitive imports taking up over 254725 characters: this is too many to display!\nYou can run `scripts/import_trans_difference.sh all` locally to see the whole output.\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Lean.Environment.importPath`\n`+ Lean.Name.collectPrefixes`\n`+ Lean.Name.findPrefix`\n`+ Lean.Name.prefixToName`\n`+ Lean.Name.prefixes`\n`+ NamePrefixRel`\n`+ contains`\n`+ directoryDependencyCheck`\n`+ find`\n`+ findAny`\n`+ forbiddenImportDirs`\n`+ insert`\n`+ instance : EmptyCollection NamePrefixRel := inferInstanceAs (EmptyCollection (NameMap _))`\n`+ ofArray`\n`+ overrideAllowedImportDirs`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-19T09:57:16Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jHKLY",
              "body": "!bench",
              "createdAt": "2025-03-19T13:03:33Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jHlIZ",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/3af1899b-671d-4a8a-bb13-0049fc500bc9) for commit b55d2376aca6a84361c45a831458f8d45276d131.\nThere were [no significant changes](https://speed.lean-lang.org/mathlib4/compare/41020ad3-d759-4da3-83b5-82993ea26baf/to/3af1899b-671d-4a8a-bb13-0049fc500bc9) against commit 67019e0bbfaccd3af41e6f73024551c6e80ad2d4.",
              "createdAt": "2025-03-19T13:35:09Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jHlie",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+636.96⬝10⁹|(+0.39%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13947878440)",
              "createdAt": "2025-03-19T13:35:43Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2f3a3f04e92dc724f114f784465d0d6a77804144",
                "additions": 129,
                "deletions": 0,
                "committedDate": "2025-03-24T15:56:34Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ef6315b45524b9790e27deafb7f4c8abe523c77f",
                "additions": 12,
                "deletions": 12,
                "committedDate": "2025-03-24T15:56:34Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0948173fc098339fe14d81d264b933ff8de9c69a",
                "additions": 36,
                "deletions": 3,
                "committedDate": "2025-03-24T15:56:34Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "92a893b3be95ee14ecea871387f47e56ed7c3fca",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2025-03-24T15:56:35Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "740e20a7f1102317b7e49310345a7e82d48070d3",
                "additions": 24,
                "deletions": 5,
                "committedDate": "2025-03-24T15:56:35Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3931d5f3286d75583f637de3e671832476952030",
                "additions": 314,
                "deletions": 1,
                "committedDate": "2025-03-24T15:56:35Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3ceeeedc5386d977e2495b1b94c9de353764c1b6",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2025-03-24T15:56:35Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "13b99943e918def95eab6683fc9a495f0e0dae26",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-03-24T15:56:35Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "Vierkantor@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3d89629295a009ddce90f5b4b75b71f551e57c8e",
                "additions": 10,
                "deletions": 8,
                "committedDate": "2025-03-24T15:56:35Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "Vierkantor@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1e216a1365e31fbe7d0de3b0e4c955b3f7b047d1",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2025-03-24T15:57:15Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8c99f4a0d89908cb6fd422d63bd4c3d2dbc35b9b",
                "additions": 1,
                "deletions": 7,
                "committedDate": "2025-03-24T15:57:16Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d2997d8c1f5079471b076ffb8793373622fb6b46",
                "additions": 9,
                "deletions": 3,
                "committedDate": "2025-03-24T15:57:16Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMicw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888589/job/39307125363"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuM_Hw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039890963/job/39307132703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMhBA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888591/job/39307124996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMvEQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039889741/job/39307128593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMvZA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039889746/job/39307128676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMkSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888586/job/39307125835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMijA",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888586/job/39307125388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMk6g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888589/job/39307125994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuMm_w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888589/job/39307126527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJJuNYyA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39307139272"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-19T09:56:16Z",
        "deletions": 15,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Init.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Linter/DirectoryDependency.lean",
              "additions": 495,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Linter/Header.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Util/AssertExists.lean",
              "additions": 2,
              "deletions": 5
            },
            {
              "path": "MathlibTest/Header.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "scripts/lint-style.lean",
              "additions": 2,
              "deletions": 0
            }
          ]
        },
        "headRefName": "linter.directoryDependency",
        "headRefOid": "d2997d8c1f5079471b076ffb8793373622fb6b46",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6PPoyR",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
              "color": "e2af78",
              "name": "RFC"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
              "color": "33DBEC",
              "name": "t-linter"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6g1Y_n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-03-19T13:03:27Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23088,
        "potentialMergeCommit": {
          "oid": "e364b245d1506896df49f15317f28d001c8b83ba"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6gzcSI",
              "body": "Thanks! This is a much more general approach than my WIP PR #22725; closing in favour of this one. I gave this a first reading; everything certainly seems to work this way.\r\n\r\nI wonder if having just an opt-out for imports is really the best approach, or if we should switch to an explicit allowlist/opt-in dependencies. (A hybrid version, combining both of these, also seems possible, and might be the best of both worlds.)\r\nFor certain directories (candidates coming to mind are `Init` (if it still exists/it was in the past), `Lean`, `Util`, `Tactic.Linter`, `Logic` and `Data`), I would expect that we can enumerate all *allowed* directories by hand - and doing so is clearer than listing 10-20 exceptions for each of these.\r\n\r\n(More generally, having a large list of auto-generated exceptions is hard to review in detail. The above might reduce this a bit. We could also land this in steps: first the infrastructure with some exceptions, and then make further PRs just adding more import organisation rules --- to separate these discussions.)\r\n\r\nAlso, can you please the remove the check for Deprecated imports from the broadImports check in the header linter?",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-03-19T13:02:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g1Y_n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-03-19T13:03:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hEBFu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T11:03:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hEBdz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T11:04:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hEBub",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T11:04:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hEErl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T11:07:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hEE9L",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T11:07:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hEHZ7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T11:10:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hFmel",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-03-20T12:52:39Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53YwxJ",
                    "body": "I would say \"imported by `Mathlib.Tactic.Linter.Header\", since that's the point here.",
                    "createdAt": "2025-03-19T10:24:35Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53YxGQ",
                    "body": "style comment: I believe this file mostly uses\r\n```\r\nif condition then\r\n  code\r\n```\r\nDo you feel strongly about your way, or do you mind adjusting? (The same applies to the directory dependency linter.)",
                    "createdAt": "2025-03-19T10:25:24Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53YxqW",
                    "body": "Pre-existing question: does this check run once per command that is linted, or just once per file? (How long does this take? If the former, I worry about performance.) Can we make this run just once?\r\n\r\nThis is pre-existing because the header linter already has this question. I don't remember what the answer is, and couldn't figure it out by looking at it briefly. Perhaps you already did; otherwise I can look more.",
                    "createdAt": "2025-03-19T10:26:48Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53Z5yJ",
                    "body": "My impression now is that this only runs once per file.",
                    "createdAt": "2025-03-19T13:03:27Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53h133",
                    "body": "So it's a bit more complicated: the header linter is called on each syntax item in the file, but the import checking code returns if it is not called on the last item of the import header. So all the commands you see here are only run once per file.",
                    "createdAt": "2025-03-20T11:10:09Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53Z3ua",
                    "body": "I presume you just took this code from the `assert_not_imported` command: can you share this somehow?",
                    "createdAt": "2025-03-19T12:58:30Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53hyic",
                    "body": "It will mean a bit of tweaking to `assert_not_exists`, but I think I can get it to work.",
                    "createdAt": "2025-03-20T11:03:51Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53iqEt",
                    "body": "It seems to work correctly :) One open issue: where should the code live? `assert_not_exists` imports `Mathlib.Init` so it has access to this function right now. But I don't think that's the neatest way to go about it.",
                    "createdAt": "2025-03-20T12:52:39Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53hyvt",
                    "body": "```suggestion\r\n  if let some msg ← directoryDependencyCheck mainModule then\r\n    Linter.logLint linter.directoryDependency stx msg\r\n```",
                    "createdAt": "2025-03-20T11:04:09Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53hy4X",
                    "body": "```suggestion\r\n    -- This file is imported by `Mathlib.Tactic.Linter.Header`.\r\n    |>.erase `Mathlib.Tactic.Linter.DirectoryDependency\r\n```",
                    "createdAt": "2025-03-20T11:04:24Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53h0Yv",
                    "body": "I'm not a huge fan of this style for `if` as an expression, but apparently it is a common thing. So:\r\n```suggestion\r\n      if ns.contains n₂' then\r\n        (n₁', n₂')\r\n      else\r\n        none\r\n```",
                    "createdAt": "2025-03-20T11:07:13Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53h0hO",
                    "body": "```suggestion\r\n      if ns.contains n₂' then\r\n        return (n₁', n₂')\r\n      else\r\n        pure ()\r\n```",
                    "createdAt": "2025-03-20T11:07:26Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMicw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888589/job/39307125363"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuM_Hw",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039890963/job/39307132703"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMhBA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888591/job/39307124996"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMvEQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039889741/job/39307128593"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMvZA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039889746/job/39307128676"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMkSw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888586/job/39307125835"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMijA",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888586/job/39307125388"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMk6g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888589/job/39307125994"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuMm_w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14039888589/job/39307126527"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJuNYyA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39307139272"
              }
            ]
          }
        },
        "title": "feat(Tactic/Linter): a linter for directory dependencies",
        "updatedAt": "2025-03-24T15:58:26Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23088",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6utfaczwAAAAPs88nE",
              "createdAt": "2025-03-19T09:56:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6utfaczwAAAAPs9Au8",
              "createdAt": "2025-03-19T09:57:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6utfaczwAAAAPs9A7J",
              "createdAt": "2025-03-19T09:57:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
                "name": "t-linter"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6jE--9",
              "createdAt": "2025-03-19T09:57:16Z",
              "body": "### PR summary [d2997d8c1f](https://github.com/leanprover-community/mathlib4/pull/23088/commits/d2997d8c1f5079471b076ffb8793373622fb6b46)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +5.00% | `Mathlib.Init` |\n| +50.00% | `Mathlib.Tactic.Linter.Header` |\n| +4.35% | `Mathlib.Util.AssertExists` |\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\nThere are 6097 files with changed transitive imports taking up over 254725 characters: this is too many to display!\nYou can run `scripts/import_trans_difference.sh all` locally to see the whole output.\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Lean.Environment.importPath`\n`+ Lean.Name.collectPrefixes`\n`+ Lean.Name.findPrefix`\n`+ Lean.Name.prefixToName`\n`+ Lean.Name.prefixes`\n`+ NamePrefixRel`\n`+ contains`\n`+ directoryDependencyCheck`\n`+ find`\n`+ findAny`\n`+ forbiddenImportDirs`\n`+ insert`\n`+ instance : EmptyCollection NamePrefixRel := inferInstanceAs (EmptyCollection (NameMap _))`\n`+ ofArray`\n`+ overrideAllowedImportDirs`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6gzcSI",
              "createdAt": "2025-03-19T10:24:35Z",
              "body": "Thanks! This is a much more general approach than my WIP PR #22725; closing in favour of this one. I gave this a first reading; everything certainly seems to work this way.\r\n\r\nI wonder if having just an opt-out for imports is really the best approach, or if we should switch to an explicit allowlist/opt-in dependencies. (A hybrid version, combining both of these, also seems possible, and might be the best of both worlds.)\r\nFor certain directories (candidates coming to mind are `Init` (if it still exists/it was in the past), `Lean`, `Util`, `Tactic.Linter`, `Logic` and `Data`), I would expect that we can enumerate all *allowed* directories by hand - and doing so is clearer than listing 10-20 exceptions for each of these.\r\n\r\n(More generally, having a large list of auto-generated exceptions is hard to review in detail. The above might reduce this a bit. We could also land this in steps: first the infrastructure with some exceptions, and then make further PRs just adding more import organisation rules --- to separate these discussions.)\r\n\r\nAlso, can you please the remove the check for Deprecated imports from the broadImports check in the header linter?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6jHKLY",
              "createdAt": "2025-03-19T13:03:33Z",
              "body": "!bench",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6C5Qmm",
              "createdAt": "2025-03-19T13:03:52Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6N5GBR",
                "title": "feat: enforce that Algebra.Notation imports no other files inside algebra",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22725"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6utfaczwAAAAPtN-8q",
              "createdAt": "2025-03-19T13:04:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6jHlIZ",
              "createdAt": "2025-03-19T13:35:09Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/3af1899b-671d-4a8a-bb13-0049fc500bc9) for commit b55d2376aca6a84361c45a831458f8d45276d131.\nThere were [no significant changes](https://speed.lean-lang.org/mathlib4/compare/41020ad3-d759-4da3-83b5-82993ea26baf/to/3af1899b-671d-4a8a-bb13-0049fc500bc9) against commit 67019e0bbfaccd3af41e6f73024551c6e80ad2d4.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6jHlie",
              "createdAt": "2025-03-19T13:35:43Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+636.96⬝10⁹|(+0.39%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13947878440)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hEBdz",
              "createdAt": "2025-03-20T11:04:08Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hEBub",
              "createdAt": "2025-03-20T11:04:24Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hEErl",
              "createdAt": "2025-03-20T11:07:13Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hEE9L",
              "createdAt": "2025-03-20T11:07:26Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6utfaczwAAAAPxTWV_",
              "createdAt": "2025-03-21T18:16:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2f3a3f04e92dc724f114f784465d0d6a77804144"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef6315b45524b9790e27deafb7f4c8abe523c77f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0948173fc098339fe14d81d264b933ff8de9c69a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "92a893b3be95ee14ecea871387f47e56ed7c3fca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "740e20a7f1102317b7e49310345a7e82d48070d3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3931d5f3286d75583f637de3e671832476952030"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3ceeeedc5386d977e2495b1b94c9de353764c1b6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "13b99943e918def95eab6683fc9a495f0e0dae26"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3d89629295a009ddce90f5b4b75b71f551e57c8e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1e216a1365e31fbe7d0de3b0e4c955b3f7b047d1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8c99f4a0d89908cb6fd422d63bd4c3d2dbc35b9b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d2997d8c1f5079471b076ffb8793373622fb6b46"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6utfaczwAAAAPy0Nyn",
              "createdAt": "2025-03-24T15:57:24Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6utfaczwAAAAPy0OEL",
              "createdAt": "2025-03-24T15:57:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6utfaczwAAAAPy0Qz_",
              "createdAt": "2025-03-24T15:58:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
