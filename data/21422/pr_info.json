{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 16,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "grunweg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This will allow generalising results from normed spaces/normed groups to `ENNReal` also.\r\nFrom the Carleson project.\r\nA future PR will generalise lemmas in mathlib to use these new classes.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6c_uwl",
              "body": "### PR summary [196c3fcf18](https://github.com/leanprover-community/mathlib4/pull/21422/commits/196c3fcf18ef9f0e50d42034a18a0a22a30496da)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ContinuousENorm`\n`+ ENormedAddCommMonoid`\n`+ ENormedAddMonoid`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-04T13:32:44Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dBGNP",
              "body": "The diagnostics output on the simp lemma is not helpful: putting \r\n```lean\r\nset_option diagnostics true in\r\nexample (I : Ideal (MvPolynomial σ k)) : vanishingIdeal (zeroLocus I) = sorry := by simp\r\n```\r\nat the end of `Mathlib/RingTheory/Nullstellensatz.lean` (i.e., the LHS of the lemma that times out in CI) yields\r\n\r\n```\r\n[diag] Diagnostics ▼\r\n  [reduction] unfolded declarations (max: 156, num: 8): ▶\r\n  [reduction] unfolded instances (max: 975, num: 38): ▼\r\n    [] Field.toCommRing ↦ 975     [] CommRing.toRing ↦ 912     [] Ring.toSemiring ↦ 717     [] CommSemiring.toSemiring ↦ 657     [] EuclideanDomain.toCommRing ↦ 550     [] Field.toEuclideanDomain ↦ 550     [] Semiring.toNonUnitalSemiring ↦ 484     [] NonUnitalSemiring.toNonUnitalNonAssocSemiring ↦ 444     [] Semiring.toNonAssocSemiring ↦ 404     [] NonAssocSemiring.toNonUnitalNonAssocSemiring ↦ 400     [] NonUnitalNonAssocSemiring.toAddCommMonoid ↦ 366     [] CommRing.toCommSemiring ↦ 349     [] Field.toSemifield ↦ 342     [] Semifield.toCommSemiring ↦ 342     [] AddCommMonoid.toAddMonoid ↦ 318     [] DivisionRing.toRing ↦ 269     [] AddMonoid.toAddZeroClass ↦ 88     [] AddZeroClass.toZero ↦ 84     [] MulZeroClass.toZero ↦ 84     [] NonUnitalNonAssocSemiring.toMulZeroClass ↦ 84     [] PartialOrder.toPreorder ↦ 84     [] LinearOrder.toPartialOrder ↦ 80     [] Preorder.toLT ↦ 48     [] Finset.instUnion ↦ 40     [] AddMonoid.toAddSemigroup ↦ 36     [] AddMonoidAlgebra.commRing ↦ 35     [] instCommRingMvPolynomial ↦ 35     [] AddMonoidAlgebra.nonUnitalNonAssocSemiring ↦ 34     [] AddMonoidAlgebra.nonUnitalSemiring ↦ 34     [] AddMonoidAlgebra.nonUnitalCommSemiring ↦ 30     [] Lattice.toSemilatticeSup ↦ 30     [] NonUnitalCommSemiring.toNonUnitalSemiring ↦ 30     [] SemilatticeSup.toPartialOrder ↦ 30     [] Finsupp.instAddCommMonoid ↦ 28     [] Finsupp.instAddMonoid ↦ 28     [] AddCommGroup.toAddGroup ↦ 22     [] AddGroup.toSubNegMonoid ↦ 22     [] SubNegMonoid.toAddMonoid ↦ 22 \r\n  [reduction] unfolded reducible declarations (max: 96, num: 11): ▶\r\n  [def_eq] heuristic for solving `f a =?= f b` (max: 60, num: 1): ▶\r\n```\r\n\r\nThe instance searches do not traverse anything related to ENorm. (In fact, reverting the ENorm change does not change anything in the output.)",
              "createdAt": "2025-02-04T15:26:43Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dBG_F",
              "body": "Yes, please also add the multiplicative versions of these classes, so that we can keep using `to_additive`",
              "createdAt": "2025-02-04T15:27:51Z",
              "author": {
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "196c3fcf18ef9f0e50d42034a18a0a22a30496da",
                "additions": 16,
                "deletions": 0,
                "committedDate": "2025-02-04T13:32:44Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgang@math.uni-bonn.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiSCCIg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13138726617/job/36660347426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLapOQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630591/job/36653410617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiSrd6g",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13138933087/job/36661026282"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLaxyg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631393/job/36653412810"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLawzA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631383/job/36653412556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLazIA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630593/job/36653413152"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLazOg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631390/job/36653413178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLav4g",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630593/job/36653412322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLarmA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630591/job/36653411224"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLawuw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631390/job/36653412539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLatfA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630591/job/36653411708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiMo6GQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630593/job/36654692889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLbvHg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36653428510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiLgigw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21422&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-04T13:31:48Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Normed/Group/Basic.lean",
              "additions": 16,
              "deletions": 0
            }
          ]
        },
        "headRefName": "MR-generalise-enorm-2",
        "headRefOid": "196c3fcf18ef9f0e50d42034a18a0a22a30496da",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6J_5vq",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAAB4saoFQ",
              "color": "1D2C57",
              "name": "carleson"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21422,
        "potentialMergeCommit": {
          "oid": "4f694e7f2ba0df28a1e0bc5e221dc8520667c285"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "fpvandoorn"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiSCCIg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13138726617/job/36660347426"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLapOQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630591/job/36653410617"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiSrd6g",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13138933087/job/36661026282"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLaxyg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631393/job/36653412810"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLawzA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631383/job/36653412556"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLazIA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630593/job/36653413152"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLazOg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631390/job/36653413178"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLav4g",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630593/job/36653412322"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLarmA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630591/job/36653411224"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLawuw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136631390/job/36653412539"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLatfA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630591/job/36653411708"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiMo6GQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13136630593/job/36654692889"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLbvHg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36653428510"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiLgigw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21422&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: add classes `ContinuousENorm` and `ENormed(Add)(Comm)Monoid`",
        "updatedAt": "2025-02-04T15:28:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21422",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c_uwl",
              "createdAt": "2025-02-04T13:32:44Z",
              "body": "### PR summary [196c3fcf18](https://github.com/leanprover-community/mathlib4/pull/21422/commits/196c3fcf18ef9f0e50d42034a18a0a22a30496da)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ContinuousENorm`\n`+ ENormedAddCommMonoid`\n`+ ENormedAddMonoid`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "196c3fcf18ef9f0e50d42034a18a0a22a30496da"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6osp5-zwAAAAPEV6Nf",
              "createdAt": "2025-02-04T13:32:52Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6osp5-zwAAAAPEczb1",
              "createdAt": "2025-02-04T15:18:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAAB4saoFQ",
                "name": "carleson"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dBGNP",
              "createdAt": "2025-02-04T15:26:43Z",
              "body": "The diagnostics output on the simp lemma is not helpful: putting \r\n```lean\r\nset_option diagnostics true in\r\nexample (I : Ideal (MvPolynomial σ k)) : vanishingIdeal (zeroLocus I) = sorry := by simp\r\n```\r\nat the end of `Mathlib/RingTheory/Nullstellensatz.lean` (i.e., the LHS of the lemma that times out in CI) yields\r\n\r\n```\r\n[diag] Diagnostics ▼\r\n  [reduction] unfolded declarations (max: 156, num: 8): ▶\r\n  [reduction] unfolded instances (max: 975, num: 38): ▼\r\n    [] Field.toCommRing ↦ 975     [] CommRing.toRing ↦ 912     [] Ring.toSemiring ↦ 717     [] CommSemiring.toSemiring ↦ 657     [] EuclideanDomain.toCommRing ↦ 550     [] Field.toEuclideanDomain ↦ 550     [] Semiring.toNonUnitalSemiring ↦ 484     [] NonUnitalSemiring.toNonUnitalNonAssocSemiring ↦ 444     [] Semiring.toNonAssocSemiring ↦ 404     [] NonAssocSemiring.toNonUnitalNonAssocSemiring ↦ 400     [] NonUnitalNonAssocSemiring.toAddCommMonoid ↦ 366     [] CommRing.toCommSemiring ↦ 349     [] Field.toSemifield ↦ 342     [] Semifield.toCommSemiring ↦ 342     [] AddCommMonoid.toAddMonoid ↦ 318     [] DivisionRing.toRing ↦ 269     [] AddMonoid.toAddZeroClass ↦ 88     [] AddZeroClass.toZero ↦ 84     [] MulZeroClass.toZero ↦ 84     [] NonUnitalNonAssocSemiring.toMulZeroClass ↦ 84     [] PartialOrder.toPreorder ↦ 84     [] LinearOrder.toPartialOrder ↦ 80     [] Preorder.toLT ↦ 48     [] Finset.instUnion ↦ 40     [] AddMonoid.toAddSemigroup ↦ 36     [] AddMonoidAlgebra.commRing ↦ 35     [] instCommRingMvPolynomial ↦ 35     [] AddMonoidAlgebra.nonUnitalNonAssocSemiring ↦ 34     [] AddMonoidAlgebra.nonUnitalSemiring ↦ 34     [] AddMonoidAlgebra.nonUnitalCommSemiring ↦ 30     [] Lattice.toSemilatticeSup ↦ 30     [] NonUnitalCommSemiring.toNonUnitalSemiring ↦ 30     [] SemilatticeSup.toPartialOrder ↦ 30     [] Finsupp.instAddCommMonoid ↦ 28     [] Finsupp.instAddMonoid ↦ 28     [] AddCommGroup.toAddGroup ↦ 22     [] AddGroup.toSubNegMonoid ↦ 22     [] SubNegMonoid.toAddMonoid ↦ 22 \r\n  [reduction] unfolded reducible declarations (max: 96, num: 11): ▶\r\n  [def_eq] heuristic for solving `f a =?= f b` (max: 60, num: 1): ▶\r\n```\r\n\r\nThe instance searches do not traverse anything related to ENorm. (In fact, reverting the ENorm change does not change anything in the output.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dBG_F",
              "createdAt": "2025-02-04T15:27:51Z",
              "body": "Yes, please also add the multiplicative versions of these classes, so that we can keep using `to_additive`",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6osp5-zwAAAAPEdYTv",
              "createdAt": "2025-02-04T15:28:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            }
          ]
        }
      }
    }
  }
}
