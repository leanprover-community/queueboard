{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 341,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "yuma-mizuno"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The basic design follows the API for colimits in the category theory library.\r\n\r\nThe dictionary looks like:\r\nCurrent PR\r\n`LeftExtension` <-> `Limits.Cocone`\r\n`LeftExtension.IsKan` <-> `Limits.IsColimit`\r\nFuture PR\r\n`LeftExtension.HasKan` <-> `Limits.HasColimit`\r\n`lan` <-> `Limits.colimit`\r\n\r\nThe diagrams in the docs are far from ideal, but I hope it helps for the time being. I would be very happy to have a graphical visualization by e.g. the widgets.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-08-26T20:13:20Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5k_8uH",
              "body": "Thanks!\r\nbors merge",
              "createdAt": "2023-08-26T19:18:39Z",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k_-yJ",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5986565460/job/16239848697)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5986565460/job/16239848870)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5986565460/job/16239848747)",
              "createdAt": "2023-08-26T20:13:19Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8e3dd23a7accd129276b701cc75a64d6f8c6222c",
                "additions": 249,
                "deletions": 0,
                "committedDate": "2023-08-13T00:39:25Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "99086c16a0c95efe354d91f6da5cedd8a825d5b9",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-08-13T01:27:12Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fde9c97fca700e97185ee4e11ac4e9f2521713b2",
                "additions": 85,
                "deletions": 0,
                "committedDate": "2023-08-15T06:01:31Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4a77c2fd3dcb132737e8821d2b317cba2eff4f43",
                "additions": 76,
                "deletions": 0,
                "committedDate": "2023-08-15T16:54:56Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fc33210fee8be494c10ba5fe47c7b3921dada2db",
                "additions": 6663,
                "deletions": 1427,
                "committedDate": "2023-08-15T17:00:09Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3c33b239a613a97115e2ea6aa4a89398e1efcfd5",
                "additions": 143,
                "deletions": 196,
                "committedDate": "2023-08-15T20:53:24Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "099366184afeb4145aa51d0857c7d750cee58f5b",
                "additions": 8,
                "deletions": 69,
                "committedDate": "2023-08-15T21:03:58Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f5ce9185fd0fa8af67f4c7914f05d394cb7b308b",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2023-08-15T21:27:32Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4c644c2271a820d2b9a21c12ead53811bcc11703",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-15T21:30:23Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d866dc766061c39892e11259d36f611b72a596bf",
                "additions": 4,
                "deletions": 3,
                "committedDate": "2023-08-15T21:49:08Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6badf01a1e28317bdd99290c7fd761572cb89dc9",
                "additions": 6,
                "deletions": 4,
                "committedDate": "2023-08-15T22:04:52Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "041d49b27804a0c124b3c6ba72d282084b54202b",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-18T16:59:56Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f95c58f34a9f6945655a2367309b76f86ff1e79d",
                "additions": 44,
                "deletions": 4,
                "committedDate": "2023-08-25T16:40:10Z",
                "author": {
                  "name": "Yuma Mizuno",
                  "email": "mizuno.y.aj@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-13T01:28:21Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Extension.lean",
              "additions": 160,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/IsKan.lean",
              "additions": 83,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/StructuredArrow.lean",
              "additions": 82,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ymizuno-kan",
        "headRefOid": "f95c58f34a9f6945655a2367309b76f86ff1e79d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Xzq84",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ecGw7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-18T11:49:33Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6552,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5d67VP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-13T08:22:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7iQU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "yuma-mizuno"
              },
              "submittedAt": "2023-08-13T20:19:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7oTm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-13T23:19:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d73nz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "yuma-mizuno"
              },
              "submittedAt": "2023-08-14T02:14:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d8New",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-14T04:46:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eAVND",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "yuma-mizuno"
              },
              "submittedAt": "2023-08-14T15:50:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ecF1J",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-18T11:47:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ecGw7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-18T11:49:33Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NDT8H",
                    "body": "With suitable imports, I would suggest using the existing limits API:\r\n```suggestion\r\nstructure IsKan (t : LeftExtension f g) where\r\n  /-- a left Kan extension is initial in `LeftExtension f g` -/\r\n  isInitial : Limits.IsInitial t\r\n```",
                    "createdAt": "2023-08-13T08:22:10Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ND1Vf",
                    "body": "How about stating the equivalence to `IsInitial` as a lemma instead of putting in the default consructor?\r\nThe constructor of `IsInitial` (defined as a specific `IsColimit`) unfolds `descHom` into `desc` and `fac`, but I find in the current situation it's more convenient to bundle them when providing a term of `IsKan t`.",
                    "createdAt": "2023-08-13T20:19:57Z",
                    "author": {
                      "login": "yuma-mizuno"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ND6rS",
                    "body": "As it seems to me that your definitions/lemmas are not at all specific to the category `LeftExtension`, I think the overall situation would be better if the general `IsInitial` API was improved instead, and then `IsKan` could be made an abbreviation of `IsInitial`. Indeed, I believe that for the future development of Kan extensions, it shall be convenient to use the `Limits` API, e.g. when two objects in `LeftExtension` are isomorphic, then one is initial iff the other is, etc. This should avoid some unnecessary duplication of code.",
                    "createdAt": "2023-08-13T23:19:05Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NEE13",
                    "body": "I see. Maybe it is enough to just define `abbrev IsKan (t : LeftExtension f g) := Limits.IsInitial t`?  I will try it.",
                    "createdAt": "2023-08-14T02:14:27Z",
                    "author": {
                      "login": "yuma-mizuno"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NESRs",
                    "body": "If we introduce the whiskering functors, the category `LeftExtension` identifies to a suitable category `StructuredArrow`. Recent PRs by @TwoFX like https://github.com/leanprover-community/mathlib4/pull/6248 contain useful results about these categories. I know that this type of results about `(Co)structuredArrow` categories will be very useful when proving things about Kan extensions (e.g. total derived functors for which I have done some experiments). Then, again, in order to avoid duplication of code, it would be great to base the definition of `Left/RightExtension` using this so that we can later use the existing and future developments of the `StructuredArrow` API. Still, you may introduce more convenient specialized abbreviations like \"LeftExtension.extension\" or \"LeftExtension.unit\" instead of `Comma.right` and `Comma.hom`.\r\n```lean\r\n@[simps]\r\ndef whiskeringLeft (a b c : B) : (a ⟶ b) ⥤ (b ⟶ c) ⥤ (a ⟶ c) where\r\n  obj f :=\r\n    { obj := fun e => f ≫ e\r\n      map := fun φ => f ◁ φ }\r\n  map ψ :=\r\n    { app := fun e => ψ ▷ e\r\n      naturality := fun {e₁ e₂} φ => whisker_exchange _ _ }\r\n\r\ndef LeftExtension (f : a ⟶ b) (g : a ⟶ c) :=\r\n  StructuredArrow g ((whiskeringLeft a b c).obj f)\r\n```",
                    "createdAt": "2023-08-14T04:46:13Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NG6p2",
                    "body": "This looks great! I think we need to develop an API for the initial object of `StructuredArrow` first. Does mathlib already have this?\r\n\r\n(It should be similar to the colimit API, which would suggest the possibility of refactoring the colimit files.)",
                    "createdAt": "2023-08-14T15:50:58Z",
                    "author": {
                      "login": "yuma-mizuno"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NY2F4",
                    "body": "```suggestion\r\nthe category theory library. This means that `IsKan t` is a structure containing the data of\r\n```",
                    "createdAt": "2023-08-18T11:47:15Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NY2qR",
                    "body": "I think that this design is good. As you have developed the API for both `StructuredArrow` and `CostructuredArrow`, I believe you may also add the dual definition `RightExtension.IsKan`.",
                    "createdAt": "2023-08-18T11:49:33Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY0MjE1MjU=",
              "login": "yuma-mizuno"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(CategoryTheory/Bicategory): define left Kan extensions",
        "updatedAt": "2023-08-26T20:13:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6552",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e3dd23a7accd129276b701cc75a64d6f8c6222c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "99086c16a0c95efe354d91f6da5cedd8a825d5b9"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJYu83H",
              "createdAt": "2023-08-13T01:28:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJYu83I",
              "createdAt": "2023-08-13T01:28:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d67VP",
              "createdAt": "2023-08-13T08:22:10Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d8New",
              "createdAt": "2023-08-14T04:46:13Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJZWPWe",
              "createdAt": "2023-08-14T16:33:07Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uK3DxzwAAAAJZWPw-",
              "createdAt": "2023-08-14T16:33:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fde9c97fca700e97185ee4e11ac4e9f2521713b2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4a77c2fd3dcb132737e8821d2b317cba2eff4f43"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fc33210fee8be494c10ba5fe47c7b3921dada2db"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3c33b239a613a97115e2ea6aa4a89398e1efcfd5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "099366184afeb4145aa51d0857c7d750cee58f5b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f5ce9185fd0fa8af67f4c7914f05d394cb7b308b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4c644c2271a820d2b9a21c12ead53811bcc11703"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d866dc766061c39892e11259d36f611b72a596bf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6badf01a1e28317bdd99290c7fd761572cb89dc9"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uK3DxzwAAAAJaHpM7",
              "createdAt": "2023-08-15T22:06:10Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJaHpNB",
              "createdAt": "2023-08-15T22:06:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ecF1J",
              "createdAt": "2023-08-18T11:47:15Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ecGw7",
              "createdAt": "2023-08-18T11:49:33Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "041d49b27804a0c124b3c6ba72d282084b54202b"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uK3DxzwAAAAJcIIpa",
              "createdAt": "2023-08-19T07:18:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJcIIpb",
              "createdAt": "2023-08-19T07:18:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f95c58f34a9f6945655a2367309b76f86ff1e79d"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uK3DxzwAAAAJfq3NI",
              "createdAt": "2023-08-25T16:43:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJfq3Nh",
              "createdAt": "2023-08-25T16:43:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k_8uH",
              "createdAt": "2023-08-26T19:18:39Z",
              "body": "Thanks!\r\nbors merge",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uK3DxzwAAAAJf_9IY",
              "createdAt": "2023-08-26T19:18:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uK3DxzwAAAAJf_9JO",
              "createdAt": "2023-08-26T19:18:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k_-yJ",
              "createdAt": "2023-08-26T20:13:19Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5986565460/job/16239848697)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5986565460/job/16239848870)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5986565460/job/16239848747)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uK3DxzwAAAAJgAZrf",
              "createdAt": "2023-08-26T20:13:20Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uK3DxzwAAAAJgAZsa",
              "createdAt": "2023-08-26T20:13:23Z"
            }
          ]
        }
      }
    }
  }
}
