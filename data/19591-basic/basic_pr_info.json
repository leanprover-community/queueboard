{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 580,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "joelriou"
        },
        "baseRefName": "master",
        "body": "Let `C : Type u` be an abelian category (`Category.{v} C`). We deduce from #19585 that `Ext X Y 0` identifies to the type of morphisms from `X` to `Y`. Moreover, assuming that `C` has enough projectives and is locally `w`-small, i.e. the type of morphisms in `C` are `Small.{w}`, we show that the condition `HasExt.{w}` holds, which means that for `X` and `Y` in `C`, and `n : â„•`, we may define `Ext X Y n : Type w`. In particular, this holds for `w = v`.\r\n\r\nThis is an important step in order to get a reasonably usable API for Ext-groups.\r\n\r\n---\r\n\r\n- [ ] depends on: #19585\r\n- [ ] depends on: #19584\r\n- [ ] depends on: #19579\r\n- [ ] depends on: #19578\r\n- [ ] depends on: #19550\r\n- [ ] depends on: #19543\r\n- [ ] depends on: #19544\r\n- [ ] depends on: #19559\r\n- [ ] depends on: #19560\r\n- [ ] depends on: #19574\r\n- [ ] depends on: #19572\r\n- [ ] depends on: #19570\r\n- [ ] depends on: #19203\r\n- [ ] depends on: #18502\r\n- [ ] depends on: #19198\r\n\r\n\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 12,
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-11-29T00:35:26Z",
        "deletions": 9,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Ext/Basic.lean",
              "additions": 60,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Ext/HasEnoughProjectives.lean",
              "additions": 131,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Fractions.lean",
              "additions": 175,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/FullyFaithful.lean",
              "additions": 61,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/HomologySequence.lean",
              "additions": 12,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/Embedding/CochainComplex.lean",
              "additions": 116,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Homology/Embedding/TruncGE.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/Embedding/TruncLE.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/HomotopyCategory.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/HomotopyCategory/SingleFunctors.lean",
              "additions": 6,
              "deletions": 0
            }
          ]
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Dg_kU",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "number": 19591,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOBpQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203756754/job/36861870501"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOI-A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203757622/job/36861872376"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOJNQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203757631/job/36861872437"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOAJg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203756752/job/36861870118"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOJYw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203757623/job/36861872483"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSN__A",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203756754/job/36861870076"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOBag",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203756752/job/36861870442"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSOK2A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203757623/job/36861872856"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSODDQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203756754/job/36861870861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSrVFg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13203756752/job/36862350614"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSPLlg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36861889430"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIlSQCdg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19591&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Abelian): Ext^0 and Ext-groups when there are enough projectives",
        "updatedAt": "2025-02-07T16:19:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19591"
      }
    }
  }
}
