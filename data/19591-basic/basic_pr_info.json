{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 455,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "joelriou"
        },
        "baseRefName": "master",
        "body": "Let `C : Type u` be an abelian category (`Category.{v} C`). We deduce from #19585 that `Ext X Y 0` identifies to the type of morphisms from `X` to `Y`. Moreover, assuming that `C` has enough projectives and is locally `w`-small, i.e. the type of morphisms in `C` are `Small.{w}`, we show that the condition `HasExt.{w}` holds, which means that for `X` and `Y` in `C`, and `n : â„•`, we may define `Ext X Y n : Type w`. In particular, this holds for `w = v`.\r\n\r\nThis is an important step in order to get a reasonably usable API for Ext-groups.\r\n\r\n---\r\n\r\n- [ ] depends on: #19585\r\n- [ ] depends on: #19584\r\n- [x] depends on: #19579\r\n- [x] depends on: #19578\r\n- [x] depends on: #19550\r\n- [x] depends on: #19543\r\n- [x] depends on: #19544\r\n- [x] depends on: #19559\r\n- [x] depends on: #19560\r\n- [x] depends on: #19574\r\n- [x] depends on: #19572\r\n- [x] depends on: #19570\r\n- [x] depends on: #19203\r\n- [x] depends on: #18502\r\n- [x] depends on: #19198\r\n\r\n\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 9,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6VbBVn",
              "body": "### PR summary [205ab701ff](https://github.com/leanprover-community/mathlib4/pull/19591/commits/205ab701ff814f6da83c892905455f7ef7b34349)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Homology.DerivedCategory.Ext.Basic | 1266 | 1285 | +19 (+1.50%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>5 files</summary> `Mathlib.Algebra.Homology.DerivedCategory.Ext.Basic` `Mathlib.Algebra.Homology.DerivedCategory.Ext.ExactSequences` `Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass` `Mathlib.CategoryTheory.Abelian.Projective.Dimension` `Mathlib.CategoryTheory.Sites.SheafCohomology.Basic`</details>|19|\n| `Mathlib.Algebra.Homology.DerivedCategory.Fractions` (new file)|1278|\n| `Mathlib.Algebra.Homology.DerivedCategory.FullyFaithful` (new file)|1280|\n| `Mathlib.Algebra.Homology.DerivedCategory.Ext.HasEnoughProjectives` (new file)|1416|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ eq_zero_of_projective`\n`+ from_singleFunctor_obj_projective_eq_zero`\n`+ hasExt_iff_small_ext`\n`+ hasExt_of_enoughProjectives`\n`+ homEquivâ‚€`\n`+ instance : (HomotopyCategory.quasiIso C (ComplexShape.up â„¤)).HasLeftCalculusOfFractions := by`\n`+ instance : (HomotopyCategory.quasiIso C (ComplexShape.up â„¤)).HasRightCalculusOfFractions := by`\n`+ isIso_Q_map_iff_quasiIso`\n`+ isIso_Qh_map_iff`\n`+ isSplitEpi_to_singleFunctor_obj_of_projective`\n`+ left_fac`\n`+ left_fac_of_isStrictlyGE`\n`+ left_fac_of_isStrictlyLE_of_isStrictlyGE`\n`+ mkâ‚€_bijective`\n`+ quotient_obj_surjective`\n`+ right_fac`\n`+ right_fac_of_isStrictlyLE`\n`+ right_fac_of_isStrictlyLE_of_isStrictlyGE`\n`+ singleFunctorCompHomologyFunctorIso`\n`+ subsingleton_hom_of_isStrictlyLE_of_isStrictlyGE`\n`++ instance (n : â„¤) : (singleFunctor C n).Faithful`\n`++ instance (n : â„¤) : (singleFunctor C n).Full`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (2.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|1224|2|erw|\n\nCurrent commit [205ab701ff](https://github.com/leanprover-community/mathlib4/commit/205ab701ff814f6da83c892905455f7ef7b34349)\nReference commit [6befc6324c](https://github.com/leanprover-community/mathlib4/commit/6befc6324c7b99e0796033458fb10bfb730d6290)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-11-29T00:36:13Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VbF-7",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#19585\n* leanprover-community/mathlib4#19584\n* ~~leanprover-community/mathlib4#19579~~\n* ~~leanprover-community/mathlib4#19578~~\n* ~~leanprover-community/mathlib4#19550~~\n* ~~leanprover-community/mathlib4#19543~~\n* ~~leanprover-community/mathlib4#19544~~\n* ~~leanprover-community/mathlib4#19559~~\n* ~~leanprover-community/mathlib4#19560~~\n* ~~leanprover-community/mathlib4#19574~~\n* ~~leanprover-community/mathlib4#19572~~\n* ~~leanprover-community/mathlib4#19570~~\n* ~~leanprover-community/mathlib4#19203~~\n* ~~leanprover-community/mathlib4#18502~~\n* ~~leanprover-community/mathlib4#19198~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-11-29T01:08:06Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-11-29T00:35:26Z",
        "deletions": 7,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Ext/Basic.lean",
              "additions": 60,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Ext/HasEnoughProjectives.lean",
              "additions": 131,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/Fractions.lean",
              "additions": 174,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/FullyFaithful.lean",
              "additions": 61,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DerivedCategory/HomologySequence.lean",
              "additions": 12,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/HomotopyCategory.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/HomotopyCategory/SingleFunctors.lean",
              "additions": 6,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ext-of-has-enough-projectives",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Dg_kU",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "number": 19591,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVV-A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663230496/job/38198924792"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVL1Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663229925/job/38198922197"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVL0w",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663229940/job/38198922195"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVVcA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663230495/job/38198924656"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVMzg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663229921/job/38198922446"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVUhw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663230496/job/38198924423"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVURQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663230495/job/38198924357"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVLpw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663229921/job/38198922151"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NVW-A",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663230496/job/38198925048"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NwATw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13663230495/job/38199361615"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NV6lA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38198934164"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5NWunw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19591&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Abelian): Ext^0 and Ext-groups when there are enough projectives",
        "updatedAt": "2025-03-04T21:26:01Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19591"
      }
    }
  }
}
