{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 132,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "dagurtomas"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "... also moves around some stuff and given an epi `f` in `Stonean`, `Profinite` or `CompHaus`, provides instances `[Epi f]` in both the other categories.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-09-06T13:05:27Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5lzyys",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6095750110/job/16539947905)",
              "createdAt": "2023-09-06T10:25:18Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l0ulU",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6096402407/job/16541883448)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6096402407/job/16541882994)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6096402407/job/16541883224)",
              "createdAt": "2023-09-06T13:05:26Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6e7426f244004e1fa999348adaa5413de2d016ef",
                "additions": 145,
                "deletions": 67,
                "committedDate": "2023-08-27T07:06:07Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b5258be0d4682cc04947ac68a8f7cb40c514d6da",
                "additions": 14,
                "deletions": 18,
                "committedDate": "2023-08-28T08:29:29Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0d93e4b6c5f51a822c9e194011057b35e909f173",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-31T08:23:25Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "60765bc0f43803a9e5f1ec4b7697e09a8560278b",
                "additions": 27,
                "deletions": 45,
                "committedDate": "2023-08-31T08:23:38Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "355d27a77948035a21874ac30d6d4ae79348b5cd",
                "additions": 11,
                "deletions": 7,
                "committedDate": "2023-08-31T08:32:31Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-27T09:26:49Z",
        "deletions": 72,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/Category/Profinite/Basic.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Category/Stonean/Basic.lean",
              "additions": 126,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/Category/Stonean/EffectiveEpi.lean",
              "additions": 0,
              "deletions": 61
            }
          ]
        },
        "headRefName": "dagur_StoneanProjectiveProfinite",
        "headRefOid": "355d27a77948035a21874ac30d6d4ae79348b5cd",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Y3XiO",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gImlu",
              "body": "bors merge",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-06T09:08:43Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6809,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fnDNz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-31T08:16:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fnqqU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2023-08-31T08:34:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fnqzA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2023-08-31T08:35:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gImlu",
              "body": "bors merge",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-06T09:08:43Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OJwq9",
                    "body": "I think this should be generalized to arbitrary finite discrete types. You can still keep this definition, but it should be a 1-liner application of a general `Stonean_of_finite_of_discrete` or `Stonean.mkFinite` or something like that.",
                    "createdAt": "2023-08-31T07:01:25Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OJya4",
                    "body": "```suggestion\r\n    Projective X := by\r\n```",
                    "createdAt": "2023-08-31T07:08:53Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OKFak",
                    "body": "```suggestion\r\n  refine ⟨?_, ConcreteCategory.epi_of_surjective _⟩\r\n  dsimp [Function.Surjective]\r\n  intro h y\r\n  by_contra' hy\r\n  let C := Set.range f\r\n  have hC : IsClosed C := (isCompact_range f.continuous).isClosed\r\n  let U := Cᶜ\r\n  have hUy : U ∈ nhds y := by\r\n    simp only [Set.mem_range, hy, exists_false, not_false_eq_true, hC.compl_mem_nhds]\r\n  obtain ⟨V, hV, hyV, hVU⟩ := isTopologicalBasis_clopen.mem_nhds_iff.mp hUy\r\n  classical\r\n  let g : Y ⟶ Stonean.two :=\r\n    ⟨(LocallyConstant.ofClopen hV).map ULift.up, LocallyConstant.continuous _⟩\r\n  let h : Y ⟶ Stonean.two := ⟨fun _ => ⟨1⟩, continuous_const⟩\r\n  have H : h = g := by\r\n    rw [← cancel_epi f]\r\n    ext x\r\n    apply ULift.ext -- why is `ext` not doing this automatically?\r\n    change 1 = ite _ _ _ -- why is `dsimp` not getting me here?\r\n    rw [if_neg]\r\n    refine mt (hVU ·) ?_ -- what would be an idiomatic tactic for this step?\r\n    simpa only [Set.mem_compl_iff, Set.mem_range, not_exists, not_forall, not_not]\r\n      using exists_apply_eq_apply f x\r\n  apply_fun fun e => (e y).down at H\r\n  change 1 = ite _ _ _ at H -- why is `dsimp at H` not getting me here?\r\n  rw [if_pos hyV] at H\r\n  exact one_ne_zero H\r\n```",
                    "createdAt": "2023-08-31T08:16:48Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OKK1y",
                    "body": "If we prove that `forget Stonean` preserves finite colimits then we can remove this hacky proof and deduce the theorem from general lemmas about concrete categories. I added a TODO.",
                    "createdAt": "2023-08-31T08:34:53Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OKK7q",
                    "body": "But thanks for providing this improvement!",
                    "createdAt": "2023-08-31T08:35:12Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI1NjIzODI5",
              "login": "dagurtomas"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: Stonean is projective in Profinite",
        "updatedAt": "2023-09-06T13:05:50Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6809",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6e7426f244004e1fa999348adaa5413de2d016ef"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vXepezwAAAAJgDibK",
              "createdAt": "2023-08-27T09:27:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vXepezwAAAAJgDibL",
              "createdAt": "2023-08-27T09:27:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vXepezwAAAAJgDibO",
              "createdAt": "2023-08-27T09:27:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5vXepezwAAAAJgDifP",
              "createdAt": "2023-08-27T09:27:16Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OIyKH",
              "createdAt": "2023-08-27T09:28:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Y3XpB",
                "title": "[Merged by Bors] - [Merged by Bors] - feat: condensed sets are equivalent to sheaves on `Stonean` and `Profinite`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6810"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b5258be0d4682cc04947ac68a8f7cb40c514d6da"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fnDNz",
              "createdAt": "2023-08-31T07:01:25Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0d93e4b6c5f51a822c9e194011057b35e909f173"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "60765bc0f43803a9e5f1ec4b7697e09a8560278b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "355d27a77948035a21874ac30d6d4ae79348b5cd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gImlu",
              "createdAt": "2023-09-06T09:08:43Z",
              "body": "bors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vXepezwAAAAJlhrY_",
              "createdAt": "2023-09-06T09:08:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5vXepezwAAAAJlhrbZ",
              "createdAt": "2023-09-06T09:08:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lzyys",
              "createdAt": "2023-09-06T10:25:18Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6095750110/job/16539947905)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l0ulU",
              "createdAt": "2023-09-06T13:05:26Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6096402407/job/16541883448)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6096402407/job/16541882994)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6096402407/job/16541883224)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5vXepezwAAAAJlrDuZ",
              "createdAt": "2023-09-06T13:05:28Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5vXepezwAAAAJlrEtS",
              "createdAt": "2023-09-06T13:05:50Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
