{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 487,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alreadydone"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "[Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.238406.20IsIntegral.20dot.20notation.2C.20noncomm.20generalization.20.26.20golf/near/402028285)\r\n\r\nInitially I just wanted to add more dot notations for IsIntegral and IsAlgebraic (done in #8437); then I noticed near-duplicates \r\n[Algebra.isIntegral_of_finite](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#Algebra.isIntegral_of_finite) `[Field R] [Ring A]` and \r\n[RingHom.IsIntegral.of_finite](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#RingHom.IsIntegral.of_finite) `[CommRing R] [CommRing A]`\r\nso I went on to generalize the latter to cover the former, and generalized everything in the IntegralClosure file to the noncommutative case whenever possible.\r\n\r\nIn the process I noticed more golfs, which result in this PR. Most notably, [isIntegral_of_mem_of_FG](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_mem_of_FG) is now proven using [Cayley-Hamilton](https://math.stackexchange.com/a/2494433/12932) and doesn't depend on the Noetherian case [isIntegral_of_noetherian](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_noetherian); the latter is now proven using the former. In total the golfs makes mathlib 227 lines leaner (+487 -714).\r\n\r\n\r\nThe main changes are in the single file [RingTheory/IntegralClosure](https://github.com/leanprover-community/mathlib4/pull/8406/files#diff-426d60d7e9edc9e20379127612410ad633864c2d5a9cd001729d128f0993b00e):\r\n\r\n+ Change the definition of `Algebra.IsIntegral` which makes it unfold to `IsIntegral` rather than `RingHom.IsIntegralElem` because the former has much more APIs.\r\n\r\n+ Fix lemma names involving `is_integral` which are actually about `IsIntegralElem`:\r\n`RingHom.is_integral_map` → `RingHom.isIntegralElem_map`\r\n`RingHom.is_integral_of_mem_closure` → `RingHom.IsIntegralElem.of_mem_closure`\r\n`RingHom.is_integral_zero/one` → `RingHom.isIntegralElem_zero/one`\r\n`RingHom.is_integral_add/neg/sub/mul/of_mul_unit` → `RingHom.IsIntegralElem.add/neg/sub/mul/of_mul_unit`\r\n\r\n+ Add a lemma `Algebra.IsIntegral.of_injective`.\r\n\r\n+ Move `isIntegral_of_(submodule_)noetherian` down and golf them.\r\n\r\n+ Remove `(Algebra.)isIntegral_of_finite` that work only over fields, in favor of the more general `(Algebra.)isIntegral.of_finite`.\r\n\r\n+ Merge duplicate lemmas `isIntegral_of_isScalarTower` and `isIntegral_tower_top_of_isIntegral` into `IsIntegral.tower_top`.\r\n\r\n+ Golf `IsIntegral.of_mem_of_fg` by first proving `IsIntegral.of_finite` using Cayley-Hamilton.\r\n\r\n+ Add a docstring mentioning the Kurosh problem at `Algebra.IsIntegral.finite`. The negative solution to the problem means the theorem doesn't generalize to noncommutative algebras.\r\n\r\n+ Golf `IsIntegral.tmul` and `isField_of_isIntegral_of_isField(')`.\r\n\r\n+ Combine `isIntegral_trans_aux` into `isIntegral_trans` and golf.\r\n\r\n+ Add `Algebra` namespace to `isIntegral_sup`.\r\n\r\n+ rename lemmas for dot notation:\r\n`RingHom.isIntegral_trans` → `RingHom.IsIntegral.trans`\r\n`RingHom.isIntegral_quotient/tower_bot/top_of_isIntegral` → `RingHom.IsIntegral.quotient/tower_bot/top`\r\n`isIntegral_of_mem_closure'` → `IsIntegral.of_mem_closure'` (and the '' version)\r\n`isIntegral_of_surjective` → `Algebra.isIntegral_of_surjective`\r\n\r\nThe next changed file is RingTheory/Algebraic:\r\n\r\n+ Rename:\r\n`of_larger_base` → `tower_top` (for consistency with `IsIntegral`)\r\n`Algebra.isAlgebraic_of_finite` → `Algebra.IsAlgebraic.of_finite`\r\n`Algebra.isAlgebraic_trans` → `Algebra.IsAlgebraic.trans`\r\n\r\n+ Add new lemmas`Algebra.IsIntegral.isAlgebraic`, `isAlgebraic_algHom_iff`, and `Algebra.IsAlgebraic.of_injective` to streamline some proofs.\r\n\r\n+ Add aliases `(Algebra.)IsAlgebraic.IsIntegral` (in the field case).\r\n\r\nThe generalization from CommRing to Ring requires an additional lemma `scaleRoots_eval₂_mul_of_commute` in Polynomial/ScaleRoots.\r\n\r\nA lemma `Algebra.lmul_injective` is added to Algebra/Bilinear (in order to golf the proof of `IsIntegral.of_mem_of_fg`).\r\n\r\nIn all other files, I merely fix the changed names, or use newly available dot notations.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 41,
        "closed": true,
        "closedAt": "2023-11-17T14:03:53Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5r7Kkh",
              "body": "!bench",
              "createdAt": "2023-11-14T16:46:52Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r-nL4",
              "body": "cc:\r\n+ original author of [isIntegral_of_mem_of_FG](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_mem_of_FG) @kckennylau\r\n+ @erdOne who introduced the generalized Cayley-Hamilton [LinearMap.exists_monic_and_aeval_eq_zero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Matrix/Charpoly/LinearMap.html#LinearMap.exists_monic_and_aeval_eq_zero) allowing to golf the above 97-line proof down to 1+2 lines (I guess it wasn't golfed due to Module.End being noncommutative?). I tried to golf your [isIntegral_of_smul_mem_submodule](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_smul_mem_submodule) as well using [Algebra.lsmul](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Algebra/Tower.html#Algebra.lsmul), but Lean has trouble inferring instances involving a submodule, requiring manually writing out some instances, so I gave up and left it alone.\r\n+ original author of [isField_of_isIntegral_of_isField](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isField_of_isIntegral_of_isField) @dtumad: I'm indeed able to use the `Polynomial.reverse` and `Polynomial.DivX` API\r\n+ original author of [isIntegral_trans_aux](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_trans_aux) @jcommelin (the aux lemma doesn't allow noncommutative B, so it's now removed, and the main proof now adjoins elements in A rather than in B)\r\n+ @eric-wieser @haruhisa-enomoto who may be interested in the noncommutative generalization\r\n",
              "createdAt": "2023-11-14T23:51:27Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r-yZY",
              "body": "Is it possible to split the dot notation changes to their own PR? It would be much better if the mathematical and stylistic content were in separate reviews.",
              "createdAt": "2023-11-15T00:44:21Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r_Xft",
              "body": "> Is it possible to split the dot notation changes to their own PR? It would be much better if the mathematical and stylistic content were in separate reviews.\r\n\r\nAs I said on Zulip:\r\n\r\n> The PR golfs some long proofs which collectively makes mathlib4 226 lines leaner, but only adds two new lemmas, removes an auxiliary lemma, and deduplicates some lemmas, so it's hopefully not hard to review.\r\n> The PR can't be easily split, as the renamed/reordered lemmas are also used in the golfs.\r\n\r\nThere is not much \"mathematical content\" because all I did to the lemma statements is [here](https://github.com/leanprover-community/mathlib4/pull/8406#discussion_r1393601820) (replacing [CommRing] by [Ring]). Lemmas may be moved (reordered), golfed, and deduplicated, but the statements are only changed (generalized) in this way, and these are all concentrated in the single file RingTheory/IntegralClosure (plus one lemma in Polynomial/ScaleRoots and Algebra/Bilinear each).\r\n\r\nOn the other hand, the stylistic (dot notation) changes require fixing lots of files, but those fixes are trivial to review. If I first introduce dot notation in a separate PR, I'll need to fix long proofs (e.g. `isIntegral_of_mem_of_FG`) that will simply be completely removed in the subsequent golfing PR. If I first do the golfs in a separate PR, I'll need to use the old lemma names and switch to new lemma names in the subsequent dot notations PR. So both options don't seem very economic, though I would choose the second option if you insist on a split.\r\n\r\n(I guess the \"feat\" in the PR title may cause misunderstanding; changed to \"chore\" now.)",
              "createdAt": "2023-11-15T04:01:59Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r_fOh",
              "body": "Thanks a lot for this PR. It's a nice clean-up.\r\n\r\nI do wonder whether we can make more use of new Lean 4 features now. Since this PR is renaming a lot of things, it might be good to keep the old names around and use the `@[deprecated]` feature to direct users to the new name.\r\n\r\n@semorrison Is there tooling to easily get a list of all decls that are being removed/added in this PR?",
              "createdAt": "2023-11-15T04:51:03Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r_nAd",
              "body": "> @semorrison Is there tooling to easily get a list of all decls that are being removed/added in this PR?\r\n\r\nNo, but @j-loreaux [explained](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.238389.20split.20MeasureSpace.2Elean.20into.203.20files/near/401851090) how to implement this. I'll review! :-)\r\n",
              "createdAt": "2023-11-15T05:33:46Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r_pXv",
              "body": "I think some fuzzy matches may be needed for this PR, as some lemmas changed both name and statement (CommRing -> Ring). Mathlib changelog probably can't trace through such changes.\r\n\r\nApplying retroactively to #8358 may be easier, as statements are not changed there.",
              "createdAt": "2023-11-15T05:47:20Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sAnfa",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/04b4a75a-eafb-4a46-af0f-e901e9076c36) for commit 7c8956d2555c8b18a57db0639fdd3f1eaa146759.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/4e3037ad-90c5-452b-895e-bef3b38c45e6/to/04b4a75a-eafb-4a46-af0f-e901e9076c36) against commit 30d39f9a058b13ec1786a90af4c051d650762951:\n```diff\n  Benchmark                             Metric         Change\n  ===========================================================\n+ ~Mathlib.RingTheory.IntegralClosure   instructions   -26.3%\n```",
              "createdAt": "2023-11-15T09:33:54Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sAsmO",
              "body": "> I think some fuzzy matches may be needed for this PR, as some lemmas changed both name and statement (CommRing -> Ring). Mathlib changelog probably can't trace through such changes.\r\n\r\nThis sounds like an argument for not mixing big renames with other refactors...",
              "createdAt": "2023-11-15T09:47:40Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sEFpy",
              "body": "@semorrison I'll work on it.",
              "createdAt": "2023-11-15T18:03:43Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sEX5J",
              "body": "I think `Algebra.IsIntegral` and `Algebra.IsAlgebraic` should be classes instead. Should we change it (in the future)? Will such a refactor reverse some changes made in this PR?",
              "createdAt": "2023-11-15T18:53:14Z",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sEYQ3",
              "body": "Also, does this PR conflict with #7857 significantly?",
              "createdAt": "2023-11-15T18:54:31Z",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sEkiJ",
              "body": "> I think some fuzzy matches may be needed for this PR, as some lemmas changed both name and statement (CommRing -> Ring). Mathlib changelog probably can't trace through such changes.\r\n\r\nOn a second thought, in fact the #align commands already provide a way to track declarations renamed in mathlib4; people tend to modify the #aligns (possibly adding ₓ) but rarely remove them. Ideally the mathlib changelog could track all mathlib4 declaration names that have ever been aligned to a mathlib3 declaration and display them in the same page (is it the case now?), so it can point people looking for a renamed declaration to the new name.\r\n\r\nHowever, declarations that don't exist in mathlib3 don't have associated #align commands. Maybe we could introduce a #rename command and ask PR authors to add such a command whenever they rename a declaration (and the changelog could track renaming history transitively, which will be distinct from #aligning to a fixed base mathlib3 declaration), or maybe such commands can be auto-generated, and all the author has to do is to use a UI to pick which new declarations correspond to which old declarations. \r\n\r\nThere may be auto-generated declarations that disappear or get added, but as a first approximation we may ignore them, as dealing with them may require building the whole mathlib rather than building a few modules and parsing some text.\r\n\r\nOnce we align renamed declarations, we can focus on comparing the declarations. GitHub offers a UI for `git diff` and we might want a `decl diff` UI as well. It should check the statement elaborates to the same thing, verify the arguments are the same (either strictly or up to reordering), highlight any the changed parts of the statement (e.g. generalized typeclasses) and definition body with red and green colors, and optionally allow to compare golfed proofs with the original. I imagine this will help reviews significantly, especially for auditing potential AI-assisted big refactors in the future (I wrote down some ideas on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Morph.20Prover.20v0.207B/near/398564304)).",
              "createdAt": "2023-11-15T19:32:02Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sFA2U",
              "body": "@jcommelin The way I generated this isn't ready for prime time, but here is a list of declarations which were added/removed (+/-) in this PR:\r\n```\r\n+Algebra.IsAlgebraic.of_finite\r\n+Algebra.IsAlgebraic.of_larger_base\r\n+Algebra.IsAlgebraic.of_larger_base_of_injective\r\n+Algebra.IsAlgebraic.trans\r\n+Algebra.IsIntegral.quotient\r\n+Algebra.IsIntegral.trans\r\n-Algebra.isAlgebraic_of_finite\r\n-Algebra.isAlgebraic_of_larger_base\r\n-Algebra.isAlgebraic_of_larger_base_of_injective\r\n-Algebra.isAlgebraic_trans\r\n-Algebra.isIntegral_of_finite\r\n+Algebra.isIntegral_of_surjective\r\n+Algebra.isIntegral_sup\r\n-Algebra.isIntegral_trans\r\n+Algebra.lmul_injective\r\n-FG_adjoin_of_finite\r\n-FG_adjoin_singleton_of_integral\r\n+IsAlgebraic.algHom\r\n+IsAlgebraic.algebraMap\r\n+IsAlgebraic.of_finite\r\n+IsAlgebraic.of_larger_base\r\n+IsAlgebraic.of_larger_base_of_injective\r\n+IsAlgebraic.of_pow\r\n+IsIntegral.add\r\n+IsIntegral.fg_adjoin_singleton\r\n+IsIntegral.map\r\n+IsIntegral.map_of_comp_eq\r\n+IsIntegral.mul\r\n+IsIntegral.neg\r\n+IsIntegral.of_finite\r\n+IsIntegral.of_mem_closure\r\n+IsIntegral.of_mem_closure'\r\n+IsIntegral.of_mem_closure''\r\n+IsIntegral.of_mem_of_fg\r\n+IsIntegral.of_mul_unit\r\n+IsIntegral.of_pow\r\n+IsIntegral.of_subring\r\n+IsIntegral.smul\r\n+IsIntegral.sub\r\n+IsIntegral.tower_bot\r\n+IsIntegral.tower_bot_of_field\r\n+IsIntegral.tower_top\r\n+Polynomial.scaleRoots_eval₂_mul_of_commute\r\n+RingHom.IsIntegral.quotient\r\n+RingHom.IsIntegral.tower_bot\r\n+RingHom.IsIntegral.tower_top\r\n+RingHom.IsIntegral.trans\r\n+RingHom.IsIntegralElem.add\r\n+RingHom.IsIntegralElem.mul\r\n+RingHom.IsIntegralElem.neg\r\n+RingHom.IsIntegralElem.of_mem_closure\r\n+RingHom.IsIntegralElem.of_mul_unit\r\n+RingHom.IsIntegralElem.sub\r\n+RingHom.isIntegralElem.of_comp\r\n-RingHom.isIntegralElem_of_isIntegralElem_comp\r\n-RingHom.isIntegral_of_isIntegral_mul_unit\r\n+RingHom.isIntegralElem_map\r\n+RingHom.isIntegralElem_one\r\n+RingHom.isIntegralElem_zero\r\n-RingHom.isIntegral_quotient_of_isIntegral\r\n-RingHom.isIntegral_tower_bot_of_isIntegral\r\n-RingHom.isIntegral_tower_top_of_isIntegral\r\n-RingHom.isIntegral_trans\r\n-RingHom.is_integral_add\r\n-RingHom.is_integral_map\r\n-RingHom.is_integral_mul\r\n-RingHom.is_integral_neg\r\n-RingHom.is_integral_of_mem_closure\r\n-RingHom.is_integral_one\r\n-RingHom.is_integral_sub\r\n-RingHom.is_integral_zero\r\n+fg_adjoin_of_finite\r\n-isAlgebraic_algHom_of_isAlgebraic\r\n-isAlgebraic_algebraMap_of_isAlgebraic\r\n-isAlgebraic_of_finite\r\n-isAlgebraic_of_larger_base\r\n-isAlgebraic_of_larger_base_of_injective\r\n-isAlgebraic_of_pow\r\n-isIntegral_add\r\n-isIntegral_map_of_comp_eq_of_isIntegral\r\n-isIntegral_mul\r\n-isIntegral_neg\r\n-isIntegral_ofSubring\r\n-isIntegral_of_finite\r\n-isIntegral_of_isIntegral_mul_unit\r\n-isIntegral_of_isScalarTower\r\n-isIntegral_of_mem_closure\r\n-isIntegral_of_mem_closure'\r\n-isIntegral_of_mem_closure''\r\n-isIntegral_of_mem_of_FG\r\n-isIntegral_of_pow\r\n-isIntegral_of_surjective\r\n-isIntegral_quotient_of_isIntegral\r\n-isIntegral_smul\r\n-isIntegral_sub\r\n-isIntegral_sup\r\n-isIntegral_tower_bot_of_isIntegral\r\n-isIntegral_tower_bot_of_isIntegral_field\r\n-isIntegral_tower_top_of_isIntegral\r\n-isIntegral_trans_aux\r\n-map_isIntegral\r\n-mem_integralClosure_iff_mem_FG\r\n+mem_integralClosure_iff_mem_fg\r\n```",
              "createdAt": "2023-11-15T20:59:21Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sFEZC",
              "body": "> I think `Algebra.IsIntegral` and `Algebra.IsAlgebraic` should be classes instead. Should we change it (in the future)? Will such a refactor reverse some changes made in this PR?\r\n\r\nThat's a reasonable future project, but what you do after making them classes is to change explicitness of arguments, which is orthogonal to renaming. If they become classes then indeed dot notations will become less useful, but the renames are still good. (In Lean 4 it's possible to dot notations associated with an implicit argument, but if passed immediately into another dot notation it will (always?) fail to elaborate.) Note that I'm not really renaming a lot of `Algebra.IsIntegral/Algebraic` lemmas: only 4 of each are renamed. I renamed more `Integral` lemmas but it won't be made a class.\r\n\r\n> Also, does this PR conflict with https://github.com/leanprover-community/mathlib4/pull/7857 significantly?\r\n\r\n[This part](https://github.com/leanprover-community/mathlib4/pull/7857/files#diff-b03b4d94cf987158796512d5a451a40c39d04c849da9da17804fab68d5a0a8e5R121-R154) uses some renamed lemmas, but the fix will be trivial (as in the majority of files in this PR).",
              "createdAt": "2023-11-15T21:12:19Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sFLK5",
              "body": "@j-loreaux Thanks! Here's a paired up version by reordering your list:\r\n(edited to fix a mismatch error)\r\n```diff\r\nThe two removed lemmas:\r\n-isIntegral_trans_aux\r\n-Algebra.isIntegral_of_finite (subsumed by Algebra.isIntegral.of_finite)\r\n\r\nTwo new lemmas:\r\n+Polynomial.scaleRoots_eval₂_mul_of_commute\r\n+Algebra.lmul_injective\r\n\r\n\r\n-Algebra.isAlgebraic_of_finite\r\n+Algebra.IsAlgebraic.of_finite\r\n\r\n-Algebra.isAlgebraic_of_larger_base\r\n+Algebra.IsAlgebraic.of_larger_base\r\n\r\n-Algebra.isAlgebraic_of_larger_base_of_injective\r\n+Algebra.IsAlgebraic.of_larger_base_of_injective\r\n\r\n-Algebra.isAlgebraic_trans\r\n+Algebra.IsAlgebraic.trans\r\n\r\n-isIntegral_quotient_of_isIntegral\r\n+Algebra.IsIntegral.quotient\r\n\r\n-Algebra.isIntegral_trans\r\n+Algebra.IsIntegral.trans\r\n\r\n-isIntegral_of_surjective\r\n+Algebra.isIntegral_of_surjective\r\n\r\n-isIntegral_sup\r\n+Algebra.isIntegral_sup\r\n\r\n\r\n-FG_adjoin_of_finite\r\n+fg_adjoin_of_finite\r\n\r\n-FG_adjoin_singleton_of_integral\r\n+IsIntegral.fg_adjoin_singleton\r\n\r\n-isAlgebraic_algHom_of_isAlgebraic\r\n+IsAlgebraic.algHom\r\n\r\n-isAlgebraic_algebraMap_of_isAlgebraic\r\n+IsAlgebraic.algebraMap\r\n\r\n-isAlgebraic_of_finite\r\n+IsAlgebraic.of_finite\r\n\r\n-isAlgebraic_of_larger_base\r\n+IsAlgebraic.of_larger_base\r\n\r\n-isAlgebraic_of_larger_base_of_injective\r\n+IsAlgebraic.of_larger_base_of_injective\r\n\r\n-isAlgebraic_of_pow\r\n+IsAlgebraic.of_pow\r\n\r\n\r\n-isIntegral_add\r\n+IsIntegral.add\r\n\r\n-isIntegral_map_of_comp_eq_of_isIntegral\r\n+IsIntegral.map_of_comp_eq\r\n\r\n-isIntegral_mul\r\n+IsIntegral.mul\r\n\r\n-isIntegral_neg\r\n+IsIntegral.neg\r\n\r\n-isIntegral_ofSubring\r\n+IsIntegral.of_subring\r\n\r\n-isIntegral_of_finite\r\n+IsIntegral.of_finite\r\n\r\n-isIntegral_of_isIntegral_mul_unit\r\n+IsIntegral.of_mul_unit\r\n\r\n-isIntegral_of_mem_closure\r\n+IsIntegral.of_mem_closure\r\n\r\n-isIntegral_of_mem_closure'\r\n+IsIntegral.of_mem_closure'\r\n\r\n-isIntegral_of_mem_closure''\r\n+IsIntegral.of_mem_closure''\r\n\r\n-isIntegral_of_mem_of_FG\r\n+IsIntegral.of_mem_of_fg\r\n\r\n-isIntegral_of_pow\r\n+IsIntegral.of_pow\r\n\r\n-isIntegral_smul\r\n+IsIntegral.smul\r\n\r\n-isIntegral_sub\r\n+IsIntegral.sub\r\n\r\n-isIntegral_tower_bot_of_isIntegral\r\n+IsIntegral.tower_bot\r\n\r\n-isIntegral_tower_bot_of_isIntegral_field\r\n+IsIntegral.tower_bot_of_field\r\n\r\n-isIntegral_of_isScalarTower\r\n-isIntegral_tower_top_of_isIntegral\r\n+IsIntegral.tower_top\r\n\r\n-map_isIntegral\r\n+IsIntegral.map\r\n\r\n-mem_integralClosure_iff_mem_FG\r\n+mem_integralClosure_iff_mem_fg\r\n\r\n\r\n-RingHom.isIntegral_quotient_of_isIntegral\r\n+RingHom.IsIntegral.quotient\r\n\r\n-RingHom.isIntegral_tower_bot_of_isIntegral\r\n+RingHom.IsIntegral.tower_bot\r\n\r\n-RingHom.isIntegral_tower_top_of_isIntegral\r\n+RingHom.IsIntegral.tower_top\r\n\r\n-RingHom.isIntegral_trans\r\n+RingHom.IsIntegral.trans\r\n\r\n-RingHom.is_integral_add\r\n+RingHom.IsIntegralElem.add\r\n\r\n-RingHom.is_integral_map\r\n+RingHom.isIntegralElem_map\r\n\r\n-RingHom.is_integral_mul\r\n+RingHom.IsIntegralElem.mul\r\n\r\n-RingHom.is_integral_neg\r\n+RingHom.IsIntegralElem.neg\r\n\r\n-RingHom.is_integral_of_mem_closure\r\n+RingHom.IsIntegralElem.of_mem_closure\r\n\r\n-RingHom.is_integral_one\r\n+RingHom.isIntegralElem_one\r\n\r\n-RingHom.is_integral_sub\r\n+RingHom.IsIntegralElem.sub\r\n\r\n-RingHom.is_integral_zero\r\n+RingHom.isIntegralElem_zero\r\n\r\n-RingHom.isIntegralElem_of_isIntegralElem_comp\r\n+RingHom.isIntegralElem.of_comp\r\n\r\n-RingHom.isIntegral_of_isIntegral_mul_unit\r\n+RingHom.IsIntegralElem.of_mul_unit\r\n```\r\n\r\nIf I knew about `@[deprecated]` (and that it's a good idea to use it here) I would have added them as I rename the lemmas. Since I didn't do that, should there be a utility that takes the list above and automatically add the @[deprecated ...] attributes? (Since most declarations are not in a `namespace` section, this should be easy for this PR.) Could one declaration have multiple `deprecated` attributes (I'd like that for `IsIntegral.tower_top`)?",
              "createdAt": "2023-11-15T21:36:10Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sGMKK",
              "body": "> I do wonder whether we can make more use of new Lean 4 features now. Since this PR is renaming a lot of things, it might be good to keep the old names around and use the `@[deprecated]` feature to direct users to the new name.\r\n\r\n@jcommelin Can you clarify how you intend to apply `@[deprecated]` attributes to this PR? From what I see in mathlib4, `@[deprecated X]` is added to a deprecated declaration Y to signify that X should be used instead of Y, so the old declaration Y need to be kept rather than renamed. The declarations X and Y usually don't have exactly the same statement (for example [RingHom.map_list_prod](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Basic.html#RingHom.map_list_prod) uses `RingHom` while [map_list_prod](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/BigOperators/Basic.html#map_list_prod) uses `MonoidHomClass`), so the attribute doesn't seem to be intended for renamed declarations.\r\n\r\nOf course I can make the new names aliases of the old ones, then this PR would be adding aliases rather than renaming (and I wouldn't even need to fix the 30+ files), but is such proliferation of aliases desirable? Every alias will appear in the docs in its full form, I think. Note that some old names are simply problematic (e.g. `isIntegral_sup` is lacking namespace) and should be renamed anyway. ",
              "createdAt": "2023-11-16T01:11:57Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sIGYx",
              "body": "I want to preface my comment by saying that this is my personal opinion. As a community, we're still very much trying to figure out what the best strategy/policy is, I guess.\r\n\r\nAnyways, I think I would advocate keeping the old names around, and tagging them with `@[deprecated fooBar]` as a pointer to the new name. In a future PR (can be hours/days/weeks later) we remove all the deprecated decls. The big upshot is that there will be a formal trace in the git history that traces the renaming. This will help:\r\n\r\n- people bumping mathlib in their personal projects\r\n- changelog\r\n- future automated refactoring tools that do mathlib bumps for us",
              "createdAt": "2023-11-16T09:18:17Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sIGuw",
              "body": "@j-loreaux Thanks for generating that list, and @alreadydone thanks for pairing up the old and new names. Would you mind preserving that list in the git history by copying it to the top message?",
              "createdAt": "2023-11-16T09:19:10Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sJMNq",
              "body": "Since @adomani has gone to the trouble of reducing the diff, I think we should merge #8437 before this PR.",
              "createdAt": "2023-11-16T12:29:25Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sOnr9",
              "body": "@adomani's #8437 did part of the renames, but the following were not included:\r\n\r\nIn IntegralClosure:\r\n`RingHom.is_integral_map` → `RingHom.isIntegralElem_map`\r\n`RingHom.is_integral_of_mem_closure` → `RingHom.IsIntegralElem.of_mem_closure`\r\n`RingHom.is_integral_zero/one` → `RingHom.isIntegralElem_zero/one`\r\n`RingHom.is_integral_add/neg/sub/mul/of_mul_unit` → `RingHom.IsIntegralElem.add/neg/sub/mul/of_mul_unit`\r\n`RingHom.isIntegral_trans` → `RingHom.IsIntegral.trans`\r\n`RingHom.isIntegral_quotient/tower_bot/top_of_isIntegral` → `RingHom.IsIntegral.quotient/tower_bot/top`\r\n`isIntegral_sup` → `Algebra.isIntegral_sup`\r\n`IsIntegral.of_mem_closure'` → `IsIntegral.of_mem_closure'`\r\n`isIntegral_of_surjective` → `Algebra.isIntegral_of_surjective`\r\n\r\nIn RingTheory/Algebraic:\r\n`of_larger_base` → `tower_top` (for consistency with `IsIntegral`)\r\n`Algebra.isAlgebraic_of_finite` → `Algebra.IsAlgebraic.of_finite`\r\n`Algebra.isAlgebraic_trans` → `Algebra.IsAlgebraic.trans`\r\n\r\nI also added a lemma `Algebra.IsIntegral.of_injective` in IntegralClosure and three in RingTheory/Algebraic: `Algebra.IsIntegral.isAlgebraic`, `isAlgebraic_algHom_iff`, and `Algebra.IsAlgebraic.of_injective` to streamline some proofs.\r\n\r\n(Currently I can't easily use @j-loreaux's #8433 to generate decl name changes, because if I merge this PR directly into #8433's branch the diff generated would include new commits on master. If I first merge master into #8433's branch, then I need to wait for the cache, and then merge this PR into #8433 and wait for the cache again, which is time consuming.)\r\n\r\nI also decided to make R implicit in [IsIntegral.isAlgebraic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Algebraic.html#IsIntegral.isAlgebraic), which resulted in more files needing to be fixed.\r\n\r\n@adomani's PR means that the current changes in IntegralClosure and RingTheory/Algebraic only cause 24 files to break, so it's possible to split PR into one that changes 24 files and another one that changes 17 files (depending on the previous one, which would just be using the new dot notations to golf proofs), but I'm not sure it's worth doing; most diffs would still be in the first PR. If @adomani would do another renaming PR and include some changes in implicitness, then the number 24 would decrease and a split may be more attractive.",
              "createdAt": "2023-11-17T05:30:13Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sPR60",
              "body": "Can you please add the remaining renames to the PR commit message?",
              "createdAt": "2023-11-17T08:40:12Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sPSiE",
              "body": "I'm inclined to merge this as is. Damiano's tool was a first success. And hopefully we can use it more in the future. But splitting up this PR seems like it will be a lot of work for comparatively little remaining gain.",
              "createdAt": "2023-11-17T08:42:16Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sPqpk",
              "body": "Thanks @jcommelin! PR message edited.",
              "createdAt": "2023-11-17T09:43:39Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sP2Oz",
              "body": "The renames were an experiment to test an automated renaming tool.  Since it was the first \"real world\" attempt, I aimed to rename only lemmas for which there was no dot-notation involved.\n\nCurrently, the tool finds the positions where the old declaration appears and replaces them with the new one.  No fancy namespacing/dot-notation/removal-of-arguments is implemented.\n\nI would like to add namespacing options, since that is easy to implement as a string-based replacement.\n\nHowever, doing more context/syntax-aware changes is best done with a tool implemented in Lean.\n\nThe tool itself, reads the location of the syntax from the `ilean` files and then uses bash-commands to do the string replacements.",
              "createdAt": "2023-11-17T10:14:49Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sQ-PZ",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2023-11-17T13:04:48Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sRWin",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6904476837/job/18785197571)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6904476837/job/18785198095)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6904476837/job/18785198352)",
              "createdAt": "2023-11-17T14:03:51Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sRbS_",
              "body": "@alreadydone yeah, #8433 is not usable until it's merged because it changes `lakefile.lean`. Sorry!",
              "createdAt": "2023-11-17T14:15:56Z",
              "author": {
                "login": "j-loreaux"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2468df5fa5967fbe24f5ecbaa3c0594414524be8",
                "additions": 242,
                "deletions": 250,
                "committedDate": "2023-11-13T08:45:58Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "510b86efcdcf5bd17c6a9706765b44fce4aa25b4",
                "additions": 76,
                "deletions": 137,
                "committedDate": "2023-11-13T23:40:23Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3a465952aef33320caa55d4e91a0f8bba71b54f0",
                "additions": 7,
                "deletions": 11,
                "committedDate": "2023-11-13T23:40:29Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4f7c3079617e547a3ff1fb4f2e35c4dd82109635",
                "additions": 35,
                "deletions": 44,
                "committedDate": "2023-11-14T09:01:30Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bd5d7180d2c8766d32f3a0b566829fe32e3553d3",
                "additions": 43,
                "deletions": 125,
                "committedDate": "2023-11-14T09:01:47Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "64c25fd6f13ff7346377514f32cd84258d9a60e4",
                "additions": 36,
                "deletions": 87,
                "committedDate": "2023-11-14T10:17:36Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ebca3ba9226737ad66be79a1749eae74cba02c89",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-11-14T10:32:56Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "11768a6f413321fcb4d5c16d38e8be1c34f84b61",
                "additions": 15,
                "deletions": 14,
                "committedDate": "2023-11-14T10:47:24Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a31622f018036479569c5ceea03273f5bea02155",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-14T10:50:08Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7e2042403eee45884706a025f07a500acaa23be8",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-14T10:53:52Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "97697d7f8921112fa2be9dd78f66ce23e1212e6b",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-11-14T11:01:15Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d87211d8dac2e16d8e8c7170341df886ce86953f",
                "additions": 9,
                "deletions": 10,
                "committedDate": "2023-11-14T11:09:34Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c309c8f35d94ac85cf1d7e9d8a028de51a176e33",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-14T11:10:28Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b7eafd0d70068ff5181056aa90fe8b88b22eb967",
                "additions": 6,
                "deletions": 7,
                "committedDate": "2023-11-14T11:25:24Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "eea6f6ac82db7f7e78ea88b5d9ce972184397fe9",
                "additions": 32,
                "deletions": 42,
                "committedDate": "2023-11-14T15:57:53Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7c8956d2555c8b18a57db0639fdd3f1eaa146759",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-14T16:18:22Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e46659dff03b94ef8af1f9a44a681d650796b1eb",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-14T16:32:38Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bec003c43cf4109b11a96bc53d186164963e7c20",
                "additions": 6,
                "deletions": 13,
                "committedDate": "2023-11-14T22:24:17Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6d01e639f9b9e4268d91c9cc954362a871a56af3",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-11-15T04:10:10Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d74ea8966477a0cd624acad780f8ac48aac322b",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-15T05:13:02Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4a2e85f416be416bc60934a0b2a75f9e89b424c9",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-11-16T00:42:19Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "36fe2fcdfab4f8d96f9a2f8ce77f78e03169e27f",
                "additions": 13,
                "deletions": 13,
                "committedDate": "2023-11-16T01:05:20Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqO3g",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916414/job/18728259294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqL6w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916089/job/18728258539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqMaQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916140/job/18728258665"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqPVA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916415/job/18728259412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqNlQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916089/job/18728258965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqM_g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916140/job/18728258814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqOuA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916415/job/18728259256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqOPA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916089/job/18728259132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqNmg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916140/job/18728258970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqMtQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916089/job/18728258741"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqOSQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916140/job/18728259145"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqPBQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916089/job/18728259333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqPCg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916140/job/18728259338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXEqPpg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916089/job/18728259494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXFT9Bw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6884916140/job/18728942855"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "cc0270f38e4a81ab798c764f7dca660f956fbf5b",
                "additions": 10447,
                "deletions": 6739,
                "committedDate": "2023-11-16T15:06:27Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqfGQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892607484/job/18750283545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqUSw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606407/job/18750280779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqVeg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606405/job/18750281082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqhdQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892607489/job/18750284149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqXkw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606407/job/18750281619"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqYnQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606405/job/18750281885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqf7g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892607489/job/18750283758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqVzQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606407/job/18750281165"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqT4Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606405/job/18750280673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqZGw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606407/job/18750282011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqXIA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606405/job/18750281504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqaww",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606407/job/18750282435"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqaDQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606405/job/18750282253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXZqcNQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606407/job/18750282805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXbuyng",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6892606405/job/18752451230"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "200178d031f54c6b470eb1d495eb0817e3dbd7ff",
                "additions": 30,
                "deletions": 29,
                "committedDate": "2023-11-16T16:05:43Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9v8A",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342922/job/18752696304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9lsA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342081/job/18752693680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9n2Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342092/job/18752694233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9w8Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342911/job/18752696561"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9pBg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342081/job/18752694534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9tRA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342092/job/18752695620"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9u_w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342911/job/18752696063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9ncA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342081/job/18752694128"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9mMQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342092/job/18752693809"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9qsA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342081/job/18752694960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9q4g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342092/job/18752695010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9pKQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342092/job/18752694569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9ssg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342081/job/18752695474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXb9ucw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342081/job/18752695923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXcO-RA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893342092/job/18752978500"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "297d2f87bd907876421913723f477f3c4e9409f3",
                "additions": 7,
                "deletions": 9,
                "committedDate": "2023-11-16T16:34:09Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBWBA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681744/job/18753803780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBPfg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681195/job/18753802110"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBQYA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681199/job/18753802336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBVbw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681740/job/18753803631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBTeQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681195/job/18753803129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBR1w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681199/job/18753802711"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBWmg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681740/job/18753803930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBQqw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681195/job/18753802411"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBS8A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681199/job/18753802992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBUzA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681195/job/18753803468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBPJQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681199/job/18753802021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBUYQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681199/job/18753803361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBSJQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681195/job/18753802789"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdBV_w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681195/job/18753803775"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdTezQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893681199/job/18754100941"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d9ba3f07499769fc5730aea4be84298a2c13ff61",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-16T16:45:26Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdcBrg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893818086/job/18754240942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb6Mg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817539/job/18754239026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb7Uw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817528/job/18754239315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdcB2Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893818095/job/18754240985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb9FQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817539/job/18754239765"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb97A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817528/job/18754239980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdcDJQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893818095/job/18754241317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb7vA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817539/job/18754239420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb5uQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817528/job/18754238905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdcAGQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817539/job/18754240537"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb8og",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817528/job/18754239650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb-pw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817539/job/18754240167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdb_Lg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817528/job/18754240302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXdcBkg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817539/job/18754240914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXeauSw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6893817528/job/18755268171"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "281e9f10d3631832f55d53369840609f3b1b91e3",
                "additions": 62,
                "deletions": 54,
                "committedDate": "2023-11-17T04:33:57Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunr5w",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913543/job/18772257767"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunq9g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913287/job/18772257526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunpmA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913289/job/18772257176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunsBg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913546/job/18772257798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunqCQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913287/job/18772257289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunrVw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913289/job/18772257623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunscQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913546/job/18772257905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunraw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913287/job/18772257643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunqcw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913289/job/18772257395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunpcQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913287/job/18772257137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunq6w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913289/job/18772257515"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunqCw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913289/job/18772257291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunqfw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913287/job/18772257407"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqljg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913289/job/18772305294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXunr1w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899913287/job/18772257751"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9bb4fbef6ab3edfc57aebc450f895618dd6c8819",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-17T04:36:24Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqGKg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929488/job/18772297258"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqElg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929103/job/18772296854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqD7g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929102/job/18772296686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqG6w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929485/job/18772297451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqQag",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929103/job/18772299882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqE5g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929102/job/18772296934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqGWg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929485/job/18772297306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqDzQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929103/job/18772296653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqEdw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929102/job/18772296823"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqQuA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929103/job/18772299960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqGCw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929102/job/18772297227"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqFaA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929102/job/18772297064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqREA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929103/job/18772300048"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuvKvw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929102/job/18772380351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuqRdA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899929103/job/18772300148"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b7e1a0cd9b5a066d17c6ad2634cd8dbe8145f60c",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-11-17T04:41:25Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuupNA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899959118/job/18772371764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuunAA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958824/job/18772371200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuum7Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958823/job/18772371181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuupiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899959111/job/18772371851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuun3A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958824/job/18772371420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuunZA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958823/job/18772371300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuuo-g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899959111/job/18772371706"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuundg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958824/job/18772371318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuunvQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958823/job/18772371389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuuosw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958824/job/18772371635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuuoNA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958823/job/18772371508"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuuopg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958823/job/18772371622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuuoRg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958824/job/18772371526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvOHgQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958823/job/18772887425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXuupHQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6899958824/job/18772371741"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2c064d4a51fe9202934264b190e482fa75d81160",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-17T05:12:31Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNrdw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900150188/job/18772880247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNpJg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772879654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNpng",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772879774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNrSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900150184/job/18772880203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNrLg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772880174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNqDA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772879884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNsBA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900150184/job/18772880388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNqtw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772880055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNrCA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772880136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNpkQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772879761"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNqjw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772880015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNqNg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772879926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNpNg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772879670"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvNrrA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772880300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEXvpK4Q",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18773330657"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-14T10:23:50Z",
        "deletions": 714,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/Bilinear.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/FieldTheory/AbelRuffini.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/FieldTheory/Adjoin.lean",
              "additions": 14,
              "deletions": 20
            },
            {
              "path": "Mathlib/FieldTheory/AxGrothendieck.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/Fixed.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/Galois.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/FieldTheory/IsAlgClosed/Basic.lean",
              "additions": 11,
              "deletions": 13
            },
            {
              "path": "Mathlib/FieldTheory/IsSepClosed.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/Minpoly/Field.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/FieldTheory/Normal.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/FieldTheory/Perfect.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/PolynomialGaloisGroup.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/PrimitiveElement.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/FieldTheory/Separable.lean",
              "additions": 4,
              "deletions": 6
            },
            {
              "path": "Mathlib/FieldTheory/SplittingField/Construction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/SplittingField/IsSplittingField.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/ClassNumber/Finite.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Discriminant.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/PrimitiveRoots.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Rat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Norm.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/NumberTheory/RamificationInertia.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/Field.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/PowerBasis.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/AdjoinRoot.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Algebraic.lean",
              "additions": 66,
              "deletions": 48
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/IntegralClosure.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/Discriminant.lean",
              "additions": 4,
              "deletions": 9
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Over.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/IntegralClosure.lean",
              "additions": 277,
              "deletions": 499
            },
            {
              "path": "Mathlib/RingTheory/IntegrallyClosed.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Jacobson.lean",
              "additions": 17,
              "deletions": 20
            },
            {
              "path": "Mathlib/RingTheory/Localization/Integral.lean",
              "additions": 6,
              "deletions": 9
            },
            {
              "path": "Mathlib/RingTheory/Norm.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Eisenstein/IsIntegral.lean",
              "additions": 5,
              "deletions": 10
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/ScaleRoots.lean",
              "additions": 20,
              "deletions": 14
            },
            {
              "path": "Mathlib/RingTheory/RingHom/Integral.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Trace.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "IsIntegral_dot",
        "headRefOid": "2c064d4a51fe9202934264b190e482fa75d81160",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fZQPw",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8406,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nIhdr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-14T17:17:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nL-Le",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-15T03:49:02Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TBsZL",
                    "body": "Some typeclass inference failures that may be worth investigating (but are probably well known)",
                    "createdAt": "2023-11-14T17:17:08Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TEK0c",
                    "body": "The only change to lemma statements is here.",
                    "createdAt": "2023-11-15T03:49:01Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjM2NDE0Mjcw",
              "login": "erdOne"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNrdw",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900150188/job/18772880247"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNpJg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772879654"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNpng",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772879774"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNrSw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900150184/job/18772880203"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNrLg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772880174"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNqDA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772879884"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNsBA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900150184/job/18772880388"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNqtw",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772880055"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNrCA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772880136"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNpkQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772879761"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNqjw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772880015"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNqNg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772879926"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNpNg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18772879670"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvNrrA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149881/job/18772880300"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEXvpK4Q",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6900149882/job/18773330657"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore(IntegralClosure, Algebraic): renames, noncommutative generalizations and golfs",
        "updatedAt": "2023-11-17T17:19:25Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8406",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2468df5fa5967fbe24f5ecbaa3c0594414524be8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "510b86efcdcf5bd17c6a9706765b44fce4aa25b4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3a465952aef33320caa55d4e91a0f8bba71b54f0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4f7c3079617e547a3ff1fb4f2e35c4dd82109635"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bd5d7180d2c8766d32f3a0b566829fe32e3553d3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "64c25fd6f13ff7346377514f32cd84258d9a60e4"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52wjRbzwAAAAKM09uJ",
              "createdAt": "2023-11-14T10:23:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52wjRbzwAAAAKM09uS",
              "createdAt": "2023-11-14T10:23:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52wjRbzwAAAAKM09uW",
              "createdAt": "2023-11-14T10:23:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52wjRbzwAAAAKM1FWJ",
              "createdAt": "2023-11-14T10:26:45Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ebca3ba9226737ad66be79a1749eae74cba02c89"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "11768a6f413321fcb4d5c16d38e8be1c34f84b61"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a31622f018036479569c5ceea03273f5bea02155"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7e2042403eee45884706a025f07a500acaa23be8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "97697d7f8921112fa2be9dd78f66ce23e1212e6b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d87211d8dac2e16d8e8c7170341df886ce86953f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c309c8f35d94ac85cf1d7e9d8a028de51a176e33"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b7eafd0d70068ff5181056aa90fe8b88b22eb967"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "eea6f6ac82db7f7e78ea88b5d9ce972184397fe9"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52wjRbzwAAAAKNExaQ",
              "createdAt": "2023-11-14T16:13:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52wjRbzwAAAAKNExeG",
              "createdAt": "2023-11-14T16:13:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7c8956d2555c8b18a57db0639fdd3f1eaa146759"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e46659dff03b94ef8af1f9a44a681d650796b1eb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r7Kkh",
              "createdAt": "2023-11-14T16:46:52Z",
              "body": "!bench",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nIhdr",
              "createdAt": "2023-11-14T17:17:08Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bec003c43cf4109b11a96bc53d186164963e7c20"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-nL4",
              "createdAt": "2023-11-14T23:51:27Z",
              "body": "cc:\r\n+ original author of [isIntegral_of_mem_of_FG](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_mem_of_FG) @kckennylau\r\n+ @erdOne who introduced the generalized Cayley-Hamilton [LinearMap.exists_monic_and_aeval_eq_zero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Matrix/Charpoly/LinearMap.html#LinearMap.exists_monic_and_aeval_eq_zero) allowing to golf the above 97-line proof down to 1+2 lines (I guess it wasn't golfed due to Module.End being noncommutative?). I tried to golf your [isIntegral_of_smul_mem_submodule](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_of_smul_mem_submodule) as well using [Algebra.lsmul](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Algebra/Tower.html#Algebra.lsmul), but Lean has trouble inferring instances involving a submodule, requiring manually writing out some instances, so I gave up and left it alone.\r\n+ original author of [isField_of_isIntegral_of_isField](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isField_of_isIntegral_of_isField) @dtumad: I'm indeed able to use the `Polynomial.reverse` and `Polynomial.DivX` API\r\n+ original author of [isIntegral_trans_aux](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/IntegralClosure.html#isIntegral_trans_aux) @jcommelin (the aux lemma doesn't allow noncommutative B, so it's now removed, and the main proof now adjoins elements in A rather than in B)\r\n+ @eric-wieser @haruhisa-enomoto who may be interested in the noncommutative generalization\r\n",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-yZY",
              "createdAt": "2023-11-15T00:44:21Z",
              "body": "Is it possible to split the dot notation changes to their own PR? It would be much better if the mathematical and stylistic content were in separate reviews.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nL-Le",
              "createdAt": "2023-11-15T03:49:01Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r_Xft",
              "createdAt": "2023-11-15T04:01:59Z",
              "body": "> Is it possible to split the dot notation changes to their own PR? It would be much better if the mathematical and stylistic content were in separate reviews.\r\n\r\nAs I said on Zulip:\r\n\r\n> The PR golfs some long proofs which collectively makes mathlib4 226 lines leaner, but only adds two new lemmas, removes an auxiliary lemma, and deduplicates some lemmas, so it's hopefully not hard to review.\r\n> The PR can't be easily split, as the renamed/reordered lemmas are also used in the golfs.\r\n\r\nThere is not much \"mathematical content\" because all I did to the lemma statements is [here](https://github.com/leanprover-community/mathlib4/pull/8406#discussion_r1393601820) (replacing [CommRing] by [Ring]). Lemmas may be moved (reordered), golfed, and deduplicated, but the statements are only changed (generalized) in this way, and these are all concentrated in the single file RingTheory/IntegralClosure (plus one lemma in Polynomial/ScaleRoots and Algebra/Bilinear each).\r\n\r\nOn the other hand, the stylistic (dot notation) changes require fixing lots of files, but those fixes are trivial to review. If I first introduce dot notation in a separate PR, I'll need to fix long proofs (e.g. `isIntegral_of_mem_of_FG`) that will simply be completely removed in the subsequent golfing PR. If I first do the golfs in a separate PR, I'll need to use the old lemma names and switch to new lemma names in the subsequent dot notations PR. So both options don't seem very economic, though I would choose the second option if you insist on a split.\r\n\r\n(I guess the \"feat\" in the PR title may cause misunderstanding; changed to \"chore\" now.)",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6d01e639f9b9e4268d91c9cc954362a871a56af3"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r_fOh",
              "createdAt": "2023-11-15T04:51:03Z",
              "body": "Thanks a lot for this PR. It's a nice clean-up.\r\n\r\nI do wonder whether we can make more use of new Lean 4 features now. Since this PR is renaming a lot of things, it might be good to keep the old names around and use the `@[deprecated]` feature to direct users to the new name.\r\n\r\n@semorrison Is there tooling to easily get a list of all decls that are being removed/added in this PR?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4d74ea8966477a0cd624acad780f8ac48aac322b"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r_nAd",
              "createdAt": "2023-11-15T05:33:46Z",
              "body": "> @semorrison Is there tooling to easily get a list of all decls that are being removed/added in this PR?\r\n\r\nNo, but @j-loreaux [explained](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.238389.20split.20MeasureSpace.2Elean.20into.203.20files/near/401851090) how to implement this. I'll review! :-)\r\n",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r_pXv",
              "createdAt": "2023-11-15T05:47:20Z",
              "body": "I think some fuzzy matches may be needed for this PR, as some lemmas changed both name and statement (CommRing -> Ring). Mathlib changelog probably can't trace through such changes.\r\n\r\nApplying retroactively to #8358 may be easier, as statements are not changed there.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sAnfa",
              "createdAt": "2023-11-15T09:33:54Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/04b4a75a-eafb-4a46-af0f-e901e9076c36) for commit 7c8956d2555c8b18a57db0639fdd3f1eaa146759.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/4e3037ad-90c5-452b-895e-bef3b38c45e6/to/04b4a75a-eafb-4a46-af0f-e901e9076c36) against commit 30d39f9a058b13ec1786a90af4c051d650762951:\n```diff\n  Benchmark                             Metric         Change\n  ===========================================================\n+ ~Mathlib.RingTheory.IntegralClosure   instructions   -26.3%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sAsmO",
              "createdAt": "2023-11-15T09:47:40Z",
              "body": "> I think some fuzzy matches may be needed for this PR, as some lemmas changed both name and statement (CommRing -> Ring). Mathlib changelog probably can't trace through such changes.\r\n\r\nThis sounds like an argument for not mixing big renames with other refactors...",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sEFpy",
              "createdAt": "2023-11-15T18:03:43Z",
              "body": "@semorrison I'll work on it.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sEX5J",
              "createdAt": "2023-11-15T18:53:14Z",
              "body": "I think `Algebra.IsIntegral` and `Algebra.IsAlgebraic` should be classes instead. Should we change it (in the future)? Will such a refactor reverse some changes made in this PR?",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sEYQ3",
              "createdAt": "2023-11-15T18:54:31Z",
              "body": "Also, does this PR conflict with #7857 significantly?",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sEkiJ",
              "createdAt": "2023-11-15T19:32:02Z",
              "body": "> I think some fuzzy matches may be needed for this PR, as some lemmas changed both name and statement (CommRing -> Ring). Mathlib changelog probably can't trace through such changes.\r\n\r\nOn a second thought, in fact the #align commands already provide a way to track declarations renamed in mathlib4; people tend to modify the #aligns (possibly adding ₓ) but rarely remove them. Ideally the mathlib changelog could track all mathlib4 declaration names that have ever been aligned to a mathlib3 declaration and display them in the same page (is it the case now?), so it can point people looking for a renamed declaration to the new name.\r\n\r\nHowever, declarations that don't exist in mathlib3 don't have associated #align commands. Maybe we could introduce a #rename command and ask PR authors to add such a command whenever they rename a declaration (and the changelog could track renaming history transitively, which will be distinct from #aligning to a fixed base mathlib3 declaration), or maybe such commands can be auto-generated, and all the author has to do is to use a UI to pick which new declarations correspond to which old declarations. \r\n\r\nThere may be auto-generated declarations that disappear or get added, but as a first approximation we may ignore them, as dealing with them may require building the whole mathlib rather than building a few modules and parsing some text.\r\n\r\nOnce we align renamed declarations, we can focus on comparing the declarations. GitHub offers a UI for `git diff` and we might want a `decl diff` UI as well. It should check the statement elaborates to the same thing, verify the arguments are the same (either strictly or up to reordering), highlight any the changed parts of the statement (e.g. generalized typeclasses) and definition body with red and green colors, and optionally allow to compare golfed proofs with the original. I imagine this will help reviews significantly, especially for auditing potential AI-assisted big refactors in the future (I wrote down some ideas on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Morph.20Prover.20v0.207B/near/398564304)).",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sFA2U",
              "createdAt": "2023-11-15T20:59:21Z",
              "body": "@jcommelin The way I generated this isn't ready for prime time, but here is a list of declarations which were added/removed (+/-) in this PR:\r\n```\r\n+Algebra.IsAlgebraic.of_finite\r\n+Algebra.IsAlgebraic.of_larger_base\r\n+Algebra.IsAlgebraic.of_larger_base_of_injective\r\n+Algebra.IsAlgebraic.trans\r\n+Algebra.IsIntegral.quotient\r\n+Algebra.IsIntegral.trans\r\n-Algebra.isAlgebraic_of_finite\r\n-Algebra.isAlgebraic_of_larger_base\r\n-Algebra.isAlgebraic_of_larger_base_of_injective\r\n-Algebra.isAlgebraic_trans\r\n-Algebra.isIntegral_of_finite\r\n+Algebra.isIntegral_of_surjective\r\n+Algebra.isIntegral_sup\r\n-Algebra.isIntegral_trans\r\n+Algebra.lmul_injective\r\n-FG_adjoin_of_finite\r\n-FG_adjoin_singleton_of_integral\r\n+IsAlgebraic.algHom\r\n+IsAlgebraic.algebraMap\r\n+IsAlgebraic.of_finite\r\n+IsAlgebraic.of_larger_base\r\n+IsAlgebraic.of_larger_base_of_injective\r\n+IsAlgebraic.of_pow\r\n+IsIntegral.add\r\n+IsIntegral.fg_adjoin_singleton\r\n+IsIntegral.map\r\n+IsIntegral.map_of_comp_eq\r\n+IsIntegral.mul\r\n+IsIntegral.neg\r\n+IsIntegral.of_finite\r\n+IsIntegral.of_mem_closure\r\n+IsIntegral.of_mem_closure'\r\n+IsIntegral.of_mem_closure''\r\n+IsIntegral.of_mem_of_fg\r\n+IsIntegral.of_mul_unit\r\n+IsIntegral.of_pow\r\n+IsIntegral.of_subring\r\n+IsIntegral.smul\r\n+IsIntegral.sub\r\n+IsIntegral.tower_bot\r\n+IsIntegral.tower_bot_of_field\r\n+IsIntegral.tower_top\r\n+Polynomial.scaleRoots_eval₂_mul_of_commute\r\n+RingHom.IsIntegral.quotient\r\n+RingHom.IsIntegral.tower_bot\r\n+RingHom.IsIntegral.tower_top\r\n+RingHom.IsIntegral.trans\r\n+RingHom.IsIntegralElem.add\r\n+RingHom.IsIntegralElem.mul\r\n+RingHom.IsIntegralElem.neg\r\n+RingHom.IsIntegralElem.of_mem_closure\r\n+RingHom.IsIntegralElem.of_mul_unit\r\n+RingHom.IsIntegralElem.sub\r\n+RingHom.isIntegralElem.of_comp\r\n-RingHom.isIntegralElem_of_isIntegralElem_comp\r\n-RingHom.isIntegral_of_isIntegral_mul_unit\r\n+RingHom.isIntegralElem_map\r\n+RingHom.isIntegralElem_one\r\n+RingHom.isIntegralElem_zero\r\n-RingHom.isIntegral_quotient_of_isIntegral\r\n-RingHom.isIntegral_tower_bot_of_isIntegral\r\n-RingHom.isIntegral_tower_top_of_isIntegral\r\n-RingHom.isIntegral_trans\r\n-RingHom.is_integral_add\r\n-RingHom.is_integral_map\r\n-RingHom.is_integral_mul\r\n-RingHom.is_integral_neg\r\n-RingHom.is_integral_of_mem_closure\r\n-RingHom.is_integral_one\r\n-RingHom.is_integral_sub\r\n-RingHom.is_integral_zero\r\n+fg_adjoin_of_finite\r\n-isAlgebraic_algHom_of_isAlgebraic\r\n-isAlgebraic_algebraMap_of_isAlgebraic\r\n-isAlgebraic_of_finite\r\n-isAlgebraic_of_larger_base\r\n-isAlgebraic_of_larger_base_of_injective\r\n-isAlgebraic_of_pow\r\n-isIntegral_add\r\n-isIntegral_map_of_comp_eq_of_isIntegral\r\n-isIntegral_mul\r\n-isIntegral_neg\r\n-isIntegral_ofSubring\r\n-isIntegral_of_finite\r\n-isIntegral_of_isIntegral_mul_unit\r\n-isIntegral_of_isScalarTower\r\n-isIntegral_of_mem_closure\r\n-isIntegral_of_mem_closure'\r\n-isIntegral_of_mem_closure''\r\n-isIntegral_of_mem_of_FG\r\n-isIntegral_of_pow\r\n-isIntegral_of_surjective\r\n-isIntegral_quotient_of_isIntegral\r\n-isIntegral_smul\r\n-isIntegral_sub\r\n-isIntegral_sup\r\n-isIntegral_tower_bot_of_isIntegral\r\n-isIntegral_tower_bot_of_isIntegral_field\r\n-isIntegral_tower_top_of_isIntegral\r\n-isIntegral_trans_aux\r\n-map_isIntegral\r\n-mem_integralClosure_iff_mem_FG\r\n+mem_integralClosure_iff_mem_fg\r\n```",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sFEZC",
              "createdAt": "2023-11-15T21:12:19Z",
              "body": "> I think `Algebra.IsIntegral` and `Algebra.IsAlgebraic` should be classes instead. Should we change it (in the future)? Will such a refactor reverse some changes made in this PR?\r\n\r\nThat's a reasonable future project, but what you do after making them classes is to change explicitness of arguments, which is orthogonal to renaming. If they become classes then indeed dot notations will become less useful, but the renames are still good. (In Lean 4 it's possible to dot notations associated with an implicit argument, but if passed immediately into another dot notation it will (always?) fail to elaborate.) Note that I'm not really renaming a lot of `Algebra.IsIntegral/Algebraic` lemmas: only 4 of each are renamed. I renamed more `Integral` lemmas but it won't be made a class.\r\n\r\n> Also, does this PR conflict with https://github.com/leanprover-community/mathlib4/pull/7857 significantly?\r\n\r\n[This part](https://github.com/leanprover-community/mathlib4/pull/7857/files#diff-b03b4d94cf987158796512d5a451a40c39d04c849da9da17804fab68d5a0a8e5R121-R154) uses some renamed lemmas, but the fix will be trivial (as in the majority of files in this PR).",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sFLK5",
              "createdAt": "2023-11-15T21:36:10Z",
              "body": "@j-loreaux Thanks! Here's a paired up version by reordering your list:\r\n(edited to fix a mismatch error)\r\n```diff\r\nThe two removed lemmas:\r\n-isIntegral_trans_aux\r\n-Algebra.isIntegral_of_finite (subsumed by Algebra.isIntegral.of_finite)\r\n\r\nTwo new lemmas:\r\n+Polynomial.scaleRoots_eval₂_mul_of_commute\r\n+Algebra.lmul_injective\r\n\r\n\r\n-Algebra.isAlgebraic_of_finite\r\n+Algebra.IsAlgebraic.of_finite\r\n\r\n-Algebra.isAlgebraic_of_larger_base\r\n+Algebra.IsAlgebraic.of_larger_base\r\n\r\n-Algebra.isAlgebraic_of_larger_base_of_injective\r\n+Algebra.IsAlgebraic.of_larger_base_of_injective\r\n\r\n-Algebra.isAlgebraic_trans\r\n+Algebra.IsAlgebraic.trans\r\n\r\n-isIntegral_quotient_of_isIntegral\r\n+Algebra.IsIntegral.quotient\r\n\r\n-Algebra.isIntegral_trans\r\n+Algebra.IsIntegral.trans\r\n\r\n-isIntegral_of_surjective\r\n+Algebra.isIntegral_of_surjective\r\n\r\n-isIntegral_sup\r\n+Algebra.isIntegral_sup\r\n\r\n\r\n-FG_adjoin_of_finite\r\n+fg_adjoin_of_finite\r\n\r\n-FG_adjoin_singleton_of_integral\r\n+IsIntegral.fg_adjoin_singleton\r\n\r\n-isAlgebraic_algHom_of_isAlgebraic\r\n+IsAlgebraic.algHom\r\n\r\n-isAlgebraic_algebraMap_of_isAlgebraic\r\n+IsAlgebraic.algebraMap\r\n\r\n-isAlgebraic_of_finite\r\n+IsAlgebraic.of_finite\r\n\r\n-isAlgebraic_of_larger_base\r\n+IsAlgebraic.of_larger_base\r\n\r\n-isAlgebraic_of_larger_base_of_injective\r\n+IsAlgebraic.of_larger_base_of_injective\r\n\r\n-isAlgebraic_of_pow\r\n+IsAlgebraic.of_pow\r\n\r\n\r\n-isIntegral_add\r\n+IsIntegral.add\r\n\r\n-isIntegral_map_of_comp_eq_of_isIntegral\r\n+IsIntegral.map_of_comp_eq\r\n\r\n-isIntegral_mul\r\n+IsIntegral.mul\r\n\r\n-isIntegral_neg\r\n+IsIntegral.neg\r\n\r\n-isIntegral_ofSubring\r\n+IsIntegral.of_subring\r\n\r\n-isIntegral_of_finite\r\n+IsIntegral.of_finite\r\n\r\n-isIntegral_of_isIntegral_mul_unit\r\n+IsIntegral.of_mul_unit\r\n\r\n-isIntegral_of_mem_closure\r\n+IsIntegral.of_mem_closure\r\n\r\n-isIntegral_of_mem_closure'\r\n+IsIntegral.of_mem_closure'\r\n\r\n-isIntegral_of_mem_closure''\r\n+IsIntegral.of_mem_closure''\r\n\r\n-isIntegral_of_mem_of_FG\r\n+IsIntegral.of_mem_of_fg\r\n\r\n-isIntegral_of_pow\r\n+IsIntegral.of_pow\r\n\r\n-isIntegral_smul\r\n+IsIntegral.smul\r\n\r\n-isIntegral_sub\r\n+IsIntegral.sub\r\n\r\n-isIntegral_tower_bot_of_isIntegral\r\n+IsIntegral.tower_bot\r\n\r\n-isIntegral_tower_bot_of_isIntegral_field\r\n+IsIntegral.tower_bot_of_field\r\n\r\n-isIntegral_of_isScalarTower\r\n-isIntegral_tower_top_of_isIntegral\r\n+IsIntegral.tower_top\r\n\r\n-map_isIntegral\r\n+IsIntegral.map\r\n\r\n-mem_integralClosure_iff_mem_FG\r\n+mem_integralClosure_iff_mem_fg\r\n\r\n\r\n-RingHom.isIntegral_quotient_of_isIntegral\r\n+RingHom.IsIntegral.quotient\r\n\r\n-RingHom.isIntegral_tower_bot_of_isIntegral\r\n+RingHom.IsIntegral.tower_bot\r\n\r\n-RingHom.isIntegral_tower_top_of_isIntegral\r\n+RingHom.IsIntegral.tower_top\r\n\r\n-RingHom.isIntegral_trans\r\n+RingHom.IsIntegral.trans\r\n\r\n-RingHom.is_integral_add\r\n+RingHom.IsIntegralElem.add\r\n\r\n-RingHom.is_integral_map\r\n+RingHom.isIntegralElem_map\r\n\r\n-RingHom.is_integral_mul\r\n+RingHom.IsIntegralElem.mul\r\n\r\n-RingHom.is_integral_neg\r\n+RingHom.IsIntegralElem.neg\r\n\r\n-RingHom.is_integral_of_mem_closure\r\n+RingHom.IsIntegralElem.of_mem_closure\r\n\r\n-RingHom.is_integral_one\r\n+RingHom.isIntegralElem_one\r\n\r\n-RingHom.is_integral_sub\r\n+RingHom.IsIntegralElem.sub\r\n\r\n-RingHom.is_integral_zero\r\n+RingHom.isIntegralElem_zero\r\n\r\n-RingHom.isIntegralElem_of_isIntegralElem_comp\r\n+RingHom.isIntegralElem.of_comp\r\n\r\n-RingHom.isIntegral_of_isIntegral_mul_unit\r\n+RingHom.IsIntegralElem.of_mul_unit\r\n```\r\n\r\nIf I knew about `@[deprecated]` (and that it's a good idea to use it here) I would have added them as I rename the lemmas. Since I didn't do that, should there be a utility that takes the list above and automatically add the @[deprecated ...] attributes? (Since most declarations are not in a `namespace` section, this should be easy for this PR.) Could one declaration have multiple `deprecated` attributes (I'd like that for `IsIntegral.tower_top`)?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PZJKa",
              "createdAt": "2023-11-15T22:54:05Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5fkbje",
                "title": "feat: add script to find added or deleted declarations between commits",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8433"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4a2e85f416be416bc60934a0b2a75f9e89b424c9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "36fe2fcdfab4f8d96f9a2f8ce77f78e03169e27f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sGMKK",
              "createdAt": "2023-11-16T01:11:57Z",
              "body": "> I do wonder whether we can make more use of new Lean 4 features now. Since this PR is renaming a lot of things, it might be good to keep the old names around and use the `@[deprecated]` feature to direct users to the new name.\r\n\r\n@jcommelin Can you clarify how you intend to apply `@[deprecated]` attributes to this PR? From what I see in mathlib4, `@[deprecated X]` is added to a deprecated declaration Y to signify that X should be used instead of Y, so the old declaration Y need to be kept rather than renamed. The declarations X and Y usually don't have exactly the same statement (for example [RingHom.map_list_prod](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Basic.html#RingHom.map_list_prod) uses `RingHom` while [map_list_prod](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/List/BigOperators/Basic.html#map_list_prod) uses `MonoidHomClass`), so the attribute doesn't seem to be intended for renamed declarations.\r\n\r\nOf course I can make the new names aliases of the old ones, then this PR would be adding aliases rather than renaming (and I wouldn't even need to fix the 30+ files), but is such proliferation of aliases desirable? Every alias will appear in the docs in its full form, I think. Note that some old names are simply problematic (e.g. `isIntegral_sup` is lacking namespace) and should be renamed anyway. ",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PZh4t",
              "createdAt": "2023-11-16T07:56:18Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5fmTd5",
                "title": "[Merged by Bors] - chore(RingTheory/{Algebraic, Localization/Integral}): rename decls to use dot notation",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8437"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sIGYx",
              "createdAt": "2023-11-16T09:18:17Z",
              "body": "I want to preface my comment by saying that this is my personal opinion. As a community, we're still very much trying to figure out what the best strategy/policy is, I guess.\r\n\r\nAnyways, I think I would advocate keeping the old names around, and tagging them with `@[deprecated fooBar]` as a pointer to the new name. In a future PR (can be hours/days/weeks later) we remove all the deprecated decls. The big upshot is that there will be a formal trace in the git history that traces the renaming. This will help:\r\n\r\n- people bumping mathlib in their personal projects\r\n- changelog\r\n- future automated refactoring tools that do mathlib bumps for us",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sIGuw",
              "createdAt": "2023-11-16T09:19:10Z",
              "body": "@j-loreaux Thanks for generating that list, and @alreadydone thanks for pairing up the old and new names. Would you mind preserving that list in the git history by copying it to the top message?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sJMNq",
              "createdAt": "2023-11-16T12:29:25Z",
              "body": "Since @adomani has gone to the trouble of reducing the diff, I think we should merge #8437 before this PR.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cc0270f38e4a81ab798c764f7dca660f956fbf5b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "200178d031f54c6b470eb1d495eb0817e3dbd7ff"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52wjRbzwAAAAKOogrB",
              "createdAt": "2023-11-16T16:15:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "297d2f87bd907876421913723f477f3c4e9409f3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d9ba3f07499769fc5730aea4be84298a2c13ff61"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52wjRbzwAAAAKOrRNz",
              "createdAt": "2023-11-16T17:13:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "281e9f10d3631832f55d53369840609f3b1b91e3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9bb4fbef6ab3edfc57aebc450f895618dd6c8819"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b7e1a0cd9b5a066d17c6ad2634cd8dbe8145f60c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2c064d4a51fe9202934264b190e482fa75d81160"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sOnr9",
              "createdAt": "2023-11-17T05:30:13Z",
              "body": "@adomani's #8437 did part of the renames, but the following were not included:\r\n\r\nIn IntegralClosure:\r\n`RingHom.is_integral_map` → `RingHom.isIntegralElem_map`\r\n`RingHom.is_integral_of_mem_closure` → `RingHom.IsIntegralElem.of_mem_closure`\r\n`RingHom.is_integral_zero/one` → `RingHom.isIntegralElem_zero/one`\r\n`RingHom.is_integral_add/neg/sub/mul/of_mul_unit` → `RingHom.IsIntegralElem.add/neg/sub/mul/of_mul_unit`\r\n`RingHom.isIntegral_trans` → `RingHom.IsIntegral.trans`\r\n`RingHom.isIntegral_quotient/tower_bot/top_of_isIntegral` → `RingHom.IsIntegral.quotient/tower_bot/top`\r\n`isIntegral_sup` → `Algebra.isIntegral_sup`\r\n`IsIntegral.of_mem_closure'` → `IsIntegral.of_mem_closure'`\r\n`isIntegral_of_surjective` → `Algebra.isIntegral_of_surjective`\r\n\r\nIn RingTheory/Algebraic:\r\n`of_larger_base` → `tower_top` (for consistency with `IsIntegral`)\r\n`Algebra.isAlgebraic_of_finite` → `Algebra.IsAlgebraic.of_finite`\r\n`Algebra.isAlgebraic_trans` → `Algebra.IsAlgebraic.trans`\r\n\r\nI also added a lemma `Algebra.IsIntegral.of_injective` in IntegralClosure and three in RingTheory/Algebraic: `Algebra.IsIntegral.isAlgebraic`, `isAlgebraic_algHom_iff`, and `Algebra.IsAlgebraic.of_injective` to streamline some proofs.\r\n\r\n(Currently I can't easily use @j-loreaux's #8433 to generate decl name changes, because if I merge this PR directly into #8433's branch the diff generated would include new commits on master. If I first merge master into #8433's branch, then I need to wait for the cache, and then merge this PR into #8433 and wait for the cache again, which is time consuming.)\r\n\r\nI also decided to make R implicit in [IsIntegral.isAlgebraic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Algebraic.html#IsIntegral.isAlgebraic), which resulted in more files needing to be fixed.\r\n\r\n@adomani's PR means that the current changes in IntegralClosure and RingTheory/Algebraic only cause 24 files to break, so it's possible to split PR into one that changes 24 files and another one that changes 17 files (depending on the previous one, which would just be using the new dot notations to golf proofs), but I'm not sure it's worth doing; most diffs would still be in the first PR. If @adomani would do another renaming PR and include some changes in implicitness, then the number 24 would decrease and a split may be more attractive.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sPR60",
              "createdAt": "2023-11-17T08:40:12Z",
              "body": "Can you please add the remaining renames to the PR commit message?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sPSiE",
              "createdAt": "2023-11-17T08:42:16Z",
              "body": "I'm inclined to merge this as is. Damiano's tool was a first success. And hopefully we can use it more in the future. But splitting up this PR seems like it will be a lot of work for comparatively little remaining gain.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sPqpk",
              "createdAt": "2023-11-17T09:43:39Z",
              "body": "Thanks @jcommelin! PR message edited.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sP2Oz",
              "createdAt": "2023-11-17T10:14:49Z",
              "body": "The renames were an experiment to test an automated renaming tool.  Since it was the first \"real world\" attempt, I aimed to rename only lemmas for which there was no dot-notation involved.\n\nCurrently, the tool finds the positions where the old declaration appears and replaces them with the new one.  No fancy namespacing/dot-notation/removal-of-arguments is implemented.\n\nI would like to add namespacing options, since that is easy to implement as a string-based replacement.\n\nHowever, doing more context/syntax-aware changes is best done with a tool implemented in Lean.\n\nThe tool itself, reads the location of the syntax from the `ilean` files and then uses bash-commands to do the string replacements.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sQ-PZ",
              "createdAt": "2023-11-17T13:04:48Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52wjRbzwAAAAKPTcTi",
              "createdAt": "2023-11-17T13:05:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52wjRbzwAAAAKPTcWY",
              "createdAt": "2023-11-17T13:05:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sRWin",
              "createdAt": "2023-11-17T14:03:51Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6904476837/job/18785197571)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6904476837/job/18785198095)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6904476837/job/18785198352)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52wjRbzwAAAAKPWDRa",
              "createdAt": "2023-11-17T14:03:53Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52wjRbzwAAAAKPWDoo",
              "createdAt": "2023-11-17T14:04:01Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sRbS_",
              "createdAt": "2023-11-17T14:15:56Z",
              "body": "@alreadydone yeah, #8433 is not usable until it's merged because it changes `lakefile.lean`. Sorry!",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PbjyK",
              "createdAt": "2023-11-17T20:27:41Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ffSEC",
                "title": "[Merged by Bors] - feat: IsNormalClosure predicate",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8418"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
