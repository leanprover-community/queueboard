{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1319,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "sgouezel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Now that `ContDiff` includes smoothness exponents up to analytic functions, we can do the same for manifolds. The PR renames `SmoothManifoldWithCorners` to `IsManifold`, and includes an additional smoothness exponent (ranging from 0 to infinity and omega). The dosctring of `IsManifold` emphasizes that this allows (but does not mandate) corners or boundaries.\r\n\r\nThe file `SmoothManifoldWithCorners` itself is not renamed, to avoid confusing git, and will be renamed in a follow-up PR.\r\n\r\nThe current version of the PR also allows an additional smoothness exponent in the algebraic classes like `ContMDiffMul` or `LieGroup`. For all of these, we add a bunch of instances to deduce low smoothness from high smoothness versions (for example, `LieGroup I 2 G` is found by typeclass inference from `LieGroup I ‚àû G`).\r\n\r\nThis change makes it possible to do things with the correct assumptions. For instance, the tangent bundle is a fiber bundle assuming only that the manifold is `C^1` (but we have instances saying that it is `C^‚àû` if the manifold is `C^‚àû`, analytic if the manifold is analytic).\r\n\r\nI still have to add deprecations. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n- [x] depends on: #19682\r\n\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 51,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Vydz9",
              "body": "### PR summary [9a041c85fb](https://github.com/leanprover-community/mathlib4/pull/19696/commits/9a041c85fb9741edda8b457db6b1f206fb2bf650)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Geometry.Manifold.AnalyticManifold | 1769 | 0 | -1769 (-100.00%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Geometry.Manifold.AnalyticManifold`|-1769|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Bundle.ContinuousLinearMap.vectorPrebundle.isContMDiff`\n`+ Bundle.Prod.contMDiffVectorBundle`\n`+ Bundle.TotalSpace.isManifold`\n`+ Bundle.Trivial.contMDiffVectorBundle`\n`+ ContMDiffAdd`\n`+ ContMDiffAddMonoidMorphism`\n`+ ContMDiffAt.of_succ(h`\n`+ ContMDiffFiberwiseLinear.hasGroupoid`\n`+ ContMDiffFiberwiseLinear.locality_aux‚ÇÅ`\n`+ ContMDiffFiberwiseLinear.locality_aux‚ÇÇ`\n`+ ContMDiffFunction.evalAt`\n`+ ContMDiffInv‚ÇÄ`\n`+ ContMDiffInv‚ÇÄ.of_le`\n`+ ContMDiffMonoidMorphism`\n`+ ContMDiffMul`\n`+ ContMDiffMul.of_le`\n`+ ContMDiffMul.prod`\n`+ ContMDiffRing`\n`+ ContMDiffVectorBundle`\n`+ ContMDiffVectorBundle.continuousLinearMap`\n`+ ContMDiffVectorBundle.of_le`\n`+ ContMDiffVectorBundle.pullback`\n`+ EuclideanSpace.instIsManifoldSphere`\n`+ IsManifold`\n`+ IsManifold.locallyRingedSpace`\n`+ IsManifold.mk'`\n`+ LieGroup.of_le`\n`+ OpenEmbedding.singleton_IsManifold`\n`+ PartialHomeomorph.isManifold_singleton`\n`+ PointedContMDiffMap`\n`+ StructureGroupoid.maximalAtlas_mono`\n`+ TangentBundle.contMDiffVectorBundle`\n`+ Topology.IsOpenEmbedding.isManifold_singleton`\n`+ _root_.ENat.LEInfty`\n`+ contDiffWithinAt_localInvariantProp_of_le`\n`+ contMDiffAt_infty`\n`+ contMDiffCoordChange`\n`+ contMDiffCoordChange_apply`\n`+ contMDiffFiberwiseLinear`\n`+ contMDiffOn_contMDiffCoordChange`\n`+ contMDiffOn_infty`\n`+ contMDiffOn_zero_iff`\n`+ contMDiffVectorBundle`\n`+ contMDiffWithinAt_infty`\n`+ contMDiff_infty`\n`+ contMDiff_zero_iff`\n`+ continuousMul_of_contMDiffMul`\n`+ hasContinuousInv‚ÇÄ_of_hasContMDiffInv‚ÇÄ`\n`+ instContMDiffAddSelf`\n`+ instContMDiffVectorBundle`\n`+ instIsManifoldIcc`\n`+ instIsManifoldTransDiffeomorph`\n`+ instance (n : ‚Ñï) : IsManifold (ùì° n) œâ (sphere (0 : EuclideanSpace ‚Ñù (Fin (n + 1))) 1)`\n`+ instance (n : ‚Ñï) : LEInfty (n : WithTop ‚Ñï‚àû) := ‚ü®mod_cast le_top‚ü©`\n`+ instance (n : ‚Ñï) [n.AtLeastTwo] : LEInfty (no_index (OfNat.ofNat n) : WithTop ‚Ñï‚àû)`\n`+ instance (priority := 100) ContMDiffRing.toContMDiffMul (I : ModelWithCorners ùïú E H) (R : Type*)`\n`+ instance (priority := 100) ContMDiffRing.toLieAddGroup (I : ModelWithCorners ùïú E H) (R : Type*)`\n`+ instance (priority := 100) fieldContMDiffRing`\n`+ instance : ContMDiffVectorBundle 0 F E IB := by`\n`+ instance : ContinuousMapClass (ContMDiffMonoidMorphism I I' n G G') G G'`\n`+ instance : FunLike (ContMDiffMonoidMorphism I I' n G G') G G'`\n`+ instance : Inhabited (ContMDiffMonoidMorphism I I' n G G')`\n`+ instance : IsManifold (ùì° 1) œâ Circle`\n`+ instance : IsManifold I 0 M := by`\n`+ instance : IsManifold I n s`\n`+ instance : IsManifold ùìò(‚ÑÇ) œâ ‚Ñç`\n`+ instance : IsManifold ùìò(ùïú, R) n RÀ£`\n`+ instance : LEInfty (0 : WithTop ‚Ñï‚àû) := inferInstanceAs (LEInfty ((0 : ‚Ñï) : WithTop ‚Ñï‚àû))`\n`+ instance : LEInfty (1 : WithTop ‚Ñï‚àû) := inferInstanceAs (LEInfty ((1 : ‚Ñï) : WithTop ‚Ñï‚àû))`\n`+ instance : LieGroup (ùì° 1) œâ Circle`\n`+ instance : LieGroup ùìò(ùïú, R) n RÀ£`\n`+ instance : MonoidHomClass (ContMDiffMonoidMorphism I I' n G G') G G'`\n`+ instance : One (ContMDiffMonoidMorphism I I' n G G')`\n`+ instance [ContMDiffInv‚ÇÄ I 2 G] : ContMDiffInv‚ÇÄ I 1 G`\n`+ instance [ContMDiffMul I 2 G] : ContMDiffMul I 1 G`\n`+ instance [ContMDiffVectorBundle 2 F E IB] : ContMDiffVectorBundle 1 F E IB`\n`+ instance [ContinuousMul G] : ContMDiffMul I 0 G := by`\n`+ instance [HasContinuousInv‚ÇÄ G] : ContMDiffInv‚ÇÄ I 0 G := by`\n`+ instance [IsManifold I 2 M] :`\n`+ instance [IsManifold I œâ M] :`\n`+ instance [LieGroup I 2 G] : LieGroup I 1 G`\n`+ instance [TopologicalGroup G] : LieGroup I 0 G := by`\n`+ instance [h : IsManifold I 2 M] :`\n`+ instance [h : IsManifold I ‚àû M] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffInv‚ÇÄ I œâ G] : ContMDiffInv‚ÇÄ I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffInv‚ÇÄ I ‚àû G] [h : ENat.LEInfty a] : ContMDiffInv‚ÇÄ I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffMul I œâ G] : ContMDiffMul I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffMul I ‚àû G] [h : ENat.LEInfty a] : ContMDiffMul I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffVectorBundle œâ F E IB] : ContMDiffVectorBundle a F E IB`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffVectorBundle ‚àû F E IB] [h : ENat.LEInfty a] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [IsManifold I œâ M] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [IsManifold I ‚àû M] [h : LEInfty a] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [LieGroup I œâ G] : LieGroup I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [LieGroup I ‚àû G] [h : ENat.LEInfty a] : LieGroup I a G`\n`+ instance {n : WithTop ‚Ñï‚àû} : IsManifold (ùì°‚àÇ 1) n (Icc (0 : ‚Ñù) 1) := by`\n`+ instance {ùïú : Type*} [NontriviallyNormedField ùïú] {n : WithTop ‚Ñï‚àû}`\n`+ instance {ùïú : Type*} [NontriviallyNormedField ùïú] {n : WithTop ‚Ñï‚àû} : ContMDiffInv‚ÇÄ ùìò(ùïú) n ùïú`\n`+ intIsManifoldModelSpace`\n`+ isManifold_of_contDiffOn`\n`+ maximalAtlas_subset_of_le`\n`+ mem_contMDiffFiberwiseLinear_iff`\n`+ mk_contMDiffCoordChange`\n`+ of_le`\n`+ tangentBundleCore.isContMDiff`\n`+ topologicalSemiring_of_contMDiffRing`\n`++ IsContMDiff`\n`- AnalyticManifold`\n`- AnalyticManifold.prod`\n`- AnalyticManifold.self`\n`- AnalyticManifold.smoothManifoldWithCorners`\n`- Bundle.ContinuousLinearMap.vectorPrebundle.isSmooth`\n`- Bundle.Prod.smoothVectorBundle`\n`- Bundle.TotalSpace.smoothManifoldWithCorners`\n`- Bundle.Trivial.smoothVectorBundle`\n`- ContMDiffAt.of_succ`\n`- EuclideanSpace.instSmoothManifoldWithCornersSphere`\n`- Icc_smoothManifoldWithCorners`\n`- OpenEmbedding.singleton_smoothManifoldWithCorners`\n`- PartialHomeomorph.singleton_smoothManifoldWithCorners`\n`- PointedSmoothMap`\n`- SmoothAdd`\n`- SmoothAddMonoidMorphism`\n`- SmoothFiberwiseLinear.hasGroupoid`\n`- SmoothFiberwiseLinear.locality_aux‚ÇÅ`\n`- SmoothFiberwiseLinear.locality_aux‚ÇÇ`\n`- SmoothFunction.evalAt`\n`- SmoothInv‚ÇÄ`\n`- SmoothManifoldWithCorners`\n`- SmoothManifoldWithCorners.locallyRingedSpace`\n`- SmoothManifoldWithCorners.mk'`\n`- SmoothMonoidMorphism`\n`- SmoothMul`\n`- SmoothMul.prod`\n`- SmoothRing`\n`- SmoothVectorBundle`\n`- SmoothVectorBundle.continuousLinearMap`\n`- SmoothVectorBundle.pullback`\n`- TangentBundle.smoothVectorBundle`\n`- Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- analyticGroupoid`\n`- analyticGroupoid_prod`\n`- analyticPregroupoid`\n`- contMDiffAt_top`\n`- contMDiffOn_smoothCoordChange`\n`- contMDiffOn_top`\n`- contMDiffWithinAt_top`\n`- contMDiff_top`\n`- continuousMul_of_smooth`\n`- hasContinuousInv‚ÇÄ_of_hasSmoothInv‚ÇÄ`\n`- hasSmoothAddSelf`\n`- instance (n : ‚Ñï) :`\n`- instance (priority := 100) SmoothRing.toLieAddGroup (I : ModelWithCorners ùïú E H) (R : Type*)`\n`- instance (priority := 100) SmoothRing.toSmoothMul (I : ModelWithCorners ùïú E H) (R : Type*)`\n`- instance (priority := 100) fieldSmoothRing {ùïú : Type*} [NontriviallyNormedField ùïú] :`\n`- instance : ClosedUnderRestriction (analyticGroupoid I)`\n`- instance : ContinuousMapClass (SmoothMonoidMorphism I I' G G') G G'`\n`- instance : FunLike (SmoothMonoidMorphism I I' G G') G G'`\n`- instance : Inhabited (SmoothMonoidMorphism I I' G G')`\n`- instance : LieGroup (ùì° 1) Circle`\n`- instance : LieGroup ùìò(ùïú, R) RÀ£`\n`- instance : MonoidHomClass (SmoothMonoidMorphism I I' G G') G G'`\n`- instance : One (SmoothMonoidMorphism I I' G G')`\n`- instance : SmoothManifoldWithCorners (ùì° 1) Circle`\n`- instance : SmoothManifoldWithCorners (ùì°‚àÇ 1) (Icc (0 : ‚Ñù) 1) := by infer_instance`\n`- instance : SmoothManifoldWithCorners I s`\n`- instance : SmoothManifoldWithCorners ùìò(‚ÑÇ) ‚Ñç`\n`- instance : SmoothManifoldWithCorners ùìò(ùïú, R) RÀ£`\n`- instance {ùïú : Type*} [NontriviallyNormedField ùïú] : SmoothInv‚ÇÄ ùìò(ùïú) ùïú`\n`- instance {ùïú : Type*} [NontriviallyNormedField ùïú] {H : Type*} [TopologicalSpace H] {E : Type*}`\n`- mem_analyticGroupoid`\n`- mem_analyticGroupoid_of_boundaryless`\n`- mem_smoothFiberwiseLinear_iff`\n`- mk_smoothCoordChange`\n`- model_space_smooth`\n`- ofSet_mem_analyticGroupoid`\n`- smoothCoordChange`\n`- smoothCoordChange_apply`\n`- smoothFiberwiseLinear`\n`- smoothManifoldWithCorners_of_contDiffOn`\n`- smoothManifoldWithCorners_transDiffeomorph`\n`- symm_trans_mem_analyticGroupoid`\n`- tangentBundleCore.isSmooth`\n`- topologicalSemiring_of_smooth`\n`-- IsSmooth`\n`-- smoothVectorBundle`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (1.13, 0.01)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|222|-1|bare open (scoped) Classical|\n|4878|-4|exceptions for the docPrime linter|\n\nCurrent commit [9a041c85fb](https://github.com/leanprover-community/mathlib4/commit/9a041c85fb9741edda8b457db6b1f206fb2bf650)\nReference commit [31530f31d5](https://github.com/leanprover-community/mathlib4/commit/31530f31d529f37cde81d086fe10b68e9eb1ee2f)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-02T22:04:10Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6V2pHH",
              "body": "About naming: how about `IsManifoldWithCorners`? I agree `ContDiff` is superfluous, given the exponent as an explicit parameter.",
              "createdAt": "2024-12-03T10:20:03Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6V5rp7",
              "body": "Yes, I will need to pass over all docs to adjust it to the new setting. I'll do that once people agree on what they want in the Zulip discussion.",
              "createdAt": "2024-12-03T15:45:18Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6WEofo",
              "body": "I'll add the deprecations once everything has been sorted out in the Zulip discussion: no need to do the same work two or three times...",
              "createdAt": "2024-12-04T15:34:20Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6WF0hP",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19682~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-12-04T17:34:44Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9a041c85fb9741edda8b457db6b1f206fb2bf650",
                "additions": 1319,
                "deletions": 1226,
                "committedDate": "2024-12-08T09:00:12Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F1ug",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438399/job/34088252858"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F1qA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438390/job/34088252840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F0CQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79Fz3g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088252382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F2Pg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438403/job/34088252990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F0vg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252606"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F0mA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088252568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F1xQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438403/job/34088252869"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F1Vw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F1GQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088252697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79F2AQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252929"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79OtCQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088398089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79GAdQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34088255605"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH79GaxQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19696&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-02T22:03:17Z",
        "deletions": 1226,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/ContDiff/Defs.lean",
              "additions": 0,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/Calculus/ContDiff/FTaylorSeries.lean",
              "additions": 8,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Manifold.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/Distribution/AEEqOfIntegralContDiff.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/LeftInvariantDerivation.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/LieGroup.lean",
              "additions": 132,
              "deletions": 73
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/Monoid.lean",
              "additions": 132,
              "deletions": 93
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/SmoothFunctions.lean",
              "additions": 96,
              "deletions": 93
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/Structures.lean",
              "additions": 29,
              "deletions": 24
            },
            {
              "path": "Mathlib/Geometry/Manifold/AnalyticManifold.lean",
              "additions": 0,
              "deletions": 172
            },
            {
              "path": "Mathlib/Geometry/Manifold/BumpFunction.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Geometry/Manifold/ChartedSpace.lean",
              "additions": 5,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/Complex.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Atlas.lean",
              "additions": 37,
              "deletions": 33
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Basic.lean",
              "additions": 13,
              "deletions": 12
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Defs.lean",
              "additions": 139,
              "deletions": 95
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/NormedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Product.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiffMFDeriv.lean",
              "additions": 49,
              "deletions": 21
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiffMap.lean",
              "additions": 2,
              "deletions": 5
            },
            {
              "path": "Mathlib/Geometry/Manifold/DerivationBundle.lean",
              "additions": 20,
              "deletions": 22
            },
            {
              "path": "Mathlib/Geometry/Manifold/Diffeomorph.lean",
              "additions": 24,
              "deletions": 22
            },
            {
              "path": "Mathlib/Geometry/Manifold/Instances/Real.lean",
              "additions": 12,
              "deletions": 9
            },
            {
              "path": "Mathlib/Geometry/Manifold/Instances/Sphere.lean",
              "additions": 46,
              "deletions": 46
            },
            {
              "path": "Mathlib/Geometry/Manifold/Instances/UnitsOfNormedAlgebra.lean",
              "additions": 10,
              "deletions": 13
            },
            {
              "path": "Mathlib/Geometry/Manifold/IntegralCurve/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Geometry/Manifold/IntegralCurve/UniformTime.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/InteriorBoundary.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/Atlas.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/Basic.lean",
              "additions": 19,
              "deletions": 18
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/Defs.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/NormedSpace.lean",
              "additions": 13,
              "deletions": 13
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/Tangent.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/UniqueDifferential.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/Manifold/PartitionOfUnity.lean",
              "additions": 24,
              "deletions": 26
            },
            {
              "path": "Mathlib/Geometry/Manifold/PoincareConjecture.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/Manifold/Sheaf/LocallyRingedSpace.lean",
              "additions": 5,
              "deletions": 7
            },
            {
              "path": "Mathlib/Geometry/Manifold/Sheaf/Smooth.lean",
              "additions": 24,
              "deletions": 27
            },
            {
              "path": "Mathlib/Geometry/Manifold/SmoothManifoldWithCorners.lean",
              "additions": 156,
              "deletions": 108
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/Basic.lean",
              "additions": 125,
              "deletions": 104
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean",
              "additions": 35,
              "deletions": 34
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/Hom.lean",
              "additions": 22,
              "deletions": 20
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/Pullback.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/SmoothSection.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/Tangent.lean",
              "additions": 53,
              "deletions": 22
            },
            {
              "path": "Mathlib/Geometry/Manifold/WhitneyEmbedding.lean",
              "additions": 8,
              "deletions": 10
            },
            {
              "path": "docs/overview.yaml",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "scripts/nolints_prime_decls.txt",
              "additions": 0,
              "deletions": 4
            }
          ]
        },
        "headRefName": "SG_smoothmanifold",
        "headRefOid": "9a041c85fb9741edda8b457db6b1f206fb2bf650",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Dz5iV",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJYYw",
              "color": "33dbec",
              "name": "t-differential-geometry"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6T03MY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-12-04T23:17:50Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19696,
        "potentialMergeCommit": {
          "oid": "838537bc621bd8b795de6c45454c82013680f9e9"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6TlaAT",
              "body": "This change means the following paragraph is also obsolete --- right? Can you take a pass over the module doc-string to ensure the implementation notes are up to date?\r\n\r\n```\r\nWe concentrate on C^‚àû manifolds: all the definitions work equally well for C^n manifolds, but later on it is a pain to carry all over the smoothness parameter, especially when one wants to deal with C^k functions as there would be additional conditions k ‚â§ n everywhere. Since one deals almost all the time with C^‚àû (or analytic) manifolds, this seems to be a reasonable choice that one could revisit later if needed. C^k manifolds are still available, but they should be called using [HasGroupoid](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Geometry/Manifold/ChartedSpace.html#HasGroupoid) M (contDiffGroupoid k I) where I is the model with corners.\r\n```",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-12-03T15:33:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TtRu9",
              "body": "Three small comments; I have to turn to other things now.\r\n\r\nCan you add deprecations for the old names, please? Thanks for doing this refactor!",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-12-04T10:57:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6T0uKQ",
              "body": "I've reviewed everything once, except for\r\n- Geometry/Manifold/Algebra/Monoid.lean\r\n- Geometry/Manifold/Algebra/SmoothFunctions.lean\r\n- Geometry/Manifold/AnalyticManifold.lean\r\n- Geometry/Manifold/ContMDiff/Defs.lean\r\n- Geometry/Manifold/SmoothManifoldWithCorners.lean\r\n\r\nMostly very minor comments. This PR is so cross-cutting that also doc-strings and lemma names can go stale: because you generalise things to C^n where appropriate, I think some more things should be called \"contDiffThing\" and not \"smoothThing\".\r\nI didn't read the file changing it yet, but \"smoothMaximalAtlas\" is another such example.\r\n\r\nI'm repeating myself, but let me say it again anyway: thanks for attempting this monumental feat. It's only natural that there are lots of little details that can go stale.\r\n\r\nI've reviewed this diff \"from the bottom\", so if something is confusing, you may want to read the comments in opposite order.",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-12-04T23:15:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6T03Ca",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-12-04T23:17:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6T03MY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-12-04T23:17:50Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vahDj",
                    "body": "Should this be `singleton_isManifold`?",
                    "createdAt": "2024-12-04T10:53:49Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vahL0",
                    "body": "Can you update the doc-string, please? It's even analytic.",
                    "createdAt": "2024-12-04T10:54:11Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vaiH0",
                    "body": "```suggestion\r\n`IccChartedSpace` and `instIsManifoldIcc`. -/",
                    "createdAt": "2024-12-04T10:55:38Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve8JX",
                    "body": "Write this on one line? Same above.",
                    "createdAt": "2024-12-04T22:47:45Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve8VR",
                    "body": "These lemmas are now generalised to their appropriate context: would you like to mention this in the PR description as well? (This is a positive change!)",
                    "createdAt": "2024-12-04T22:48:37Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve871",
                    "body": "Please double-check this module doc-string as well: there are still lots of mentions of \"smooth vector bundles\" or \"smooth manifolds\". In fact, this file proves them for $C^n$ (and analytic) bundles/manifolds now - let's show this to users of this file!",
                    "createdAt": "2024-12-04T22:51:41Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve9Z8",
                    "body": "Should `smoothCoordinateChange` (and `SmoothVectorPrebundle`) also be renamed?",
                    "createdAt": "2024-12-04T22:54:21Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve9k2",
                    "body": "Ah, they already were: please update the doc-string on (current) line 642 then.",
                    "createdAt": "2024-12-04T22:55:06Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve-rQ",
                    "body": "Please update this comment; also the one below.",
                    "createdAt": "2024-12-04T23:00:37Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vfBx_",
                    "body": "(And perhaps search for similar examples in mathlib: I only looked at the diff so far, not searched mathlib if there were further patterns.)",
                    "createdAt": "2024-12-04T23:17:11Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_Al",
                    "body": "depending on how the discussion ends: \"is an analytic Lie group\"?",
                    "createdAt": "2024-12-04T23:02:04Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_HN",
                    "body": "You could even say \"is analytic\". (Not sure if that's clearer.) Or mention both.",
                    "createdAt": "2024-12-04T23:02:34Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_Np",
                    "body": "If so, also please update the module doc-string to this file.",
                    "createdAt": "2024-12-04T23:03:09Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_aL",
                    "body": "Can you simplify the `by exact`?",
                    "createdAt": "2024-12-04T23:04:17Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_eQ",
                    "body": "And the `simp only` (one line down)?",
                    "createdAt": "2024-12-04T23:04:40Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_hP",
                    "body": ":+1:, thanks!",
                    "createdAt": "2024-12-04T23:04:55Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vfB5d",
                    "body": "Feel free to pull this into a separate PR also.",
                    "createdAt": "2024-12-04T23:17:50Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ve_5G",
                    "body": "These are annoying, but perhaps that's the price of such a major refactoring. It need not block in this, in any case.",
                    "createdAt": "2024-12-04T23:06:58Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vfADd",
                    "body": "Please update this doc-string: \"for any n\" is now false. (I haven't checked if other doc-strings in this file are also stale now.)",
                    "createdAt": "2024-12-04T23:07:54Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vfAQC",
                    "body": "Happy to approve this \"immediately\" if you extract it into a separate PR. (If you think the book-keeping is worth it.)\r\nThe same applies to other such clean-ups, I've noted at least one more in my review.",
                    "createdAt": "2024-12-04T23:09:05Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vfAhv",
                    "body": "Should this name also be updated? It also includes C^n, after all.",
                    "createdAt": "2024-12-04T23:10:27Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vfAkI",
                    "body": "Should this instance name be updated also?",
                    "createdAt": "2024-12-04T23:10:41Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F1ug",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438399/job/34088252858"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F1qA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438390/job/34088252840"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F0CQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252425"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79Fz3g",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088252382"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F2Pg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438403/job/34088252990"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F0vg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252606"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F0mA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088252568"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F1xQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438403/job/34088252869"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F1Vw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252759"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F1GQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088252697"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79F2AQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438168/job/34088252929"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79OtCQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12220438185/job/34088398089"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79GAdQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34088255605"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH79GaxQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19696&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: extend smoothness category of manifolds with corners to include analytic manifolds",
        "updatedAt": "2024-12-08T09:01:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19696",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hvJq6zwAAAAOb34lo",
              "createdAt": "2024-12-02T22:03:17Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hvJq6zwAAAAOb34ls",
              "createdAt": "2024-12-02T22:03:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJYYw",
                "name": "t-differential-geometry"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vydz9",
              "createdAt": "2024-12-02T22:04:10Z",
              "body": "### PR summary [9a041c85fb](https://github.com/leanprover-community/mathlib4/pull/19696/commits/9a041c85fb9741edda8b457db6b1f206fb2bf650)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Geometry.Manifold.AnalyticManifold | 1769 | 0 | -1769 (-100.00%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Geometry.Manifold.AnalyticManifold`|-1769|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Bundle.ContinuousLinearMap.vectorPrebundle.isContMDiff`\n`+ Bundle.Prod.contMDiffVectorBundle`\n`+ Bundle.TotalSpace.isManifold`\n`+ Bundle.Trivial.contMDiffVectorBundle`\n`+ ContMDiffAdd`\n`+ ContMDiffAddMonoidMorphism`\n`+ ContMDiffAt.of_succ(h`\n`+ ContMDiffFiberwiseLinear.hasGroupoid`\n`+ ContMDiffFiberwiseLinear.locality_aux‚ÇÅ`\n`+ ContMDiffFiberwiseLinear.locality_aux‚ÇÇ`\n`+ ContMDiffFunction.evalAt`\n`+ ContMDiffInv‚ÇÄ`\n`+ ContMDiffInv‚ÇÄ.of_le`\n`+ ContMDiffMonoidMorphism`\n`+ ContMDiffMul`\n`+ ContMDiffMul.of_le`\n`+ ContMDiffMul.prod`\n`+ ContMDiffRing`\n`+ ContMDiffVectorBundle`\n`+ ContMDiffVectorBundle.continuousLinearMap`\n`+ ContMDiffVectorBundle.of_le`\n`+ ContMDiffVectorBundle.pullback`\n`+ EuclideanSpace.instIsManifoldSphere`\n`+ IsManifold`\n`+ IsManifold.locallyRingedSpace`\n`+ IsManifold.mk'`\n`+ LieGroup.of_le`\n`+ OpenEmbedding.singleton_IsManifold`\n`+ PartialHomeomorph.isManifold_singleton`\n`+ PointedContMDiffMap`\n`+ StructureGroupoid.maximalAtlas_mono`\n`+ TangentBundle.contMDiffVectorBundle`\n`+ Topology.IsOpenEmbedding.isManifold_singleton`\n`+ _root_.ENat.LEInfty`\n`+ contDiffWithinAt_localInvariantProp_of_le`\n`+ contMDiffAt_infty`\n`+ contMDiffCoordChange`\n`+ contMDiffCoordChange_apply`\n`+ contMDiffFiberwiseLinear`\n`+ contMDiffOn_contMDiffCoordChange`\n`+ contMDiffOn_infty`\n`+ contMDiffOn_zero_iff`\n`+ contMDiffVectorBundle`\n`+ contMDiffWithinAt_infty`\n`+ contMDiff_infty`\n`+ contMDiff_zero_iff`\n`+ continuousMul_of_contMDiffMul`\n`+ hasContinuousInv‚ÇÄ_of_hasContMDiffInv‚ÇÄ`\n`+ instContMDiffAddSelf`\n`+ instContMDiffVectorBundle`\n`+ instIsManifoldIcc`\n`+ instIsManifoldTransDiffeomorph`\n`+ instance (n : ‚Ñï) : IsManifold (ùì° n) œâ (sphere (0 : EuclideanSpace ‚Ñù (Fin (n + 1))) 1)`\n`+ instance (n : ‚Ñï) : LEInfty (n : WithTop ‚Ñï‚àû) := ‚ü®mod_cast le_top‚ü©`\n`+ instance (n : ‚Ñï) [n.AtLeastTwo] : LEInfty (no_index (OfNat.ofNat n) : WithTop ‚Ñï‚àû)`\n`+ instance (priority := 100) ContMDiffRing.toContMDiffMul (I : ModelWithCorners ùïú E H) (R : Type*)`\n`+ instance (priority := 100) ContMDiffRing.toLieAddGroup (I : ModelWithCorners ùïú E H) (R : Type*)`\n`+ instance (priority := 100) fieldContMDiffRing`\n`+ instance : ContMDiffVectorBundle 0 F E IB := by`\n`+ instance : ContinuousMapClass (ContMDiffMonoidMorphism I I' n G G') G G'`\n`+ instance : FunLike (ContMDiffMonoidMorphism I I' n G G') G G'`\n`+ instance : Inhabited (ContMDiffMonoidMorphism I I' n G G')`\n`+ instance : IsManifold (ùì° 1) œâ Circle`\n`+ instance : IsManifold I 0 M := by`\n`+ instance : IsManifold I n s`\n`+ instance : IsManifold ùìò(‚ÑÇ) œâ ‚Ñç`\n`+ instance : IsManifold ùìò(ùïú, R) n RÀ£`\n`+ instance : LEInfty (0 : WithTop ‚Ñï‚àû) := inferInstanceAs (LEInfty ((0 : ‚Ñï) : WithTop ‚Ñï‚àû))`\n`+ instance : LEInfty (1 : WithTop ‚Ñï‚àû) := inferInstanceAs (LEInfty ((1 : ‚Ñï) : WithTop ‚Ñï‚àû))`\n`+ instance : LieGroup (ùì° 1) œâ Circle`\n`+ instance : LieGroup ùìò(ùïú, R) n RÀ£`\n`+ instance : MonoidHomClass (ContMDiffMonoidMorphism I I' n G G') G G'`\n`+ instance : One (ContMDiffMonoidMorphism I I' n G G')`\n`+ instance [ContMDiffInv‚ÇÄ I 2 G] : ContMDiffInv‚ÇÄ I 1 G`\n`+ instance [ContMDiffMul I 2 G] : ContMDiffMul I 1 G`\n`+ instance [ContMDiffVectorBundle 2 F E IB] : ContMDiffVectorBundle 1 F E IB`\n`+ instance [ContinuousMul G] : ContMDiffMul I 0 G := by`\n`+ instance [HasContinuousInv‚ÇÄ G] : ContMDiffInv‚ÇÄ I 0 G := by`\n`+ instance [IsManifold I 2 M] :`\n`+ instance [IsManifold I œâ M] :`\n`+ instance [LieGroup I 2 G] : LieGroup I 1 G`\n`+ instance [TopologicalGroup G] : LieGroup I 0 G := by`\n`+ instance [h : IsManifold I 2 M] :`\n`+ instance [h : IsManifold I ‚àû M] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffInv‚ÇÄ I œâ G] : ContMDiffInv‚ÇÄ I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffInv‚ÇÄ I ‚àû G] [h : ENat.LEInfty a] : ContMDiffInv‚ÇÄ I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffMul I œâ G] : ContMDiffMul I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffMul I ‚àû G] [h : ENat.LEInfty a] : ContMDiffMul I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffVectorBundle œâ F E IB] : ContMDiffVectorBundle a F E IB`\n`+ instance {a : WithTop ‚Ñï‚àû} [ContMDiffVectorBundle ‚àû F E IB] [h : ENat.LEInfty a] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [IsManifold I œâ M] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [IsManifold I ‚àû M] [h : LEInfty a] :`\n`+ instance {a : WithTop ‚Ñï‚àû} [LieGroup I œâ G] : LieGroup I a G`\n`+ instance {a : WithTop ‚Ñï‚àû} [LieGroup I ‚àû G] [h : ENat.LEInfty a] : LieGroup I a G`\n`+ instance {n : WithTop ‚Ñï‚àû} : IsManifold (ùì°‚àÇ 1) n (Icc (0 : ‚Ñù) 1) := by`\n`+ instance {ùïú : Type*} [NontriviallyNormedField ùïú] {n : WithTop ‚Ñï‚àû}`\n`+ instance {ùïú : Type*} [NontriviallyNormedField ùïú] {n : WithTop ‚Ñï‚àû} : ContMDiffInv‚ÇÄ ùìò(ùïú) n ùïú`\n`+ intIsManifoldModelSpace`\n`+ isManifold_of_contDiffOn`\n`+ maximalAtlas_subset_of_le`\n`+ mem_contMDiffFiberwiseLinear_iff`\n`+ mk_contMDiffCoordChange`\n`+ of_le`\n`+ tangentBundleCore.isContMDiff`\n`+ topologicalSemiring_of_contMDiffRing`\n`++ IsContMDiff`\n`- AnalyticManifold`\n`- AnalyticManifold.prod`\n`- AnalyticManifold.self`\n`- AnalyticManifold.smoothManifoldWithCorners`\n`- Bundle.ContinuousLinearMap.vectorPrebundle.isSmooth`\n`- Bundle.Prod.smoothVectorBundle`\n`- Bundle.TotalSpace.smoothManifoldWithCorners`\n`- Bundle.Trivial.smoothVectorBundle`\n`- ContMDiffAt.of_succ`\n`- EuclideanSpace.instSmoothManifoldWithCornersSphere`\n`- Icc_smoothManifoldWithCorners`\n`- OpenEmbedding.singleton_smoothManifoldWithCorners`\n`- PartialHomeomorph.singleton_smoothManifoldWithCorners`\n`- PointedSmoothMap`\n`- SmoothAdd`\n`- SmoothAddMonoidMorphism`\n`- SmoothFiberwiseLinear.hasGroupoid`\n`- SmoothFiberwiseLinear.locality_aux‚ÇÅ`\n`- SmoothFiberwiseLinear.locality_aux‚ÇÇ`\n`- SmoothFunction.evalAt`\n`- SmoothInv‚ÇÄ`\n`- SmoothManifoldWithCorners`\n`- SmoothManifoldWithCorners.locallyRingedSpace`\n`- SmoothManifoldWithCorners.mk'`\n`- SmoothMonoidMorphism`\n`- SmoothMul`\n`- SmoothMul.prod`\n`- SmoothRing`\n`- SmoothVectorBundle`\n`- SmoothVectorBundle.continuousLinearMap`\n`- SmoothVectorBundle.pullback`\n`- TangentBundle.smoothVectorBundle`\n`- Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- analyticGroupoid`\n`- analyticGroupoid_prod`\n`- analyticPregroupoid`\n`- contMDiffAt_top`\n`- contMDiffOn_smoothCoordChange`\n`- contMDiffOn_top`\n`- contMDiffWithinAt_top`\n`- contMDiff_top`\n`- continuousMul_of_smooth`\n`- hasContinuousInv‚ÇÄ_of_hasSmoothInv‚ÇÄ`\n`- hasSmoothAddSelf`\n`- instance (n : ‚Ñï) :`\n`- instance (priority := 100) SmoothRing.toLieAddGroup (I : ModelWithCorners ùïú E H) (R : Type*)`\n`- instance (priority := 100) SmoothRing.toSmoothMul (I : ModelWithCorners ùïú E H) (R : Type*)`\n`- instance (priority := 100) fieldSmoothRing {ùïú : Type*} [NontriviallyNormedField ùïú] :`\n`- instance : ClosedUnderRestriction (analyticGroupoid I)`\n`- instance : ContinuousMapClass (SmoothMonoidMorphism I I' G G') G G'`\n`- instance : FunLike (SmoothMonoidMorphism I I' G G') G G'`\n`- instance : Inhabited (SmoothMonoidMorphism I I' G G')`\n`- instance : LieGroup (ùì° 1) Circle`\n`- instance : LieGroup ùìò(ùïú, R) RÀ£`\n`- instance : MonoidHomClass (SmoothMonoidMorphism I I' G G') G G'`\n`- instance : One (SmoothMonoidMorphism I I' G G')`\n`- instance : SmoothManifoldWithCorners (ùì° 1) Circle`\n`- instance : SmoothManifoldWithCorners (ùì°‚àÇ 1) (Icc (0 : ‚Ñù) 1) := by infer_instance`\n`- instance : SmoothManifoldWithCorners I s`\n`- instance : SmoothManifoldWithCorners ùìò(‚ÑÇ) ‚Ñç`\n`- instance : SmoothManifoldWithCorners ùìò(ùïú, R) RÀ£`\n`- instance {ùïú : Type*} [NontriviallyNormedField ùïú] : SmoothInv‚ÇÄ ùìò(ùïú) ùïú`\n`- instance {ùïú : Type*} [NontriviallyNormedField ùïú] {H : Type*} [TopologicalSpace H] {E : Type*}`\n`- mem_analyticGroupoid`\n`- mem_analyticGroupoid_of_boundaryless`\n`- mem_smoothFiberwiseLinear_iff`\n`- mk_smoothCoordChange`\n`- model_space_smooth`\n`- ofSet_mem_analyticGroupoid`\n`- smoothCoordChange`\n`- smoothCoordChange_apply`\n`- smoothFiberwiseLinear`\n`- smoothManifoldWithCorners_of_contDiffOn`\n`- smoothManifoldWithCorners_transDiffeomorph`\n`- symm_trans_mem_analyticGroupoid`\n`- tangentBundleCore.isSmooth`\n`- topologicalSemiring_of_smooth`\n`-- IsSmooth`\n`-- smoothVectorBundle`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (1.13, 0.01)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|222|-1|bare open (scoped) Classical|\n|4878|-4|exceptions for the docPrime linter|\n\nCurrent commit [9a041c85fb](https://github.com/leanprover-community/mathlib4/commit/9a041c85fb9741edda8b457db6b1f206fb2bf650)\nReference commit [31530f31d5](https://github.com/leanprover-community/mathlib4/commit/31530f31d529f37cde81d086fe10b68e9eb1ee2f)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hvJq6zwAAAAOb4ek3",
              "createdAt": "2024-12-02T22:21:16Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6V2pHH",
              "createdAt": "2024-12-03T10:20:03Z",
              "body": "About naming: how about `IsManifoldWithCorners`? I agree `ContDiff` is superfluous, given the exponent as an explicit parameter.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TlaAT",
              "createdAt": "2024-12-03T15:33:37Z",
              "body": "This change means the following paragraph is also obsolete --- right? Can you take a pass over the module doc-string to ensure the implementation notes are up to date?\r\n\r\n```\r\nWe concentrate on C^‚àû manifolds: all the definitions work equally well for C^n manifolds, but later on it is a pain to carry all over the smoothness parameter, especially when one wants to deal with C^k functions as there would be additional conditions k ‚â§ n everywhere. Since one deals almost all the time with C^‚àû (or analytic) manifolds, this seems to be a reasonable choice that one could revisit later if needed. C^k manifolds are still available, but they should be called using [HasGroupoid](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Geometry/Manifold/ChartedSpace.html#HasGroupoid) M (contDiffGroupoid k I) where I is the model with corners.\r\n```",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6V5rp7",
              "createdAt": "2024-12-03T15:45:18Z",
              "body": "Yes, I will need to pass over all docs to adjust it to the new setting. I'll do that once people agree on what they want in the Zulip discussion.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TtRu9",
              "createdAt": "2024-12-04T10:53:49Z",
              "body": "Three small comments; I have to turn to other things now.\r\n\r\nCan you add deprecations for the old names, please? Thanks for doing this refactor!",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6WEofo",
              "createdAt": "2024-12-04T15:34:20Z",
              "body": "I'll add the deprecations once everything has been sorted out in the Zulip discussion: no need to do the same work two or three times...",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hvJq6zwAAAAOdq2-G",
              "createdAt": "2024-12-04T17:34:42Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6WF0hP",
              "createdAt": "2024-12-04T17:34:44Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19682~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6T0uKQ",
              "createdAt": "2024-12-04T22:47:44Z",
              "body": "I've reviewed everything once, except for\r\n- Geometry/Manifold/Algebra/Monoid.lean\r\n- Geometry/Manifold/Algebra/SmoothFunctions.lean\r\n- Geometry/Manifold/AnalyticManifold.lean\r\n- Geometry/Manifold/ContMDiff/Defs.lean\r\n- Geometry/Manifold/SmoothManifoldWithCorners.lean\r\n\r\nMostly very minor comments. This PR is so cross-cutting that also doc-strings and lemma names can go stale: because you generalise things to C^n where appropriate, I think some more things should be called \"contDiffThing\" and not \"smoothThing\".\r\nI didn't read the file changing it yet, but \"smoothMaximalAtlas\" is another such example.\r\n\r\nI'm repeating myself, but let me say it again anyway: thanks for attempting this monumental feat. It's only natural that there are lots of little details that can go stale.\r\n\r\nI've reviewed this diff \"from the bottom\", so if something is confusing, you may want to read the comments in opposite order.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hvJq6zwAAAAOgJ394",
              "createdAt": "2024-12-08T09:00:27Z"
            }
          ]
        }
      }
    }
  }
}
