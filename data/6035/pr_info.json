{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 233,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The summary is that this PR:\r\n* generalizes a handful of results to non-commutative algebras (simply by moving them to an earlier section)\r\n* adds heterogenous versions of `map`, `congr`, `mapBilinear`, `homTensorHom`, `leftComm`, `tensorTensorTensorComm`\r\n* generalizes `lcurry`, `uncurry`, and `assoc` to take an extra algebra, such that the `A`s in the two different places can separately be replaced with `R`\r\n\r\nThe punchline here is really:\r\n```lean\r\ndef tensorTensorTensorComm :\r\n  (M ⊗[R] N) ⊗[A] (P ⊗[R] Q) ≃ₗ[A] (M ⊗[A] P) ⊗[R] (N ⊗[R] Q) :=\r\n```\r\nwhich is valuable for a base change / tensor product of bilinear forms when instantiated as\r\n```lean\r\n(M ⊗[R] N) ⊗[A] (Dual A M ⊗[R] Dual R N)\r\n  ≃ₗ[A]\r\n(M ⊗[A] Dual A M) ⊗[R] (N ⊗[R] Dual R N)\r\n```\r\nIt would not surprise me if it's possible to introduce a third ring into `tensorTensorTensorComm`, but for now I'd prefer to assume that for that particular definition, two rings is enough for anybody!\r\n\r\nUnfortunately, this was not the case for `lcurry`, `uncurry`, and `assoc`, which really do need to work over three rings so that the `A`s in the two different places can separately be replaced with `R`; both permutations are needed in the construction of `tensorTensorTensorComm`, and it seemed preferable to not have a plethora of primed variants.\r\n\r\nI make no claim that the pile of `IsScalarTower` and `SMulCommClass` arguments here are in any sense optimal, besides the fact they specifically enable the use-case I have for the base change of bilinear forms.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n-->\r\n- [x] depends on: https://github.com/leanprover-community/mathlib/pull/19143\r\n- [x] depends on: #6094\r\n- [x] depends on: #6187\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\nExtracted from https://github.com/pygae/lean-ga/pull/31. There is more I want to extract from that patch (most notably the heterobasic `BilinForm.tensorDistrib`, but the rest will come in a future PR.",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-07T05:07:34Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5iomzy",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib#19143~~\n* ~~leanprover-community/mathlib4#6094~~\n* ~~leanprover-community/mathlib4#6187~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-07-28T00:45:52Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jBXR8",
              "body": "> I get the impression that this work is a lot more impressive than it lets on: I tried mildly generalising some of the results and immediately got into all sorts of problems.\r\n\r\nI'll try to reflect this in an update to the PR description :)\r\n\r\n> All the proofs are very succinct and to be quite frank I think I might struggle with some of them on paper; if everything is R-linear and tensor products are all over R then everything is easy, but once you start throwing around more rings then things seem to become a lot more delicate.\r\n\r\nFrankly `tensorTensorTensorComm` was awful; keeping track of 4 modules tensored over 3 rings was too much for my working memory, and I think I would have had a much easier time if I could have color-coded the goal view somehow to keep track of them.\r\n\r\n",
              "createdAt": "2023-08-02T00:54:22Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jX1oa",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5780952688/job/15665341350)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5780952688/job/15665341499)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5780952688/job/15665341564)",
              "createdAt": "2023-08-07T05:07:33Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "02508fd189adbefcdb7313a007e82fb779ab2700",
                "additions": 57,
                "deletions": 2,
                "committedDate": "2023-07-20T19:56:28Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "187f03fd895d8e1f0bf0590a4c8fe3c2736d58d8",
                "additions": 88,
                "deletions": 37,
                "committedDate": "2023-07-21T09:55:42Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "30b1cbe74594333f74e8f64185534d349355989d",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-07-21T09:58:19Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7ef1780c138f6c05c3c589ace83418cbb0327725",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-07-21T09:58:59Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4264b66fc3e49b3a685a33beddcea478a9f2e22c",
                "additions": 13,
                "deletions": 2,
                "committedDate": "2023-07-21T10:03:33Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f328795d5e506fe5f085afa3743bf75043ed8f8d",
                "additions": 3346,
                "deletions": 509,
                "committedDate": "2023-07-24T14:22:45Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dd7166c35990df7695afff239b1fbf463bde48e3",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-24T14:32:25Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "52df98ee8d778051fb0c534d02fe74b94298c032",
                "additions": 3576,
                "deletions": 2584,
                "committedDate": "2023-07-27T14:37:11Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d68de547d8afa3e3f259de2715eccb2bb3199822",
                "additions": 94,
                "deletions": 26,
                "committedDate": "2023-07-27T15:44:08Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5f3c6df59b0f981480420df8cb25b462fe8b51ef",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-07-27T15:51:33Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e4ab5b6878c1ef8f949aec17ffe83eebe2da26a6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-27T15:53:11Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dfaf5ad93c177c90c774d61831a0d71679ca701d",
                "additions": 1495,
                "deletions": 551,
                "committedDate": "2023-07-28T08:45:52Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7212072470b106133f3d441836916077c09b9ef2",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-07-28T09:20:30Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9686573e6b30e67a4036aaffbaeb97b30f946653",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-31T17:14:23Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f7b026f9bd3b33a3e89fad54b62b5b64f42402e4",
                "additions": 9,
                "deletions": 15,
                "committedDate": "2023-08-02T01:06:24Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4dbcc441e09d349224cb2a77e39191de79e90021",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-02T01:07:14Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0b43277cec975fedc52e404fbb411c25a20b652b",
                "additions": 15,
                "deletions": 11,
                "committedDate": "2023-08-02T12:06:04Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-20T19:57:37Z",
        "deletions": 52,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct/Tower.lean",
              "additions": 231,
              "deletions": 43
            },
            {
              "path": "Mathlib/RingTheory/TensorProduct.lean",
              "additions": 2,
              "deletions": 9
            }
          ]
        },
        "headRefName": "eric-wieser/heterobasic-TensorProduct.congr",
        "headRefOid": "0b43277cec975fedc52e404fbb411c25a20b652b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WCmP5",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dQK7j",
              "body": "Thanks, this looks very clean.\r\nI did not think at all about whether/how this could possibly be generalized. As you indicate, it is probably possible. But we can do that when we need it.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-07T04:16:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c2i09",
              "body": "I get the impression that this work is a lot more impressive than it lets on: I tried mildly generalising some of the results and immediately got into all sorts of problems. All the proofs are very succinct and to be quite frank I think I might struggle with some of them on paper; if everything is R-linear and tensor products are all over R then everything is easy, but once you start throwing around more rings then things seem to become a lot more delicate. Well done! I left a host of comments, some of which don't need acting on and can just be resolved after you've read them if you agree that nothing needs doing. Thanks a lot!",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-08-01T21:53:55Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6035,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5b1-N8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-21T10:05:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c2i09",
              "body": "I get the impression that this work is a lot more impressive than it lets on: I tried mildly generalising some of the results and immediately got into all sorts of problems. All the proofs are very succinct and to be quite frank I think I might struggle with some of them on paper; if everything is R-linear and tensor products are all over R then everything is easy, but once you start throwing around more rings then things seem to become a lot more delicate. Well done! I left a host of comments, some of which don't need acting on and can just be resolved after you've read them if you agree that nothing needs doing. Thanks a lot!",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-08-01T21:53:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3Hs2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-01T23:06:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3H01",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T00:54:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3alJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T01:07:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c6k2V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T12:07:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dQK7j",
              "body": "Thanks, this looks very clean.\r\nI did not think at all about whether/how this could possibly be generalized. As you indicate, it is probably possible. But we can do that when we need it.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-07T04:16:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LukzT",
                    "body": "This is from https://github.com/leanprover-community/mathlib4/pull/6094",
                    "createdAt": "2023-07-21T10:05:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXIy9",
                    "body": "Did you try to do both `open`s in the same line, fail, and then put them back on different lines but in a different order? [I just failed to get them on one line]",
                    "createdAt": "2023-08-01T20:43:42Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXglP",
                    "body": "This reorder was an accident while refactoring, I'll revert it.",
                    "createdAt": "2023-08-01T23:06:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXLGg",
                    "body": "`lift $ (` alone works fine here (the `show` is unnecessary). I wouldn't put it past you to have put it there for a reason which is beyond me though.",
                    "createdAt": "2023-08-01T20:54:22Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXgqX",
                    "body": "It's here because it was ported from Lean 3, where I can only assume I needed it. I'll remove it if it builds without it.",
                    "createdAt": "2023-08-01T23:07:15Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXspp",
                    "body": "Yep, it's removable",
                    "createdAt": "2023-08-02T01:07:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXL6h",
                    "body": "I think `(b : B)` is less confusing for mathematicians than `(r : B)`.",
                    "createdAt": "2023-08-01T20:57:57Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXMVv",
                    "body": "```suggestion\r\n      map_add' := fun _g₁ _g₂ => map_add_right ..\r\n```\r\nI've only just learnt about this notation today or yesterday on Zulip so I might be a bit overenthusiastic about it, but don't you think these next four lines are as good a place as any to use it? Or do you think it's confusing?",
                    "createdAt": "2023-08-01T21:00:14Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXhDN",
                    "body": "I'd be inclined to leave this to a follow up; `..` notation is fine, but right now we use it so rarely that it's probably unhelpful for readability (and it's surely slower to elaborate...).\r\n\r\nAny any rate, I should actually be using `LinearMap.mk\\_2'` here; I had forgotten the primed version existed.",
                    "createdAt": "2023-08-01T23:10:36Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXMmP",
                    "body": "Is this a candidate for `@[simps]`? I'm only just getting the hang of `@[simps]`. Or is the idea that you're safer writing your own simp lemmas for declarations as complicated as this?",
                    "createdAt": "2023-08-01T21:01:26Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXg40",
                    "body": "`simps` generates something with implicit type arguments, which aren't really needed here; though I'll admit I don't remember if that was my reason.\r\n\r\nIn generaly my rule is \"use `simps` if I'm feeling lazy, write the lemma manually if I'm feeling picky or simps screws up\". The important thing is to have _some_ `simp` lemma, the API doesn't really care whether it's generated with `simps`.",
                    "createdAt": "2023-08-01T23:09:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXObh",
                    "body": "Snap!\r\n```suggestion\r\n```",
                    "createdAt": "2023-08-01T21:09:19Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXPyO",
                    "body": "It genuinely does my head in that you don't need `IsScalarTower R A B` here. In the kind of mathematics I'm used to, I'm not sure it would ever happen that A and B are R-algebras and B is an A-algebra and the diagram doesn't commute. However I am not used to non-commutative ring theory and I see that B isn't commutative.",
                    "createdAt": "2023-08-01T21:14:51Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXhYO",
                    "body": "I think this started to reach the point where my only real criteria for \"should I add this typeclass\" was simultaneously satisfying:\r\n* `(M ⊗[A] P) ⊗[R] Q ≃ₗ[A] M ⊗[A] (P ⊗[R] Q)` works\r\n* `(M ⊗[R] P) ⊗[R] Q ≃ₗ[A] M ⊗[R] (P ⊗[R] Q)` also works\r\n* Lean complains if I don't add it\r\n\r\nI think part of the reason this is so confusing is that once you pile enough scalar tower classes on, they start implying other scalar tower classes (at least, mathematically; most of them aren't safe as `instance`s)",
                    "createdAt": "2023-08-01T23:13:49Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXU78",
                    "body": "You can make that `?_` into a `rfl`, but if you try it with the one two lines down you get a timeout.",
                    "createdAt": "2023-08-01T21:42:10Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MZuOo",
                    "body": "I went for a compromise here and below.",
                    "createdAt": "2023-08-02T12:07:46Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXVS1",
                    "body": "```suggestion\r\n    (TensorProduct.ext <| ext <| fun m q => LinearMap.ext <| fun p => rfl)\r\n```",
                    "createdAt": "2023-08-01T21:43:51Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXVhl",
                    "body": "```suggestion\r\n      rfl)\r\n```\r\nThese are up to you really, maybe you like the symmetry",
                    "createdAt": "2023-08-01T21:45:13Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXhos",
                    "body": "My hope was that this would elaborate faster (and I think it might have been compulsory in Lean 3). Its also a bit clearer what the the `rfl` is actually supposed to be with my spelling, and as a result easier to repair",
                    "createdAt": "2023-08-01T23:16:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXVuF",
                    "body": "Add\r\n```\r\n * `TensorProduct.AlgebraTensorModule.rightComm`\r\n```",
                    "createdAt": "2023-08-01T21:46:23Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXWbt",
                    "body": "Do you think there's a version of this where `[IsScalarTower A B M]` is replaced by `[IsScalarTower A B P]`? Note that I'm not suggesting that you add it, but if you think that there's some merit to this suggestion then you could leave a comment. This seems to be the only def where you need to assume B is an A-algebra.",
                    "createdAt": "2023-08-01T21:50:18Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXh1C",
                    "body": "I don't know. This was one where the \"obvious\" implementation required more typeclasses than the statement. I think I recall places in mathlib where the \"clever\" bundling approach requires more typeclasses than the dumb but annoying `induction` approach, but I was pretty maximally annoyed by this point and didn't want to think much more about generalization!",
                    "createdAt": "2023-08-01T23:18:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: heterogenize TensorProduct.congr and friends",
        "updatedAt": "2023-08-07T05:07:37Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6035",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "02508fd189adbefcdb7313a007e82fb779ab2700"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJMzxfs",
              "createdAt": "2023-07-20T19:57:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJMzxfz",
              "createdAt": "2023-07-20T19:57:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJMzxf5",
              "createdAt": "2023-07-20T19:57:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5sKjqbzwAAAAJMzxgF",
              "createdAt": "2023-07-20T19:57:37Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxODY3ODI3",
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJM1QKD",
              "createdAt": "2023-07-20T20:48:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOD_mPys5NnJvB",
              "createdAt": "2023-07-20T22:38:29Z",
              "source": {
                "id": "PR_kwDOD_mPys5WDOO3",
                "title": "Base change (and complexification) of quadratic forms",
                "url": "https://github.com/pygae/lean-ga/pull/31"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "187f03fd895d8e1f0bf0590a4c8fe3c2736d58d8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "30b1cbe74594333f74e8f64185534d349355989d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7ef1780c138f6c05c3c589ace83418cbb0327725"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4264b66fc3e49b3a685a33beddcea478a9f2e22c"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5b1-N8",
              "createdAt": "2023-07-21T10:05:22Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJNHUdp",
              "createdAt": "2023-07-21T10:06:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMJpquQ",
                "name": "after-port"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJNH0vv",
              "createdAt": "2023-07-21T10:20:18Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJNplBr",
              "createdAt": "2023-07-23T12:22:34Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f328795d5e506fe5f085afa3743bf75043ed8f8d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJOJb2R",
              "createdAt": "2023-07-24T14:32:13Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dd7166c35990df7695afff239b1fbf463bde48e3"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJOgMF0",
              "createdAt": "2023-07-25T04:44:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMJpquQ",
                "name": "after-port"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJQRSZf",
              "createdAt": "2023-07-27T14:31:49Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "52df98ee8d778051fb0c534d02fe74b94298c032"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d68de547d8afa3e3f259de2715eccb2bb3199822"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5f3c6df59b0f981480420df8cb25b462fe8b51ef"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e4ab5b6878c1ef8f949aec17ffe83eebe2da26a6"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NtXDN",
              "createdAt": "2023-07-27T16:04:03Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WkC_1",
                "title": "[Merged by Bors] - chore: split `RingTheory/TensorProduct`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6187"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJQWPaP",
              "createdAt": "2023-07-27T16:21:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJQmiIT",
              "createdAt": "2023-07-28T00:45:50Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iomzy",
              "createdAt": "2023-07-28T00:45:52Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib#19143~~\n* ~~leanprover-community/mathlib4#6094~~\n* ~~leanprover-community/mathlib4#6187~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJQnxx0",
              "createdAt": "2023-07-28T01:34:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dfaf5ad93c177c90c774d61831a0d71679ca701d"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJQzgew",
              "createdAt": "2023-07-28T08:46:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7212072470b106133f3d441836916077c09b9ef2"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9686573e6b30e67a4036aaffbaeb97b30f946653"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5sKjqbzwAAAAJSD81-",
              "createdAt": "2023-07-31T17:14:42Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c2i09",
              "createdAt": "2023-08-01T20:43:41Z",
              "body": "I get the impression that this work is a lot more impressive than it lets on: I tried mildly generalising some of the results and immediately got into all sorts of problems. All the proofs are very succinct and to be quite frank I think I might struggle with some of them on paper; if everything is R-linear and tensor products are all over R then everything is easy, but once you start throwing around more rings then things seem to become a lot more delicate. Well done! I left a host of comments, some of which don't need acting on and can just be resolved after you've read them if you agree that nothing needs doing. Thanks a lot!",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jBXR8",
              "createdAt": "2023-08-02T00:54:22Z",
              "body": "> I get the impression that this work is a lot more impressive than it lets on: I tried mildly generalising some of the results and immediately got into all sorts of problems.\r\n\r\nI'll try to reflect this in an update to the PR description :)\r\n\r\n> All the proofs are very succinct and to be quite frank I think I might struggle with some of them on paper; if everything is R-linear and tensor products are all over R then everything is easy, but once you start throwing around more rings then things seem to become a lot more delicate.\r\n\r\nFrankly `tensorTensorTensorComm` was awful; keeping track of 4 modules tensored over 3 rings was too much for my working memory, and I think I would have had a much easier time if I could have color-coded the goal view somehow to keep track of them.\r\n\r\n",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f7b026f9bd3b33a3e89fad54b62b5b64f42402e4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4dbcc441e09d349224cb2a77e39191de79e90021"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0b43277cec975fedc52e404fbb411c25a20b652b"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NypaE",
              "createdAt": "2023-08-02T14:19:12Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5XA_gE",
                "title": "[Merged by Bors] - feat(LinearAlgebra/BilinearForm/TensorProduct): base change of bilinear forms",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6306"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dQK7j",
              "createdAt": "2023-08-07T04:16:34Z",
              "body": "Thanks, this looks very clean.\r\nI did not think at all about whether/how this could possibly be generalized. As you indicate, it is probably possible. But we can do that when we need it.\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sKjqbzwAAAAJVMFUc",
              "createdAt": "2023-08-07T04:16:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sKjqbzwAAAAJVMFVJ",
              "createdAt": "2023-08-07T04:16:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jX1oa",
              "createdAt": "2023-08-07T05:07:33Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5780952688/job/15665341350)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5780952688/job/15665341499)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5780952688/job/15665341564)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sKjqbzwAAAAJVNEL0",
              "createdAt": "2023-08-07T05:07:34Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sKjqbzwAAAAJVNEPp",
              "createdAt": "2023-08-07T05:07:37Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5TbIJ8",
              "createdAt": "2024-06-20T08:42:43Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5zCx-r",
                "title": "[Merged by Bors] - chore(LinearAlgebra/TensorProduct/Tower): remove superfluous porting notes",
                "url": "https://github.com/leanprover-community/mathlib4/pull/13987"
              }
            }
          ]
        }
      }
    }
  }
}
