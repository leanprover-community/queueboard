{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 3332,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "AlexLoitzl"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "- Define Chomsky normal form grammars\r\n- Add language-preserving translation between context-free grammars and Chomsky normal form grammars\r\n\r\nCo-authored-by: Martin Dvorak martin.dvorak@matfyz.cz \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\n\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 8,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6XgfaG",
              "body": "### PR summary [221a3dc98a](https://github.com/leanprover-community/mathlib4/pull/19943/commits/221a3dc98a0d0b77946009875e5a83aff9911e33)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.ChomskyNormalForm.EmptyElimination` (new file) `Mathlib.Computability.ChomskyNormalForm.Basic` (new file)|520|\n| `Mathlib.Computability.ChomskyNormalForm.UnitElimination` (new file) `Mathlib.Computability.ChomskyNormalForm.LengthRestriction` (new file)|521|\n| `Mathlib.Computability.ChomskyNormalForm.TerminalRestriction` (new file)|522|\n| `Mathlib.Computability.ChomskyNormalForm.Translation` (new file)|525|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ChomskyNormalFormGrammar.{uN,uT}`\n`+ ChomskyNormalFormRule.{uT,uN}`\n`+ Derives`\n`+ Derives.append_left`\n`+ Derives.append_left_trans`\n`+ Derives.append_right`\n`+ Derives.eq_or_head`\n`+ Derives.eq_or_tail`\n`+ Derives.match_toCFG`\n`+ Derives.of_empty`\n`+ Derives.refl`\n`+ Derives.toCFG_match`\n`+ Derives.trans`\n`+ Derives.trans_produces`\n`+ DerivesIn.empty_of_append`\n`+ DerivesIn.empty_of_append_left`\n`+ DerivesIn.empty_of_append_right`\n`+ DerivesIn.empty_of_append_right_aux`\n`+ DerivesIn.mem_nullable`\n`+ DerivesIn.nullable_mem_nonterminal`\n`+ DerivesIn.unitPair_prefix`\n`+ DerivesIn.zero_steps_eq`\n`+ Generates`\n`+ Generates.match_toCFG`\n`+ Generates.toCFG_match`\n`+ NT'`\n`+ NonUnit`\n`+ NullableNonTerminal`\n`+ NullableRelated`\n`+ NullableRelated.append_nullable_left`\n`+ NullableRelated.append_split`\n`+ NullableRelated.append_split_three`\n`+ NullableRelated.derives`\n`+ NullableRelated.empty_nullableWord`\n`+ NullableRelated.empty_right`\n`+ NullableRelated.refl`\n`+ NullableWord`\n`+ NullableWord.cons_terminal`\n`+ NullableWord.empty_of_append`\n`+ NullableWord.empty_of_append_left`\n`+ NullableWord.empty_of_append_right`\n`+ NullableWord.nullableNonTerminal`\n`+ Produces`\n`+ Produces.append_left`\n`+ Produces.append_right`\n`+ Produces.input_output`\n`+ Produces.match_toCFG`\n`+ Produces.rule`\n`+ Produces.single`\n`+ Produces.toCFG_match`\n`+ Produces.trans_derives`\n`+ Rewrites`\n`+ Rewrites.append_left`\n`+ Rewrites.append_right`\n`+ Rewrites.empty`\n`+ Rewrites.exists_parts`\n`+ Rewrites.input_output`\n`+ Rewrites.match_toCFGRule`\n`+ Rewrites.toCFGRule_match`\n`+ UnitPair`\n`+ UnitPair.derives`\n`+ UnitPair.rfl`\n`+ Wellformed.cases`\n`+ Wellformed.mem_nonterminal`\n`+ addIfNullable`\n`+ addIfNullable_monotone`\n`+ addIfNullable_subset_generators`\n`+ addNullables`\n`+ addNullablesIter`\n`+ addNullablesIter_fixpoint`\n`+ addNullablesIter_only_nullableNonTerminal`\n`+ addNullables_mem_nullableNonTerminal`\n`+ addNullables_subset_generators`\n`+ addUnitPair`\n`+ addUnitPairs`\n`+ addUnitPairsIter`\n`+ addUnitPairsIter_fixpoint`\n`+ addUnitPairs_subset_generatorsProd`\n`+ collectUnitPairs`\n`+ collectUnitPairs_subset_generatorsProd`\n`+ collectUnitPairs_unitPair`\n`+ collectUnitPairs_unitPair_rec`\n`+ computeNullables`\n`+ computeNullables_iff`\n`+ computeRules`\n`+ computeRulesRec`\n`+ computeRulesRec_derives`\n`+ computeRules_derives_embedString`\n`+ computeUnitPairRules`\n`+ computeUnitPairs`\n`+ computeUnitPairs_iff`\n`+ derivesIn_non_empty_to_nullableRelated_derives`\n`+ derivesIn_to_eliminateEmpty_derives`\n`+ derives_restrictLength_derives_embedString`\n`+ derives_restrictTerminals_derives_embedString`\n`+ derives_to_eliminateUnitRules_derives`\n`+ eliminateEmpty`\n`+ eliminateEmpty_correct`\n`+ eliminateEmpty_derives_not_empty`\n`+ eliminateEmpty_derives_to_derives`\n`+ eliminateEmpty_not_empty_output`\n`+ eliminateEmpty_produces_not_empty`\n`+ eliminateEmpty_produces_to_derives`\n`+ eliminateUnitRules`\n`+ eliminateUnitRules_correct`\n`+ eliminateUnitRules_derives_to_derives`\n`+ eliminateUnitRules_not_empty_output`\n`+ eliminateUnitRules_output_nonUnit`\n`+ embedString_nonterminal`\n`+ embedString_preserves_nonempty`\n`+ embedSymbol_nonterminal`\n`+ embedSymbol_nonterminal_eq`\n`+ embedSymbol_terminal`\n`+ generators`\n`+ generatorsProdDiag`\n`+ generatorsProdDiag_subset_generators_prod`\n`+ generatorsProdDiag_unitPairs`\n`+ generatorsProd_limits_unitPairs`\n`+ generators_limits_nullable`\n`+ input`\n`+ input_mem_generators`\n`+ language`\n`+ left_not_mem_computeRulesRec`\n`+ mem_addUnitPairIter_unitPair`\n`+ mem_addUnitPairs`\n`+ mem_addUnitPairs_unitPair`\n`+ mem_collectUnitPairs`\n`+ mem_computRules_right_length`\n`+ mem_computeRulesRec_projectString_input_eq_output`\n`+ mem_computeRules_left`\n`+ mem_computeRules_right_mem_computeRulesRec`\n`+ mem_eliminateEmpty`\n`+ mem_language_iff`\n`+ mem_nullableCombinations`\n`+ mem_nullableCombinations_nullableRelated`\n`+ mem_removeNullableRule_nullableRelated`\n`+ mem_removeUnitRules_exists_UnitPair`\n`+ newTerminalRules`\n`+ newTerminalRules_terminal_output`\n`+ nonUnit_mem_computeUnitPairRules`\n`+ nonUnit_mem_removeUnitRules`\n`+ nonUnit_output_mem_eliminateUnitRules`\n`+ nonUnit_rules_mem`\n`+ not_empty_mem_removeNullables`\n`+ nullableCombinations`\n`+ nullableRelated_mem_eliminateEmpty_rules`\n`+ nullableRelated_mem_removeNullable`\n`+ nullable_input_mem_addNullables`\n`+ nullable_mem_addNullablesIter`\n`+ nullable_related_append`\n`+ only_nonterminals`\n`+ output`\n`+ output_mem_removeNullableRule`\n`+ output_mem_removeNullables`\n`+ produces_nonUnit_eliminateUnitRules_produces`\n`+ produces_nullableRelated_to_derives`\n`+ produces_restrictLength_derives_embedString`\n`+ projectString_append`\n`+ projectString_embedString_id`\n`+ projectString_nonterminal`\n`+ projectString_rightEmbedString_id`\n`+ projectSymbol_nonterminal`\n`+ projectSymbol_terminal`\n`+ removeNullableRule`\n`+ removeNullables`\n`+ removeUnitRules`\n`+ restrictLength`\n`+ restrictLengthRules`\n`+ restrictLength_correct`\n`+ restrictLength_derives_derives_projectString`\n`+ restrictLength_produces_derives_projectString`\n`+ restrictTerminalRule`\n`+ restrictTerminalRule_left`\n`+ restrictTerminalRule_right_terminal_output`\n`+ restrictTerminalRules`\n`+ restrictTerminalRules_right_terminal_output`\n`+ restrictTerminals`\n`+ restrictTerminalsRules_left`\n`+ restrictTerminals_correct`\n`+ restrictTerminals_derives_derives_projectString`\n`+ restrictTerminals_derives_rightEmbedString_embedString`\n`+ restrictTerminals_nonUnit_output`\n`+ restrictTerminals_not_empty_output`\n`+ restrictTerminals_produces_derives_projectString`\n`+ restrictTerminals_terminal_or_nonterminals`\n`+ rewrites_iff`\n`+ rewrites_of_exists_parts`\n`+ rightEmbedString`\n`+ rightEmbedSymbol`\n`+ rightEmbed_string_nonUnit`\n`+ ruleIsNullable`\n`+ ruleIsNullable_NullableNonTerminal`\n`+ subset_addIfNullable`\n`+ subset_addNullables`\n`+ subset_addUnitPairs`\n`+ subset_addUnitPairsIter`\n`+ symbolIsNullable`\n`+ symbols_nullable_nullableWord`\n`+ terminal_mem_newTerminalRules`\n`+ toCFG`\n`+ toCFGRule`\n`+ toCFG_correct`\n`+ toCNF`\n`+ toCNF_correct`\n`+ unitPair_mem_addUnitPairsIter`\n`+ unitRule`\n`++ Derives.head_induction_on`\n`++ DerivesIn`\n`++ DerivesIn.append_left`\n`++ DerivesIn.append_right`\n`++ DerivesIn.append_split`\n`++ DerivesIn.head_induction_on`\n`++ DerivesIn.head_of_succ`\n`++ DerivesIn.tail_of_succ`\n`++ DerivesIn.three_split`\n`++ DerivesIn.trans`\n`++ DerivesIn.trans_produces`\n`++ DerivesIn.zero_steps`\n`++ Produces.single_step`\n`++ Produces.trans_derivesIn`\n`++ Wellformed`\n`++ derives_iff_derivesIn`\n`++ embedString`\n`++ embedString_append`\n`++ embedString_terminals`\n`++ embedSymbol`\n`++ mem_language_iff_derivesIn`\n`++ projectString`\n`++ projectString_terminals`\n`++ projectSymbol`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-13T17:04:22Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bLmcI",
              "body": "Thanks, @YaelDillies, for the reviews.\r\n\r\nAt the same time, I'll note that internal reviewer discussion proposed that this is out of scope for Mathlib, with insufficient maintainer/reviewer expertise. (Note it's not just reviewing the material initially, but being confident we have expertise if this need repairing or refactoring in a few years.) No definitive answer was reached, and Yael's review may push things in a different direction. But I thought it good to be up front about the discussion.",
              "createdAt": "2025-01-21T02:40:48Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bMxtt",
              "body": "My opinion is that the current PR is too big and has some style issues, but that if I review it could become mergeable and you might learn something 😄",
              "createdAt": "2025-01-21T07:07:39Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bM6vC",
              "body": "Thank you @YaelDillies!\r\nIt's my first time working with Lean and the PR is a building block (although much larger than the actual proof) for proving the Pumping Lemma for CFG, which i have already finished [here](https://github.com/AlexLoitzl/pumping_cfg).\r\n\r\nRegarding the size, I could not think of a reasonable splitting of the PR, since I thought it was nonsensical to split it into multiple PRs which do some translation of CFG with no clear goal.\r\n\r\nIf in fact this will not get merged, I can try to carry out the proof of the pumping lemma directly on CFGs instead. Anyways, it would be nice to at least know that there is a prospect of this being merged before I pour more effort into it.",
              "createdAt": "2025-01-21T07:32:11Z",
              "author": {
                "login": "AlexLoitzl"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bNEKN",
              "body": "Being merged or not being merged I think is not greatly relevant. We are at a pivotal period of mathlib where we're hitting the limits of the monorepo model. Instead of accepting everything blindly in the `mathlib4` repo, we are now considering the possibility of having several mathlib repos, a central one (this one) along with one for each \"mathematical dead end\", namely one for each subdomain whose results are unlikely to ever be used in another domain. Eg here we could have the repo `mathlib-formal-language`. See https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Repository.20for.20combinatorial.20games for more information.\r\n\r\nLong story short, I think it's worth reviewing anyway.",
              "createdAt": "2025-01-21T07:56:29Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "cf42c978c56c4270bc9630d518aa9c062e5acbd5",
                "additions": 205,
                "deletions": 0,
                "committedDate": "2024-12-13T10:31:45Z",
                "author": {
                  "name": "AlexLoitzl",
                  "email": "alexander.loitzl@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3417eaf630683c479cbbcf2d51279867115058d8",
                "additions": 470,
                "deletions": 0,
                "committedDate": "2024-12-13T11:53:57Z",
                "author": {
                  "name": "AlexLoitzl",
                  "email": "alexander.loitzl@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1895f0e5813891f4c8aed28095d3eb5b43f2bfbe",
                "additions": 2659,
                "deletions": 4,
                "committedDate": "2024-12-13T14:14:41Z",
                "author": {
                  "name": "AlexLoitzl",
                  "email": "alexander.loitzl@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdjMA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107538/job/34385388336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdkqQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107532/job/34385388713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdkjg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107538/job/34385388686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdmMQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107532/job/34385389105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdjYg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107532/job/34385388386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdmYQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107538/job/34385389153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAYdoDA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107538/job/34385389580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZBYYA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319107532/job/34385975392"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "95df8ab95d8c91e1d64fc92358c7df392fa783f6",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2024-12-13T16:34:00Z",
                "author": {
                  "name": "AlexLoitzl",
                  "email": "alexander.loitzl@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBb8MMA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12348042794/job/34456144944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBb8L1g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12348042795/job/34456144854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa2J6A",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319863410/job/34387888616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa2Ixw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319863399/job/34387888327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBb8MWg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12348042797/job/34456144986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa2I0Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319863396/job/34387888337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhGQQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442469/job/34386495041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhFWQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442471/job/34386494809"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa2KFQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319863404/job/34387888661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhI1A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442469/job/34386495700"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhHmA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442471/job/34386495384"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa2I2w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319863404/job/34387888347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhHqQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442469/job/34386495401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhGiA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442471/job/34386495112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZhJ2A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442469/job/34386495960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAZ5wQQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12319442471/job/34386899009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa2qPg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34387896894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIAa36pw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19943&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "221a3dc98a0d0b77946009875e5a83aff9911e33",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-12-16T09:08:26Z",
                "author": {
                  "name": "AlexLoitzl",
                  "email": "alexander.loitzl@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVeRfhg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837328603/job/35800768390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVeRSIg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837327284/job/35800764962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVu218Q",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12844782674/job/35818157553"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbK6DgA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973898073/job/36183114624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbK9crw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973914851/job/36183170223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbLEacQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973970999/job/36183284337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbLWFww",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12974102475/job/36183573955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflwVQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338477/job/34459971669"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVeRQMA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837327273/job/35800764464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVu217Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12844782672/job/35818157549"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbK6DoA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973898075/job/36183114656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbK9ctA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973914848/job/36183170228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbLEaaA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973971004/job/36183284328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbLWFfQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12974102474/job/36183573885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflwFw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338471/job/34459971607"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVeROxQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837327299/job/35800764101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVu21_w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12844782669/job/35818157567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbK6Dbg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973898074/job/36183114606"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbK9czA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973914849/job/36183170252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbLEaZg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973971007/job/36183284326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbLWFdg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12974102473/job/36183573878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflpFw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459969815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflpFQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34459969813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflwGw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338467/job/34459971611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflqfw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459970175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflrzQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34459970509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflxfw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338467/job/34459971967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflrtg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459970486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBflqew",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34459970171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBfltBQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459970821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBgAlxg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34460411334"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBfmFqw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34459977131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIBfmCBw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19943&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-13T17:03:30Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ChomskyNormalForm/Basic.lean",
              "additions": 494,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ChomskyNormalForm/EmptyElimination.lean",
              "additions": 938,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ChomskyNormalForm/LengthRestriction.lean",
              "additions": 546,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ChomskyNormalForm/TerminalRestriction.lean",
              "additions": 330,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ChomskyNormalForm/Translation.lean",
              "additions": 201,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ChomskyNormalForm/UnitElimination.lean",
              "additions": 600,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/ContextFreeGrammar.lean",
              "additions": 217,
              "deletions": 0
            }
          ]
        },
        "headRefName": "alex-loitzl-cnf",
        "headRefOid": "221a3dc98a0d0b77946009875e5a83aff9911e33",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6FK1gh",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
              "color": "33DBEC",
              "name": "t-computability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Zbzpp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-26T11:13:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YnTbK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-01-18T14:20:20Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19943,
        "potentialMergeCommit": {
          "oid": "9d10f974a211eb826f55aa78f7f64ef11037f1b7"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6VVN0j",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-12-16T07:39:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yltn4",
              "body": "Could you please act on the comments below everywhere they apply (ie not just where I've commented)?",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-17T21:43:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YnTbK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-01-18T14:20:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZbyMg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AlexLoitzl"
              },
              "submittedAt": "2025-01-26T10:42:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZbyVp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-26T10:45:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZbyzN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AlexLoitzl"
              },
              "submittedAt": "2025-01-26T10:55:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Zbzpp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-26T11:13:39Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5wbtSY",
                    "body": "indent four spaces please",
                    "createdAt": "2024-12-16T07:39:43Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yfPL3",
                    "body": "Since `Iff` is a structure\r\n```suggestion\r\n      u = p ++ [Symbol.nonterminal r.input] ++ q ∧ v = p ++ r.output ++ q where\r\n  mp := Rewrites.exists_parts\r\n  mpr := by rintro ⟨p, q, rfl, rfl⟩; apply rewrites_of_exists_parts\r\n```",
                    "createdAt": "2025-01-17T21:36:03Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ygU93",
                    "body": "I want a second opinion. I have never written `mp` and `mpr` explicitly in my life.",
                    "createdAt": "2025-01-18T14:20:20Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yfPOj",
                    "body": "```suggestion\r\n  induction p with\r\n  | nil => cases r <;> constructor\r\n  | cons _ _ hr => exact .cons r _ hr\r\n```",
                    "createdAt": "2025-01-17T21:36:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yfPR4",
                    "body": "```suggestion\r\nlemma Rewrites.of_exists_parts (r : ChomskyNormalFormRule T N) (p q : List (Symbol T N)) :\r\n```\r\nfor anonymous dot notation",
                    "createdAt": "2025-01-17T21:36:39Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zBSJi",
                    "body": "I either don't understand why this should change or how to use it properly. If I change it as suggested, I need to spell out the entire Lemma whenever I want to use it as there is no parameter of type `Rewrites`. Hence, instead of writing `r.rewrites_of_exists_parts`, I now find myself writing `ChomskyNormalFormRule.Rewrites.of_exists_parts`. I picked the name similar to the same lemma `rewrites_of_exists_parts` of ContextFreeGrammar. ",
                    "createdAt": "2025-01-26T10:42:28Z",
                    "author": {
                      "login": "AlexLoitzl"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zBSQ1",
                    "body": "You mustn't have encountered anonymous dot notation yet. Wherever you have a goal of the form `⊢ Rewrites _ _ _`, you can now do `exact .of_exists_parts _ _ _ _`",
                    "createdAt": "2025-01-26T10:45:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zBSrd",
                    "body": "Nice, thank you!\r\nI have seen it, but tried using it with `apply .of_exists_parts` and thought I am missing something",
                    "createdAt": "2025-01-26T10:55:33Z",
                    "author": {
                      "login": "AlexLoitzl"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zBTZd",
                    "body": "Ah yes, `apply` doesn't elaborate using the expected type, so can't use anonymous dot notation. I advise you to use `refine` instead",
                    "createdAt": "2025-01-26T11:13:39Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yfPUS",
                    "body": "```suggestion\r\n/-- Add extra prefix to CNF rewriting. -/\r\n```",
                    "createdAt": "2025-01-17T21:36:54Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yfQXc",
                    "body": "It's good style to not spend too many lines moving data around when it is done in a straightforward way\r\n```suggestion\r\n      refine ⟨x, y, m₁ + 1, m₂, hw, Produces.trans_derivesIn ⟨r, hrg, ?_⟩ hd₁, hd₂, by omega⟩\r\n      rw [hp, ← List.singleton_append, ← List.append_assoc]\r\n      apply r.rewrites_of_exists_parts\r\n```",
                    "createdAt": "2025-01-17T21:42:42Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2NzU4MjE4",
              "login": "AlexLoitzl"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVeRfhg",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837328603/job/35800768390"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVeRSIg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837327284/job/35800764962"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVu218Q",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12844782674/job/35818157553"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbK6DgA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973898073/job/36183114624"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbK9crw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973914851/job/36183170223"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbLEacQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973970999/job/36183284337"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbLWFww",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12974102475/job/36183573955"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflwVQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338477/job/34459971669"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVeRQMA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837327273/job/35800764464"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVu217Q",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12844782672/job/35818157549"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbK6DoA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973898075/job/36183114656"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbK9ctA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973914848/job/36183170228"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbLEaaA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973971004/job/36183284328"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbLWFfQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12974102474/job/36183573885"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflwFw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338471/job/34459971607"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVeROxQ",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837327299/job/35800764101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVu21_w",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12844782669/job/35818157567"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbK6Dbg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973898074/job/36183114606"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbK9czA",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973914849/job/36183170252"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbLEaZg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12973971007/job/36183284326"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbLWFdg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12974102473/job/36183573878"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflpFw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459969815"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflpFQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34459969813"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflwGw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338467/job/34459971611"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflqfw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459970175"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflrzQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34459970509"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflxfw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349338467/job/34459971967"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflrtg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459970486"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBflqew",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34459970171"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBfltBQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337752/job/34459970821"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBgAlxg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12349337766/job/34460411334"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBfmFqw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34459977131"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIBfmCBw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19943&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Computability): Add Chomsky Normal Form Grammar and translation",
        "updatedAt": "2025-01-26T11:13:39Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19943",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cf42c978c56c4270bc9630d518aa9c062e5acbd5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3417eaf630683c479cbbcf2d51279867115058d8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1895f0e5813891f4c8aed28095d3eb5b43f2bfbe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "95df8ab95d8c91e1d64fc92358c7df392fa783f6"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6jPx7WzwAAAAOk4-uY",
              "createdAt": "2024-12-13T17:03:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6XgfaG",
              "createdAt": "2024-12-13T17:04:22Z",
              "body": "### PR summary [221a3dc98a](https://github.com/leanprover-community/mathlib4/pull/19943/commits/221a3dc98a0d0b77946009875e5a83aff9911e33)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.ChomskyNormalForm.EmptyElimination` (new file) `Mathlib.Computability.ChomskyNormalForm.Basic` (new file)|520|\n| `Mathlib.Computability.ChomskyNormalForm.UnitElimination` (new file) `Mathlib.Computability.ChomskyNormalForm.LengthRestriction` (new file)|521|\n| `Mathlib.Computability.ChomskyNormalForm.TerminalRestriction` (new file)|522|\n| `Mathlib.Computability.ChomskyNormalForm.Translation` (new file)|525|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ChomskyNormalFormGrammar.{uN,uT}`\n`+ ChomskyNormalFormRule.{uT,uN}`\n`+ Derives`\n`+ Derives.append_left`\n`+ Derives.append_left_trans`\n`+ Derives.append_right`\n`+ Derives.eq_or_head`\n`+ Derives.eq_or_tail`\n`+ Derives.match_toCFG`\n`+ Derives.of_empty`\n`+ Derives.refl`\n`+ Derives.toCFG_match`\n`+ Derives.trans`\n`+ Derives.trans_produces`\n`+ DerivesIn.empty_of_append`\n`+ DerivesIn.empty_of_append_left`\n`+ DerivesIn.empty_of_append_right`\n`+ DerivesIn.empty_of_append_right_aux`\n`+ DerivesIn.mem_nullable`\n`+ DerivesIn.nullable_mem_nonterminal`\n`+ DerivesIn.unitPair_prefix`\n`+ DerivesIn.zero_steps_eq`\n`+ Generates`\n`+ Generates.match_toCFG`\n`+ Generates.toCFG_match`\n`+ NT'`\n`+ NonUnit`\n`+ NullableNonTerminal`\n`+ NullableRelated`\n`+ NullableRelated.append_nullable_left`\n`+ NullableRelated.append_split`\n`+ NullableRelated.append_split_three`\n`+ NullableRelated.derives`\n`+ NullableRelated.empty_nullableWord`\n`+ NullableRelated.empty_right`\n`+ NullableRelated.refl`\n`+ NullableWord`\n`+ NullableWord.cons_terminal`\n`+ NullableWord.empty_of_append`\n`+ NullableWord.empty_of_append_left`\n`+ NullableWord.empty_of_append_right`\n`+ NullableWord.nullableNonTerminal`\n`+ Produces`\n`+ Produces.append_left`\n`+ Produces.append_right`\n`+ Produces.input_output`\n`+ Produces.match_toCFG`\n`+ Produces.rule`\n`+ Produces.single`\n`+ Produces.toCFG_match`\n`+ Produces.trans_derives`\n`+ Rewrites`\n`+ Rewrites.append_left`\n`+ Rewrites.append_right`\n`+ Rewrites.empty`\n`+ Rewrites.exists_parts`\n`+ Rewrites.input_output`\n`+ Rewrites.match_toCFGRule`\n`+ Rewrites.toCFGRule_match`\n`+ UnitPair`\n`+ UnitPair.derives`\n`+ UnitPair.rfl`\n`+ Wellformed.cases`\n`+ Wellformed.mem_nonterminal`\n`+ addIfNullable`\n`+ addIfNullable_monotone`\n`+ addIfNullable_subset_generators`\n`+ addNullables`\n`+ addNullablesIter`\n`+ addNullablesIter_fixpoint`\n`+ addNullablesIter_only_nullableNonTerminal`\n`+ addNullables_mem_nullableNonTerminal`\n`+ addNullables_subset_generators`\n`+ addUnitPair`\n`+ addUnitPairs`\n`+ addUnitPairsIter`\n`+ addUnitPairsIter_fixpoint`\n`+ addUnitPairs_subset_generatorsProd`\n`+ collectUnitPairs`\n`+ collectUnitPairs_subset_generatorsProd`\n`+ collectUnitPairs_unitPair`\n`+ collectUnitPairs_unitPair_rec`\n`+ computeNullables`\n`+ computeNullables_iff`\n`+ computeRules`\n`+ computeRulesRec`\n`+ computeRulesRec_derives`\n`+ computeRules_derives_embedString`\n`+ computeUnitPairRules`\n`+ computeUnitPairs`\n`+ computeUnitPairs_iff`\n`+ derivesIn_non_empty_to_nullableRelated_derives`\n`+ derivesIn_to_eliminateEmpty_derives`\n`+ derives_restrictLength_derives_embedString`\n`+ derives_restrictTerminals_derives_embedString`\n`+ derives_to_eliminateUnitRules_derives`\n`+ eliminateEmpty`\n`+ eliminateEmpty_correct`\n`+ eliminateEmpty_derives_not_empty`\n`+ eliminateEmpty_derives_to_derives`\n`+ eliminateEmpty_not_empty_output`\n`+ eliminateEmpty_produces_not_empty`\n`+ eliminateEmpty_produces_to_derives`\n`+ eliminateUnitRules`\n`+ eliminateUnitRules_correct`\n`+ eliminateUnitRules_derives_to_derives`\n`+ eliminateUnitRules_not_empty_output`\n`+ eliminateUnitRules_output_nonUnit`\n`+ embedString_nonterminal`\n`+ embedString_preserves_nonempty`\n`+ embedSymbol_nonterminal`\n`+ embedSymbol_nonterminal_eq`\n`+ embedSymbol_terminal`\n`+ generators`\n`+ generatorsProdDiag`\n`+ generatorsProdDiag_subset_generators_prod`\n`+ generatorsProdDiag_unitPairs`\n`+ generatorsProd_limits_unitPairs`\n`+ generators_limits_nullable`\n`+ input`\n`+ input_mem_generators`\n`+ language`\n`+ left_not_mem_computeRulesRec`\n`+ mem_addUnitPairIter_unitPair`\n`+ mem_addUnitPairs`\n`+ mem_addUnitPairs_unitPair`\n`+ mem_collectUnitPairs`\n`+ mem_computRules_right_length`\n`+ mem_computeRulesRec_projectString_input_eq_output`\n`+ mem_computeRules_left`\n`+ mem_computeRules_right_mem_computeRulesRec`\n`+ mem_eliminateEmpty`\n`+ mem_language_iff`\n`+ mem_nullableCombinations`\n`+ mem_nullableCombinations_nullableRelated`\n`+ mem_removeNullableRule_nullableRelated`\n`+ mem_removeUnitRules_exists_UnitPair`\n`+ newTerminalRules`\n`+ newTerminalRules_terminal_output`\n`+ nonUnit_mem_computeUnitPairRules`\n`+ nonUnit_mem_removeUnitRules`\n`+ nonUnit_output_mem_eliminateUnitRules`\n`+ nonUnit_rules_mem`\n`+ not_empty_mem_removeNullables`\n`+ nullableCombinations`\n`+ nullableRelated_mem_eliminateEmpty_rules`\n`+ nullableRelated_mem_removeNullable`\n`+ nullable_input_mem_addNullables`\n`+ nullable_mem_addNullablesIter`\n`+ nullable_related_append`\n`+ only_nonterminals`\n`+ output`\n`+ output_mem_removeNullableRule`\n`+ output_mem_removeNullables`\n`+ produces_nonUnit_eliminateUnitRules_produces`\n`+ produces_nullableRelated_to_derives`\n`+ produces_restrictLength_derives_embedString`\n`+ projectString_append`\n`+ projectString_embedString_id`\n`+ projectString_nonterminal`\n`+ projectString_rightEmbedString_id`\n`+ projectSymbol_nonterminal`\n`+ projectSymbol_terminal`\n`+ removeNullableRule`\n`+ removeNullables`\n`+ removeUnitRules`\n`+ restrictLength`\n`+ restrictLengthRules`\n`+ restrictLength_correct`\n`+ restrictLength_derives_derives_projectString`\n`+ restrictLength_produces_derives_projectString`\n`+ restrictTerminalRule`\n`+ restrictTerminalRule_left`\n`+ restrictTerminalRule_right_terminal_output`\n`+ restrictTerminalRules`\n`+ restrictTerminalRules_right_terminal_output`\n`+ restrictTerminals`\n`+ restrictTerminalsRules_left`\n`+ restrictTerminals_correct`\n`+ restrictTerminals_derives_derives_projectString`\n`+ restrictTerminals_derives_rightEmbedString_embedString`\n`+ restrictTerminals_nonUnit_output`\n`+ restrictTerminals_not_empty_output`\n`+ restrictTerminals_produces_derives_projectString`\n`+ restrictTerminals_terminal_or_nonterminals`\n`+ rewrites_iff`\n`+ rewrites_of_exists_parts`\n`+ rightEmbedString`\n`+ rightEmbedSymbol`\n`+ rightEmbed_string_nonUnit`\n`+ ruleIsNullable`\n`+ ruleIsNullable_NullableNonTerminal`\n`+ subset_addIfNullable`\n`+ subset_addNullables`\n`+ subset_addUnitPairs`\n`+ subset_addUnitPairsIter`\n`+ symbolIsNullable`\n`+ symbols_nullable_nullableWord`\n`+ terminal_mem_newTerminalRules`\n`+ toCFG`\n`+ toCFGRule`\n`+ toCFG_correct`\n`+ toCNF`\n`+ toCNF_correct`\n`+ unitPair_mem_addUnitPairsIter`\n`+ unitRule`\n`++ Derives.head_induction_on`\n`++ DerivesIn`\n`++ DerivesIn.append_left`\n`++ DerivesIn.append_right`\n`++ DerivesIn.append_split`\n`++ DerivesIn.head_induction_on`\n`++ DerivesIn.head_of_succ`\n`++ DerivesIn.tail_of_succ`\n`++ DerivesIn.three_split`\n`++ DerivesIn.trans`\n`++ DerivesIn.trans_produces`\n`++ DerivesIn.zero_steps`\n`++ Produces.single_step`\n`++ Produces.trans_derivesIn`\n`++ Wellformed`\n`++ derives_iff_derivesIn`\n`++ embedString`\n`++ embedString_append`\n`++ embedString_terminals`\n`++ embedSymbol`\n`++ mem_language_iff_derivesIn`\n`++ projectString`\n`++ projectString_terminals`\n`++ projectSymbol`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6jPx7WzwAAAAOk5AVG",
              "createdAt": "2024-12-13T17:04:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
                "name": "t-computability"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6VVN0j",
              "createdAt": "2024-12-16T07:39:43Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "221a3dc98a0d0b77946009875e5a83aff9911e33"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6jPx7WzwAAAAOl0vh0",
              "createdAt": "2024-12-16T09:08:34Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Yltn4",
              "createdAt": "2025-01-17T21:36:03Z",
              "body": "Could you please act on the comments below everywhere they apply (ie not just where I've commented)?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6jPx7WzwAAAAO4pNuy",
              "createdAt": "2025-01-17T21:43:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bLmcI",
              "createdAt": "2025-01-21T02:40:48Z",
              "body": "Thanks, @YaelDillies, for the reviews.\r\n\r\nAt the same time, I'll note that internal reviewer discussion proposed that this is out of scope for Mathlib, with insufficient maintainer/reviewer expertise. (Note it's not just reviewing the material initially, but being confident we have expertise if this need repairing or refactoring in a few years.) No definitive answer was reached, and Yael's review may push things in a different direction. But I thought it good to be up front about the discussion.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bMxtt",
              "createdAt": "2025-01-21T07:07:39Z",
              "body": "My opinion is that the current PR is too big and has some style issues, but that if I review it could become mergeable and you might learn something 😄",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bM6vC",
              "createdAt": "2025-01-21T07:32:11Z",
              "body": "Thank you @YaelDillies!\r\nIt's my first time working with Lean and the PR is a building block (although much larger than the actual proof) for proving the Pumping Lemma for CFG, which i have already finished [here](https://github.com/AlexLoitzl/pumping_cfg).\r\n\r\nRegarding the size, I could not think of a reasonable splitting of the PR, since I thought it was nonsensical to split it into multiple PRs which do some translation of CFG with no clear goal.\r\n\r\nIf in fact this will not get merged, I can try to carry out the proof of the pumping lemma directly on CFGs instead. Anyways, it would be nice to at least know that there is a prospect of this being merged before I pour more effort into it.",
              "author": {
                "login": "AlexLoitzl"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bNEKN",
              "createdAt": "2025-01-21T07:56:29Z",
              "body": "Being merged or not being merged I think is not greatly relevant. We are at a pivotal period of mathlib where we're hitting the limits of the monorepo model. Instead of accepting everything blindly in the `mathlib4` repo, we are now considering the possibility of having several mathlib repos, a central one (this one) along with one for each \"mathematical dead end\", namely one for each subdomain whose results are unlikely to ever be used in another domain. Eg here we could have the repo `mathlib-formal-language`. See https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Repository.20for.20combinatorial.20games for more information.\r\n\r\nLong story short, I think it's worth reviewing anyway.",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        }
      }
    }
  }
}
