{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 52,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n-->\r\n\r\n- [ ] depends on: #11130\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\nIt's tempting to try to prove something like\r\n```lean\r\ntheorem Functor.mapBinaryBiconeInv_toCone [Limits.HasZeroMorphisms C]\r\n    [Limits.HasZeroMorphisms D]\r\n    (e : D â¥¤ C) [IsEquivalence e] {X Y : D} (b : BinaryBicone (e.obj X) (e.obj Y)) :\r\n    (e.mapBinaryBiconeInv b).toCone =\r\n      (e.mapConeInv <| (Cones.postcompose (pairComp X Y e).symm.hom).obj b.toCone) := by\r\n  simp\r\n  sorry\r\n\r\ntheorem Functor.mapBinaryBiconeInv_toCocone [Limits.HasZeroMorphisms C]\r\n    [Limits.HasZeroMorphisms D]\r\n    (e : D â¥¤ C) [IsEquivalence e] {X Y : D} (b : BinaryBicone (e.obj X) (e.obj Y)) :\r\n    (e.mapBinaryBiconeInv b).toCocone =\r\n      (e.mapCoconeInv <| (Cocones.precompose (pairComp X Y e).hom).obj b.toCocone) := by\r\n  sorry\r\n```\r\nbut maybe equality is evil here",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c51tTm2",
              "body": "You could try to state `Functor.mapBinaryBiconeInv_toCone` as an isomorphism of cones, which would be non-evil, though I only have the very sad proof\r\n```lean\r\ndef Functor.mapBinaryBiconeInv_toCone [Limits.HasZeroMorphisms C] [Limits.HasZeroMorphisms D]\r\n    (e : D â¥¤ C) [IsEquivalence e] {X Y : D} (b : BinaryBicone (e.obj X) (e.obj Y)) :\r\n    (e.mapBinaryBiconeInv b).toCone â‰…\r\n      (e.mapConeInv <| (Cones.postcompose (pairComp X Y e).symm.hom).obj b.toCone) :=\r\n  (Cones.functoriality _ e).preimageIso <| by\r\n    dsimp\r\n    refine' _ â‰ªâ‰« (mapConeMapConeInv _ _).symm\r\n    refine' Cones.ext (IsEquivalence.counitIso.app b.pt) _\r\n    rintro âŸ¨(âŸ¨âŸ©|âŸ¨âŸ©)âŸ©\r\n    Â· simp [pairComp]\r\n      erw [(asEquivalence e).symm.unit_inverse_comp, Category.comp_id]\r\n      rfl\r\n    Â· simp [pairComp]\r\n      erw [(asEquivalence e).symm.unit_inverse_comp, Category.comp_id]\r\n      rfl\r\n```",
              "createdAt": "2024-03-02T14:32:44Z",
              "author": {
                "login": "TwoFX"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c51zHso",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11130~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-03-04T11:08:25Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8852a461bd9dcd69b14c0e4ef9175d11a7ba951f",
                "additions": 52,
                "deletions": 0,
                "committedDate": "2024-03-03T14:51:44Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgz0g",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012408/job/22219862994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgy0A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219862736"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgyrg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGg0Yg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012407/job/22219863138"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgzQw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219862851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGg0dQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219863157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgzxg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012407/job/22219862982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGg0HA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219863068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgzzA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGg0cg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219863154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgzHA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgzgQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGgzoQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219862945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGg0pQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219863205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLG3ntA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22220236724"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFLGhGNg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=11100"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-03-02T12:59:21Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Adjunction/Basic.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Equivalence.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Preserves/Shapes/Biproducts.lean",
              "additions": 38,
              "deletions": 0
            }
          ]
        },
        "headRefName": "eric-wieser/mapBinaryBicone",
        "headRefOid": "8852a461bd9dcd69b14c0e4ef9175d11a7ba951f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5oe74Q",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
              "name": "awaiting-CI"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5yARHm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "TwoFX"
              },
              "submittedAt": "2024-03-02T14:38:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 11100,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5yARFa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "TwoFX"
              },
              "submittedAt": "2024-03-02T14:37:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5yARHm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "TwoFX"
              },
              "submittedAt": "2024-03-02T14:38:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5yAWX2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-02T17:15:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5yAWYY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-02T17:15:21Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aAI5A",
                    "body": "I guess the \"correct\" way to do this would be to make `BinaryBicone` into a category and recreate the whole `Cones.functoriality` construction for `BinaryFan`, `BinaryCofan` and `BinaryBicone` and then relate these notions, but that would be quite a bit of work, so I wouldn't be opposed to adding this concrete definition for now if you have need for it. It is a bit sad though that right now we're not even able to state the relationship between `mapBinaryBicone` and `mapBinaryBiconeInv`.",
                    "createdAt": "2024-03-02T14:37:17Z",
                    "author": {
                      "login": "TwoFX"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5aAI7c",
                    "body": "Ah, I just noticed that you're working towards this in #11102, nice.",
                    "createdAt": "2024-03-02T14:38:17Z",
                    "author": {
                      "login": "TwoFX"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5aAOKc",
                    "body": "Indeed, but thanks for confirming that it is a sensible route to take!",
                    "createdAt": "2024-03-02T17:15:06Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5aAOLA",
                    "body": "(I'm happy for this PR to wait on that one)",
                    "createdAt": "2024-03-02T17:15:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjIwNjUzNTI=",
              "login": "TwoFX"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgz0g",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012408/job/22219862994"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgy0A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219862736"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgyrg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862702"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGg0Yg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012407/job/22219863138"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgzQw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219862851"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGg0dQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219863157"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgzxg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012407/job/22219862982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGg0HA",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219863068"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgzzA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862988"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGg0cg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219863154"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgzHA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862812"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgzgQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22219862913"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGgzoQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219862945"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGg0pQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012233/job/22219863205"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLG3ntA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8131012234/job/22220236724"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFLGhGNg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=11100"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Limits): add `Functor.mapBinaryBiconeInv`",
        "updatedAt": "2024-07-31T08:14:00Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/11100",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BCDPMzwAAAALKgGtV",
              "createdAt": "2024-03-02T12:59:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BCDPMzwAAAALKgGtW",
              "createdAt": "2024-03-02T12:59:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BCDPMzwAAAALKgGtX",
              "createdAt": "2024-03-02T12:59:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6BCDPMzwAAAALKgH-F",
              "createdAt": "2024-03-02T13:02:32Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BCDPMzwAAAALKgIHB",
              "createdAt": "2024-03-02T13:02:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BCDPMzwAAAALKgIHC",
              "createdAt": "2024-03-02T13:02:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6BCDPMzwAAAALKgJPc",
              "createdAt": "2024-03-02T13:05:33Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51tTm2",
              "createdAt": "2024-03-02T14:32:44Z",
              "body": "You could try to state `Functor.mapBinaryBiconeInv_toCone` as an isomorphism of cones, which would be non-evil, though I only have the very sad proof\r\n```lean\r\ndef Functor.mapBinaryBiconeInv_toCone [Limits.HasZeroMorphisms C] [Limits.HasZeroMorphisms D]\r\n    (e : D â¥¤ C) [IsEquivalence e] {X Y : D} (b : BinaryBicone (e.obj X) (e.obj Y)) :\r\n    (e.mapBinaryBiconeInv b).toCone â‰…\r\n      (e.mapConeInv <| (Cones.postcompose (pairComp X Y e).symm.hom).obj b.toCone) :=\r\n  (Cones.functoriality _ e).preimageIso <| by\r\n    dsimp\r\n    refine' _ â‰ªâ‰« (mapConeMapConeInv _ _).symm\r\n    refine' Cones.ext (IsEquivalence.counitIso.app b.pt) _\r\n    rintro âŸ¨(âŸ¨âŸ©|âŸ¨âŸ©)âŸ©\r\n    Â· simp [pairComp]\r\n      erw [(asEquivalence e).symm.unit_inverse_comp, Category.comp_id]\r\n      rfl\r\n    Â· simp [pairComp]\r\n      erw [(asEquivalence e).symm.unit_inverse_comp, Category.comp_id]\r\n      rfl\r\n```",
              "author": {
                "login": "TwoFX"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5yARFa",
              "createdAt": "2024-03-02T14:37:16Z",
              "body": "",
              "author": {
                "login": "TwoFX"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6BCDPMzwAAAALKrnts",
              "createdAt": "2024-03-03T14:51:50Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BCDPMzwAAAALKr0hY",
              "createdAt": "2024-03-03T15:19:19Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BCDPMzwAAAALLGJpq",
              "createdAt": "2024-03-04T11:08:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51zHso",
              "createdAt": "2024-03-04T11:08:25Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11130~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BCDPMzwAAAAL3jQbv",
              "createdAt": "2024-05-08T12:25:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BCDPMzwAAAAMhHhpE",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            }
          ]
        }
      }
    }
  }
}
