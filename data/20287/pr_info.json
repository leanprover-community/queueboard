{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 268,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "scholzhannah"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR adds additional basic lemmas about the classical definition of CW complexes.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n- [x] depends on: #19760\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Y2I-M",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #19760. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "createdAt": "2024-12-28T13:45:48Z",
              "author": {
                "login": "mergify"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Y2I-8",
              "body": "### PR summary [3003fb9949](https://github.com/leanprover-community/mathlib4/pull/20287/commits/3003fb99494cabd3500656cfb4cba97215cd43cb)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CWComplex.cellFrontier_subset_finite_openCell`\n`+ CWComplex.complex_eq_iUnion_openCell`\n`+ CWComplex.exists_mem_openCell_of_mem_skeleton`\n`+ CWComplex.iUnion_openCell_eq_skeleton`\n`+ CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell`\n`+ CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell`\n`+ CWComplex.mem_skeletonLT_iff`\n`+ CWComplex.skeletonLT_eq_iUnion_openCell`\n`+ RelCWComplex.cellFrontier_subset_complex`\n`+ RelCWComplex.cellFrontier_subset_finite_openCell`\n`+ RelCWComplex.complex_eq_union_iUnion_openCell`\n`+ RelCWComplex.disjoint_base_iUnion_openCell`\n`+ RelCWComplex.disjoint_interior_base_closedCell`\n`+ RelCWComplex.disjoint_interior_base_iUnion_closedCell`\n`+ RelCWComplex.disjoint_skeletonLT_openCell`\n`+ RelCWComplex.disjoint_skeleton_openCell`\n`+ RelCWComplex.eq_cell_of_not_disjoint`\n`+ RelCWComplex.isClosed`\n`+ RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell`\n`+ RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell`\n`+ RelCWComplex.mem_skeletonLT_iff`\n`+ RelCWComplex.mem_skeleton_iff`\n`+ RelCWComplex.skeletonLT_eq_iUnion_openCell`\n`+ RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier`\n`+ RelCWComplex.skeletonLT_monotone`\n`+ RelCWComplex.skeletonLT_succ_eq_skeletonLT_union_iUnion_closedCell`\n`+ RelCWComplex.skeleton_eq_iUnion_openCell`\n`+ RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier`\n`+ RelCWComplex.skeleton_monotone`\n`+ RelCWComplex.skeleton_succ_eq_skeleton_union_iUnion_closedCell`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-12-28T13:45:59Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ZQ0Uw",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #19760. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "createdAt": "2025-01-04T14:41:28Z",
              "author": {
                "login": "mergify"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ds9R8",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19760~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-02-08T16:03:08Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6frcf_",
              "body": "Thank you for your review! I learned a lot about how to make my code nicer.\r\n\r\n> I'm also wondering whether it might make sense to swap the left and right hand sides of lemmas like `iUnion_openCell_eq_skeletonLT`, `iUnion_openCell_eq_skeleton` and `iUnion_openCell` (which should maybe be `iUnion_openCell_eq_complex`) - using them to expand out `skeleton` or `skeletonLT` will probably a lot more common than having the current left hand side appear somewhere and using the lemma to simplify it. You can already see within this PR that they are mostly used in that direction.\r\n\r\nYes, you are absolutely right. I have changed that.",
              "createdAt": "2025-02-24T16:14:33Z",
              "author": {
                "login": "scholzhannah"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fsRfH",
              "body": "That one additional comment aside, this now looks good to me - thanks for taking the time to put together this PR. @YaelDillies, would you mind also taking a quick look?",
              "createdAt": "2025-02-24T17:32:40Z",
              "author": {
                "login": "peabrainiac"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6245d9874a7492263f03974472557b2a4c2efc7d",
                "additions": 315,
                "deletions": 5,
                "committedDate": "2025-02-20T16:29:10Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvknEow",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440143314/job/37552243875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhbiA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116031/job/37552151432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxwkk1A",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13494613347/job/37699003604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxwVrJw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13494531391/job/37698759463"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhWeg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116034/job/37552150138"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhZ1w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116295/job/37552150999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxwV_yg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13494531516/job/37698764746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhaQA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116308/job/37552151104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxwVrJA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13494531382/job/37698759460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhX5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116035/job/37552150500"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhZ9Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116296/job/37552151029"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhYCQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116031/job/37552150537"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhZ5Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116035/job/37552151013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhcJQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116296/job/37552151589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkhdcg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116031/job/37552151922"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvlBldw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13440116035/job/37552678263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkh-Sg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37552160330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIvkjaVA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8aa66532875f3eb6e2df71ed17c115e77e051976",
                "additions": 42,
                "deletions": 64,
                "committedDate": "2025-02-24T16:13:01Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIw3xg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502560464/job/37724370886"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyJQUpg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502712426/job/37724886182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIxAXQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502561228/job/37724373085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyJQUvg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502712429/job/37724886206"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIxBiA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502561235/job/37724373384"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyJQUuQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502712425/job/37724886201"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIw1mg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502560471/job/37724370330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIxCHw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502561224/job/37724373535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIw1LQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502560464/job/37724370221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIw3cA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502560471/job/37724370800"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIxAmw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502561224/job/37724373147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIw5fw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502560464/job/37724371327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyJWs7g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13502560471/job/37724990702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIxcYA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37724380256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyIzecw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4ef90d13f240ad20bbf1312dafea9c5f743eaf3f",
                "additions": 11,
                "deletions": 7,
                "committedDate": "2025-02-24T16:35:10Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKP2UQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503014359/job/37725926993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOMAg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006067/job/37725899778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKP3BQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503014444/job/37725927173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyTQdGw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13505936364/job/37735374107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyM6KuA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503854746/job/37728717496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyTQNlw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13505934521/job/37735370135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOOTw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006697/job/37725900367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyM6Kyg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503854752/job/37728717514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyTQL3A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13505934526/job/37735369692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOOgw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006703/job/37725900419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyM6K-w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503854751/job/37728717563"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyTQG3A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13505934534/job/37735368412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOKpQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006066/job/37725899429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOOfw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006699/job/37725900415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOJVQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006067/job/37725899093"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOI9w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006066/job/37725898999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOQPg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006699/job/37725900862"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOODw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006067/job/37725900303"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKw3rA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13503006066/job/37726468012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKOxOQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37725909305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIyKQguQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "438deb4746b47076e1959d1b9fa8da5166c07ec8",
                "additions": 20,
                "deletions": 21,
                "committedDate": "2025-03-04T09:43:31Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1swg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650772786/job/38158560450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4neOEg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650981025/job/38159224338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m5EUQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650789575/job/38158615633"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4nZ5Hw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650958514/job/38159153439"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4y5qXA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654785375/job/38171208284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI40O-XA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13655212173/job/38172606044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1uNg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650773226/job/38158560822"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m5DJA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650789582/job/38158615332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4nZ6pA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650958518/job/38159153828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4y5q8Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654785376/job/38171208433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI40O9Qg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13655212143/job/38172605762"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1uAQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650773233/job/38158560769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m5DGQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650789583/job/38158615321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4nZ6LQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650958517/job/38159153709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4y5qTw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654785377/job/38171208271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI40O9Fw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13655212144/job/38172605719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1qpg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650772782/job/38158559910"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1wMQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650773229/job/38158561329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1q_g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650772786/job/38158559998"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1sDQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650772782/job/38158560269"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1uwg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650773229/job/38158560962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m1uug",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650772786/job/38158560954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4nT81A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13650772782/job/38159056084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m2AeA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38158565496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4m3nbw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6bfa7eb2b9cd21173f72b7c2d01c9da94fe8a7dc",
                "additions": 37635,
                "deletions": 23801,
                "committedDate": "2025-03-04T15:20:57Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e3bd823baef49dcedd0d5a0d8feee22ced634e97",
                "additions": 31,
                "deletions": 59,
                "committedDate": "2025-03-04T16:05:57Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48z2Lg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881765/job/38181598766"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI485n1w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657908658/job/38181693399"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49AUgg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657940578/job/38181803138"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49Qvdg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658017641/job/38182072182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49Uw7A",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658035920/job/38182138092"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48zvsg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881221/job/38181597106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI485mWg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657908624/job/38181693018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49ATlg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657940587/job/38181802902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49QvnA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658017643/job/38182072220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49Uw0A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658035950/job/38182138064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48zvnQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881247/job/38181597085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI485mhg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657908626/job/38181693062"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49ATgw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657940574/job/38181802883"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49Qwgw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658017647/job/38182072451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49Uyrw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658035935/job/38182138543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48z2mg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881761/job/38181598874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48zvXQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881224/job/38181597021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48z4pQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881765/job/38181599397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48z4cA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881761/job/38181599344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48zxZA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881224/job/38181597540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI48z6Rg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881765/job/38181599814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49asOQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657881761/job/38182235193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI480PSQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38181605193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI481vxw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "862fe4f0d14c25d154f895306170c5e53667a771",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-03-04T16:23:38Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49848A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227250/job/38182795504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI498-4A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227757/job/38182797024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI498_fw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227765/job/38182797183"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4984zA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227249/job/38182795468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI498--A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227762/job/38182797048"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4986og",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227249/job/38182795938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4987FA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227250/job/38182796052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI499A1A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227762/job/38182797524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-hzvA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227249/job/38183400380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4989DA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658227250/job/38182796556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI499gdQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38182805621"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI49_Ltw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5c8d8b2b3b7a89e1d2d72de99835cf8328758534",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2025-03-04T16:31:01Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-bddA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374000/job/38183296372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4_eEqw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658694713/job/38184387755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-d49g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658385546/job/38183336182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4_dofA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658692004/job/38184380540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5AmA-Q",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659038560/job/38185566457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BGxEA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659199385/job/38186103056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-bg0w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374501/job/38183297235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-d5EQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658385537/job/38183336209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4_drSQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658691997/job/38184381257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5Al_lg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659038555/job/38185566102"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BGwwA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659199395/job/38186102976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-bgwA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374519/job/38183297216"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-d4sw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658385538/job/38183336115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4_djJA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658691987/job/38184379172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5AmB3A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659038561/job/38185566684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BGwUA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659199387/job/38186102864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-h4Tg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374002/job/38183401550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-biWw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374498/job/38183297627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-bbVg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374000/job/38183295830"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-h2Vw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374002/job/38183401047"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-bgQQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374498/job/38183297089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-bfHQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374000/job/38183296797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4_FCBQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13658374002/job/38183977477"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-cBgw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38183305603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4-eXMA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3003fb99494cabd3500656cfb4cba97215cd43cb",
                "additions": 27,
                "deletions": 33,
                "committedDate": "2025-03-04T17:24:54Z",
                "author": {
                  "name": "Hannah Scholz",
                  "email": "hannah@scholzbande.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmpqA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363770/job/38186625448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BsdyQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659393624/job/38186720713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5C1lWw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659758582/job/38187918683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmsNA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364112/job/38186626100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BsdtQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659393629/job/38186720693"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5C1lQw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659758563/job/38187918659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmsSg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364102/job/38186626122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5Bsddw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659393627/job/38186720631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5C1nug",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659758556/job/38187919290"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5Bmpqw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363767/job/38186625451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmtDA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364127/job/38186626316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmrZw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363770/job/38186625895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5Bmq9g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363767/job/38186625782"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmuQQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364127/job/38186626625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BmtJw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363770/job/38186626343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5CHEmg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363767/job/38187156634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5Bm9Yg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38186630498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI5BoYhg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-28T13:45:06Z",
        "deletions": 10,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/CWComplex/Classical/Basic.lean",
              "additions": 268,
              "deletions": 10
            }
          ]
        },
        "headRefName": "Hannah/CWComplexbasiclemmas",
        "headRefOid": "3003fb99494cabd3500656cfb4cba97215cd43cb",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6GW5Z7",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6eZf5g",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2025-03-04T13:28:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6edRNx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T17:48:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dOwMy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "peabrainiac"
              },
              "submittedAt": "2025-02-24T17:17:56Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20287,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dHwmQ",
              "body": "I've gone ahead and left a few comments, mostly suggesting different tactics, stylistic changes and ways the code can be golfed; feel free to ignore the ones you disagree with, I know opinions can differ.\r\n\r\nI'm also wondering whether it might make sense to swap the left and right hand sides of lemmas like `iUnion_openCell_eq_skeletonLT`, `iUnion_openCell_eq_skeleton` and `iUnion_openCell` (which should maybe be `iUnion_openCell_eq_complex`) - using them to expand out `skeleton` or `skeletonLT` will probably a lot more common than having the current left hand side appear somewhere and using the lemma to simplify it. You can already see within this PR that they are mostly used in that direction.\r\n\r\nOther than that though, this looks good to me - the lemmas are well-documented, well-named, and mathematically meaningful. It would probably be good to also have a more experienced reviewer take a look, but personally I would be happy to see this in mathlib.",
              "state": "COMMENTED",
              "author": {
                "login": "peabrainiac"
              },
              "submittedAt": "2025-02-24T09:13:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dOFQD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-02-24T16:20:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dOwMy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "peabrainiac"
              },
              "submittedAt": "2025-02-24T17:17:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dPgv6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-24T19:13:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eWgz-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T09:44:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eWoKq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T09:53:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eZf5g",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2025-03-04T13:28:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eZzms",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T13:51:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ecEgl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T16:07:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ecFkw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T16:09:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ecHkc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T16:12:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ecJdd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T16:13:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ecYrR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T16:31:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ecikL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T16:48:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ec1Be",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T17:06:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ec618",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T17:15:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6edBea",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "scholzhannah"
              },
              "submittedAt": "2025-03-04T17:26:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6edRNx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T17:48:29Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Pxbt",
                    "body": "Since you already have a proof term here, there's no need to use a tactic like `apply`; you can just give it directly. Using dot notation for transitivity also makes the proof a bit shorter, but of course this doesn't matter much.\r\n```suggestion\r\n    cellFrontier n j ‚äÜ C :=\r\n  (cellFrontier_subset_closedCell n j).trans (closedCell_subset_complex n j)\r\n```",
                    "createdAt": "2025-02-24T05:53:22Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51PyVz",
                    "body": "The argument `C` is not implicit, so it doesn't need to be named.\r\n```suggestion\r\n  rw [closed C C (by rfl)]\r\n```",
                    "createdAt": "2025-02-24T05:59:41Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P0-R",
                    "body": "When working with nested unions like this, you can often use lemmas about `iUnion‚ÇÇ` instead of applying lemmas about `iUnion` twice:\r\n```suggestion\r\n  ¬∑ exact iUnion‚ÇÇ_subset_iff.2 fun _ h ‚Ü¶ skeletonLT_mono (Order.le_of_lt_add_one h)\r\n  ¬∑ cases' n with n\r\n    ¬∑ simp only [skeletonLT_top, top_add, ENat.coe_lt_top, iUnion_true, ‚Üê union]\r\n      apply union_subset\r\n      ¬∑ exact subset_iUnion_of_subset 0 (base_subset_skeletonLT 0)\r\n      ¬∑ apply iUnion‚ÇÇ_subset fun n i ‚Ü¶ ?_\r\n```",
                    "createdAt": "2025-02-24T06:17:09Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P1go",
                    "body": "Is there a reason you're using `m < n + 1` over `m ‚â§ n`? As far as I can see the two are equivalent, and the latter seems simpler than the former.",
                    "createdAt": "2025-02-24T06:20:37Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51TRZ1",
                    "body": "I thought that was because of infinity but I think you are right. I will change that.",
                    "createdAt": "2025-02-24T16:20:30Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P2De",
                    "body": "```suggestion\r\n    skeleton C (n + 1) = skeleton C n ‚à™ ‚ãÉ (j : cell C (n + 1)), closedCell (n + 1) j :=\r\n```",
                    "createdAt": "2025-02-24T06:24:15Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P6lN",
                    "body": "Aside from the advice about `iUnion‚ÇÇ`-lemmas and dot notation also applying here, I think it makes sense to use `refine` instead of `apply` for steps like this - `apply` is for automatically dealing with the premises of the lemma you give it (either by filling them in or by opening them as subgoals), but you are supplying a term here that already has no premises left to deal with. This is arguably a matter of taste though.\r\n```suggestion\r\n    ¬∑ refine iUnion‚ÇÇ_subset fun m hm ‚Ü¶ iUnion_subset fun j ‚Ü¶ ?_\r\n      exact (openCell_subset_skeletonLT m j).trans (skeletonLT_mono (Order.add_one_le_of_lt hm))\r\n```",
                    "createdAt": "2025-02-24T06:52:05Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P6_c",
                    "body": "```suggestion\r\n    refine iUnion‚ÇÇ_subset fun m hm ‚Ü¶ iUnion_subset fun j ‚Ü¶ ?_\r\n```",
                    "createdAt": "2025-02-24T06:54:21Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P7OV",
                    "body": "```suggestion\r\n        refine iUnion‚ÇÇ_subset fun l hl ‚Ü¶ iUnion‚ÇÇ_subset fun i _ ‚Ü¶ ?_\r\n```",
                    "createdAt": "2025-02-24T06:55:39Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P7rH",
                    "body": "```suggestion\r\n          exact subset_iUnion‚ÇÇ_of_subset l ((ENat.coe_lt_coe.2 hl).trans hm) <| subset_iUnion _ i\r\n    ¬∑ exact subset_union_of_subset_right (subset_iUnion‚ÇÇ_of_subset m hm (subset_iUnion _ j)) _\r\n```",
                    "createdAt": "2025-02-24T06:58:06Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P8hu",
                    "body": "```suggestion\r\n  simp only [‚Üê skeletonLT_top, ‚Üê iUnion_openCell_eq_skeletonLT, ENat.coe_lt_top, iUnion_true]\r\n```",
                    "createdAt": "2025-02-24T07:02:43Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P9lG",
                    "body": "The `simpa` tactic is actually built specifically for cases like this, where you want to simplify an assumption and then use it to close the goal; you don't even have to add it to the context with `have` first, but can pass it to `simpa` directly.\r\n```suggestion\r\n  simpa using RelCWComplex.iUnion_openCell (C := C) (D := ‚àÖ)\r\n```",
                    "createdAt": "2025-02-24T07:08:24Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51P_8N",
                    "body": "A few things going on here: giving the implicit arguments `x` and `y` explicitly is unnecessary, as they can be inferred from the goal. Simplifying `this` before supplying more arguments seems also unnecessary, since those are all definitional equalities; I'm unsure whether this could be considered defeq abuse though, maybe a more experienced reviewer can comment on that. Finally, if you don't rewrite `this` you don't need to introduce it in the first place, but can just inline it; then you also won't need to explicitly supply `C` and `D`.\r\n```suggestion\r\n  push_neg at h'\r\n  apply h\r\n  exact pairwiseDisjoint (mem_univ _) (mem_univ _) h'\r\n```\r\nYou could even merge `apply h` into the same line and remove `push_neg at h'` entirely, but of course how much exactly you want to golf this is up to you.\r\n```suggestion\r\n  exact h <| pairwiseDisjoint (mem_univ _) (mem_univ _) h'\r\n```",
                    "createdAt": "2025-02-24T07:20:45Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QAzD",
                    "body": "I think `simpa` is preferable to `simp_all`, since it makes it more clear which hypotheses are actually getting used and simplified.\r\n```suggestion\r\n  simpa [‚Üê iUnion_openCell_eq_skeletonLT] using hx\r\n```",
                    "createdAt": "2025-02-24T07:24:05Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QA3W",
                    "body": "```suggestion\r\n  simpa [‚Üê iUnion_openCell_eq_skeletonLT] using hx\r\n```",
                    "createdAt": "2025-02-24T07:24:18Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QDJh",
                    "body": "The named arguments here are again safe to omit:\r\n```suggestion\r\n  rcases RelCWComplex.exists_mem_openCell_of_mem_skeleton hx with h | h\r\n```\r\nAlternatively, the entire proof of this lemma is also just `(RelCWComplex.exists_mem_openCell_of_mem_skeleton hx).elim False.elim id`.",
                    "createdAt": "2025-02-24T07:35:04Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QD1k",
                    "body": "Dot notation is a bit shorter here again. I would also avoid using lemmas about `gt` and `ge` when all your assumptions and goals are about `lt` and `le`.\r\n```suggestion\r\n  exact (lt_self_iff_false m).mp (ENat.coe_lt_coe.1 (hln.trans_le hnm))\r\n```",
                    "createdAt": "2025-02-24T07:38:19Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QEai",
                    "body": "The `rwa` tactic does exactly this.\r\n```suggestion\r\n    rwa [skeletonLT_inter_openCell_eq_empty n.cast_nonneg'] at this\r\n```",
                    "createdAt": "2025-02-24T07:40:59Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QEy8",
                    "body": "```suggestion\r\n  exact empty_subset _\r\n```",
                    "createdAt": "2025-02-24T07:42:50Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QGwo",
                    "body": "```suggestion\r\n  RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell hAC (by simp) h\r\n```",
                    "createdAt": "2025-02-24T07:51:33Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QI6s",
                    "body": "```suggestion\r\n  simpa using RelCWComplex.cellFrontier_subset_finite_openCell n i\r\n```",
                    "createdAt": "2025-02-24T08:00:35Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QQpT",
                    "body": "I'm generally in favour of golfing less interesting parts of proofs, especially when they boil down to just bookkeeping, but of course it does come at the cost of clarity of what exactly is going on at each step; feel free to ignore this suggestion if you want.\r\n```suggestion\r\n      refine .imp_right (fun ‚ü®k, hkl, i, hi, hxi‚ü© ‚Ü¶ ‚ü®k, lt_trans hkl hln, i, ?_, hxi‚ü©) hp\r\n      simp only [Nat.succ_eq_add_one, Finset.mem_union, Finset.mem_biUnion, Finset.mem_range, I]\r\n      exact .inr ‚ü®l, hln, j, hj, by simp [Nat.le_of_lt_succ hln, hi]‚ü©\r\n```",
                    "createdAt": "2025-02-24T08:30:07Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51TpsP",
                    "body": "That's interesting - I would've though that changing the inequality in `iUnion_skeleton_eq_skeleton` from `m < n + 1` to `m ‚â§ n` would make the proofs cleaner everywhere, but apparently that isn't so, because you still get `n + 1` creeping in from e.g. the definition of `skeleton`. At least this particular proof can be golfed though.\r\n```suggestion\r\n      rw [Nat.cast_add_one] at hin\r\n      exact Order.le_of_lt_add_one <| (ENat.add_one_le_iff <| by simp).1 hin\r\n```",
                    "createdAt": "2025-02-24T17:17:56Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51UIXa",
                    "body": "Why is `n` explicit in `cellFrontier`? It can be inferred from the type of `j` already.\n\nI guess I let this slip through in the previous PR sorry üòê",
                    "createdAt": "2025-02-24T18:35:00Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c519fMo",
                    "body": "I'm not sure actually. But it is consistent with `map`, `openCell`, `closedCell` and in general basically all properties in the definition. So maybe there was a reason for this? @fpvandoorn, do you know if this was intentional?",
                    "createdAt": "2025-03-04T09:53:53Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51-8Tk",
                    "body": "This is me just being conservative in making arguments implicit. Yael is right that in the abstract case `n` can always be inferred from the type of `j`. But in concrete CW-complexes, you might have\r\n\r\n```lean\r\ndef myCell (C) : Nat -> Type \r\n| 0 => Nat\r\n| 1 => Nat\r\n| 2 => Empty\r\n```\r\nand if you are expected to provide `j : myCell C ?n` and you give `j : Nat`, there is no way - even in principle - to figure out what `?n` is supposed to be.\r\n\r\nI'm not wedded to having `n` explicit, but I think it will sometimes be useful.",
                    "createdAt": "2025-03-04T13:28:12Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52AQAB",
                    "body": "That's reasonable justification, yes. Worth recording it as a comment somewhere",
                    "createdAt": "2025-03-04T16:13:56Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52AYSf",
                    "body": "I'll add it to the implementation notes",
                    "createdAt": "2025-03-04T16:31:43Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51UTd8",
                    "body": "Sorry, not at a computer right now (nor any time soon) but is `D` out-param in `RelCWComplex`? If not,\n```suggestion\nvariable (D) in\nlemma RelCWComplex.isClosed [T2Space X] [RelCWComplex C D] : IsClosed C := by\n```\n",
                    "createdAt": "2025-02-24T19:07:42Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c519agB",
                    "body": "Yes, D is out-param",
                    "createdAt": "2025-03-04T09:44:34Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51UUGV",
                    "body": "```suggestion\n/-- The contrapositive of `disjoint_openCell_of_ne`. -/\n```\nI believe?",
                    "createdAt": "2025-02-24T19:09:14Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51UUx4",
                    "body": "```suggestion\nlemma RelCWComplex.,disjoint_base_iUnion_openCell [RelCWComplex C D] :\n    Disjoint D (‚ãÉ (n : ‚Ñï) (j : cell C n), openCell n j) := by\n```\n",
                    "createdAt": "2025-02-24T19:11:11Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51UU2f",
                    "body": "same and again below ",
                    "createdAt": "2025-02-24T19:11:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51UVWf",
                    "body": "```suggestion\n`A` is closed. -/\n```\nDon't indent docstrings. Same everywhere else ",
                    "createdAt": "2025-02-24T19:12:58Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51_Dwv",
                    "body": "This is a general property of monotone functions. Can you replace `skeletonLT` by a general monotone function in this lemma, then move it earlier? (the lemma might already exist, but I didn't find it with a quick search). Also generalise away from `Nat`. See `biSup_le_eq_iSup` for inspiration",
                    "createdAt": "2025-03-04T13:44:23Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52ANyO",
                    "body": "Thank you for the suggestion! I will create a separate PR since this does not have anything to do with CW complexes anymore. ",
                    "createdAt": "2025-03-04T16:09:04Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51_IOz",
                    "body": "When is this not an iff?",
                    "createdAt": "2025-03-04T13:50:29Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52ANL9",
                    "body": "You're right, it always is. I have changed the relevant lemmas to be equivalences.",
                    "createdAt": "2025-03-04T16:07:28Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52AO90",
                    "body": "```suggestion\r\n      ‚àÉ (m : ‚Ñï) (_ : m ‚â§ n) (j : cell C m), x ‚àà openCell m j := by\r\n```\r\nor maybe it even fits on a line?",
                    "createdAt": "2025-03-04T16:11:50Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52AdsM",
                    "body": "```suggestion\r\nlemma RelCWComplex.skeleton_succ_eq_skeleton_union_iUnion√ß_closedCell [RelCWComplex C D] (n : ‚Ñï) :\r\n```\r\nfor consistency with your lemma above",
                    "createdAt": "2025-03-04T16:43:04Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52AedG",
                    "body": "Name is wrong",
                    "createdAt": "2025-03-04T16:44:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52Ae0t",
                    "body": "```suggestion\r\nlemma RelCWComplex.complex_eq_union_iUnion_openCell [RelCWComplex C D] :\r\n    C = D ‚à™ ‚ãÉ (n : ‚Ñï) (j : cell C n), openCell n j := by\r\n```\r\nfor consistency with your lemmas above",
                    "createdAt": "2025-03-04T16:44:50Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52AfHZ",
                    "body": "```suggestion\r\n  contrapose! h\r\n```",
                    "createdAt": "2025-03-04T16:45:23Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52AgNH",
                    "body": "These lemmas are inconsistent as to whether the union is on the LHS or RHS. Can you make sure they all agree, one way or the other?\r\n\r\nHint: The LHS of a lemma is supposed to be more complicated than its RHS, and I would think the side with the unions is the more complicated one",
                    "createdAt": "2025-03-04T16:47:51Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52AoeI",
                    "body": "Some of these were changed during the review process of this PR making the RHS the complicated one. The reasoning was that these lemmas are mostly used to expand rather than to simplify. Should I change them back then?",
                    "createdAt": "2025-03-04T17:06:58Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52Arvs",
                    "body": "Hmm, can you link to the relevant conversations?",
                    "createdAt": "2025-03-04T17:15:58Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52Av09",
                    "body": "Here: https://github.com/leanprover-community/mathlib4/pull/20287#pullrequestreview-2636056976",
                    "createdAt": "2025-03-04T17:26:43Z",
                    "author": {
                      "login": "scholzhannah"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52A3Ki",
                    "body": "I understand Ben's point of view but I think consistency is more valuable than ease of rewriting here",
                    "createdAt": "2025-03-04T17:48:29Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52AgVX",
                    "body": "You haven't switched to using `Disjoint` here",
                    "createdAt": "2025-03-04T16:48:12Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcwMDcxMzQ1",
              "login": "scholzhannah"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjQzODEyOTUz",
              "login": "peabrainiac"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmpqA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363770/job/38186625448"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BsdyQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659393624/job/38186720713"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5C1lWw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659758582/job/38187918683"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmsNA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364112/job/38186626100"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BsdtQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659393629/job/38186720693"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5C1lQw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659758563/job/38187918659"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmsSg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364102/job/38186626122"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5Bsddw",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659393627/job/38186720631"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5C1nug",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659758556/job/38187919290"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5Bmpqw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363767/job/38186625451"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmtDA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364127/job/38186626316"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmrZw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363770/job/38186625895"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5Bmq9g",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363767/job/38186625782"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmuQQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659364127/job/38186626625"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BmtJw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363770/job/38186626343"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5CHEmg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13659363767/job/38187156634"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5Bm9Yg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38186630498"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI5BoYhg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20287&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: additional basic lemmas about CW complexes",
        "updatedAt": "2025-03-04T17:48:29Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20287",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAOsam96",
              "createdAt": "2024-12-28T13:45:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Y2I-M",
              "createdAt": "2024-12-28T13:45:48Z",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #19760. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "author": {
                "login": "mergify"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Y2I-8",
              "createdAt": "2024-12-28T13:45:59Z",
              "body": "### PR summary [3003fb9949](https://github.com/leanprover-community/mathlib4/pull/20287/commits/3003fb99494cabd3500656cfb4cba97215cd43cb)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CWComplex.cellFrontier_subset_finite_openCell`\n`+ CWComplex.complex_eq_iUnion_openCell`\n`+ CWComplex.exists_mem_openCell_of_mem_skeleton`\n`+ CWComplex.iUnion_openCell_eq_skeleton`\n`+ CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell`\n`+ CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell`\n`+ CWComplex.mem_skeletonLT_iff`\n`+ CWComplex.skeletonLT_eq_iUnion_openCell`\n`+ RelCWComplex.cellFrontier_subset_complex`\n`+ RelCWComplex.cellFrontier_subset_finite_openCell`\n`+ RelCWComplex.complex_eq_union_iUnion_openCell`\n`+ RelCWComplex.disjoint_base_iUnion_openCell`\n`+ RelCWComplex.disjoint_interior_base_closedCell`\n`+ RelCWComplex.disjoint_interior_base_iUnion_closedCell`\n`+ RelCWComplex.disjoint_skeletonLT_openCell`\n`+ RelCWComplex.disjoint_skeleton_openCell`\n`+ RelCWComplex.eq_cell_of_not_disjoint`\n`+ RelCWComplex.isClosed`\n`+ RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell`\n`+ RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell`\n`+ RelCWComplex.mem_skeletonLT_iff`\n`+ RelCWComplex.mem_skeleton_iff`\n`+ RelCWComplex.skeletonLT_eq_iUnion_openCell`\n`+ RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier`\n`+ RelCWComplex.skeletonLT_monotone`\n`+ RelCWComplex.skeletonLT_succ_eq_skeletonLT_union_iUnion_closedCell`\n`+ RelCWComplex.skeleton_eq_iUnion_openCell`\n`+ RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier`\n`+ RelCWComplex.skeleton_monotone`\n`+ RelCWComplex.skeleton_succ_eq_skeleton_union_iUnion_closedCell`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAOsanIb",
              "createdAt": "2024-12-28T13:46:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAOsanU8",
              "createdAt": "2024-12-28T13:46:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAOsaot-",
              "createdAt": "2024-12-28T13:50:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZQ0Uw",
              "createdAt": "2025-01-04T14:41:28Z",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #19760. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "author": {
                "login": "mergify"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6knKCezwAAAAOusvQU",
              "createdAt": "2025-01-04T17:10:32Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAPHu8jl",
              "createdAt": "2025-02-08T16:03:07Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ds9R8",
              "createdAt": "2025-02-08T16:03:08Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19760~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAPHvEOG",
              "createdAt": "2025-02-08T16:14:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6245d9874a7492263f03974472557b2a4c2efc7d"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6knKCezwAAAAPQqTlp",
              "createdAt": "2025-02-20T16:34:31Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAPQqWn7",
              "createdAt": "2025-02-20T16:35:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAPQqZTm",
              "createdAt": "2025-02-20T16:35:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAPQrB5f",
              "createdAt": "2025-02-20T16:42:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dHwmQ",
              "createdAt": "2025-02-24T05:53:22Z",
              "body": "I've gone ahead and left a few comments, mostly suggesting different tactics, stylistic changes and ways the code can be golfed; feel free to ignore the ones you disagree with, I know opinions can differ.\r\n\r\nI'm also wondering whether it might make sense to swap the left and right hand sides of lemmas like `iUnion_openCell_eq_skeletonLT`, `iUnion_openCell_eq_skeleton` and `iUnion_openCell` (which should maybe be `iUnion_openCell_eq_complex`) - using them to expand out `skeleton` or `skeletonLT` will probably a lot more common than having the current left hand side appear somewhere and using the lemma to simplify it. You can already see within this PR that they are mostly used in that direction.\r\n\r\nOther than that though, this looks good to me - the lemmas are well-documented, well-named, and mathematically meaningful. It would probably be good to also have a more experienced reviewer take a look, but personally I would be happy to see this in mathlib.",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAPTJgmZ",
              "createdAt": "2025-02-24T09:18:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8aa66532875f3eb6e2df71ed17c115e77e051976"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6frcf_",
              "createdAt": "2025-02-24T16:14:33Z",
              "body": "Thank you for your review! I learned a lot about how to make my code nicer.\r\n\r\n> I'm also wondering whether it might make sense to swap the left and right hand sides of lemmas like `iUnion_openCell_eq_skeletonLT`, `iUnion_openCell_eq_skeleton` and `iUnion_openCell` (which should maybe be `iUnion_openCell_eq_complex`) - using them to expand out `skeleton` or `skeletonLT` will probably a lot more common than having the current left hand side appear somewhere and using the lemma to simplify it. You can already see within this PR that they are mostly used in that direction.\r\n\r\nYes, you are absolutely right. I have changed that.",
              "author": {
                "login": "scholzhannah"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4ef90d13f240ad20bbf1312dafea9c5f743eaf3f"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAPTkP0z",
              "createdAt": "2025-02-24T16:35:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAPTkP09",
              "createdAt": "2025-02-24T16:35:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAPTkvSX",
              "createdAt": "2025-02-24T16:44:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dOwMy",
              "createdAt": "2025-02-24T17:17:56Z",
              "body": "",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fsRfH",
              "createdAt": "2025-02-24T17:32:40Z",
              "body": "That one additional comment aside, this now looks good to me - thanks for taking the time to put together this PR. @YaelDillies, would you mind also taking a quick look?",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dPgv6",
              "createdAt": "2025-02-24T18:35:00Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAPTsZFP",
              "createdAt": "2025-02-24T19:13:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "438deb4746b47076e1959d1b9fa8da5166c07ec8"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6knKCezwAAAAPasqp7",
              "createdAt": "2025-03-04T09:55:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eZzms",
              "createdAt": "2025-03-04T13:44:23Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6bfa7eb2b9cd21173f72b7c2d01c9da94fe8a7dc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e3bd823baef49dcedd0d5a0d8feee22ced634e97"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ecHkc",
              "createdAt": "2025-03-04T16:11:50Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "862fe4f0d14c25d154f895306170c5e53667a771"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5c8d8b2b3b7a89e1d2d72de99835cf8328758534"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ecikL",
              "createdAt": "2025-03-04T16:43:03Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6knKCezwAAAAPbdm5H",
              "createdAt": "2025-03-04T16:48:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3003fb99494cabd3500656cfb4cba97215cd43cb"
              }
            }
          ]
        }
      }
    }
  }
}
