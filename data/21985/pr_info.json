{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 64,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "FernandoChu"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Adds a `isPreFibered` instance for the Grothendieck construction.\r\n\r\nCo-authored-by: Christian Merten <c.j.merten@uu.nl>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6etoIH",
              "body": "### PR summary [c1f38084ea](https://github.com/leanprover-community/mathlib4/pull/21985/commits/c1f38084eab9cce23fd79a32d22290fa09ce712d)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +2.09% | `Mathlib.CategoryTheory.Bicategory.Grothendieck` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Bicategory.Grothendieck | 335 | 342 | +7 (+2.09%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Bicategory.Grothendieck`|7|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ cartesianLift`\n`+ cartesianLift_isHomLift`\n`+ domain_cartesianLift`\n`+ isPreFibered`\n`+ mapComp_congr`\n`+ map_cartesianLift`\n`+ map_cartesianLift_isHomLift`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-17T10:59:20Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c1f38084eab9cce23fd79a32d22290fa09ce712d",
                "additions": 64,
                "deletions": 0,
                "committedDate": "2025-02-17T10:49:04Z",
                "author": {
                  "name": "fernando",
                  "email": "17756312+FernandoChu@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSMYSg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513278/job/37331605578"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSrqAA",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669092/job/37332118016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy9fvaA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520863695/job/37779664744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy9eyTw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520857991/job/37779649103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSrnpw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669080/job/37332117415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSrn2w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669122/job/37332117467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy9ewtw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520857982/job/37779648695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSrnuA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669100/job/37332117432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy9evQw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520857975/job/37779648323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSStHg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513282/job/37331709214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSSrQA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513282/job/37331708736"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSMZ3w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513278/job/37331605983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSroVQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669092/job/37332117589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSMbKQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513278/job/37331606313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSnQ-A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513282/job/37332046072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsSr_IQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37332123425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIsStokQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21985&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-17T10:58:22Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Functor/Pseudofunctor.lean",
              "additions": 12,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Grothendieck.lean",
              "additions": 52,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ggc",
        "headRefOid": "c1f38084eab9cce23fd79a32d22290fa09ce712d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LcO0N",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dX926",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2025-02-25T12:08:59Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21985,
        "potentialMergeCommit": {
          "oid": "f1d783eb04de4d2e01c01b81bfe6dd7c74377f22"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dX926",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2025-02-25T12:08:59Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Yiam",
                    "body": "This should go after `mapComp_id_right_inv`, then you can also drop the variable lines and the `section`.",
                    "createdAt": "2025-02-25T09:32:32Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Yj6T",
                    "body": "This should be camelCase since its type is not a `Prop`.",
                    "createdAt": "2025-02-25T09:36:05Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51YlB6",
                    "body": "```suggestion\r\n@[simps]\r\ndef domainCartesianLift : ∫ F :=\r\n  ⟨b, (F.map f.op.toLoc).obj a.fiber⟩\r\n```",
                    "createdAt": "2025-02-25T09:38:32Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51YkyC",
                    "body": "```suggestion\r\n@[simps]\r\ndef mapCartesianLift {a' : ∫ F} (g : a' ⟶ a) [(forget F).IsHomLift f g] :\r\n    a' ⟶ domain_cartesianLift F f := by\r\n```",
                    "createdAt": "2025-02-25T09:38:01Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51Ynnq",
                    "body": "Or maybe `toCartesianLift`?",
                    "createdAt": "2025-02-25T09:44:31Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Ylhk",
                    "body": "```suggestion\r\nlemma isHomLift_mapCartesianLift {a' : ∫ F} (g : a' ⟶ a) [inst : (forget F).IsHomLift f g] :\r\n    (forget F).IsHomLift (𝟙 b) (map_cartesianLift F f g) := by\r\n```",
                    "createdAt": "2025-02-25T09:39:42Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Ym8b",
                    "body": "```suggestion\r\nlemma isHomLift_cartesianLift :\r\n    IsHomLift (forget F) f (cartesianLift F f) := by\r\n```",
                    "createdAt": "2025-02-25T09:43:00Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51YnZO",
                    "body": "```suggestion\r\n  ⟨IsHomLiftAux.map (p := forget F) (a := domain_cartesianLift F f) ⟨f, 𝟙 _⟩⟩\r\n```",
                    "createdAt": "2025-02-25T09:43:59Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Ys6a",
                    "body": "```suggestion\r\n@[simps]\r\ndef cartesianLift : domain_cartesianLift F f ⟶ a :=\r\n  ⟨f, 𝟙 _⟩\r\n```",
                    "createdAt": "2025-02-25T09:54:25Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51ZjUm",
                    "body": "```suggestion\r\n    a' ⟶ domain_cartesianLift F f where\r\n  base := eqToHom <| IsHomLift.domain_eq (forget F) f g\r\n  fiber :=\r\n    have : g.base = eqToHom _ ≫ f := by simpa using IsHomLift.fac' (forget F) f g\r\n    g.fiber ≫ ((eqToIso (congrArg (fun u ↦ F.map u.op.toLoc) this)).app a.fiber).hom ≫\r\n      ((F.mapComp f.op.toLoc _).app _).hom\r\n```",
                    "createdAt": "2025-02-25T12:02:43Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51ZjaH",
                    "body": "Generally, we try to avoid constructing data using tactics.",
                    "createdAt": "2025-02-25T12:02:59Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51ZlNs",
                    "body": "```suggestion\r\n  refine ⟨fun {a b} f ↦ ⟨domain_cartesianLift F f, cartesianLift F f, ?_⟩⟩\r\n  refine {cond := (cartesianLift_isHomLift F f).cond, universal_property := ?_}\r\n  intro a' g hfg\r\n  refine ⟨map_cartesianLift F f g, ?_⟩\r\n  simp only [categoryStruct_Hom, and_imp, map_cartesianLift, cartesianLift]\r\n  refine ⟨⟨map_cartesianLift_isHomLift _ _ _, ?_⟩, ?_⟩\r\n  · exact Hom.ext _ _ (by simpa using (IsHomLift.fac' (forget F) f g).symm) (by simp)\r\n  · rintro H K rfl\r\n    apply Hom.ext\r\n    · have := by simpa using IsHomLift.fac' (forget F) (𝟙 b) H\r\n      simp [F.mapComp_congr rfl (congrArg (fun u ↦ u.op.toLoc) this)]\r\n    · simpa using IsHomLift.fac' (forget F) (𝟙 b) H\r\n```",
                    "createdAt": "2025-02-25T12:08:38Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE3NzU2MzEy",
              "login": "FernandoChu"
            },
            {
              "id": "U_kgDOCB8vYg",
              "login": "chrisflav"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSMYSg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513278/job/37331605578"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSrqAA",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669092/job/37332118016"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy9fvaA",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520863695/job/37779664744"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy9eyTw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520857991/job/37779649103"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSrnpw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669080/job/37332117415"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSrn2w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669122/job/37332117467"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy9ewtw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520857982/job/37779648695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSrnuA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669100/job/37332117432"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy9evQw",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13520857975/job/37779648323"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSStHg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513282/job/37331709214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSSrQA",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513282/job/37331708736"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSMZ3w",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513278/job/37331605983"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSroVQ",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368669092/job/37332117589"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSMbKQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513278/job/37331606313"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSnQ-A",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13368513282/job/37332046072"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsSr_IQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37332123425"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIsStokQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21985&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory): the Grothendieck construction is prefibered",
        "updatedAt": "2025-02-25T12:09:18Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21985",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1f38084eab9cce23fd79a32d22290fa09ce712d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qUfREzwAAAAPNcbvP",
              "createdAt": "2025-02-17T10:58:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qUfREzwAAAAPNceCL",
              "createdAt": "2025-02-17T10:59:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6etoIH",
              "createdAt": "2025-02-17T10:59:20Z",
              "body": "### PR summary [c1f38084ea](https://github.com/leanprover-community/mathlib4/pull/21985/commits/c1f38084eab9cce23fd79a32d22290fa09ce712d)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +2.09% | `Mathlib.CategoryTheory.Bicategory.Grothendieck` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Bicategory.Grothendieck | 335 | 342 | +7 (+2.09%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Bicategory.Grothendieck`|7|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ cartesianLift`\n`+ cartesianLift_isHomLift`\n`+ domain_cartesianLift`\n`+ isPreFibered`\n`+ mapComp_congr`\n`+ map_cartesianLift`\n`+ map_cartesianLift_isHomLift`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qUfREzwAAAAPNcexd",
              "createdAt": "2025-02-17T10:59:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dX926",
              "createdAt": "2025-02-25T09:32:32Z",
              "body": "",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qUfREzwAAAAPU7Ki-",
              "createdAt": "2025-02-25T12:09:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            }
          ]
        }
      }
    }
  }
}
