{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 128,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mkaratarakis"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-09-19T12:54:39Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5i89Iu",
              "body": "I'd suggest that once #5717 is merged that we put this tactic in the DefeqTransformations file and use the `runDefeqTactic` function to run it, like the other tactics there. That means you don't have to reinvent how to run an expression-transformation tactic, and you get `clean at h` and `clean at *` for free.",
              "createdAt": "2023-08-01T11:43:59Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k8Yus",
              "body": "Ah, I really misunderstood what this tactic was about. Now I understand that `clean t` is like `exact t` but removes type hints from `t`, so my suggestion to use the defeq transformations framework doesn't make sense.\r\n\r\n@digama0 You write the original version of `clean`. It looks like it was only ever used in a single place in mathlib -- is it still useful? Should we turn it into a `cleanHints%` term elaborator instead? That way you can write stuff like `let x := cleanHints% by ...` or `exact cleanHints% by ...`. Or maybe it could be a `classical`-like tactic that takes a tactic sequence instead of a term?",
              "createdAt": "2023-08-25T15:34:42Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k8ZmX",
              "body": "I think it would make sense as a term elaborator.",
              "createdAt": "2023-08-25T15:37:32Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5m194x",
              "body": "bors merge",
              "createdAt": "2023-09-19T12:32:36Z",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5m2GtI",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6235611775/job/16925178118)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6235611775/job/16925178363)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6235611775/job/16925177583)",
              "createdAt": "2023-09-19T12:54:38Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "4fd21a03625e34fec99c7c684f65bcb310bb6d4e",
                "additions": 70,
                "deletions": 0,
                "committedDate": "2023-07-14T08:58:43Z",
                "author": {
                  "name": "Michail Karatarakis",
                  "email": "mixkarat@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a2c7486783f0887a397ad686965177235da5d8d3",
                "additions": 72187,
                "deletions": 46721,
                "committedDate": "2023-08-25T14:12:40Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c4d9ecc6a33cdad34df7bbe728c15468bee72796",
                "additions": 45,
                "deletions": 34,
                "committedDate": "2023-08-25T15:29:00Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1c91e53bee68c174c178aabec0609ee2591fbebd",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-08-25T15:31:32Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1410a31e9d5007099d4b02b3eaecbb95a36937f2",
                "additions": 66,
                "deletions": 26,
                "committedDate": "2023-08-27T13:15:09Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c10470dc100af8602d685cbb75b872ae0cdb71f6",
                "additions": 1612,
                "deletions": 964,
                "committedDate": "2023-08-27T13:15:28Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5887a942b8ee0a43a45e4000909c1198b133aa87",
                "additions": 7,
                "deletions": 3,
                "committedDate": "2023-08-27T13:22:23Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ef5651783c679f14a7ef0bf6f73e08b91ef87aaf",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-27T19:06:33Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-14T18:26:45Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Mathport/Syntax.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Clean.lean",
              "additions": 71,
              "deletions": 0
            },
            {
              "path": "test/Clean.lean",
              "additions": 54,
              "deletions": 0
            }
          ]
        },
        "headRefName": "clean",
        "headRefOid": "ef5651783c679f14a7ef0bf6f73e08b91ef87aaf",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Vi048",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fMvyg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-08-27T19:06:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bSQJA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-07-15T16:05:45Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5909,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5bSQJA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-07-15T16:05:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fMvyg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-08-27T19:06:27Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LXota",
                    "body": "```suggestion\r\norder to retain the type.\r\n```",
                    "createdAt": "2023-07-15T16:05:45Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5N4ssm",
                    "body": "```suggestion\r\n  [``id]\r\n```\r\n`Id` takes only one argument, not two",
                    "createdAt": "2023-08-27T19:06:27Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQwNjAzMzU3",
              "login": "mkaratarakis"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjE0MDYwODgz",
              "login": "PatrickMassot"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - port the clean tactic from lean 3 to lean 4",
        "updatedAt": "2023-09-19T12:54:43Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5909",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4fd21a03625e34fec99c7c684f65bcb310bb6d4e"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rmyHozwAAAAJJlffJ",
              "createdAt": "2023-07-14T18:27:51Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Nh-DW",
              "createdAt": "2023-07-15T04:32:13Z",
              "source": {
                "id": "I_kwDOFcwZ1c5SLg7U",
                "title": "tactic porting tracking issue",
                "url": "https://github.com/leanprover-community/mathlib4/issues/430"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5bSQJA",
              "createdAt": "2023-07-15T16:05:45Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i89Iu",
              "createdAt": "2023-08-01T11:43:59Z",
              "body": "I'd suggest that once #5717 is merged that we put this tactic in the DefeqTransformations file and use the `runDefeqTactic` function to run it, like the other tactics there. That means you don't have to reinvent how to run an expression-transformation tactic, and you get `clean at h` and `clean at *` for free.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NxInW",
              "createdAt": "2023-08-01T11:46:43Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5U0pnB",
                "title": "feat: a tactic to consume type annotations, and make constructor nicer",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5745"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rmyHozwAAAAJVBYrb",
              "createdAt": "2023-08-06T01:21:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a2c7486783f0887a397ad686965177235da5d8d3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c4d9ecc6a33cdad34df7bbe728c15468bee72796"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1c91e53bee68c174c178aabec0609ee2591fbebd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k8Yus",
              "createdAt": "2023-08-25T15:34:42Z",
              "body": "Ah, I really misunderstood what this tactic was about. Now I understand that `clean t` is like `exact t` but removes type hints from `t`, so my suggestion to use the defeq transformations framework doesn't make sense.\r\n\r\n@digama0 You write the original version of `clean`. It looks like it was only ever used in a single place in mathlib -- is it still useful? Should we turn it into a `cleanHints%` term elaborator instead? That way you can write stuff like `let x := cleanHints% by ...` or `exact cleanHints% by ...`. Or maybe it could be a `classical`-like tactic that takes a tactic sequence instead of a term?",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k8ZmX",
              "createdAt": "2023-08-25T15:37:32Z",
              "body": "I think it would make sense as a term elaborator.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1410a31e9d5007099d4b02b3eaecbb95a36937f2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c10470dc100af8602d685cbb75b872ae0cdb71f6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5887a942b8ee0a43a45e4000909c1198b133aa87"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rmyHozwAAAAJgE6oU",
              "createdAt": "2023-08-27T13:24:35Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rmyHozwAAAAJgE6oV",
              "createdAt": "2023-08-27T13:24:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fMvyg",
              "createdAt": "2023-08-27T19:06:26Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef5651783c679f14a7ef0bf6f73e08b91ef87aaf"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m194x",
              "createdAt": "2023-09-19T12:32:36Z",
              "body": "bors merge",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rmyHozwAAAAJse6gh",
              "createdAt": "2023-09-19T12:32:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rmyHozwAAAAJse6ku",
              "createdAt": "2023-09-19T12:32:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m2GtI",
              "createdAt": "2023-09-19T12:54:38Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6235611775/job/16925178118)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6235611775/job/16925178363)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6235611775/job/16925177583)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5rmyHozwAAAAJsf4Eg",
              "createdAt": "2023-09-19T12:54:39Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5rmyHozwAAAAJsf4PL",
              "createdAt": "2023-09-19T12:54:43Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
