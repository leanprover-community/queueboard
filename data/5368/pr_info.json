{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 236,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "urkud"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Based on [this](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Action.20on.20functions) discussion on Zulip\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-06-23T10:52:25Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ffvlC",
              "body": "> LGTM. Except I can't bors it because I can't read the `run_cmd` bit.\r\n\r\nI borrowed it from `Data.UInt`. It runs the `instance` line for each name in the list.",
              "createdAt": "2023-06-22T07:36:05Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5fmxAq",
              "body": "bors r+\r\nThanks!",
              "createdAt": "2023-06-23T09:24:19Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5fnK4T",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5354982511/jobs/9712695421)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5354982511/jobs/9712695279)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5354982511/jobs/9712695170)",
              "createdAt": "2023-06-23T10:52:23Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a87173da994619e90b506aff16fcbd7776620064",
                "additions": 195,
                "deletions": 0,
                "committedDate": "2023-06-22T06:46:01Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "60619806b18c433048f39b5152c1202191d40588",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-06-22T06:46:58Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ef4a8cddb08e6f45a41ecbb934b940f770b9a915",
                "additions": 34,
                "deletions": 10,
                "committedDate": "2023-06-22T07:05:32Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3478e89f2763c05ba39fd6a8aa891b1de6cd53fc",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-06-22T07:26:22Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "db1a624b090cc02f5387a49e704d890a359e8d97",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-06-22T07:33:15Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4916834387e2183b8fb8b59734b4be6b282add32",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-06-22T07:43:48Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dda71a8f6ea682e23fca17a4cdeddbf1efae67cc",
                "additions": 10,
                "deletions": 0,
                "committedDate": "2023-06-22T16:55:41Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5bacdce6b6df2539b55d2957ae2198e1e3eab9dd",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-06-22T16:56:35Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ba2a2f71b978b55ea6bb80fd5ebf01c624509058",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-06-22T17:02:22Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-06-22T07:06:34Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/GroupTheory/GroupAction/DomAct/Basic.lean",
              "additions": 235,
              "deletions": 0
            }
          ]
        },
        "headRefName": "YK-domact",
        "headRefOid": "ba2a2f71b978b55ea6bb80fd5ebf01c624509058",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Tn7xN",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5Y-wzb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-06-22T10:04:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5Y9j0R",
              "body": "LGTM. Except I can't bors it because I can't read the `run_cmd` bit.\r\n\r\nOne question though: when we have a group acting on the left on `X`, then it acts on the left on functions from `X` to `Y` by `(c • f) a = f (c^{-1} • a)`. How would this action be spellt in your language? As this is an action that shows up all the time, it may be worth mentioning somewhere in the file-level docstring.",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-06-22T07:26:35Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5368,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5Y9j0R",
              "body": "LGTM. Except I can't bors it because I can't read the `run_cmd` bit.\r\n\r\nOne question though: when we have a group acting on the left on `X`, then it acts on the left on functions from `X` to `Y` by `(c • f) a = f (c^{-1} • a)`. How would this action be spellt in your language? As this is an action that shows up all the time, it may be worth mentioning somewhere in the file-level docstring.",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-06-22T07:26:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5Y9qHn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2023-06-22T07:33:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5Y9sPy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2023-06-22T07:38:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5Y-oPo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-06-22T09:48:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5Y-r_3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2023-06-22T09:54:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5Y-wzb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-06-22T10:04:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZBwdA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2023-06-22T16:48:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZBz2R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2023-06-22T16:57:32Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JzAMN",
                    "body": "```suggestion\r\n(a.k.a. ambiguous notation): if `M` is a monoid, then how does `Mᵐᵒᵖ` act on `M → M`? On the one\r\n```",
                    "createdAt": "2023-06-22T07:19:10Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JzD_P",
                    "body": "Unfortunately, the answer is: I don't know, unless you introduce yet another type synonym for \"inv action\". Then `DomMulAction (InvAction M)` will act as you write.\r\n\r\nI think that in many cases these left and right actions are very similar and it should not be difficult to rewrite lemmas in terms of this action which is more general because it doesn't require the group structure.",
                    "createdAt": "2023-06-22T07:33:05Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JzFXk",
                    "body": "I mean, the short answer is: write `DomMulAct.mk c⁻¹ • f`. Otherwise, these two actions have the same orbits etc.",
                    "createdAt": "2023-06-22T07:38:34Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5J1pso",
                    "body": "@sgouezel I added a paragraph about left/right action. Could you please have a look?",
                    "createdAt": "2023-06-22T16:57:31Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JzrUE",
                    "body": "I'm curious if there's a hygienic way to do this.",
                    "createdAt": "2023-06-22T09:48:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Jzs3N",
                    "body": "If this is the only reason not to merge this PR, then I can replace this macro with N lines it unfolds to.",
                    "createdAt": "2023-06-22T09:54:00Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JzwfI",
                    "body": "I think this is a nice trick; I'm just curious about what makes it unhygienic.",
                    "createdAt": "2023-06-22T10:04:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5J1naQ",
                    "body": "Should we merge it then? UPD: I'll add a paragraph about left action.",
                    "createdAt": "2023-06-22T16:48:04Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: define a type synonym for right action on the domain of a function",
        "updatedAt": "2023-06-23T10:52:30Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5368",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a87173da994619e90b506aff16fcbd7776620064"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "60619806b18c433048f39b5152c1202191d40588"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef4a8cddb08e6f45a41ecbb934b940f770b9a915"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3478e89f2763c05ba39fd6a8aa891b1de6cd53fc"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5Y9j0R",
              "createdAt": "2023-06-22T07:19:09Z",
              "body": "LGTM. Except I can't bors it because I can't read the `run_cmd` bit.\r\n\r\nOne question though: when we have a group acting on the left on `X`, then it acts on the left on functions from `X` to `Y` by `(c • f) a = f (c^{-1} • a)`. How would this action be spellt in your language? As this is an action that shows up all the time, it may be worth mentioning somewhere in the file-level docstring.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db1a624b090cc02f5387a49e704d890a359e8d97"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ffvlC",
              "createdAt": "2023-06-22T07:36:05Z",
              "body": "> LGTM. Except I can't bors it because I can't read the `run_cmd` bit.\r\n\r\nI borrowed it from `Data.UInt`. It runs the `instance` line for each name in the list.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5pcduHzwAAAAI8ZOdZ",
              "createdAt": "2023-06-22T07:40:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5pcduHzwAAAAI8ZPRg",
              "createdAt": "2023-06-22T07:41:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4916834387e2183b8fb8b59734b4be6b282add32"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NMpjN",
              "createdAt": "2023-06-22T09:43:14Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ToyXV",
                "title": "[Merged by Bors] - feat: actions of `DomMulAct` on `A →[N] B` and `A →+[N] B`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5378"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NMpm5",
              "createdAt": "2023-06-22T09:43:55Z",
              "source": {
                "id": "I_kwDOFcwZ1c5pdbyY",
                "title": "Extend basic API about `DomMulAct`",
                "url": "https://github.com/leanprover-community/mathlib4/issues/5379"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5Y-oPo",
              "createdAt": "2023-06-22T09:48:20Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dda71a8f6ea682e23fca17a4cdeddbf1efae67cc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5bacdce6b6df2539b55d2957ae2198e1e3eab9dd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ba2a2f71b978b55ea6bb80fd5ebf01c624509058"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5fmxAq",
              "createdAt": "2023-06-23T09:24:19Z",
              "body": "bors r+\r\nThanks!",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5pcduHzwAAAAI9Ji62",
              "createdAt": "2023-06-23T09:24:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5pcduHzwAAAAI9Ji8o",
              "createdAt": "2023-06-23T09:24:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5fnK4T",
              "createdAt": "2023-06-23T10:52:23Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5354982511/jobs/9712695421)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5354982511/jobs/9712695279)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5354982511/jobs/9712695170)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5pcduHzwAAAAI9MVYm",
              "createdAt": "2023-06-23T10:52:25Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5pcduHzwAAAAI9MVhV",
              "createdAt": "2023-06-23T10:52:30Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
