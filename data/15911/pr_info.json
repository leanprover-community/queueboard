{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 429,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "jcommelin"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "There are two variants of the concept of weight space,\r\nsimilar to the two concepts of eigenspace and generalized eigenspace.\r\nThis PR renames `weightSpace` to `genWeightSpace`\r\nso that the name `weightSpace` can be reused for the\r\nversion of weight spaces using non-generalized eigenspaces.\r\n\r\nMoves:\r\n- coe_lie_shiftedWeightSpace_apply -> coe_lie_shiftedgenWeightSpace_apply\r\n- coe_weightSpaceOf_zero -> coe_genWeightSpaceOf_zero\r\n- coe_weightSpace_of_top -> coe_genWeightSpace_of_top\r\n- comap_weightSpace_eq_of_injective -> comap_genWeightSpace_eq_of_injective\r\n- disjoint_weightSpace -> disjoint_genWeightSpace\r\n- disjoint_weightSpaceOf -> disjoint_genWeightSpaceOf\r\n- eq_zero_of_mem_weightSpace_mem_posFitting -> eq_zero_of_mem_genWeightSpace_mem_posFitting\r\n- eventually_weightSpace_smul_add_eq_bot -> eventually_genWeightSpace_smul_add_eq_bot\r\n- exists_weightSpace_le_ker_of_isNoetherian -> exists_genWeightSpace_le_ker_of_isNoetherian\r\n- exists_weightSpace_smul_add_eq_bot -> exists_genWeightSpace_smul_add_eq_bot\r\n- exists_weightSpace_zero_le_ker_of_isNoetherian -> exists_genWeightSpace_zero_le_ker_of_isNoetherian\r\n- exists₂_weightSpace_smul_add_eq_bot -> exists₂_genWeightSpace_smul_add_eq_bot\r\n- finite_weightSpaceOf_ne_bot -> finite_genWeightSpaceOf_ne_bot\r\n- finite_weightSpace_ne_bot -> finite_genWeightSpace_ne_bot\r\n- iSup_ucs_eq_weightSpace_zero -> iSup_ucs_eq_genWeightSpace_zero\r\n- iSup_ucs_le_weightSpace_zero -> iSup_ucs_le_genWeightSpace_zero\r\n- iSup_weightSpaceOf_eq_top -> iSup_genWeightSpaceOf_eq_top\r\n- iSup_weightSpace_eq_top -> iSup_genWeightSpace_eq_top\r\n- iSup_weightSpace_eq_top' -> iSup_genWeightSpace_eq_top'\r\n- independent_weightSpace -> independent_genWeightSpace\r\n- independent_weightSpace' -> independent_genWeightSpace'\r\n- independent_weightSpaceOf -> independent_genWeightSpaceOf\r\n- injOn_weightSpace -> injOn_genWeightSpace\r\n- isCompl_weightSpaceOf_zero_posFittingCompOf -> isCompl_genWeightSpaceOf_zero_posFittingCompOf\r\n- isCompl_weightSpace_zero_posFittingComp -> isCompl_genWeightSpace_zero_posFittingComp\r\n- isNilpotent_toEnd_weightSpace_zero -> isNilpotent_toEnd_genWeightSpace_zero\r\n- lie_mem_weightSpaceChain_of_weightSpace_eq_bot_left -> lie_mem_genWeightSpaceChain_of_genWeightSpace_eq_bot_left\r\n- lie_mem_weightSpaceChain_of_weightSpace_eq_bot_right -> lie_mem_genWeightSpaceChain_of_genWeightSpace_eq_bot_right\r\n- lie_mem_weightSpace_of_mem_weightSpace -> lie_mem_genWeightSpace_of_mem_genWeightSpace\r\n- map_weightSpace_eq -> map_genWeightSpace_eq\r\n- map_weightSpace_eq_of_injective -> map_genWeightSpace_eq_of_injective\r\n- map_weightSpace_le -> map_genWeightSpace_le\r\n- mapsTo_toEnd_weightSpace_add_of_mem_rootSpace -> mapsTo_toEnd_genWeightSpace_add_of_mem_rootSpace\r\n- mem_weightSpace -> mem_genWeightSpace\r\n- mem_weightSpaceOf -> mem_genWeightSpaceOf\r\n- rootSpace_comap_eq_weightSpace -> rootSpace_comap_eq_genWeightSpace\r\n- shiftedWeightSpace -> shiftedgenWeightSpace\r\n- traceForm_eq_sum_weightSpaceOf -> traceForm_eq_sum_genWeightSpaceOf\r\n- traceForm_weightSpace_eq -> traceForm_genWeightSpace_eq\r\n- trace_comp_toEnd_weightSpace_eq -> trace_comp_toEnd_genWeightSpace_eq\r\n- trace_toEnd_weightSpace -> trace_toEnd_genWeightSpace\r\n- trace_toEnd_weightSpaceChain_eq_zero -> trace_toEnd_genWeightSpaceChain_eq_zero\r\n- weightSpace -> genWeightSpace\r\n- weightSpaceChain -> genWeightSpaceChain\r\n- weightSpaceChain_def -> genWeightSpaceChain_def\r\n- weightSpaceChain_def' -> genWeightSpaceChain_def'\r\n- weightSpaceChain_neg -> genWeightSpaceChain_neg\r\n- weightSpaceOf -> genWeightSpaceOf\r\n- weightSpaceOf_ne_bot -> genWeightSpaceOf_ne_bot\r\n- weightSpace_add_chainTop -> genWeightSpace_add_chainTop\r\n- weightSpace_chainBotCoeff_sub_one_zsmul_sub -> genWeightSpace_chainBotCoeff_sub_one_zsmul_sub\r\n- weightSpace_chainTopCoeff_add_one_nsmul_add -> genWeightSpace_chainTopCoeff_add_one_nsmul_add\r\n- weightSpace_chainTopCoeff_add_one_zsmul_add -> genWeightSpace_chainTopCoeff_add_one_zsmul_add\r\n- weightSpace_le_weightSpaceChain -> genWeightSpace_le_genWeightSpaceChain\r\n- weightSpace_le_weightSpaceOf -> genWeightSpace_le_genWeightSpaceOf\r\n- weightSpace_ne_bot -> genWeightSpace_ne_bot\r\n- weightSpace_neg_add_chainBot -> genWeightSpace_neg_add_chainBot\r\n- weightSpace_neg_zsmul_add_ne_bot -> genWeightSpace_neg_zsmul_add_ne_bot\r\n- weightSpace_nsmul_add_ne_bot_of_le -> genWeightSpace_nsmul_add_ne_bot_of_le\r\n- weightSpace_weightSpaceOf_map_incl -> genWeightSpace_genWeightSpaceOf_map_incl\r\n- weightSpace_zero_normalizer_eq_self -> genWeightSpace_zero_normalizer_eq_self\r\n- weightSpace_zsmul_add_ne_bot -> genWeightSpace_zsmul_add_ne_bot\r\n- zero_lt_finrank_weightSpace -> zero_lt_finrank_genWeightSpace\r\n- zero_weightSpace_eq_top_of_nilpotent -> zero_genWeightSpace_eq_top_of_nilpotent\r\n- zero_weightSpace_eq_top_of_nilpotent' -> zero_genWeightSpace_eq_top_of_nilpotent'\r\n\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 7,
        "closed": true,
        "closedAt": "2024-08-17T15:13:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6IxcPS",
              "body": "### PR summary [55ac1ebd97](https://github.com/leanprover-community/mathlib4/pull/15911/commits/55ac1ebd978cccf859aa53a111b5384c32da9f65)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ coe_genWeightSpaceOf_zero`\n`+ coe_genWeightSpace_of_top`\n`+ coe_lie_shiftedGenWeightSpace_apply`\n`+ comap_genWeightSpace_eq_of_injective`\n`+ disjoint_genWeightSpace`\n`+ disjoint_genWeightSpaceOf`\n`+ eq_zero_of_mem_genWeightSpace_mem_posFitting`\n`+ eventually_genWeightSpace_smul_add_eq_bot`\n`+ exists_genWeightSpace_le_ker_of_isNoetherian`\n`+ exists_genWeightSpace_smul_add_eq_bot`\n`+ exists_genWeightSpace_zero_le_ker_of_isNoetherian`\n`+ exists₂_genWeightSpace_smul_add_eq_bot`\n`+ finite_genWeightSpaceOf_ne_bot`\n`+ finite_genWeightSpace_ne_bot`\n`+ genWeightSpace`\n`+ genWeightSpaceChain`\n`+ genWeightSpaceChain_def`\n`+ genWeightSpaceChain_def'`\n`+ genWeightSpaceChain_neg`\n`+ genWeightSpaceOf`\n`+ genWeightSpaceOf_ne_bot`\n`+ genWeightSpace_add_chainTop`\n`+ genWeightSpace_chainBotCoeff_sub_one_zsmul_sub`\n`+ genWeightSpace_chainTopCoeff_add_one_nsmul_add`\n`+ genWeightSpace_chainTopCoeff_add_one_zsmul_add`\n`+ genWeightSpace_genWeightSpaceOf_map_incl`\n`+ genWeightSpace_le_genWeightSpaceChain`\n`+ genWeightSpace_le_genWeightSpaceOf`\n`+ genWeightSpace_ne_bot`\n`+ genWeightSpace_neg_add_chainBot`\n`+ genWeightSpace_neg_zsmul_add_ne_bot`\n`+ genWeightSpace_nsmul_add_ne_bot_of_le`\n`+ genWeightSpace_zero_normalizer_eq_self`\n`+ genWeightSpace_zsmul_add_ne_bot`\n`+ iSup_genWeightSpaceOf_eq_top`\n`+ iSup_genWeightSpace_eq_top`\n`+ iSup_genWeightSpace_eq_top'`\n`+ iSup_ucs_eq_genWeightSpace_zero`\n`+ iSup_ucs_le_genWeightSpace_zero`\n`+ independent_genWeightSpace`\n`+ independent_genWeightSpace'`\n`+ independent_genWeightSpaceOf`\n`+ injOn_genWeightSpace`\n`+ instance : LieModule R L (shiftedGenWeightSpace R L M χ)`\n`+ instance : LieRingModule L (shiftedGenWeightSpace R L M χ)`\n`+ instance [IsNoetherian R M] : IsNilpotent R L (shiftedGenWeightSpace R L M χ)`\n`+ instance [Nontrivial (genWeightSpace M (0 : L → R))] : Zero (Weight R L M)`\n`+ instance [Nontrivial H] : Nontrivial (genWeightSpace L (0 : H → R)) := by`\n`+ isCompl_genWeightSpaceOf_zero_posFittingCompOf`\n`+ isCompl_genWeightSpace_zero_posFittingComp`\n`+ isNilpotent_toEnd_genWeightSpace_zero`\n`+ lie_mem_genWeightSpaceChain_of_genWeightSpace_eq_bot_left`\n`+ lie_mem_genWeightSpaceChain_of_genWeightSpace_eq_bot_right`\n`+ lie_mem_genWeightSpace_of_mem_genWeightSpace`\n`+ map_genWeightSpace_eq`\n`+ map_genWeightSpace_eq_of_injective`\n`+ map_genWeightSpace_le`\n`+ mapsTo_toEnd_genWeightSpace_add_of_mem_rootSpace`\n`+ mem_genWeightSpace`\n`+ mem_genWeightSpaceOf`\n`+ rootSpace_comap_eq_genWeightSpace`\n`+ shiftedGenWeightSpace`\n`+ traceForm_eq_sum_genWeightSpaceOf`\n`+ traceForm_genWeightSpace_eq`\n`+ trace_comp_toEnd_genWeightSpace_eq`\n`+ trace_toEnd_genWeightSpace`\n`+ trace_toEnd_genWeightSpaceChain_eq_zero`\n`+ zero_genWeightSpace_eq_top_of_nilpotent`\n`+ zero_genWeightSpace_eq_top_of_nilpotent'`\n`+ zero_lt_finrank_genWeightSpace`\n`- coe_lie_shiftedWeightSpace_apply`\n`- coe_weightSpaceOf_zero`\n`- coe_weightSpace_of_top`\n`- comap_weightSpace_eq_of_injective`\n`- disjoint_weightSpace`\n`- disjoint_weightSpaceOf`\n`- eq_zero_of_mem_weightSpace_mem_posFitting`\n`- eventually_weightSpace_smul_add_eq_bot`\n`- exists_weightSpace_le_ker_of_isNoetherian`\n`- exists_weightSpace_smul_add_eq_bot`\n`- exists_weightSpace_zero_le_ker_of_isNoetherian`\n`- exists₂_weightSpace_smul_add_eq_bot`\n`- finite_weightSpaceOf_ne_bot`\n`- finite_weightSpace_ne_bot`\n`- iSup_ucs_eq_weightSpace_zero`\n`- iSup_ucs_le_weightSpace_zero`\n`- iSup_weightSpaceOf_eq_top`\n`- iSup_weightSpace_eq_top`\n`- iSup_weightSpace_eq_top'`\n`- independent_weightSpace`\n`- independent_weightSpace'`\n`- independent_weightSpaceOf`\n`- injOn_weightSpace`\n`- instance : LieModule R L (shiftedWeightSpace R L M χ)`\n`- instance : LieRingModule L (shiftedWeightSpace R L M χ)`\n`- instance [IsNoetherian R M] : IsNilpotent R L (shiftedWeightSpace R L M χ)`\n`- instance [Nontrivial (weightSpace M (0 : L → R))] : Zero (Weight R L M)`\n`- instance [Nontrivial H] : Nontrivial (weightSpace L (0 : H → R)) := by`\n`- isCompl_weightSpaceOf_zero_posFittingCompOf`\n`- isCompl_weightSpace_zero_posFittingComp`\n`- isNilpotent_toEnd_weightSpace_zero`\n`- lie_mem_weightSpaceChain_of_weightSpace_eq_bot_left`\n`- lie_mem_weightSpaceChain_of_weightSpace_eq_bot_right`\n`- lie_mem_weightSpace_of_mem_weightSpace`\n`- map_weightSpace_eq`\n`- map_weightSpace_eq_of_injective`\n`- map_weightSpace_le`\n`- mapsTo_toEnd_weightSpace_add_of_mem_rootSpace`\n`- mem_weightSpace`\n`- mem_weightSpaceOf`\n`- rootSpace_comap_eq_weightSpace`\n`- shiftedWeightSpace`\n`- traceForm_eq_sum_weightSpaceOf`\n`- traceForm_weightSpace_eq`\n`- trace_comp_toEnd_weightSpace_eq`\n`- trace_toEnd_weightSpace`\n`- trace_toEnd_weightSpaceChain_eq_zero`\n`- weightSpace`\n`- weightSpaceChain`\n`- weightSpaceChain_def`\n`- weightSpaceChain_def'`\n`- weightSpaceChain_neg`\n`- weightSpaceOf`\n`- weightSpaceOf_ne_bot`\n`- weightSpace_add_chainTop`\n`- weightSpace_chainBotCoeff_sub_one_zsmul_sub`\n`- weightSpace_chainTopCoeff_add_one_nsmul_add`\n`- weightSpace_chainTopCoeff_add_one_zsmul_add`\n`- weightSpace_le_weightSpaceChain`\n`- weightSpace_le_weightSpaceOf`\n`- weightSpace_ne_bot`\n`- weightSpace_neg_add_chainBot`\n`- weightSpace_neg_zsmul_add_ne_bot`\n`- weightSpace_nsmul_add_ne_bot_of_le`\n`- weightSpace_weightSpaceOf_map_incl`\n`- weightSpace_zero_normalizer_eq_self`\n`- weightSpace_zsmul_add_ne_bot`\n`- zero_lt_finrank_weightSpace`\n`- zero_weightSpace_eq_top_of_nilpotent`\n`- zero_weightSpace_eq_top_of_nilpotent'`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-17T06:02:12Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IyTOZ",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10433173527/job/28894633178)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10433173527/job/28894633038)",
              "createdAt": "2024-08-17T15:13:32Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "55ac1ebd978cccf859aa53a111b5384c32da9f65",
                "additions": 429,
                "deletions": 418,
                "committedDate": "2024-08-17T05:56:47Z",
                "author": {
                  "name": "Johan Commelin",
                  "email": "johan@commelin.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGukEJWg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10433171317/job/28894628186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34pA",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035362/job/28888135844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGukEJHg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10433171315/job/28894628126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34VA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035364/job/28888135764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34Zw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035361/job/28888135783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud330A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud33dQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGukEJoA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10433171315/job/28894628256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34Tw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34Uw",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035362/job/28888135763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud336A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34DQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135693"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud33qA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud33eQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34Lg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135726"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud34mw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGueDTAw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888322819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud4D3Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28888138717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGud4fkw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15911&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHLuGk-w",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5145",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-17T06:01:32Z",
        "deletions": 418,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Lie/TraceForm.lean",
              "additions": 25,
              "deletions": 24
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Basic.lean",
              "additions": 190,
              "deletions": 184
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Cartan.lean",
              "additions": 28,
              "deletions": 26
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Chain.lean",
              "additions": 100,
              "deletions": 99
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Killing.lean",
              "additions": 16,
              "deletions": 16
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Linear.lean",
              "additions": 55,
              "deletions": 54
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/RootSystem.lean",
              "additions": 15,
              "deletions": 15
            }
          ]
        },
        "headRefName": "jmc-rename-weightspace",
        "headRefOid": "55ac1ebd978cccf859aa53a111b5384c32da9f65",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c54ohkI",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Fwmun",
              "body": "Thanks!\r\n\r\nWe might also want to rename `rootSpace` to `genRootSpace` but this can wait.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2024-08-17T15:01:57Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15911,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Fwmun",
              "body": "Thanks!\r\n\r\nWe might also want to rename `rootSpace` to `genRootSpace` but this can wait.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2024-08-17T15:01:57Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGukEJWg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10433171317/job/28894628186"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34pA",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035362/job/28888135844"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGukEJHg",
                "name": "Add ready-to-merge label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10433171315/job/28894628126"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34VA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035364/job/28888135764"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34Zw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035361/job/28888135783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud330A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135632"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud33dQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135541"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGukEJoA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10433171315/job/28894628256"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34Tw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135759"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34Uw",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035362/job/28888135763"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud336A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135656"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34DQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135693"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud33qA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135592"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud33eQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135545"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34Lg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888135726"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud34mw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035324/job/28888135835"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGueDTAw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10430035323/job/28888322819"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud4D3Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28888138717"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGud4fkw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15911&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHLuGk-w",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5145",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore(Algebra/Lie): rename weightSpace to genWeightspace",
        "updatedAt": "2024-08-17T15:13:35Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15911",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6IxcPS",
              "createdAt": "2024-08-17T06:02:12Z",
              "body": "### PR summary [55ac1ebd97](https://github.com/leanprover-community/mathlib4/pull/15911/commits/55ac1ebd978cccf859aa53a111b5384c32da9f65)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ coe_genWeightSpaceOf_zero`\n`+ coe_genWeightSpace_of_top`\n`+ coe_lie_shiftedGenWeightSpace_apply`\n`+ comap_genWeightSpace_eq_of_injective`\n`+ disjoint_genWeightSpace`\n`+ disjoint_genWeightSpaceOf`\n`+ eq_zero_of_mem_genWeightSpace_mem_posFitting`\n`+ eventually_genWeightSpace_smul_add_eq_bot`\n`+ exists_genWeightSpace_le_ker_of_isNoetherian`\n`+ exists_genWeightSpace_smul_add_eq_bot`\n`+ exists_genWeightSpace_zero_le_ker_of_isNoetherian`\n`+ exists₂_genWeightSpace_smul_add_eq_bot`\n`+ finite_genWeightSpaceOf_ne_bot`\n`+ finite_genWeightSpace_ne_bot`\n`+ genWeightSpace`\n`+ genWeightSpaceChain`\n`+ genWeightSpaceChain_def`\n`+ genWeightSpaceChain_def'`\n`+ genWeightSpaceChain_neg`\n`+ genWeightSpaceOf`\n`+ genWeightSpaceOf_ne_bot`\n`+ genWeightSpace_add_chainTop`\n`+ genWeightSpace_chainBotCoeff_sub_one_zsmul_sub`\n`+ genWeightSpace_chainTopCoeff_add_one_nsmul_add`\n`+ genWeightSpace_chainTopCoeff_add_one_zsmul_add`\n`+ genWeightSpace_genWeightSpaceOf_map_incl`\n`+ genWeightSpace_le_genWeightSpaceChain`\n`+ genWeightSpace_le_genWeightSpaceOf`\n`+ genWeightSpace_ne_bot`\n`+ genWeightSpace_neg_add_chainBot`\n`+ genWeightSpace_neg_zsmul_add_ne_bot`\n`+ genWeightSpace_nsmul_add_ne_bot_of_le`\n`+ genWeightSpace_zero_normalizer_eq_self`\n`+ genWeightSpace_zsmul_add_ne_bot`\n`+ iSup_genWeightSpaceOf_eq_top`\n`+ iSup_genWeightSpace_eq_top`\n`+ iSup_genWeightSpace_eq_top'`\n`+ iSup_ucs_eq_genWeightSpace_zero`\n`+ iSup_ucs_le_genWeightSpace_zero`\n`+ independent_genWeightSpace`\n`+ independent_genWeightSpace'`\n`+ independent_genWeightSpaceOf`\n`+ injOn_genWeightSpace`\n`+ instance : LieModule R L (shiftedGenWeightSpace R L M χ)`\n`+ instance : LieRingModule L (shiftedGenWeightSpace R L M χ)`\n`+ instance [IsNoetherian R M] : IsNilpotent R L (shiftedGenWeightSpace R L M χ)`\n`+ instance [Nontrivial (genWeightSpace M (0 : L → R))] : Zero (Weight R L M)`\n`+ instance [Nontrivial H] : Nontrivial (genWeightSpace L (0 : H → R)) := by`\n`+ isCompl_genWeightSpaceOf_zero_posFittingCompOf`\n`+ isCompl_genWeightSpace_zero_posFittingComp`\n`+ isNilpotent_toEnd_genWeightSpace_zero`\n`+ lie_mem_genWeightSpaceChain_of_genWeightSpace_eq_bot_left`\n`+ lie_mem_genWeightSpaceChain_of_genWeightSpace_eq_bot_right`\n`+ lie_mem_genWeightSpace_of_mem_genWeightSpace`\n`+ map_genWeightSpace_eq`\n`+ map_genWeightSpace_eq_of_injective`\n`+ map_genWeightSpace_le`\n`+ mapsTo_toEnd_genWeightSpace_add_of_mem_rootSpace`\n`+ mem_genWeightSpace`\n`+ mem_genWeightSpaceOf`\n`+ rootSpace_comap_eq_genWeightSpace`\n`+ shiftedGenWeightSpace`\n`+ traceForm_eq_sum_genWeightSpaceOf`\n`+ traceForm_genWeightSpace_eq`\n`+ trace_comp_toEnd_genWeightSpace_eq`\n`+ trace_toEnd_genWeightSpace`\n`+ trace_toEnd_genWeightSpaceChain_eq_zero`\n`+ zero_genWeightSpace_eq_top_of_nilpotent`\n`+ zero_genWeightSpace_eq_top_of_nilpotent'`\n`+ zero_lt_finrank_genWeightSpace`\n`- coe_lie_shiftedWeightSpace_apply`\n`- coe_weightSpaceOf_zero`\n`- coe_weightSpace_of_top`\n`- comap_weightSpace_eq_of_injective`\n`- disjoint_weightSpace`\n`- disjoint_weightSpaceOf`\n`- eq_zero_of_mem_weightSpace_mem_posFitting`\n`- eventually_weightSpace_smul_add_eq_bot`\n`- exists_weightSpace_le_ker_of_isNoetherian`\n`- exists_weightSpace_smul_add_eq_bot`\n`- exists_weightSpace_zero_le_ker_of_isNoetherian`\n`- exists₂_weightSpace_smul_add_eq_bot`\n`- finite_weightSpaceOf_ne_bot`\n`- finite_weightSpace_ne_bot`\n`- iSup_ucs_eq_weightSpace_zero`\n`- iSup_ucs_le_weightSpace_zero`\n`- iSup_weightSpaceOf_eq_top`\n`- iSup_weightSpace_eq_top`\n`- iSup_weightSpace_eq_top'`\n`- independent_weightSpace`\n`- independent_weightSpace'`\n`- independent_weightSpaceOf`\n`- injOn_weightSpace`\n`- instance : LieModule R L (shiftedWeightSpace R L M χ)`\n`- instance : LieRingModule L (shiftedWeightSpace R L M χ)`\n`- instance [IsNoetherian R M] : IsNilpotent R L (shiftedWeightSpace R L M χ)`\n`- instance [Nontrivial (weightSpace M (0 : L → R))] : Zero (Weight R L M)`\n`- instance [Nontrivial H] : Nontrivial (weightSpace L (0 : H → R)) := by`\n`- isCompl_weightSpaceOf_zero_posFittingCompOf`\n`- isCompl_weightSpace_zero_posFittingComp`\n`- isNilpotent_toEnd_weightSpace_zero`\n`- lie_mem_weightSpaceChain_of_weightSpace_eq_bot_left`\n`- lie_mem_weightSpaceChain_of_weightSpace_eq_bot_right`\n`- lie_mem_weightSpace_of_mem_weightSpace`\n`- map_weightSpace_eq`\n`- map_weightSpace_eq_of_injective`\n`- map_weightSpace_le`\n`- mapsTo_toEnd_weightSpace_add_of_mem_rootSpace`\n`- mem_weightSpace`\n`- mem_weightSpaceOf`\n`- rootSpace_comap_eq_weightSpace`\n`- shiftedWeightSpace`\n`- traceForm_eq_sum_weightSpaceOf`\n`- traceForm_weightSpace_eq`\n`- trace_comp_toEnd_weightSpace_eq`\n`- trace_toEnd_weightSpace`\n`- trace_toEnd_weightSpaceChain_eq_zero`\n`- weightSpace`\n`- weightSpaceChain`\n`- weightSpaceChain_def`\n`- weightSpaceChain_def'`\n`- weightSpaceChain_neg`\n`- weightSpaceOf`\n`- weightSpaceOf_ne_bot`\n`- weightSpace_add_chainTop`\n`- weightSpace_chainBotCoeff_sub_one_zsmul_sub`\n`- weightSpace_chainTopCoeff_add_one_nsmul_add`\n`- weightSpace_chainTopCoeff_add_one_zsmul_add`\n`- weightSpace_le_weightSpaceChain`\n`- weightSpace_le_weightSpaceOf`\n`- weightSpace_ne_bot`\n`- weightSpace_neg_add_chainBot`\n`- weightSpace_neg_zsmul_add_ne_bot`\n`- weightSpace_nsmul_add_ne_bot_of_le`\n`- weightSpace_weightSpaceOf_map_incl`\n`- weightSpace_zero_normalizer_eq_self`\n`- weightSpace_zsmul_add_ne_bot`\n`- zero_lt_finrank_weightSpace`\n`- zero_weightSpace_eq_top_of_nilpotent`\n`- zero_weightSpace_eq_top_of_nilpotent'`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6TTgkRzwAAAAM9oQqH",
              "createdAt": "2024-08-17T06:10:52Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TTgkRzwAAAAM9oQ-d",
              "createdAt": "2024-08-17T06:11:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6TTgkRzwAAAAM9oRCt",
              "createdAt": "2024-08-17T06:11:18Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjc3MzQzNjQ=",
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Fwmun",
              "createdAt": "2024-08-17T15:01:57Z",
              "body": "Thanks!\r\n\r\nWe might also want to rename `rootSpace` to `genRootSpace` but this can wait.\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TTgkRzwAAAAM9snny",
              "createdAt": "2024-08-17T15:02:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6IyTOZ",
              "createdAt": "2024-08-17T15:13:32Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10433173527/job/28894633178)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10433173527/job/28894633038)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6TTgkRzwAAAAM9ssgL",
              "createdAt": "2024-08-17T15:13:32Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6TTgkRzwAAAAM9ssgt",
              "createdAt": "2024-08-17T15:13:35Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
