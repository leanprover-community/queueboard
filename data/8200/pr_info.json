{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 75,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "joelriou"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "In this PR, we introduce `KernelFork.mapIsoOfIsLimit` which is the isomorphism between the \"points\" of two limit kernel forks of maps which are isomorphic in the category of arrows. This generalizes `kernel.mapIso` which is the case where the limit kernel forks are given by `limit.isLimit`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-11-10T13:53:36Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5roeBC",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6825235752/job/18562670724)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6825235752/job/18562670448)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6825235752/job/18562671092)",
              "createdAt": "2023-11-10T13:53:36Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7d9d71741bffefce13d2024f85d9c4ca5472b686",
                "additions": 67,
                "deletions": 0,
                "committedDate": "2023-11-05T11:31:12Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "joel.riou@universite-paris-saclay.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "787d87a7616a8fef49af34b44cefc5f18ded2a9d",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-11-05T12:10:38Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "joel.riou@universite-paris-saclay.fr"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-05T11:31:49Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Arrow.lean",
              "additions": 16,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean",
              "additions": 59,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kernel-map-arrow",
        "headRefOid": "787d87a7616a8fef49af34b44cefc5f18ded2a9d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5enaVp",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mPntS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-06T14:40:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mzQF6",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-11-10T12:48:06Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8200,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mPntS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-06T14:40:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mRiUb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-11-06T18:09:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mzQF6",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-11-10T12:48:06Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SdbHn",
                    "body": "Can we deduce this from an isomorphism of `KernelFork`s instead? If not, can we have (or have a TODO for) the isomorphism, with a statement that getting the isomorphism of their points is the same as this one.",
                    "createdAt": "2023-11-06T14:40:52Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SeoMO",
                    "body": "These two kernel forks are not in the same category (one is in `KernelFork f`, and the other in `KernelFork f'`), so that we cannot directly use `IsLimit.conePointUniqueUpToIso`. The definitions I have done are very parallel to that of `kernel.map` and `kernel.mapIso`: I only generalize to arbitrary limit kernel forks because it will be necessary for some computations in group cohomology. It should be possible to refactor the functoriality of kernels (either the chosen `kernel`, or the points of limit kernels forks) by constructing a functor `Arrow C ⥤ (WalkingParallelPair ⥤ C)` and then studying the associated functoriality of cones, but I am not sure I would like to encourage anybody to pursue this direction. (This would also bypass the API we already have for kernel forks, like `KernelFork.ofι`, etc.)",
                    "createdAt": "2023-11-06T18:09:34Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(CategoryTheory): more API for limit kernel forks",
        "updatedAt": "2023-11-10T13:53:41Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8200",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7d9d71741bffefce13d2024f85d9c4ca5472b686"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c514ggizwAAAAKHl5Gc",
              "createdAt": "2023-11-05T11:31:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PNVSE",
              "createdAt": "2023-11-05T11:32:12Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Q-fSR",
                "title": "feat/refactor: redefinition of homology + derived categories",
                "url": "https://github.com/leanprover-community/mathlib4/pull/4197"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "787d87a7616a8fef49af34b44cefc5f18ded2a9d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c514ggizwAAAAKHmeP9",
              "createdAt": "2023-11-05T13:00:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mPntS",
              "createdAt": "2023-11-06T14:40:52Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mzQF6",
              "createdAt": "2023-11-10T12:48:06Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c514ggizwAAAAKLKsLP",
              "createdAt": "2023-11-10T12:48:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c514ggizwAAAAKLKsNu",
              "createdAt": "2023-11-10T12:48:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5roeBC",
              "createdAt": "2023-11-10T13:53:36Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6825235752/job/18562670724)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6825235752/job/18562670448)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6825235752/job/18562671092)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c514ggizwAAAAKLNOkd",
              "createdAt": "2023-11-10T13:53:37Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c514ggizwAAAAKLNOuM",
              "createdAt": "2023-11-10T13:53:41Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
