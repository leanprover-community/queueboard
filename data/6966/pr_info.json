{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 128,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "javra"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This prepares to have Factorisation systems in Lean as well as to serve as a generalisation of things like `MonoFactorisation`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-09-12T17:39:10Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5lv-up",
              "body": "Questions:\r\n* Is `Fact f` an okay name if it's inside `CategoryTheory`, or do we still want to avoid the clash with `_root_.Fact`?\r\n* Is the way I defined the initial and terminal object good style?",
              "createdAt": "2023-09-05T18:08:25Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lwGBH",
              "body": "@javra do I understand that you want this to be reviewed? If so, I think you should switch from draft to regular PR and add `awaiting-review`. Or otherwise start a discussion on zulip. Because a draft PR without `awaiting-review` is not very visible on our Github queues, and so your questions will not be seen by many.",
              "createdAt": "2023-09-05T18:23:39Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lwIvM",
              "body": "@jcommelin I'm at the LftCM and wanted to collect some local feedback first, from people who started on AWFS, but I guess I could convert it to a proper PR as well :upside_down_face: ",
              "createdAt": "2023-09-05T18:31:48Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lzDLk",
              "body": "Ok, got it. Fwiw, I think the material looks good. But I do think that you'' get clashes with `_root_.Fact`. What about `FactCat`?",
              "createdAt": "2023-09-06T08:15:55Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lzGsg",
              "body": "I'd be happy with `FactCat`. If we want to use the type of factorisations without caring about the category structures, `Factorisation f` would probably the better type name. Just thought that since `_root_.Fact` takes propositions, there's maybe no ambiguities at all?\r\n\r\nWhat about the field names of `Fact`? The `D` is just taken from nlab for the lack of a better idea...",
              "createdAt": "2023-09-06T08:25:43Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mO-Ck",
              "body": ":v: javra can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-12T07:59:02Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mSEou",
              "body": "bors r+",
              "createdAt": "2023-09-12T16:05:37Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mSg5v",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6162687368/job/16724696367)",
              "createdAt": "2023-09-12T17:16:34Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mSn-B",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6162742372/job/16724854240)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6162742372/job/16724854866)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6162742372/job/16724854443)",
              "createdAt": "2023-09-12T17:39:09Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "fb54934d37ced826dfe63db1ce2fa6ce25ba5341",
                "additions": 100,
                "deletions": 0,
                "committedDate": "2023-09-05T14:09:16Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "005b2a888765f4c2a83a82a3f8d8c3e4d5a4bb7d",
                "additions": 36,
                "deletions": 16,
                "committedDate": "2023-09-05T14:51:28Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "14e9952dd05ae68bd55f1d20b2141e28677af1fe",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-09-05T15:56:19Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "07cc10d288e32ddd951e5678ffb9ac415ffca11e",
                "additions": 3,
                "deletions": 0,
                "committedDate": "2023-09-05T17:32:16Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f2378c3b875030bb14c1b895eb45012d6fa5c6fd",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-09-05T17:37:27Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1c8f6b71f55f03cd71abd1bab570d4b9e8329101",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-09-06T09:49:48Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "00c610e5818fc60a709f3638136e4b785db44544",
                "additions": 128,
                "deletions": 128,
                "committedDate": "2023-09-06T09:55:25Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b2983d8469b750c79265610b946f0de98a93b47e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-12T16:05:14Z",
                "author": {
                  "name": "Jakob von Raumer",
                  "email": "jakob@von-raumer.de"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-05T18:01:06Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Factorisation.lean",
              "additions": 127,
              "deletions": 0
            }
          ]
        },
        "headRefName": "fact_cat",
        "headRefOid": "b2983d8469b750c79265610b946f0de98a93b47e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Zmf8S",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gpzLc",
              "body": "LGTM\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-12T07:59:01Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6966,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gIR2S",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-06T08:29:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gpzLc",
              "body": "LGTM\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-12T07:59:01Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OfrUF",
                    "body": "Maybe, `mid` or `midPr` would work as name?",
                    "createdAt": "2023-09-06T08:29:35Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5O1W6b",
                    "body": "```suggestion\r\n  mid  : C\r\n```",
                    "createdAt": "2023-09-12T07:58:49Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0ODkyNw==",
              "login": "javra"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: The category Fact(f)",
        "updatedAt": "2023-09-12T17:39:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6966",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fb54934d37ced826dfe63db1ce2fa6ce25ba5341"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "005b2a888765f4c2a83a82a3f8d8c3e4d5a4bb7d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "14e9952dd05ae68bd55f1d20b2141e28677af1fe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "07cc10d288e32ddd951e5678ffb9ac415ffca11e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2378c3b875030bb14c1b895eb45012d6fa5c6fd"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lv-up",
              "createdAt": "2023-09-05T18:08:25Z",
              "body": "Questions:\r\n* Is `Fact f` an okay name if it's inside `CategoryTheory`, or do we still want to avoid the clash with `_root_.Fact`?\r\n* Is the way I defined the initial and terminal object good style?",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lwGBH",
              "createdAt": "2023-09-05T18:23:39Z",
              "body": "@javra do I understand that you want this to be reviewed? If so, I think you should switch from draft to regular PR and add `awaiting-review`. Or otherwise start a discussion on zulip. Because a draft PR without `awaiting-review` is not very visible on our Github queues, and so your questions will not be seen by many.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lwIvM",
              "createdAt": "2023-09-05T18:31:48Z",
              "body": "@jcommelin I'm at the LftCM and wanted to collect some local feedback first, from people who started on AWFS, but I guess I could convert it to a proper PR as well :upside_down_face: ",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c5wNHHozwAAAAJlJSN5",
              "createdAt": "2023-09-05T18:32:08Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wNHHozwAAAAJlJSeB",
              "createdAt": "2023-09-05T18:32:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lzDLk",
              "createdAt": "2023-09-06T08:15:55Z",
              "body": "Ok, got it. Fwiw, I think the material looks good. But I do think that you'' get clashes with `_root_.Fact`. What about `FactCat`?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lzGsg",
              "createdAt": "2023-09-06T08:25:43Z",
              "body": "I'd be happy with `FactCat`. If we want to use the type of factorisations without caring about the category structures, `Factorisation f` would probably the better type name. Just thought that since `_root_.Fact` takes propositions, there's maybe no ambiguities at all?\r\n\r\nWhat about the field names of `Fact`? The `D` is just taken from nlab for the lack of a better idea...",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gIR2S",
              "createdAt": "2023-09-06T08:29:35Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1c8f6b71f55f03cd71abd1bab570d4b9e8329101"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00c610e5818fc60a709f3638136e4b785db44544"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5wNHHozwAAAAJllLrr",
              "createdAt": "2023-09-06T10:35:20Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gpzLc",
              "createdAt": "2023-09-12T07:58:49Z",
              "body": "LGTM\r\n\r\nbors d+",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mO-Ck",
              "createdAt": "2023-09-12T07:59:02Z",
              "body": ":v: javra can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wNHHozwAAAAJofl8L",
              "createdAt": "2023-09-12T07:59:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wNHHozwAAAAJofl-8",
              "createdAt": "2023-09-12T07:59:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b2983d8469b750c79265610b946f0de98a93b47e"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mSEou",
              "createdAt": "2023-09-12T16:05:37Z",
              "body": "bors r+",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mSg5v",
              "createdAt": "2023-09-12T17:16:34Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6162687368/job/16724696367)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mSn-B",
              "createdAt": "2023-09-12T17:39:09Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6162742372/job/16724854240)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6162742372/job/16724854866)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6162742372/job/16724854443)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wNHHozwAAAAJo5NLK",
              "createdAt": "2023-09-12T17:39:10Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wNHHozwAAAAJo5NY_",
              "createdAt": "2023-09-12T17:39:13Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
