{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 496,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "EtienneC30"
        },
        "baseRefName": "master",
        "body": "Construct the product of an arbitrary family of probability measures.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n- [x] depends on: #22471\r\n- [ ] depends on: #22534\r\n- [x] depends on: #22551\r\n- [x] depends on: #22552\r\n- [x] depends on: #22554\r\n- [x] depends on: #22558\r\n- [x] depends on: #22584\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6gziiJ",
              "body": "### PR summary [1e0d3324e4](https://github.com/leanprover-community/mathlib4/pull/22555/commits/1e0d3324e435b4b54ed0b234b1e9a63e9183c2f0)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.Finset.Preimage | 512 | 515 | +3 (+0.59%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>142 files</summary> `Mathlib.Algebra.Algebra.Bilinear` `Mathlib.Algebra.Algebra.NonUnitalSubalgebra` `Mathlib.Algebra.Algebra.RestrictScalars` `Mathlib.Algebra.Algebra.Tower` `Mathlib.Algebra.Algebra.Unitization` `Mathlib.Algebra.BigOperators.Group.Finset.Preimage` `Mathlib.Algebra.BigOperators.Intervals` `Mathlib.Algebra.BigOperators.Module` `Mathlib.Algebra.BigOperators.NatAntidiagonal` `Mathlib.Algebra.Category.ModuleCat.Algebra` `Mathlib.Algebra.Category.ModuleCat.Monoidal.Basic` `Mathlib.Algebra.Category.ModuleCat.Monoidal.Closed` `Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric` `Mathlib.Algebra.Category.ModuleCat.Tannaka` `Mathlib.Algebra.ContinuedFractions.Computation.Approximations` `Mathlib.Algebra.ContinuedFractions.Computation.TerminatesIffRat` `Mathlib.Algebra.DualNumber` `Mathlib.Algebra.Group.Subgroup.Pointwise` `Mathlib.Algebra.Group.Submonoid.Pointwise` `Mathlib.Algebra.Group.Submonoid.Units` `Mathlib.Algebra.Module.Injective` `Mathlib.Algebra.Module.LocalizedModule.Basic` `Mathlib.Algebra.Module.LocalizedModule.IsLocalization` `Mathlib.Algebra.Module.Submodule.Bilinear` `Mathlib.Algebra.Order.Antidiag.Prod` `Mathlib.Algebra.Order.BigOperators.Group.LocallyFinite` `Mathlib.Algebra.Order.Disjointed` `Mathlib.Algebra.Order.Interval.Finset.Basic` `Mathlib.Algebra.Order.Interval.Finset.SuccPred` `Mathlib.Algebra.Order.Interval.Multiset` `Mathlib.Algebra.Order.PartialSups` `Mathlib.Algebra.Ring.Subring.Pointwise` `Mathlib.Algebra.Ring.Subsemiring.Pointwise` `Mathlib.Algebra.RingQuot` `Mathlib.Algebra.Star.Module` `Mathlib.Algebra.Star.NonUnitalSubalgebra` `Mathlib.Algebra.Star.RingQuot` `Mathlib.Algebra.TrivSqZeroExt` `Mathlib.AlgebraicTopology.RelativeCellComplex.Basic` `Mathlib.CategoryTheory.Abelian.GrothendieckCategory.Monomorphisms` `Mathlib.CategoryTheory.Limits.Preserves.Shapes.Preorder` `Mathlib.CategoryTheory.Limits.Shapes.Preorder.TransfiniteCompositionOfShape` `Mathlib.CategoryTheory.Limits.Shapes.Preorder.WellOrderContinuous` `Mathlib.CategoryTheory.Limits.Shapes.SequentialProduct` `Mathlib.CategoryTheory.MorphismProperty.TransfiniteComposition` `Mathlib.CategoryTheory.SmallObject.TransfiniteCompositionLifting` `Mathlib.CategoryTheory.SmallObject.TransfiniteIteration` `Mathlib.Combinatorics.Schnirelmann` `Mathlib.Combinatorics.SetFamily.Shatter` `Mathlib.Combinatorics.Young.SemistandardTableau` `Mathlib.Combinatorics.Young.YoungDiagram` `Mathlib.Data.DFinsupp.Lex` `Mathlib.Data.ENat.BigOperators` `Mathlib.Data.ENat.Lattice` `Mathlib.Data.Fin.Tuple.Sort` `Mathlib.Data.Finset.Interval` `Mathlib.Data.Finset.MulAntidiagonal` `Mathlib.Data.Finset.NatAntidiagonal` `Mathlib.Data.Finset.Preimage` `Mathlib.Data.Finset.SMulAntidiagonal` `Mathlib.Data.Finset.Slice` `Mathlib.Data.Fintype.Fin` `Mathlib.Data.Int.Interval` `Mathlib.Data.Nat.Digits` `Mathlib.Data.Nat.Fib.Basic` `Mathlib.Data.Nat.Fib.Zeckendorf` `Mathlib.Data.Nat.Lattice` `Mathlib.Data.Nat.PartENat` `Mathlib.Data.PNat.Interval` `Mathlib.Data.Set.MulAntidiagonal` `Mathlib.Data.Set.SMulAntidiagonal` `Mathlib.Data.Sigma.Interval` `Mathlib.Data.Sum.Interval` `Mathlib.Dynamics.TopologicalEntropy.DynamicalEntourage` `Mathlib.GroupTheory.ArchimedeanDensely` `Mathlib.GroupTheory.Divisible` `Mathlib.GroupTheory.DoubleCoset` `Mathlib.GroupTheory.QuotientGroup.Basic` `Mathlib.GroupTheory.Submonoid.Inverses` `Mathlib.LinearAlgebra.AffineSpace.AffineEquiv` `Mathlib.LinearAlgebra.AffineSpace.AffineMap` `Mathlib.LinearAlgebra.AffineSpace.AffineSubspace.Basic` `Mathlib.LinearAlgebra.AffineSpace.MidpointZero` `Mathlib.LinearAlgebra.AffineSpace.Midpoint` `Mathlib.LinearAlgebra.AffineSpace.Ordered` `Mathlib.LinearAlgebra.AffineSpace.Pointwise` `Mathlib.LinearAlgebra.AffineSpace.Restrict` `Mathlib.LinearAlgebra.AffineSpace.Slope` `Mathlib.LinearAlgebra.BilinearForm.Basic` `Mathlib.LinearAlgebra.LinearPMap` `Mathlib.LinearAlgebra.Pi` `Mathlib.LinearAlgebra.Prod` `Mathlib.LinearAlgebra.Span.Basic` `Mathlib.LinearAlgebra.TensorProduct.Associator` `Mathlib.LinearAlgebra.TensorProduct.Basic` `Mathlib.LinearAlgebra.TensorProduct.Pi` `Mathlib.LinearAlgebra.TensorProduct.Prod` `Mathlib.LinearAlgebra.TensorProduct.Tower` `Mathlib.MeasureTheory.PiSystem` `Mathlib.MeasureTheory.SetSemiring` `Mathlib.NumberTheory.ADEInequality` `Mathlib.NumberTheory.Divisors` `Mathlib.Order.Atoms.Finite` `Mathlib.Order.Birkhoff` `Mathlib.Order.BooleanGenerators` `Mathlib.Order.CompactlyGenerated.Basic` `Mathlib.Order.CompactlyGenerated.Intervals` `Mathlib.Order.Disjointed` `Mathlib.Order.Filter.AtTopBot.BigOperators` `Mathlib.Order.Filter.AtTopBot.Finset` `Mathlib.Order.Height` `Mathlib.Order.Interval.Finset.Basic` `Mathlib.Order.Interval.Finset.Box` `Mathlib.Order.Interval.Finset.Defs` `Mathlib.Order.Interval.Finset.Fin` `Mathlib.Order.Interval.Finset.Nat` `Mathlib.Order.Interval.Finset.SuccPred` `Mathlib.Order.Interval.Multiset` `Mathlib.Order.KonigLemma` `Mathlib.Order.OrderIsoNat` `Mathlib.Order.PartialSups` `Mathlib.Order.SuccPred.LinearLocallyFinite` `Mathlib.Order.UpperLower.LocallyFinite` `Mathlib.Order.WellFoundedSet` `Mathlib.Order.WellQuasiOrder` `Mathlib.RingTheory.HahnSeries.Addition` `Mathlib.RingTheory.HahnSeries.Basic` `Mathlib.RingTheory.Ideal.Maximal` `Mathlib.RingTheory.Ideal.Nonunits` `Mathlib.RingTheory.Ideal.Span` `Mathlib.RingTheory.LocalRing.Basic` `Mathlib.RingTheory.LocalRing.MaximalIdeal.Defs` `Mathlib.RingTheory.Localization.Basic` `Mathlib.RingTheory.Localization.FractionRing` `Mathlib.RingTheory.Localization.Pi` `Mathlib.RingTheory.Nilpotent.Defs` `Mathlib.RingTheory.Spectrum.Maximal.Basic` `Mathlib.RingTheory.Spectrum.Maximal.Defs` `Mathlib.Tactic.Algebraize` `Mathlib.Tactic.Module` `Mathlib.Tactic.NormNum.NatFib` `Mathlib.Tactic.RewriteSearch`</details>|3|\n| `Mathlib.Probability.ProductMeasure` (new file)|2131|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Finset.restrict_comp_piCongrLeft`\n`+ Measure.infinitePiNat_map_piCongrLeft`\n`+ StronglyMeasurable.integral_of_piFinset`\n`+ _root_.IicProdIoc_preimage`\n`+ _root_.IocProdIoc_preimage`\n`+ _root_.Measurable.lintegral_of_piFinset`\n`+ eq_infinitePi`\n`+ frestrict`\n`+ frestrict_apply`\n`+ frestrict_symm_apply`\n`+ infinitePi`\n`+ infinitePiNat`\n`+ infinitePiNat_map_restrict`\n`+ infinitePi_boxes`\n`+ infinitePi_cylinder`\n`+ infinitePi_eq_pi`\n`+ infinitePi_map_restrict`\n`+ instance : IsProbabilityMeasure (Measure.infinitePiNat μ) := by`\n`+ instance : IsProbabilityMeasure (infinitePi μ) := by`\n`+ integral_restrict_infinitePi`\n`+ isProjectiveLimit_infinitePi`\n`+ isProjectiveLimit_infinitePiNat`\n`+ isProjectiveMeasureFamily_pi`\n`+ isSigmaSubadditive_piContent`\n`+ lintegral_restrict_infinitePi`\n`+ map_piSingleton`\n`+ partialTraj_const`\n`+ partialTraj_const_restrict₂`\n`+ piContent`\n`+ piContent_cylinder`\n`+ piContent_eq_infinitePiNat`\n`+ piContent_eq_measure_pi`\n`+ piContent_tendsto_zero`\n`+ pi_prod_map_IicProdIoc`\n`+ pi_prod_map_IocProdIoc`\n`+ to`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-04T14:38:34Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gzqlS",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#22471~~\n* leanprover-community/mathlib4#22534\n* ~~leanprover-community/mathlib4#22551~~\n* ~~leanprover-community/mathlib4#22552~~\n* ~~leanprover-community/mathlib4#22554~~\n* ~~leanprover-community/mathlib4#22558~~\n* ~~leanprover-community/mathlib4#22584~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-03-04T14:46:48Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2025-03-04T14:37:31Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Finset/Preimage.lean",
              "additions": 31,
              "deletions": 0
            },
            {
              "path": "Mathlib/Probability/ProductMeasure.lean",
              "additions": 464,
              "deletions": 0
            }
          ]
        },
        "headRefName": "em/product_measure",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6NUzV2",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            }
          ]
        },
        "number": 22555,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7OKA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705651/job/38765776424"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7F5Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705397/job/38765774309"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7F_g",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705395/job/38765774334"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7NfQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705653/job/38765776253"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7Hcw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705392/job/38765774707"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7MeA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705651/job/38765775992"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7MBw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705653/job/38765775879"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7FmQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705392/job/38765774233"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7Pww",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705651/job/38765776835"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBrprhQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13853705653/job/38767586181"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp7jcQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38765781873"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBp8zmQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22555&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: infinite product of probability measures",
        "updatedAt": "2025-03-14T09:31:05Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22555"
      }
    }
  }
}
