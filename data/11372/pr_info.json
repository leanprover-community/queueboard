{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 108,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "lambda-fairy"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`acceptsFrom` is used in #11311 to define left quotients.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2024-07-14T20:14:46Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c53Zj_v",
              "body": "Very nice work, I like it!",
              "createdAt": "2024-03-18T08:29:59Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DfUum",
              "body": "### PR summary [f1a5179f2f](https://github.com/leanprover-community/mathlib4/pull/11372/commits/f1a5179f2f079a1f58bfd020b54e944e7f5ff810)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Computability.DFA | 595 | 596 | +1 (+0.17%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>3 files</summary> `Mathlib.Computability.DFA` `Mathlib.Computability.NFA` `Mathlib.Computability.EpsilonNFA`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ acceptsFrom`\n`+ accepts_comap`\n`+ accepts_reindex`\n`+ comap`\n`+ comap_id`\n`+ comap_reindex`\n`+ evalFrom_comap`\n`+ evalFrom_reindex`\n`+ eval_comap`\n`+ eval_reindex`\n`+ mem_acceptsFrom`\n`+ reindex`\n`+ reindex_refl`\n`+ symm_reindex`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-03T13:01:56Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dftd2",
              "body": "Sorry about the wait! Should be ready for review again. PTAL!",
              "createdAt": "2024-07-03T13:50:00Z",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6D3w2A",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2024-07-07T12:26:31Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ExHnm",
              "body": "bors merge",
              "createdAt": "2024-07-14T20:04:40Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ExITE",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9930388293/job/27429068855)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9930388293/job/27429068928)",
              "createdAt": "2024-07-14T20:14:46Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c21300c0a43e3643697d98283abc052f116687c1",
                "additions": 62,
                "deletions": 8,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6d0bc386be39478eb39952afca61c7cadf6f02f2",
                "additions": 65,
                "deletions": 23,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ef9928786c39b6427142b1fa6da7d07998ea779d",
                "additions": 1,
                "deletions": 9,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6792a36f7b22d67e2169ab69c361d38947bc1160",
                "additions": 9,
                "deletions": 1,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1211ff3b23749502e973c4f029ec0756d4cd3728",
                "additions": 1,
                "deletions": 9,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1d464e992a15fddfbf5c04239be009f19da40a7",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2dc3ff3637fc407713c8fbb6305e2916290ac756",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6204b7297490d81bed3ddb9bba5bcff20f30aae1",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "64c2f43d09ba1a3ed976a2c1973e3f70415f5998",
                "additions": 4,
                "deletions": 1,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "216986a0c3047389faf3ba2e074985c452e03161",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4a43e7e3ee039f74fc17561782d68e1e40a83b1c",
                "additions": 10,
                "deletions": 0,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "560fb552f79537254a4b17a46fa02bfcf27f18ef",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6ccaeb6d80f9971fc4aa80f837d4349ed376dbe0",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "87b7ad7522a0f5708820ce78fbb572021a6c7ca1",
                "additions": 15,
                "deletions": 11,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "57b53fc10fccee434b560947a883570e12ee0e27",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2024-07-03T13:01:09Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcSHA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778361042/job/26995003932"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcSMA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778361034/job/26995003952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcIVQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359972/job/26995001429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcLVA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359967/job/26995002196"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcStA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778361035/job/26995004084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcLfQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359972/job/26995002237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcIKA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359967/job/26995001384"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcUDw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778361035/job/26995004431"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcKPQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359972/job/26995001917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcJ7w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359967/job/26995001839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcM3g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359972/job/26995002590"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcMjg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359967/job/26995002510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcOPg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359972/job/26995002942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQ9HoQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778359967/job/26995541921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQcvNw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26995011383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSQd6jA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11372&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f1a5179f2f079a1f58bfd020b54e944e7f5ff810",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-07-03T13:28:45Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUQ8AIA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827255014/job/27129741344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR15yQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806029/job/26996472265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUQ7_ww",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827255011/job/27129741251"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR14xA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806017/job/26996472004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR12vQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996471485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR14Vw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996471895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR16wQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806011/job/26996472513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUQ7_yQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827255014/job/27129741257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR17NQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996472629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR12ew",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996471419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR14hA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806011/job/26996471940"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR18yg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996473034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR175Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996472805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR14iQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996471945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR16dw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996472439"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR1-fA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996473468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSSWCmQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996998809"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR2ffg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26996481918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGSR3fIA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11372&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHCFBj8g",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4329",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-03-14T13:36:09Z",
        "deletions": 9,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Computability/DFA.lean",
              "additions": 108,
              "deletions": 9
            }
          ]
        },
        "headRefName": "lambda-fairy/dfa-extras",
        "headRefOid": "f1a5179f2f079a1f58bfd020b54e944e7f5ff810",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5poiwu",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5zxPfC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:50:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxGNj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-18T08:31:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A2zff",
              "body": "maintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-07T12:26:19Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 11372,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5zfows",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-14T20:49:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zgnEN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-15T00:30:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zgnNa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-15T00:31:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zi79s",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-15T09:55:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zk9Xt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-15T14:13:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zk9k6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-15T14:13:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zlHCA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-15T14:30:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zlH-M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-15T14:32:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zlJsD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-15T14:35:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zlMVD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-15T14:39:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zsRVY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-16T07:10:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zsS4F",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-16T07:40:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zsUe3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-16T08:40:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zsWsN",
              "body": "Use of dot notation should not change the name of the lemma. A lemma of the form `(foo a).bar = _` should be called `bar_foo`, not `foo_bar`.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-16T10:09:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zuG8Y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-17T12:51:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zuIK2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-17T13:12:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zuK8W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-17T13:45:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zwPs1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-18T05:53:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zwP6y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-18T05:53:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zw5fa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:03:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zw5yf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:04:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zw9nZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:12:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zw_gu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:16:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxCeI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:23:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxEAW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:26:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxFMh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:29:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxGNj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-18T08:31:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxGph",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:32:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxGtb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-18T08:32:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxHZ3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:34:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxIE8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:35:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxJJY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:38:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxJlV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:39:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxJvp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:39:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxJwW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:39:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxJ-f",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:40:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxKER",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:40:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxKT8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:40:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxKY1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-18T08:40:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxKfq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:41:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxK5l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:41:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxLqP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-18T08:43:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxMDU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:44:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxMqw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:45:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxNl6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:47:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxPHC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:50:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zxPfC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-18T08:50:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50rwlC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-25T12:32:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51UVvt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-29T10:27:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51UZZ5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-29T10:42:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51UnQE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-29T11:24:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51VE9h",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-29T12:41:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A2zff",
              "body": "maintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-07T12:26:19Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a7Kc5",
                    "body": "I don't think you need `mem_accepts'`\r\n```suggestion\r\ntheorem mem_accepts (x : List α) : x ∈ M.accepts ↔ M.eval x ∈ M.accept := by rfl\r\n#align DFA.mem_accepts DFA.mem_accepts\r\n```",
                    "createdAt": "2024-03-14T20:35:29Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBj2-",
                    "body": "Sounds good. It was used in `pumping_lemma` but I replaced it with `rw [mem_accepts, eval]`.",
                    "createdAt": "2024-03-16T08:40:32Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a7K7a",
                    "body": "No need specifying universes unless you're doing category theory\r\n```suggestion\r\nsection Map\r\nvariable {α' σ' : Type*} (f : α ≃ α') (g : σ ≃ σ') (s : σ') (a : α') (x : List α')\r\n```",
                    "createdAt": "2024-03-14T20:37:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5a-uWR",
                    "body": "Done. It might be worth removing the existing universe declarations, but that can be done in another PR",
                    "createdAt": "2024-03-15T14:39:49Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a7NO3",
                    "body": "We usually use `congr` for this instead, eg `FreeGroup.freeGroupCongr` (which is not a great name either, but still)",
                    "createdAt": "2024-03-14T20:47:06Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a7NqR",
                    "body": "```suggestion\r\ntheorem equiv_accepts : (equiv f g M).accepts = List.map f.symm ⁻¹' M.accepts := by\r\n```\r\nUsing the preimage of the inverse instead of the image has (usually) better definitional properties.",
                    "createdAt": "2024-03-14T20:48:54Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a7zk8",
                    "body": "Should this be a preimage by `h` instead? Either way, I think the docstring needs to be clearer about the semantics of this operation, since I can't tell from it whether preimage or image is more correct.",
                    "createdAt": "2024-03-15T00:30:44Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5a9U5b",
                    "body": "I suspect the answer is that we should have (at least) two things: `map : DFA α σ -> DFA α' σ` and `reindex : DFA α σ ~= DFA α σ'`",
                    "createdAt": "2024-03-15T09:55:04Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5a-stc",
                    "body": "Thanks both! Agree with the preimage. It does seem nicer not having an existential.\r\n\r\nI take @YaelDillies' naming suggestion, except I call the former `comap`, since the mapping function goes \"backwards\". (Similar to `SimpleGraph.comap`.) I also considered adding an equiv version for the alphabet but that's just `⟨comap f, comap f.symm⟩` so not very interesting.",
                    "createdAt": "2024-03-15T14:35:20Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a7zr7",
                    "body": "Can you add a lemma about `equiv refl refl` and `(equiv e f).symm = equiv e.symm f.symm`?",
                    "createdAt": "2024-03-15T00:31:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5a-rqj",
                    "body": "Added these for `comap` and `reindex`.",
                    "createdAt": "2024-03-15T14:32:26Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a-lGb",
                    "body": "Can you add a lemma that says `reindex` and `comap` commute?",
                    "createdAt": "2024-03-15T14:13:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5a-lPi",
                    "body": "can `simps` generate these?",
                    "createdAt": "2024-03-15T14:13:49Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5a-rDg",
                    "body": "Huh, I thought `simps` doesn't work on `Equiv`, but it turns out it does!",
                    "createdAt": "2024-03-15T14:30:49Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBgVN",
                    "body": "Nevermind. The `@[simps]` attribute generates `reindex_symm_step` etc. which conflict with the manually defined `reindex_symm`.\r\n\r\n```\r\n/- The `simpNF` linter reports:\r\nSOME SIMP LEMMAS ARE NOT IN SIMP-NORMAL FORM.\r\nsee note [simp-normal form] for tips how to debug this.\r\nhttps://leanprover-community.github.io/mathlib_docs/notes.html#simp-normal%20form -/\r\n-- Mathlib.Computability.DFA\r\nError: ./././Mathlib/Computability/DFA.lean:219:3: error: DFA.reindex_symm_apply_step.{u_1, u, v} simp can prove this:\r\n  by simp only [@DFA.reindex_symm, @DFA.reindex_apply_step, @Equiv.symm_symm]\r\nOne of the lemmas above could be a duplicate.\r\nIf that's not the case try reordering lemmas or adding @[priority].\r\n\r\nError: ./././Mathlib/Computability/DFA.lean:219:3: error: DFA.reindex_symm_apply_accept.{u_1, u, v} simp can prove this:\r\n  by simp only [@DFA.reindex_symm, @DFA.reindex_apply_accept, @Equiv.symm_symm]\r\nOne of the lemmas above could be a duplicate.\r\nIf that's not the case try reordering lemmas or adding @[priority].\r\n```",
                    "createdAt": "2024-03-16T07:10:41Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBh-n",
                    "body": "I found out there's `@[simps foo bar baz]` syntax that lets me specify the projections explicitly.",
                    "createdAt": "2024-03-16T07:40:48Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmPn",
                    "body": "```suggestion\ntheorem eval_comap (x : List α') : (M.comap f).eval x = M.eval (x.map f) := by simp [eval]\n```\n",
                    "createdAt": "2024-03-16T10:03:01Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmQi",
                    "body": "```suggestion\ntheorem accepts_comap : (M.comap f).accepts = List.map f ⁻¹' M.accepts := by\n```\n",
                    "createdAt": "2024-03-16T10:03:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmRR",
                    "body": "```suggestion\ntheorem evalFrom_reindex (s : σ') (x : List α) :\n```\n",
                    "createdAt": "2024-03-16T10:03:51Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmRz",
                    "body": "```suggestion\ntheorem symm_reindex : (reindex (α := α) g).symm = reindex g.symm := rfl\n```\n",
                    "createdAt": "2024-03-16T10:04:06Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmTf",
                    "body": "```suggestion\ntheorem eval_reindex (x : List α) : (reindex g M).eval x = g (M.eval x) := by simp [eval]\n```\n",
                    "createdAt": "2024-03-16T10:05:15Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmUq",
                    "body": "```suggestion\ntheorem accepts_reindex : (reindex g M).accepts = M.accepts := by\n```\n",
                    "createdAt": "2024-03-16T10:05:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmWY",
                    "body": "```suggestion\ntheorem comap_reindex : (reindex g M).comap f = reindex g (M.comap f) := by simp [comap, reindex]\n```\n",
                    "createdAt": "2024-03-16T10:06:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bBmXj",
                    "body": "```suggestion\ntheorem evalFrom_comap (s : σ) (x : List α') :\n```\n",
                    "createdAt": "2024-03-16T10:07:28Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bC85_",
                    "body": "```suggestion\r\ntheorem mem_acceptsFrom {start : σ} {x : List α} :\r\n    x ∈ M.acceptsFrom start ↔ M.evalFrom start x ∈ M.accept := by rfl\r\n```\r\nBtw should that lemma be simp?",
                    "createdAt": "2024-03-17T12:49:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bEY7j",
                    "body": "As [discussed on Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2311372.20DFA.2EacceptsFrom.2C.20DFA.2Emap.2C.20DFA.2Eequiv/near/427126311), I added some notes on this to the header docs.",
                    "createdAt": "2024-03-18T05:53:00Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJbo",
                    "body": "I will leave this conversation unresolved for the simp issue",
                    "createdAt": "2024-03-18T08:40:02Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bC86f",
                    "body": "```suggestion\r\ntheorem mem_accepts {x : List α} : x ∈ M.accepts ↔ M.eval x ∈ M.accept := by rfl\r\n```\r\nSimilarly, should that be simp?",
                    "createdAt": "2024-03-17T12:49:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bC88A",
                    "body": "I think you can be more precise than \"transforms\"",
                    "createdAt": "2024-03-17T12:49:58Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bEZJf",
                    "body": "I added some more detail – LMK what you think!\r\n\r\n```lean\r\n/--\r\n`M.comap f` pulls back the alphabet of `M` along `f`. In other words, it applies `f` to the input\r\nbefore passing it to `M`.\r\n-/\r\n```",
                    "createdAt": "2024-03-18T05:53:50Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJPO",
                    "body": "Looks good!",
                    "createdAt": "2024-03-18T08:39:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bC8-s",
                    "body": "@digama0, this is a good example of situation where we really want nested `where` notation",
                    "createdAt": "2024-03-17T12:50:56Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bC-Fw",
                    "body": "Or  `step s a := g.symm (M.step (g s) a)` notation within `{}`",
                    "createdAt": "2024-03-17T13:12:21Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bDAyb",
                    "body": "Yep, I remember trying both of those syntaxes and realizing neither work 😢 ",
                    "createdAt": "2024-03-17T13:45:29Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bE802",
                    "body": "I would call the argument just `(s : σ)`. The current name has a potential for confusion with `M.start`.",
                    "createdAt": "2024-03-18T08:03:24Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJHw",
                    "body": "I agree that I currently read it as a declaration name, not a variable name.",
                    "createdAt": "2024-03-18T08:39:10Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJ3u",
                    "body": "That's what I meant, thanks for putting it into appropriate words!",
                    "createdAt": "2024-03-18T08:41:05Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bpKTG",
                    "body": "Thanks, renamed to `s`.",
                    "createdAt": "2024-03-25T12:32:28Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bE9Dp",
                    "body": "Some tag?",
                    "createdAt": "2024-03-18T08:04:09Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJgP",
                    "body": "See https://github.com/leanprover-community/mathlib4/pull/11372#discussion_r1527500415",
                    "createdAt": "2024-03-18T08:40:12Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bE_1-",
                    "body": "I am confused by explicit arguments being inserted from `variable`. Afaik this is a matter of style and you can keep it your way.",
                    "createdAt": "2024-03-18T08:12:42Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJt7",
                    "body": "I agree it is quite confusing. I prefer to get exactly the implicit arguments from `variable` statements",
                    "createdAt": "2024-03-18T08:40:42Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFLJY",
                    "body": "This is exactly what I would do, but I don't want to impose my style on others so much. I guess if I really care about it, I should make a RFC for a convention to use `variable` only with `{}` and `[]` and possibly a linter for that, which does not belong to this PR. So @lambda-fairy feel free to ignore this comment. At this moment, this style issue is up to you.",
                    "createdAt": "2024-03-18T08:44:23Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5cDLVJ",
                    "body": "I don't really mind either way. I've changed it to be more explicit.",
                    "createdAt": "2024-03-29T10:27:15Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFBT6",
                    "body": "The `g` first appears in `def reindex`.",
                    "createdAt": "2024-03-18T08:16:53Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFDkf",
                    "body": "I am a bit suspicious that somebody might later need a more general version than `σ ≃ σ'` but I don't mind keeping this definition as it is.",
                    "createdAt": "2024-03-18T08:23:30Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFH-m",
                    "body": "What would the more general version look like?",
                    "createdAt": "2024-03-18T08:35:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJPs",
                    "body": "In my project, I ended up needing this construction:\r\nhttps://github.com/madvorak/chomsky/blob/a27e2145c36b0a96faf405cb415d020dae97b04a/Grammars/Classes/Unrestricted/Basics/Lifting.lean#L35\r\n\r\nThe explanation (but written for Lean 3) is here:\r\nhttps://arxiv.org/abs/2302.06420 (page 6)\r\n\r\nI don't have a particular argument why something similar should be useful for DFAs, just a gut feeling.",
                    "createdAt": "2024-03-18T08:39:33Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFKM2",
                    "body": "The analogy is a bit obfuscated by the fact that what you call `σ` is bundled into the structure in my project.",
                    "createdAt": "2024-03-18T08:41:55Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFNfY",
                    "body": "I guess it might come handy when proving that regular expressions and DFAs are equivalent (TODO in `RegularExpressions.lean`).",
                    "createdAt": "2024-03-18T08:50:10Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFNy5",
                    "body": "However, it would probably be done on the `NFA` structure, so irrelevant for now I guess.",
                    "createdAt": "2024-03-18T08:50:57Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFEwp",
                    "body": "I don't know what `simps` does, so I will leave this line for someone else to review.",
                    "createdAt": "2024-03-18T08:26:51Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFJyZ",
                    "body": "It's okay",
                    "createdAt": "2024-03-18T08:40:51Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFLjv",
                    "body": "Thanks for the check!",
                    "createdAt": "2024-03-18T08:45:22Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFFqv",
                    "body": "Why is `(g.symm s)` better than `(g.invFun s)` in the statement? The proof would stay the same.",
                    "createdAt": "2024-03-18T08:29:22Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFGfb",
                    "body": "`.invFun` should never appear in any statement",
                    "createdAt": "2024-03-18T08:31:35Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFG1g",
                    "body": "The current statement is interpreted as `(reindex g M).evalFrom s x = g (M.evalFrom (g.symm.toFun s) x)` afaik.",
                    "createdAt": "2024-03-18T08:32:33Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFG4k",
                    "body": "Yeah, I think this follows the same reasoning as `.toFun`.\r\n\r\nThere is also a simp lemma that rewrites to `.symm`: https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Equiv/Defs.html#Equiv.invFun_as_coe",
                    "createdAt": "2024-03-18T08:32:42Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFHcT",
                    "body": "I don't want to argue against the current version. Just tell me why we don't go with the more elementary version. I am not asking you to change it. Just please explain it to me.",
                    "createdAt": "2024-03-18T08:34:17Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFIw6",
                    "body": "> The current statement is interpreted as `(reindex g M).evalFrom s x = g (M.evalFrom (g.symm.toFun s) x)` afaik.\r\n\r\nNo that's not right. It's interpreted as `(reindex g M).evalFrom s x = ⇑g (M.evalFrom (⇑g.symm s) x)` where `⇑` is `FunLike.coe`.\r\n\r\n`g.invFun` is not used because we've decided to use `⇑g.symm` instead as it gives access to more API. That's it, really.",
                    "createdAt": "2024-03-18T08:38:09Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFK1f",
                    "body": "I believe the reason is that there are many more lemmas for `.symm`. The only lemmas I could find for `.invFun` are those that convert it to `.symm`.\r\n\r\nAlso, because `Equiv.invFun_as_coe` is a simp lemma, its RHS (`⇑e.symm`) is considered the normal form. I'm not 100% sure on this, but it'll probably trigger a linter warning if we use `invFun` instead.",
                    "createdAt": "2024-03-18T08:43:33Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5bFMSS",
                    "body": "Thank you very much for your explanation! This is completely reasonable.",
                    "createdAt": "2024-03-18T08:47:00Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5cDNyO",
                    "body": "I don't think it depends on the question above, assuming the question above also talks about `accepts` vs `acceptsFrom`",
                    "createdAt": "2024-03-29T10:40:10Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5cDWvC",
                    "body": "I've removed that sentence.",
                    "createdAt": "2024-03-29T11:24:28Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5cDOQR",
                    "body": "```suggestion\r\n## TODO\r\n\r\n```",
                    "createdAt": "2024-03-29T10:42:00Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5cDqcj",
                    "body": "```suggestion\r\ndef comap (f : α' → α) (M : DFA α σ) : DFA α' σ where\r\n```\r\nso that `comap f` makes sense",
                    "createdAt": "2024-03-29T12:41:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE1NzIzMjM=",
              "login": "lambda-fairy"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGUQ8AIA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827255014/job/27129741344"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR15yQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806029/job/26996472265"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGUQ7_ww",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827255011/job/27129741251"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR14xA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806017/job/26996472004"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR12vQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996471485"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR14Vw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996471895"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR16wQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806011/job/26996472513"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGUQ7_yQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9827255014/job/27129741257"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR17NQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996472629"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR12ew",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996471419"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR14hA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778806011/job/26996471940"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR18yg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996473034"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR175Q",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996472805"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR14iQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996471945"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR16dw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996472439"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR1-fA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805972/job/26996473468"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSSWCmQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9778805974/job/26996998809"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR2ffg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26996481918"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGSR3fIA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11372&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHCFBj8g",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4329",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: DFA.acceptsFrom, DFA.map, DFA.equiv",
        "updatedAt": "2024-07-14T20:14:49Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/11372",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALSURIW",
              "createdAt": "2024-03-14T13:36:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6CUe-bzwAAAALSURIh",
              "createdAt": "2024-03-14T13:36:09Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6CUe-bzwAAAALSURI_",
              "createdAt": "2024-03-14T13:36:09Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY2NDMxMTY=",
                "login": "madvorak"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6CUe-bzwAAAALSURJM",
              "createdAt": "2024-03-14T13:36:09Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Ra2F9",
              "createdAt": "2024-03-14T13:36:51Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5pVsG0",
                "title": "feat: Myhill–Nerode theorem",
                "url": "https://github.com/leanprover-community/mathlib4/pull/11311"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zfows",
              "createdAt": "2024-03-14T20:35:29Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zgnEN",
              "createdAt": "2024-03-15T00:30:44Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zgnNa",
              "createdAt": "2024-03-15T00:31:45Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zk9Xt",
              "createdAt": "2024-03-15T14:13:25Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zk9k6",
              "createdAt": "2024-03-15T14:13:49Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6CUe-bzwAAAALTJw0M",
              "createdAt": "2024-03-15T14:24:41Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAALTKu0J",
              "createdAt": "2024-03-15T14:42:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALTKu0X",
              "createdAt": "2024-03-15T14:42:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zsWsN",
              "createdAt": "2024-03-16T10:03:01Z",
              "body": "Use of dot notation should not change the name of the lemma. A lemma of the form `(foo a).bar = _` should be called `bar_foo`, not `foo_bar`.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAALTl1bE",
              "createdAt": "2024-03-16T11:56:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALTl1bG",
              "createdAt": "2024-03-16T11:56:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zuG8Y",
              "createdAt": "2024-03-17T12:49:05Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAALT7wVz",
              "createdAt": "2024-03-18T04:04:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALT7wV2",
              "createdAt": "2024-03-18T04:04:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAALT-Vxi",
              "createdAt": "2024-03-18T05:54:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALT-Vxl",
              "createdAt": "2024-03-18T05:54:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zw5fa",
              "createdAt": "2024-03-18T08:03:24Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zw5yf",
              "createdAt": "2024-03-18T08:04:08Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zw9nZ",
              "createdAt": "2024-03-18T08:12:42Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zw_gu",
              "createdAt": "2024-03-18T08:16:53Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zxCeI",
              "createdAt": "2024-03-18T08:23:29Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zxEAW",
              "createdAt": "2024-03-18T08:26:51Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zxFMh",
              "createdAt": "2024-03-18T08:29:22Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53Zj_v",
              "createdAt": "2024-03-18T08:29:59Z",
              "body": "Very nice work, I like it!",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALZjapn",
              "createdAt": "2024-03-25T19:44:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c51UZZ5",
              "createdAt": "2024-03-29T10:40:10Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c51VE9h",
              "createdAt": "2024-03-29T12:41:24Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAALc4XzU",
              "createdAt": "2024-03-29T14:43:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAALc4Xza",
              "createdAt": "2024-03-29T14:43:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6CUe-bzwAAAAMH-uGS",
              "createdAt": "2024-06-03T10:33:32Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6CUe-bzwAAAAMdiAVC",
              "createdAt": "2024-07-03T13:01:19Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DfUum",
              "createdAt": "2024-07-03T13:01:56Z",
              "body": "### PR summary [f1a5179f2f](https://github.com/leanprover-community/mathlib4/pull/11372/commits/f1a5179f2f079a1f58bfd020b54e944e7f5ff810)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Computability.DFA | 595 | 596 | +1 (+0.17%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>3 files</summary> `Mathlib.Computability.DFA` `Mathlib.Computability.NFA` `Mathlib.Computability.EpsilonNFA`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ acceptsFrom`\n`+ accepts_comap`\n`+ accepts_reindex`\n`+ comap`\n`+ comap_id`\n`+ comap_reindex`\n`+ evalFrom_comap`\n`+ evalFrom_reindex`\n`+ eval_comap`\n`+ eval_reindex`\n`+ mem_acceptsFrom`\n`+ reindex`\n`+ reindex_refl`\n`+ symm_reindex`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAAMdk0kF",
              "createdAt": "2024-07-03T13:49:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAAMdk0kQ",
              "createdAt": "2024-07-03T13:49:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dftd2",
              "createdAt": "2024-07-03T13:50:00Z",
              "body": "Sorry about the wait! Should be ready for review again. PTAL!",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6A2zff",
              "createdAt": "2024-07-07T12:26:19Z",
              "body": "maintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6D3w2A",
              "createdAt": "2024-07-07T12:26:31Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAAMfiZZj",
              "createdAt": "2024-07-07T12:26:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6CUe-bzwAAAAMhHhBk",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ExHnm",
              "createdAt": "2024-07-14T20:04:40Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6CUe-bzwAAAAMklQS3",
              "createdAt": "2024-07-14T20:04:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ExITE",
              "createdAt": "2024-07-14T20:14:46Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9930388293/job/27429068855)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9930388293/job/27429068928)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6CUe-bzwAAAAMklUjl",
              "createdAt": "2024-07-14T20:14:46Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6CUe-bzwAAAAMklUkn",
              "createdAt": "2024-07-14T20:14:49Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UOlp-",
              "createdAt": "2024-08-01T17:33:58Z",
              "source": {
                "id": "PR_kwDOFcwZ1c529Mz2",
                "title": "feat: MiM PR report",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
              }
            }
          ]
        }
      }
    }
  }
}
