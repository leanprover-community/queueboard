{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 5018,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "yuma-mizuno"
        },
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 35,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6IyueB",
              "body": "### PR summary [1812abeef2](https://github.com/leanprover-community/mathlib4/pull/15925/commits/1812abeef267e8edbd7abdb11b2895b156f8f827)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic.CategoryTheory.Monoidal | 395 | 288 | -107 (-27.09%) |\n| Mathlib.Tactic.Widget.StringDiagram | 399 | 301 | -98 (-24.56%) |\n| Mathlib.CategoryTheory.Bicategory.Adjunction | 395 | 298 | -97 (-24.56%) |\n| Mathlib.CategoryTheory.Monoidal.CoherenceLemmas | 395 | 298 | -97 (-24.56%) |\n| Mathlib.CategoryTheory.Monoidal.Opposite | 395 | 298 | -97 (-24.56%) |\n| Mathlib.CategoryTheory.Bicategory.Kan.Adjunction | 436 | 428 | -8 (-1.83%) |\n| Mathlib.CategoryTheory.Monoidal.Braided.Basic | 402 | 396 | -6 (-1.49%) |\n| Mathlib.CategoryTheory.Monoidal.Rigid.Basic | 426 | 421 | -5 (-1.17%) |\n| Mathlib.CategoryTheory.Monoidal.Rigid.Braided | 434 | 429 | -5 (-1.15%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.CategoryTheory.Monoidal`|-107|\n| `Mathlib.Tactic.Widget.StringDiagram`|-98|\n|<details><summary>3 files</summary> `Mathlib.CategoryTheory.Monoidal.CoherenceLemmas` `Mathlib.CategoryTheory.Monoidal.Opposite` `Mathlib.CategoryTheory.Bicategory.Adjunction`</details>|-97|\n| `Mathlib.CategoryTheory.Bicategory.Kan.Adjunction`|-8|\n|<details><summary>4 files</summary> `Mathlib.CategoryTheory.Monoidal.Center` `Mathlib.CategoryTheory.Monoidal.FunctorCategory` `Mathlib.CategoryTheory.Monoidal.Braided.Opposite` `Mathlib.CategoryTheory.Monoidal.Braided.Basic`</details>|-6|\n|<details><summary>54 files</summary> `Mathlib.LinearAlgebra.QuadraticForm.QuadraticModuleCat.Symmetric` `Mathlib.Algebra.Category.FGModuleCat.Limits` `Mathlib.CategoryTheory.Closed.FunctorCategory` `Mathlib.CategoryTheory.Monoidal.Skeleton` `Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence` `Mathlib.Algebra.Category.ModuleCat.Adjunctions` `Mathlib.CategoryTheory.Enriched.Basic` `Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric` `Mathlib.CategoryTheory.Closed.Ideal` `Mathlib.CategoryTheory.Monoidal.Rigid.OfEquivalence` `Mathlib.CategoryTheory.Monoidal.OfChosenFiniteProducts.Symmetric` `Mathlib.RepresentationTheory.Rep` `Mathlib.CategoryTheory.Closed.Functor` `Mathlib.CategoryTheory.Monoidal.Hopf_` `Mathlib.CategoryTheory.Monad.EquivMon` `Mathlib.CategoryTheory.Monoidal.Types.Basic` `Mathlib.CategoryTheory.Monoidal.Bimon_` `Mathlib.CategoryTheory.ChosenFiniteProducts.Cat` `Mathlib.CategoryTheory.ChosenFiniteProducts.FunctorCategory` `Mathlib.AlgebraicTopology.SimplicialSet.Monoidal` `Mathlib.CategoryTheory.Monoidal.Internal.Types` `Mathlib.RepresentationTheory.Invariants` `Mathlib.CategoryTheory.Sites.CartesianClosed` `Mathlib.CategoryTheory.Monoidal.Types.Coyoneda` `Mathlib.CategoryTheory.Monoidal.Mod_` `Mathlib.CategoryTheory.Monoidal.Cartesian.Comon_` `Mathlib.RepresentationTheory.Character` `Mathlib.CategoryTheory.Monoidal.Mon_` `Mathlib.CategoryTheory.Monoidal.Internal.FunctorCategory` `Mathlib.RepresentationTheory.Action.Monoidal` `Mathlib.Algebra.Category.AlgebraCat.Symmetric` `Mathlib.CategoryTheory.Monoidal.Limits` `Mathlib.CategoryTheory.Dialectica.Monoidal` `Mathlib.Algebra.Category.ModuleCat.Monoidal.Closed` `Mathlib.CategoryTheory.Monoidal.Internal.Limits` `Mathlib.CategoryTheory.Monoidal.Rigid.FunctorCategory` `Mathlib.Algebra.Category.FGModuleCat.Basic` `Mathlib.CategoryTheory.Monoidal.Comon_` `Mathlib.CategoryTheory.Monoidal.Rigid.Braided` `Mathlib.CategoryTheory.Monoidal.Rigid.Basic` `Mathlib.CategoryTheory.Closed.Types` `Mathlib.CategoryTheory.Monoidal.Subcategory` `Mathlib.CategoryTheory.Monoidal.OfHasFiniteProducts` `Mathlib.RepresentationTheory.FDRep` `Mathlib.CategoryTheory.Monoidal.Internal.Module` `Mathlib.CategoryTheory.GradedObject.Braiding` `Mathlib.CategoryTheory.Monoidal.CommMon_` `Mathlib.CategoryTheory.Monoidal.Types.Symmetric` `Mathlib.CategoryTheory.ChosenFiniteProducts` `Mathlib.CategoryTheory.Closed.Zero` `Mathlib.CategoryTheory.Monoidal.Bimod` `Mathlib.CategoryTheory.Closed.Cartesian` `Mathlib.AlgebraicTopology.SimplicialCategory.Basic` `Mathlib.CategoryTheory.Monoidal.Conv`</details>|-5|\n|<details><summary>4 files</summary> `Mathlib.RepresentationTheory.GroupCohomology.Hilbert90` `Mathlib.RepresentationTheory.GroupCohomology.Resolution` `Mathlib.RepresentationTheory.GroupCohomology.Basic` `Mathlib.RepresentationTheory.GroupCohomology.LowDegree`</details>|-4|\n|<details><summary>11 files</summary> `Mathlib.Condensed.Limits` `Mathlib.Condensed.Light.Explicit` `Mathlib.Condensed.Explicit` `Mathlib.Condensed.Module` `Mathlib.Condensed.Light.CartesianClosed` `Mathlib.Condensed.Solid` `Mathlib.Condensed.Light.Epi` `Mathlib.Condensed.Light.Limits` `Mathlib.Condensed.CartesianClosed` `Mathlib.Condensed.Light.Module` `Mathlib.Condensed.Epi`</details>|-3|\n| `Mathlib.Tactic.CategoryTheory.Coherence.Datatypes`|1|\n| `Mathlib.Tactic.CategoryTheory.Coherence.PureCoherence` `Mathlib.Tactic.CategoryTheory.Coherence.Normalize`|2|\n| `Mathlib.Tactic`|11|\n| `Mathlib.Tactic.CategoryTheory.Coherence.Basic`|268|\n| `Mathlib.Tactic.CategoryTheory.Bicategory.PureCoherence`|276|\n| `Mathlib.Tactic.CategoryTheory.Bicategory.Normalize`|278|\n| `Mathlib.Tactic.CategoryTheory.Monoidal.Datatypes`|289|\n| `Mathlib.Tactic.CategoryTheory.Monoidal.Normalize` `Mathlib.Tactic.CategoryTheory.Monoidal.PureCoherence`|291|\n| `Mathlib.Tactic.CategoryTheory.Monoidal.Basic`|295|\n| `Mathlib.Tactic.CategoryTheory.CoherenceNew`|297|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Atom`\n`+ AtomIso`\n`+ Atom₁`\n`+ Atom₁.mkM`\n`+ BicategoricalCoherence.hom`\n`+ BicategoryM`\n`+ CoherenceHom`\n`+ CoherenceM`\n`+ CoherenceM.run`\n`+ Eval.Result`\n`+ HorizontalComp`\n`+ HorizontalComp.e`\n`+ HorizontalComp.nodes`\n`+ HorizontalComp.srcM`\n`+ HorizontalComp.tgtM`\n`+ IsoLift`\n`+ Kind`\n`+ Kind.name`\n`+ List.splitEvenOdd`\n`+ MkAtom₁`\n`+ MkEqOfNaturality`\n`+ MkEval`\n`+ MkEvalComp`\n`+ MkEvalHorizontalComp`\n`+ MkEvalWhiskerLeft`\n`+ MkEvalWhiskerRight`\n`+ MkMor₁`\n`+ MkMor₂`\n`+ MonadCoherehnceHom`\n`+ MonadHorizontalComp`\n`+ MonadMor₁`\n`+ MonadMor₂`\n`+ MonadMor₂Iso`\n`+ MonadNormalExpr`\n`+ MonadNormalizeNaturality`\n`+ MonadWhiskerLeft`\n`+ MonadWhiskerRight`\n`+ MonoidalM`\n`+ Mor₁`\n`+ Mor₁.e`\n`+ Mor₁.src`\n`+ Mor₁.tgt`\n`+ Mor₁.toList`\n`+ Mor₂`\n`+ Mor₂.e`\n`+ Mor₂.isoLift?`\n`+ Mor₂.srcM`\n`+ Mor₂.tgtM`\n`+ Mor₂Iso`\n`+ Mor₂Iso.e`\n`+ Mor₂Iso.isStructural`\n`+ Mor₂Iso.srcM`\n`+ Mor₂Iso.tgtM`\n`+ NormalExpr`\n`+ NormalExpr.e`\n`+ NormalExpr.srcM`\n`+ NormalExpr.tgtM`\n`+ NormalExpr.toList`\n`+ Normalize.Result`\n`+ NormalizedHom`\n`+ NormalizedHom.consM`\n`+ NormalizedHom.e`\n`+ NormalizedHom.src`\n`+ NormalizedHom.tgt`\n`+ Obj`\n`+ Obj.e`\n`+ State`\n`+ StringDiagramM`\n`+ StringDiagramM.run`\n`+ Structural`\n`+ StructuralAtom`\n`+ StructuralAtom.e`\n`+ StructuralAtom.srcM`\n`+ StructuralAtom.tgtM`\n`+ StructuralOfExpr_bicategoricalComp`\n`+ StructuralOfExpr_monoidalComp`\n`+ WhiskerLeft`\n`+ WhiskerLeft.e`\n`+ WhiskerLeft.nodes`\n`+ WhiskerLeft.srcM`\n`+ WhiskerLeft.tgtM`\n`+ WhiskerRight`\n`+ WhiskerRight.e`\n`+ WhiskerRight.nodes`\n`+ WhiskerRight.srcM`\n`+ WhiskerRight.tgtM`\n`+ associatorInvM`\n`+ associatorM`\n`+ associatorM'`\n`+ bicategory`\n`+ coherence`\n`+ coherenceHomM'`\n`+ comp?`\n`+ eval`\n`+ evalComp`\n`+ evalCompNil`\n`+ evalHorizontalCompAux'_of_whisker`\n`+ evalHorizontalCompAux'_whisker`\n`+ evalHorizontalCompAux_cons`\n`+ evalHorizontalCompAux_of`\n`+ evalHorizontalComp_cons_cons`\n`+ evalHorizontalComp_cons_nil`\n`+ evalHorizontalComp_nil_cons`\n`+ evalHorizontalComp_nil_nil`\n`+ evalWhiskerLeft`\n`+ evalWhiskerRightAux_cons`\n`+ evalWhiskerRight_cons_of`\n`+ eval_bicategoricalComp`\n`+ eval_tensorHom`\n`+ idM`\n`+ id₁?`\n`+ id₂M'`\n`+ instance : BicategoryLike.Context Bicategory.Context`\n`+ instance : BicategoryLike.Context Monoidal'.Context`\n`+ instance : BicategoryLike.MkMor₂ BicategoryM`\n`+ instance : BicategoryLike.MkMor₂ MonoidalM`\n`+ instance : MkEqOfNaturality MonoidalM`\n`+ instance : MkEval BicategoryM`\n`+ instance : MkEval MonoidalM`\n`+ instance : MkEvalComp BicategoryM`\n`+ instance : MkEvalComp MonoidalM`\n`+ instance : MkEvalHorizontalComp BicategoryM`\n`+ instance : MkEvalHorizontalComp MonoidalM`\n`+ instance : MkEvalWhiskerLeft BicategoryM`\n`+ instance : MkEvalWhiskerLeft MonoidalM`\n`+ instance : MkEvalWhiskerRight BicategoryM`\n`+ instance : MkEvalWhiskerRight MonoidalM`\n`+ instance : MkMor₁ BicategoryM`\n`+ instance : MkMor₁ MonoidalM`\n`+ instance : MkMor₂ BicategoryM`\n`+ instance : MkMor₂ MonoidalM`\n`+ instance : MonadCoherehnceHom BicategoryM`\n`+ instance : MonadCoherehnceHom MonoidalM`\n`+ instance : MonadMor₁ BicategoryM`\n`+ instance : MonadMor₁ MonoidalM`\n`+ instance : MonadMor₂ BicategoryM`\n`+ instance : MonadMor₂ MonoidalM`\n`+ instance : MonadMor₂Iso BicategoryM`\n`+ instance : MonadMor₂Iso MonoidalM`\n`+ instance : MonadNormalExpr BicategoryM`\n`+ instance : MonadNormalExpr MonoidalM`\n`+ instance : MonadNormalizeNaturality BicategoryM`\n`+ instance : MonadNormalizeNaturality MonoidalM`\n`+ instance : MonadStructuralAtom BicategoryM`\n`+ isComp₁?`\n`+ isId₁?`\n`+ leftUnitorInvM`\n`+ leftUnitorM`\n`+ leftUnitorM'`\n`+ main`\n`+ mkContext`\n`+ mkKind`\n`+ mk_eq`\n`+ mk_eq_of_cons`\n`+ mk_eq_of_naturality`\n`+ mk_eq_of_normalized_eq`\n`+ monoidal`\n`+ naturality_tensorHom`\n`+ normalForm`\n`+ normalize`\n`+ normalizedHom.nilM`\n`+ ofAtomM`\n`+ ofM`\n`+ ofNormalizedEq`\n`+ pureCoherenceMain`\n`+ rightUnitorInvM`\n`+ rightUnitorM`\n`+ rightUnitorM'`\n`+ srcExpr?`\n`+ structuralIsoOfExpr_horizontalComp`\n`+ structuralIso_inv`\n`+ synthMonoidalError`\n`+ tgtExpr?`\n`+ traceProof`\n`++ evalComp_cons`\n`++ evalComp_nil_cons`\n`++ evalComp_nil_nil`\n`++ evalWhiskerLeft_comp`\n`++ evalWhiskerLeft_id`\n`++ evalWhiskerLeft_nil`\n`++ evalWhiskerLeft_of_cons`\n`++ evalWhiskerRightAux_of`\n`++ evalWhiskerRight_comp`\n`++ evalWhiskerRight_cons_of_of`\n`++ evalWhiskerRight_cons_whisker`\n`++ evalWhiskerRight_id`\n`++ evalWhiskerRight_nil`\n`++ eval_comp`\n`++ eval_monoidalComp`\n`++ eval_of`\n`++ eval_whiskerLeft`\n`++ eval_whiskerRight`\n`++ mkContext?`\n`++ monoidalNf`\n`++ naturality_associator`\n`++ naturality_comp`\n`++ naturality_id`\n`++ naturality_inv`\n`++ naturality_leftUnitor`\n`++ naturality_rightUnitor`\n`++ naturality_whiskerLeft`\n`++ naturality_whiskerRight`\n`++ normalizeIsoComp`\n`++ of_normalize_eq`\n`++ srcExpr`\n`++ srcExprOfIso`\n`++ structuralIsoOfExpr_comp`\n`++ structuralIsoOfExpr_whiskerLeft`\n`++ structuralIsoOfExpr_whiskerRight`\n`++ tgtExpr`\n`++ tgtExprOfIso`\n`+++ Context`\n`+++ pureCoherence`\n`- WhiskerLeftExpr.atom`\n`- WhiskerLeftExpr.nodes`\n`- WhiskerRightExpr.atom`\n`- WhiskerRightExpr.nodes`\n`- fromExpr`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-17T22:07:59Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-08-17T22:07:12Z",
        "deletions": 265,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Adjunction.lean",
              "additions": 23,
              "deletions": 18
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Kan/Adjunction.lean",
              "additions": 64,
              "deletions": 41
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Braided/Basic.lean",
              "additions": 11,
              "deletions": 12
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/CoherenceLemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Opposite.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean",
              "additions": 9,
              "deletions": 13
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Rigid/Braided.lean",
              "additions": 12,
              "deletions": 10
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/BicategoricalComp.lean",
              "additions": 22,
              "deletions": 18
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Bicategory/Normalize.lean",
              "additions": 556,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Bicategory/PureCoherence.lean",
              "additions": 792,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence.lean",
              "additions": 7,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/Basic.lean",
              "additions": 93,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/Datatypes.lean",
              "additions": 467,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/Normalize.lean",
              "additions": 586,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/PureCoherence.lean",
              "additions": 197,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/CoherenceNew.lean",
              "additions": 79,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal.lean",
              "additions": 20,
              "deletions": 41
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/Basic.lean",
              "additions": 40,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/Datatypes.lean",
              "additions": 504,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/Normalize.lean",
              "additions": 791,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/PureCoherence.lean",
              "additions": 279,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/MonoidalComp.lean",
              "additions": 17,
              "deletions": 30
            },
            {
              "path": "Mathlib/Tactic/Widget/StringDiagram.lean",
              "additions": 86,
              "deletions": 57
            },
            {
              "path": "lake-manifest.json",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/noshake.json",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Bicategory.lean",
              "additions": 111,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Coherence.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/CoherenceNew.lean",
              "additions": 120,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Monoidal.lean",
              "additions": 33,
              "deletions": 18
            },
            {
              "path": "test/CategoryTheory/Monoidal/Basic.lean",
              "additions": 27,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Monoidal/Normalize.lean",
              "additions": 41,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/MonoidalComp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/StringDiagram.lean",
              "additions": 4,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ymizuno-coherence-nondefeq",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c54phLH",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "number": 15925,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4Ymw",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263593/job/29840251035"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YDQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263591/job/29840250893"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YTw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263595/job/29840250959"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4XXw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250719"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4Xqg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250794"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YYA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250976"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YJg",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263593/job/29840250918"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4X7Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4X5g",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250854"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4XVg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250710"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YUg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250962"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4XpA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250788"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4Yuw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840251067"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p5x4Q",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840273889"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4gig",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29840253066"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p5BsA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15925&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Monoida): proof producing coherence tactic",
        "updatedAt": "2024-09-09T03:09:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15925"
      }
    }
  }
}
