{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 5018,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "yuma-mizuno"
        },
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 35,
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-08-17T22:07:12Z",
        "deletions": 265,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Adjunction.lean",
              "additions": 23,
              "deletions": 18
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/Kan/Adjunction.lean",
              "additions": 64,
              "deletions": 41
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Braided/Basic.lean",
              "additions": 11,
              "deletions": 12
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/CoherenceLemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Opposite.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean",
              "additions": 9,
              "deletions": 13
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Rigid/Braided.lean",
              "additions": 12,
              "deletions": 10
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/BicategoricalComp.lean",
              "additions": 22,
              "deletions": 18
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Bicategory/Normalize.lean",
              "additions": 556,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Bicategory/PureCoherence.lean",
              "additions": 792,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence.lean",
              "additions": 7,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/Basic.lean",
              "additions": 93,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/Datatypes.lean",
              "additions": 467,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/Normalize.lean",
              "additions": 586,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence/PureCoherence.lean",
              "additions": 197,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/CoherenceNew.lean",
              "additions": 79,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal.lean",
              "additions": 20,
              "deletions": 41
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/Basic.lean",
              "additions": 40,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/Datatypes.lean",
              "additions": 504,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/Normalize.lean",
              "additions": 791,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Monoidal/PureCoherence.lean",
              "additions": 279,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/MonoidalComp.lean",
              "additions": 17,
              "deletions": 30
            },
            {
              "path": "Mathlib/Tactic/Widget/StringDiagram.lean",
              "additions": 86,
              "deletions": 57
            },
            {
              "path": "lake-manifest.json",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/noshake.json",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Bicategory.lean",
              "additions": 111,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Coherence.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/CoherenceNew.lean",
              "additions": 120,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Monoidal.lean",
              "additions": 33,
              "deletions": 18
            },
            {
              "path": "test/CategoryTheory/Monoidal/Basic.lean",
              "additions": 27,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/Monoidal/Normalize.lean",
              "additions": 41,
              "deletions": 0
            },
            {
              "path": "test/CategoryTheory/MonoidalComp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/StringDiagram.lean",
              "additions": 4,
              "deletions": 0
            }
          ]
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c54phLH",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "number": 15925,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4Ymw",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263593/job/29840251035"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YDQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263591/job/29840250893"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YTw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263595/job/29840250959"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4XXw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250719"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4Xqg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250794"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YYA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250976"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YJg",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263593/job/29840250918"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4X7Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4X5g",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250854"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4XVg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250710"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4YUg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840250962"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4XpA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840250788"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4Yuw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263557/job/29840251067"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p5x4Q",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10761263558/job/29840273889"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p4gig",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29840253066"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG8p5BsA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15925&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Monoida): proof producing coherence tactic",
        "updatedAt": "2024-09-09T03:09:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15925"
      }
    }
  }
}
