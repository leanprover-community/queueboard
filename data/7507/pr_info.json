{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 182,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ocfnash"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "These are all motivated by a result I've proved but I believe they make sense in their own right so I have split them out in the hopes of simplifying review.\r\n\r\n\r\n---\r\n\r\nThis file `Mathlib.Algebra.Lie.Submodule` is now quite long and has lots and lots of scope to be tidied / split. I'm happy to do this but advocate for it happening in a future PR.\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-10-08T22:03:17Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5obvLI",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-10-08T16:40:03Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ob8io",
              "body": "bors merge",
              "createdAt": "2023-10-08T20:38:11Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ocArC",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6449865953/job/17508640833)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6449865953/job/17508640883)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6449865953/job/17508640924)",
              "createdAt": "2023-10-08T22:03:16Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e9a77251d9efdb94a474256ee8a80e773df8efb4",
                "additions": 134,
                "deletions": 0,
                "committedDate": "2023-10-04T15:21:17Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1548f2c055266512877e2cb520dd514d2c0c7a1f",
                "additions": 2594,
                "deletions": 954,
                "committedDate": "2023-10-06T14:22:08Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4c6fdcd1ae2d8d251683dfba2ff51201eb8193df",
                "additions": 25,
                "deletions": 1,
                "committedDate": "2023-10-06T14:35:14Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8e9528d39a416a9a62517701583380bba49e0419",
                "additions": 17,
                "deletions": 3,
                "committedDate": "2023-10-06T20:45:03Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e481b11ea0342f7d220be4416bfa621e56a74db3",
                "additions": 34,
                "deletions": 28,
                "committedDate": "2023-10-08T09:49:35Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "54a43a8227509c8b9ef3a5a2ac17cea9f61b70d7",
                "additions": 7,
                "deletions": 5,
                "committedDate": "2023-10-08T10:20:43Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f8def15965aa6368b8c41ebdc12488d9a63a8338",
                "additions": 6,
                "deletions": 11,
                "committedDate": "2023-10-08T11:16:26Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "871a5a2ecc265c6277d7dd4f7388a9243a5907fc",
                "additions": 7,
                "deletions": 6,
                "committedDate": "2023-10-08T19:56:18Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-04T15:24:38Z",
        "deletions": 6,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Lie/Basic.lean",
              "additions": 9,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Lie/Nilpotent.lean",
              "additions": 20,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Lie/OfAssociative.lean",
              "additions": 17,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Lie/Submodule.lean",
              "additions": 128,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/Basic.lean",
              "additions": 8,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ocfnash/lie_lemmas",
        "headRefOid": "871a5a2ecc265c6277d7dd4f7388a9243a5907fc",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5b6jj8",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5jKHoC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T20:27:10Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7507,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5jH_dz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:51:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jH_er",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:52:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jH_hj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:53:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jH_jW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:55:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jH_lB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:56:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jH_le",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:56:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jH_mp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-07T10:57:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jImnn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T09:44:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jImpO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T09:45:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jImpy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T09:45:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jImxE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T09:49:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jIm05",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T09:50:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jIm9p",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T09:54:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jIsVR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T11:40:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jJJ7u",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T16:40:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jJKL2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T16:40:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKGGb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T19:50:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKGG6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T19:51:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKGM3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T19:54:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKGNo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T19:55:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKGOH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T19:55:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKGOb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-08T19:55:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKHmO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T20:26:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKHoC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T20:27:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jbJJU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-10-10T15:03:16Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb8xE",
                    "body": "Is `simp` appropriate here?",
                    "createdAt": "2023-10-07T10:51:33Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb8xn",
                    "body": "Is the `iSup` version true as well?",
                    "createdAt": "2023-10-07T10:52:06Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QcjyZ",
                    "body": "Yes but might be a bit more work, I'll see.",
                    "createdAt": "2023-10-08T09:50:44Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QcobS",
                    "body": "Yeah this is a bit of work because it needs the missing lemma:\r\n```lean\r\n\r\n@[simp]\r\ntheorem lie_iSup {ι : Type*} {N : ι → LieSubmodule R L M} :\r\n    ⁅I, ⨆ i, N i⁆ = ⨆ i, ⁅I, N i⁆ := by\r\n  refine le_antisymm ?_ (iSup_le_iff.mpr fun i ↦ mono_lie_right _ _ _ (le_iSup N i))\r\n  rw [← coeSubmodule_le_coeSubmodule, lieIdeal_oper_eq_linear_span, Submodule.span_le]\r\n  rintro - ⟨⟨x, hx⟩, ⟨m, hm⟩, rfl⟩\r\n  simp only [SetLike.mem_coe, mem_coeSubmodule]\r\n  -- etc but we now run into missing API for `iSup`s of LieSubmodules\r\n  sorry\r\n```\r\nI propose not adding the `iSup` version of this lemma because:\r\n\r\n1. I currently have no use for it,\r\n2. In future work, I want to change the `CompleteLattice` definition on `LieSubmodule` to be definitionally equal to that of `Submodule`: this will tidy things up a lot and make adding missing proofs like the above much easier.",
                    "createdAt": "2023-10-08T11:40:44Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QoYd1",
                    "body": "The missing API for `iSup`s of `LieSubmodule`s is added in #7608",
                    "createdAt": "2023-10-10T15:03:15Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb80l",
                    "body": "I think it would be reasonable to make this a  standalone lemma",
                    "createdAt": "2023-10-07T10:53:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qcjk9",
                    "body": "Agreed; done.",
                    "createdAt": "2023-10-08T09:44:51Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb822",
                    "body": "Would this be more idiomatic as an OrderEmbedding? I think it would be reasonable to promote such a result to a `def`",
                    "createdAt": "2023-10-07T10:55:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QcjmQ",
                    "body": "Oh nice: I had just mindlessly copied the `LieSubmodule.wellFounded_of_noetherian` proof (which I believe was written before had `OrderEmbedding`).\r\n\r\nMuch better now.",
                    "createdAt": "2023-10-08T09:45:40Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb84n",
                    "body": "Do we bother with this lemma for other subtypes? I think we tend to avoid re-stating injectivity for bundled versions.",
                    "createdAt": "2023-10-07T10:56:23Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qcjmj",
                    "body": "OK dropped.",
                    "createdAt": "2023-10-08T09:45:51Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb85I",
                    "body": "```suggestion\r\n@[simp] theorem coe_map : (N.map f : Set M') = f '' N := rfl\r\n```",
                    "createdAt": "2023-10-07T10:56:47Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qb88B",
                    "body": "Does the corresponding submodule result prove this in a single line?",
                    "createdAt": "2023-10-07T10:57:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QcjuV",
                    "body": "Yes but it seems `Submodule.map_inf_le` is missing so I've added it and realise that the proof in both cases is of course just `Set.image_inter_subset`.",
                    "createdAt": "2023-10-08T09:49:10Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qcj57",
                    "body": "TODO Once CI finished, use `Set.image_inter` here.",
                    "createdAt": "2023-10-08T09:54:45Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3OT",
                    "body": "Can you add the subgoal bullets here? Otherwise this is arguably a non-terminal simp",
                    "createdAt": "2023-10-08T16:33:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc9Vn",
                    "body": "OK done.",
                    "createdAt": "2023-10-08T19:55:35Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3QJ",
                    "body": "What is `compl` here?",
                    "createdAt": "2023-10-08T16:34:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3a-",
                    "body": "(If it's `LinearMap.comp`, I think plain `comp` would be better)",
                    "createdAt": "2023-10-08T16:40:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc9VZ",
                    "body": "Renamed to use `comp` instead of `compl`.",
                    "createdAt": "2023-10-08T19:55:25Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3Q1",
                    "body": "Does `exact` not work?",
                    "createdAt": "2023-10-08T16:35:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc9UJ",
                    "body": "Yes, indeed I can just provide the term (and now have).",
                    "createdAt": "2023-10-08T19:55:03Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3Rn",
                    "body": "Nit: could use `where` notation",
                    "createdAt": "2023-10-08T16:35:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc9TL",
                    "body": "But doesn't `where` produce terms containing these horrible `let src := ...` clauses?",
                    "createdAt": "2023-10-08T19:54:44Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc-OD",
                    "body": "No, it's `with`/ `__ :=` that does that.",
                    "createdAt": "2023-10-08T20:26:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc-P7",
                    "body": "But we have no evidence that those `let`s are problematic for *morphisms*, as far as I know; the problems arise mainly for instances.",
                    "createdAt": "2023-10-08T20:27:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3Tb",
                    "body": "This name looks a bit weird to me. Does it match the Submodule name?",
                    "createdAt": "2023-10-08T16:37:02Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc9M9",
                    "body": "Thanks, renamed to `map_le_map_iff`, which (essentially) corresponds to the `Submodule` case.",
                    "createdAt": "2023-10-08T19:51:11Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc3Ze",
                    "body": "Is `norm_cast` allowed here?",
                    "createdAt": "2023-10-08T16:39:40Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qc9Mj",
                    "body": "Nope it complains `norm_cast: badly shaped lemma, rhs can't start with coe`. (I might look into this in the future.)",
                    "createdAt": "2023-10-08T19:50:52Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: various Lie algebra definitions / lemmas",
        "updatedAt": "2023-10-10T15:03:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7507",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e9a77251d9efdb94a474256ee8a80e773df8efb4"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y07fBzwAAAAJ0_HXC",
              "createdAt": "2023-10-04T15:24:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y07fBzwAAAAJ0_HXL",
              "createdAt": "2023-10-04T15:24:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1548f2c055266512877e2cb520dd514d2c0c7a1f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4c6fdcd1ae2d8d251683dfba2ff51201eb8193df"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e9528d39a416a9a62517701583380bba49e0419"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Ow58X",
              "createdAt": "2023-10-06T21:16:48Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cJmRY",
                "title": "[Merged by Bors] - feat: Fitting decomposition of a representation of a nilpotent Lie algebra",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7556"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_dz",
              "createdAt": "2023-10-07T10:51:33Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_er",
              "createdAt": "2023-10-07T10:52:06Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_hj",
              "createdAt": "2023-10-07T10:53:53Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_jW",
              "createdAt": "2023-10-07T10:55:13Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_lB",
              "createdAt": "2023-10-07T10:56:23Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_le",
              "createdAt": "2023-10-07T10:56:47Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jH_mp",
              "createdAt": "2023-10-07T10:57:30Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e481b11ea0342f7d220be4416bfa621e56a74db3"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jIm9p",
              "createdAt": "2023-10-08T09:54:45Z",
              "body": "",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "54a43a8227509c8b9ef3a5a2ac17cea9f61b70d7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f8def15965aa6368b8c41ebdc12488d9a63a8338"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jJJ7u",
              "createdAt": "2023-10-08T16:33:55Z",
              "body": "bors d+\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5obvLI",
              "createdAt": "2023-10-08T16:40:03Z",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y07fBzwAAAAJ25A09",
              "createdAt": "2023-10-08T16:40:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5y07fBzwAAAAJ25A1c",
              "createdAt": "2023-10-08T16:40:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "871a5a2ecc265c6277d7dd4f7388a9243a5907fc"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ob8io",
              "createdAt": "2023-10-08T20:38:11Z",
              "body": "bors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5y07fBzwAAAAJ28IgI",
              "createdAt": "2023-10-08T20:38:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ocArC",
              "createdAt": "2023-10-08T22:03:16Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6449865953/job/17508640833)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6449865953/job/17508640883)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6449865953/job/17508640924)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5y07fBzwAAAAJ28kGq",
              "createdAt": "2023-10-08T22:03:18Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5y07fBzwAAAAJ28kH9",
              "createdAt": "2023-10-08T22:03:21Z"
            }
          ]
        }
      }
    }
  }
}
