{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 63,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kmill"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This helps keep `lift_lets` from unnecessarily doing deep recursion on deep expressions. Whether to descend into proofs is put behind a configuration option.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-07-09T09:35:17Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hAXyl",
              "body": ":v: kmill can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-07-08T20:54:25Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hAiKz",
              "body": "@eric-wieser Want to take another look (and merge if you're happy)? I think adding configuration options is a relatively big change after your first approval.",
              "createdAt": "2023-07-08T22:14:56Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hBBbd",
              "body": "bors merge\r\n\r\nThanks!",
              "createdAt": "2023-07-09T09:19:47Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hBCJa",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5499093210/jobs/10021040032)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5499093210/jobs/10021039934)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5499093210/jobs/10021039981)",
              "createdAt": "2023-07-09T09:35:16Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f255543a6beec340294eac2fc348370f56a51011",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-07-08T19:12:46Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "74987a1249da8073377167fca36c06c6bd8e6b02",
                "additions": 53,
                "deletions": 29,
                "committedDate": "2023-07-08T21:11:36Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "706d3231dfa492874d2e387619f175eb318c181a",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2023-07-08T21:24:02Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-08T19:14:35Z",
        "deletions": 33,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/LinearAlgebra/CliffordAlgebra/EvenEquiv.lean",
              "additions": 2,
              "deletions": 6
            },
            {
              "path": "Mathlib/Tactic/LiftLets.lean",
              "additions": 47,
              "deletions": 27
            },
            {
              "path": "test/LiftLets.lean",
              "additions": 14,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kmill_lift_lets_opt",
        "headRefOid": "706d3231dfa492874d2e387619f175eb318c181a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5U_63s",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5apWqW",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:54:24Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5772,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5apVgq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:28:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apViG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:29:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWLw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-07-08T20:37:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWUO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-07-08T20:39:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWeY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:43:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWgm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:45:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWlw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-07-08T20:50:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWps",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:53:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWqN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:54:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apWqW",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-08T20:54:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apZgc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-07-08T21:14:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apZ86",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-07-08T21:19:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5apaBa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-07-08T21:21:12Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8acs",
                    "body": "Is this meaningfully better at avoiding deep recursion vs just letting the match fall through?",
                    "createdAt": "2023-07-08T20:28:52Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8bAS",
                    "body": "What do you mean \"*just* letting the match fall through\"? This is skipping looking at `e` entirely if it doesn't contain a `let` anywhere, which means avoiding for example processing `.app`s or `.forallE`s in such expressions.",
                    "createdAt": "2023-07-08T20:39:06Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8bNs",
                    "body": "I guess my claim is that `find?` is implemented by an analogous `match`, and the processing overhead on the negative path in your code doesn't look very expensive; but perhaps I'm missing something.",
                    "createdAt": "2023-07-08T20:45:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8bVB",
                    "body": "It's not about the depth of expression -- `lift_lets` is implemented using continuation-passing style, so it's the total size of the expression visited that's contributes to recursion depth. Plus, there's a good amount of processing that'd be nice to skip if a subexpression doesn't have any let bindings.",
                    "createdAt": "2023-07-08T20:50:13Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8bZh",
                    "body": "I assume there's no easy way to rewrite the continuation-passing approach to fit within the monad? (or if there is, it has other performance issues)",
                    "createdAt": "2023-07-08T20:53:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8d3D",
                    "body": "There's probably a way to write it differently, but the current way seemed right since each piece of an expression needs to be able to create let bindings that are visible to the next subexpressions being processed. Continuation-passing style is prevalent in meta code that manipulates local contexts.",
                    "createdAt": "2023-07-08T21:21:12Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8aeF",
                    "body": "Possibly worth a brief comment that looking at proofs is pointless as we don't care about the data within them.",
                    "createdAt": "2023-07-08T20:29:50Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8a5e",
                    "body": "I was just about to revert this one -- it's probably actually occasionally useful being able to lift lets out of proofs. Though maybe it should be a configuration option?",
                    "createdAt": "2023-07-08T20:37:30Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8bKy",
                    "body": "This seems pretty useless to me; any data witness in a proof is irrelevant to unification, and any other attempt to access the data is probably an indication of an API failure. I don't mind making it configurable, but I think the default should be not to.",
                    "createdAt": "2023-07-08T20:43:40Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8dbA",
                    "body": "I added a configuration option and the default is to not look at proofs. It seems like it could very occasionally be useful to extract a `let`-bound value out of a proof, but I agree it shouldn't be the default.",
                    "createdAt": "2023-07-08T21:14:07Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8bay",
                    "body": "Were you able to check which of the two `if`s is needed to make this golfed proof possible? Do either of them work in isolation, or is only both enough to give the needed speed boost?",
                    "createdAt": "2023-07-08T20:54:13Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K8dzX",
                    "body": "The proof one ends up not being necessary for this. I'd only added it because it occurred to me it might be a good default.",
                    "createdAt": "2023-07-08T21:19:15Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix: make `lift_lets` not descend into proofs or `let`-less subexpressions",
        "updatedAt": "2023-07-09T09:35:20Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5772",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f255543a6beec340294eac2fc348370f56a51011"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5q_pnGzwAAAAJGEnvc",
              "createdAt": "2023-07-08T19:14:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5q_pnGzwAAAAJGEnve",
              "createdAt": "2023-07-08T19:14:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5apVgq",
              "createdAt": "2023-07-08T20:28:52Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5apViG",
              "createdAt": "2023-07-08T20:29:50Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5apWqN",
              "createdAt": "2023-07-08T20:54:13Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5apWqW",
              "createdAt": "2023-07-08T20:54:24Z",
              "body": "bors d+\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hAXyl",
              "createdAt": "2023-07-08T20:54:25Z",
              "body": ":v: kmill can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5q_pnGzwAAAAJGF0M6",
              "createdAt": "2023-07-08T20:54:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5q_pnGzwAAAAJGF0N3",
              "createdAt": "2023-07-08T20:54:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "74987a1249da8073377167fca36c06c6bd8e6b02"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "706d3231dfa492874d2e387619f175eb318c181a"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hAiKz",
              "createdAt": "2023-07-08T22:14:56Z",
              "body": "@eric-wieser Want to take another look (and merge if you're happy)? I think adding configuration options is a relatively big change after your first approval.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5q_pnGzwAAAAJGHhd_",
              "createdAt": "2023-07-09T00:26:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5q_pnGzwAAAAJGHheA",
              "createdAt": "2023-07-09T00:26:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hBBbd",
              "createdAt": "2023-07-09T09:19:47Z",
              "body": "bors merge\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5q_pnGzwAAAAJGJliF",
              "createdAt": "2023-07-09T09:19:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5q_pnGzwAAAAJGJlio",
              "createdAt": "2023-07-09T09:20:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hBCJa",
              "createdAt": "2023-07-09T09:35:16Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5499093210/jobs/10021040032)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5499093210/jobs/10021039934)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5499093210/jobs/10021039981)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5q_pnGzwAAAAJGJqk_",
              "createdAt": "2023-07-09T09:35:17Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5q_pnGzwAAAAJGJqmD",
              "createdAt": "2023-07-09T09:35:20Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
