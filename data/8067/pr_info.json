{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 41,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "dwrensha"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-11-09T16:26:19Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5rhyXU",
              "body": "bors merge\r\n\r\nThanks! On reflection I think using Qq here would be a bad idea, as it requires us to hard-code all the instances we think we need, meaning we risk forgetting to mirror generalizations made to the lemmas in future.",
              "createdAt": "2023-11-09T15:12:17Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5riS8B",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6814048677/job/18530006046)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6814048677/job/18530005757)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6814048677/job/18530004960)",
              "createdAt": "2023-11-09T16:26:18Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "752a23fa9ab29402d4a7fbdae9af4eda9525d7ea",
                "additions": 73,
                "deletions": 58,
                "committedDate": "2023-10-31T16:10:55Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8bdf1e380a97a2952f330d836007286f50140bdc",
                "additions": 4,
                "deletions": 8,
                "committedDate": "2023-11-01T01:07:04Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "82fbd3c8d336809241f37750cfca4e75c95ffb29",
                "additions": 4665,
                "deletions": 336,
                "committedDate": "2023-11-01T13:15:54Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "74dee76132621af52732b65fa64f5cc1b78af04e",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2023-11-01T14:16:12Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7876e072c6441fe1bfc33c0a309a13d8d95752b4",
                "additions": 0,
                "deletions": 35,
                "committedDate": "2023-11-01T14:22:20Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0a04c392752743a5a7d9fd6f929a81e3ab2ace0c",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-11-09T15:11:12Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-31T16:13:37Z",
        "deletions": 58,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/SMul.lean",
              "additions": 29,
              "deletions": 52
            },
            {
              "path": "test/positivity.lean",
              "additions": 12,
              "deletions": 6
            }
          ]
        },
        "headRefName": "positivity-smul",
        "headRefOid": "0a04c392752743a5a7d9fd6f929a81e3ab2ace0c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5eQHcF",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lz1AC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T12:12:15Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8067,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5luqmI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dwrensha"
              },
              "submittedAt": "2023-10-31T16:15:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lurcl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dwrensha"
              },
              "submittedAt": "2023-10-31T16:17:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lxXSg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dwrensha"
              },
              "submittedAt": "2023-11-01T01:07:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lzaJP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T10:54:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lzaXP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T10:55:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lzrP1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dwrensha"
              },
              "submittedAt": "2023-11-01T11:44:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lz1AC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T12:12:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5l0t0C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dwrensha"
              },
              "submittedAt": "2023-11-01T14:16:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5l0yAA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dwrensha"
              },
              "submittedAt": "2023-11-01T14:25:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SIFIk",
                    "body": "If I change this to\r\n```lean\r\n  let zM ← synthInstanceQ (q(Zero $M))\r\n  ```\r\n  then I get\r\n```\r\nMessages below (1)\r\n378:2: \r\n(kernel) declaration has free variables 'Mathlib.Meta.Positivity.evalHSMul.match_1'\r\n```",
                    "createdAt": "2023-10-31T16:15:31Z",
                    "author": {
                      "login": "dwrensha"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJy2n",
                    "body": "fixed via type ascription",
                    "createdAt": "2023-11-01T01:07:43Z",
                    "author": {
                      "login": "dwrensha"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SIFqy",
                    "body": "If I try to use `q()` here, I get a weird error:\r\n```\r\n381:23: \r\nunquoteExpr: pM : Lean.Expr\r\n```",
                    "createdAt": "2023-10-31T16:17:05Z",
                    "author": {
                      "login": "dwrensha"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SLIku",
                    "body": "Can you add a test to check that the universe polymorphism is correct in the tactic? I'm thinking a super general example stated with `OrderedSMul`, with types in separate universes.",
                    "createdAt": "2023-11-01T10:54:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SL71Q",
                    "body": "Done in https://github.com/leanprover-community/mathlib4/pull/8067/commits/74dee76132621af52732b65fa64f5cc1b78af04e.",
                    "createdAt": "2023-11-01T14:16:47Z",
                    "author": {
                      "login": "dwrensha"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SLIuB",
                    "body": "This shouldn't ever be needed: `SMul.smul` is an implementation detail.",
                    "createdAt": "2023-11-01T10:55:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SLTUy",
                    "body": "`evalAdd` covers both `HAdd.hAdd` and `Add.add`:\r\n\r\nhttps://github.com/leanprover-community/mathlib4/blob/00cb9455117f9b1046c7fa0d15bf5b8ad0654c1c/Mathlib/Tactic/Positivity/Basic.lean#L156\r\n\r\nand `evalMul` covers both `HMul.hMul` and `Mul.mul`:\r\nhttps://github.com/leanprover-community/mathlib4/blob/00cb9455117f9b1046c7fa0d15bf5b8ad0654c1c/Mathlib/Tactic/Positivity/Basic.lean#L197\r\n\r\n\r\nIs there anything different about `SMul` that says we *don't* need to cover both cases here? (I would put `HSMul.hSMul` and `SMul.smul` in a single extension if I could figure out how.)",
                    "createdAt": "2023-11-01T11:44:52Z",
                    "author": {
                      "login": "dwrensha"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SLZiX",
                    "body": "I think all of these are mistakes, and could also be removed (in a separate PR)",
                    "createdAt": "2023-11-01T12:12:15Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SL-gn",
                    "body": "Removed the SMul extension in https://github.com/leanprover-community/mathlib4/pull/8067/commits/7876e072c6441fe1bfc33c0a309a13d8d95752b4",
                    "createdAt": "2023-11-01T14:25:33Z",
                    "author": {
                      "login": "dwrensha"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ5NTc2OA==",
              "login": "dwrensha"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: port smul positivity extension",
        "updatedAt": "2023-11-09T16:26:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8067",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "752a23fa9ab29402d4a7fbdae9af4eda9525d7ea"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51eFAqzwAAAAKFG_JT",
              "createdAt": "2023-10-31T16:13:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51eFAqzwAAAAKFG_1z",
              "createdAt": "2023-10-31T16:14:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5luqmI",
              "createdAt": "2023-10-31T16:15:31Z",
              "body": "",
              "author": {
                "login": "dwrensha"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lurcl",
              "createdAt": "2023-10-31T16:17:05Z",
              "body": "",
              "author": {
                "login": "dwrensha"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8bdf1e380a97a2952f330d836007286f50140bdc"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lzaJP",
              "createdAt": "2023-11-01T10:54:38Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lzaXP",
              "createdAt": "2023-11-01T10:55:20Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51eFAqzwAAAAKFlD4j",
              "createdAt": "2023-11-01T10:55:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51eFAqzwAAAAKFlD4q",
              "createdAt": "2023-11-01T10:55:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "82fbd3c8d336809241f37750cfca4e75c95ffb29"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "74dee76132621af52732b65fa64f5cc1b78af04e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7876e072c6441fe1bfc33c0a309a13d8d95752b4"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51eFAqzwAAAAKFs2KK",
              "createdAt": "2023-11-01T14:26:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51eFAqzwAAAAKFs2Sl",
              "createdAt": "2023-11-01T14:26:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0a04c392752743a5a7d9fd6f929a81e3ab2ace0c"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rhyXU",
              "createdAt": "2023-11-09T15:12:17Z",
              "body": "bors merge\r\n\r\nThanks! On reflection I think using Qq here would be a bad idea, as it requires us to hard-code all the instances we think we need, meaning we risk forgetting to mirror generalizations made to the lemmas in future.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51eFAqzwAAAAKKjn-8",
              "createdAt": "2023-11-09T15:12:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51eFAqzwAAAAKKjoCB",
              "createdAt": "2023-11-09T15:12:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5riS8B",
              "createdAt": "2023-11-09T16:26:18Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6814048677/job/18530006046)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6814048677/job/18530005757)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6814048677/job/18530004960)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c51eFAqzwAAAAKKnAZI",
              "createdAt": "2023-11-09T16:26:19Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c51eFAqzwAAAAKKnAiR",
              "createdAt": "2023-11-09T16:26:22Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
