{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 89,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR provides `fun₀ | 3 => a | 7 => b` notation for `Finsupp`, which desugars to `Finsupp.update` and `Finsupp.single`, in the same way that `{a, b}` desugars to `insert` and `singleton`.\r\n\r\nIt also provides a matching delaborator: as an example of the effect of this, `Finsupp.single_add` now shows as:\r\n```lean\r\nFinsupp.single_add.{u_2, u_1} {α : Type u_1} {M : Type u_2} [inst✝ : AddZeroClass M] (a : α) (b₁ b₂ : M) :\r\n  (fun₀ | a => b₁ + b₂) = (fun₀ | a => b₁) + fun₀ | a => b₂\r\n```\r\n\r\nFinally, it provides a `Repr` instance; though this is somewhat misleading as the syntax that is produced by `Repr` isn't actually computable so can't round-trip!\r\n\r\n[Discussed on Zulip here](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Notation.20for.20.60Finsupp.60/near/381919585).\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\n\r\nA nice example of the `Repr` in action is\r\n```lean\r\n#eval Finsupp.antidiagonal ⟨{1, 2}, fun x : Fin 3 => x, sorry⟩\r\n/-\r\n{(0, fun₀ | 1 => 1 | 2 => 2),\r\n (fun₀ | 1 => 1, fun₀ | 2 => 2),\r\n (fun₀ | 2 => 1, fun₀ | 1 => 1 | 2 => 1),\r\n (fun₀ | 1 => 1 | 2 => 1, fun₀ | 2 => 1),\r\n (fun₀ | 2 => 2, fun₀ | 1 => 1),\r\n (fun₀ | 1 => 1 | 2 => 2, 0)}\r\n-/\r\n```",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-09-10T14:42:30Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jtlfg",
              "body": "I really like this! :) Given that `↦` is standard for `fun` expressions in mathlib, though, I would suggest that:\r\n1. both `=>` and `↦` should be available as input notation, and\r\n2. the delaborator and `Repr` instance should use `↦`\r\n\r\nso that it's as close as possible to `fun` syntax.",
              "createdAt": "2023-08-10T09:39:40Z",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jtzLt",
              "body": "> 1. both `=>` and `↦` should be available as input notation, and\r\n\r\nThis does not work for regular functions, so I think supporting it here would just be confusing\r\n```\r\n#check show ℕ → ℕ from fun | 0 => 0 | Nat.succ n => n + 2 -- ok\r\n#check show ℕ → ℕ from fun | 0 ↦ 0 | Nat.succ n ↦ n + 2 -- fail\r\n```\r\nIf we fix `fun` then `fun₀` will start working automatically\r\n\r\n> 2. the delaborator and `Repr` instance should use `↦`\r\n\r\nNot without 1. they shouldn't!\r\n\r\n",
              "createdAt": "2023-08-10T10:17:10Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mF8Fn",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6137467298/job/16653323135)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6137467298/job/16653323086)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6137467298/job/16653322922)",
              "createdAt": "2023-09-10T14:42:29Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e2a541961f3e345d5d0ca712fefe33664de4fb30",
                "additions": 85,
                "deletions": 0,
                "committedDate": "2023-08-04T15:04:26Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cc5322c5434569e42e75242d340bce25bff2b965",
                "additions": 6,
                "deletions": 2,
                "committedDate": "2023-08-04T16:51:15Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d57762f5d5a6b426f4abd82737ab24fcdc9a514a",
                "additions": 2883,
                "deletions": 671,
                "committedDate": "2023-08-07T14:06:40Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "460c7a0eadcb78b40839a97e9baae2259a676f32",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-30T23:43:47Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7c5052c0f7a9d9fffca3914bbdb06aecfac1edbb",
                "additions": 36967,
                "deletions": 22023,
                "committedDate": "2023-08-31T00:00:47Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b276d919a7b21c1373f81f6006833ee3b9122dc7",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-09-01T15:33:47Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-04T15:05:40Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Finsupp/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Finsupp/Notation.lean",
              "additions": 71,
              "deletions": 0
            },
            {
              "path": "test/finsupp_notation.lean",
              "additions": 16,
              "deletions": 0
            }
          ]
        },
        "headRefName": "finsupp-notation",
        "headRefOid": "b276d919a7b21c1373f81f6006833ee3b9122dc7",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5XNP64",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gfVVu",
              "body": "I think it would be nicer to use `syntax` commands instead of using `leading_parser` directly, but we don't need to change it for trying it out in mathlib.\r\n\r\nNote that the documentation you've put on `fun₀` is just ` Finsupp`'s documentation. At some point we should have documentation on the notation that explains the notation itself.\r\n\r\nbors r+",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-10T13:21:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fMTTg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-27T01:15:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fzD2R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-09-01T15:54:02Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6367,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fMTTg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-27T01:15:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5flZmy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-30T23:43:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5flc7M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-31T00:02:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fzD2R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-09-01T15:54:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f08WP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-01T22:11:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfVVu",
              "body": "I think it would be nicer to use `syntax` commands instead of using `leading_parser` directly, but we don't need to change it for trying it out in mathlib.\r\n\r\nNote that the documentation you've put on `fun₀` is just ` Finsupp`'s documentation. At some point we should have documentation on the notation that explains the notation itself.\r\n\r\nbors r+",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-10T13:21:38Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5N4OI5",
                    "body": "Better to use `Std.Util.TermUnsafe` here, rather than propagating the `unsafe`, I think.",
                    "createdAt": "2023-08-27T01:15:31Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OI4Sc",
                    "body": "Done",
                    "createdAt": "2023-08-30T23:43:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OI62U",
                    "body": "Couldn't you argue that `Quot.unquot` should be made into a `safe` wrapper for the same reason?",
                    "createdAt": "2023-08-31T00:02:11Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORfvF",
                    "body": "Oh, BTW there is another trick you can use here: although alpha might not be ordered, `Format` is, so you could just format them first and then sort the results to make the output order independent.",
                    "createdAt": "2023-09-01T15:54:02Z",
                    "author": {
                      "login": "digama0"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OS6tK",
                    "body": "I decided not to do that for the same reason that the multiset repr doesn't; it gives stupid `{1, 10, 11, 2, 3}` orderings. I have an open issue about doing a better job of this somewhere ",
                    "createdAt": "2023-09-01T22:11:50Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjY4NDEwNDY4",
              "login": "thorimur"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Data/Finsupp): add notation",
        "updatedAt": "2023-09-10T14:42:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6367",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e2a541961f3e345d5d0ca712fefe33664de4fb30"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJUq9oJ",
              "createdAt": "2023-08-04T15:05:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJUq9oP",
              "createdAt": "2023-08-04T15:05:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJUq9oS",
              "createdAt": "2023-08-04T15:05:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJUq9oc",
              "createdAt": "2023-08-04T15:05:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tfTcTzwAAAAJUtV8-",
              "createdAt": "2023-08-04T16:13:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cc5322c5434569e42e75242d340bce25bff2b965"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d57762f5d5a6b426f4abd82737ab24fcdc9a514a"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jtlfg",
              "createdAt": "2023-08-10T09:39:40Z",
              "body": "I really like this! :) Given that `↦` is standard for `fun` expressions in mathlib, though, I would suggest that:\r\n1. both `=>` and `↦` should be available as input notation, and\r\n2. the delaborator and `Repr` instance should use `↦`\r\n\r\nso that it's as close as possible to `fun` syntax.",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jtzLt",
              "createdAt": "2023-08-10T10:17:10Z",
              "body": "> 1. both `=>` and `↦` should be available as input notation, and\r\n\r\nThis does not work for regular functions, so I think supporting it here would just be confusing\r\n```\r\n#check show ℕ → ℕ from fun | 0 => 0 | Nat.succ n => n + 2 -- ok\r\n#check show ℕ → ℕ from fun | 0 ↦ 0 | Nat.succ n ↦ n + 2 -- fail\r\n```\r\nIf we fix `fun` then `fun₀` will start working automatically\r\n\r\n> 2. the delaborator and `Repr` instance should use `↦`\r\n\r\nNot without 1. they shouldn't!\r\n\r\n",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tfTcTzwAAAAJYHGR_",
              "createdAt": "2023-08-11T10:25:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fMTTg",
              "createdAt": "2023-08-27T01:15:31Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tfTcTzwAAAAJgBgax",
              "createdAt": "2023-08-27T01:15:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJgBgay",
              "createdAt": "2023-08-27T01:15:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "460c7a0eadcb78b40839a97e9baae2259a676f32"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tfTcTzwAAAAJiP-Ek",
              "createdAt": "2023-08-30T23:44:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJiP-Em",
              "createdAt": "2023-08-30T23:44:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7c5052c0f7a9d9fffca3914bbdb06aecfac1edbb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b276d919a7b21c1373f81f6006833ee3b9122dc7"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5tfTcTzwAAAAJjdi7M",
              "createdAt": "2023-09-01T15:33:57Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gfVVu",
              "createdAt": "2023-09-10T13:21:38Z",
              "body": "I think it would be nicer to use `syntax` commands instead of using `leading_parser` directly, but we don't need to change it for trying it out in mathlib.\r\n\r\nNote that the documentation you've put on `fun₀` is just ` Finsupp`'s documentation. At some point we should have documentation on the notation that explains the notation itself.\r\n\r\nbors r+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tfTcTzwAAAAJnf8SE",
              "createdAt": "2023-09-10T13:21:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tfTcTzwAAAAJnf8Sc",
              "createdAt": "2023-09-10T13:21:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mF8Fn",
              "createdAt": "2023-09-10T14:42:29Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6137467298/job/16653323135)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6137467298/job/16653323086)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6137467298/job/16653322922)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5tfTcTzwAAAAJngdEG",
              "createdAt": "2023-09-10T14:42:30Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5tfTcTzwAAAAJngdE5",
              "createdAt": "2023-09-10T14:42:32Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RC6UQ",
              "createdAt": "2024-02-25T15:31:25Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5n2AVL",
                "title": "[Merged by Bors] - feat(Data.DFinsupp.Notation): add notation for `DFinsupp`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10962"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
