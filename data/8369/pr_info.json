{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 142,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ocfnash"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 11,
        "closed": true,
        "closedAt": "2023-11-16T11:33:33Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5sI454",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6889388775/job/18740280760)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6889388775/job/18740280307)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6889388775/job/18740280987)",
              "createdAt": "2023-11-16T11:33:32Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "83f09497077387a2c0caf11761dcd92b376f2083",
                "additions": 121,
                "deletions": 0,
                "committedDate": "2023-11-12T16:26:23Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7ae70356d758edc32f55c5dba030dcd089323e88",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-11-12T16:26:23Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "99fbf9dc1b14fcd7e6ecaadae759d6c079414498",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-11-12T16:28:04Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ab5cc399a8f5923be139736a641cb3f26005f3b3",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-11-13T10:06:00Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "109316e64b995d80ae50596514067deec3e235a8",
                "additions": 9,
                "deletions": 8,
                "committedDate": "2023-11-13T10:12:45Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f9b325b22fc5b1e0880e4163274feb0aee5bd9db",
                "additions": 2064,
                "deletions": 1468,
                "committedDate": "2023-11-13T12:04:18Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4b47b7bd0c470aea24e671682aab36660750947e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-13T12:05:07Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "db276f4ecee3fb1758b2bf1f1a5a364e355d2f34",
                "additions": 5347,
                "deletions": 3793,
                "committedDate": "2023-11-14T16:43:54Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3f16472be645a2f117b7f7dcf1f59bc8ce9847e2",
                "additions": 42,
                "deletions": 18,
                "committedDate": "2023-11-14T21:39:10Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "50887171d27267b19b465689013c9bd060bb7538",
                "additions": 0,
                "deletions": 14,
                "committedDate": "2023-11-15T10:39:53Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "76654beffa9191575f1944f459410a860f2cf3f0",
                "additions": 4,
                "deletions": 8,
                "committedDate": "2023-11-15T10:46:16Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "21fc10ccea2bba5a239c59a030891cf5ac9d9336",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-15T11:48:15Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-12T16:27:08Z",
        "deletions": 11,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/DirectSum/LinearMap.lean",
              "additions": 50,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/DirectSum/Module.lean",
              "additions": 34,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/PiL2.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Set/Finite.lean",
              "additions": 15,
              "deletions": 8
            },
            {
              "path": "Mathlib/LinearAlgebra/Basic.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Trace.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/CompactlyGenerated.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/CompleteLattice.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/SupIndep.lean",
              "additions": 13,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Noetherian.lean",
              "additions": 6,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ocfnash/trace_direct_sum",
        "headRefOid": "21fc10ccea2bba5a239c59a030891cf5ac9d9336",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fPOCo",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nLLxk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-14T23:18:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nWpqD",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-11-16T10:08:11Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8369,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5m5Riv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-12T16:35:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m5kU1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-12T23:40:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m5keH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-12T23:42:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m5kw4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-12T23:47:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m5mFp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-13T00:08:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m5m1r",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-13T00:18:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m7fbS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-11-13T09:29:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m8QBy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-13T10:57:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m89La",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-13T12:50:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nKtnm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-14T21:42:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLK1_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-14T23:14:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLLxk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-14T23:18:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nORXf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-15T11:03:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nOSUt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-15T11:05:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nWpqD",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-11-16T10:08:11Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4HnK",
                    "body": "I note that the only file imported by `Mathlib.Data.Matrix.Block` is `Mathlib.Data.Matrix.Basic` so there is no transitive impact of adding this import here.",
                    "createdAt": "2023-11-12T16:35:22Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4Xsl",
                    "body": "Can you add the unprimed version too?",
                    "createdAt": "2023-11-12T23:40:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4Xzf",
                    "body": "I think these results hold for additive monoids if you use the API for `DirectSum.internal` directly rather than going via independence; though I haven't tried.",
                    "createdAt": "2023-11-12T23:42:16Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4Y-p",
                    "body": "I'm thinking along the lines of:\r\n```lean\r\nlemma trace_eq_sum_trace_restrict' (hN : {i | N i ≠ ⊥}.Finite)\r\n    {f : M →ₗ[R] M} (hf : ∀ i, MapsTo f (N i) (N i)) :\r\n    trace R M f = ∑ i in hN.toFinset, trace R (N i) (f.restrict (hf i)) := by\r\n  set s : Finset ι := hN.toFinset\r\n  -- TODO: this should be `internal.chooseDecomposition`\r\n  let d' : DirectSum.Decomposition N := {\r\n    decompose' := (Equiv.ofBijective _ h).symm\r\n    left_inv := (Equiv.ofBijective _ h).right_inv\r\n    right_inv := (Equiv.ofBijective _ h).left_inv\r\n  }\r\n  let h : DirectSum.Decomposition (fun i : s => N i) := {\r\n    decompose' := (DirectSum.toModule R _ _ fun i =>\r\n      if hi : i ∈ s then DirectSum.lof R s (N ·) ⟨i, hi⟩ else 0) ∘ₗ (decomposeLinearEquiv N).toLinearMap\r\n    left_inv := sorry\r\n    right_inv := sorry\r\n  }\r\n  ```\r\n  where an extra constructor for `DirectSum.decomposition` would make those sorries trivial",
                    "createdAt": "2023-11-13T00:08:32Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4ZcQ",
                    "body": "That might still be a dead end, but the extra constructors are in #8374",
                    "createdAt": "2023-11-13T00:18:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S6FAd",
                    "body": "Hmm, I'm not sure how hard to fight for this approach. On the one hand it does seem like key results such as:\r\n```lean\r\n   (⨁ (i : { i // N i ≠ ⊥ }), N i) ≃+ ⨁ i, N i\r\n```\r\nshould exists somewhere, but on the other, I begin to think the best use of effort would be to generalise the `DirectSum` API so that everything is set up relative to a subset `s : Set ι`.\r\n\r\nI need to finish a non-Mathlib piece of work this morning so I'll think about this later today if you feel it's worth pushing for.",
                    "createdAt": "2023-11-13T10:57:41Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S6iFf",
                    "body": "here's a very messy proof:\r\n```lean\r\nlemma trace_eq_sum_trace_restrict' (hN : {i | N i ≠ ⊥}.Finite)\r\n    {f : M →ₗ[R] M} (hf : ∀ i, MapsTo f (N i) (N i)) :\r\n    trace R M f = ∑ i in hN.toFinset, trace R (N i) (f.restrict (hf i)) := by\r\n  set s : Finset ι := hN.toFinset\r\n  let d' : DirectSum.Decomposition N := h.chooseDecomposition\r\n  let h' : DirectSum.Decomposition (fun i : s => N i) :=\r\n    .ofLinearMap _\r\n      ((DirectSum.toModule R _ _ fun i =>\r\n        if hi : i ∈ s then DirectSum.lof R s (N ·) ⟨i, hi⟩ else 0) ∘ₗ (decomposeLinearEquiv N).toLinearMap)\r\n      (DirectSum.decompose_lhom_ext N fun i => by\r\n        ext x\r\n        dsimp\r\n        simp [←lof_eq_of R]\r\n        split_ifs with h\r\n        · simp [lof_eq_of]\r\n        · suffices x = 0 by simp [this]\r\n          obtain ⟨x, hx⟩ := x\r\n          simp at h\r\n          simpa [h] using hx)\r\n      (by\r\n        ext i x\r\n        -- stupid lof vs of\r\n        simp; simp [lof_eq_of]; simp [←lof_eq_of R]\r\n        split_ifs with h\r\n        · rfl\r\n        · suffices x = 0 by simp [this]\r\n          obtain ⟨x, hx⟩ := x\r\n          simp at h\r\n          simpa [h] using hx)\r\n  rw [← Finset.sum_coe_sort, trace_eq_sum_trace_restrict h'.isInternal (fun i ↦ hf i)]\r\n```",
                    "createdAt": "2023-11-13T12:50:44Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDJiW",
                    "body": "I couldn't quite motivate myself to follow this suggestion but as a compromise I did split out the lemma `DirectSum.isInternal_ne_bot_iff` which I hope makes what I'm proposing more palatable.",
                    "createdAt": "2023-11-14T21:42:58Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDg2R",
                    "body": "The lemma split is certainly a good idea, thanks! I think probably the best approach overall is:\r\n\r\n* Build the `(⨁ (i : { i // N i ≠ ⊥ }), N i) ≃+ ⨁ i, N i` map you describe; I think we probably do have this somewhere\r\n* Define `DirectSum.Decomposition.congrAddEquiv` which takes that equiv and produces `Decomposition N ≃ Decomposition fun i : {i // N i ≠ ⊥ } => N i`\r\n* Define `IsInternal_iff_of_decomposition_equiv`,that turns that result into an `Iff`\r\n\r\nThe payoff is that `DirectSum.isInternal_ne_bot_iff` becomes true for `AddCommMonoid` (even if that's not helpful for `trace`.",
                    "createdAt": "2023-11-14T23:18:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TF3gR",
                    "body": "I essentially agree with you though I am reluctant to take this detour right now.\r\n\r\nI will need this lemma but I have excised it from this pull request in the hopes of unblocking the other changes I am proposing.",
                    "createdAt": "2023-11-15T11:03:39Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4YC2",
                    "body": "This lemma works for `AddCommMonoid` and `CommSemiring`",
                    "createdAt": "2023-11-12T23:47:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S5mRR",
                    "body": "Silly nitpick, but I'd prefer if this was `f : M_1 \\to M_2`.",
                    "createdAt": "2023-11-13T09:29:37Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDgBH",
                    "body": "I think this is `equivSubtype` or some other permutation of those words",
                    "createdAt": "2023-11-14T23:14:16Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TF4Ir",
                    "body": "Ah yes we have `Equiv.subtypeEquiv` but I think not its specialisation to this situation.\r\n\r\nI have persuaded myself that this specialisation is worth having so (after fixing the name) and golfing to use `Equiv.subtypeEquiv` I have retained the proposal to introduce this definition.\r\n\r\nAs motivation, I located a place in the library in `Analysis.InnerProductSpace.PiL2` where it is useful.",
                    "createdAt": "2023-11-15T11:05:59Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: the trace of a direct sum is the sum of the traces",
        "updatedAt": "2023-11-16T11:33:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8369",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "83f09497077387a2c0caf11761dcd92b376f2083"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7ae70356d758edc32f55c5dba030dcd089323e88"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKLxPCn",
              "createdAt": "2023-11-12T16:27:08Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKLxPCo",
              "createdAt": "2023-11-12T16:27:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKLxPCq",
              "createdAt": "2023-11-12T16:27:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "99fbf9dc1b14fcd7e6ecaadae759d6c079414498"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m5Riv",
              "createdAt": "2023-11-12T16:35:22Z",
              "body": "",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKLxS0Q",
              "createdAt": "2023-11-12T16:36:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKLxS0S",
              "createdAt": "2023-11-12T16:36:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKLxnn1",
              "createdAt": "2023-11-12T17:28:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m5kU1",
              "createdAt": "2023-11-12T23:40:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m5keH",
              "createdAt": "2023-11-12T23:42:16Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m5kw4",
              "createdAt": "2023-11-12T23:47:10Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m7fbS",
              "createdAt": "2023-11-13T09:29:37Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKMBhnc",
              "createdAt": "2023-11-13T09:29:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKMBhnn",
              "createdAt": "2023-11-13T09:29:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ab5cc399a8f5923be139736a641cb3f26005f3b3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "109316e64b995d80ae50596514067deec3e235a8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f9b325b22fc5b1e0880e4163274feb0aee5bd9db"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4b47b7bd0c470aea24e671682aab36660750947e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db276f4ecee3fb1758b2bf1f1a5a364e355d2f34"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3f16472be645a2f117b7f7dcf1f59bc8ce9847e2"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKNSyHS",
              "createdAt": "2023-11-14T21:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKNSyHW",
              "createdAt": "2023-11-14T21:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKNSyHb",
              "createdAt": "2023-11-14T21:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKNUpBr",
              "createdAt": "2023-11-14T22:44:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nLK1_",
              "createdAt": "2023-11-14T23:14:16Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKNcUgs",
              "createdAt": "2023-11-15T05:05:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKNcUg3",
              "createdAt": "2023-11-15T05:05:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "50887171d27267b19b465689013c9bd060bb7538"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "76654beffa9191575f1944f459410a860f2cf3f0"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKNojIo",
              "createdAt": "2023-11-15T11:17:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKNojIw",
              "createdAt": "2023-11-15T11:17:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "21fc10ccea2bba5a239c59a030891cf5ac9d9336"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PY1o7",
              "createdAt": "2023-11-15T17:12:42Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5fiqCQ",
                "title": "[Merged by Bors] - feat: if a Lie algebra has non-degenerate Killing form then its Cartan subalgebras are Abelian",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8430"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nWpqD",
              "createdAt": "2023-11-16T10:08:11Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52lQPwzwAAAAKOXtyE",
              "createdAt": "2023-11-16T10:08:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52lQPwzwAAAAKOXtz7",
              "createdAt": "2023-11-16T10:08:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sI454",
              "createdAt": "2023-11-16T11:33:32Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6889388775/job/18740280760)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6889388775/job/18740280307)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6889388775/job/18740280987)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52lQPwzwAAAAKObO1C",
              "createdAt": "2023-11-16T11:33:33Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52lQPwzwAAAAKObO-A",
              "createdAt": "2023-11-16T11:33:36Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
