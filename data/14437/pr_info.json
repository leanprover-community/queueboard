{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 157,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR introduces the `#min_imports in` command.\r\n\r\nWriting `#min_imports in stx` scans the syntax `stx` to find a collection of minimal imports that should be sufficient for `stx` to make sense.\r\n\r\nIf `stx` is a command, then it also elaborates `stx`.  If `stx` produces a declaration, then\r\nit also finds the imports implied by the declaration.\r\n\r\nUnlike the related `#find_home`, this command takes into account notation and tactic information.\r\n\r\nFor instance, you can write\r\n```lean\r\nimport Mathlib\r\n\r\n#min_imports in\r\nlemma hi (n : ℕ) : n = n := by extract_goal; rfl\r\n-- import Mathlib.Tactic.ExtractGoal\r\n-- import Mathlib.Tactic.Lemma\r\n-- import Mathlib.Init.Data.Nat.Notation\r\n```\r\nand you can see that it notices `lemma`, `ℕ` and `extract_goal`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2024-07-18T08:27:28Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6DvrMe",
              "body": "### PR summary [4f1f57a22a](https://github.com/leanprover-community/mathlib4/pull/14437/commits/4f1f57a22a35b662d66b5ef4cb62c5081ec0df9f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.MinImports` `Mathlib.Tactic`|1|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ getAllImports`\n`+ getId`\n`+ getIrredundantImports`\n`+ getSyntaxNodeKinds`\n`+ getVisited`\n`+ hi`\n`+ minImpsCore`\n`+ uses_norm_num`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-05T07:02:56Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dv4rs",
              "body": "This looks exciting :tada: So, just to clarify: can I run this on an entire file like #find_home?",
              "createdAt": "2024-07-05T07:44:09Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dv61Z",
              "body": "No, currently it is \"declaration\" based.",
              "createdAt": "2024-07-05T07:50:26Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DwjM0",
              "body": "Actually, I do not think that `#find_home` can be run on a file either: `#find_home` takes an identifier as input (which is legal also for `#min_imps`).  Moreover, `#min_imps` takes any `command` or `term` and does its thing.\r\n",
              "createdAt": "2024-07-05T09:34:34Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FMAF5",
              "body": "Happy to try this out in the wild. \r\n\r\nbors d+",
              "createdAt": "2024-07-17T22:48:05Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FMAHe",
              "body": ":v: adomani can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-07-17T22:48:07Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FRC2r",
              "body": "bors merge",
              "createdAt": "2024-07-18T07:40:58Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FRY_7",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9987538233/job/27602106890)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9987538233/job/27602107120)",
              "createdAt": "2024-07-18T08:27:28Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FlgJt",
              "body": "Something that occurred to me that would also take into account elaborators is doing the following:\r\n\r\n1. save (and clear) the info trees with `Lean.Elab.getResetInfoTrees`\r\n2. elaborate the command\r\n3. recursively walk through the info trees collecting (1) the `elaborator` fields, (2) for every `Syntax` each of the `kind`s using your `getSyntaxNodeKinds`, and (3) for each TermInfo node, all the constants appearing in the `expr` and `expectedType?` fields.\r\n4. try to resolve all of these names, and find which modules they come from, like the code you already have, to compute imports.\r\n5. restore the info trees by prepending them to the new list of info trees.",
              "createdAt": "2024-07-20T16:35:17Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FlhOe",
              "body": "@kmill, I am happy that you mention this!  I had also thought of using the `InfoTrees`, but I still feel a little intimidated by them, so I resorted to the more \"explicit\" approach, thinking that it would have been easier.\r\n\r\nHowever, seeing now the hoops that I am going through to retrieve the correct name for nameless instances, I am going back to thinking that the `InfoTrees` might be the way to go.\r\n\r\nCurrently, what I am really struggling with is this example:\r\n```lean\r\nimport Mathlib.Data.Sym.Sym2.Init -- the actual minimal import\r\nimport Aesop.Frontend.Attribute   -- the import that `#min_imports in` suggests\r\n\r\nimport Mathlib.Tactic.MinImports\r\n\r\n#min_imports in\r\n@[aesop (rule_sets := [Sym2]) [safe [constructors, cases], norm]]\r\ninductive Rel (α : Type) : α × α → α × α → Prop\r\n  | refl (x y : α) : Rel _ (x, y) (x, y)\r\n  | swap (x y : α) : Rel _ (x, y) (y, x)\r\n```\r\nThe `aesop` `rule_sets` elude my command.\r\n\r\nDo you think that `InfoTrees` would pick up on this import?",
              "createdAt": "2024-07-20T16:52:00Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FlhiC",
              "body": "Re InfoTree wrangling, since you're not going to do any meta calculations (you just want constant names), you can really just scan through all the Info nodes and ignore complexities like context updates.\r\n\r\nPicking up things like aesop rulesets seems complicated. Maybe aesop could install some fake infotree nodes with references to rulesets just to help your tool? Or maybe these infotree nodes are already present since aesop might use the elaborator to resolve them? (Every elabTerm results in some infotree nodes.)",
              "createdAt": "2024-07-20T16:58:17Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FlppL",
              "body": "Ok, I will experiment with `InfoTrees`.  I would like to understand them better anyway, since they would be useful for the \"beginners linter\" flagging `Nat.sub`: I want that linter to be aware of hypotheses `a \\le b` whenever `b - a` is present and this requires \"persisting\" fvars across the whole syntax tree.  Or at least, this is what I think!\r\n\r\nAlso, there are very few `aesop` `rule_sets` throughout mathlib, and I am happy to live without the tool parsing them correctly.  Besides, after one file that has been adjusted by hand, every file that imports it no longer has the issue.",
              "createdAt": "2024-07-20T17:36:19Z",
              "author": {
                "login": "adomani"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "90a868c31882f80a7d77ae1c4c5375b4d6f36977",
                "additions": 142,
                "deletions": 0,
                "committedDate": "2024-07-05T06:58:55Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ_sIg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804406666/job/27072130082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ_sQg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804406672/job/27072130114"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8GDw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804383994/job/27072071183"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8H2A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804384003/job/27072071640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ_sFQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804406668/job/27072130069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8Iwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804383994/job/27072071874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8JeA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804384003/job/27072072056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ_s9w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804406668/job/27072130295"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8HBg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804383994/job/27072071430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8Iqw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804384003/job/27072071851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8H6A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804383994/job/27072071656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8Gtg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804384003/job/27072071350"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTZ8Jtg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804383994/job/27072072118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTaPqug",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9804384003/job/27072391866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTaABrQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27072135597"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTaBgHg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "03611bf6e8cc83d5463f5b3132f8eac72412c707",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-07-05T09:23:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ed940f58d4da7907dbac5e89ff1d34ed3e8a7a82",
                "additions": 1778,
                "deletions": 1135,
                "committedDate": "2024-07-05T09:23:38Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBDbQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193367/job/27077395309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBCrg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193370/job/27077395118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfA_gQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193197/job/27077394305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBAsQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193198/job/27077394609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBClw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193369/job/27077395095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBDAQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193197/job/27077395201"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBCrw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193198/job/27077395119"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBDvQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193369/job/27077395389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBAug",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193197/job/27077394618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBB1g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193198/job/27077394902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBBzA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193197/job/27077394892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfA_jg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193198/job/27077394318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBD6w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193197/job/27077395435"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfX1Mg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806193198/job/27077768498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfBf6Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27077402601"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTfCVHg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3456ba700c1ac6e4e1fbd54398a5fd4eef7126cd",
                "additions": 11,
                "deletions": 0,
                "committedDate": "2024-07-06T02:17:42Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d390abc49cdf68a3877015aa89a12ec9a46ab052",
                "additions": 3692,
                "deletions": 1034,
                "committedDate": "2024-07-06T15:32:56Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVsw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338163/job/27114804659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVsQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338166/job/27114804657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsU4A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338095/job/27114804448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVHw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338096/job/27114804511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVzQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338164/job/27114804685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVSg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338095/job/27114804554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVXw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338096/job/27114804575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVsA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338164/job/27114804656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVAA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338095/job/27114804480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVQQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338096/job/27114804545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVJw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338095/job/27114804519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsU9g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338096/job/27114804470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsVbg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338095/job/27114804590"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCyITw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820338096/job/27114899535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCsZqA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27114805672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUCspiA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "de0cc08e503e42c157eb214265eff662088060c7",
                "additions": 14,
                "deletions": 14,
                "committedDate": "2024-07-06T16:08:40Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEx6Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524367/job/27115205097"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEyUQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524374/job/27115205201"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEwLQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524024/job/27115204653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEwig",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524026/job/27115204746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEx8Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524368/job/27115205105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEw6Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524024/job/27115204841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEwzw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524026/job/27115204815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEyag",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524368/job/27115205226"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDExRg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524024/job/27115204934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDExNg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524026/job/27115204918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEwjQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524024/job/27115204749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDEwNA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524026/job/27115204660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDExqg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524024/job/27115205034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDMFdA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9820524026/job/27115324788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDE7SA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27115207496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGUDFOJg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e55ef425869077335554692adb9aad97ba41ed74",
                "additions": 2066,
                "deletions": 1231,
                "committedDate": "2024-07-08T06:49:33Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "83836a55e6f8510b9757ac0b4aede6a5051e4724",
                "additions": 2210,
                "deletions": 1232,
                "committedDate": "2024-07-09T13:31:13Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRgUw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132240/job/27249631315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRgaQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132242/job/27249631337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRf2g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132103/job/27249631194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRfPw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132102/job/27249631039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRhTQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132239/job/27249631565"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRerw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132103/job/27249630895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRgJA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132102/job/27249631268"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRg0A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132239/job/27249631440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRfUg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132103/job/27249631058"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRfrg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132102/job/27249631150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRgXg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132103/job/27249631326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDReuA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132102/job/27249630904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRg8Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132103/job/27249631473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDfEEg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9868132102/job/27249853458"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDRrqA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27249634216"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGWDSRcA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "71cee6be70787c6f170d00647bc1fa12b0de1330",
                "additions": 31172,
                "deletions": 18963,
                "committedDate": "2024-07-18T07:21:58Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4f1f57a22a35b662d66b5ef4cb62c5081ec0df9f",
                "additions": 9,
                "deletions": 6,
                "committedDate": "2024-07-18T07:29:01Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7PDg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362263/job/27601587982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7PCQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362271/job/27601587977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7Mlw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601587351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7Qag",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601588330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7RAQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362269/job/27601588481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7NyA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601587656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7PAg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601587970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7QEg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362269/job/27601588242"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7Q3Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601588445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7NmA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601587608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7P5Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601588197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7MjQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601587341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7RzQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601588685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbTRglg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601952918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS7glA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27601592468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGbS8s5w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHDSR5_w",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4453",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-05T07:02:17Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/MinImports.lean",
              "additions": 107,
              "deletions": 0
            },
            {
              "path": "test/MinImports.lean",
              "additions": 48,
              "deletions": 0
            }
          ]
        },
        "headRefName": "adomani/min_imps_command",
        "headRefOid": "4f1f57a22a35b662d66b5ef4cb62c5081ec0df9f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c50gS-E",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 14437,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7PDg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362263/job/27601587982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7PCQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362271/job/27601587977"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7Mlw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601587351"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7Qag",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601588330"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7RAQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362269/job/27601588481"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7NyA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601587656"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7PAg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601587970"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7QEg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362269/job/27601588242"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7Q3Q",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601588445"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7NmA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601587608"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7P5Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601588197"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7MjQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601587341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7RzQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362187/job/27601588685"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbTRglg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9987362195/job/27601952918"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS7glA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27601592468"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGbS8s5w",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14437&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHDSR5_w",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4453",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: `#min_imports in` command",
        "updatedAt": "2024-07-20T17:36:20Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/14437",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6OkqmPzwAAAAMe1OZy",
              "createdAt": "2024-07-05T07:02:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6OkqmPzwAAAAMe1OZ7",
              "createdAt": "2024-07-05T07:02:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DvrMe",
              "createdAt": "2024-07-05T07:02:56Z",
              "body": "### PR summary [4f1f57a22a](https://github.com/leanprover-community/mathlib4/pull/14437/commits/4f1f57a22a35b662d66b5ef4cb62c5081ec0df9f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.MinImports` `Mathlib.Tactic`|1|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ getAllImports`\n`+ getId`\n`+ getIrredundantImports`\n`+ getSyntaxNodeKinds`\n`+ getVisited`\n`+ hi`\n`+ minImpsCore`\n`+ uses_norm_num`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dv4rs",
              "createdAt": "2024-07-05T07:44:09Z",
              "body": "This looks exciting :tada: So, just to clarify: can I run this on an entire file like #find_home?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dv61Z",
              "createdAt": "2024-07-05T07:50:26Z",
              "body": "No, currently it is \"declaration\" based.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DwjM0",
              "createdAt": "2024-07-05T09:34:34Z",
              "body": "Actually, I do not think that `#find_home` can be run on a file either: `#find_home` takes an identifier as input (which is legal also for `#min_imps`).  Moreover, `#min_imps` takes any `command` or `term` and does its thing.\r\n",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Tt1zT",
              "createdAt": "2024-07-06T16:55:15Z",
              "source": {
                "id": "PR_kwDOFcwZ1c50l2E-",
                "title": "feat: the minImports linter",
                "url": "https://github.com/leanprover-community/mathlib4/pull/14480"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6OkqmPzwAAAAMhHkCB",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FMAF5",
              "createdAt": "2024-07-17T22:48:05Z",
              "body": "Happy to try this out in the wild. \r\n\r\nbors d+",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FMAHe",
              "createdAt": "2024-07-17T22:48:07Z",
              "body": ":v: adomani can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6OkqmPzwAAAAMnTw-i",
              "createdAt": "2024-07-17T22:48:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FRC2r",
              "createdAt": "2024-07-18T07:40:58Z",
              "body": "bors merge",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FRY_7",
              "createdAt": "2024-07-18T08:27:28Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9987538233/job/27602106890)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9987538233/job/27602107120)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6OkqmPzwAAAAMnwSlm",
              "createdAt": "2024-07-18T08:27:28Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6OkqmPzwAAAAMnwS5g",
              "createdAt": "2024-07-18T08:27:34Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FlgJt",
              "createdAt": "2024-07-20T16:35:17Z",
              "body": "Something that occurred to me that would also take into account elaborators is doing the following:\r\n\r\n1. save (and clear) the info trees with `Lean.Elab.getResetInfoTrees`\r\n2. elaborate the command\r\n3. recursively walk through the info trees collecting (1) the `elaborator` fields, (2) for every `Syntax` each of the `kind`s using your `getSyntaxNodeKinds`, and (3) for each TermInfo node, all the constants appearing in the `expr` and `expectedType?` fields.\r\n4. try to resolve all of these names, and find which modules they come from, like the code you already have, to compute imports.\r\n5. restore the info trees by prepending them to the new list of info trees.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FlhOe",
              "createdAt": "2024-07-20T16:52:00Z",
              "body": "@kmill, I am happy that you mention this!  I had also thought of using the `InfoTrees`, but I still feel a little intimidated by them, so I resorted to the more \"explicit\" approach, thinking that it would have been easier.\r\n\r\nHowever, seeing now the hoops that I am going through to retrieve the correct name for nameless instances, I am going back to thinking that the `InfoTrees` might be the way to go.\r\n\r\nCurrently, what I am really struggling with is this example:\r\n```lean\r\nimport Mathlib.Data.Sym.Sym2.Init -- the actual minimal import\r\nimport Aesop.Frontend.Attribute   -- the import that `#min_imports in` suggests\r\n\r\nimport Mathlib.Tactic.MinImports\r\n\r\n#min_imports in\r\n@[aesop (rule_sets := [Sym2]) [safe [constructors, cases], norm]]\r\ninductive Rel (α : Type) : α × α → α × α → Prop\r\n  | refl (x y : α) : Rel _ (x, y) (x, y)\r\n  | swap (x y : α) : Rel _ (x, y) (y, x)\r\n```\r\nThe `aesop` `rule_sets` elude my command.\r\n\r\nDo you think that `InfoTrees` would pick up on this import?",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FlhiC",
              "createdAt": "2024-07-20T16:58:17Z",
              "body": "Re InfoTree wrangling, since you're not going to do any meta calculations (you just want constant names), you can really just scan through all the Info nodes and ignore complexities like context updates.\r\n\r\nPicking up things like aesop rulesets seems complicated. Maybe aesop could install some fake infotree nodes with references to rulesets just to help your tool? Or maybe these infotree nodes are already present since aesop might use the elaborator to resolve them? (Every elabTerm results in some infotree nodes.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FlppL",
              "createdAt": "2024-07-20T17:36:19Z",
              "body": "Ok, I will experiment with `InfoTrees`.  I would like to understand them better anyway, since they would be useful for the \"beginners linter\" flagging `Nat.sub`: I want that linter to be aware of hypotheses `a \\le b` whenever `b - a` is present and this requires \"persisting\" fvars across the whole syntax tree.  Or at least, this is what I think!\r\n\r\nAlso, there are very few `aesop` `rule_sets` throughout mathlib, and I am happy to live without the tool parsing them correctly.  Besides, after one file that has been adjusted by hand, every file that imports it no longer has the issue.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UOlou",
              "createdAt": "2024-08-01T17:33:55Z",
              "source": {
                "id": "PR_kwDOFcwZ1c529Mz2",
                "title": "feat: MiM PR report",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
              }
            }
          ]
        }
      }
    }
  }
}
