{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 399,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alexkeizer"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Primarily focused on folding nested applications of `mapAccumr` into a single `mapAccumr`\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-07-10T12:17:22Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5gKT69",
              "body": "> One thing I'd like to see is that any theorem about Vectors that's proved here should also be proven for Lists, and maybe the Vector version should be a trivial consequence of the List version wherever possible.\r\n\r\nI agree that these results shouldn't necessarily be just for `Vector`s, but I'm not sure moving them to `List` and duplicating is necessarily a good idea. Especially since there seems to be some wish to make `Vector` a subtype of `Array` rather than `List`. Ideally, I'd like to state them generically over some `ListLike` interface.",
              "createdAt": "2023-06-29T14:47:34Z",
              "author": {
                "login": "alexkeizer"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5gLUZW",
              "body": "A `ListLike` class seems like a lot of work and certainly outside the scope of this PR. I won't insist on any theorem duplication. ",
              "createdAt": "2023-06-29T17:37:57Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hFC4-",
              "body": "bors merge",
              "createdAt": "2023-07-10T10:57:15Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hFjQN",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5507325572/jobs/10037135628)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5507325572/jobs/10037135806)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5507325572/jobs/10037136125)",
              "createdAt": "2023-07-10T12:17:20Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "37593dd4d52d37297317d1e9413caaf5080116a9",
                "additions": 296,
                "deletions": 0,
                "committedDate": "2023-06-28T16:52:09Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e3486a5c7af1233130adc18e0a7d293b2ac5e5f5",
                "additions": 273,
                "deletions": 271,
                "committedDate": "2023-06-28T16:52:09Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8b2fa8a26100284e8d36a1c3d1444172e6f79c0e",
                "additions": 42,
                "deletions": 6,
                "committedDate": "2023-06-28T16:52:09Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cd3a34baa0ccdd532ea7d518baf9453182163ff5",
                "additions": 27,
                "deletions": 35,
                "committedDate": "2023-06-28T16:52:09Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ed27a71cfb01e162ce68a187820d3dea4b3da7b2",
                "additions": 18,
                "deletions": 20,
                "committedDate": "2023-06-28T16:52:09Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb44f9102c6e5707e6c7457a0d26281fb8c625c6",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-06-28T16:52:09Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "22ea0547ae2213e8b2678242ded052b27d53622a",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-06-28T16:55:43Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6c3c883331f27a1e207dec828bb1232cee7e9fa7",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-06-29T15:31:50Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dc227c6540c75c093d883656f8687bca544988bd",
                "additions": 1,
                "deletions": 18,
                "committedDate": "2023-06-29T15:39:14Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a6b39e62221e3b1b2fd346cdf3ba1a9125c916ec",
                "additions": 64,
                "deletions": 6,
                "committedDate": "2023-06-29T18:50:32Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9cd18fbff1b472bc78d851cb40c491c55ea07aa5",
                "additions": 41,
                "deletions": 4,
                "committedDate": "2023-06-30T16:14:28Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6f07fe1b89f6bb8e7f0e9353888edd58dd8db2db",
                "additions": 56,
                "deletions": 54,
                "committedDate": "2023-07-03T10:10:07Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ab0d94fca481f1cdfefb7ee8bb92a3e6999e9980",
                "additions": 35,
                "deletions": 25,
                "committedDate": "2023-07-07T09:50:31Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "995795176be6984f9dab5b518b2a7b03c2113a11",
                "additions": 30,
                "deletions": 15,
                "committedDate": "2023-07-07T13:42:56Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2ed2ccb18fac0f2bb6c49b85b148288245d31dca",
                "additions": 1,
                "deletions": 26,
                "committedDate": "2023-07-07T18:04:18Z",
                "author": {
                  "name": "Chris Hughes",
                  "email": "chrishughes24@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5679934e8b71d546dcbec0db6a4ad3d9e470dc1b",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-07-07T18:05:27Z",
                "author": {
                  "name": "Chris Hughes",
                  "email": "chrishughes24@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "58ed223e9fb3787763cc68708469ad50b16db93c",
                "additions": 25,
                "deletions": 35,
                "committedDate": "2023-07-10T10:50:08Z",
                "author": {
                  "name": "Alex Keizer",
                  "email": "alex@keizer.dev"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-06-28T16:54:29Z",
        "deletions": 6,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Vector/Basic.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Vector/MapLemmas.lean",
              "additions": 397,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Vector/Snoc.lean",
              "additions": 1,
              "deletions": 4
            }
          ]
        },
        "headRefName": "vector-normmap",
        "headRefOid": "58ed223e9fb3787763cc68708469ad50b16db93c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5UKaLA",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ak28s",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ChrisHughes24"
              },
              "submittedAt": "2023-07-07T19:11:02Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5558,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5Zucy9",
              "body": "One thing I'd like to see is that any theorem about Vectors that's proved here should also be proven for Lists, and maybe the Vector version should be a trivial consequence of the List version wherever possible.",
              "state": "COMMENTED",
              "author": {
                "login": "ChrisHughes24"
              },
              "submittedAt": "2023-06-29T14:30:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZvOkr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexkeizer"
              },
              "submittedAt": "2023-06-29T15:23:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZvPaw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexkeizer"
              },
              "submittedAt": "2023-06-29T15:24:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZvRPa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexkeizer"
              },
              "submittedAt": "2023-06-29T15:31:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5aDdBO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexkeizer"
              },
              "submittedAt": "2023-07-03T10:11:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ak28s",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ChrisHughes24"
              },
              "submittedAt": "2023-07-07T19:11:02Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KTm-I",
                    "body": "I think the equality should be the other way around and named something like `mapAccumr_eq_map`. Also I'm guessing the `⟨⟩` is type `Unit`, but I think a similar lemma applies for arbitrary types, as long as we don't depend on that.",
                    "createdAt": "2023-06-29T13:52:57Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KUKas",
                    "body": "You are right. Actually, the reverse lemma is already present as `mapAccumr_redundant_state` at the bottom of the file. I'll remove these two",
                    "createdAt": "2023-06-29T15:31:29Z",
                    "author": {
                      "login": "alexkeizer"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KTnGG",
                    "body": "As above",
                    "createdAt": "2023-06-29T13:53:19Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KTna4",
                    "body": "I'm not a massive fan of `let`s in theorem statements, you almost always want to reduce them even if the resulting term is longer.",
                    "createdAt": "2023-06-29T13:54:18Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KUGqv",
                    "body": "Hmm, here the let is on the right side of the equation, so I thought it would be fine; these lemmas are intended as rewrite rules, I don't expect a goal of exactly this type to come up. Then again, that does mean we are making the reverse rule `<-mapAccumr_mapAccumr` more difficult to use.\r\n\r\nThe reduction is a bit nasty: here is a before/after\r\n```lean\r\n  let m := (mapAccumr (fun x s =>\r\n    let r₂ := f₂ x s.snd\r\n    let r₁ := f₁ r₂.snd s.fst\r\n    ((r₁.fst, r₂.fst), r₁.snd)\r\n  ) xs (s₁, s₂))\r\n  (m.fst.fst, m.snd) \r\n  ```\r\nTurns into\r\n  ```lean\r\n  (\r\n    (mapAccumr (fun x s => (\r\n      ((f₁ (f₂ x s.snd).snd s.fst).fst, (f₂ x s.snd).fst), (f₁ (f₂ x s.snd).snd s.fst).snd)\r\n    ) xs (s₁, s₂)).fst.fst, \r\n    (mapAccumr (fun x s => (\r\n      ((f₁ (f₂ x s.snd).snd s.fst).fst, (f₂ x s.snd).fst), (f₁ (f₂ x s.snd).snd s.fst).snd)\r\n    ) xs (s₁, s₂)).snd\r\n  ) \r\n  ```\r\n\r\nI'll defer to you on whether the readability penalty is worth it",
                    "createdAt": "2023-06-29T15:23:35Z",
                    "author": {
                      "login": "alexkeizer"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KTnoQ",
                    "body": "Is this not a duplication? It seems like it would already be there.",
                    "createdAt": "2023-06-29T13:54:54Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KUHNn",
                    "body": "Neither `apply?` nor `simp` seem to find any such existing lemma, so I don't think we have it",
                    "createdAt": "2023-06-29T15:24:43Z",
                    "author": {
                      "login": "alexkeizer"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KToT3",
                    "body": "```suggestion\r\ntheorem mapAccumr₂_mapAccumr₂_left_right  \r\n  (f₁ : γ → β → σ₁ → σ₁ × φ) (f₂ : α → β → σ₂ → σ₂ × γ) :\r\n```",
                    "createdAt": "2023-06-29T13:56:48Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KTrGw",
                    "body": "I feel like this theorem can be generalized. Are there more general conditions where you can replace the state type with a different state type, that proves this lemma as a special case?",
                    "createdAt": "2023-06-29T14:05:21Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KUIVg",
                    "body": "It probably can be, I'll have to think about it a bit more. I choose products in particular, because the earlier folding of nested `mapAccumr`s has a tendency to produce pairs with redundant state, so this theorem is needed to counterbalance that.",
                    "createdAt": "2023-06-29T15:28:22Z",
                    "author": {
                      "login": "alexkeizer"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KivRI",
                    "body": "The most general way to relate two applications of `mapAccumr`, with potentially different states, is bisimulation. I've added bisimulation lemmas, and proven this result in terms of bisimulation",
                    "createdAt": "2023-07-03T10:11:46Z",
                    "author": {
                      "login": "alexkeizer"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KTt05",
                    "body": "I'm not sure that this is a good `simp` lemma because we have a hypothesis.",
                    "createdAt": "2023-06-29T14:14:03Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KUI3H",
                    "body": "As in, it won't work, or it's not considered appropriate?\r\nI think it does work, but I can always add it to just the `aesop` ruleset, instead of as a simp-lemma",
                    "createdAt": "2023-06-29T15:30:00Z",
                    "author": {
                      "login": "alexkeizer"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K4if0",
                    "body": "```suggestion\r\ntheorem mapAccumr₂_mapAccumr₂_right_left  \r\n    (f₁ : α → γ → σ₁ → σ₁ × φ) (f₂ : α → β → σ₂ → σ₂ × γ) :\r\n```",
                    "createdAt": "2023-07-07T19:09:19Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K4ik6",
                    "body": "```suggestion\r\ntheorem mapAccumr₂_mapAccumr₂_right_right \r\n    (f₁ : β → γ → σ₁ → σ₁ × φ) (f₂ : α → β → σ₂ → σ₂ × γ) :\r\n```",
                    "createdAt": "2023-07-07T19:09:38Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K4ip0",
                    "body": "```suggestion\r\n    (f₁ : γ → β → σ₁ → σ₁ × φ) (f₂ : α → β → σ₂ → σ₂ × γ) :\r\n```",
                    "createdAt": "2023-07-07T19:09:57Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K4i5X",
                    "body": "I think I might have changed my mind about the use of lets. It's very unreadable right now. Maybe the lets should be reintroduced on second thoughts.",
                    "createdAt": "2023-07-07T19:10:59Z",
                    "author": {
                      "login": "ChrisHughes24"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4NDkwMTg3",
              "login": "alexkeizer"
            },
            {
              "id": "MDQ6VXNlcjMzODQ3Njg2",
              "login": "ChrisHughes24"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: simplification lemmas for Vector.map / Vector.mapAccumr",
        "updatedAt": "2023-07-10T12:17:27Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5558",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "37593dd4d52d37297317d1e9413caaf5080116a9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e3486a5c7af1233130adc18e0a7d293b2ac5e5f5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8b2fa8a26100284e8d36a1c3d1444172e6f79c0e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cd3a34baa0ccdd532ea7d518baf9453182163ff5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ed27a71cfb01e162ce68a187820d3dea4b3da7b2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cb44f9102c6e5707e6c7457a0d26281fb8c625c6"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJANQ9b",
              "createdAt": "2023-06-28T16:54:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJANQ9f",
              "createdAt": "2023-06-28T16:54:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJANQ9o",
              "createdAt": "2023-06-28T16:54:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "22ea0547ae2213e8b2678242ded052b27d53622a"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qDpaNzwAAAAJANyc5",
              "createdAt": "2023-06-28T17:08:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5qDpaNzwAAAAJAVZVG",
              "createdAt": "2023-06-28T20:13:31Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMzODQ3Njg2",
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5Zucy9",
              "createdAt": "2023-06-29T13:52:57Z",
              "body": "One thing I'd like to see is that any theorem about Vectors that's proved here should also be proven for Lists, and maybe the Vector version should be a trivial consequence of the List version wherever possible.",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5gKT69",
              "createdAt": "2023-06-29T14:47:34Z",
              "body": "> One thing I'd like to see is that any theorem about Vectors that's proved here should also be proven for Lists, and maybe the Vector version should be a trivial consequence of the List version wherever possible.\r\n\r\nI agree that these results shouldn't necessarily be just for `Vector`s, but I'm not sure moving them to `List` and duplicating is necessarily a good idea. Especially since there seems to be some wish to make `Vector` a subtype of `Array` rather than `List`. Ideally, I'd like to state them generically over some `ListLike` interface.",
              "author": {
                "login": "alexkeizer"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6c3c883331f27a1e207dec828bb1232cee7e9fa7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dc227c6540c75c093d883656f8687bca544988bd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5gLUZW",
              "createdAt": "2023-06-29T17:37:57Z",
              "body": "A `ListLike` class seems like a lot of work and certainly outside the scope of this PR. I won't insist on any theorem duplication. ",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a6b39e62221e3b1b2fd346cdf3ba1a9125c916ec"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qDpaNzwAAAAJBarzV",
              "createdAt": "2023-06-30T12:37:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJBarzb",
              "createdAt": "2023-06-30T12:37:22Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJBarzi",
              "createdAt": "2023-06-30T12:37:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9cd18fbff1b472bc78d851cb40c491c55ea07aa5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6f07fe1b89f6bb8e7f0e9353888edd58dd8db2db"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qDpaNzwAAAAJEqfyv",
              "createdAt": "2023-07-06T10:05:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJEqfzB",
              "createdAt": "2023-07-06T10:05:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qDpaNzwAAAAJEqgHU",
              "createdAt": "2023-07-06T10:05:11Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qDpaNzwAAAAJEqgld",
              "createdAt": "2023-07-06T10:05:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ab0d94fca481f1cdfefb7ee8bb92a3e6999e9980"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "995795176be6984f9dab5b518b2a7b03c2113a11"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2ed2ccb18fac0f2bb6c49b85b148288245d31dca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5679934e8b71d546dcbec0db6a4ad3d9e470dc1b"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ak28s",
              "createdAt": "2023-07-07T19:09:19Z",
              "body": "",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "58ed223e9fb3787763cc68708469ad50b16db93c"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hFC4-",
              "createdAt": "2023-07-10T10:57:15Z",
              "body": "bors merge",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qDpaNzwAAAAJGiDp3",
              "createdAt": "2023-07-10T10:57:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hFjQN",
              "createdAt": "2023-07-10T12:17:20Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5507325572/jobs/10037135628)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5507325572/jobs/10037135806)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5507325572/jobs/10037136125)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5qDpaNzwAAAAJGlJYw",
              "createdAt": "2023-07-10T12:17:22Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5qDpaNzwAAAAJGlJjd",
              "createdAt": "2023-07-10T12:17:27Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
