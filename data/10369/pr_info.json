{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 67,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "j-loreaux"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "\n---\n\nTomas, I've requested your review because I want to make sure all these lemmas have the right form for `fun_prop`.\n\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-02-12T05:03:37Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5zY-kC",
              "body": "All looks good!\r\n\r\nAt first I was worried that `Continuous.const_smul` is a variant of `continuous_mul_left`. The left/right variants of `Continuous.mul` are not necessary. But then I notices that `Continuous.const_smul` has actually different assumptions then `Continuous.smul`.\r\n\r\nI'm happy to review any future PRs adding more `fun_prop` theorems!",
              "createdAt": "2024-02-09T13:27:26Z",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zZpeX",
              "body": "Shouldn't we instead move the attribute directly to the lemmas in the library, to make sure that `fun_prop` is usable right away to prove continuity? Otherwise, `fun_prop` will only be usable in files that are downstream of all the files mentioned here.",
              "createdAt": "2024-02-09T15:11:36Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zasqc",
              "body": "@sgouezel I think the current plan is to collect lemmas here for the moment, so that people can see which lemmas are appropriate to tag. Once we have a good feel for this, then we can redistribute the lemmas across the library. That's what was done with `gcongr` (in fact, the moving PR is still open #9393).\r\n\r\nIt's also easier to see if any lemmas are missing if they're in a big list like this. So for the moment I would prefer to keep them here (despite that meaning that it is temporarily less usable).",
              "createdAt": "2024-02-09T18:05:17Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zauLl",
              "body": "@lecopivo Is there a reason things like `continuous_star` are not tagged (note that `continuous_star` is exported to the root namespace from `ContinuousStar.continuous_star` if you're looking for it in the docs)? These kinds of lemmas state `Continuous star` as opposed to `Continuous.star` which states `Continuous (fun x ↦ star (f x))`. I note that `fun_prop` can still prove it (by taking `f := id`) as is. Mainly I'm wondering if this is a performance issue. If we ever want to print the terms (especially in the case of a `fun_prop?` tactic), then it would be nice if we didn't have this extra `id` step cluttering the term.",
              "createdAt": "2024-02-09T18:09:58Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zbHEO",
              "body": "I call these two ways for formulating the theorem to be in \"uncurried form\" or in \"compositional form\". `fun_prop` can work with both of them and I guess we should mark both. At some point, I would like to do a performance test to see if using theorems in uncurried or compositional is faster.\r\n\r\nI talk about this a bit in:\r\nhttps://github.com/leanprover-community/mathlib4/blob/master/test/fun_prop.lean\r\n\r\nI agree that for `fun_prop?` it would be better to use the uncurried form if possible.",
              "createdAt": "2024-02-09T19:29:13Z",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zbMD_",
              "body": "I think I added only theorems in compositional form as they are more general. For example \r\n```\r\ntheorem continuous_array_map \r\n    (f : W → X → Y) (xs : W → Array X) \r\n    (hf : Continuous (fun (w,x) => f w x)) (hxs : Continuous xs) :\r\n    Continuous (fun w => Array.map (f w) (xs w)) := sorry\r\n```\r\ncan't be stated in uncurried form.",
              "createdAt": "2024-02-09T19:45:12Z",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zdKDA",
              "body": "> @sgouezel I think the current plan is to collect lemmas here for the moment, so that people can see which lemmas are appropriate to tag. Once we have a good feel for this, then we can redistribute the lemmas across the library. That's what was done with `gcongr` (in fact, the moving PR is still open #9393).\r\n\r\nAs the author of #9393, I don't think that this will work well for any educational purposes. My guess is that most people want to **just use** the tactic and not care about tagging theorems. For these people (incl. myself), the fact that the basic setup file has heavier-than-necessary dependencies is bad. So, I would tag lemmas right where they are.",
              "createdAt": "2024-02-10T14:42:39Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zdMiW",
              "body": "> \r\n> As the author of #9393, I don't think that this will work well for any educational purposes. My guess is that most people want to **just use** the tactic and not care about tagging theorems. For these people (incl. myself), the fact that the basic setup file has heavier-than-necessary dependencies is bad. So, I would tag lemmas right where they are.\r\n\r\nOne of the reasons for putting it in a separate file was for my comfort not having to recompile whole mathlib if I change internals of `fun_prop`. But I should not trade my convenience for the convenience of everybody else. I will redistribute the attributes next week.",
              "createdAt": "2024-02-10T15:04:54Z",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zg_aL",
              "body": "I understand why it's convenient while you're working on a tactic. Once we start using the tactic all over the library, it's better to have it available very early.",
              "createdAt": "2024-02-12T03:42:43Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zhENx",
              "body": "@urkud how about merging this as is, with a promise that we'll distribute the lemmas in a PR this week?",
              "createdAt": "2024-02-12T04:21:46Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zhGPi",
              "body": "bors merge",
              "createdAt": "2024-02-12T04:37:15Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zhJkc",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7867351313/job/21462908109)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7867351313/job/21462908175)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7867351313/job/21462908284)",
              "createdAt": "2024-02-12T05:03:37Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "face56dbc4b4c07f8b0a2c5727f1d9886096dcbc",
                "additions": 64,
                "deletions": 0,
                "committedDate": "2024-02-09T07:39:05Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1U8ng",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841001666/job/21396536478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1U8kw",
                        "name": "label-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841001665/job/21396536467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UmPA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999575/job/21396530748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UmHg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999576/job/21396530718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1U80A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841001667/job/21396536528"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UmuQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999575/job/21396530873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1Un3Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999576/job/21396531165"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1U9KQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841001667/job/21396536617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1Un5Q",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999575/job/21396531173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1Umrw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999576/job/21396530863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UoTQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999575/job/21396531277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UnSg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999576/job/21396531018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UoVg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999576/job/21396531286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1UnQg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999575/job/21396531010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1Uowg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999575/job/21396531394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1gklA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7840999576/job/21396726932"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1VXAA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10369"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ee132dda7529cd92eed1267e737ff5d19397aa1d",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-02-09T08:05:21Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-_v5jw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7844685652/job/21407463823"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-_v4jw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7844685656/job/21407463567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1450w",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203488/job/21397125587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-144Vw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203357/job/21397125207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-145HA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203351/job/21397125404"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-147bQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203486/job/21397125997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-_v4qQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7844685652/job/21407463593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-147Mw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203357/job/21397125939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-144PQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203351/job/21397125181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-146kQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203486/job/21397125777"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-146dA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203357/job/21397125748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1460g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203351/job/21397125842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-145LQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203357/job/21397125421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-147cA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203351/job/21397126000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1457w",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203351/job/21397125615"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-1477Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203357/job/21397126125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-148gg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203357/job/21397126274"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-164Wg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7841203351/job/21397157978"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-16_Hg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10369"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "48877bdb8fdf4c4580412a4327e69adf5c443322",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2024-02-09T14:58:54Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7a65e25665f82c04f52b7650dbcba20415245c1c",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2024-02-09T18:13:40Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4B9A",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971304/job/21418082804"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J3_rA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4ApQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4COA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971308/job/21418082872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4AcA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4DWA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418083160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4DIw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971308/job/21418083107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4BiQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4Bhw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4DZQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418083173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4Cmg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4Cpg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J3_4w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J4EDw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418083343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_Kl_sg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418835890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_J7qTg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10369"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGZPvaIw",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1541",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-02-09T07:39:26Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/FunProp/Continuous.lean",
              "additions": 64,
              "deletions": 0
            },
            {
              "path": "scripts/noshake.json",
              "additions": 3,
              "deletions": 2
            }
          ]
        },
        "headRefName": "j-loreaux/fun_prop-continuity-attrs",
        "headRefOid": "7a65e25665f82c04f52b7650dbcba20415245c1c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5mdDeT",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5vmobC",
              "body": "All looks good!",
              "state": "APPROVED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-09T13:28:35Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 10369,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5vmobC",
              "body": "All looks good!",
              "state": "APPROVED",
              "author": {
                "login": "lecopivo"
              },
              "submittedAt": "2024-02-09T13:28:35Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjY1OTYzMDU=",
              "login": "lecopivo"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4B9A",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971304/job/21418082804"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J3_rA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4ApQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082469"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4COA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971308/job/21418082872"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4AcA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082416"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4DWA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418083160"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4DIw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971308/job/21418083107"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4BiQ",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082697"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4Bhw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4DZQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418083173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4Cmg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082970"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4Cpg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418082982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J3_4w",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418082275"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J4EDw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971119/job/21418083343"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_Kl_sg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7847971121/job/21418835890"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE_J7qTg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10369"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGZPvaIw",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1541",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore: add `fun_prop` attribute to various continuity lemmas",
        "updatedAt": "2024-02-12T05:03:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/10369",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-wb2szwAAAAK8o4co",
              "createdAt": "2024-02-09T07:40:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-wb2szwAAAAK8o4ct",
              "createdAt": "2024-02-09T07:40:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5-wb2szwAAAAK8o40p",
              "createdAt": "2024-02-09T07:40:27Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY1OTYzMDU=",
                "login": "lecopivo"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zY-kC",
              "createdAt": "2024-02-09T13:27:26Z",
              "body": "All looks good!\r\n\r\nAt first I was worried that `Continuous.const_smul` is a variant of `continuous_mul_left`. The left/right variants of `Continuous.mul` are not necessary. But then I notices that `Continuous.const_smul` has actually different assumptions then `Continuous.smul`.\r\n\r\nI'm happy to review any future PRs adding more `fun_prop` theorems!",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5-wb2szwAAAAK81PDD",
              "createdAt": "2024-02-09T13:27:40Z",
              "assignee": {
                "id": "MDQ6VXNlcjY1OTYzMDU=",
                "login": "lecopivo"
              }
            },
            {
              "__typename": "UnassignedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5vmobC",
              "createdAt": "2024-02-09T13:28:35Z",
              "body": "All looks good!",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zZpeX",
              "createdAt": "2024-02-09T15:11:36Z",
              "body": "Shouldn't we instead move the attribute directly to the lemmas in the library, to make sure that `fun_prop` is usable right away to prove continuity? Otherwise, `fun_prop` will only be usable in files that are downstream of all the files mentioned here.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zasqc",
              "createdAt": "2024-02-09T18:05:17Z",
              "body": "@sgouezel I think the current plan is to collect lemmas here for the moment, so that people can see which lemmas are appropriate to tag. Once we have a good feel for this, then we can redistribute the lemmas across the library. That's what was done with `gcongr` (in fact, the moving PR is still open #9393).\r\n\r\nIt's also easier to see if any lemmas are missing if they're in a big list like this. So for the moment I would prefer to keep them here (despite that meaning that it is temporarily less usable).",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zauLl",
              "createdAt": "2024-02-09T18:09:58Z",
              "body": "@lecopivo Is there a reason things like `continuous_star` are not tagged (note that `continuous_star` is exported to the root namespace from `ContinuousStar.continuous_star` if you're looking for it in the docs)? These kinds of lemmas state `Continuous star` as opposed to `Continuous.star` which states `Continuous (fun x ↦ star (f x))`. I note that `fun_prop` can still prove it (by taking `f := id`) as is. Mainly I'm wondering if this is a performance issue. If we ever want to print the terms (especially in the case of a `fun_prop?` tactic), then it would be nice if we didn't have this extra `id` step cluttering the term.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zbHEO",
              "createdAt": "2024-02-09T19:29:13Z",
              "body": "I call these two ways for formulating the theorem to be in \"uncurried form\" or in \"compositional form\". `fun_prop` can work with both of them and I guess we should mark both. At some point, I would like to do a performance test to see if using theorems in uncurried or compositional is faster.\r\n\r\nI talk about this a bit in:\r\nhttps://github.com/leanprover-community/mathlib4/blob/master/test/fun_prop.lean\r\n\r\nI agree that for `fun_prop?` it would be better to use the uncurried form if possible.",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zbMD_",
              "createdAt": "2024-02-09T19:45:12Z",
              "body": "I think I added only theorems in compositional form as they are more general. For example \r\n```\r\ntheorem continuous_array_map \r\n    (f : W → X → Y) (xs : W → Array X) \r\n    (hf : Continuous (fun (w,x) => f w x)) (hxs : Continuous xs) :\r\n    Continuous (fun w => Array.map (f w) (xs w)) := sorry\r\n```\r\ncan't be stated in uncurried form.",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zdKDA",
              "createdAt": "2024-02-10T14:42:39Z",
              "body": "> @sgouezel I think the current plan is to collect lemmas here for the moment, so that people can see which lemmas are appropriate to tag. Once we have a good feel for this, then we can redistribute the lemmas across the library. That's what was done with `gcongr` (in fact, the moving PR is still open #9393).\r\n\r\nAs the author of #9393, I don't think that this will work well for any educational purposes. My guess is that most people want to **just use** the tactic and not care about tagging theorems. For these people (incl. myself), the fact that the basic setup file has heavier-than-necessary dependencies is bad. So, I would tag lemmas right where they are.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zdMiW",
              "createdAt": "2024-02-10T15:04:54Z",
              "body": "> \r\n> As the author of #9393, I don't think that this will work well for any educational purposes. My guess is that most people want to **just use** the tactic and not care about tagging theorems. For these people (incl. myself), the fact that the basic setup file has heavier-than-necessary dependencies is bad. So, I would tag lemmas right where they are.\r\n\r\nOne of the reasons for putting it in a separate file was for my comfort not having to recompile whole mathlib if I change internals of `fun_prop`. But I should not trade my convenience for the convenience of everybody else. I will redistribute the attributes next week.",
              "author": {
                "login": "lecopivo"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zg_aL",
              "createdAt": "2024-02-12T03:42:43Z",
              "body": "I understand why it's convenient while you're working on a tactic. Once we start using the tactic all over the library, it's better to have it available very early.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-wb2szwAAAAK9hfEk",
              "createdAt": "2024-02-12T03:43:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-wb2szwAAAAK9hfEn",
              "createdAt": "2024-02-12T03:43:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zhENx",
              "createdAt": "2024-02-12T04:21:46Z",
              "body": "@urkud how about merging this as is, with a promise that we'll distribute the lemmas in a PR this week?",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-wb2szwAAAAK9iZO4",
              "createdAt": "2024-02-12T04:37:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zhGPi",
              "createdAt": "2024-02-12T04:37:15Z",
              "body": "bors merge",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-wb2szwAAAAK9iZi7",
              "createdAt": "2024-02-12T04:37:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zhJkc",
              "createdAt": "2024-02-12T05:03:37Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7867351313/job/21462908109)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7867351313/job/21462908175)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7867351313/job/21462908284)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5-wb2szwAAAAK9i3Gp",
              "createdAt": "2024-02-12T05:03:37Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5-wb2szwAAAAK9i3KF",
              "createdAt": "2024-02-12T05:03:40Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
