{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 41,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "grunweg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "These were flagged by the linter in https://github.com/leanprover-community/mathlib4/pull/12879: it is easy to simple avoid > or â‰¥ in hypotheses or haves.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 15,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5-AQdH",
              "body": "maintainer merge \n",
              "createdAt": "2024-05-16T04:21:32Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-AQfR",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by adomani.",
              "createdAt": "2024-05-16T04:21:46Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-CLC_",
              "body": "> Note that all these changes are in `Archive/` or `test/`. In `Archive/` we might argue that `>` is sometimes the more readable option... In `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n> \r\n> So I'm not sure if I'm a fan of these changes. The rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.\r\n\r\nI wrote these lines to fix the linter errors (as the linter is imported transitively via mathlib). I don't have a strong opinion if the linter should be enforced there. Is there an easy way to disable the linter in all tests/all of mathlib? (Does the archive have a .lakefile we can use?)",
              "createdAt": "2024-05-16T08:36:29Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-GsNc",
              "body": "> > Note that all these changes are in `Archive/` or `test/`. In `Archive/` we might argue that `>` is sometimes the more readable option... In `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n> > So I'm not sure if I'm a fan of these changes. The rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.\r\n> \r\n> I wrote these lines to fix the linter errors (as the linter is imported transitively via mathlib). I don't have a strong opinion if the linter should be enforced there. Is there an easy way to disable the linter in all tests/all of mathlib? (Does the archive have a .lakefile we can use?)\r\n\r\nWhat I did in another situation, was to make the linter check that the name of the current module started with `Mathlib.` and `return` otherwise.",
              "createdAt": "2024-05-16T16:26:55Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-Jh9W",
              "body": "Since `GT.gt` is now reducible, is this linter still relevant? I mean, does one of common tactics fail to recognize `(a > b) = (b < a)`? If yes, should we fix the tactic instead?",
              "createdAt": "2024-05-17T00:35:53Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5-Nth5",
              "body": "Good question! I hadn't, in fact, tested whether the situation in Lean 4 is better than Lean 3.\r\nI'll put it on my list of things to do some tests. Help doing so is very welcome!\r\nawaiting-author",
              "createdAt": "2024-05-17T12:45:27Z",
              "author": {
                "login": "grunweg"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6c742559b9bcc7acaf8d1f323511e4fd796b7c40",
                "additions": 42,
                "deletions": 35,
                "committedDate": "2024-05-15T20:27:39Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ba592ef5562c253383b3a33e396506241682c0e3",
                "additions": 7,
                "deletions": 15,
                "committedDate": "2024-05-15T20:33:05Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1B41bA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9106417486/job/25033586028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1GdZ7Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162174/job/25038379501"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1GogIw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108221299/job/25038561315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02iCQg",
                        "name": "add-comment",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102334283/job/25021678146"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF2B-FKw",
                        "name": "add-comment",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9128436536/job/25100780843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1B41fw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9106417488/job/25033586047"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1GdYxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162161/job/25038379204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1GdZ0Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162173/job/25038379473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1GogLg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108221318/job/25038561326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dWiA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309936/job/25021601416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dRAw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dQ-Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021599993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dYMQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309935/job/25021601841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1B415A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9106417486/job/25033586148"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1GdY5w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162174/job/25038379239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF1Goheg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108221299/job/25038561658"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dR2g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dS6g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021600490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dXQQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309935/job/25021601601"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dXBw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021601543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dR4A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021600224"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dTBw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dWuQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021601465"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dUsw",
                        "name": "summarize_declarations",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600947"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dUuA",
                        "name": "summarize_declarations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021600952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dViQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021601161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dVjg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021601166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dX_Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021601789"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF04bwQg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25023672386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02dwLg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25021607982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAF02enew",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=12934"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-05-15T16:12:37Z",
        "deletions": 42,
        "files": {
          "nodes": [
            {
              "path": "Archive/Imo/Imo1962Q1.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Archive/Imo/Imo1988Q6.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Archive/Imo/Imo1994Q1.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Archive/Imo/Imo2005Q3.lean",
              "additions": 5,
              "deletions": 6
            },
            {
              "path": "Archive/Imo/Imo2006Q3.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Archive/Imo/Imo2008Q2.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Imo/Imo2008Q3.lean",
              "additions": 13,
              "deletions": 13
            },
            {
              "path": "Archive/Imo/Imo2019Q4.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Archive/Sensitivity.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Archive/Wiedijk100Theorems/CubingACube.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Datatypes.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/cancel_denoms.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "test/congr.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/interval_cases.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/observe.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "MR-avoid-ge-gt2",
        "headRefOid": "ba592ef5562c253383b3a33e396506241682c0e3",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5vjjBX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
              "color": "cc317c",
              "name": "help-wanted"
            },
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c56xlPZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-05-16T07:25:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c56xgVo",
              "body": "Note that all these changes are in `Archive/` or `test/`.\r\nIn `Archive/` we might argue that `>` is sometimes the more readable option...\r\nIn `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n\r\nSo I'm not sure if I'm a fan of these changes.\r\nThe rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-05-16T07:20:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c56wfQf",
              "body": "Thanks!  Nice use of binders!\n\nmaintainer merge ",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-05-16T04:19:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 12934,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c56tMnF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-05-15T17:55:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c56uMGf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-05-15T20:20:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c56wfQf",
              "body": "Thanks!  Nice use of binders!\n\nmaintainer merge ",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-05-16T04:19:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c56xgVo",
              "body": "Note that all these changes are in `Archive/` or `test/`.\r\nIn `Archive/` we might argue that `>` is sometimes the more readable option...\r\nIn `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n\r\nSo I'm not sure if I'm a fan of these changes.\r\nThe rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-05-16T07:20:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c56xlPZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-05-16T07:25:39Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ffS5m",
                    "body": "You're already fixing that in #12933. Maybe you can just merge the PRs into one?",
                    "createdAt": "2024-05-15T17:55:00Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ff517",
                    "body": "Fair enough; I have cherry-picked these changes into the other PR. I will re-use this one for more changes (the whole branch has about +- 300 lines of fixes).",
                    "createdAt": "2024-05-15T20:20:49Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5fh_nN",
                    "body": "The comment complains about linarith being bad. But it got a lot better recently. And there's also omega... Can we improve this now?",
                    "createdAt": "2024-05-16T07:17:35Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5fh_zT",
                    "body": "This no longer matches the comment.",
                    "createdAt": "2024-05-16T07:18:14Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5fiCwW",
                    "body": "I think this is fine for a comment to be more mathematically accurate than the corresponding Lean code?",
                    "createdAt": "2024-05-16T07:25:39Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1B41bA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9106417486/job/25033586028"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1GdZ7Q",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162174/job/25038379501"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1GogIw",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108221299/job/25038561315"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02iCQg",
                "name": "add-comment",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102334283/job/25021678146"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF2B-FKw",
                "name": "add-comment",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9128436536/job/25100780843"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1B41fw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9106417488/job/25033586047"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1GdYxA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162161/job/25038379204"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1GdZ0Q",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162173/job/25038379473"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1GogLg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108221318/job/25038561326"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dWiA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309936/job/25021601416"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dRAw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600003"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dQ-Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021599993"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dYMQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309935/job/25021601841"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1B415A",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9106417486/job/25033586148"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1GdY5w",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108162174/job/25038379239"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF1Goheg",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9108221299/job/25038561658"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dR2g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600218"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dS6g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021600490"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dXQQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309935/job/25021601601"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dXBw",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021601543"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dR4A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021600224"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dTBw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600519"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dWuQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021601465"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dUsw",
                "name": "summarize_declarations",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021600947"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dUuA",
                "name": "summarize_declarations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021600952"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dViQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021601161"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dVjg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25021601166"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dX_Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309686/job/25021601789"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF04bwQg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9102309689/job/25023672386"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02dwLg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/25021607982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAF02enew",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=12934"
              }
            ]
          }
        },
        "title": "chore: replace more uses of > or â‰¥ by < or â‰¤",
        "updatedAt": "2024-07-31T08:13:58Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/12934",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAL8KFaH",
              "createdAt": "2024-05-15T16:12:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6I_b6WzwAAAAL8KMME",
              "createdAt": "2024-05-15T16:14:45Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c56tMnF",
              "createdAt": "2024-05-15T17:55:00Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAL8U1tN",
              "createdAt": "2024-05-15T20:20:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6I_b6WzwAAAAL8U2AM",
              "createdAt": "2024-05-15T20:21:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5SutWP",
              "createdAt": "2024-05-15T20:21:48Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5vjfgc",
                "title": "chore: replace some use of > or â‰¥ by < or â‰¤",
                "url": "https://github.com/leanprover-community/mathlib4/pull/12933"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6I_b6WzwAAAAL8VVTy",
              "createdAt": "2024-05-15T20:33:22Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5SuuGU",
              "createdAt": "2024-05-15T20:34:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5vT9-n",
                "title": "feat: port ge_or_gt linter from mathlib3",
                "url": "https://github.com/leanprover-community/mathlib4/pull/12879"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6I_b6WzwAAAAL8VaHQ",
              "createdAt": "2024-05-15T20:35:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAL8VaHY",
              "createdAt": "2024-05-15T20:35:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c56wfQf",
              "createdAt": "2024-05-16T04:19:28Z",
              "body": "Thanks!  Nice use of binders!\n\nmaintainer merge ",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-AQdH",
              "createdAt": "2024-05-16T04:21:32Z",
              "body": "maintainer merge \n",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-AQfR",
              "createdAt": "2024-05-16T04:21:46Z",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by adomani.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAL8iN9i",
              "createdAt": "2024-05-16T04:21:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c56xgVo",
              "createdAt": "2024-05-16T07:17:35Z",
              "body": "Note that all these changes are in `Archive/` or `test/`.\r\nIn `Archive/` we might argue that `>` is sometimes the more readable option...\r\nIn `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n\r\nSo I'm not sure if I'm a fan of these changes.\r\nThe rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-CLC_",
              "createdAt": "2024-05-16T08:36:29Z",
              "body": "> Note that all these changes are in `Archive/` or `test/`. In `Archive/` we might argue that `>` is sometimes the more readable option... In `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n> \r\n> So I'm not sure if I'm a fan of these changes. The rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.\r\n\r\nI wrote these lines to fix the linter errors (as the linter is imported transitively via mathlib). I don't have a strong opinion if the linter should be enforced there. Is there an easy way to disable the linter in all tests/all of mathlib? (Does the archive have a .lakefile we can use?)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-GsNc",
              "createdAt": "2024-05-16T16:26:55Z",
              "body": "> > Note that all these changes are in `Archive/` or `test/`. In `Archive/` we might argue that `>` is sometimes the more readable option... In `test/` I think it really doesn't hurt if we occasionally test `>`...\r\n> > So I'm not sure if I'm a fan of these changes. The rule that we should only ever use LE/LT is something that I understand the need for, but I would rather see it go, if possible. So in my opinion we should only enforce it in mathlib proper, unless there are good reasons to expand the scope.\r\n> \r\n> I wrote these lines to fix the linter errors (as the linter is imported transitively via mathlib). I don't have a strong opinion if the linter should be enforced there. Is there an easy way to disable the linter in all tests/all of mathlib? (Does the archive have a .lakefile we can use?)\r\n\r\nWhat I did in another situation, was to make the linter check that the name of the current module started with `Mathlib.` and `return` otherwise.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-Jh9W",
              "createdAt": "2024-05-17T00:35:53Z",
              "body": "Since `GT.gt` is now reducible, is this linter still relevant? I mean, does one of common tactics fail to recognize `(a > b) = (b < a)`? If yes, should we fix the tactic instead?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAL9yxy6",
              "createdAt": "2024-05-17T12:45:22Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5-Nth5",
              "createdAt": "2024-05-17T12:45:27Z",
              "body": "Good question! I hadn't, in fact, tested whether the situation in Lean 4 is better than Lean 3.\r\nI'll put it on my list of things to do some tests. Help doing so is very welcome!\r\nawaiting-author",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6I_b6WzwAAAAL9yyxY",
              "createdAt": "2024-05-17T12:45:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAL9yy1q",
              "createdAt": "2024-05-17T12:45:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6I_b6WzwAAAAMCkSA8",
              "createdAt": "2024-05-24T17:40:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6I_b6WzwAAAAMnk9wN",
              "createdAt": "2024-07-18T05:34:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            }
          ]
        }
      }
    }
  }
}
