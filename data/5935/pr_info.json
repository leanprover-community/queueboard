{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 182,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "acmepjz"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Main changes:\r\n\r\n- [x] Define specific Weierstrass curves, whose j-invariants should be 0, 1728, or ≠ 0 and 1728.\r\n- [x] Prove the quantities c₄, Δ and j for them (whenever they are defined).\r\n- [x] Define an elliptic curve from an element j in a field, whose j-invariant is equal to j.\r\n- [x] Generalize `Inhabited (EllipticCurve ℚ)` to `Inhabited (EllipticCurve F)` for any field `F` (computable if `F` has `DecidableEq`).\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-08-03T10:45:07Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hv-gd",
              "body": "Now I got strange error again: `rw` refuses to rewrite the result obtained from `unitOfInvertible_val`, although they look the same on the info panel.",
              "createdAt": "2023-07-18T10:32:25Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hwrp4",
              "body": "> Now I got strange error again: `rw` refuses to rewrite the result obtained from `unitOfInvertible_val`, although they look the same on the info panel.\r\n\r\nYou will need to supply the instance argument explicitly, e.g. `@unitOfInvertible _ _ _ <| invertibleNeg _`.",
              "createdAt": "2023-07-18T12:48:27Z",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKk7h",
              "body": "Is it a good idea to remove remaining `noncomputable` in this file, as many as possible, by adding `DecidableEq` instance (possibly in another PR)? This has a disadvantage then it introduces `classical` if the relevant ring does not have `DecidableEq`.",
              "createdAt": "2023-07-23T19:27:31Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iPkrF",
              "body": "> Is it a good idea to remove remaining `noncomputable` in this file, as many as possible, by adding `DecidableEq` instance (possibly in another PR)? This has a disadvantage then it introduces `classical` if the relevant ring does not have `DecidableEq`.\r\n\r\nI don't know anything about this. All I know for the inhabited instance is that we should have 37 instead of 42. 😉 ",
              "createdAt": "2023-07-24T16:39:27Z",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jABb0",
              "body": "@riccardobrasca I tried `NeZero` but I think the resulting code looks weird. We don't have `NeZero -> Invertible` automatic conversion even if it's a field. Also we don't have `EqZero`. So now the code is a mix of typeclass and explicit assumptions.",
              "createdAt": "2023-08-01T19:27:25Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jKDRd",
              "body": "> @riccardobrasca I tried `NeZero` but I think the resulting code looks weird. We don't have `NeZero -> Invertible` automatic conversion even if it's a field. Also we don't have `EqZero`. So now the code is a mix of typeclass and explicit assumptions.\r\n\r\nOK, no problem if it becomes a mess. Thanks!\r\n\r\nbors merge",
              "createdAt": "2023-08-03T09:03:04Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jKDTP",
              "body": "Already running a review",
              "createdAt": "2023-08-03T09:03:08Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jKu2x",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5748907240/job/15582695905)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5748907240/job/15582695284)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5748907240/job/15582695520)",
              "createdAt": "2023-08-03T10:45:05Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "400b02d6fb0a9d4ffa2e8e8da6d8a356cb08cfaf",
                "additions": 194,
                "deletions": 0,
                "committedDate": "2023-07-16T00:25:36Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "739d4d4421cf6820c54caca3a8d155dde61907c7",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2023-07-16T10:44:07Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3081903404bf07a7a081e5d4243f321327acc82f",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-07-16T17:09:56Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4301fe2bb3aefefae328c61bbd679e043fa980ae",
                "additions": 23,
                "deletions": 47,
                "committedDate": "2023-07-17T08:09:39Z",
                "author": {
                  "name": "Jz Pan",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "13bdafcfe68a9db25a91c23dc168f6d8a01ae195",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-17T08:10:21Z",
                "author": {
                  "name": "Jz Pan",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "69557bfad8d4005987911d499d24109cbb17200c",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-07-17T12:10:22Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "14000c2d0c89fd5f5292a7a2aa0e79a0f871754a",
                "additions": 15,
                "deletions": 33,
                "committedDate": "2023-07-17T12:21:21Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "156aba463638e89b9d5cc1d5f78714ae2810c485",
                "additions": 22,
                "deletions": 10,
                "committedDate": "2023-07-17T12:56:44Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b8e27c3193397cba6343bda881b3f014acdfe958",
                "additions": 70,
                "deletions": 56,
                "committedDate": "2023-07-17T13:59:43Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5ecc70df08e02764ef077cd4f571d65777509138",
                "additions": 2,
                "deletions": 8,
                "committedDate": "2023-07-18T10:26:38Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "468503ac39da02790f902305e994ce7750510dc2",
                "additions": 3,
                "deletions": 7,
                "committedDate": "2023-07-18T10:27:10Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "95ae5c7c1b0b312377c61014e799b0ddf35a94bc",
                "additions": 12,
                "deletions": 14,
                "committedDate": "2023-07-18T10:29:28Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f69e55810317e3f6644e6cff6fb8196e4669bd3d",
                "additions": 38,
                "deletions": 65,
                "committedDate": "2023-07-19T00:12:51Z",
                "author": {
                  "name": "Jz Pan",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b44292cc78a83b4cc213f7728b2e0d7908329006",
                "additions": 34,
                "deletions": 1,
                "committedDate": "2023-07-19T00:31:39Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e692f412b526ce75b1c38648b203aa475cdb65b0",
                "additions": 17204,
                "deletions": 18847,
                "committedDate": "2023-07-21T23:08:55Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb3adaef920b85db87b1d545265e584a7c855e6e",
                "additions": 8,
                "deletions": 3,
                "committedDate": "2023-07-23T18:09:05Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fd0ba67e20a535b87f56a42fe193fe8115fadf49",
                "additions": 4,
                "deletions": 6,
                "committedDate": "2023-07-23T18:20:07Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "99b50c188fa2ef5cc3735d8ec84cf42d37851b47",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-07-23T19:23:07Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6757b5d35aa0cb39b0063bfa70546d8c2085220b",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-24T19:12:23Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "26b7ce51d79a77db1a1b2048b8daaf1f09ab7df2",
                "additions": 5243,
                "deletions": 3115,
                "committedDate": "2023-07-27T21:39:58Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "15b26c5c8d9dae40055f6c4297e14192d80d25e1",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-29T16:46:46Z",
                "author": {
                  "name": "Jz Pan",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "309ee4a0f86e0baca053f79dc4b1f71d85382c72",
                "additions": 2162,
                "deletions": 618,
                "committedDate": "2023-07-29T19:32:29Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d97c4b36d7be8aef8962f3f02d3d887af49741b5",
                "additions": 11,
                "deletions": 7,
                "committedDate": "2023-07-29T20:05:25Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c35d7b60e9140c5169cdd2332066c1ceb4d80cd5",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-07-29T23:10:02Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "58defff4ab4e8754558d9ed0af6e8bc99fce2f3c",
                "additions": 4386,
                "deletions": 1094,
                "committedDate": "2023-08-01T18:56:30Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5cafbab61d07e244c71bf4fcf4bf48715c7318a8",
                "additions": 11,
                "deletions": 8,
                "committedDate": "2023-08-01T19:24:53Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-16T00:29:50Z",
        "deletions": 6,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.lean",
              "additions": 172,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/Coprime/Basic.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Coprime/Lemmas.lean",
              "additions": 5,
              "deletions": 0
            }
          ]
        },
        "headRefName": "acmepjz_ec_exists_j",
        "headRefOid": "5cafbab61d07e244c71bf4fcf4bf48715c7318a8",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5VmUvm",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
              "color": "33DBEC",
              "name": "t-number-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
              "color": "33DBEC",
              "name": "t-algebraic-geometry"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5clpgF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-29T18:56:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5czdVW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-08-01T13:27:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5935,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5bTZ_Z",
              "body": "I've added some comments, mostly stylistic based on old conventions in the same file.",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-16T23:59:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bU5vY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-17T08:00:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bU9FX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-17T08:09:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bU-6G",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-17T08:14:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bU_cJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-17T08:15:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bdfpC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-18T08:11:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bdh_M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-18T08:16:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5beKIU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-18T09:37:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5befw2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-18T10:23:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bfisv",
              "body": "I finally managed to convert `ofJ` into term mode.",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-18T20:40:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bjkRz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-19T00:07:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bjla4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-19T00:11:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bjnbL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-19T00:16:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5bjrKn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-19T00:41:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5blVD2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-19T08:08:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5clU_E",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-29T14:15:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5clfa_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-29T16:48:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5clf4r",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-29T17:13:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5clmO5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-07-29T18:38:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5clpgF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2023-07-29T18:56:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5czdVW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-08-01T13:27:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c0O05",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-08-01T14:49:36Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYrqi",
                    "body": "I think this section and the previous section can be merged. Can you tell me why the particular curves with j-invariant 0 and 1728 are so interesting that they deserve definitions by themselves? Why is it that we care about their `c\\_4` and `\\Delta` (and not other quantities like `c\\_6`)?",
                    "createdAt": "2023-07-16T23:13:47Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LZnNk",
                    "body": "> I think this section and the previous section can be merged.\r\n\r\nYou're right, the only difference between these two sections are the variable `R` being implicit or explicit.\r\n\r\n\r\n\r\n> Can you tell me why the particular curves with j-invariant 0 and 1728 are so interesting that they deserve definitions by themselves?\r\n\r\nBecause the model for general j later has discriminant zero if j equals 0 or 1728. So in these two cases separate curves need to be provided. See Silverman's book, second edition, Proposition III.1.4(c) and its proof (on page 47). My model differs slightly from it since it does not have any denominators on the a_i's.\r\n\r\n> Why is it that we care about their `c\\_4` and `\\Delta` (and not other quantities like `c\\_6`)?\r\n\r\nBecause they are the only variables used to calculate j. Actually all of them (as well as the definition of `ofJInvariant0`, etc) can be put into the last theorem `ofJInvariant_j` (which is what my previous attempt does), but this will make its proof super long.",
                    "createdAt": "2023-07-17T08:00:38Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Le84R",
                    "body": "Sounds good! I think you can remove `section` and `end` as well.",
                    "createdAt": "2023-07-18T08:16:49Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LfXRS",
                    "body": "> Sounds good! I think you can remove `section` and `end` as well.\r\n\r\nBut I think this will make the parameter `R` in the `ofJ` explicit?\r\n\r\nEDIT: Nevermind. I just write `variable (R)` and then later `variable {R}` 😅",
                    "createdAt": "2023-07-18T09:37:41Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYrzH",
                    "body": "The j-invariant in this file is called `j` rather than `jInvariant`, but I think `jInvariant` is also good as long as we're consistent. I guess you should either change this to `J`, or rename all other existing instances of `j` into `jInvariant` (or even something funny like `\\MiJ` for italics). What do you think?",
                    "createdAt": "2023-07-16T23:18:25Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LZqtF",
                    "body": "I think it's good. Later I'll try to rename all `onJInvariant` to `ofJ` and see if it's better.",
                    "createdAt": "2023-07-17T08:15:27Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsGM",
                    "body": "The weird convention in mathlib is to not have brackets alone in a line, and commas at the end of lines rather than at the beginning.\r\n```suggestion\r\n/-- The elliptic curve $Y^2 + Y = X^3$ when $3$ is invertible. -/\r\ndef ofJInvariant0 [Invertible (3 : R)] : EllipticCurve R :=\r\n  ⟨WeierstrassCurve.ofJInvariant0 R,\r\n    ⟨-27, -⅟3 ^ 3,\r\n      by rw [neg_mul_neg, show (27 : R) = 3 ^ 3 by norm_num1,\r\n        pow_mul_pow_eq_one 3 <| mul_invOf_self 3],\r\n      by rw [neg_mul_neg, show (27 : R) = 3 ^ 3 by norm_num1,\r\n        pow_mul_pow_eq_one 3 <| invOf_mul_self 3]⟩,\r\n    by rw [WeierstrassCurve.ofJInvariant0_Δ R]⟩\r\n```",
                    "createdAt": "2023-07-16T23:28:27Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LZpNm",
                    "body": "Cool. Are there more compact ways to show -27 is invertible?",
                    "createdAt": "2023-07-17T08:09:06Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Le7Z3",
                    "body": "This works:\r\n```\r\ndef ofJ0 [Invertible (3 : R)] : EllipticCurve R :=\r\n  have := invertibleNeg (3 ^ 3 : R)\r\n  ⟨WeierstrassCurve.ofJ0 R, unitOfInvertible (-3 ^ 3 : R),\r\n    by rw [unitOfInvertible_val, WeierstrassCurve.ofJ0_Δ R]; norm_num1⟩\r\n```\r\nAnalogously for `ofJ1728`, and for `ofJ'` it's even shorter:\r\n```\r\ndef ofJ' (j : R) [Invertible j] [Invertible (j - 1728)] : EllipticCurve R :=\r\n  have := invertibleMul (j ^ 2) ((j - 1728) ^ 9)\r\n  ⟨WeierstrassCurve.ofJ j, unitOfInvertible <| j ^ 2 * (j - 1728) ^ 9,\r\n    (WeierstrassCurve.ofJ_Δ j).symm⟩\r\n```\r\nThe lemmas `ofJ0_j`, `ofJ1728_j`, and `ofJ'_j` might need `unitOfInvertible_val`, and with this can mostly be `norm_num1`'ed now.",
                    "createdAt": "2023-07-18T08:11:30Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LflcY",
                    "body": "> The lemmas `ofJ0_j`, `ofJ1728_j`, and `ofJ'_j` might need `unitOfInvertible_val`, and with this can mostly be `norm_num1`'ed now.\r\n\r\nI cannot make `ofJ1728_j` and `ofJ'_j` work, `rw` refuses to rewrite the result obtained from `unitOfInvertible_val`, although they look the same on the info panel.",
                    "createdAt": "2023-07-18T10:23:03Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsHi",
                    "body": "These can probably be `rw`'s and `norm_num1`'s (same with the three other instances below).\r\n```suggestion\r\nlemma ofJInvariant0_c₄ : (ofJInvariant0 R).c₄ = 0 := by\r\n  rw [ofJInvariant0, c₄, b₂, b₄]\r\n  norm_num1\r\n```",
                    "createdAt": "2023-07-16T23:29:17Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsNn",
                    "body": "Same here\r\n```suggestion\r\n/-- The elliptic curve $Y^2 = X^3 + X$ when $2$ is invertible. -/\r\ndef ofJInvariant1728 [Invertible (2 : R)] : EllipticCurve R :=\r\n  ⟨WeierstrassCurve.ofJInvariant1728 R,\r\n    ⟨-64, -⅟2 ^ 6,\r\n      by rw [neg_mul_neg, show (64 : R) = 2 ^ 6 by norm_num1,\r\n        pow_mul_pow_eq_one 6 <| mul_invOf_self 2],\r\n      by rw [neg_mul_neg, show (64 : R) = 2 ^ 6 by norm_num1,\r\n        pow_mul_pow_eq_one 6 <| invOf_mul_self 2]⟩,\r\n    by rw [WeierstrassCurve.ofJInvariant1728_Δ R]⟩\r\n```",
                    "createdAt": "2023-07-16T23:31:53Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsPW",
                    "body": "I usually have spaces around `-` even when they're bracketed up together.",
                    "createdAt": "2023-07-16T23:32:55Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsWq",
                    "body": "Again I think there's no harm in merging the sections until you need to change the base ring to a field.",
                    "createdAt": "2023-07-16T23:37:04Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsea",
                    "body": "You don't need to reinstantiate everything if you want to make `R` explicit - you can just do `variable (R)`. Notice that in every goal now we have two `CommRing R`'s.",
                    "createdAt": "2023-07-16T23:40:37Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYsx1",
                    "body": "Same here\r\n```suggestion\r\n/-- The elliptic curve $Y^2 + (j-1728)XY = X^3 - 36(j-1728)^3X - (j-1728)^5$\r\nwhen $j$ and $j-1728$ are both invertible. -/\r\ndef ofJInvariant' : EllipticCurve R :=\r\n  ⟨WeierstrassCurve.ofJInvariant j,\r\n    ⟨j ^ 2 * (j - 1728) ^ 9, ⅟j ^ 2 * ⅟(j - 1728) ^ 9,\r\n      by rw [← mul_assoc, mul_assoc (j ^ 2), mul_comm (_ ^ 9), ← mul_assoc, mul_assoc,\r\n        pow_mul_pow_eq_one 2 (mul_invOf_self _), pow_mul_pow_eq_one 9 (mul_invOf_self _), mul_one],\r\n      by rw [← mul_assoc, mul_assoc (⅟j ^ 2), mul_comm (_ ^ 9), ← mul_assoc, mul_assoc,\r\n        pow_mul_pow_eq_one 2 (invOf_mul_self _), pow_mul_pow_eq_one 9 (invOf_mul_self _), mul_one]⟩,\r\n    by rw [WeierstrassCurve.ofJInvariant_Δ j]⟩\r\n```",
                    "createdAt": "2023-07-16T23:49:50Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYszC",
                    "body": "A lot of these can probably be `rw`'s. I also find it strange why `ring1` works here but not `norm_num1`.",
                    "createdAt": "2023-07-16T23:50:34Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYs0N",
                    "body": "Slightly shorter?\r\n```suggestion\r\nlemma ofJInvariant1728_j [Invertible (2 : R)] : (ofJInvariant1728 R).j = 1728 := by\r\n  field_simp [j, ofJInvariant1728, WeierstrassCurve.ofJInvariant1728_c₄]\r\n  ring1\r\n```",
                    "createdAt": "2023-07-16T23:51:15Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYs3n",
                    "body": "I think expanding is probably fine? It's pretty much instant for me.\r\n```suggestion\r\nlemma ofJInvariant'_j : (ofJInvariant' j).j = j := by\r\n  field_simp [EllipticCurve.j, ofJInvariant', WeierstrassCurve.ofJInvariant_c₄]\r\n  ring1\r\n```",
                    "createdAt": "2023-07-16T23:52:51Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LYtC2",
                    "body": "I think given this is a `def`, it's probably wise not to have it in tactic mode, although it doesn't seem like your proof has any dangerous tactics (e.g. `rw` - in your case is only used to prove things are invertible, which is fine). I'll think of how to make this into term mode when I have time.",
                    "createdAt": "2023-07-16T23:58:10Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LZqW8",
                    "body": "In fact in my previous attempt there is no such `def`, but only a theorem which states that `... (j : F) : \\exists E : EllipticCurve, E.j = j`. A disadvantage is that you can't get more information of such `E`, compared to current implementation. This is what `coefficients are given explicitly` means.\r\n\r\n> I'll think of how to make this into term mode when I have time.\r\n\r\nThanks.",
                    "createdAt": "2023-07-17T08:14:00Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LgQdZ",
                    "body": "```suggestion\r\n  rw [ofJ0, Δ, b₂, b₄, b₆, b₈]\r\n  norm_num1\r\n```",
                    "createdAt": "2023-07-18T13:06:06Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LgQiT",
                    "body": "```suggestion\r\n  rw [ofJ1728, c₄, b₂, b₄]\r\n  norm_num1\r\n```",
                    "createdAt": "2023-07-18T13:06:21Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LgQnK",
                    "body": "```suggestion\r\n  rw [ofJ1728, Δ, b₂, b₄, b₆, b₈]\r\n  norm_num1\r\n```",
                    "createdAt": "2023-07-18T13:06:36Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LgRmQ",
                    "body": "```suggestion\r\n  field_simp [j, ofJ1728, @unitOfInvertible_val _ _ _ <| invertibleNeg _,\r\n    WeierstrassCurve.ofJ1728_c₄]\r\n  norm_num1\r\n```",
                    "createdAt": "2023-07-18T13:09:52Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LgR2J",
                    "body": "```suggestion\r\n  field_simp [EllipticCurve.j, ofJ', @unitOfInvertible_val _ _ _ <| invertibleMul _ _,\r\n    WeierstrassCurve.ofJ_c₄]\r\n  ring1\r\n```",
                    "createdAt": "2023-07-18T13:10:33Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LiRlB",
                    "body": "I feel like the thing causing the weird bug requiring `convert` is the volatility with the `Invertible` typeclass. If I switch everything to explicit non-zero assumptions everything works out fine, but we'll be stuck with fields. On the other hand you can go around this by supplying more instance arguments explicitly.",
                    "createdAt": "2023-07-18T20:29:12Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LiR8A",
                    "body": "Here is the term mode version using `if then else`, but would require `Classical`:\r\n```suggestion\r\nopen scoped Classical\r\n\r\nvariable {F : Type u} [Field F] (j : F)\r\n\r\nprivate lemma two_or_three_ne_zero : (2 : F) ≠ 0 ∨ (3 : F) ≠ 0 :=\r\n  Ne.ne_or_ne 0 <| ne_of_apply_ne (· - 2) <| by\r\n    simpa only [← two_add_one_eq_three, add_sub_cancel', sub_self] using zero_ne_one\r\n\r\n/-- For any element $j$ of a field $F$, there exists an elliptic curve over $F$\r\nwith $j$-invariant equal to $j$ (see `EllipticCurve.ofJ_j`).\r\nIts coefficients are given explicitly (see `EllipticCurve.ofJ0`, `EllipticCurve.ofJ1728`\r\nand `EllipticCurve.ofJ'`). -/\r\nnoncomputable def ofJ : EllipticCurve F :=\r\n  if h0 : j = 0 then\r\n    if h3 : (3 : F) = 0 then @ofJ1728 _ _ <| invertibleOfNonzero <|\r\n      two_or_three_ne_zero.neg_resolve_right h3\r\n    else @ofJ0 _ _ <| invertibleOfNonzero h3\r\n  else if h1728 : j = 1728 then\r\n    @ofJ1728 _ _ <| invertibleOfNonzero fun h => h0 <|\r\n    by rw [h1728, show (1728 : F) = 2 * 864 by norm_num1, h, zero_mul]\r\n  else @ofJ' _ _ j (invertibleOfNonzero h0) (invertibleOfNonzero <| sub_ne_zero_of_ne h1728)\r\n```",
                    "createdAt": "2023-07-18T20:31:00Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LiwXp",
                    "body": "> Here is the term mode version using `if then else`, but would require `Classical`: ...\r\n\r\nDo you think it's a good idea to just extract several `have`s in my previous proof as private lemmas? In this way the `Classical` is not necessary and the `def` can be written as term mode (while the proof of private lemmas themself still use tactic mode, just like your `two_or_three_ne_zero`).",
                    "createdAt": "2023-07-19T00:07:01Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LixUI",
                    "body": "I think your lemma can be rewrite as `(3 : F) = 0 -> (2 : F) ≠ 0`, perhaps in this way the `Classical` is not needed?",
                    "createdAt": "2023-07-19T00:11:01Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Li0n9",
                    "body": "> In this way the `Classical` is not necessary\r\n\r\nNo, it does not work 😅 the `if h0 : j = 0 then` itself requires `Classical`, whereas `by_cases hj0 : j = 0` does not require, although they produce the same proof term. Weird.\r\n\r\n> `private lemma two_or_three_ne_zero : (2 : F) ≠ 0 ∨ (3 : F) ≠ 0`\r\n\r\nMore generally, if `R` is a non-trivial ring, `a` and `b` are natural numbers such that\r\n`gcd(a, b) = 1`, then `(a : R) = 0` implies `(b : R) ≠ 0` (otherwise `(1 : R) = 0` contradiction). Do you think this is a useful lemma? Or perhaps it is already in mathlib?",
                    "createdAt": "2023-07-19T00:41:17Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Lj7IJ",
                    "body": "Yeah, I think it's a nice lemma to have in mathlib, although I'm not sure where to put it! I thought someone would have written it already but I can't seem to find it anywhere, so you could try to make a quick PR and let others decide...",
                    "createdAt": "2023-07-19T08:08:47Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LiTZN",
                    "body": "Here is a possible proof for `ofJ_j`:\r\n```suggestion\r\nlemma ofJ_j : (ofJ j).j = j := by\r\n  by_cases h0 : j = 0\r\n  · by_cases h3 : (3 : F) = 0\r\n    · rw [h0, ofJ_0_of_three_eq_zero h3,\r\n        @ofJ1728_j _ _ <| invertibleOfNonzero <| two_or_three_ne_zero.neg_resolve_right h3,\r\n        show (1728 : F) = 3 * 576 by norm_num1, h3, zero_mul]\r\n    · rw [h0, ofJ_0_of_three_ne_zero h3, @ofJ0_j _ _ <| invertibleOfNonzero h3]\r\n  · by_cases h1728 : j = 1728\r\n    · have h2 : (2 : F) ≠ 0 :=\r\n        fun h => h0 <| by rw [h1728, show (1728 : F) = 2 * 864 by norm_num1, h, zero_mul]\r\n      rw [h1728, ofJ_1728_of_two_ne_zero h2, @ofJ1728_j _ _ <| invertibleOfNonzero h2]\r\n    · rw [ofJ_ne_0_ne_1728 h0 h1728,\r\n        @ofJ'_j _ _ _ (invertibleOfNonzero h0) (invertibleOfNonzero <| sub_ne_zero_of_ne h1728)]\r\n```\r\nI extracted a few lemmas I think are useful API relating `ofJ`, `ofJ0`, `ofJ1728`, and `ofJ'`, such as:\r\n```\r\nlemma ofJ_0_of_three_ne_zero (h3 : (3 : F) ≠ 0) : ofJ 0 = @ofJ0 _ _ (invertibleOfNonzero h3) := by\r\n  rw [ofJ, dif_pos rfl, dif_neg h3]\r\n\r\nlemma ofJ_0_of_three_eq_zero (h3 : (3 : F) = 0) :\r\n    ofJ 0 = @ofJ1728 _ _ (invertibleOfNonzero <| two_or_three_ne_zero.neg_resolve_right h3) := by\r\n  rw [ofJ, dif_pos rfl, dif_pos h3]\r\n\r\nlemma ofJ_0_of_two_eq_zero (h2 : (2 : F) = 0) :\r\n    ofJ 0 = @ofJ0 _ _ (invertibleOfNonzero <| two_or_three_ne_zero.neg_resolve_left h2) := by\r\n  rw [ofJ, dif_pos rfl, dif_neg <| two_or_three_ne_zero.neg_resolve_left h2]\r\n\r\nlemma ofJ_1728_of_two_ne_zero (h2 : (2 : F) ≠ 0) :\r\n    ofJ 1728 = @ofJ1728 _ _ (invertibleOfNonzero h2) := by\r\n  by_cases h3 : (3 : F) = 0\r\n  · rw [ofJ, dif_pos <| by rw [show (1728 : F) = 3 * 576 by norm_num1, h3, zero_mul], dif_pos h3]\r\n  · have h : (1728 : F) ≠ 0 := fun h => or_iff_not_and_not.mp\r\n      (mul_eq_zero.mp <| by rwa [show 2 ^ 6 * 3 ^ 3 = (1728 : F) by norm_num1])\r\n      ⟨pow_ne_zero 6 h2, pow_ne_zero 3 h3⟩\r\n    rw [ofJ, dif_neg h, dif_pos rfl]\r\n\r\nlemma ofJ_1728_of_two_eq_zero (h2 : (2 : F) = 0) :\r\n    ofJ 1728 = @ofJ0 _ _ (invertibleOfNonzero <| two_or_three_ne_zero.neg_resolve_left h2) := by\r\n  rw [ofJ, dif_pos <| by rw [show (1728 : F) = 2 * 864 by norm_num1, h2, zero_mul], dif_neg]\r\n\r\nlemma ofJ_1728_of_three_eq_zero (h3 : (3 : F) = 0) :\r\n    ofJ 1728 = @ofJ1728 _ _ (invertibleOfNonzero <| two_or_three_ne_zero.neg_resolve_right h3) := by\r\n  rw [ofJ, dif_pos <| by rw [show (1728 : F) = 3 * 576 by norm_num1, h3, zero_mul], dif_pos h3]\r\n\r\nlemma ofJ_ne_0_ne_1728 (h0 : j ≠ 0) (h1728 : j ≠ 1728) :\r\n    ofJ j =\r\n      @ofJ' _ _ j (invertibleOfNonzero h0) (invertibleOfNonzero <| sub_ne_zero_of_ne h1728) := by\r\n  rw [ofJ, dif_neg h0, dif_neg h1728]\r\n```\r\nNote that only four of them are used in the proof of `ofJ_j`. The point is to have a way to translate between the various `ofJ`'s depending on the characteristic of the field, so that when we need to recall the coefficients of `ofJ` we can first move to one of the other three `ofJ`'s without any `if then else` and compute from there.",
                    "createdAt": "2023-07-18T20:37:56Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LiyOe",
                    "body": "> I extracted a few lemmas I think are useful API relating `ofJ`, `ofJ0`, `ofJ1728`, and `ofJ'`, such as: ...\r\n\r\nI think maybe it's a good idea; let me check them later.",
                    "createdAt": "2023-07-19T00:16:52Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMWOT",
                    "body": "To be consistent with the other statement descriptions:\r\n```suggestion\r\n * `EllipticCurve.ofJ_j`: the $j$-invariant of `EllipticCurve.ofJ` is equal to $j$.\r\n```",
                    "createdAt": "2023-07-29T14:12:35Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMWPi",
                    "body": "Yeah, I think this would be useful to others, but you'd have to find a good file high enough to put it in.",
                    "createdAt": "2023-07-29T14:13:35Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMfFP",
                    "body": "> but you'd have to find a good file high enough to put it in.\r\n\r\nYes, but I'm not sure which file this lemma fits in. Maybe in the same file as `IsCoprime`, just after `not_isCoprime_zero_zero` since this is a direct corollary of it?",
                    "createdAt": "2023-07-29T16:48:58Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMfgM",
                    "body": "Yep, sounds good to me!",
                    "createdAt": "2023-07-29T17:13:42Z",
                    "author": {
                      "login": "Multramate"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMjB_",
                    "body": "Should I change that file in this PR?",
                    "createdAt": "2023-07-29T18:38:04Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMleQ",
                    "body": "Sure!",
                    "createdAt": "2023-07-29T18:56:25Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMWQl",
                    "body": "```suggestion\r\nprivate lemma two_or_three_ne_zero : (2 : F) ≠ 0 ∨ (3 : F) ≠ 0 :=\r\n  ne_zero_or_ne_zero_of_nat_gcd_eq_one (show Nat.gcd 2 3 = 1 by norm_num1)\r\n```",
                    "createdAt": "2023-07-29T14:14:36Z",
                    "author": {
                      "login": "Multramate"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MVPsI",
                    "body": "What about using [NeZero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/NeZero.html#NeZero) instead of `h3`? Similarly elsewhere.",
                    "createdAt": "2023-08-01T13:22:20Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MVt1H",
                    "body": "Sounds good. I'll try later.",
                    "createdAt": "2023-08-01T14:49:36Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMzOTc3Nzk=",
              "login": "acmepjz"
            },
            {
              "id": "MDQ6VXNlcjI1MTEyNjQx",
              "login": "Multramate"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(AlgebraicGeometry/EllipticCurve/Weierstrass): elliptic curves with specified j-invariant",
        "updatedAt": "2023-08-03T10:45:14Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5935",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "400b02d6fb0a9d4ffa2e8e8da6d8a356cb08cfaf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "739d4d4421cf6820c54caca3a8d155dde61907c7"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c5rqy7pzwAAAAJJ976r",
              "createdAt": "2023-07-16T10:45:02Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3081903404bf07a7a081e5d4243f321327acc82f"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5bTZ_Z",
              "createdAt": "2023-07-16T23:09:22Z",
              "body": "I've added some comments, mostly stylistic based on old conventions in the same file.",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4301fe2bb3aefefae328c61bbd679e043fa980ae"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "13bdafcfe68a9db25a91c23dc168f6d8a01ae195"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "69557bfad8d4005987911d499d24109cbb17200c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "14000c2d0c89fd5f5292a7a2aa0e79a0f871754a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "156aba463638e89b9d5cc1d5f78714ae2810c485"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b8e27c3193397cba6343bda881b3f014acdfe958"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5ecc70df08e02764ef077cd4f571d65777509138"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "468503ac39da02790f902305e994ce7750510dc2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "95ae5c7c1b0b312377c61014e799b0ddf35a94bc"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hv-gd",
              "createdAt": "2023-07-18T10:32:25Z",
              "body": "Now I got strange error again: `rw` refuses to rewrite the result obtained from `unitOfInvertible_val`, although they look the same on the info panel.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hwrp4",
              "createdAt": "2023-07-18T12:48:27Z",
              "body": "> Now I got strange error again: `rw` refuses to rewrite the result obtained from `unitOfInvertible_val`, although they look the same on the info panel.\r\n\r\nYou will need to supply the instance argument explicitly, e.g. `@unitOfInvertible _ _ _ <| invertibleNeg _`.",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5bfisv",
              "createdAt": "2023-07-18T13:06:05Z",
              "body": "I finally managed to convert `ofJ` into term mode.",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f69e55810317e3f6644e6cff6fb8196e4669bd3d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b44292cc78a83b4cc213f7728b2e0d7908329006"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e692f412b526ce75b1c38648b203aa475cdb65b0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cb3adaef920b85db87b1d545265e584a7c855e6e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fd0ba67e20a535b87f56a42fe193fe8115fadf49"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "99b50c188fa2ef5cc3735d8ec84cf42d37851b47"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKk7h",
              "createdAt": "2023-07-23T19:27:31Z",
              "body": "Is it a good idea to remove remaining `noncomputable` in this file, as many as possible, by adding `DecidableEq` instance (possibly in another PR)? This has a disadvantage then it introduces `classical` if the relevant ring does not have `DecidableEq`.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iPkrF",
              "createdAt": "2023-07-24T16:39:27Z",
              "body": "> Is it a good idea to remove remaining `noncomputable` in this file, as many as possible, by adding `DecidableEq` instance (possibly in another PR)? This has a disadvantage then it introduces `classical` if the relevant ring does not have `DecidableEq`.\r\n\r\nI don't know anything about this. All I know for the inhabited instance is that we should have 37 instead of 42. 😉 ",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6757b5d35aa0cb39b0063bfa70546d8c2085220b"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rqy7pzwAAAAJPzNEH",
              "createdAt": "2023-07-26T21:13:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rqy7pzwAAAAJPzNEP",
              "createdAt": "2023-07-26T21:13:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
                "name": "t-number-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rqy7pzwAAAAJPzNEV",
              "createdAt": "2023-07-26T21:13:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
                "name": "t-algebraic-geometry"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "26b7ce51d79a77db1a1b2048b8daaf1f09ab7df2"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5clU_E",
              "createdAt": "2023-07-29T14:12:35Z",
              "body": "",
              "author": {
                "login": "Multramate"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "15b26c5c8d9dae40055f6c4297e14192d80d25e1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "309ee4a0f86e0baca053f79dc4b1f71d85382c72"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d97c4b36d7be8aef8962f3f02d3d887af49741b5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c35d7b60e9140c5169cdd2332066c1ceb4d80cd5"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5czdVW",
              "createdAt": "2023-08-01T13:22:20Z",
              "body": "",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rqy7pzwAAAAJSxSyZ",
              "createdAt": "2023-08-01T16:05:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "58defff4ab4e8754558d9ed0af6e8bc99fce2f3c"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rqy7pzwAAAAJS34cX",
              "createdAt": "2023-08-01T19:19:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5cafbab61d07e244c71bf4fcf4bf48715c7318a8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jABb0",
              "createdAt": "2023-08-01T19:27:25Z",
              "body": "@riccardobrasca I tried `NeZero` but I think the resulting code looks weird. We don't have `NeZero -> Invertible` automatic conversion even if it's a field. Also we don't have `EqZero`. So now the code is a mix of typeclass and explicit assumptions.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jKDRd",
              "createdAt": "2023-08-03T09:03:04Z",
              "body": "> @riccardobrasca I tried `NeZero` but I think the resulting code looks weird. We don't have `NeZero -> Invertible` automatic conversion even if it's a field. Also we don't have `EqZero`. So now the code is a mix of typeclass and explicit assumptions.\r\n\r\nOK, no problem if it becomes a mess. Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jKDTP",
              "createdAt": "2023-08-03T09:03:08Z",
              "body": "Already running a review",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rqy7pzwAAAAJT1ZWV",
              "createdAt": "2023-08-03T09:03:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rqy7pzwAAAAJT1ZYo",
              "createdAt": "2023-08-03T09:03:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jKu2x",
              "createdAt": "2023-08-03T10:45:05Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5748907240/job/15582695905)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5748907240/job/15582695284)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5748907240/job/15582695520)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5rqy7pzwAAAAJT5YoA",
              "createdAt": "2023-08-03T10:45:07Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5rqy7pzwAAAAJT5Y68",
              "createdAt": "2023-08-03T10:45:14Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5n6zhM",
              "createdAt": "2024-11-26T13:34:11Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Apowt",
                "title": "[Merged by Bors] - refactor(AlgebraicGeometry/EllipticCurve/*): add `WeierstrassCurve.IsElliptic` and remove `EllipticCurve`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18531"
              }
            }
          ]
        }
      }
    }
  }
}
