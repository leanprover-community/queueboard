{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 133,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ocfnash"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The main change is to upgrade the existing `Module.End.eigenspaces_independent`, which applied only to eigenspaces (and required a `[Field K]` assumption) to `Module.End.independent_generalizedEigenspace`, which applies to generalized eigenspaces (and requires only `[NoZeroSMulDivisors R M]`)\r\n\r\n---\r\n\r\nSplit out from #7963\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-11-08T19:50:45Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5q6KTs",
              "body": "This is the not the definition I was expecting for `IsTriangularizable`. Instead, I was expecting: \"there exists a maximal chain of invariant subspaces\". Over a finite dimensional vector space over a field, the definitions coincide, but not in the infinite dimensional setting. Thoughts?",
              "createdAt": "2023-11-05T04:18:37Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6563",
              "body": "> This is the not the definition I was expecting for `IsTriangularizable`. Instead, I was expecting: \"there exists a maximal chain of invariant subspaces\". Over a finite dimensional vector space over a field, the definitions coincide, but not in the infinite dimensional setting. Thoughts?\r\n\r\nGreat point, I should have thought of this myself! I'm already yak shaving to some extent so I'm not sure if I have the appetite to develop the full theory at the moment. A reasonable compromise might be keep these results without taking ownership of the `IsTriangularizable` name.\r\n\r\nGiven your remarks, I'll split this PR in two: I think the results about independence should be less controversial.",
              "createdAt": "2023-11-05T19:39:14Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rbMzF",
              "body": "I pushed a small golf. Feel free to revert if you prefer. Merge once CI passes.\r\n\r\nbors d+",
              "createdAt": "2023-11-08T16:57:39Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rbM0D",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-08T16:57:41Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rbbxo",
              "body": "bors merge",
              "createdAt": "2023-11-08T17:35:48Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rcLqh",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964335)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495963841)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964107)",
              "createdAt": "2023-11-08T19:50:44Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e7984a59a4151bb1a3920c9f754d1d0b786d30a5",
                "additions": 359,
                "deletions": 241,
                "committedDate": "2023-11-04T11:37:24Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6caf5c814c59cde8bb73f9da759a2e4dea411c35",
                "additions": 117,
                "deletions": 218,
                "committedDate": "2023-11-05T19:45:21Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d03d0a59c893f3b456f5a4ba2df9b58ae19f2438",
                "additions": 9,
                "deletions": 14,
                "committedDate": "2023-11-08T16:14:29Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1988895edc38be2cab2b572ac58da8cfad04ac19",
                "additions": 3,
                "deletions": 6,
                "committedDate": "2023-11-08T16:54:17Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-04T11:44:15Z",
        "deletions": 124,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/LinearAlgebra/Eigenspace/Basic.lean",
              "additions": 122,
              "deletions": 112
            },
            {
              "path": "Mathlib/LinearAlgebra/Eigenspace/Minpoly.lean",
              "additions": 11,
              "deletions": 12
            }
          ]
        },
        "headRefName": "ocfnash/eigen",
        "headRefOid": "1988895edc38be2cab2b572ac58da8cfad04ac19",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5emBdX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mi5D-",
              "body": "Looks pretty nice! Minor comments.",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-11-08T14:56:57Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8177,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mi5D-",
              "body": "Looks pretty nice! Minor comments.",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-11-08T14:56:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mkKne",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-08T16:15:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mkLJ8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-08T16:15:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mkLTb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-08T16:16:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mkLpy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-08T16:16:55Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SptBC",
                    "body": "```suggestion\r\n  simp only [MapsTo, Submodule.coe_iSup_of_chain, mem_iUnion, SetLike.mem_coe]\r\n  rintro x ⟨k, hk⟩\r\n  exact ⟨k, f.mapsTo_generalizedEigenspace_of_comm h μ k hk⟩\r\n```",
                    "createdAt": "2023-11-08T13:59:24Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sqhs1",
                    "body": "Thanks ⛳️",
                    "createdAt": "2023-11-08T16:15:02Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sp6vw",
                    "body": "This is such a commonly used fact in linear algebra arguments that I wonder if we should just make it a lemma:\r\n```lean\r\nlemma commute_self_sub_algebraMap (f : End R M) (μ : R) :\r\n    Commute f (f - algebraMap R (End R M) μ) :=\r\n  Commute.sub_right rfl (Algebra.commute_algebraMap_right μ f)\r\n```",
                    "createdAt": "2023-11-08T14:35:26Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SqiV9",
                    "body": "Good point; in fact this already exists as `Algebra.mul_sub_algebraMap_commutes`.",
                    "createdAt": "2023-11-08T16:16:55Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sp8S5",
                    "body": "I think the change the first line makes it more readable, and the remaining lines use the lemma I suggested so you don't need to declare `hc₁`.\r\n```suggestion\r\n  let f₁ : End R p := (f - algebraMap R (End R M) μ₁).restrict <| MapsTo.inter_inter\r\n    (mapsTo_generalizedEigenspace_of_comm (f.commute_self_sub_algebraMap μ₁) μ₁ k)\r\n    (mapsTo_generalizedEigenspace_of_comm (f.commute_self_sub_algebraMap μ₁) μ₂ l)\r\n```\r\nIf you still *wanted* to use `hc₁`, I would consider doing it *within* the `let` declaration with `haveI`, as in:\r\n```lean\r\n  let f₁ : End R p := haveI hc := (f.commute_self_sub_algebraMap μ₁)\r\n    (f - algebraMap R (End R M) μ₁).restrict <| MapsTo.inter_inter\r\n      (mapsTo_generalizedEigenspace_of_comm hc μ₁ k) (mapsTo_generalizedEigenspace_of_comm hc μ₂ l)\r\n```\r\nwhich makes it clear that `hc₁` is only used to define `f₁`.",
                    "createdAt": "2023-11-08T14:39:37Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SqiBE",
                    "body": "As suggested, I have dropped `hc₁` and `hc₂` in favour of `Algebra.mul_sub_algebraMap_commutes`.",
                    "createdAt": "2023-11-08T16:15:57Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sp-3V",
                    "body": "totally optional:\r\n```suggestion\r\n    InjOn (⨆ k, f.generalizedEigenspace · k) {μ | ⨆ k, f.generalizedEigenspace μ k ≠ ⊥} := by\r\n```",
                    "createdAt": "2023-11-08T14:46:24Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SqiHU",
                    "body": "It saves a line break so I'm all in favour!",
                    "createdAt": "2023-11-08T16:16:15Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: generalized eigenspaces are independent",
        "updatedAt": "2023-11-08T19:50:52Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8177",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e7984a59a4151bb1a3920c9f754d1d0b786d30a5"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c512yUhzwAAAAKHdZqZ",
              "createdAt": "2023-11-04T11:44:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c512yUhzwAAAAKHdZqb",
              "createdAt": "2023-11-04T11:44:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c512yUhzwAAAAKHdZqd",
              "createdAt": "2023-11-04T11:44:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c512yUhzwAAAAKHdiXW",
              "createdAt": "2023-11-04T12:05:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6KTs",
              "createdAt": "2023-11-05T04:18:37Z",
              "body": "This is the not the definition I was expecting for `IsTriangularizable`. Instead, I was expecting: \"there exists a maximal chain of invariant subspaces\". Over a finite dimensional vector space over a field, the definitions coincide, but not in the infinite dimensional setting. Thoughts?",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6563",
              "createdAt": "2023-11-05T19:39:14Z",
              "body": "> This is the not the definition I was expecting for `IsTriangularizable`. Instead, I was expecting: \"there exists a maximal chain of invariant subspaces\". Over a finite dimensional vector space over a field, the definitions coincide, but not in the infinite dimensional setting. Thoughts?\r\n\r\nGreat point, I should have thought of this myself! I'm already yak shaving to some extent so I'm not sure if I have the appetite to develop the full theory at the moment. A reasonable compromise might be keep these results without taking ownership of the `IsTriangularizable` name.\r\n\r\nGiven your remarks, I'll split this PR in two: I think the results about independence should be less controversial.",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6caf5c814c59cde8bb73f9da759a2e4dea411c35"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PNbVh",
              "createdAt": "2023-11-05T20:11:56Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5eoAZv",
                "title": "[Merged by Bors] - feat: in finite dimensions, if a linear endomorphism is triangularizable, so is its restriction to any invariant submodule",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8212"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c512yUhzwAAAAKHpgBB",
              "createdAt": "2023-11-05T20:12:51Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mi5D-",
              "createdAt": "2023-11-08T13:59:24Z",
              "body": "Looks pretty nice! Minor comments.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d03d0a59c893f3b456f5a4ba2df9b58ae19f2438"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1988895edc38be2cab2b572ac58da8cfad04ac19"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rbMzF",
              "createdAt": "2023-11-08T16:57:39Z",
              "body": "I pushed a small golf. Feel free to revert if you prefer. Merge once CI passes.\r\n\r\nbors d+",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rbM0D",
              "createdAt": "2023-11-08T16:57:41Z",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c512yUhzwAAAAKJ5ow5",
              "createdAt": "2023-11-08T16:57:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c512yUhzwAAAAKJ5oz4",
              "createdAt": "2023-11-08T16:57:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rbbxo",
              "createdAt": "2023-11-08T17:35:48Z",
              "body": "bors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c512yUhzwAAAAKJ7Liw",
              "createdAt": "2023-11-08T17:36:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rcLqh",
              "createdAt": "2023-11-08T19:50:44Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964335)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495963841)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964107)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c512yUhzwAAAAKJ__Fh",
              "createdAt": "2023-11-08T19:50:46Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c512yUhzwAAAAKJ__X8",
              "createdAt": "2023-11-08T19:50:52Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
