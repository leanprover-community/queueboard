{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 377,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Align the `assert_not_exists` syntax to `assert_not_imported`: they now both allow several identifiers.\r\n\r\n---\r\n\r\nEven though the diff is big, there is not really much to this PR:\r\n* `Mathlib/Util/AssertExists.lean` looping over the various indices, means indenting the whole `assert_not_exists` body,\r\n  plus adding some `let`s for variables used in the loop, but computable once;\r\n* `test/AssertExists.lean` a test file testing the new syntax;\r\n* `*` using the syntax wherever there were consecutive `assert_not_exists` -- done via a script.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 97,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6I_Hry",
              "body": "### PR summary [397b8cf19c](https://github.com/leanprover-community/mathlib4/pull/15994/commits/397b8cf19c4b91cf16ebec55e1bf7469b8315e83)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-08-20T08:14:16Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JFdu_",
              "body": "I did it because it seems more legible, but I did not think about it being unusual.\n\nShould I put each block on the same line?",
              "createdAt": "2024-08-20T23:11:58Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Z-HxA",
              "body": "I haven't fully read the PR yet, but I like the main change. @adomani if you could resolve merge conflicts and ping me, then I'll see that this PR get's merged promptly",
              "createdAt": "2025-01-10T16:34:56Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aAtTZ",
              "body": "I still don't think it's a good idea to introduce new formatting styles. I agree it looks good but it becomes a burden to remember what style to use when, eg vs `open`. ",
              "createdAt": "2025-01-10T19:56:10Z",
              "author": {
                "login": "mattrobball"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "5e3c3804b5aff20d6f7a8d1e1eb2656db431177c",
                "additions": 41,
                "deletions": 17,
                "committedDate": "2024-08-20T08:08:54Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "33ded082ba473cd57feab5d4de342ee24b995520",
                "additions": 337,
                "deletions": 240,
                "committedDate": "2024-08-20T08:10:02Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwe6e1w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10478939824/job/29023444695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwe6eoQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10478939816/job/29023444641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8iCGA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467825566/job/28987392536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8iCIA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467825568/job/28987392544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8ciRQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795359/job/28987302469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8cjcA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795357/job/28987302768"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8iDXQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467825562/job/28987392861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwe6fyg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10478939824/job/29023444938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8cl7Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795359/job/28987303405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8cldQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795357/job/28987303285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8iCYQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467825562/job/28987392609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8ck3A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795359/job/28987303132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8ciKQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795357/job/28987302441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8cjqA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795359/job/28987302824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8ckgQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795357/job/28987303041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8cm5w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795359/job/28987303655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv_CJeg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467795357/job/28990015866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8if_Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28987400189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv8jCEw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15994&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "656710d3c5d1d69b57c4018d35b5b6350a4de4d2",
                "additions": 44010,
                "deletions": 20780,
                "committedDate": "2024-09-15T05:15:39Z",
                "author": {
                  "name": "Damiano Testa",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "397b8cf19c4b91cf16ebec55e1bf7469b8315e83",
                "additions": 21,
                "deletions": 21,
                "committedDate": "2024-09-15T05:24:46Z",
                "author": {
                  "name": "Damiano Testa",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPExA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868431911/job/30158341316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPEsQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868431916/job/30158341297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPF4g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432029/job/30158341602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPF5A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432032/job/30158341604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPErA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868431918/job/30158341292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPGbg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432029/job/30158341742"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPGZg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432032/job/30158341734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPE-g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868431918/job/30158341370"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPFkA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432029/job/30158341520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPGJA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432032/job/30158341668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPFmw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432032/job/30158341531"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPGJg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432029/job/30158341670"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPGrw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432029/job/30158341807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZ60mA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10868432032/job/30159058072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPO9Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30158343925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHBZPgBw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15994&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5c7579af3b714c5ecf07bcab3a5989dc1d9614b4",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-09-19T14:00:31Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgM7w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379871471"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgPDQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379872013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgKtg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379870902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgLAA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379870976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgOwg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379871938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgNGQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379871513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgQog",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379872418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgRBg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379872518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsgSTA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379872844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEv-y9Q",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30383518453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHEsiYGA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15994&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-20T08:13:22Z",
        "deletions": 258,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Associated/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Finset.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Center.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Commutator.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Commute/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Commute/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Commute/Hom.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Commute/Units.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Conj.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Defs.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Embedding.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Even.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Ext.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Fin/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Hom/Instances.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/InjSurj.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Int.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Invertible/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Invertible/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/MinimalAxioms.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Nat.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Opposite.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Pi/Basic.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Group/Pi/Lemmas.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Semiconj/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Semiconj/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Semiconj/Units.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Basic.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/TypeTags.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/ULift.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Units.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Units/Equiv.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Units/Hom.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/WithOne/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/WithOne/Defs.lean",
              "additions": 8,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/GroupPower/IterateHom.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Action/Defs.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Center.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Units/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Defs.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Module/Equiv/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/Basic.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/Defs.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Order/CauSeq/Basic.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Order/Group/Unbundled/Int.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Hom/Ring.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Rat.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Unbundled/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Unbundled/Rat.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Ring/Action/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Center.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Equiv.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Hom/Defs.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Ring/Int.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Parity.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Rat.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Star/Basic.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Convex/Cone/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/FilteredColimitCommutesFiniteLimit.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Complex/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fin/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finset/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finset/Fold.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finset/Image.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finset/Lattice.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finset/Union.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fintype/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fintype/Card.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fintype/Option.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/Basic.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/List/Count.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Multiset/Antidiagonal.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Multiset/Bind.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Nat/Cast/Basic.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/Rat/Defs.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Rat/Denumerable.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Real/Basic.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Set/Finite.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/Commutator/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/Subgroup/Center.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/Basis/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Function/SpecialFunctions/Basic.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/Interval/Finset/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Maps.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Operations.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Cardinal/Ordinal.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Arithmetic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Tactic/Abel.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/EMetricSpace/Defs.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Util/AssertExists.lean",
              "additions": 25,
              "deletions": 21
            },
            {
              "path": "test/AssertExists.lean",
              "additions": 19,
              "deletions": 0
            }
          ]
        },
        "headRefName": "adomani/assert_exists_many",
        "headRefOid": "5c7579af3b714c5ecf07bcab3a5989dc1d9614b4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c540rpZ",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GDf5A",
              "body": "I'm not sure there is precedent for column aligning multiple arguments into a command. ",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-08-20T20:45:21Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15994,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GDf5A",
              "body": "I'm not sure there is precedent for column aligning multiple arguments into a command. ",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-08-20T20:45:21Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgM7w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379871471"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgPDQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379872013"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgKtg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379870902"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgLAA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379870976"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgOwg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379871938"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgNGQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379871513"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgQog",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379872418"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgRBg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30379872518"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsgSTA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559098/job/30379872844"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEv-y9Q",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10942559104/job/30383518453"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHEsiYGA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15994&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: allow several identifiers in assert_not_exists",
        "updatedAt": "2025-01-10T19:56:11Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15994",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I_Hry",
              "createdAt": "2024-08-20T08:14:16Z",
              "body": "### PR summary [397b8cf19c](https://github.com/leanprover-community/mathlib4/pull/15994/commits/397b8cf19c4b91cf16ebec55e1bf7469b8315e83)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6GDf5A",
              "createdAt": "2024-08-20T20:45:21Z",
              "body": "I'm not sure there is precedent for column aligning multiple arguments into a command. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JFdu_",
              "createdAt": "2024-08-20T23:11:58Z",
              "body": "I did it because it seems more legible, but I did not think about it being unusual.\n\nShould I put each block on the same line?",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThY6WzwAAAANAfp0p",
              "createdAt": "2024-08-21T21:42:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThY6WzwAAAANCNFnY",
              "createdAt": "2024-08-23T16:50:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThY6WzwAAAANSGVf-",
              "createdAt": "2024-09-15T05:41:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThY6WzwAAAANVHAgI",
              "createdAt": "2024-09-18T19:40:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6ThY6WzwAAAAOyzGKR",
              "createdAt": "2025-01-10T16:33:22Z",
              "assignee": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Z-HxA",
              "createdAt": "2025-01-10T16:34:56Z",
              "body": "I haven't fully read the PR yet, but I like the main change. @adomani if you could resolve merge conflicts and ping me, then I'll see that this PR get's merged promptly",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aAtTZ",
              "createdAt": "2025-01-10T19:56:10Z",
              "body": "I still don't think it's a good idea to introduce new formatting styles. I agree it looks good but it becomes a burden to remember what style to use when, eg vs `open`. ",
              "author": {
                "login": "mattrobball"
              }
            }
          ]
        }
      }
    }
  }
}
