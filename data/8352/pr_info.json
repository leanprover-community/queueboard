{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 16,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "urkud"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "* rename `HasFDerivWithinAt.isBigO` to `HasFDerivWithinAt.isBigO_sub`;\n* rename `HasFDerivAt.isBigO` to `HasFDerivAt.isBigO_sub`;\n* add `DifferentiableWithinAt.isBigO_sub`;\n* add `DifferentiableAt.isBigO_sub`.\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-11-12T09:37:44Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5rs0z1",
              "body": "Should I add special cases for `xâ‚€=0`?",
              "createdAt": "2023-11-11T20:42:41Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rs1n5",
              "body": "Then there should also special cases for `f xâ‚€ = 0`, I would think. Then every lemma would have four versions. It may be convenient to have these, but I'm not sure this is really a good idea.\r\nBut maybe some other people can chime in on this.",
              "createdAt": "2023-11-11T21:00:31Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rs9Ms",
              "body": "I agree that I shouldn't (unless this specific case will be used many times).",
              "createdAt": "2023-11-11T23:55:26Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rtEnQ",
              "body": "If you are not adding the `xâ‚€ = 0` / `f xâ‚€ = 0` versions, why the rename? I think the current names are fine, and if we want to add those versions, we may add a subscript 0 to those lemmas.",
              "createdAt": "2023-11-12T02:13:52Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rtEvZ",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by alreadydone.",
              "createdAt": "2023-11-12T02:17:12Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rtZkR",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2023-11-12T09:04:51Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rtbu8",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6839745539/job/18598273378)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6839745539/job/18598273170)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6839745539/job/18598273315)",
              "createdAt": "2023-11-12T09:37:43Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f0502852abcab971d7b6e104303f82cb08822530",
                "additions": 16,
                "deletions": 8,
                "committedDate": "2023-11-11T17:25:35Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-11T17:27:28Z",
        "deletions": 8,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Calculus/FDeriv/Basic.lean",
              "additions": 16,
              "deletions": 8
            }
          ]
        },
        "headRefName": "YK-diff-O",
        "headRefOid": "f0502852abcab971d7b6e104303f82cb08822530",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fN4kJ",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5m4yHi",
              "body": "Oh I see it's for consistency with [HasFDerivAtFilter.isBigO_sub](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Calculus/FDeriv/Basic.html#HasFDerivAtFilter.isBigO_sub) etc.\r\nLGTM then!\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-12T02:16:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4njJ",
              "body": "LGTM",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-11-11T19:49:00Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8352,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5m4njJ",
              "body": "LGTM",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-11-11T19:49:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4yHi",
              "body": "Oh I see it's for consistency with [HasFDerivAtFilter.isBigO_sub](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Calculus/FDeriv/Basic.html#HasFDerivAtFilter.isBigO_sub) etc.\r\nLGTM then!\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-12T02:16:59Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "U_kgDOBfNrCg",
              "login": "MichaelStollBayreuth"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Calculus/FDeriv): add `DifferentiableAt.isBigO_sub`",
        "updatedAt": "2023-11-12T09:37:47Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8352",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f0502852abcab971d7b6e104303f82cb08822530"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jnzazwAAAAKLpfBK",
              "createdAt": "2023-11-11T17:27:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jnzazwAAAAKLpfBL",
              "createdAt": "2023-11-11T17:27:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m4njJ",
              "createdAt": "2023-11-11T19:49:00Z",
              "body": "LGTM",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rs0z1",
              "createdAt": "2023-11-11T20:42:41Z",
              "body": "Should I add special cases for `xâ‚€=0`?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rs1n5",
              "createdAt": "2023-11-11T21:00:31Z",
              "body": "Then there should also special cases for `f xâ‚€ = 0`, I would think. Then every lemma would have four versions. It may be convenient to have these, but I'm not sure this is really a good idea.\r\nBut maybe some other people can chime in on this.",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rs9Ms",
              "createdAt": "2023-11-11T23:55:26Z",
              "body": "I agree that I shouldn't (unless this specific case will be used many times).",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rtEnQ",
              "createdAt": "2023-11-12T02:13:52Z",
              "body": "If you are not adding the `xâ‚€ = 0` / `f xâ‚€ = 0` versions, why the rename? I think the current names are fine, and if we want to add those versions, we may add a subscript 0 to those lemmas.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m4yHi",
              "createdAt": "2023-11-12T02:16:59Z",
              "body": "Oh I see it's for consistency with [HasFDerivAtFilter.isBigO_sub](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Analysis/Calculus/FDeriv/Basic.html#HasFDerivAtFilter.isBigO_sub) etc.\r\nLGTM then!\r\nmaintainer merge",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rtEvZ",
              "createdAt": "2023-11-12T02:17:12Z",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by alreadydone.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rtZkR",
              "createdAt": "2023-11-12T09:04:51Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jnzazwAAAAKLuPTN",
              "createdAt": "2023-11-12T09:05:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52jnzazwAAAAKLuPTe",
              "createdAt": "2023-11-12T09:05:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rtbu8",
              "createdAt": "2023-11-12T09:37:43Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6839745539/job/18598273378)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6839745539/job/18598273170)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6839745539/job/18598273315)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52jnzazwAAAAKLub1l",
              "createdAt": "2023-11-12T09:37:44Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52jnzazwAAAAKLub26",
              "createdAt": "2023-11-12T09:37:47Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
