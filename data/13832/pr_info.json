{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 359,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`Nat.factors` was a very generic name that didn't emphasize that\n* It is a list\n* It is not all factors but only the prime ones\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 18,
        "closed": true,
        "closedAt": "2024-07-17T18:38:38Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6BNtUG",
              "body": "### PR summary [b27a025c06](https://github.com/leanprover-community/mathlib4/pull/13832/commits/b27a025c06d5867fac974aeb7281650ac7ec2ec0)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.NumberTheory.Divisors | 583 | 585 | +2 (+0.34%) |\n| Mathlib.NumberTheory.Padics.PadicVal | 710 | 712 | +2 (+0.28%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>9 files</summary> `Mathlib.NumberTheory.Padics.PadicIntegers` `Mathlib.NumberTheory.Multiplicity` `Mathlib.SetTheory.Cardinal.Divisibility` `Mathlib.NumberTheory.Padics.PadicNumbers` `Mathlib.RingTheory.ChainOfDivisors` `Mathlib.NumberTheory.Harmonic.Int` `Mathlib.Data.Finset.NatDivisors` `Mathlib.NumberTheory.Padics.RingHoms` `Mathlib.NumberTheory.Padics.Hensel`</details>|1|\n|<details><summary>4 files</summary> `Mathlib.NumberTheory.Padics.PadicNorm` `Mathlib.Algebra.IsPrimePow` `Mathlib.NumberTheory.Divisors` `Mathlib.NumberTheory.Padics.PadicVal`</details>|2|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Prime.primeFactorsList_pow`\n`+ Squarefree.nodup_primeFactorsList`\n`+ coprime_primeFactorsList_disjoint`\n`+ dvd_of_mem_primeFactorsList`\n`+ dvd_of_primeFactorsList_subperm`\n`+ eq_of_perm_primeFactorsList`\n`+ factorization_eq_primeFactorsList_multiset`\n`+ le_multiplicity_iff_replicate_subperm_primeFactorsList`\n`+ le_of_mem_primeFactorsList`\n`+ le_padicValNat_iff_replicate_subperm_primeFactorsList`\n`+ mem_primeFactorsList`\n`+ mem_primeFactorsList'`\n`+ mem_primeFactorsList_iff_dvd`\n`+ mem_primeFactorsList_mul`\n`+ mem_primeFactorsList_mul_left`\n`+ mem_primeFactorsList_mul_of_coprime`\n`+ mem_primeFactorsList_mul_right`\n`+ mem_primeFactors_iff_mem_primeFactorsList`\n`+ perm_primeFactorsList_mul`\n`+ perm_primeFactorsList_mul_of_coprime`\n`+ pos_of_mem_primeFactorsList`\n`+ primeFactorsList`\n`+ primeFactorsList_add_two`\n`+ primeFactorsList_chain`\n`+ primeFactorsList_chain'`\n`+ primeFactorsList_chain_2`\n`+ primeFactorsList_count_eq`\n`+ primeFactorsList_eq_nil`\n`+ primeFactorsList_one`\n`+ primeFactorsList_prime`\n`+ primeFactorsList_sorted`\n`+ primeFactorsList_sublist_of_dvd`\n`+ primeFactorsList_sublist_right`\n`+ primeFactorsList_subset_of_dvd`\n`+ primeFactorsList_subset_right`\n`+ primeFactorsList_two`\n`+ primeFactorsList_unique`\n`+ primeFactorsList_zero`\n`+ primeFactors_eq_to_filter_divisors_prime`\n`+ primeFactors_filter_dvd_of_dvd`\n`+ prime_of_mem_primeFactorsList`\n`+ prod_primeFactorsList`\n`+ replicate_subperm_primeFactorsList_iff`\n`+ squarefree_iff_nodup_primeFactorsList`\n`- Prime.factors_pow`\n`- coprime_factors_disjoint`\n`- dvd_of_factors_subperm`\n`- dvd_of_mem_factors`\n`- eq_of_perm_factors`\n`- factors_add_two`\n`- factors_chain`\n`- factors_chain'`\n`- factors_chain_2`\n`- factors_eq_nil`\n`- factors_one`\n`- factors_prime`\n`- factors_sorted`\n`- factors_sublist_of_dvd`\n`- factors_sublist_right`\n`- factors_subset_of_dvd`\n`- factors_subset_right`\n`- factors_two`\n`- factors_unique`\n`- factors_zero`\n`- le_of_mem_factors`\n`- mem_factors`\n`- mem_factors'`\n`- mem_factors_iff_dvd`\n`- mem_factors_mul`\n`- mem_factors_mul_left`\n`- mem_factors_mul_of_coprime`\n`- mem_factors_mul_right`\n`- perm_factors_mul`\n`- perm_factors_mul_of_coprime`\n`- pos_of_mem_factors`\n`- prime_of_mem_factors`\n`- prod_factors`\n`- replicate_subperm_factors_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-14T11:48:54Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Bgzah",
              "body": "Can you limit this PR to the renaming?",
              "createdAt": "2024-06-17T09:28:37Z",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Bg2k-",
              "body": "What am I doing that is not the renaming?",
              "createdAt": "2024-06-17T09:35:04Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6BmCkd",
              "body": "I should say that I am not particularly attached to the name `primeFactorsList` and I would be happy to hear alternatives.",
              "createdAt": "2024-06-17T19:10:56Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FI6Ru",
              "body": "Assuming the merge conflict doesn't cause anything unexpected:\r\n\r\nbors d+",
              "createdAt": "2024-07-17T16:20:25Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FI6Sx",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-07-17T16:20:27Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FJaJo",
              "body": "Was a trivial fix\r\n\r\nbors merge",
              "createdAt": "2024-07-17T17:31:16Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FJaLt",
              "body": ":-1: Rejected by label",
              "createdAt": "2024-07-17T17:31:19Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FJaUh",
              "body": "bors merge",
              "createdAt": "2024-07-17T17:31:39Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FKCUI",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9978903548/job/27576811692)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9978903548/job/27576811494)",
              "createdAt": "2024-07-17T18:38:37Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8087a7a1b8f230da1a6c23f0298dadd969abc985",
                "additions": 329,
                "deletions": 299,
                "committedDate": "2024-07-17T17:30:53Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "05204645c4bd2db91c6f36accce279e3f23c34f1",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2024-07-17T17:30:53Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b27a025c06d5867fac974aeb7281650ac7ec2ec0",
                "additions": 28,
                "deletions": 1,
                "committedDate": "2024-07-17T17:30:53Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69BNg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793949/job/27576451382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69Bqg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793941/job/27576451498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa6885Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576450277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa689kg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576450450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69Bdw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793945/job/27576451447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69AWA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576451160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa68_xw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576451015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69CoA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793945/job/27576451744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa68_Sw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576450891"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa688PQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576450109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa68-Kw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576450603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa68-vA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576450748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69Bug",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576451514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa8MrLg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27577756462"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa69jIA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27576460064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGa6-yew",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=13832&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHDHZg_A",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4430",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-06-14T11:48:18Z",
        "deletions": 302,
        "files": {
          "nodes": [
            {
              "path": "Archive/Wiedijk100Theorems/SumOfPrimeReciprocalsDiverges.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/Nat/Factorization/Basic.lean",
              "additions": 39,
              "deletions": 32
            },
            {
              "path": "Mathlib/Data/Nat/Factorization/PrimePow.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Nat/Factors.lean",
              "additions": 153,
              "deletions": 138
            },
            {
              "path": "Mathlib/Data/Nat/PrimeFin.lean",
              "additions": 12,
              "deletions": 8
            },
            {
              "path": "Mathlib/Data/Nat/Squarefree.lean",
              "additions": 18,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/Nat/Totient.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/PNat/Factors.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/GroupTheory/Exponent.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/GroupTheory/PGroup.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/NumberTheory/ArithmeticFunction.lean",
              "additions": 14,
              "deletions": 13
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/PrimitiveRoots.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Divisors.lean",
              "additions": 14,
              "deletions": 8
            },
            {
              "path": "Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean",
              "additions": 24,
              "deletions": 20
            },
            {
              "path": "Mathlib/NumberTheory/Padics/PadicVal.lean",
              "additions": 15,
              "deletions": 6
            },
            {
              "path": "Mathlib/NumberTheory/SmoothNumbers.lean",
              "additions": 43,
              "deletions": 39
            },
            {
              "path": "Mathlib/RingTheory/UniqueFactorizationDomain.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "docs/100.yaml",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "prime_factors_list",
        "headRefOid": "b27a025c06d5867fac974aeb7281650ac7ec2ec0",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5yeRXC",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6CAvK1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-07-16T20:17:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ARnGr",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-07-01T19:16:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5-kYgF",
              "body": "Perhaps Ruben is confused that this changes not just `factors` but every lemma name that referenced `factors` as a substring? I don't think it makes sense to change those in a different PR though, this looks good to me.",
              "state": "APPROVED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-06-17T17:25:45Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 13832,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "BoltonBailey"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5-kYgF",
              "body": "Perhaps Ruben is confused that this changes not just `factors` but every lemma name that referenced `factors` as a substring? I don't think it makes sense to change those in a different PR though, this looks good to me.",
              "state": "APPROVED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-06-17T17:25:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ARnGr",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-07-01T19:16:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6B1iW9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-07-15T17:31:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6B1is6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-07-15T17:32:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6B_LvG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-16T17:00:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6CAvK1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-07-16T20:17:50Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kBu2U",
                    "body": "```suggestion\r\nlemma mem_primeFactors_iff_mem_primeFactorsList : p ∈ n.primeFactors ↔ p ∈ n.primeFactorsList := by\r\n```",
                    "createdAt": "2024-07-15T17:31:48Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kBvDm",
                    "body": "I think we should add deprecated aliases for all of these, no?",
                    "createdAt": "2024-07-15T17:32:36Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5kHyC2",
                    "body": "even if the `factors` appearing in the RHS is itself deprecated already?",
                    "createdAt": "2024-07-16T17:00:18Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5kIwk0",
                    "body": "How will people using these lemmas know how to update their code? I think they are needed. The point is not to say that they are deprecated but to give people one click fixes.",
                    "createdAt": "2024-07-16T20:17:50Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjY1NTE0MTMx",
              "login": "Ruben-VandeVelde"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjgwMzA1OTk=",
              "login": "BoltonBailey"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69BNg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793949/job/27576451382"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69Bqg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793941/job/27576451498"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa6885Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576450277"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa689kg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576450450"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69Bdw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793945/job/27576451447"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69AWA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576451160"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa68_xw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576451015"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69CoA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793945/job/27576451744"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa68_Sw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576450891"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa688PQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576450109"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa68-Kw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576450603"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa68-vA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27576450748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69Bug",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793449/job/27576451514"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa8MrLg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9978793450/job/27577756462"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa69jIA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27576460064"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGa6-yew",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=13832&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHDHZg_A",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4430",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore: Rename `Nat.factors` to `Nat.primeFactorsList`",
        "updatedAt": "2024-07-17T18:38:45Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/13832",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMQY9e2",
              "createdAt": "2024-06-14T11:48:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMQY9e6",
              "createdAt": "2024-06-14T11:48:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6BNtUG",
              "createdAt": "2024-06-14T11:48:54Z",
              "body": "### PR summary [b27a025c06](https://github.com/leanprover-community/mathlib4/pull/13832/commits/b27a025c06d5867fac974aeb7281650ac7ec2ec0)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.NumberTheory.Divisors | 583 | 585 | +2 (+0.34%) |\n| Mathlib.NumberTheory.Padics.PadicVal | 710 | 712 | +2 (+0.28%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>9 files</summary> `Mathlib.NumberTheory.Padics.PadicIntegers` `Mathlib.NumberTheory.Multiplicity` `Mathlib.SetTheory.Cardinal.Divisibility` `Mathlib.NumberTheory.Padics.PadicNumbers` `Mathlib.RingTheory.ChainOfDivisors` `Mathlib.NumberTheory.Harmonic.Int` `Mathlib.Data.Finset.NatDivisors` `Mathlib.NumberTheory.Padics.RingHoms` `Mathlib.NumberTheory.Padics.Hensel`</details>|1|\n|<details><summary>4 files</summary> `Mathlib.NumberTheory.Padics.PadicNorm` `Mathlib.Algebra.IsPrimePow` `Mathlib.NumberTheory.Divisors` `Mathlib.NumberTheory.Padics.PadicVal`</details>|2|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Prime.primeFactorsList_pow`\n`+ Squarefree.nodup_primeFactorsList`\n`+ coprime_primeFactorsList_disjoint`\n`+ dvd_of_mem_primeFactorsList`\n`+ dvd_of_primeFactorsList_subperm`\n`+ eq_of_perm_primeFactorsList`\n`+ factorization_eq_primeFactorsList_multiset`\n`+ le_multiplicity_iff_replicate_subperm_primeFactorsList`\n`+ le_of_mem_primeFactorsList`\n`+ le_padicValNat_iff_replicate_subperm_primeFactorsList`\n`+ mem_primeFactorsList`\n`+ mem_primeFactorsList'`\n`+ mem_primeFactorsList_iff_dvd`\n`+ mem_primeFactorsList_mul`\n`+ mem_primeFactorsList_mul_left`\n`+ mem_primeFactorsList_mul_of_coprime`\n`+ mem_primeFactorsList_mul_right`\n`+ mem_primeFactors_iff_mem_primeFactorsList`\n`+ perm_primeFactorsList_mul`\n`+ perm_primeFactorsList_mul_of_coprime`\n`+ pos_of_mem_primeFactorsList`\n`+ primeFactorsList`\n`+ primeFactorsList_add_two`\n`+ primeFactorsList_chain`\n`+ primeFactorsList_chain'`\n`+ primeFactorsList_chain_2`\n`+ primeFactorsList_count_eq`\n`+ primeFactorsList_eq_nil`\n`+ primeFactorsList_one`\n`+ primeFactorsList_prime`\n`+ primeFactorsList_sorted`\n`+ primeFactorsList_sublist_of_dvd`\n`+ primeFactorsList_sublist_right`\n`+ primeFactorsList_subset_of_dvd`\n`+ primeFactorsList_subset_right`\n`+ primeFactorsList_two`\n`+ primeFactorsList_unique`\n`+ primeFactorsList_zero`\n`+ primeFactors_eq_to_filter_divisors_prime`\n`+ primeFactors_filter_dvd_of_dvd`\n`+ prime_of_mem_primeFactorsList`\n`+ prod_primeFactorsList`\n`+ replicate_subperm_primeFactorsList_iff`\n`+ squarefree_iff_nodup_primeFactorsList`\n`- Prime.factors_pow`\n`- coprime_factors_disjoint`\n`- dvd_of_factors_subperm`\n`- dvd_of_mem_factors`\n`- eq_of_perm_factors`\n`- factors_add_two`\n`- factors_chain`\n`- factors_chain'`\n`- factors_chain_2`\n`- factors_eq_nil`\n`- factors_one`\n`- factors_prime`\n`- factors_sorted`\n`- factors_sublist_of_dvd`\n`- factors_sublist_right`\n`- factors_subset_of_dvd`\n`- factors_subset_right`\n`- factors_two`\n`- factors_unique`\n`- factors_zero`\n`- le_of_mem_factors`\n`- mem_factors`\n`- mem_factors'`\n`- mem_factors_iff_dvd`\n`- mem_factors_mul`\n`- mem_factors_mul_left`\n`- mem_factors_mul_of_coprime`\n`- mem_factors_mul_right`\n`- perm_factors_mul`\n`- perm_factors_mul_of_coprime`\n`- pos_of_mem_factors`\n`- prime_of_mem_factors`\n`- prod_factors`\n`- replicate_subperm_factors_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6MQvfkzwAAAAMQq6Wb",
              "createdAt": "2024-06-14T18:56:02Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMRUkkG",
              "createdAt": "2024-06-16T11:46:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Bgzah",
              "createdAt": "2024-06-17T09:28:37Z",
              "body": "Can you limit this PR to the renaming?",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Bg2k-",
              "createdAt": "2024-06-17T09:35:04Z",
              "body": "What am I doing that is not the renaming?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5-kYgF",
              "createdAt": "2024-06-17T17:25:45Z",
              "body": "Perhaps Ruben is confused that this changes not just `factors` but every lemma name that referenced `factors` as a substring? I don't think it makes sense to change those in a different PR though, this looks good to me.",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6BmCkd",
              "createdAt": "2024-06-17T19:10:56Z",
              "body": "I should say that I am not particularly attached to the name `primeFactorsList` and I would be happy to hear alternatives.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMbZaZF",
              "createdAt": "2024-07-01T03:41:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6MQvfkzwAAAAMbuq3k",
              "createdAt": "2024-07-01T11:51:05Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMbwxzj",
              "createdAt": "2024-07-01T12:32:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ARnGr",
              "createdAt": "2024-07-01T19:16:19Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMdYpLa",
              "createdAt": "2024-07-03T09:55:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6MQvfkzwAAAAMemP6T",
              "createdAt": "2024-07-04T19:55:37Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMemwxs",
              "createdAt": "2024-07-04T20:21:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMhHkkG",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMhMWo8",
              "createdAt": "2024-07-09T14:53:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6MQvfkzwAAAAMhTSYr",
              "createdAt": "2024-07-09T16:56:17Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMhUCIX",
              "createdAt": "2024-07-09T17:11:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6B1iW9",
              "createdAt": "2024-07-15T17:31:48Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6B1is6",
              "createdAt": "2024-07-15T17:32:36Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMlMgdA",
              "createdAt": "2024-07-15T17:33:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMmHlk_",
              "createdAt": "2024-07-16T17:02:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMmQCP6",
              "createdAt": "2024-07-16T20:17:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMmSkqd",
              "createdAt": "2024-07-16T21:32:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMmkYCs",
              "createdAt": "2024-07-17T07:12:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FI6Ru",
              "createdAt": "2024-07-17T16:20:25Z",
              "body": "Assuming the merge conflict doesn't cause anything unexpected:\r\n\r\nbors d+",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FI6Sx",
              "createdAt": "2024-07-17T16:20:27Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6MQvfkzwAAAAMnAn6z",
              "createdAt": "2024-07-17T16:20:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6MQvfkzwAAAAMnDyKL",
              "createdAt": "2024-07-17T17:31:02Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FJaJo",
              "createdAt": "2024-07-17T17:31:16Z",
              "body": "Was a trivial fix\r\n\r\nbors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FJaLt",
              "createdAt": "2024-07-17T17:31:19Z",
              "body": ":-1: Rejected by label",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6MQvfkzwAAAAMnDzsq",
              "createdAt": "2024-07-17T17:31:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FJaUh",
              "createdAt": "2024-07-17T17:31:39Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FKCUI",
              "createdAt": "2024-07-17T18:38:37Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9978903548/job/27576811692)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9978903548/job/27576811494)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6MQvfkzwAAAAMnHqhq",
              "createdAt": "2024-07-17T18:38:38Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6MQvfkzwAAAAMnHq6J",
              "createdAt": "2024-07-17T18:38:45Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UOlqM",
              "createdAt": "2024-08-01T17:33:58Z",
              "source": {
                "id": "PR_kwDOFcwZ1c529Mz2",
                "title": "feat: MiM PR report",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
              }
            }
          ]
        }
      }
    }
  }
}
