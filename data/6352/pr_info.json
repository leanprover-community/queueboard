{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 976,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "apnelson1"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR is the first in a series that are intended to add matroid theory to mathlib. The file `Data.Matroid.Basic` contains the definition of (possibly infinite) matroids, API relating bases, independent/dependent sets and bases of sets, and some simple typeclasses related to finiteness/nonemptiness of matroids. We also define a tactic whose job is to prove that a set is contained in the ground set of a matroid (using aesop); it is imperfect, but does an ok job. \r\n \r\nAlternative axiomatizations, duality, minors, rank, circuits, closure, flats, etc etc are all ready to go, and will be added in a sequence of future PRs. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-10-30T21:40:39Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5p1Y8W",
              "body": "@dupuisf @jcommelin Thanks for looking at this and sorry I took so long to address some very minor issues! I hope it's ready to go now. ",
              "createdAt": "2023-10-23T16:47:21Z",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qU6Mm",
              "body": "Should `lakefile.olean` be being committed here? If not, should it be in `.gitignore`?",
              "createdAt": "2023-10-28T16:39:35Z",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qVAQY",
              "body": "> Should `lakefile.olean` be being committed here? If not, should it be in `.gitignore`?\r\n\r\nYou're probably right - I'm bad at GitHub and couldn't see an easy way to revert just that file being committed. ",
              "createdAt": "2023-10-28T18:24:53Z",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qcTH4",
              "body": "@apnelson1 I noticed this PR was saying that you'd edited something like 3800 files, so I just tried to fix your last few commits. I did a force push in the process -- I *think* all you have to do locally is `git fetch` followed by `git reset --hard origin/matroid`, assuming you have no local changes you want to preserve. Ping me on zulip if you need any help.",
              "createdAt": "2023-10-30T18:22:30Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qcdVw",
              "body": "I just pushed a change to protect `Finite` and `Nonempty` -- I think it's best not to shadow the global `Finite` and `Nonempty`. A side effect is that you write `[M.Finite]` (or `[Matroid.Finite M]`) rather than `[Finite M]`. (I also made some changes to get this to compile on the most recent mathlib.)\r\n\r\nI've looked through everything and nothing jumped out as needing changing, so if you're ok with what I've done, want to merge it?\r\n\r\nbors d+",
              "createdAt": "2023-10-30T18:49:47Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qcdWo",
              "body": ":v: apnelson1 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-10-30T18:49:49Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qdP-X",
              "body": "> I just pushed a change to protect `Finite` and `Nonempty` -- I think it's best not to shadow the global `Finite` and `Nonempty`. A side effect is that you write `[M.Finite]` (or `[Matroid.Finite M]`) rather than `[Finite M]`. (I also made some changes to get this to compile on the most recent mathlib.)\r\n> \r\n> I've looked through everything and nothing jumped out as needing changing, so if you're ok with what I've done, want to merge it?\r\n> \r\n> bors d+\r\n\r\nThanks for this, and for sorting out the noisy mess I inadvertently created with my last few commits! ",
              "createdAt": "2023-10-30T21:11:33Z",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qdQDq",
              "body": "> ✌️ apnelson1 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).\r\n\r\nbors r+",
              "createdAt": "2023-10-30T21:11:44Z",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qdZiq",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6698783884/job/18201591652)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6698783884/job/18201590810)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6698783884/job/18201591446)",
              "createdAt": "2023-10-30T21:40:38Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "42de1c6bb34f1bf1f606b8615b385bbc0deec546",
                "additions": 901,
                "deletions": 0,
                "committedDate": "2023-08-03T18:39:06Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7bf20dff06099ce87d8d8424c773215b8a0e6706",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-08-03T18:49:55Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "41dbf637c3e13489f80c61ba21a366d90c5a3abb",
                "additions": 53,
                "deletions": 19,
                "committedDate": "2023-08-17T12:20:15Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1a91fde5f280504e2f3469a7e1a7f4bdb9f5e9a4",
                "additions": 49,
                "deletions": 20,
                "committedDate": "2023-10-23T16:32:21Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "db3f0d38d770335cab402e778af951b52fc319a0",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-23T16:46:05Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ad683b68d9ca6c004468afaf9bec2bf8c82d1109",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-23T18:21:24Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "51d5c41370d6f55356204e0ac260b26b35d3f55d",
                "additions": 16,
                "deletions": 10,
                "committedDate": "2023-10-23T18:34:22Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "32d6b4442b286df267fa984ae2585e6a8688d59c",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-23T18:53:21Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6166e86633afcf1f8a4109403894b7f5526189b3",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-10-23T19:19:38Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1eaf4623b7e2500f405d9e5d2b140790821ce016",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-23T19:45:12Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1a79022b8945a63571158b09997d0412801e0ab6",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-24T04:18:18Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d76b8d049ee011f29368f9b41e57b8b4afac194d",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-24T04:20:44Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2de5526e7300737f132a54400d49ce62d3ca229a",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-10-30T18:18:56Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "84bc2aefe392367e2fc126ba15a3b2e3a2aec558",
                "additions": 117136,
                "deletions": 57075,
                "committedDate": "2023-10-30T18:24:52Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "50feb0cbe8b925bf9e216bc21d4123f0af912275",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-10-30T18:30:08Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c8ea6de200c3e0dd6508252ddd3dc064d7ac7810",
                "additions": 18,
                "deletions": 17,
                "committedDate": "2023-10-30T18:45:04Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-03T18:46:58Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Matroid/Basic.lean",
              "additions": 922,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Matroid/Init.lean",
              "additions": 17,
              "deletions": 0
            },
            {
              "path": "docs/references.bib",
              "additions": 35,
              "deletions": 0
            }
          ]
        },
        "headRefName": "matroid",
        "headRefOid": "c8ea6de200c3e0dd6508252ddd3dc064d7ac7810",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5XItXj",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
              "color": "33dbec",
              "name": "t-combinatorics"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5k6UjA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-10-23T16:32:53Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6352,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": [
                {
                  "login": "lambda-fairy"
                },
                {
                  "login": "bryangingechen"
                },
                {
                  "login": "kmill"
                }
              ]
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxMTAxODkz",
                "login": "dupuisf"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5d5bXI",
              "body": "Congrats on PRing this!",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-12T18:51:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eUkFa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-08-17T11:54:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eUkUQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-08-17T11:54:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXZey",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-17T18:03:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXaFF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-17T18:05:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iE-KQ",
              "body": "Thanks a lot, this is great work! I'm happy to merge this after the few cosmetic issues are fixed, unless @jcommelin wants to make another pass first.",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2023-09-27T03:03:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k6UjA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-10-23T16:32:53Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCOpV",
                    "body": "Please add these references to our bib file: `docs/references.bib`",
                    "createdAt": "2023-08-12T18:36:09Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCOpp",
                    "body": "Thanks for this excellent documentation!",
                    "createdAt": "2023-08-12T18:36:24Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCPH1",
                    "body": "What do you think of using `E` everywhere, and dropping `.ground` altogether? What about the names? Atm, it seems that statements below use `ground` in the name, but `E` in the actual Lean expression.",
                    "createdAt": "2023-08-12T18:41:06Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUF6C",
                    "body": "I would be fine with having `E` as the name of the structure field. But it feels a bit wrong to use `E` in lemma names; one talks about the 'ground set' of a matroid M, writing E(M). It's not referrred to as an 'E-set' or anything like that. IMO, using `M.ground` in place of `M.E` in calculations would add a huge number of characters to everything and make simple things look more complicated. If things were to change, I would prefer the change of replacing 'ground' with 'E' everywhere. How strongly do you feel about this? ",
                    "createdAt": "2023-08-17T11:54:20Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NV1Zs",
                    "body": "I think your arguments make sense. In that case, I suggest using `E` everywhere, even in the definition of matroids, but using `ground` in names. Your arguments should also end up in the documentation.",
                    "createdAt": "2023-08-17T18:05:03Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCPpg",
                    "body": "I think that you can make these instances in Lean 4: loops in the typeclass hierarchy are no longer a problem.",
                    "createdAt": "2023-08-12T18:42:18Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUGDy",
                    "body": "Is it normal to have `Set.Finite` terms as instances?",
                    "createdAt": "2023-08-17T11:54:58Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NV1Cg",
                    "body": "Ooh, sorry. I forgot that this was about `Set` instead of about types. So your version is correct.",
                    "createdAt": "2023-08-17T18:03:15Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCPz1",
                    "body": "Does it make sense to put this in the `ExchangeProperty` namespace? Something like\r\n```suggestion\r\ntheorem ExchangeProperty.antichain (hB : Base B) (hB' : Base B') (h : B ⊆ B') : B = B' :=\r\n```\r\nThen you can use this with dot-notation as `exch.antichain hB hB' h`.",
                    "createdAt": "2023-08-12T18:45:30Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCP0Q",
                    "body": "Idem dito",
                    "createdAt": "2023-08-12T18:45:44Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCP0j",
                    "body": "Idem dito",
                    "createdAt": "2023-08-12T18:45:50Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pv4oU",
                    "body": "```suggestion\r\n@article{         bowlerGeschke2015,\r\n```",
                    "createdAt": "2023-09-27T02:03:30Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pv4uK",
                    "body": "I guess this is what the linter is complaining about",
                    "createdAt": "2023-09-27T02:03:57Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pv4qi",
                    "body": "```suggestion\r\n\r\n@book{            oxley2011,\r\n```",
                    "createdAt": "2023-09-27T02:03:40Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pv5oM",
                    "body": "```suggestion\r\n  gives a number of different notions of 'infinite matroid' that disagree with each other,\r\n```",
                    "createdAt": "2023-09-27T02:08:29Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pv-iQ",
                    "body": "I think it would be better to use `encard` in lemma names also to match the formal statement -- certainly that would be my first attempt when trying to guess the name of the relevant lemmas in the doc search.",
                    "createdAt": "2023-09-27T02:35:47Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pv_SS",
                    "body": "```suggestion\r\ntheorem Base.eq_exchange_of_diff_eq_singleton (hB : M.Base B) (hB' : M.Base B') (h : B \\ B' = {e}) :\r\n    ∃ f ∈ B' \\ B, B' = (insert f B) \\ {e} := by\r\n```",
                    "createdAt": "2023-09-27T02:42:51Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PwAKJ",
                    "body": "```suggestion\r\ntheorem basis_iff (hX : X ⊆ M.E := by aesop_mat) :\r\n    M.Basis I X ↔ (M.Indep I ∧ I ⊆ X ∧ ∀ J, M.Indep J → I ⊆ J → J ⊆ X → I = J) := by \r\n  rw [basis_iff', and_iff_left hX]\r\n```",
                    "createdAt": "2023-09-27T02:48:27Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmJ-q",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    ∃ e ∈ B' \\ I, M.Indep (insert e I) :=\n```\n",
                    "createdAt": "2023-10-23T16:32:53Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmJ-w",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    M₁ = M₂ ↔ (M₁.E = M₂.E) ∧ ∀ I, I ⊆ M₁.E → (M₁.Indep I ↔ M₂.Indep I) :=\n```\n",
                    "createdAt": "2023-10-23T16:32:53Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmJ-0",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    J ∩ X = I :=\n```\n",
                    "createdAt": "2023-10-23T16:32:53Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcxNjYwNzcx",
              "login": "apnelson1"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjMxMTAxODkz",
              "login": "dupuisf"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: (Data.Matroid) basic matroid theory",
        "updatedAt": "2023-10-30T21:40:42Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6352",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "42de1c6bb34f1bf1f606b8615b385bbc0deec546"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5taGN9zwAAAAJULI30",
              "createdAt": "2023-08-03T18:46:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5taGN9zwAAAAJULI3-",
              "createdAt": "2023-08-03T18:46:59Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7bf20dff06099ce87d8d8424c773215b8a0e6706"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5taGN9zwAAAAJVBWpI",
              "createdAt": "2023-08-06T01:12:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
                "name": "t-combinatorics"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d5bXI",
              "createdAt": "2023-08-12T18:36:09Z",
              "body": "Congrats on PRing this!",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "41dbf637c3e13489f80c61ba21a366d90c5a3abb"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5iE-KQ",
              "createdAt": "2023-09-27T02:03:30Z",
              "body": "Thanks a lot, this is great work! I'm happy to merge this after the few cosmetic issues are fixed, unless @jcommelin wants to make another pass first.",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1a91fde5f280504e2f3469a7e1a7f4bdb9f5e9a4"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5k6UjA",
              "createdAt": "2023-10-23T16:32:53Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db3f0d38d770335cab402e778af951b52fc319a0"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5taGN9zwAAAAKAXSeM",
              "createdAt": "2023-10-23T16:46:28Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxMTAxODkz",
                "login": "dupuisf"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5taGN9zwAAAAKAXSod",
              "createdAt": "2023-10-23T16:46:32Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5p1Y8W",
              "createdAt": "2023-10-23T16:47:21Z",
              "body": "@dupuisf @jcommelin Thanks for looking at this and sorry I took so long to address some very minor issues! I hope it's ready to go now. ",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ad683b68d9ca6c004468afaf9bec2bf8c82d1109"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "51d5c41370d6f55356204e0ac260b26b35d3f55d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "32d6b4442b286df267fa984ae2585e6a8688d59c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6166e86633afcf1f8a4109403894b7f5526189b3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1eaf4623b7e2500f405d9e5d2b140790821ce016"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1a79022b8945a63571158b09997d0412801e0ab6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d76b8d049ee011f29368f9b41e57b8b4afac194d"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PF_bs",
              "createdAt": "2023-10-28T15:44:56Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5eB_7w",
                "title": "[Merged by Bors] - fix timezone and decoding issues in port status script",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8001"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qU6Mm",
              "createdAt": "2023-10-28T16:39:35Z",
              "body": "Should `lakefile.olean` be being committed here? If not, should it be in `.gitignore`?",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qVAQY",
              "createdAt": "2023-10-28T18:24:53Z",
              "body": "> Should `lakefile.olean` be being committed here? If not, should it be in `.gitignore`?\r\n\r\nYou're probably right - I'm bad at GitHub and couldn't see an easy way to revert just that file being committed. ",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5taGN9zwAAAAKEMCud",
              "createdAt": "2023-10-30T13:22:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2de5526e7300737f132a54400d49ce62d3ca229a"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5taGN9zwAAAAKEaxCZ",
              "createdAt": "2023-10-30T18:19:13Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qcTH4",
              "createdAt": "2023-10-30T18:22:30Z",
              "body": "@apnelson1 I noticed this PR was saying that you'd edited something like 3800 files, so I just tried to fix your last few commits. I did a force push in the process -- I *think* all you have to do locally is `git fetch` followed by `git reset --hard origin/matroid`, assuming you have no local changes you want to preserve. Ping me on zulip if you need any help.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5taGN9zwAAAAKEa79T",
              "createdAt": "2023-10-30T18:23:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "84bc2aefe392367e2fc126ba15a3b2e3a2aec558"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "50feb0cbe8b925bf9e216bc21d4123f0af912275"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c8ea6de200c3e0dd6508252ddd3dc064d7ac7810"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qcdVw",
              "createdAt": "2023-10-30T18:49:47Z",
              "body": "I just pushed a change to protect `Finite` and `Nonempty` -- I think it's best not to shadow the global `Finite` and `Nonempty`. A side effect is that you write `[M.Finite]` (or `[Matroid.Finite M]`) rather than `[Finite M]`. (I also made some changes to get this to compile on the most recent mathlib.)\r\n\r\nI've looked through everything and nothing jumped out as needing changing, so if you're ok with what I've done, want to merge it?\r\n\r\nbors d+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qcdWo",
              "createdAt": "2023-10-30T18:49:49Z",
              "body": ":v: apnelson1 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5taGN9zwAAAAKEb4je",
              "createdAt": "2023-10-30T18:50:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5taGN9zwAAAAKEb4mG",
              "createdAt": "2023-10-30T18:50:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qdP-X",
              "createdAt": "2023-10-30T21:11:33Z",
              "body": "> I just pushed a change to protect `Finite` and `Nonempty` -- I think it's best not to shadow the global `Finite` and `Nonempty`. A side effect is that you write `[M.Finite]` (or `[Matroid.Finite M]`) rather than `[Finite M]`. (I also made some changes to get this to compile on the most recent mathlib.)\r\n> \r\n> I've looked through everything and nothing jumped out as needing changing, so if you're ok with what I've done, want to merge it?\r\n> \r\n> bors d+\r\n\r\nThanks for this, and for sorting out the noisy mess I inadvertently created with my last few commits! ",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qdQDq",
              "createdAt": "2023-10-30T21:11:44Z",
              "body": "> ✌️ apnelson1 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).\r\n\r\nbors r+",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qdZiq",
              "createdAt": "2023-10-30T21:40:38Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6698783884/job/18201591652)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6698783884/job/18201590810)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6698783884/job/18201591446)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5taGN9zwAAAAKEhoyP",
              "createdAt": "2023-10-30T21:40:39Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5taGN9zwAAAAKEho3n",
              "createdAt": "2023-10-30T21:40:42Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
