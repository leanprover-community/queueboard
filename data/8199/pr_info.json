{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 14,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Kha"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-11-25T11:28:26Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5q6dEZ",
              "body": "!bench",
              "createdAt": "2023-11-05T11:21:07Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6dM7",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/2cfb1756-6e87-4098-af2d-7a8476a69081) for commit 9ec581500daa35d209b3e96a6af99f291b554f8a.\nThe entire run failed.\nFound no significant differences.",
              "createdAt": "2023-11-05T11:23:55Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6dj4",
              "body": "!bench",
              "createdAt": "2023-11-05T11:30:15Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6e4T",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/f4dd4ce4-190f-425c-82b6-1d6028c7e514) for commit c20ba0f3145236e55b2c1d7a99257a2e32d4dc53.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1596e43b-f5bb-453c-8051-ec9939d5334f/to/f4dd4ce4-190f-425c-82b6-1d6028c7e514) against commit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ open Mathlib   instructions   -21.7%\n+ open Mathlib   wall-clock     -11.2%\n```",
              "createdAt": "2023-11-05T11:55:35Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6kSu",
              "body": "!bench",
              "createdAt": "2023-11-05T13:28:25Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6lx4",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/6b48c1ba-0dbc-4a0d-9d1d-1cc1a80608be) for commit 494b8cb0c4e8a35b446edf0140740a5014531775.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1596e43b-f5bb-453c-8051-ec9939d5334f/to/6b48c1ba-0dbc-4a0d-9d1d-1cc1a80608be) against commit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ open Mathlib   instructions   -20.6%\n+ open Mathlib   wall-clock     -12.4%\n```",
              "createdAt": "2023-11-05T13:51:48Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6nzf",
              "body": "!bench",
              "createdAt": "2023-11-05T14:24:23Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6pVh",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/1e3c52bd-aa44-451b-9a64-383e7f06281a) for commit 4d3e6d3ba1a57432b1731f999fac664d195f3b33.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1596e43b-f5bb-453c-8051-ec9939d5334f/to/1e3c52bd-aa44-451b-9a64-383e7f06281a) against commit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ build          aesop           -5.1%\n+ open Mathlib   instructions   -20.9%\n+ open Mathlib   wall-clock     -15.4%\n```",
              "createdAt": "2023-11-05T14:49:52Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6q7M",
              "body": "Not sure why no stddev is showing up for the benchmark. Maybe both commits need data over multiple runs :shrug: .",
              "createdAt": "2023-11-05T15:14:18Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6rkf",
              "body": "I've never seen stddev in mathlib benchmarks, I thought it was just broken.",
              "createdAt": "2023-11-05T15:25:13Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q6tdQ",
              "body": "All *other* benchmarks are intentionally limited to a single run :) . Let's see if it turns up for any subsequent commit.",
              "createdAt": "2023-11-05T15:56:48Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q7F3U",
              "body": "bors d+\r\n\r\n(Doesn't have any actual effect, now that bors is dead. Long live the merge queue.)",
              "createdAt": "2023-11-05T23:06:05Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q7HLB",
              "body": "So do I still reply with \"bors r+\"? :)",
              "createdAt": "2023-11-05T23:26:25Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q7rnf",
              "body": "I made #8214 to compare with the result of just entirely removing `#align`. This PR picks up most of the gain already!",
              "createdAt": "2023-11-06T03:29:32Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q8WM7",
              "body": "> (Doesn't have any actual effect, now that bors is dead. Long live the merge queue.)\r\n\r\nUnfortunately the merge queue also did not live long. The battle for succession is still underway.",
              "createdAt": "2023-11-06T07:11:54Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q8-BA",
              "body": "I just realized that I was overcomplicating things, we can just make the whole state lazy if we rarely ever query it at all.",
              "createdAt": "2023-11-06T09:08:01Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q9Ksc",
              "body": "!bench",
              "createdAt": "2023-11-06T09:37:36Z",
              "author": {
                "login": "Kha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q9Wth",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/06ea514d-081e-4f25-ad1b-c6eef88993c5) for commit f3c57c8978f7f729d23e4de5f3905ea2d2c8b1fd.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/957be14a-1565-4d22-abb8-98edc0b0bea6/to/06ea514d-081e-4f25-ad1b-c6eef88993c5) against commit 81dd376a02781030ead59ee35ca5334a7fccc527:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ open Mathlib   instructions   -20.3%\n+ open Mathlib   wall-clock     -12.1%\n```",
              "createdAt": "2023-11-06T10:01:45Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5s0pNV",
              "body": "Can we get this merged? Is this waiting on anything?",
              "createdAt": "2023-11-24T14:18:16Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5s2q72",
              "body": "bors merge",
              "createdAt": "2023-11-25T10:05:01Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5s2uqz",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6988504706/job/19016142886)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6988504706/job/19016142784)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6988504706/job/19016142716)",
              "createdAt": "2023-11-25T11:28:25Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a34c9a5ca0d4b3c1a058905e7768cde526a79309",
                "additions": 10,
                "deletions": 5,
                "committedDate": "2023-11-06T09:07:36Z",
                "author": {
                  "name": "Sebastian Ullrich",
                  "email": "sebasti@nullri.ch"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f3c57c8978f7f729d23e4de5f3905ea2d2c8b1fd",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-11-06T09:07:36Z",
                "author": {
                  "name": "Sebastian Ullrich",
                  "email": "sebasti@nullri.ch"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a241da4c548cf33cf49ed8b072c77e3ea898fde6",
                "additions": 4,
                "deletions": 16,
                "committedDate": "2023-11-06T11:39:50Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott@tqft.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH3DMA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981928762/job/19000050480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH4bWQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981936219/job/19000073049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH3Bkw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981928746/job/19000050067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH3B8A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981928758/job/19000050160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH4bQA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981936218/job/19000073024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH3BtQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981928762/job/19000050101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH4cqg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981936219/job/19000073386"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "df6512d25d37c0a58381b98443aa27dc068cc050",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-11-24T14:30:09Z",
                "author": {
                  "name": "Floris van Doorn",
                  "email": "fpvdoorn@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH-VBw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981969829/job/19000169735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH-VGw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981969825/job/19000169755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH9GuA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981962859/job/19000149688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH9G2g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981962850/job/19000149722"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH-WQA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981969829/job/19000170048"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH9Hvg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981962850/job/19000149950"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-05T11:20:53Z",
        "deletions": 6,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Mathport/Rename.lean",
              "additions": 11,
              "deletions": 5
            },
            {
              "path": "scripts/bench/temci-config.run.yml",
              "additions": 3,
              "deletions": 1
            }
          ]
        },
        "headRefName": "lazy-renamemap",
        "headRefOid": "df6512d25d37c0a58381b98443aa27dc068cc050",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "Kha"
          }
        },
        "headRepositoryOwner": {
          "login": "Kha"
        },
        "id": "PR_kwDOFcwZ1c5enZcq",
        "isCrossRepository": true,
        "isDraft": false,
        "labels": {
          "nodes": []
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5oMQka",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-11-24T14:30:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mM759",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-11-06T09:45:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mm7vZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-09T00:14:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMPaV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:27:36Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8199,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mKXZD",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-11-05T14:08:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mKuD9",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-05T23:05:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mM5oT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-11-06T09:41:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mM759",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-11-06T09:45:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mM80u",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Kha"
              },
              "submittedAt": "2023-11-06T09:47:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5meLZc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T02:04:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mf5vB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-08T08:15:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mgAsa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Kha"
              },
              "submittedAt": "2023-11-08T08:30:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mgGqh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Kha"
              },
              "submittedAt": "2023-11-08T08:42:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mgJtA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T08:48:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mhTlx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T10:36:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlePa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-11-08T19:16:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mmzr6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-08T23:35:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mm29W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T23:52:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mm41f",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-09T00:02:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mm6lp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-09T00:11:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mm7vZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-09T00:14:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMO_u",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:26:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMPaV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:27:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMQka",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-11-24T14:30:49Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SbzES",
                    "body": "How costly is this, compared to keeping an array for the (unprocessed) entries in the current file? Intuitively, I would expect `Thunk.map` to need to do more work, but it does have the advantage that it can be mutated in place, which doesn't work for a pure data structure.",
                    "createdAt": "2023-11-06T09:41:37Z",
                    "author": {
                      "login": "digama0"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sb0j9",
                    "body": "On second thought, we need a list-like data structure anyway, since this is environment state which needs to be persistent, so a stack of closures is as good as any.",
                    "createdAt": "2023-11-06T09:45:47Z",
                    "author": {
                      "login": "digama0"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sb1K4",
                    "body": "`Thunk.map` is like, two allocations? Nothing worth counting I would hope if you `#align`s aren't in the millions.",
                    "createdAt": "2023-11-06T09:47:40Z",
                    "author": {
                      "login": "Kha"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Smqkt",
                    "body": "Isn't it queried every time that `#align` is used, to check for duplicates?",
                    "createdAt": "2023-11-08T02:04:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sn02L",
                    "body": "How about we just rip out the duplication check at this point? It's not like we are adding new #align statements.",
                    "createdAt": "2023-11-08T08:15:35Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sn5bL",
                    "body": "Oof, not sure how I missed this. So this PR would \"merely\" reduce the latency up to the first `#align`, if any (which is true for most of Mathlib). I can think of solutions to remedy that but I'm not sure it's worth the complexity.",
                    "createdAt": "2023-11-08T08:30:47Z",
                    "author": {
                      "login": "Kha"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sn9S4",
                    "body": "@semorrison Ah, GitHub did not show me your message before. I'll leave that decision to you guys :) .",
                    "createdAt": "2023-11-08T08:42:31Z",
                    "author": {
                      "login": "Kha"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sn_P6",
                    "body": "I don't think removing the duplication check altogether is a good idea. We could consider only doing it if the `CI` variable is set, or as a linter pass?",
                    "createdAt": "2023-11-08T08:48:50Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sov3x",
                    "body": "Given that:\r\n\r\n> I made #8214 to compare with the result of just entirely removing `#align`. This PR picks up most of the gain already!\r\n\r\nIt sounds like we could just merge this PR (almost) as is anyway even though it's not as obvious *why* we get a performance improvement. If we do that, let's adjust this comment to not be misleading.",
                    "createdAt": "2023-11-08T10:36:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrV0Z",
                    "body": "Does this PR actually speed up the build time? What is the `open Mathlib` Benchmark testing?\r\n\r\nThis PR could be significant for downstream projects (that don't have any `#align` themselves).",
                    "createdAt": "2023-11-08T19:16:45Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SsLVn",
                    "body": "> I don't think removing the duplication check altogether is a good idea. We could consider only doing it if the `CI` variable is set, or as a linter pass?\r\n\r\nWhat purpose is the duplication check serving? If we assume that no new `#align`s are being added, does it do anything?",
                    "createdAt": "2023-11-08T23:35:23Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SsNll",
                    "body": "It prevents people blindly copying align statements, or making an accidental find and replace that touches the LHS of an align. I've had it catch mistakes multiple times.\r\n\r\nAlso, while outofsync is non-empty, new aligns are still being added.",
                    "createdAt": "2023-11-08T23:52:02Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SsO7i",
                    "body": "Okay.\r\n\r\nI remain pretty skeptical that those things are worth on the order of `0.1s` of waiting time every time anyone opens a file in Mathlib.",
                    "createdAt": "2023-11-09T00:02:07Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SsQKC",
                    "body": "Where is that 0.1s estimate coming from? As far as I can tell neither this PR nor #8214 include a benchmark of the change you're proposing.",
                    "createdAt": "2023-11-09T00:11:23Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SsQlP",
                    "body": "My understanding is that the benchmark improvements seen above are real, but for now just deferred until the first #align. If the #align statements do not actually trigger this work (because they are not checking for duplicates and hence not hitting the lazy work set up in this PR), then that benchmark improvement turns into a real improvement for users.",
                    "createdAt": "2023-11-09T00:14:41Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtZii",
                    "body": "My understanding is that the PR is already an improvement for any user who runs `import Mathlib` and never writes `#align` (which is most non-mathlib users)",
                    "createdAt": "2023-11-24T14:27:36Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtZQ1",
                    "body": "I'm happy to merge this as is if we update this comment to \r\n```suggestion\r\n-- wrap state in `Thunk` as downstream projects rarely actually query it; it only\r\n-- gets queried when new `#align`s are added.\r\n```",
                    "createdAt": "2023-11-24T14:26:28Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtaTg",
                    "body": "That sounds reasonable. And we can decide whether to eliminate the duplication check in a future PR.",
                    "createdAt": "2023-11-24T14:30:49Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwOTEyNg==",
              "login": "Kha"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEbH-VBw",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981969829/job/19000169735"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEbH-VGw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981969825/job/19000169755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEbH9GuA",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981962859/job/19000149688"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEbH9G2g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981962850/job/19000149722"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEbH-WQA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981969829/job/19000170048"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEbH9Hvg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981962850/job/19000149950"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - perf: process imported `#align`s lazily",
        "updatedAt": "2023-11-25T11:28:26Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8199",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c514feEzwAAAAKHlziz",
              "createdAt": "2023-11-05T11:20:57Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg2ODU4OA==",
                "login": "digama0"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c514feEzwAAAAKHlzjj",
              "createdAt": "2023-11-05T11:20:59Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQ3Nzk1Ng==",
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6dEZ",
              "createdAt": "2023-11-05T11:21:07Z",
              "body": "!bench",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6dM7",
              "createdAt": "2023-11-05T11:23:55Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/2cfb1756-6e87-4098-af2d-7a8476a69081) for commit 9ec581500daa35d209b3e96a6af99f291b554f8a.\nThe entire run failed.\nFound no significant differences.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c514feEzwAAAAKHl4cc",
              "createdAt": "2023-11-05T11:29:58Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6dj4",
              "createdAt": "2023-11-05T11:30:15Z",
              "body": "!bench",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6e4T",
              "createdAt": "2023-11-05T11:55:35Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/f4dd4ce4-190f-425c-82b6-1d6028c7e514) for commit c20ba0f3145236e55b2c1d7a99257a2e32d4dc53.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1596e43b-f5bb-453c-8051-ec9939d5334f/to/f4dd4ce4-190f-425c-82b6-1d6028c7e514) against commit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ open Mathlib   instructions   -21.7%\n+ open Mathlib   wall-clock     -11.2%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6kSu",
              "createdAt": "2023-11-05T13:28:25Z",
              "body": "!bench",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6lx4",
              "createdAt": "2023-11-05T13:51:48Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/6b48c1ba-0dbc-4a0d-9d1d-1cc1a80608be) for commit 494b8cb0c4e8a35b446edf0140740a5014531775.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1596e43b-f5bb-453c-8051-ec9939d5334f/to/6b48c1ba-0dbc-4a0d-9d1d-1cc1a80608be) against commit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ open Mathlib   instructions   -20.6%\n+ open Mathlib   wall-clock     -12.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mKXZD",
              "createdAt": "2023-11-05T14:08:50Z",
              "body": "",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c514feEzwAAAAKHnFt4",
              "createdAt": "2023-11-05T14:24:14Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6nzf",
              "createdAt": "2023-11-05T14:24:23Z",
              "body": "!bench",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6pVh",
              "createdAt": "2023-11-05T14:49:52Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/1e3c52bd-aa44-451b-9a64-383e7f06281a) for commit 4d3e6d3ba1a57432b1731f999fac664d195f3b33.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1596e43b-f5bb-453c-8051-ec9939d5334f/to/1e3c52bd-aa44-451b-9a64-383e7f06281a) against commit df32aa2ebe0f1ef9bce7831b1bcc0723f07a4724:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ build          aesop           -5.1%\n+ open Mathlib   instructions   -20.9%\n+ open Mathlib   wall-clock     -15.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6q7M",
              "createdAt": "2023-11-05T15:14:18Z",
              "body": "Not sure why no stddev is showing up for the benchmark. Maybe both commits need data over multiple runs :shrug: .",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6rkf",
              "createdAt": "2023-11-05T15:25:13Z",
              "body": "I've never seen stddev in mathlib benchmarks, I thought it was just broken.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q6tdQ",
              "createdAt": "2023-11-05T15:56:48Z",
              "body": "All *other* benchmarks are intentionally limited to a single run :) . Let's see if it turns up for any subsequent commit.",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PNcta",
              "createdAt": "2023-11-05T21:47:52Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5eoIsA",
                "title": "experiment: remove #align and benchmark",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8214"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mKuD9",
              "createdAt": "2023-11-05T23:05:37Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q7F3U",
              "createdAt": "2023-11-05T23:06:05Z",
              "body": "bors d+\r\n\r\n(Doesn't have any actual effect, now that bors is dead. Long live the merge queue.)",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q7HLB",
              "createdAt": "2023-11-05T23:26:25Z",
              "body": "So do I still reply with \"bors r+\"? :)",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "AutoMergeEnabledEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q7rnf",
              "createdAt": "2023-11-06T03:29:32Z",
              "body": "I made #8214 to compare with the result of just entirely removing `#align`. This PR picks up most of the gain already!",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q8WM7",
              "createdAt": "2023-11-06T07:11:54Z",
              "body": "> (Doesn't have any actual effect, now that bors is dead. Long live the merge queue.)\r\n\r\nUnfortunately the merge queue also did not live long. The battle for succession is still underway.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c514feEzwAAAAKH4xG1",
              "createdAt": "2023-11-06T09:05:58Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a34c9a5ca0d4b3c1a058905e7768cde526a79309"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f3c57c8978f7f729d23e4de5f3905ea2d2c8b1fd"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c514feEzwAAAAKH410Q",
              "createdAt": "2023-11-06T09:07:38Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q8-BA",
              "createdAt": "2023-11-06T09:08:01Z",
              "body": "I just realized that I was overcomplicating things, we can just make the whole state lazy if we rarely ever query it at all.",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q9Ksc",
              "createdAt": "2023-11-06T09:37:36Z",
              "body": "!bench",
              "author": {
                "login": "Kha"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mM5oT",
              "createdAt": "2023-11-06T09:41:37Z",
              "body": "",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q9Wth",
              "createdAt": "2023-11-06T10:01:45Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/06ea514d-081e-4f25-ad1b-c6eef88993c5) for commit f3c57c8978f7f729d23e4de5f3905ea2d2c8b1fd.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/957be14a-1565-4d22-abb8-98edc0b0bea6/to/06ea514d-081e-4f25-ad1b-c6eef88993c5) against commit 81dd376a02781030ead59ee35ca5334a7fccc527:\n```diff\n  Benchmark      Metric         Change\n  ====================================\n+ open Mathlib   instructions   -20.3%\n+ open Mathlib   wall-clock     -12.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a241da4c548cf33cf49ed8b072c77e3ea898fde6"
              }
            },
            {
              "__typename": "AutoMergeDisabledEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5meLZc",
              "createdAt": "2023-11-08T02:04:38Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOB7kabM5PRfbp",
              "createdAt": "2023-11-08T16:42:28Z",
              "source": {
                "id": "PR_kwDOB7kabM5e10v8",
                "title": "Mark environments not freed before process exit persistent eagerly",
                "url": "https://github.com/leanprover/lean4/pull/2841"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5s0pNV",
              "createdAt": "2023-11-24T14:18:16Z",
              "body": "Can we get this merged? Is this waiting on anything?",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oMO_u",
              "createdAt": "2023-11-24T14:26:28Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "df6512d25d37c0a58381b98443aa27dc068cc050"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5s2q72",
              "createdAt": "2023-11-25T10:05:01Z",
              "body": "bors merge",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5s2uqz",
              "createdAt": "2023-11-25T11:28:25Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6988504706/job/19016142886)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6988504706/job/19016142784)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6988504706/job/19016142716)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c514feEzwAAAAKTQs8L",
              "createdAt": "2023-11-25T11:28:26Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
