{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 10,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ADedecker"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-08-10T11:36:13Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jtF0h",
              "body": "For many lemmas in measure theory, we have a version for measurable and another version for ae/null measurable, with the same name as the measurable one suffixed by `₀`. The reason is that measurable sets are much more common than null-measurable sets and we want to avoid the conversion. See for example [MeasureTheory.Measure.restrict_apply₀](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.restrict_apply%E2%82%80) . Could you do that here? That is, don't replace the measurable set version, but add a new one for null-measurable sets?\r\nAlso, could you add a null-measurable version of `aemeasurable_indicator_iff` as well?",
              "createdAt": "2023-08-10T08:11:39Z",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jtctb",
              "body": "Oh I didn't know about it, that makes sense.",
              "createdAt": "2023-08-10T09:16:10Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jtwtv",
              "body": "Thanks!\r\nbors r+",
              "createdAt": "2023-08-10T10:11:18Z",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5juMQV",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5819785630/job/15778871271)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5819785630/job/15778871733)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5819785630/job/15778872010)",
              "createdAt": "2023-08-10T11:36:10Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "599f2f88194bdb6ad3c78cd7314219eafdfcd09a",
                "additions": 6,
                "deletions": 4,
                "committedDate": "2023-08-08T12:47:30Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "814d8804b9799c9655175229e19cf19e721d8d6b",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-08-08T13:21:44Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "670ef070a18f7d456dbdc6ef6f50a060756d5093",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-08-08T13:35:41Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "79cd8f1c9a704c7df047a6cf42a787dceb6e6bc4",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-08T14:44:53Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5ba471b0da8cb095e916c96e97ae4161e1191531",
                "additions": 16,
                "deletions": 9,
                "committedDate": "2023-08-10T09:33:27Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-08T12:48:30Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/MeasureTheory/Measure/AEMeasurable.lean",
              "additions": 10,
              "deletions": 0
            }
          ]
        },
        "headRefName": "AD_aemeasurable_indicator",
        "headRefOid": "5ba471b0da8cb095e916c96e97ae4161e1191531",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5XbicM",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dnA_I",
              "body": "This meaningful generalization looks like a clear improvement, and it is implemented efficiently with just a few lines of changes.\r\n\r\n(Full disclosure: my own PR #6225 depends on this.)",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-09T20:35:20Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6445,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dnA_I",
              "body": "This meaningful generalization looks like a clear improvement, and it is implemented efficiently with just a few lines of changes.\r\n\r\n(Full disclosure: my own PR #6225 depends on this.)",
              "state": "COMMENTED",
              "author": {
                "login": "kkytola"
              },
              "submittedAt": "2023-08-09T20:35:20Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjQwOTQ3MzI=",
              "login": "RemyDegenne"
            },
            {
              "id": "MDQ6VXNlcjM5NTI4MTAy",
              "login": "kkytola"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: generalize `AEMeasurable.indicator` to `NullMeasurableSet`",
        "updatedAt": "2023-08-10T11:36:20Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6445",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "599f2f88194bdb6ad3c78cd7314219eafdfcd09a"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJWJDU2",
              "createdAt": "2023-08-08T12:48:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJWJDU9",
              "createdAt": "2023-08-08T12:48:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJWJDVF",
              "createdAt": "2023-08-08T12:48:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
                "name": "t-measure-probability"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N35DY",
              "createdAt": "2023-08-08T13:13:27Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Wsph9",
                "title": "[Merged by Bors] - feat: Results about convergence of measures of sets assuming convergence of indicator functions.",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6225"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "814d8804b9799c9655175229e19cf19e721d8d6b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "670ef070a18f7d456dbdc6ef6f50a060756d5093"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tvzpfzwAAAAJWMShu",
              "createdAt": "2023-08-08T13:59:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJWMw7Z",
              "createdAt": "2023-08-08T14:10:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "79cd8f1c9a704c7df047a6cf42a787dceb6e6bc4"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dnA_I",
              "createdAt": "2023-08-09T20:35:20Z",
              "body": "This meaningful generalization looks like a clear improvement, and it is implemented efficiently with just a few lines of changes.\r\n\r\n(Full disclosure: my own PR #6225 depends on this.)",
              "author": {
                "login": "kkytola"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jtF0h",
              "createdAt": "2023-08-10T08:11:39Z",
              "body": "For many lemmas in measure theory, we have a version for measurable and another version for ae/null measurable, with the same name as the measurable one suffixed by `₀`. The reason is that measurable sets are much more common than null-measurable sets and we want to avoid the conversion. See for example [MeasureTheory.Measure.restrict_apply₀](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.restrict_apply%E2%82%80) . Could you do that here? That is, don't replace the measurable set version, but add a new one for null-measurable sets?\r\nAlso, could you add a null-measurable version of `aemeasurable_indicator_iff` as well?",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tvzpfzwAAAAJXZHKS",
              "createdAt": "2023-08-10T08:11:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tvzpfzwAAAAJXZHKV",
              "createdAt": "2023-08-10T08:11:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJXZHKd",
              "createdAt": "2023-08-10T08:11:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jtctb",
              "createdAt": "2023-08-10T09:16:10Z",
              "body": "Oh I didn't know about it, that makes sense.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5ba471b0da8cb095e916c96e97ae4161e1191531"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tvzpfzwAAAAJXcYZ7",
              "createdAt": "2023-08-10T09:33:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJXcYaF",
              "createdAt": "2023-08-10T09:33:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jtwtv",
              "createdAt": "2023-08-10T10:11:18Z",
              "body": "Thanks!\r\nbors r+",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tvzpfzwAAAAJXeYdL",
              "createdAt": "2023-08-10T10:11:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tvzpfzwAAAAJXeYgM",
              "createdAt": "2023-08-10T10:11:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5juMQV",
              "createdAt": "2023-08-10T11:36:10Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5819785630/job/15778871271)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5819785630/job/15778871733)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5819785630/job/15778872010)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5tvzpfzwAAAAJXhdB7",
              "createdAt": "2023-08-10T11:36:13Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5tvzpfzwAAAAJXhdSD",
              "createdAt": "2023-08-10T11:36:20Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
