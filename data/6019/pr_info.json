{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 92,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The major change here is adapting to `simp` failing if it makes no progress.\r\nThe vast majority of the redundant `simp`s found due to this change were extracted to #6632.\r\n\r\n---\r\n\r\n- [x] depends on https://github.com/leanprover/lean4/pull/2334\r\n- [x] depends on https://github.com/leanprover/lean4/pull/2336\r\n- [x] depends on https://github.com/leanprover/std4/pull/188\r\n- [x] depends on https://github.com/leanprover/std4/pull/190\r\n- [x] depends on https://github.com/JLimperg/aesop/pull/64\r\n- [x] depends on #6622\r\n- [x] depends on #6188\r\n- [x] depends on #5992 \r\n",
        "changedFiles": 30,
        "closed": true,
        "closedAt": "2023-08-18T12:22:53Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kWIpW",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-18T08:02:07Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kW_wJ",
              "body": "bors merge",
              "createdAt": "2023-08-18T11:03:58Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kXV6l",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5901886927/job/16008885161)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5901886927/job/16008884644)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5901886927/job/16008884810)",
              "createdAt": "2023-08-18T12:22:52Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6b5c3f9cd7f262b513fd6d40fe6bd3a6a34e7ec1",
                "additions": 89,
                "deletions": 62,
                "committedDate": "2023-08-18T01:36:23Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "106bc0cb3660bdeb3eed9046956afa0309a03edc",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-18T10:04:06Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a162f2342a1ac7721747fa96372aa4d3f92563d6",
                "additions": 7,
                "deletions": 5,
                "committedDate": "2023-08-18T10:59:09Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "447f1a77b8f801d9a2fd4bd9c927f21120048a4d",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-18T10:59:27Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-20T09:03:05Z",
        "deletions": 64,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Finprod.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/CubicDiscriminant.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Star/CHSH.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplexCategory.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Convex/Between.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Side.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finsupp/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Multiset/Functor.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Num/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/UnionFind.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Vector/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/RatFunc.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Init/Algebra/Order.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Equiv/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Equiv/LocalEquiv.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Liouville/LiouvilleWith.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/DeriveTraversable.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Group.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Lift.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Tactic/NoncommRing.lean",
              "additions": 15,
              "deletions": 13
            },
            {
              "path": "Mathlib/Tactic/NormCast/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/SimpRw.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/SplitIfs.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Infsep.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "lake-manifest.json",
              "additions": 18,
              "deletions": 8
            },
            {
              "path": "lean-toolchain",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/NoncommRing.lean",
              "additions": 6,
              "deletions": 1
            },
            {
              "path": "test/says.lean",
              "additions": 2,
              "deletions": 3
            }
          ]
        },
        "headRefName": "simp_failIfUnchanged",
        "headRefOid": "447f1a77b8f801d9a2fd4bd9c927f21120048a4d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5V-enN",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ebgsW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-18T10:04:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebTG6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-08-18T09:34:41Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6019,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eUKRE",
              "body": "Looked through all the files, basically everything is just removing superfluous `simp`-calls, except one deletion marked below.\r\n\r\nIn my optinion `any_goals simp` would be better than `_ <;> (try simp)` or `all_goals (try simp)` and it's a bit a shame that `<;> simp` does not work like `any_goals simp`.\r\n\r\nOne thing I did not check is if this PR really modifies all tactics that rely on `simp` making no progress.",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-08-17T11:25:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eUms_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-17T12:01:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eUm0y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-17T12:01:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eUoL3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-17T12:04:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eUpah",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-17T12:08:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eU-tW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-08-17T12:54:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5easNt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-18T07:56:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eas0q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-18T07:58:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eauL6",
              "body": "bors d+",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-18T08:02:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebL1P",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-08-18T09:19:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebRpm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-08-18T09:31:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebTG6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2023-08-18T09:34:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebgcb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-18T10:04:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebgsW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-18T10:04:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebzo2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-18T10:54:27Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT2QK",
                    "body": "Does that mean `says` needs modification, too? If so, is there a PR for it?",
                    "createdAt": "2023-08-17T10:48:45Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUHnE",
                    "body": "I don't think so. It's just that it doesn't make sense to call `says` with a failing tactic.",
                    "createdAt": "2023-08-17T12:01:12Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYUU9",
                    "body": "you're absolutely right, I haven't used `says` enough yet!",
                    "createdAt": "2023-08-18T09:19:28Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT3sV",
                    "body": "This seems to be the only change unrelated to `simp`. Did this move? Can you add the correct `#align` or `#noalign` statement?",
                    "createdAt": "2023-08-17T10:55:04Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUHr_",
                    "body": "Sorry, my fault, borked the merge.",
                    "createdAt": "2023-08-17T12:01:30Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT5O7",
                    "body": "**Edit** This works:\r\n\r\n```\r\nsimp_rw [lineMap_same _]\r\n```\r\nstill puzzled where this comes from though...",
                    "createdAt": "2023-08-17T11:01:34Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT6Gp",
                    "body": "~I can't observe a similar behaviour here though... This is a bit worrying indeed.~",
                    "createdAt": "2023-08-17T11:05:02Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUWxG",
                    "body": "```\r\nsimp_rw [lineMap_apply _, vadd_vsub_assoc _, vsub_vadd_eq_vsub_sub _, ← neg_vsub_eq_vsub_rev z x,\r\n  vsub_self _, zero_sub, ← neg_one_smul R (z -ᵥ x), ← add_smul, smul_neg, ← neg_smul, smul_smul]\r\n```\r\nthis also works by adding a single `_` after each lemma where `simp_rw` complains.",
                    "createdAt": "2023-08-17T12:54:32Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT6ZG",
                    "body": "changing back before the final merge",
                    "createdAt": "2023-08-17T11:06:15Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT-HV",
                    "body": "Would that be a case of `any_goals push_cast`?",
                    "createdAt": "2023-08-17T11:21:32Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT-ML",
                    "body": "`any_goals simp`",
                    "createdAt": "2023-08-17T11:21:52Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUIkB",
                    "body": "Thanks.",
                    "createdAt": "2023-08-17T12:04:58Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NUJUe",
                    "body": "Thanks.",
                    "createdAt": "2023-08-17T12:08:03Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NX_3q",
                    "body": "Can you confirm this is still needed? This PR has had a lot of churn since you started!",
                    "createdAt": "2023-08-18T07:56:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYXrK",
                    "body": "In a local test neither of these two lines are needed anymore (also not the following line). `count_heartbeats in` reports\r\n> Used 144125 heartbeats, which is less than the current maximum of 200000.",
                    "createdAt": "2023-08-18T09:31:34Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYYeB",
                    "body": "Actually, looks like we can remove all 4 `set_option`s regarding heartbeats in this file now :tada: ",
                    "createdAt": "2023-08-18T09:34:41Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYgwT",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-08-18T10:04:02Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYg6E",
                    "body": "Let's just remove the new one in this PR; I suspect the old ones are already unnecessary on master.",
                    "createdAt": "2023-08-18T10:04:44Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYAPo",
                    "body": "Can you add an explanation of why `failIfUnchanged` is helpful here? Should `whisker_simps` take it's own `config` argument to allow the caller to customize this?",
                    "createdAt": "2023-08-18T07:58:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYrXN",
                    "body": "It hadn't even occurred to me this counted as a user facing tactic. Mostly it is just used as a component in `coherence`. But sure, I'll give it a `simp` configuration.",
                    "createdAt": "2023-08-18T10:54:27Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: bump to nightly-2023-08-17",
        "updatedAt": "2023-08-18T12:22:57Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6019",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJMaIG0",
              "createdAt": "2023-07-20T09:03:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJMaIG4",
              "createdAt": "2023-07-20T09:03:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJMaIG_",
              "createdAt": "2023-07-20T09:03:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAsJdBQ",
                "name": "blocked-by-core-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJMaIHH",
              "createdAt": "2023-07-20T09:03:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOB7kabM5Nmb2u",
              "createdAt": "2023-07-20T09:03:42Z",
              "source": {
                "id": "PR_kwDOB7kabM5V3sK0",
                "title": "feat: turning on failIfUnchanged by default in simp",
                "url": "https://github.com/leanprover/lean4/pull/2336"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJMayBa",
              "createdAt": "2023-07-20T09:19:07Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJQOook",
              "createdAt": "2023-07-27T13:34:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJSaAj-",
              "createdAt": "2023-08-01T06:48:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJTDFj_",
              "createdAt": "2023-08-02T04:05:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJTKwgr",
              "createdAt": "2023-08-02T08:40:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJT6Hu3",
              "createdAt": "2023-08-03T11:05:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJU8mqG",
              "createdAt": "2023-08-05T11:48:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOB7kabM5N1oIQ",
              "createdAt": "2023-08-06T03:32:30Z",
              "source": {
                "id": "PR_kwDOB7kabM5V2mGh",
                "title": "feat: add failIfUnchanged flag to simp",
                "url": "https://github.com/leanprover/lean4/pull/2334"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N1oJS",
              "createdAt": "2023-08-06T03:36:36Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Pq1Xv",
                "title": "feat: implement simp_rw fails if unchanged",
                "url": "https://github.com/leanprover-community/mathlib4/pull/3782"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJVDSJW",
              "createdAt": "2023-08-06T08:32:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJVUF0C",
              "createdAt": "2023-08-07T08:48:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJWEM9R",
              "createdAt": "2023-08-08T10:34:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJWGSd5",
              "createdAt": "2023-08-08T11:34:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJWhIDr",
              "createdAt": "2023-08-09T01:32:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJXnont",
              "createdAt": "2023-08-10T14:05:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJX6s4H",
              "createdAt": "2023-08-11T00:18:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJYDMj-",
              "createdAt": "2023-08-11T08:26:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJbEDPh",
              "createdAt": "2023-08-17T10:22:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OAHf_",
              "createdAt": "2023-08-17T10:24:42Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YClYi",
                "title": "chore: bump to nightly-2023-08-16",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6610"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJbGHIG",
              "createdAt": "2023-08-17T11:23:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eUKRE",
              "createdAt": "2023-08-17T10:45:01Z",
              "body": "Looked through all the files, basically everything is just removing superfluous `simp`-calls, except one deletion marked below.\r\n\r\nIn my optinion `any_goals simp` would be better than `_ <;> (try simp)` or `all_goals (try simp)` and it's a bit a shame that `<;> simp` does not work like `any_goals simp`.\r\n\r\nOne thing I did not check is if this PR really modifies all tactics that rely on `simp` making no progress.",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJbHv8B",
              "createdAt": "2023-08-17T12:09:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OAQd8",
              "createdAt": "2023-08-17T13:06:00Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YJ3fa",
                "title": "[Merged by Bors] - chore: remove unused simps",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6632"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJbePyP",
              "createdAt": "2023-08-17T23:09:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAsJdBQ",
                "name": "blocked-by-core-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6b5c3f9cd7f262b513fd6d40fe6bd3a6a34e7ec1"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5sGAUbzwAAAAJbgdmZ",
              "createdAt": "2023-08-18T01:37:46Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5easNt",
              "createdAt": "2023-08-18T07:56:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eas0q",
              "createdAt": "2023-08-18T07:58:17Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eauL6",
              "createdAt": "2023-08-18T08:02:06Z",
              "body": "bors d+",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kWIpW",
              "createdAt": "2023-08-18T08:02:07Z",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJboO4p",
              "createdAt": "2023-08-18T08:02:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sGAUbzwAAAAJboO6_",
              "createdAt": "2023-08-18T08:02:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "106bc0cb3660bdeb3eed9046956afa0309a03edc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a162f2342a1ac7721747fa96372aa4d3f92563d6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "447f1a77b8f801d9a2fd4bd9c927f21120048a4d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kW_wJ",
              "createdAt": "2023-08-18T11:03:58Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sGAUbzwAAAAJbuhpr",
              "createdAt": "2023-08-18T11:04:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kXV6l",
              "createdAt": "2023-08-18T12:22:52Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5901886927/job/16008885161)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5901886927/job/16008884644)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5901886927/job/16008884810)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sGAUbzwAAAAJbw6zm",
              "createdAt": "2023-08-18T12:22:53Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sGAUbzwAAAAJbw67Q",
              "createdAt": "2023-08-18T12:22:57Z"
            }
          ]
        }
      }
    }
  }
}
