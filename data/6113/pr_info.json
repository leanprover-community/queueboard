{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "As requested on [zulip](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/.E2.9C.94.20tsum.20and.20HasSum/near/378162082).\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-07-25T09:31:09Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5iQ96B",
              "body": "What would stop `exact?` just matching and returning on something like `IsEmpty.Elim` right now for everything?",
              "createdAt": "2023-07-24T21:08:28Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iRVgv",
              "body": "I'm not sure that's much different to how it could return `Iff.mp ?_ ?_` for everything right now",
              "createdAt": "2023-07-24T22:29:52Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iRWBE",
              "body": "I'm worried about exact not apply, as far as I know that doesn't return iff.mp does it?",
              "createdAt": "2023-07-24T22:32:22Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iRedX",
              "body": "Ah, I see your point now. Yes, I'd expect this to fail in `exact?` but succeed in `apply?`",
              "createdAt": "2023-07-24T23:17:28Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iSMgz",
              "body": "I'm confused, why would there be a problem in `exact?`? A lemma like `IsEmpty.Elim` will now successfully apply (so `apply?` will list it) but then the `IsEmpty` typeclass becomes a sub-goal, which, if it can't be discharged by `solve_by_elim`, will prevent `exact?` from reporting it.\r\n\r\n",
              "createdAt": "2023-07-25T02:50:11Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iTf7r",
              "body": "Ok great, I think the title of the PR \"allow typeclass failures in exact?\" is the only thing that confused me, lgtm then",
              "createdAt": "2023-07-25T07:30:12Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iTgG1",
              "body": "maintainer merge",
              "createdAt": "2023-07-25T07:30:31Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iTgNm",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by alexjbest.",
              "createdAt": "2023-07-25T07:30:41Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iTka0",
              "body": "bors r+",
              "createdAt": "2023-07-25T07:40:01Z",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iUNn_",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5654279742/job/15317036968)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5654279742/job/15317036715)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5654279742/job/15317037197)",
              "createdAt": "2023-07-25T09:31:08Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "27dd12b8a77cdefa8ee5af6fae47ae2f2bea9ef5",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-24T20:41:09Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-24T20:42:02Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/LibrarySearch.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "exact_instances",
        "headRefOid": "27dd12b8a77cdefa8ee5af6fae47ae2f2bea9ef5",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WRMpd",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
              "color": "acff3f",
              "name": "easy"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cDU8f",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-24T22:30:08Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6113,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cDU8f",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-24T22:30:08Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQwOTQ3MzI=",
              "login": "RemyDegenne"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix: allow typeclass failures in exact?",
        "updatedAt": "2023-07-25T09:31:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6113",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "27dd12b8a77cdefa8ee5af6fae47ae2f2bea9ef5"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sbXx0zwAAAAJOWu-4",
              "createdAt": "2023-07-24T20:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sbXx0zwAAAAJOWu-6",
              "createdAt": "2023-07-24T20:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sbXx0zwAAAAJOWu--",
              "createdAt": "2023-07-24T20:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sbXx0zwAAAAJOWu_B",
              "createdAt": "2023-07-24T20:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iQ96B",
              "createdAt": "2023-07-24T21:08:28Z",
              "body": "What would stop `exact?` just matching and returning on something like `IsEmpty.Elim` right now for everything?",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sbXx0zwAAAAJOZPwe",
              "createdAt": "2023-07-24T22:07:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iRVgv",
              "createdAt": "2023-07-24T22:29:52Z",
              "body": "I'm not sure that's much different to how it could return `Iff.mp ?_ ?_` for everything right now",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cDU8f",
              "createdAt": "2023-07-24T22:30:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iRWBE",
              "createdAt": "2023-07-24T22:32:22Z",
              "body": "I'm worried about exact not apply, as far as I know that doesn't return iff.mp does it?",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iRedX",
              "createdAt": "2023-07-24T23:17:28Z",
              "body": "Ah, I see your point now. Yes, I'd expect this to fail in `exact?` but succeed in `apply?`",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iSMgz",
              "createdAt": "2023-07-25T02:50:11Z",
              "body": "I'm confused, why would there be a problem in `exact?`? A lemma like `IsEmpty.Elim` will now successfully apply (so `apply?` will list it) but then the `IsEmpty` typeclass becomes a sub-goal, which, if it can't be discharged by `solve_by_elim`, will prevent `exact?` from reporting it.\r\n\r\n",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iTf7r",
              "createdAt": "2023-07-25T07:30:12Z",
              "body": "Ok great, I think the title of the PR \"allow typeclass failures in exact?\" is the only thing that confused me, lgtm then",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iTgG1",
              "createdAt": "2023-07-25T07:30:31Z",
              "body": "maintainer merge",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iTgNm",
              "createdAt": "2023-07-25T07:30:41Z",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by alexjbest.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iTka0",
              "createdAt": "2023-07-25T07:40:01Z",
              "body": "bors r+",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sbXx0zwAAAAJOkykq",
              "createdAt": "2023-07-25T07:40:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sbXx0zwAAAAJOkyma",
              "createdAt": "2023-07-25T07:40:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iUNn_",
              "createdAt": "2023-07-25T09:31:08Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5654279742/job/15317036968)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5654279742/job/15317036715)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5654279742/job/15317037197)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sbXx0zwAAAAJOpCR_",
              "createdAt": "2023-07-25T09:31:09Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sbXx0zwAAAAJOpCaz",
              "createdAt": "2023-07-25T09:31:13Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
