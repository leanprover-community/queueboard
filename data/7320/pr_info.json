{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 44,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "author": {
          "login": "mo271"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Co-authored-by: Michael Stoll <Michael.Stoll@uni-bayreuth.de>\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-09-24T12:23:07Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5nPdtR",
              "body": "Thanks for the review, @MichaelStollBayreuth. Please see if this way of having the FactorsThrough structure makes more sense...",
              "createdAt": "2023-09-22T22:52:38Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nRCaZ",
              "body": "I restarted the \"build mathlib\" job; the previous one seemed to have internet connection problems at \"building counterexamples\".",
              "createdAt": "2023-09-24T08:28:15Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nREKR",
              "body": "There is a linter issue, but LGTM otherwise, thanks!\r\n\r\nbors d+",
              "createdAt": "2023-09-24T09:09:48Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nREKW",
              "body": ":v: mo271 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-24T09:09:49Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nREjX",
              "body": "> There is a linter issue, but LGTM otherwise, thanks!\r\n\r\nSorry, my mistake. Just replace the two `def`s by `lemma`.\r\n",
              "createdAt": "2023-09-24T09:17:59Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nRLLS",
              "body": "bors r+",
              "createdAt": "2023-09-24T12:02:31Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nRMBh",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6289889940/job/17076821908)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6289889940/job/17076822175)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6289889940/job/17076821769)",
              "createdAt": "2023-09-24T12:23:06Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "da57d289d786987c89a5363c8d4a806241924e08",
                "additions": 47,
                "deletions": 0,
                "committedDate": "2023-09-22T07:09:24Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3b7dda9ee8943b5de28196abe78132f976b9619e",
                "additions": 13,
                "deletions": 11,
                "committedDate": "2023-09-22T07:28:09Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "161c3873f2ade414a0c5766e7427de15d62feff8",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-22T07:32:59Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "afef0063f7e986b7c4c004cf2278e7c58cc88f6c",
                "additions": 20,
                "deletions": 24,
                "committedDate": "2023-09-22T22:51:22Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2a21415e817f49b11d6fa2b2bd4f4b7f343df4d1",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-09-24T07:50:58Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b12c7be40ce1ce9bd4fb4248e77cfece1f9f862c",
                "additions": 22,
                "deletions": 23,
                "committedDate": "2023-09-24T07:55:51Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1c5b8c906e8699dc481a6b6e7d2a2bd6152dbe5f",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-09-24T11:49:15Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-22T07:10:42Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/ZMod/Units.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/DirichletCharacter/Basic.lean",
              "additions": 41,
              "deletions": 1
            }
          ]
        },
        "headRefName": "mo271/conductor",
        "headRefOid": "1c5b8c906e8699dc481a6b6e7d2a2bd6152dbe5f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5a9dBm",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
              "color": "33DBEC",
              "name": "t-number-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5huvM0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-09-22T10:17:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0ADN",
              "body": "LGTM",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-24T08:27:27Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7320,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5huOZl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T09:14:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huO3i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T09:15:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huQKh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T09:18:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huQy3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T09:20:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huRKy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T09:21:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hubnW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-09-22T09:45:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huuY9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T10:16:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huvM0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-09-22T10:17:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huvzj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T10:18:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5huyUz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-22T10:22:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hyxul",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-22T22:51:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hzaFo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-23T10:33:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hzaNb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-23T10:38:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hzaRe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-23T10:41:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hz_B5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-24T07:56:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hz_Cj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-24T07:56:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hz_C6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-24T07:56:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0ADN",
              "body": "LGTM",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-24T08:27:27Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhQ4Y",
                    "body": "This is already in `Data.ZMod.Units`.",
                    "createdAt": "2023-09-22T09:14:22Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkEnr",
                    "body": "removed it here...",
                    "createdAt": "2023-09-22T22:22:08Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhRMi",
                    "body": "The name of this lemma should refer to `changeLevel` instead of `ofUnitHom`.",
                    "createdAt": "2023-09-22T09:15:30Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkErL",
                    "body": "now I propose `changeLevel_eq_cast_of_dvd`. Might it also make change to put it into a `ChangeLevel` namespace?",
                    "createdAt": "2023-09-22T22:22:45Z",
                    "author": {
                      "login": "mo271"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pkez9",
                    "body": "Not really; there is no argument whose type is `changeLevel ...`.",
                    "createdAt": "2023-09-23T10:38:51Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhSDt",
                    "body": "Maybe split this into `χ₀ : DirichletCharacter R d` and `eq_changeLevel : χ = changeLevel dvd χ₀`?\r\nI assume that later on, you will want to use the actual lower-level character and not just its existence; then this would save you deconstructing the existence statement.",
                    "createdAt": "2023-09-22T09:18:39Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkHtD",
                    "body": "I tried splitting it like this first:\r\n```lean\r\n/-- χ₀ of level d factors through χ of level n if d ∣ n and χ₀ = χ ∘ (ZMod n → ZMod d). -/\r\nstructure FactorsThrough (d : ℕ) : Prop :=\r\n  /-- `d` divides `n`, so `d` is a potential level through which `χ` factors. -/\r\n  (dvd : d ∣ n)\r\n  /-- A character `χ₀` of level `d` ... -/\r\n  (χ₀ : DirichletCharacter R d)\r\n  /-- ... such that `χ` is just the change in level of `χ₀` to `n`. -/\r\n  (eq_changeLevel : χ = changeLevel dvd χ₀)\r\n```\r\nbut I got:\r\n```\r\n(kernel) failed to generate projection 'DirichletCharacter.FactorsThrough.χ₀' for 'DirichletCharacter.FactorsThrough', type is an inductive predicate, but field is not a proposition\r\n```\r\nbut that didn't work, probably not good to mix data and Proposition.\r\nSo I did a slightly different approach, see the current state.",
                    "createdAt": "2023-09-22T22:50:06Z",
                    "author": {
                      "login": "mo271"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlKIM",
                    "body": "solved by the approach below",
                    "createdAt": "2023-09-24T07:56:44Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhSeW",
                    "body": "For example, this would be\r\n```lean\r\n    χ = changeLevel h.dvd h.χ₀ := h.eq_changeLevel\r\n```",
                    "createdAt": "2023-09-22T09:20:16Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkHtg",
                    "body": "it is now",
                    "createdAt": "2023-09-22T22:50:11Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhSuk",
                    "body": "```lean\r\n-- cant use dot notation for FactorsThrough and conductor set\r\n```",
                    "createdAt": "2023-09-22T09:21:12Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkEzD",
                    "body": "done",
                    "createdAt": "2023-09-22T22:24:01Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhZWl",
                    "body": "```suggestion\r\nlemma IsUnit.cast_of_dvd (hm : n ∣ m) (a : Units (ZMod m)) :  IsUnit ((a : ZMod m) : ZMod n) := by\r\n```\r\nDoes dot notation work with this name?",
                    "createdAt": "2023-09-22T09:45:20Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhhBQ",
                    "body": "No, because there is no argument of type `IsUnit`.",
                    "createdAt": "2023-09-22T10:16:14Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhhTh",
                    "body": "Oh, I misread `Units`, I am sorry!",
                    "createdAt": "2023-09-22T10:17:32Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhhhN",
                    "body": "Maybe `hx.dvd` is a bit clearer than `hx.1`.",
                    "createdAt": "2023-09-22T10:18:29Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkE7n",
                    "body": "done",
                    "createdAt": "2023-09-22T22:25:18Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhiY0",
                    "body": "```lean\r\nlemma IsUnit_cast_of_dvd (hm : n ∣ m) (a : Units (ZMod m)) :  IsUnit ((a : ZMod m) : ZMod n) :=\r\n  Units.isUnit (unitsMap hm a)\r\n```",
                    "createdAt": "2023-09-22T10:22:22Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkHyA",
                    "body": "much nicer!",
                    "createdAt": "2023-09-22T22:51:12Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PkemG",
                    "body": "Ah, the problem is \"can only eliminate into Prop\". One possibility is as follows.\r\n```lean\r\n/-- `χ` of level `n` factors through a Dirichlet character `χ₀` of level `d` if `d ∣ n` and\r\n`χ₀ = χ ∘ (ZMod n → ZMod d)`. -/\r\ndef FactorsThrough (d : ℕ) : Prop :=\r\n  ∃ (h : d ∣ n) (χ₀ : DirichletCharacter R d), χ = changeLevel h χ₀\r\n\r\nnamespace FactorsThrough\r\n\r\n/-- The fact that `d` divides `n` when `χ` factors through a Dirichlet character at level `d` -/\r\ndef dvd {d : ℕ} (h : FactorsThrough χ d) : d ∣ n := h.1\r\n\r\n/-- The Dirichlet character at level `d` through which `χ` factors -/\r\nnoncomputable\r\ndef χ₀ {d : ℕ} (h : FactorsThrough χ d) : DirichletCharacter R d := Classical.choose h.2\r\n\r\n/-- The fact that `χ` factors through `χ₀` of level `d` -/\r\nnoncomputable\r\ndef eq_changeLevel {d : ℕ} (h : FactorsThrough χ d) : χ = changeLevel h.dvd h.χ₀ :=\r\n  Classical.choose_spec h.2\r\n\r\nlemma same_level : FactorsThrough χ n := ⟨dvd_refl n, χ, (changeLevel_self χ).symm⟩\r\n\r\nend FactorsThrough\r\n\r\n/-- The set of natural numbers for which a Dirichlet character is periodic. -/\r\ndef conductorSet : Set ℕ := {x : ℕ | FactorsThrough χ x}\r\n\r\nlemma mem_conductorSet_iff {x : ℕ} : x ∈ conductorSet χ ↔ FactorsThrough χ x := Iff.refl _\r\n\r\nlemma level_mem_conductorSet : n ∈ conductorSet χ := FactorsThrough.same_level χ\r\n\r\nlemma mem_conductorSet_dvd {x : ℕ} (hx : x ∈ conductorSet χ) : x ∣ n := hx.dvd\r\n```\r\nThis hides the classical choice in the API definitions of `χ₀` and `eq_changeLevel`. (`FactorsThrough.spec` then is the same as `FactorsThrough.eq_changeLevel`).\r\nThe last lemma `FactorsThrough_of_mem_conductorSet` should be unnecessary, since it is essentially just one direction of `mem_conductorSet_iff`.",
                    "createdAt": "2023-09-23T10:33:11Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlKHs",
                    "body": "I like this approach very much, thanks @MichaelStollBayreuth!",
                    "createdAt": "2023-09-24T07:56:28Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pke7K",
                    "body": "```lean\r\n/-- The minimum natural number `n` for which a Dirichlet character is periodic.\r\nThe Dirichlet character `χ` can then alternatively be reformulated on `ℤ/nℤ`. -/\r\n```",
                    "createdAt": "2023-09-23T10:41:47Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlKGU",
                    "body": "done",
                    "createdAt": "2023-09-24T07:56:01Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "U_kgDOBfNrCg",
              "login": "MichaelStollBayreuth"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: conductor of Dirichlet character",
        "updatedAt": "2023-09-24T12:23:11Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7320",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "da57d289d786987c89a5363c8d4a806241924e08"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3b7dda9ee8943b5de28196abe78132f976b9619e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "161c3873f2ade414a0c5766e7427de15d62feff8"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xvqHkzwAAAAJuiX4z",
              "createdAt": "2023-09-22T08:10:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5xvqHkzwAAAAJuiYZL",
              "createdAt": "2023-09-22T08:10:25Z",
              "requestedReviewer": {
                "id": "U_kgDOBfNrCg",
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huOZl",
              "createdAt": "2023-09-22T09:14:22Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huO3i",
              "createdAt": "2023-09-22T09:15:30Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huQKh",
              "createdAt": "2023-09-22T09:18:39Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huQy3",
              "createdAt": "2023-09-22T09:20:16Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huRKy",
              "createdAt": "2023-09-22T09:21:12Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5xvqHkzwAAAAJumAv8",
              "createdAt": "2023-09-22T09:43:57Z",
              "assignee": {
                "id": "MDQ6VXNlcjMyNDkwNTMy",
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hubnW",
              "createdAt": "2023-09-22T09:45:20Z",
              "body": "",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xvqHkzwAAAAJumMhG",
              "createdAt": "2023-09-22T09:49:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
                "name": "t-number-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xvqHkzwAAAAJumMhL",
              "createdAt": "2023-09-22T09:49:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huvzj",
              "createdAt": "2023-09-22T10:18:29Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5huyUz",
              "createdAt": "2023-09-22T10:22:22Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "afef0063f7e986b7c4c004cf2278e7c58cc88f6c"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nPdtR",
              "createdAt": "2023-09-22T22:52:38Z",
              "body": "Thanks for the review, @MichaelStollBayreuth. Please see if this way of having the FactorsThrough structure makes more sense...",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hzaFo",
              "createdAt": "2023-09-23T10:33:11Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hzaRe",
              "createdAt": "2023-09-23T10:41:47Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2a21415e817f49b11d6fa2b2bd4f4b7f343df4d1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b12c7be40ce1ce9bd4fb4248e77cfece1f9f862c"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0ADN",
              "createdAt": "2023-09-24T08:27:27Z",
              "body": "LGTM",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nRCaZ",
              "createdAt": "2023-09-24T08:28:15Z",
              "body": "I restarted the \"build mathlib\" job; the previous one seemed to have internet connection problems at \"building counterexamples\".",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nREKR",
              "createdAt": "2023-09-24T09:09:48Z",
              "body": "There is a linter issue, but LGTM otherwise, thanks!\r\n\r\nbors d+",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nREKW",
              "createdAt": "2023-09-24T09:09:49Z",
              "body": ":v: mo271 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xvqHkzwAAAAJvKOae",
              "createdAt": "2023-09-24T09:09:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xvqHkzwAAAAJvKOa2",
              "createdAt": "2023-09-24T09:10:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nREjX",
              "createdAt": "2023-09-24T09:17:59Z",
              "body": "> There is a linter issue, but LGTM otherwise, thanks!\r\n\r\nSorry, my mistake. Just replace the two `def`s by `lemma`.\r\n",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1c5b8c906e8699dc481a6b6e7d2a2bd6152dbe5f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nRLLS",
              "createdAt": "2023-09-24T12:02:31Z",
              "body": "bors r+",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nRMBh",
              "createdAt": "2023-09-24T12:23:06Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6289889940/job/17076821908)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6289889940/job/17076822175)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6289889940/job/17076821769)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5xvqHkzwAAAAJvLNiS",
              "createdAt": "2023-09-24T12:23:08Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5xvqHkzwAAAAJvLNj4",
              "createdAt": "2023-09-24T12:23:11Z"
            }
          ]
        }
      }
    }
  }
}
