{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 546,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "apnelson1"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR provides several ways to construct a matroid with alternative versions of the axiom sets, in particular in terms of an independence predicate. It will be used to define duals and minors of matroids in future PRs. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-11-29T23:01:52Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5tH2AH",
              "body": "> I've left some comments.\r\n> \r\n> I'd like to suggest a bigger refactor, which is to define actual `structure`s for the different kinds of matroids, and then define, for example, `Matroid.ofIndep` to be a function `IndepMatroid α -> Matroid α`. This would clean up the statements of many of your simp lemmas, and it would let you use structure notation to organize constructions.\r\n> \r\n> Later, since you would have actual types for the different representations, you could prove these different notions of matroid are equivalent. But, it should be documented that these different structures are intended to be used for the constructors `Matroid.ofIndep`, etc., and that no theory should be built up specifically for these alternative matroid types.\r\n\r\nThank you for this suggestion. As much as I'm champing at the bit, this really makes sense. I've just done this refactor - let me know what you think. \r\n",
              "createdAt": "2023-11-28T21:25:16Z",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5tPuCj",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7039395499/job/19158277259)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7039395499/job/19158277079)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7039395499/job/19158276753)",
              "createdAt": "2023-11-29T23:01:51Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f4a890505860b3911fb926f5ae7c8bca68eb648e",
                "additions": 573,
                "deletions": 1,
                "committedDate": "2023-10-31T19:44:00Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c73808f76ce4fac59ab573982df11415a851ea20",
                "additions": 6,
                "deletions": 7,
                "committedDate": "2023-10-31T19:54:55Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "81fc1d28b9cdf6354d757bd56ddbd4e4717ddc07",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-10-31T21:12:28Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "990a8bd39415b81dbe6ad8bc306b2ca95dbfbe7d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-31T21:25:04Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7568f99dac3c7dd30d3da22dbdccfd0f10d69d7e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-31T21:59:39Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ed9e948a010b926948c00d8d3cdd303b933825da",
                "additions": 94,
                "deletions": 92,
                "committedDate": "2023-11-01T07:45:50Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "202903e25b42c02a746f08253aaa678b185809fa",
                "additions": 14,
                "deletions": 12,
                "committedDate": "2023-11-03T12:06:33Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1aef1aa87676f9e77d08a31c58587a7562b3987a",
                "additions": 7,
                "deletions": 8,
                "committedDate": "2023-11-03T13:07:32Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a748a70c3bf3957a56b0c104e8d23b8eb17ca0f1",
                "additions": 8,
                "deletions": 6,
                "committedDate": "2023-11-24T14:00:24Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHZnbw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981759490/job/18999568239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHh2Pw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981807115/job/18999703103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHib6A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981810035/job/18999712744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHk1qw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981824129/job/18999752107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL3ASw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983321838/job/19004244043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL6cng",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983344293/job/19004300446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL9vtQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983364466/job/19004354485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHZmTg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981759485/job/18999567950"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHh2ZA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981807117/job/18999703140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHib7Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981810050/job/18999712749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHk1jQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981824137/job/18999752077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL2_XQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983321836/job/19004243805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL6cmg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983344281/job/19004300442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL9vsQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983364460/job/19004354481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHFERQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981647495/job/18999231557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE7ww",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646601/job/18999229379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHFAUQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646603/job/18999230545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHFF3w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981647483/job/18999231967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHZmcw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981759490/job/18999567987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHh3Vw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981807115/job/18999703383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHic5Q",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981810035/job/18999712997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHk3BQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981824129/job/18999752453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL2_Nw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983321838/job/19004243767"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL6djw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983344293/job/19004300687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbL9wfA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983364466/job/19004354684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE-Dg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646601/job/18999229966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE7Ug",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646603/job/18999229266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHFDwA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981647483/job/18999231424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE82g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646601/job/18999229658"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE81Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646603/job/18999229653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHFAiA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646601/job/18999230600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE92w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646603/job/18999229915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE_OA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646601/job/18999230264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHE--w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646603/job/18999230203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbHFB_Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646601/job/18999230973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbH0SsA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6981646603/job/19000005296"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "554689872567267484927c0eaffcee0080f95ddc",
                "additions": 103,
                "deletions": 102,
                "committedDate": "2023-11-24T17:12:56Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMBJDQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983384692/job/19004410125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMOzlw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983472753/job/19004634007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMBJKQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983384702/job/19004410153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMOyxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983472751/job/19004633796"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA2xA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382977/job/19004405444"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMAz9w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382769/job/19004404727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA03Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382771/job/19004404957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA2ow",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382981/job/19004405411"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMBJ3A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983384692/job/19004410332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMOy4A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983472753/job/19004633824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA1vQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382769/job/19004405181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA2nA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382771/job/19004405404"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA3OA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382981/job/19004405560"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA2XA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382769/job/19004405340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA1Xw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382771/job/19004405087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA0ew",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382769/job/19004404859"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA18Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382771/job/19004405233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA0PQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382771/job/19004404797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA1Fg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382769/job/19004405014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMA3GA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382769/job/19004405528"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMQuEQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983382771/job/19004665361"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c847cf4398c2025e0a5d06a6c38893ba886edbe9",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-24T17:50:36Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs_iw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983646059/job/19005128587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs9EQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645788/job/19005127953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs9GA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645793/job/19005127960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs_9w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983646060/job/19005128695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs9sA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645788/job/19005128112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs8hA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645793/job/19005127812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs_kg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983646060/job/19005128594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs8Wg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645788/job/19005127770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs9tQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645793/job/19005128117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs-NQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645788/job/19005128245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs-Hg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645793/job/19005128222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs_DQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645788/job/19005128461"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs-nQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645793/job/19005128349"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbMs_zg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645788/job/19005128654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEbNK7WA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6983645793/job/19005619032"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6d68bffe3feecc1266654cc575582f3cfaa6d2b5",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-28T16:36:55Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcrr7HA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7021805921/job/19104725788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcrr8Lw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7021805932/job/19104726063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcrr7LA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7021805932/job/19104725804"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "525414cbb776a07abd635ea183518bb06df1502d",
                "additions": 45059,
                "deletions": 21333,
                "committedDate": "2023-11-28T16:51:34Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEctfVQQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7022411559/job/19106616641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxc8xw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023692416/job/19110771911"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxfG4A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023702987/job/19110807264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxsPLQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023765934/job/19111022381"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEctfSYg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7022411555/job/19106615906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEctfQ2g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7022411567/job/19106615514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxc7IA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023692417/job/19110771488"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxfGxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023702996/job/19110807236"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxsPOw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023765942/job/19111022395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcsGnog",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7021937994/job/19105163170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcsGnrg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7021937992/job/19105163182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEctfSTQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7022411559/job/19106615885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxc7LA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023692416/job/19110771500"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxfIIw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023702987/job/19110807587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcxsQYw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7023765934/job/19111022691"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEcsGopw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7021937992/job/19105163431"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d26ad4f9aee0e786d25e992fd6b713f9a559dc81",
                "additions": 341,
                "deletions": 388,
                "committedDate": "2023-11-28T21:23:46Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc1VadA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024971454/job/19114842740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc1VZfg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024971452/job/19114842494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc1Vbfw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024971461/job/19114843007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i4mw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706698/job/19114014875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0izNQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706144/job/19114013493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i1Tg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706148/job/19114014030"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i5sA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706696/job/19114015152"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc1Vcmg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024971454/job/19114843290"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i3bw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706144/job/19114014575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i2lg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706148/job/19114014358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i43g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706696/job/19114014942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i2hQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706144/job/19114014341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0izcg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706148/job/19114013554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i0LA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706144/job/19114013740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i33g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706148/job/19114014686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i1CQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706144/job/19114013961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i0WA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706148/job/19114013784"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc0i4RA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706144/job/19114014788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc1qXcg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7024706148/job/19115186034"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1911338728825ab265cae3c936006d9780d29538",
                "additions": 25,
                "deletions": 26,
                "committedDate": "2023-11-29T03:54:08Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc85quw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027806813/job/19122776763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc85qag",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027806811/job/19122776682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84bIg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027800016/job/19122756386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84ZPg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799861/job/19122755902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84Zbw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799859/job/19122755951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84bJg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027800015/job/19122756390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc85qYw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027806813/job/19122776675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84bGw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799861/job/19122756379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84aqw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799859/job/19122756267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84biA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027800015/job/19122756488"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84Z4w",
                        "name": "Check all files imported",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799859/job/19122756067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84aJw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799861/job/19122756135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84apA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799861/job/19122756260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84ZHA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799859/job/19122755868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84aRA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799859/job/19122756164"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84Zqw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799861/job/19122756011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87pdA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799859/job/19122809204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc84bkQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027799861/job/19122756497"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "911c4373129f2c391213f1236383348bfc56fcc8",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-29T03:57:32Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87Tsw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027816149/job/19122803635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87R9g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815963/job/19122803190"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87SJA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815961/job/19122803236"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87T_w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027816145/job/19122803711"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87TEQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815963/job/19122803473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87Sbg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815961/job/19122803310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87Tqg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027816145/job/19122803626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87Spw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815963/job/19122803367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87TDA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815961/job/19122803468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87SSA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815963/job/19122803272"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87RwQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815961/job/19122803137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87TVA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815963/job/19122803540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87StA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815961/job/19122803380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc87Tyw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815963/job/19122803659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEc9UAbg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7027815961/job/19123208302"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a3aacf0ebf56b97f08426b6ccc70ee24764a037b",
                "additions": 7,
                "deletions": 0,
                "committedDate": "2023-11-29T12:22:38Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdewEMg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7039393904/job/19158271026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdewDgw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7039393846/job/19158270851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxhDA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471504/job/19136274700"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxcrA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136273580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxdKw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136273707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxhPA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471506/job/19136274748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdewEUA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7039393846/job/19158271056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxf6Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxb1Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136273365"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxiQg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471506/job/19136275010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxeuA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxeQg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136273986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxdmA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136273816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxfJw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136274215"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxhDw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxgPw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136274495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdJxiLw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274991"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEdLBI3w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19137579231"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-10-31T19:49:57Z",
        "deletions": 15,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Matroid/Basic.lean",
              "additions": 31,
              "deletions": 15
            },
            {
              "path": "Mathlib/Data/Matroid/IndepAxioms.lean",
              "additions": 514,
              "deletions": 0
            }
          ]
        },
        "headRefName": "matroid_indep_axioms",
        "headRefOid": "a3aacf0ebf56b97f08426b6ccc70ee24764a037b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5eRaVs",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwyOTg0NTM0NDUy",
              "color": "84b6eb",
              "name": "enhancement"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lwsiT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-10-31T21:25:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oiEa4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-28T19:41:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5or4zM",
              "body": "Thanks!\r\n\r\nThere are still refinements we could possibly make (like it would probably be nicer if in each `def` you had `E` be an explicit argument, to avoid needing to put type ascriptions around the `Finite` type, and because then in the goal view you can see `E` at a glance), but these shouldn't prevent continuing matroid theory's development.\r\n\r\nbors r+\r\n\r\nYou might experiment with making a coercion from `IndepMatroid` to `Matroid`. That would let you use an `IndepMatroid` wherever a `Matroid` is expected, which might come in handy. Untested, but this might work:\r\n```\r\ninstance (α : Type*) : CoeOut (IndepMatroid α) (Matroid α) := ⟨IndepMatriod.matroid⟩\r\n```",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-29T22:38:19Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8071,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lwpBu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-10-31T21:13:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lwsiT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-10-31T21:25:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lxVWL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T00:54:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lxVc8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T00:55:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lxVmk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T00:56:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lxVpU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T00:56:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lxV14",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-01T00:58:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mEhRQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-03T11:47:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mElNq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-03T11:56:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mFNnn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-03T13:08:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMJmj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:10:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMLNJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:15:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMLUf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:15:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oMLt3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T14:16:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oNB66",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-24T17:05:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oNCY4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-24T17:08:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oNC2-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-24T17:10:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oNDXD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-24T17:13:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oNGO0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-24T17:23:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ogr1e",
              "body": "I've left some comments.\r\n\r\nI'd like to suggest a bigger refactor, which is to define actual `structure`s for the different kinds of matroids, and then define, for example, `Matroid.ofIndep` to be a function `IndepMatroid α -> Matroid α`. This would clean up the statements of many of your simp lemmas, and it would let you use structure notation to organize constructions.\r\n\r\nLater, since you would have actual types for the different representations, you could prove these different notions of matroid are equivalent. But, it should be documented that these different structures are intended to be used for the constructors `Matroid.ofIndep`, etc., and that no theory should be built up specifically for these alternative matroid types.",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-28T17:36:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oiCiW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-28T19:39:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oiEa4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-28T19:41:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oiOn-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-28T19:48:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oi7em",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-28T21:52:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5okd8P",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2023-11-29T03:55:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5or4zM",
              "body": "Thanks!\r\n\r\nThere are still refinements we could possibly make (like it would probably be nicer if in each `def` you had `E` be an explicit argument, to avoid needing to put type ascriptions around the `Finite` type, and because then in the goal view you can see `E` at a glance), but these shouldn't prevent continuing matroid theory's development.\r\n\r\nbors r+\r\n\r\nYou might experiment with making a coercion from `IndepMatroid` to `Matroid`. That would let you use an `IndepMatroid` wherever a `Matroid` is expected, which might come in handy. Untested, but this might work:\r\n```\r\ninstance (α : Type*) : CoeOut (IndepMatroid α) (Matroid α) := ⟨IndepMatriod.matroid⟩\r\n```",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-29T22:38:19Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJTnO",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\nimport Mathlib.Data.Matroid.IndepAxioms\nimport Mathlib.Data.Matroid.Init\n```\n",
                    "createdAt": "2023-10-31T21:13:02Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJTnV",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n```\n",
                    "createdAt": "2023-10-31T21:13:02Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJV48",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n```\n",
                    "createdAt": "2023-10-31T21:25:27Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJV5A",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\nimport Mathlib.Data.Matroid.Init\nimport Mathlib.Data.Multiset.Antidiagonal\n```\n",
                    "createdAt": "2023-10-31T21:25:27Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJxTB",
                    "body": "Doing the intros separately makes it harder to see what the names refer to:\r\n```suggestion\r\ntheorem aug_property (M : Matroid α) ⦃I B⦄ (hI : M.Indep I) (hImax : I ∉ maximals (· ⊆ ·) (setOf M.Indep))\r\n      (hB : B ∈ maximals (· ⊆ ·) (setOf M.Indep)) : ∃ x ∈ B \\ I, M.Indep (insert x I) := by\r\n```",
                    "createdAt": "2023-11-01T00:54:15Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWOaI",
                    "body": "As per the dosctring, this lemma is designed to be plugged directly into a construction of another matroid, rather than invoked with explicit I and B. (See how it is invoked in the next file). The version for use with a particular `I` and `B` is `Indep.exists_insert_of_not_base`, which is written in the normal way with everything before the colon.",
                    "createdAt": "2023-11-03T11:47:27Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWQpn",
                    "body": "Moving things before the colon is unrelated to whether arguments are taken explicitly or implicitly.",
                    "createdAt": "2023-11-03T11:56:43Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWmzD",
                    "body": "Ok - changed. ",
                    "createdAt": "2023-11-03T13:08:26Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJxgE",
                    "body": "```suggestion\r\n* `Matroid.matroid_of_base` constructs a matroid from the base axioms (using the definition of a matroid).\r\n```\r\nand throughout, so that these generate doc links",
                    "createdAt": "2023-11-01T00:55:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJxry",
                    "body": "The naming convention for `def`s that carry data is \r\n```suggestion\r\ndef matroidOfBase (E : Set α) (Base : Set α → Prop) (exists_base : ∃ B, Base B)\r\n```\r\nand throughout.",
                    "createdAt": "2023-11-01T00:56:21Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJxt-",
                    "body": "```suggestion\r\n@[simp] theorem matroidOfBase_apply (E : Set α) (Base : Set α → Prop) (exists_base : ∃ B, Base B)\r\n```\r\netc",
                    "createdAt": "2023-11-01T00:56:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SJx2-",
                    "body": "Please add a title as\r\n```suggestion\r\n/-!\r\n# The actual title\r\n\r\n```",
                    "createdAt": "2023-11-01T00:58:02Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtVrW",
                    "body": "Does `@[simps]` on the `def` above generate these for you?",
                    "createdAt": "2023-11-24T14:10:54Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtWw-",
                    "body": "(and most of your other `rfl` lemmas below)",
                    "createdAt": "2023-11-24T14:15:43Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tt6N0",
                    "body": "In this one case, `@[simps]` does (although I've kept the `ofBase_apply` because it is sometimes useful to rewrite the predicate itself) but none of the other definitions of matroids below use the structure fields directly for the definition, so `@[simps]` seems not to work. ",
                    "createdAt": "2023-11-24T17:05:42Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tt8f4",
                    "body": "Note that you can use `simps ground` or perhaps `simps E` to generate only the lemmas you think are useful.",
                    "createdAt": "2023-11-24T17:23:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtWsH",
                    "body": "isn't this true by `rfl`?",
                    "createdAt": "2023-11-24T14:15:23Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tt6gk",
                    "body": "no, because `(Matroid.ofIndepOfFinitary E Indep ... _).Indep` isn't defeq to `Indep`. ",
                    "createdAt": "2023-11-24T17:08:04Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tt61V",
                    "body": "This is in turn true because `Matroid` is defined in terms of `Base` predicate rather than an `Indep` predicate. The latter would have given better defeq properties, given that independence is the usual way to construct a matroid. Changing this would need a (manageable) refactor, but that's for another day. ",
                    "createdAt": "2023-11-24T17:10:36Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TtXB_",
                    "body": "\r\n```suggestion\r\nprotected def ofBase (E : Set α) (Base : Set α → Prop) (exists_base : ∃ B, Base B)\r\n```\r\nso that the caller can write either `Matroid.ofBase` or just `.ofBase`, and not have to write `Matroid` twice,",
                    "createdAt": "2023-11-24T14:16:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tt7KA",
                    "body": "Good idea - thanks!",
                    "createdAt": "2023-11-24T17:13:14Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7ZXH",
                    "body": "Make sure to revert this file. You can probably do `git checkout master .gitignore` to get the master branch's version, then commit the change.",
                    "createdAt": "2023-11-28T16:49:12Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7b7V",
                    "body": "I think we ought to stick with naming conventions for the statement of the theorem. Maybe `Indep.exists_insert_of_not_mem_maximals` is most salient without being too long?\r\n\r\nAfter this theorem, you can then make an alias, I think with `alias aug_property := Indep.exists_insert_of_not_mem_maximals`. I believe you can give the `alias` a doc comment saying what it's an alias for (and, importantly, that it's the augmentation axiom).",
                    "createdAt": "2023-11-28T16:56:58Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7cjE",
                    "body": "This is a very weak suggestion. I tend to find it easier to read set notation than `setOf`.\r\n```suggestion\r\n    (hInotmax : I ∉ maximals (· ⊆ ·) {I' | I' ∈ M.Indep}) (hB : B ∈ maximals (· ⊆ ·) {I' | I' ∈ M.Indep}) :\r\n```",
                    "createdAt": "2023-11-28T16:58:55Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8QDl",
                    "body": "That looks very weird to me; your spelling assumes that `M.Indep` is a set, in which case you could just write `M.Indep`. If it's a predicate, then presumably you meant:\r\n```suggestion\r\n    (hInotmax : I ∉ maximals (· ⊆ ·) {I' | M.Indep I'}) (hB : B ∈ maximals (· ⊆ ·) {I' | M.Indep I'}) :\r\n```",
                    "createdAt": "2023-11-28T19:39:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8Y4_",
                    "body": "Thanks, that was a mistake and you wrote what I intended.",
                    "createdAt": "2023-11-28T19:48:05Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7gue",
                    "body": "The only difference between this function and `Matroid.mk` is that the argument names don't end in `'`. Let's delete this and modify the original `structure` to have the name you want.\r\n\r\n```lean\r\n@[ext] structure Matroid (α : Type _) where\r\n  /-- A constructor for matroids from the base axioms. -/\r\n  ofBase ::\r\n  /-- `M` has a ground set `E`. -/\r\n  (E : Set α)\r\n  ... and so on ...\r\n```\r\n\r\nAlso, I was looking through the fields of `Matroid` to see why you put primes at the end, and I couldn't figure it out. Could you remove the primes too while we're at it, unless there's some reason for it? You'll have to remove `Matroid.exists_base` on line 338, but that's just a restatement of the axiom without the prime.",
                    "createdAt": "2023-11-28T17:11:20Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7hfz",
                    "body": "With the change to the constructor name, this is likely not necessary. (Note: `by ext; simp` can be replaced by `rfl` since structure projections are part of definitional equality.)",
                    "createdAt": "2023-11-28T17:13:49Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8RcM",
                    "body": "(and in general, it's a good idea to replace `by some_proof` with `rfl` whenever possible, because it makes `dsimp` more powerful)",
                    "createdAt": "2023-11-28T19:41:06Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7jZ1",
                    "body": "This would be a lot more readable using structure notation. Please transform every instance of `Matroid.ofBase` similarly. If you really want to use `Matroid.ofBase` explicitly, then please use keyword argument notation (`Matroid.ofBase E (· ∈ maximals (· ⊆ ·) (setOf Indep)) (exists_base := by ...) (base_exchange := by ...) ...`)\r\n```lean\r\n  { E -- note to you, this first line is short for `E := E`\r\n    Base := (· ∈ maximals (· ⊆ ·) (setOf Indep))\r\n    exists_base' := by\r\n      obtain ⟨B, ⟨hB,-,-⟩, hB₁⟩ := h_maximal E rfl.subset ∅ h_empty (empty_subset _)\r\n      exact ⟨B, ⟨hB, fun B' hB' hBB' ↦ hB₁ ⟨hB', empty_subset _,h_support B' hB'⟩ hBB'⟩⟩\r\n    base_exchange' := by\r\n      rintro B B' ⟨hB, hBmax⟩ ⟨hB',hB'max⟩ e he\r\n      have hnotmax : B \\ {e} ∉ maximals (· ⊆ ·) (setOf Indep)\r\n      { simp only [mem_maximals_setOf_iff, diff_singleton_subset_iff, not_and, not_forall,\r\n          exists_prop, exists_and_left]\r\n        exact fun _ ↦ ⟨B, hB, subset_insert _ _, by simpa using he.1⟩ }\r\n\r\n      obtain ⟨f,hf,hfB⟩ := h_aug (h_subset hB (diff_subset B {e})) hnotmax ⟨hB',hB'max⟩\r\n      simp only [mem_diff, mem_singleton_iff, not_and, not_not] at hf\r\n\r\n      have hfB' : f ∉ B := by (intro hfB; obtain rfl := hf.2 hfB; exact he.2 hf.1)\r\n\r\n      refine' ⟨f, ⟨hf.1, hfB'⟩, by_contra (fun hnot ↦ _)⟩\r\n      obtain ⟨x,hxB, hind⟩ :=  h_aug hfB hnot ⟨hB, hBmax⟩\r\n      simp only [mem_diff, mem_insert_iff, mem_singleton_iff, not_or, not_and, not_not] at hxB\r\n      obtain rfl := hxB.2.2 hxB.1\r\n      rw [insert_comm, insert_diff_singleton, insert_eq_of_mem he.1] at hind\r\n      exact not_mem_subset (hBmax hind (subset_insert _ _)) hfB' (mem_insert _ _)\r\n    maximality' := by\r\n      rintro X hXE I ⟨hB, hB, hIB⟩ hIX\r\n      obtain ⟨J, ⟨hJ, hIJ, hJX⟩, hJmax⟩ := h_maximal X hXE I (h_subset hB.1 hIB) hIX\r\n      obtain ⟨BJ, hBJ⟩ := h_maximal E rfl.subset J hJ (h_support J hJ)\r\n      refine' ⟨J, ⟨⟨BJ,_, hBJ.1.2.1⟩ ,hIJ,hJX⟩, _⟩\r\n      · exact ⟨hBJ.1.1, fun B' hB' hBJB' ↦ hBJ.2 ⟨hB',hBJ.1.2.1.trans hBJB', h_support _ hB'⟩ hBJB'⟩\r\n      simp only [maximals, mem_setOf_eq, and_imp, forall_exists_index]\r\n      rintro A B' (hBi' : Indep _) - hB'' hIA hAX hJA\r\n      simp only [mem_setOf_eq, and_imp] at hJmax\r\n      exact hJmax (h_subset hBi' hB'') hIA hAX hJA\r\n    subset_ground' := fun B hB ↦ h_support B hB.1 }\r\n```",
                    "createdAt": "2023-11-28T17:18:44Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7knu",
                    "body": "A trick to save having to restate all this is that you can write \r\n```suggestion\r\n    (h_subset h_aug h_maximal h_support) :\r\n```\r\nThat's because `Matroid.ofIndep` determines their types from `E` and `Indep`. (I'd have included `h_empty` to if I had also selected that line before writing this suggestion.)",
                    "createdAt": "2023-11-28T17:22:30Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7leL",
                    "body": "Please use keyword arguments here and elsewhere for `Matroid.ofIndep`\r\n```suggestion\r\n  (h_aug := by\r\n```\r\nNote that the `( by` on line 232 is too indented. (Also, just to mention it, the style would be `(by` instead of `( by`.)",
                    "createdAt": "2023-11-28T17:25:17Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T7mD_",
                    "body": "Like a similar comment, you can drop the types here. One reason to do this is that, in case you ever change the types of the arguments to `Matroi.ofIndepOfFinitary` subtly, then you don't have to go through and fix all these. Plus, it gives these simp lemmas less visual prominence.",
                    "createdAt": "2023-11-28T17:27:19Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8ymk",
                    "body": "```suggestion\r\n  exists_base := by\r\n    obtain ⟨B, ⟨hB,-,-⟩, hB₁⟩ :=\r\n      M.indep_maximal M.E rfl.subset ∅ M.indep_empty (empty_subset _)\r\n    exact ⟨B, ⟨hB, fun B' hB' h' ↦ hB₁ ⟨hB', empty_subset _,M.subset_ground B' hB'⟩ h'⟩⟩\r\n```",
                    "createdAt": "2023-11-28T21:32:17Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8yuE",
                    "body": "```suggestion\r\n  base_exchange := by\r\n```\r\nand remove the parenthesis at the end of this `by` block",
                    "createdAt": "2023-11-28T21:32:49Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8y1k",
                    "body": "```suggestion\r\n  maximality := by\r\n    rintro X hXE I ⟨hB, hB, hIB⟩ hIX\r\n    obtain ⟨J, ⟨hJ, hIJ, hJX⟩, hJmax⟩ := M.indep_maximal X hXE I (M.indep_subset hB.1 hIB) hIX\r\n    obtain ⟨BJ, hBJ⟩ := M.indep_maximal M.E rfl.subset J hJ (M.subset_ground J hJ)\r\n    refine' ⟨J, ⟨⟨BJ,_, hBJ.1.2.1⟩ ,hIJ,hJX⟩, _⟩\r\n    · exact ⟨hBJ.1.1, fun B' hB' hBJB' ↦ hBJ.2 ⟨hB',hBJ.1.2.1.trans hBJB',\r\n        M.subset_ground _ hB'⟩ hBJB'⟩\r\n    simp only [maximals, mem_setOf_eq, and_imp, forall_exists_index]\r\n    rintro A B' (hBi' : M.Indep _) - hB'' hIA hAX hJA\r\n    simp only [mem_setOf_eq, and_imp] at hJmax\r\n    exact hJmax (M.indep_subset hBi' hB'') hIA hAX hJA\r\n```",
                    "createdAt": "2023-11-28T21:33:19Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8y89",
                    "body": "```suggestion\r\n  subset_ground := fun B hB ↦ M.subset_ground B hB.1\r\n```\r\nor even\r\n```suggestion\r\n  subset_ground B hB := M.subset_ground B hB.1\r\n```",
                    "createdAt": "2023-11-28T21:33:47Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T8zW-",
                    "body": "```suggestion\r\n  E := E\r\n  Indep := Indep\r\n  indep_empty := indep_empty\r\n  indep_subset := indep_subset\r\n  indep_aug := indep_aug\r\n  indep_maximal := (fun X _ ↦ Matroid.existsMaximalSubsetProperty_of_bdd indep_bdd X)\r\n  subset_ground := subset_ground\r\n```",
                    "createdAt": "2023-11-28T21:35:50Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5T81jX",
                    "body": "Similarly, would it make sense to define a `FinitaryMatroid` structure and make `IndepMatroid.ofFinitary` be a function `FinitaryMatroid α -> IndepMatroid α`?\r\n\r\nMaybe there are too many variations though and this is fine for now.",
                    "createdAt": "2023-11-28T21:46:39Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5T9y6i",
                    "body": "Yes, I think it is ok as it stands.",
                    "createdAt": "2023-11-29T03:55:38Z",
                    "author": {
                      "login": "apnelson1"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcxNjYwNzcx",
              "login": "apnelson1"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdewEMg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7039393904/job/19158271026"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdewDgw",
                "name": "Add ready-to-merge label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7039393846/job/19158270851"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxhDA",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471504/job/19136274700"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxcrA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136273580"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxdKw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136273707"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxhPA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471506/job/19136274748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdewEUA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7039393846/job/19158271056"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxf6Q",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274409"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxb1Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136273365"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxiQg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471506/job/19136275010"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxeuA",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274104"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxeQg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136273986"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxdmA",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136273816"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxfJw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136274215"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxhDw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274703"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxgPw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19136274495"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdJxiLw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471040/job/19136274991"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEdLBI3w",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7032471042/job/19137579231"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - Matroid independence axioms",
        "updatedAt": "2023-11-29T23:01:55Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8071",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f4a890505860b3911fb926f5ae7c8bca68eb648e"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51fhIRzwAAAAKFPjdu",
              "createdAt": "2023-10-31T19:50:28Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDUy",
                "name": "enhancement"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51fhIRzwAAAAKFPjdw",
              "createdAt": "2023-10-31T19:50:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c73808f76ce4fac59ab573982df11415a851ea20"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c51fhIRzwAAAAKFPuCP",
              "createdAt": "2023-10-31T19:55:33Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "81fc1d28b9cdf6354d757bd56ddbd4e4717ddc07"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lwpBu",
              "createdAt": "2023-10-31T21:13:02Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "990a8bd39415b81dbe6ad8bc306b2ca95dbfbe7d"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lwsiT",
              "createdAt": "2023-10-31T21:25:27Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7568f99dac3c7dd30d3da22dbdccfd0f10d69d7e"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lxVWL",
              "createdAt": "2023-11-01T00:54:15Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lxVc8",
              "createdAt": "2023-11-01T00:55:10Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lxVmk",
              "createdAt": "2023-11-01T00:56:21Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lxVpU",
              "createdAt": "2023-11-01T00:56:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51fhIRzwAAAAKFWkRS",
              "createdAt": "2023-11-01T00:56:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51fhIRzwAAAAKFWkRW",
              "createdAt": "2023-11-01T00:56:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lxV14",
              "createdAt": "2023-11-01T00:58:02Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ed9e948a010b926948c00d8d3cdd303b933825da"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51fhIRzwAAAAKG_nck",
              "createdAt": "2023-11-03T11:38:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51fhIRzwAAAAKG_ncu",
              "createdAt": "2023-11-03T11:38:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "202903e25b42c02a746f08253aaa678b185809fa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1aef1aa87676f9e77d08a31c58587a7562b3987a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a748a70c3bf3957a56b0c104e8d23b8eb17ca0f1"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oMJmj",
              "createdAt": "2023-11-24T14:10:53Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oMLNJ",
              "createdAt": "2023-11-24T14:15:23Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oMLt3",
              "createdAt": "2023-11-24T14:16:56Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "554689872567267484927c0eaffcee0080f95ddc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c847cf4398c2025e0a5d06a6c38893ba886edbe9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6d68bffe3feecc1266654cc575582f3cfaa6d2b5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "525414cbb776a07abd635ea183518bb06df1502d"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ogr1e",
              "createdAt": "2023-11-28T16:49:12Z",
              "body": "I've left some comments.\r\n\r\nI'd like to suggest a bigger refactor, which is to define actual `structure`s for the different kinds of matroids, and then define, for example, `Matroid.ofIndep` to be a function `IndepMatroid α -> Matroid α`. This would clean up the statements of many of your simp lemmas, and it would let you use structure notation to organize constructions.\r\n\r\nLater, since you would have actual types for the different representations, you could prove these different notions of matroid are equivalent. But, it should be documented that these different structures are intended to be used for the constructors `Matroid.ofIndep`, etc., and that no theory should be built up specifically for these alternative matroid types.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d26ad4f9aee0e786d25e992fd6b713f9a559dc81"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5tH2AH",
              "createdAt": "2023-11-28T21:25:16Z",
              "body": "> I've left some comments.\r\n> \r\n> I'd like to suggest a bigger refactor, which is to define actual `structure`s for the different kinds of matroids, and then define, for example, `Matroid.ofIndep` to be a function `IndepMatroid α -> Matroid α`. This would clean up the statements of many of your simp lemmas, and it would let you use structure notation to organize constructions.\r\n> \r\n> Later, since you would have actual types for the different representations, you could prove these different notions of matroid are equivalent. But, it should be documented that these different structures are intended to be used for the constructors `Matroid.ofIndep`, etc., and that no theory should be built up specifically for these alternative matroid types.\r\n\r\nThank you for this suggestion. As much as I'm champing at the bit, this really makes sense. I've just done this refactor - let me know what you think. \r\n",
              "author": {
                "login": "apnelson1"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oi7em",
              "createdAt": "2023-11-28T21:32:17Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1911338728825ab265cae3c936006d9780d29538"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "911c4373129f2c391213f1236383348bfc56fcc8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a3aacf0ebf56b97f08426b6ccc70ee24764a037b"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5or4zM",
              "createdAt": "2023-11-29T22:38:20Z",
              "body": "Thanks!\r\n\r\nThere are still refinements we could possibly make (like it would probably be nicer if in each `def` you had `E` be an explicit argument, to avoid needing to put type ascriptions around the `Finite` type, and because then in the goal view you can see `E` at a glance), but these shouldn't prevent continuing matroid theory's development.\r\n\r\nbors r+\r\n\r\nYou might experiment with making a coercion from `IndepMatroid` to `Matroid`. That would let you use an `IndepMatroid` wherever a `Matroid` is expected, which might come in handy. Untested, but this might work:\r\n```\r\ninstance (α : Type*) : CoeOut (IndepMatroid α) (Matroid α) := ⟨IndepMatriod.matroid⟩\r\n```",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51fhIRzwAAAAKVvmJZ",
              "createdAt": "2023-11-29T22:38:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51fhIRzwAAAAKVvmKr",
              "createdAt": "2023-11-29T22:38:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5tPuCj",
              "createdAt": "2023-11-29T23:01:51Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7039395499/job/19158277259)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7039395499/job/19158277079)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7039395499/job/19158276753)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c51fhIRzwAAAAKVwN1I",
              "createdAt": "2023-11-29T23:01:52Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c51fhIRzwAAAAKVwN6r",
              "createdAt": "2023-11-29T23:01:55Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
