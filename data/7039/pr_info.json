{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 44,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mo271"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 28,
        "closed": true,
        "closedAt": "2023-09-08T22:16:22Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5mD14Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6126443717/job/16630461030)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6126443717/job/16630461214)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6126443717/job/16630460648)",
              "createdAt": "2023-09-08T22:16:21Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mF4yJ",
              "body": "!bench\r\n\r\nI'm just curious if this had any impact on performance -- it turns out `rfl` can sometimes be slower than `by rfl` because of elaboration order (though I believe it can also be faster sometimes, so who knows).",
              "createdAt": "2023-09-10T13:47:31Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mF7rP",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/45ea7201-65ec-414c-8186-af52c436039e) for commit bf3d8b2e5eed36485d70b85e78eaf70f4a01060d.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1deafd08-4267-487c-bbff-56c4b47b5841/to/45ea7201-65ec-414c-8186-af52c436039e) against commit f0c7f6d33d32126d9d8ed45390f390a0646a1e35:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n- ~Mathlib.NumberTheory.ModularForms.JacobiTheta.Basic   instructions     5.5%\n```",
              "createdAt": "2023-09-10T14:35:31Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mGCin",
              "body": "@kmill  \r\nDoes this mean we should roll back the `Mathlib/NumberTheory/ModularForms/JacobiTheta/Basic.lean`?",
              "createdAt": "2023-09-10T16:26:16Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mGDx4",
              "body": "@mo271 I think it's safe leaving it as-is, but if you're really motivated you could investigate if an individual rfl got much slower than the rest. That's only if you're *really* motivated though! ",
              "createdAt": "2023-09-10T16:35:25Z",
              "author": {
                "login": "kmill"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d5a8b028d7bd861a210c006905d083129c1db7f3",
                "additions": 45,
                "deletions": 45,
                "committedDate": "2023-09-08T13:12:02Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bf3d8b2e5eed36485d70b85e78eaf70f4a01060d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-08T16:13:29Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-08T13:24:24Z",
        "deletions": 44,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Free.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Lie/CartanMatrix.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/Grading.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Symmetrized.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Integrals.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Grpd.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Idempotents/Karoubi.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Presheaf.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/PathCategory.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Complex/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/MvPolynomial/Equiv.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Nat/PartENat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/PFunctor/Multivariate/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/PFunctor/Univariate/M.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/QPF/Multivariate/Constructions/Cofix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Seq/Computation.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/BilinearForm.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/CondexpL1.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/CondexpL2.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/FiniteMeasure.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Portmanteau.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/JacobiTheta/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Valuation/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Valuation/ValuationSubring.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/GromovHausdorffRealized.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/toAdditive.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "mo271/by_rfl",
        "headRefOid": "bf3d8b2e5eed36485d70b85e78eaf70f4a01060d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Z4MYq",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gdNo0",
              "body": "bors merge\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T21:07:03Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7039,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gbeXt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T16:11:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gbgeo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-08T16:15:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gdNo0",
              "body": "bors merge\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T21:07:03Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OrpI4",
                    "body": "```suggestion\r\n    ProblemEquation x ↔ cos x ^ 2 + cos (2 * x) ^ 2 + cos (3 * x) ^ 2 = 1 := by rfl\r\n```\r\nor\r\n```suggestion\r\n    ProblemEquation x ↔ cos x ^ 2 + cos (2 * x) ^ 2 + cos (3 * x) ^ 2 = 1 := Iff.rfl\r\n```\r\n`by rfl` can mean all sorts of things, not just `rfl`. This one fails without changing it.",
                    "createdAt": "2023-09-08T16:11:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OrqTR",
                    "body": "yeah, I by far didn't change all occurrences of `by rfl` to `rfl`, but didn't catch this one (presumably, because I only did `lake build` to check and that perhaps does not build the Archiv.) ",
                    "createdAt": "2023-09-08T16:15:08Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: simplify `by rfl`",
        "updatedAt": "2023-09-10T16:35:25Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7039",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d5a8b028d7bd861a210c006905d083129c1db7f3"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gbeXt",
              "createdAt": "2023-09-08T16:11:36Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bf3d8b2e5eed36485d70b85e78eaf70f4a01060d"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gdNo0",
              "createdAt": "2023-09-08T21:07:03Z",
              "body": "bors merge\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wg9JKzwAAAAJnQGir",
              "createdAt": "2023-09-08T21:07:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mD14Z",
              "createdAt": "2023-09-08T22:16:21Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6126443717/job/16630461030)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6126443717/job/16630461214)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6126443717/job/16630460648)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wg9JKzwAAAAJnRfOE",
              "createdAt": "2023-09-08T22:16:22Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wg9JKzwAAAAJnRfQq",
              "createdAt": "2023-09-08T22:16:25Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mF4yJ",
              "createdAt": "2023-09-10T13:47:31Z",
              "body": "!bench\r\n\r\nI'm just curious if this had any impact on performance -- it turns out `rfl` can sometimes be slower than `by rfl` because of elaboration order (though I believe it can also be faster sometimes, so who knows).",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mF7rP",
              "createdAt": "2023-09-10T14:35:31Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/45ea7201-65ec-414c-8186-af52c436039e) for commit bf3d8b2e5eed36485d70b85e78eaf70f4a01060d.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1deafd08-4267-487c-bbff-56c4b47b5841/to/45ea7201-65ec-414c-8186-af52c436039e) against commit f0c7f6d33d32126d9d8ed45390f390a0646a1e35:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n- ~Mathlib.NumberTheory.ModularForms.JacobiTheta.Basic   instructions     5.5%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mGCin",
              "createdAt": "2023-09-10T16:26:16Z",
              "body": "@kmill  \r\nDoes this mean we should roll back the `Mathlib/NumberTheory/ModularForms/JacobiTheta/Basic.lean`?",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mGDx4",
              "createdAt": "2023-09-10T16:35:25Z",
              "body": "@mo271 I think it's safe leaving it as-is, but if you're really motivated you could investigate if an individual rfl got much slower than the rest. That's only if you're *really* motivated though! ",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
