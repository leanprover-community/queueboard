{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 122,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "grunweg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define locally Lipschitz maps and show their basic properties.\r\nIn particular, they are continuous and stable under composition and products.\r\nAs an application, we conclude that C¬π maps are locally Lipschitz.\r\n\r\n--------\r\n\r\nI've gone through the entire file; all API for Lipschitz maps (where this makes sense) has a counterpart for locally Lipschitz maps.\r\n\r\nLeft for the future:\r\n- sum and scalar multiples of a locally Lipschitz function valued in a normed space is locally Lipschitz\r\n(hence, locally Lipschitz functions form a submodule of the ring of continuous functions)\r\n- locally Lipschitz maps are a submonoid of $\\text{End}(\\alpha)$\r\n- both of these also hold for Lipschitz maps (on a set)",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-09-26T14:51:59Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5nJPWz",
              "body": "For the proof of composition, I'm stuck on two sorries related to coercions of subsets. Minimized code:\r\n```\r\nimport Mathlib.Topology.EMetricSpace.Basic\r\nopen Topology\r\nlemma minimized {X Y Z: Type*} [TopologicalSpace X] [TopologicalSpace Y] [TopologicalSpace Z]\r\n    {f : Y ‚Üí Z} {g : X ‚Üí Y} {t: Set X} {u: Set Y}\r\n    {x : X} (ht: t ‚àà ùìù x) (hu: u ‚àà ùìù (g x)) : True /- dummy statement -/ := by\r\n  -- idea: shrink u to g(t); more precisely:\r\n  -- restrict g to t' := t ‚à© g‚Åª¬π(u); the preimage of u under g':=g‚à£t.\r\n  let g' := t.restrict g\r\n  let t' : Set X := ‚Üë(g' ‚Åª¬π' u)\r\n  -- The following is mathematically easy; I'm wrestling with filling the sorries.\r\n  have h‚ÇÅ : t' = t ‚à© g ‚Åª¬π' u := by\r\n    apply Iff.mpr (Set.Subset.antisymm_iff)\r\n    constructor\r\n    ¬∑ intro x hx\r\n      constructor\r\n      ¬∑ exact Set.coe_subset hx\r\n      ¬∑ -- goal: x ‚àà g ‚Åª¬π' u\r\n        -- informal argument: as x ‚àà t', we can apply g' (and land in u by definition), so g'(x)=g(x) ‚àà u\r\n        sorry\r\n    ¬∑ intro x hx\r\n      rcases hx with ‚ü®ht, hgu‚ü©\r\n      -- goal: x ‚àà t'\r\n      -- as x ‚àà t, we can write g(x)=g'(x); the rhs lies in u, so x ‚àà g‚Åª¬π(u) also\r\n      sorry\r\n  sorry -- omitted (have proven this)\r\n```",
              "createdAt": "2023-09-21T23:14:55Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nMD3B",
              "body": "@eric-wieser Thanks for the quick comments. I've made the requested changes.\r\nI'm on the fence about the second: it enables more golfing; in general, I find these golfed proofs somewhat readable in VS Code, but not on github.  I don't know if the latter is aimed for; your call as a maintainer.",
              "createdAt": "2023-09-22T10:52:31Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nMdF2",
              "body": "Fixed the last sorry - courtesy of Alex J. Best on zulip. Thanks!\r\n(There's also an aesop-free version, if you'd prefer me to avoid such a heavy hammer.)",
              "createdAt": "2023-09-22T12:16:23Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ncOFo",
              "body": "awaiting-review",
              "createdAt": "2023-09-26T12:31:16Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ncQnY",
              "body": "bors d+\r\nThanks!",
              "createdAt": "2023-09-26T12:37:54Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ncQoE",
              "body": ":v: grunweg can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-26T12:37:56Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ncnP8",
              "body": "Thanks for the review!\r\nbors r+",
              "createdAt": "2023-09-26T13:33:18Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ndMUm",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6313858883/job/17142863977)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6313858883/job/17142863478)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6313858883/job/17142864906)",
              "createdAt": "2023-09-26T14:51:58Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e6cd7f9132426b5dbbeed97f86ca2bda33a3b534",
                "additions": 121,
                "deletions": 1,
                "committedDate": "2023-09-21T19:27:12Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "22c17bddbe687f58594c2c770b770aefcbef5a3f",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2023-09-21T19:27:41Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9bbc0f1837bc0f3a69c7b9735b07fc010c391648",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2023-09-21T19:27:41Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5eff2f7a62bc3d525951cc5d70d3a411986265ba",
                "additions": 35,
                "deletions": 9,
                "committedDate": "2023-09-21T22:58:12Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6fbf15ffc90b6fdd1361078af24febceb3cb18de",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-21T23:37:12Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "af6f9eb477ca7f6705663d9e6486d1970c96204e",
                "additions": 3,
                "deletions": 6,
                "committedDate": "2023-09-22T10:43:12Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0f2012b215b78af6806b1627cf21ef1861eb418b",
                "additions": 9,
                "deletions": 13,
                "committedDate": "2023-09-22T10:47:26Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2e474480511905e2d8dd9b1715401c01f09e0340",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-09-22T10:51:55Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "153fd090eda22c3e62451183674069957af5c7a3",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-22T10:56:41Z",
                "author": {
                  "name": "grunweg",
                  "email": "grunweg@posteo.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3d81e2fdd73ca13b212bddad7d56c1128ef6d3e9",
                "additions": 10,
                "deletions": 18,
                "committedDate": "2023-09-22T12:12:42Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "83ab480341f81569e7af2528dd68e6f018e3443b",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-09-24T21:01:22Z",
                "author": {
                  "name": "grunweg",
                  "email": "grunweg@posteo.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0ce2603255acccd957752aa919f43a2eccf083bd",
                "additions": 17,
                "deletions": 17,
                "committedDate": "2023-09-24T21:14:46Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f9d2032882c165537b267be3890633afca921c47",
                "additions": 3,
                "deletions": 29,
                "committedDate": "2023-09-26T12:03:55Z",
                "author": {
                  "name": "grunweg",
                  "email": "grunweg@posteo.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "055ddbd61e46ac7118c026bfa9e63832c2a0f033",
                "additions": 10,
                "deletions": 9,
                "committedDate": "2023-09-26T12:23:15Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "66c7ee08c63a9945b8bc2c95d812305fe3f1b4dd",
                "additions": 4,
                "deletions": 3,
                "committedDate": "2023-09-26T12:29:01Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0ab253681cd86561ea481fa30e1af1b330e3799f",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-09-26T12:30:10Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-21T23:09:30Z",
        "deletions": 10,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Calculus/ContDiff.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Lipschitz.lean",
              "additions": 116,
              "deletions": 10
            }
          ]
        },
        "headRefName": "MR_locally_lipschitz",
        "headRefOid": "0ab253681cd86561ea481fa30e1af1b330e3799f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5a8DjG",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5hvCq_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-22T10:55:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iAX79",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-09-26T13:25:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h_vCm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-09-26T12:04:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0Wa6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-09-24T20:02:54Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7314,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5hsMdH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-22T01:09:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hsMxI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-22T01:12:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hsM52",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-22T01:13:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hvCq_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-22T10:55:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hvC-P",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-22T10:56:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0Wa6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-09-24T20:02:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0YIk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-24T21:00:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h0YVP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-24T21:07:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h-fg3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-09-26T09:24:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h_vCm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-09-26T12:04:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h_3n3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-26T12:23:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h_40d",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-26T12:25:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h_5Vk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-26T12:27:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iACrO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-26T12:46:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iAEol",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-26T12:50:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iAX79",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-09-26T13:25:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iAcii",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-09-26T13:33:10Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pf5ZB",
                    "body": "```suggestion\r\n/-- `f : Œ± ‚Üí Œ≤` is called **locally Lipschitz continuous** iff every point `x`\r\n```\r\nsince there is no `‚àà` in the definition, and there you used `x` not `p` (which matches most of the file)",
                    "createdAt": "2023-09-22T01:09:32Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pf5oR",
                    "body": "perhaps\r\n```suggestion\r\nprotected lemma _root_.LipschitzWith.locally {K : ‚Ñù‚â•0} (hf : LipschitzWith K f) : LocallyLipschitz f := by\r\n```\r\nto enable dot notation as `LipschitzWith.id.locally` below.",
                    "createdAt": "2023-09-22T01:12:04Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pf5ux",
                    "body": "This might be a good exercise in golfing; as nothing interesting is happening here, you can probably get this down to a single line in term mode.",
                    "createdAt": "2023-09-22T01:13:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Phqa_",
                    "body": "Angle brackets nest implicitly, so you can reduce this to:\r\n```suggestion\r\n  fun _ ‚Ü¶ ‚ü®K, univ, Filter.univ_mem, lipschitzOn_univ.mpr hf‚ü©\r\n```",
                    "createdAt": "2023-09-22T10:55:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PhqnW",
                    "body": ":bulb: :exploding_head: Wow, that's even nicer!",
                    "createdAt": "2023-09-22T10:56:29Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlhkD",
                    "body": "```suggestion\r\nuniformly continuous, and that locally Lipschitz functions are continuous.\r\n```",
                    "createdAt": "2023-09-24T19:52:30Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Plhmq",
                    "body": "Could you move that either with the other definitions at the top of the file, or just before lemmas about `LocallyLipschitz`?",
                    "createdAt": "2023-09-24T19:54:02Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pljqr",
                    "body": "Moved to the top. (And bolded the definitions in the other two docstrings, for consistency.)",
                    "createdAt": "2023-09-24T21:07:15Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PlhtV",
                    "body": "```suggestion\r\nprotected lemma _root_.LipschitzWith.locallyLipschitz {K : ‚Ñù‚â•0} (hf : LipschitzWith K f) :\r\n```\r\n\r\nAlthough I personally like this name, this doesn't really match the current conventions (e.g we have [Continuous.continuousOn](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/ContinuousOn.html#Continuous.continuousOn), not `Continuous.on`). ",
                    "createdAt": "2023-09-24T19:57:14Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pljc3",
                    "body": "Sounds logical, I'll change it.\r\n(One argument in favour of this notation is that continuousOn is more readable in dot notation. From just `.on`, I could hardly tell anything.)",
                    "createdAt": "2023-09-24T21:00:01Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pr2q7",
                    "body": "```suggestion\r\n  refine ‚ü®Kf * Kg, t ‚à© g‚Åª¬π' u, inter_mem ht (hg.continuous.continuousAt hu), ?_‚ü© \r\n  exact hfL.comp (hgL.mono (inter_subset_left _ _))\r\n    ((mapsTo_preimage g u).mono_left (inter_subset_right _ _))\r\n```\r\nWe have essentially already everything in the API, it's just a matter of finding the right blocks and putting them together.",
                    "createdAt": "2023-09-26T09:13:22Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pr4EQ",
                    "body": "Could you instead extract a lemma `LipschitzOnWith.prod` (modelled on `LipschitzWith.prod`) and then use it here as a one-liner (modelled on what I did for the `comp` lemma)?",
                    "createdAt": "2023-09-26T09:16:50Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PsuX0",
                    "body": "Sure, done.",
                    "createdAt": "2023-09-26T12:23:27Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pr5dZ",
                    "body": "I would rather expect `LocallyLipschitz.mul` to mean the following: if `f` and `g` are two locally Lipschitz functions valued in the real line (or more generally any space with a multiplication and a distance that interact nicely), then their pointwise product is also locally Lipschitz. Same thing for `pow` below. Maybe rename your lemmas to `mul_end` and `pow_end` if you really need them?",
                    "createdAt": "2023-09-26T09:20:51Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PsvKX",
                    "body": "(I don't *need* these lemmas for any application. However, I thought it fitting to add them, given that analogous lemmas exist for LipschitzWith.)",
                    "createdAt": "2023-09-26T12:25:58Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Psvep",
                    "body": "I have renamed the lemmas accordingly. I have also renamed the lemmas on LipschitzWith. (Having pow and mul mean one thing for Lipschitz functions and another for locally Lipschitz ones seems like the worst of all worlds.)",
                    "createdAt": "2023-09-26T12:27:04Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ps1JV",
                    "body": "Thinking again, I'm on the fence about this: on one hand, it makes perfect sense to reuse this lemma `LocallyLipschitz.mul_end` and to reserve `LocallyLipschitz.mul` for the result you describe.\r\n\r\nOn the other hand, the point-wise lemma `LocallyLipschitz.mul` is false for general Lipschitz functions (it requires boundedness): renaming would keep the name `LipschitzWith.mul` free, which we couldn't fill satisfactorily.",
                    "createdAt": "2023-09-26T12:46:18Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ps2Yc",
                    "body": "To summarize, I see three or four options.\r\n(A) Keep this lemma name. Counterargument: might be surprising; would need a rename when the `mul` result is added.\r\n(B) Rename `LocallyLipschitz.mul`, but keep `LipschitzWith.mul`. Counter-argument. Is inconsistent.\r\n(C) Rename also `LipschitzWith.mul`. This *is* consistent, but means `LipschitzWith.mul` cannot be filled without extra hypotheses. (Update: the build passing shows that `LipschitzWith.mul` is currently unused - which might be evidence this is ok.)\r\n(D) Delete this lemma. Not sure if this makes sense.\r\n\r\n@sgouezel What do you think?",
                    "createdAt": "2023-09-26T12:50:18Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PtCeE",
                    "body": "I definitely want to keep `LocallyLipschitz.mul` for the fact that the pointwise product of locally Lipschitz functions is locally Lispchitz (this would match all the other lemmas `Continuous.mul`, `Differentiable.mul` and so on). Accordingly, I would like `LipschitzWith.mul` to say something like: if two functions are Lipschitz and bounded, then their pointwise product is Lipschitz.\r\n\r\nSo I see two reasonable options:\r\n(1): use `LipschitzWith.mul_end` and `LocallyLipschitzWith.mul_end`.\r\n(2): delete these lemmas.\r\n\r\n(I don't know why these lemmas were introduced in the first place -- we don't have similar lemmas for other categories. Are they used anywhere in the library?)\r\n\r\nYour choice between (1) and (2). I would do (1) because it is nicer to the person who introduced these lemmas, but do as you prefer.",
                    "createdAt": "2023-09-26T13:25:23Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PtFRC",
                    "body": "Makes sense. (I didn't check either why these lemmas were introduced.) I prefer (1) as well, and have thusly approved this PR.",
                    "createdAt": "2023-09-26T13:33:10Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pr6hR",
                    "body": "```suggestion\r\n\r\nend Real\r\n```",
                    "createdAt": "2023-09-26T09:24:23Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PspC3",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  refine ‚ü®Kf * Kg, t ‚à© g‚Åª¬π' u, inter_mem ht (hg.continuous.continuousAt hu), ?_‚ü©\n```\n",
                    "createdAt": "2023-09-26T12:04:26Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: locally Lipschitz maps",
        "updatedAt": "2023-09-26T14:52:04Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7314",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e6cd7f9132426b5dbbeed97f86ca2bda33a3b534"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "22c17bddbe687f58594c2c770b770aefcbef5a3f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9bbc0f1837bc0f3a69c7b9735b07fc010c391648"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5eff2f7a62bc3d525951cc5d70d3a411986265ba"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJuWEbG",
              "createdAt": "2023-09-21T23:09:30Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJuWEbO",
              "createdAt": "2023-09-21T23:09:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJuWEbZ",
              "createdAt": "2023-09-21T23:09:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJuWEbg",
              "createdAt": "2023-09-21T23:09:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nJPWz",
              "createdAt": "2023-09-21T23:14:55Z",
              "body": "For the proof of composition, I'm stuck on two sorries related to coercions of subsets. Minimized code:\r\n```\r\nimport Mathlib.Topology.EMetricSpace.Basic\r\nopen Topology\r\nlemma minimized {X Y Z: Type*} [TopologicalSpace X] [TopologicalSpace Y] [TopologicalSpace Z]\r\n    {f : Y ‚Üí Z} {g : X ‚Üí Y} {t: Set X} {u: Set Y}\r\n    {x : X} (ht: t ‚àà ùìù x) (hu: u ‚àà ùìù (g x)) : True /- dummy statement -/ := by\r\n  -- idea: shrink u to g(t); more precisely:\r\n  -- restrict g to t' := t ‚à© g‚Åª¬π(u); the preimage of u under g':=g‚à£t.\r\n  let g' := t.restrict g\r\n  let t' : Set X := ‚Üë(g' ‚Åª¬π' u)\r\n  -- The following is mathematically easy; I'm wrestling with filling the sorries.\r\n  have h‚ÇÅ : t' = t ‚à© g ‚Åª¬π' u := by\r\n    apply Iff.mpr (Set.Subset.antisymm_iff)\r\n    constructor\r\n    ¬∑ intro x hx\r\n      constructor\r\n      ¬∑ exact Set.coe_subset hx\r\n      ¬∑ -- goal: x ‚àà g ‚Åª¬π' u\r\n        -- informal argument: as x ‚àà t', we can apply g' (and land in u by definition), so g'(x)=g(x) ‚àà u\r\n        sorry\r\n    ¬∑ intro x hx\r\n      rcases hx with ‚ü®ht, hgu‚ü©\r\n      -- goal: x ‚àà t'\r\n      -- as x ‚àà t, we can write g(x)=g'(x); the rhs lies in u, so x ‚àà g‚Åª¬π(u) also\r\n      sorry\r\n  sorry -- omitted (have proven this)\r\n```",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6fbf15ffc90b6fdd1361078af24febceb3cb18de"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hsMdH",
              "createdAt": "2023-09-22T01:09:32Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hsMxI",
              "createdAt": "2023-09-22T01:12:04Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hsM52",
              "createdAt": "2023-09-22T01:13:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "af6f9eb477ca7f6705663d9e6486d1970c96204e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0f2012b215b78af6806b1627cf21ef1861eb418b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2e474480511905e2d8dd9b1715401c01f09e0340"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nMD3B",
              "createdAt": "2023-09-22T10:52:31Z",
              "body": "@eric-wieser Thanks for the quick comments. I've made the requested changes.\r\nI'm on the fence about the second: it enables more golfing; in general, I find these golfed proofs somewhat readable in VS Code, but not on github.  I don't know if the latter is aimed for; your call as a maintainer.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hvCq_",
              "createdAt": "2023-09-22T10:55:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "153fd090eda22c3e62451183674069957af5c7a3"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Oigrl",
              "createdAt": "2023-09-22T11:09:38Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Z8l5Y",
                "title": "feat: define measure zero subsets of a manifold",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7076"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3d81e2fdd73ca13b212bddad7d56c1128ef6d3e9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nMdF2",
              "createdAt": "2023-09-22T12:16:23Z",
              "body": "Fixed the last sorry - courtesy of Alex J. Best on zulip. Thanks!\r\n(There's also an aesop-free version, if you'd prefer me to avoid such a heavy hammer.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xuDV5zwAAAAJurOgG",
              "createdAt": "2023-09-22T12:16:31Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h0Wa6",
              "createdAt": "2023-09-24T19:52:30Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "83ab480341f81569e7af2528dd68e6f018e3443b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0ce2603255acccd957752aa919f43a2eccf083bd"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5xuDV5zwAAAAJvOVyD",
              "createdAt": "2023-09-24T21:15:31Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h-fg3",
              "createdAt": "2023-09-26T09:13:22Z",
              "body": "",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xuDV5zwAAAAJwNq93",
              "createdAt": "2023-09-26T09:29:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJwNq9-",
              "createdAt": "2023-09-26T09:29:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f9d2032882c165537b267be3890633afca921c47"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h_vCm",
              "createdAt": "2023-09-26T12:04:26Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "055ddbd61e46ac7118c026bfa9e63832c2a0f033"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "66c7ee08c63a9945b8bc2c95d812305fe3f1b4dd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0ab253681cd86561ea481fa30e1af1b330e3799f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ncOFo",
              "createdAt": "2023-09-26T12:31:16Z",
              "body": "awaiting-review",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xuDV5zwAAAAJwVX2e",
              "createdAt": "2023-09-26T12:31:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJwVX52",
              "createdAt": "2023-09-26T12:31:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ncQnY",
              "createdAt": "2023-09-26T12:37:54Z",
              "body": "bors d+\r\nThanks!",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ncQoE",
              "createdAt": "2023-09-26T12:37:56Z",
              "body": ":v: grunweg can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xuDV5zwAAAAJwVpyr",
              "createdAt": "2023-09-26T12:38:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xuDV5zwAAAAJwVp12",
              "createdAt": "2023-09-26T12:38:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ncnP8",
              "createdAt": "2023-09-26T13:33:18Z",
              "body": "Thanks for the review!\r\nbors r+",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ndMUm",
              "createdAt": "2023-09-26T14:51:58Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6313858883/job/17142863977)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6313858883/job/17142863478)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6313858883/job/17142864906)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5xuDV5zwAAAAJwcQ0F",
              "createdAt": "2023-09-26T14:51:59Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5xuDV5zwAAAAJwcRFg",
              "createdAt": "2023-09-26T14:52:04Z"
            }
          ]
        }
      }
    }
  }
}
