{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 216,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Rename `relindex` to `relIndex` and `FiniteIndex.finiteIndex` to `FiniteIndex.index_ne_zero`\n\nFrom FLT\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> Mathlib.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 9,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6W5nbm",
              "body": "### PR summary [abb219843a](https://github.com/leanprover-community/mathlib4/pull/19872/commits/abb219843a715ee1b7f0edeb506c8f4d1127ff16)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.AddSubgroup.relIndex_toSubgroup`\n`+ exists_pow_mem_of_relIndex_ne_zero`\n`+ index_eq_zero_of_relIndex_eq_zero`\n`+ inf_relIndex_left`\n`+ inf_relIndex_right`\n`+ ncard_block_eq_relIndex`\n`+ pow_mem_of_relIndex_ne_zero_of_dvd`\n`+ relIndex`\n`+ relIndex_bot_left`\n`+ relIndex_bot_left_eq_card`\n`+ relIndex_bot_right`\n`+ relIndex_comap`\n`+ relIndex_dvd_index_of_le`\n`+ relIndex_dvd_index_of_normal`\n`+ relIndex_dvd_of_le_left`\n`+ relIndex_eq_one`\n`+ relIndex_eq_zero_of_le_left`\n`+ relIndex_eq_zero_of_le_right`\n`+ relIndex_iInf_le`\n`+ relIndex_iInf_ne_zero`\n`+ relIndex_inf_le`\n`+ relIndex_inf_mul_relIndex`\n`+ relIndex_inf_ne_zero`\n`+ relIndex_ker`\n`+ relIndex_le_of_le_left`\n`+ relIndex_le_of_le_right`\n`+ relIndex_mul_index`\n`+ relIndex_mul_relIndex`\n`+ relIndex_ne_zero_trans`\n`+ relIndex_self`\n`+ relIndex_subgroupOf`\n`+ relIndex_sup_left`\n`+ relIndex_sup_right`\n`+ relIndex_toAddSubgroup`\n`+ relIndex_top_left`\n`+ relIndex_top_right`\n`- relindex_bot_left_eq_card`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-10T13:48:03Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YBf-N",
              "body": "In what sense is this PR necessary for FLT? \r\n\r\nFWIW, I think this PR is symptomatic of a lot of things that are wrong with the currently Mathlib development model. It has zero mathematical content. It's a huge sweeping change which would mean any other PR's touching those files would almost certainly start conflicting and have to be tediously rebased. The deprecations reduce the impact on PRs / other projects that just use these lemmas, but don't reduce it to zero, particularly since you are changing names of structure fields and there's not a deprecation system for that. Finally, the renaming of \"finite_index\" to \"index_ne_zero\" actively conceals the intended mathematical meaning, because the true value of the index lives in N+ \\cup \\infty, and the fact that we re-assign it to 0 is a junk value, a mere implementation detail.\r\n\r\nMy personal view is that this PR should be closed un-merged, and I would like to ask its author to please avoid making too many more PRs of a similar nature in future.",
              "createdAt": "2024-12-18T07:11:21Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YG4RC",
              "body": "> If we go through with this, we should probably also rename `IntermediateField.relrank` and `Subfield.relrank`.\r\n\r\nI think this is probably an argument that `relIndex`/`relRank` should be renamed in a separate PR to `finiteIndex`.",
              "createdAt": "2024-12-18T17:52:28Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YHRLV",
              "body": "Something else to consider is whether the existing `relrank` is more consistent with `Module.finrank`.",
              "createdAt": "2024-12-18T18:50:01Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6cIJxG",
              "body": "I personally prefer `finiteIndex` over `index_ne_zero` as the former reveals the intended semantics.",
              "createdAt": "2025-01-28T15:48:33Z",
              "author": {
                "login": "madvorak"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "49439618f1fc2ed9d601a095ca9857a229def375",
                "additions": 139,
                "deletions": 139,
                "committedDate": "2025-01-08T19:41:41Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "abb219843a715ee1b7f0edeb506c8f4d1127ff16",
                "additions": 77,
                "deletions": 0,
                "committedDate": "2025-01-08T19:41:41Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhfgqw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677932518/job/35334381739"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMNAA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839228/job/35334065408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMS9A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839793/job/35334066932"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMSlw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839775/job/35334066839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMNWg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839227/job/35334065498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMTNQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839757/job/35334066997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMMCQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839227/job/35334065161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMLdA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839228/job/35334065012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMRxg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839757/job/35334066630"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhMOWw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839228/job/35334065755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhq-PA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839227/job/35334569532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhNChg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35334079110"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIOhNs2w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19872&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-10T13:47:10Z",
        "deletions": 139,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/FieldTheory/Relrank.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/GroupTheory/Commensurable.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/CosetCover.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/GroupTheory/GroupAction/Blocks.lean",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": "Mathlib/GroupTheory/Index.lean",
              "additions": 183,
              "deletions": 108
            },
            {
              "path": "Mathlib/GroupTheory/Schreier.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/GroupTheory/SchurZassenhaus.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/GroupTheory/Sylow.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Norm/AbsNorm.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "rel_index",
        "headRefOid": "abb219843a715ee1b7f0edeb506c8f4d1127ff16",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6EtXwj",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABvIB2dg",
              "color": "1D2C57",
              "name": "FLT"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6VnC4T",
              "body": "If we go through with this, we should probably also rename `IntermediateField.relrank` and `Subfield.relrank`.",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2024-12-17T20:29:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VwWUX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-18T17:39:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19872,
        "potentialMergeCommit": {
          "oid": "7ba9fd7cae0070ab3f846a1c9d2226102dc065f1"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "harahu"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM0Mzk2ODg=",
                "login": "loefflerd"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6VnC4T",
              "body": "If we go through with this, we should probably also rename `IntermediateField.relrank` and `Subfield.relrank`.",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2024-12-17T20:29:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VwWUX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-18T17:39:28Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5wsH1y",
                    "body": "Please add a deprecation for this and the one below. As @loefflerd points out, it is not possible to deprecate `{ finiteIndex := _ }` syntax, but you can at least keep `FiniteIndex.finiteIndex` around as an alias.",
                    "createdAt": "2024-12-18T17:39:28Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjEzMzM5MDE3",
              "login": "tb65536"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhfgqw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677932518/job/35334381739"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMNAA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839228/job/35334065408"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMS9A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839793/job/35334066932"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMSlw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839775/job/35334066839"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMNWg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839227/job/35334065498"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMTNQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839757/job/35334066997"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMMCQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839227/job/35334065161"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMLdA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839228/job/35334065012"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMRxg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839757/job/35334066630"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhMOWw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839228/job/35334065755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhq-PA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12677839227/job/35334569532"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhNChg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35334079110"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIOhNs2w",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19872&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(GroupTheory/Index): fix names",
        "updatedAt": "2025-01-28T15:48:34Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19872",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6iuyPfzwAAAAOh53AL",
              "createdAt": "2024-12-10T13:47:30Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6iuyPfzwAAAAOh53AX",
              "createdAt": "2024-12-10T13:47:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6iuyPfzwAAAAOh53Ae",
              "createdAt": "2024-12-10T13:47:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABvIB2dg",
                "name": "FLT"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6W5nbm",
              "createdAt": "2024-12-10T13:48:03Z",
              "body": "### PR summary [abb219843a](https://github.com/leanprover-community/mathlib4/pull/19872/commits/abb219843a715ee1b7f0edeb506c8f4d1127ff16)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.AddSubgroup.relIndex_toSubgroup`\n`+ exists_pow_mem_of_relIndex_ne_zero`\n`+ index_eq_zero_of_relIndex_eq_zero`\n`+ inf_relIndex_left`\n`+ inf_relIndex_right`\n`+ ncard_block_eq_relIndex`\n`+ pow_mem_of_relIndex_ne_zero_of_dvd`\n`+ relIndex`\n`+ relIndex_bot_left`\n`+ relIndex_bot_left_eq_card`\n`+ relIndex_bot_right`\n`+ relIndex_comap`\n`+ relIndex_dvd_index_of_le`\n`+ relIndex_dvd_index_of_normal`\n`+ relIndex_dvd_of_le_left`\n`+ relIndex_eq_one`\n`+ relIndex_eq_zero_of_le_left`\n`+ relIndex_eq_zero_of_le_right`\n`+ relIndex_iInf_le`\n`+ relIndex_iInf_ne_zero`\n`+ relIndex_inf_le`\n`+ relIndex_inf_mul_relIndex`\n`+ relIndex_inf_ne_zero`\n`+ relIndex_ker`\n`+ relIndex_le_of_le_left`\n`+ relIndex_le_of_le_right`\n`+ relIndex_mul_index`\n`+ relIndex_mul_relIndex`\n`+ relIndex_ne_zero_trans`\n`+ relIndex_self`\n`+ relIndex_subgroupOf`\n`+ relIndex_sup_left`\n`+ relIndex_sup_right`\n`+ relIndex_toAddSubgroup`\n`+ relIndex_top_left`\n`+ relIndex_top_right`\n`- relindex_bot_left_eq_card`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iuyPfzwAAAAOm20G1",
              "createdAt": "2024-12-17T11:09:47Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6iuyPfzwAAAAOnFS2_",
              "createdAt": "2024-12-17T15:39:15Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6iuyPfzwAAAAOnFTMo",
              "createdAt": "2024-12-17T15:39:21Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM0Mzk2ODg=",
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6VnC4T",
              "createdAt": "2024-12-17T20:29:50Z",
              "body": "If we go through with this, we should probably also rename `IntermediateField.relrank` and `Subfield.relrank`.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YBf-N",
              "createdAt": "2024-12-18T07:11:21Z",
              "body": "In what sense is this PR necessary for FLT? \r\n\r\nFWIW, I think this PR is symptomatic of a lot of things that are wrong with the currently Mathlib development model. It has zero mathematical content. It's a huge sweeping change which would mean any other PR's touching those files would almost certainly start conflicting and have to be tediously rebased. The deprecations reduce the impact on PRs / other projects that just use these lemmas, but don't reduce it to zero, particularly since you are changing names of structure fields and there's not a deprecation system for that. Finally, the renaming of \"finite_index\" to \"index_ne_zero\" actively conceals the intended mathematical meaning, because the true value of the index lives in N+ \\cup \\infty, and the fact that we re-assign it to 0 is a junk value, a mere implementation detail.\r\n\r\nMy personal view is that this PR should be closed un-merged, and I would like to ask its author to please avoid making too many more PRs of a similar nature in future.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6VwWUX",
              "createdAt": "2024-12-18T17:39:28Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YG4RC",
              "createdAt": "2024-12-18T17:52:28Z",
              "body": "> If we go through with this, we should probably also rename `IntermediateField.relrank` and `Subfield.relrank`.\r\n\r\nI think this is probably an argument that `relIndex`/`relRank` should be renamed in a separate PR to `finiteIndex`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YHRLV",
              "createdAt": "2024-12-18T18:50:01Z",
              "body": "Something else to consider is whether the existing `relrank` is more consistent with `Module.finrank`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6iuyPfzwAAAAOuLSsP",
              "createdAt": "2025-01-03T12:30:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iuyPfzwAAAAOuqizr",
              "createdAt": "2025-01-04T11:05:18Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6iuyPfzwAAAAOuqi-x",
              "createdAt": "2025-01-04T11:05:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6iuyPfzwAAAAOvsqye",
              "createdAt": "2025-01-07T01:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "49439618f1fc2ed9d601a095ca9857a229def375"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "abb219843a715ee1b7f0edeb506c8f4d1127ff16"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iuyPfzwAAAAOxQ3D1",
              "createdAt": "2025-01-08T19:41:49Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6iuyPfzwAAAAOxRHdI",
              "createdAt": "2025-01-08T19:48:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6cIJxG",
              "createdAt": "2025-01-28T15:48:33Z",
              "body": "I personally prefer `finiteIndex` over `index_ne_zero` as the former reveals the intended semantics.",
              "author": {
                "login": "madvorak"
              }
            }
          ]
        }
      }
    }
  }
}
