{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 23,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Two pairs of the form `foo` and `foo'`, where `foo'` is the simp lemma (and hence used in many `simp only`s) and `foo` is not used at all.\r\n\r\nSwap the primes, so that when it is time (now!) to upstream the lemma we actually use, it doesn't need to have a prime...\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 9,
        "closed": true,
        "closedAt": "2023-10-17T07:52:39Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5pPsDr",
              "body": "The renamed lemmas have by now already landed in Std, and so this PR is now holding up bumping Std\r\n\r\nWe need to either:\r\n* merge this\r\n* have someone volunteer to take this PR over, and do the currently pending Std bump\r\n\r\n",
              "createdAt": "2023-10-17T05:58:56Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pPsUy",
              "body": "Can you link to the Std PR?",
              "createdAt": "2023-10-17T06:00:07Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pPtBY",
              "body": "https://github.com/leanprover/std4/pull/298",
              "createdAt": "2023-10-17T06:03:02Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pPuZS",
              "body": "bors d=@digama0\r\n\r\n(Since they merged the std PR)",
              "createdAt": "2023-10-17T06:08:50Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pPuZz",
              "body": ":v: digama0 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-10-17T06:08:52Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pPyai",
              "body": "At first I agreed with Eric that the new prime placement is wrong, but on further review the original `forall_apply_eq_imp_iff` is just `forall_congr` applied to simpler lemma, while `forall_apply_eq_imp_iff'` is the actually interesting one. I'm sure that neither of these lemmas is used by hand, so in the interest of keeping things flowing I will just merge this rather than do another round of Std PRs.\r\n\r\nbors r+",
              "createdAt": "2023-10-17T06:24:52Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pQPoq",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6543355572/job/17767797284)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6543355572/job/17767796814)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6543355572/job/17767796993)",
              "createdAt": "2023-10-17T07:52:35Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a71ac181692c189dcca13466d0d178f4e7c1f43d",
                "additions": 23,
                "deletions": 23,
                "committedDate": "2023-10-16T08:08:07Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-16T08:09:22Z",
        "deletions": 23,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/NormedSpace/lpSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Card.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Determinant.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Polynomial.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Basic.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/MeasureTheory/Covering/BesicovitchVectorSpace.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Order/OmegaCompletePartialOrder.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Probability/Kernel/Disintegration.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Order/LiminfLimsup.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "swap_primes",
        "headRefOid": "a71ac181692c189dcca13466d0d178f4e7c1f43d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5c3lVF",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
              "color": "acff3f",
              "name": "easy"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kODfz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-17T05:46:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kO6sC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-10-17T08:00:30Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7705,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kJ89C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-16T15:33:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kNAgu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-17T00:21:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kN2Vs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-17T04:46:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kN2vu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-17T04:47:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kN75i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-17T05:09:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kOBCA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-17T05:35:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kODXZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-17T05:45:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kODfz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-17T05:46:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kOFBV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-17T05:52:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kO6sC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-10-17T08:00:30Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RHTJD",
                    "body": "Is there a reason these can't both be `simp`?",
                    "createdAt": "2023-10-16T15:33:00Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJQZw",
                    "body": "I'd really prefer that PR reviews are not routinely a place for exploring further unrelated changes. It bogs everything down.\r\n\r\n\r\n\r\n",
                    "createdAt": "2023-10-17T00:21:59Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJuAe",
                    "body": "I don't think this is unrelated. You're saying \"let's rename the simp lemmas to be the unprimed ones (and upstream only those?)\", and I'm asking \"why not make the unprimed ones be simp (and upstream all four)\". If we do one, then we shouldn't do the other.",
                    "createdAt": "2023-10-17T04:46:06Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJuKQ",
                    "body": "(clearly I should have expressed that motivation in my previous comment though, sorry!)",
                    "createdAt": "2023-10-17T04:47:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJxLy",
                    "body": "I think my point remains. There are three things that could happen here:\r\n\r\n1. The lemmas I need get upstreamed (must happen)\r\n2. The primes get swapped (convenient, because we don't actually use the unprimed lemmas, and I'm happy to do it as it makes upstreaming easier without the primes)\r\n3. We add some additional simp attributes.\r\n\r\nI have no interest in 3. If someone wants 3, they can do it! Just because I want to change this file, we don't need to have a discussion about other possible changes nearby.\r\n\r\nAdding `simp` is \"related\" in the sense that it would touch the same lines as I'm touching here, but that is just a recipe for never getting anything done.\r\n\r\nAdding `simp` is not related at all to what I am trying to get done.",
                    "createdAt": "2023-10-17T05:09:48Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ0sZ",
                    "body": "Maybe I misunderstood; are you upstreaming all four lemmas or just two?",
                    "createdAt": "2023-10-17T05:35:07Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ2Ny",
                    "body": "My hesitation here is that without more context, the primes already look the right way around; the primed lemma is in a sense \"weirder\" than the unprimed one. I'm not sold on the motivation \"the primed one should be the main one because simp uses it\", and especially not without knowing why we have the assymmetry.",
                    "createdAt": "2023-10-17T05:45:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ2Te",
                    "body": "My guess is that the other lemma is not simpNF because another simpler `simp` lemma already handles the case with the binders in the \"right\" order",
                    "createdAt": "2023-10-17T05:46:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ3Rt",
                    "body": "I have no interest in the lemmas that are currently unprimed, and no intention of upstreaming them.\r\n\r\nAs far as I'm concerned deleting them from Mathlib would be a fine option.",
                    "createdAt": "2023-10-17T05:52:30Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RKaui",
                    "body": "I don't understand this discussion: the other lemma is proved by simp, so a simp attribute on it would be useless.",
                    "createdAt": "2023-10-17T08:00:30Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: swap primes on forall_apply_eq_imp_iff",
        "updatedAt": "2023-10-17T08:00:30Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7705",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a71ac181692c189dcca13466d0d178f4e7c1f43d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z6K-EzwAAAAJ7fZ0X",
              "createdAt": "2023-10-16T08:09:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z6K-EzwAAAAJ7fZ0h",
              "createdAt": "2023-10-16T08:09:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z6K-EzwAAAAJ7fZ0n",
              "createdAt": "2023-10-16T08:09:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z6K-EzwAAAAJ7jFor",
              "createdAt": "2023-10-16T09:31:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kJ89C",
              "createdAt": "2023-10-16T15:33:00Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pPsDr",
              "createdAt": "2023-10-17T05:58:56Z",
              "body": "The renamed lemmas have by now already landed in Std, and so this PR is now holding up bumping Std\r\n\r\nWe need to either:\r\n* merge this\r\n* have someone volunteer to take this PR over, and do the currently pending Std bump\r\n\r\n",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pPsUy",
              "createdAt": "2023-10-17T06:00:07Z",
              "body": "Can you link to the Std PR?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pPtBY",
              "createdAt": "2023-10-17T06:03:02Z",
              "body": "https://github.com/leanprover/std4/pull/298",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pPuZS",
              "createdAt": "2023-10-17T06:08:50Z",
              "body": "bors d=@digama0\r\n\r\n(Since they merged the std PR)",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pPuZz",
              "createdAt": "2023-10-17T06:08:52Z",
              "body": ":v: digama0 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z6K-EzwAAAAJ8MmlC",
              "createdAt": "2023-10-17T06:09:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z6K-EzwAAAAJ8MmmW",
              "createdAt": "2023-10-17T06:09:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pPyai",
              "createdAt": "2023-10-17T06:24:52Z",
              "body": "At first I agreed with Eric that the new prime placement is wrong, but on further review the original `forall_apply_eq_imp_iff` is just `forall_congr` applied to simpler lemma, while `forall_apply_eq_imp_iff'` is the actually interesting one. I'm sure that neither of these lemmas is used by hand, so in the interest of keeping things flowing I will just merge this rather than do another round of Std PRs.\r\n\r\nbors r+",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z6K-EzwAAAAJ8NEsh",
              "createdAt": "2023-10-17T06:25:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pQPoq",
              "createdAt": "2023-10-17T07:52:35Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6543355572/job/17767797284)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6543355572/job/17767796814)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6543355572/job/17767796993)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5z6K-EzwAAAAJ8QeLN",
              "createdAt": "2023-10-17T07:52:39Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5z6K-EzwAAAAJ8QeaD",
              "createdAt": "2023-10-17T07:52:44Z"
            }
          ]
        }
      }
    }
  }
}
