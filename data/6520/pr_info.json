{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 121,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            }
          ]
        },
        "author": {
          "login": "dagurtomas"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We define more algebraic versions of `LocallyConstant.comap` and evaluation of locally constant maps, continuing the work of #6396. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-18T23:14:11Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5j0byh",
              "body": "I'm about to make a ton of suggestions which are going to look a bit messy but are actually following very simple principles. I should probably have made some of these suggestions on your previous PR, but seeing the full hierarchy makes them more obvious. \r\n\r\n1. in general it's better not to use the `.map_add'` fields, and instead apply the general [map_add](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/Group.html#map_add) that should subsume all of them.\r\n2. Lots of structures build on each other (for example [RingHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/Ring.html#RingHom) extends [MonoidHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/Group.html#MonoidHom)), and you can define an element of these bigger structures either in a \"flat\" way like you do (going back to the `toFun` field, and reproving all the properties of the substructures) or by specifying directly the substructures. This one is particularly useful when you already have a name for it, and is usually cleaner.\r\n3. Now one thing you may notice with the suggestion 2 is that, if each level of a nested structure is a definition, that means that you have to unfold all of these to get to the actual function. This is where `@[simps]` gets handy by providing lemmas taking care of all the unfolding.\r\n\r\nYou may already know some or even all of this, but I felt bad not explaining the reasons behind my suggestions.",
              "createdAt": "2023-08-11T12:30:28Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j1m7f",
              "body": "I see, thanks! The reason I wanted to define the `toFun` explicitly for all of these was that it was so annoying to have to unfold the nested definitions when I wanted to access the underlying function. But if `@[simps]` takes care of that, I agree this is better. ",
              "createdAt": "2023-08-11T15:46:40Z",
              "author": {
                "login": "dagurtomas"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kYl7T",
              "body": ":v: dagurtomas can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-18T16:38:49Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kZvSO",
              "body": "bors r+",
              "createdAt": "2023-08-18T21:50:43Z",
              "author": {
                "login": "dagurtomas"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kZ-4M",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5907386034/job/16025245407)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5907386034/job/16025245568)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5907386034/job/16025245709)",
              "createdAt": "2023-08-18T23:14:10Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9156ca3a6c416686d926267f1cb365168785e58f",
                "additions": 108,
                "deletions": 7,
                "committedDate": "2023-08-11T10:29:52Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "aac70886a7e8f3e255d8c6bc9f4452163f0f9988",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-08-11T10:34:13Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a276591f738fc616a3eb76c0946eda1d0536b6ea",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:47:40Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fee82e7fca67adc93651719d681dd95a21246ff6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:47:51Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5f07d8022bce8b7d5440f6f619921d5c899ba789",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:48:11Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "27ac42f5559fba0ab80db30e7aad2a1e119bdbaf",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:48:20Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ded9e8e01098a0961a67182416546ffc142b5405",
                "additions": 4,
                "deletions": 6,
                "committedDate": "2023-08-11T15:48:32Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cbf648df334e82c9e622ca6b682b5467f521ea6d",
                "additions": 4,
                "deletions": 7,
                "committedDate": "2023-08-11T15:48:43Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "95da0e2406cbbe7748d8f9360bb8d24aac1d8c53",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:48:58Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "38c4a3215be845d41423d9182e2b53866938bcb9",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:49:11Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "95dcf36ac3bb6bc2cf002c8f1081a3129bf0385e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:49:21Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "32eb082931ebd8c972d5c88e0a1f01ac72918716",
                "additions": 4,
                "deletions": 5,
                "committedDate": "2023-08-11T15:50:01Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b52111ea68248c535a821d203de99eddf70c227b",
                "additions": 4,
                "deletions": 7,
                "committedDate": "2023-08-11T15:50:26Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b40393d61650becbd984754fb380e17d7bbaab30",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T15:50:44Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d3bf5568903e10342e562b328445e4596d6f3841",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-08-11T15:50:54Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9a910638aa5730331709b72924d17a47acde95f7",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2023-08-11T15:51:07Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "98472415be4d12c0004fe761605f6047bf7b6a42",
                "additions": 26,
                "deletions": 45,
                "committedDate": "2023-08-11T16:06:10Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d83c8e83729c17b46e3ea84cdb81982f2a784a10",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T22:00:50Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "00d9ad6498c998c12c07c357a825c0163b09fbf9",
                "additions": 40,
                "deletions": 19,
                "committedDate": "2023-08-14T09:23:56Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "141077bc5bfdd1d6aa9cbc0f76c590c9b14ebc81",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-14T09:40:35Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "306384b7cc589166c6d83177057ae857618d8f08",
                "additions": 19,
                "deletions": 17,
                "committedDate": "2023-08-16T21:46:26Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "54ce923568aeadde02114a78713df58268761e55",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2023-08-16T21:52:24Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a2941267321a21e10b4b9fb1649da045c2544b5e",
                "additions": 18,
                "deletions": 19,
                "committedDate": "2023-08-16T22:15:26Z",
                "author": {
                  "name": "dagurtomas",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f478039b64e481f8c0007b1efac7ea8e92c17182",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-18T21:21:13Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b08238fdc47a9adb52c8cde24dc7f75b8bd871b3",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-18T21:21:24Z",
                "author": {
                  "name": "Dagur Tómas Ásgeirsson",
                  "email": "dagurtomas@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-11T10:32:12Z",
        "deletions": 33,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/LocallyConstant/Algebra.lean",
              "additions": 114,
              "deletions": 27
            },
            {
              "path": "Mathlib/Topology/LocallyConstant/Basic.lean",
              "additions": 7,
              "deletions": 6
            }
          ]
        },
        "headRefName": "MoreLocConstAlgebra",
        "headRefOid": "b08238fdc47a9adb52c8cde24dc7f75b8bd871b3",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5XtsHr",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5d7LJQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-13T11:35:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ed3BY",
              "body": "Thanks, and sorry for the slow review!\r\n\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-18T16:38:48Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6520,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dyhNt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T11:57:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dyswb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-11T12:55:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dzqMK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T14:48:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dzqag",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T14:49:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dzql-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T14:49:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dzxmr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-11T15:04:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dzyVp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-11T15:06:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d1u6A",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-11T21:05:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d1wvJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-11T21:14:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7LJQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-13T11:35:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d9uk9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2023-08-14T09:26:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ePx_V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-16T18:28:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eP44j",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-16T18:45:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eP-vI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-16T19:01:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eP-9Z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-16T19:01:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eQwuR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2023-08-16T21:33:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eQzZQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-16T21:42:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eQ0Mq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2023-08-16T21:45:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eQ0ga",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-16T21:47:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eQ_PC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2023-08-16T22:20:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ed3BY",
              "body": "Thanks, and sorry for the slow review!\r\n\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-18T16:38:48Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9vlA",
                    "body": "```suggestion\r\n@[simps] def evalₗ [Semiring R] [AddCommMonoid Z]\r\n```\r\nthroughout",
                    "createdAt": "2023-08-11T11:57:02Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M92pu",
                    "body": "```suggestion\r\n@[to_additive (attr := simps) \"Evaluation as an `AddMonoidHom`\"]\r\n```",
                    "createdAt": "2023-08-11T12:30:58Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M92wH",
                    "body": "```suggestion\r\n    [Module R Z] (x : X) : LocallyConstant X Z →ₗ[R] Z where\r\n```",
                    "createdAt": "2023-08-11T12:31:25Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M922Q",
                    "body": "```suggestion\r\n  map_add' := map_add (evalAddMonoidHom x)\r\n```",
                    "createdAt": "2023-08-11T12:31:51Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-bhW",
                    "body": "```suggestion\r\n  __ := evalAddMonoidHom x\r\n```\r\nmight be better here",
                    "createdAt": "2023-08-11T14:48:59Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-gbg",
                    "body": "I had no idea this syntax existed :sweat_smile: Does it allow filling up multiple fields? Does it introduces the same kind of terms as `with`?",
                    "createdAt": "2023-08-11T15:06:06Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_uVb",
                    "body": "Well I checked and it does exactly the same thing as `with`, which is a bit annoying. But as Eric pointed below it's not that bad for defs that are not instances (from what I understand, defeq might be slower, but with a good simp-set we don't need to rely on defeq as much). So let's keep it like that.",
                    "createdAt": "2023-08-11T21:05:14Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M93gI",
                    "body": "```suggestion\r\n@[simps!] def evalRingHom [Semiring Z] (x : X) : LocallyConstant X Z →+* Z where\r\n  toMonoidHom := evalMonoidHom x\r\n  map_zero' := map_zero (evalAddMonoidHom x)\r\n  map_add' := map_add (evalAddMonoidHom x)\r\n```\r\n\r\nNote that, in an ideal world, I would suggest the following:\r\n```lean\r\n/-- Evaluation as a `RingHom` -/\r\n@[simps] def evalRingHom [Semiring Z] (x : X) : LocallyConstant X Z →+* Z :=\r\n  { evalMonoidHom x, evalAddMonoidHom x with }\r\n```\r\nUnfortunately, while the syntax is very pretty, the underlying term is not, to the point that it causes some performance issues. Again, you may already be aware of that, but I wanted to mention it in case you are not.",
                    "createdAt": "2023-08-11T12:34:43Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-bqm",
                    "body": "The concerns with `with` do not really apply to `def`s I think; only `instance`s",
                    "createdAt": "2023-08-11T14:49:31Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-f-x",
                    "body": "Well the point was that they created slow defeqs right? Or is your point that \"defeq\" for the typeclass system is not exactly the same as \"defeq\" in proofs?",
                    "createdAt": "2023-08-11T15:04:16Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M936M",
                    "body": "```suggestion\r\n@[simps!]\r\ndef evalₐ (R : Type*) [CommSemiring R] [Semiring Z] [Algebra R Z] (x : X) :\r\n    LocallyConstant X Z →ₐ[R] Z where\r\n  toRingHom := evalRingHom x\r\n  commutes' r := by simp\r\n```\r\nHere the `simp` call has to use quite a lot of the lemmas generated by `simps`. But in that case keeping it as `simp` is perfectly fine, and even easier to maintain.",
                    "createdAt": "2023-08-11T12:36:41Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-byO",
                    "body": "Doesn't `rfl` prove this goal?",
                    "createdAt": "2023-08-11T14:49:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M94AI",
                    "body": "```suggestion\r\n@[to_additive (attr := simps) \"`LocallyConstant.comap` as an `AddHom`.\"]\r\n```",
                    "createdAt": "2023-08-11T12:37:08Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M94V7",
                    "body": "```suggestion\r\n@[to_additive (attr := simps) \"`LocallyConstant.comap` as an `AddMonoidHom`.\"]\r\n```",
                    "createdAt": "2023-08-11T12:38:34Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M94c2",
                    "body": "```suggestion\r\n  map_mul' := map_mul (comapMulHom f hf)\r\n```",
                    "createdAt": "2023-08-11T12:39:01Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M95vJ",
                    "body": "```suggestion\r\n@[simps] def (R : Type*) evalₗ [Semiring R] [AddCommMonoid Z]\r\n```\r\n\r\nNote that Lean has no way to guess what `R` is here, so I would suggest making it explicit. Sometimes adding a type ascription is fine though, so if you don't like that you can leave it as it is",
                    "createdAt": "2023-08-11T12:44:03Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M96Dv",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\ndef comapₗ (R: Type*) [Semiring R] [AddCommMonoid Z] [Module R Z] (f : X → Y)\r\n    (hf : Continuous f) : LocallyConstant Y Z →ₗ[R] LocallyConstant X Z where\r\n  toAddHom := comapAddHom f hf\r\n  map_smul' r s := by\r\n    ext x\r\n    simp only [AddHom.toFun_eq_coe, comapAddHom_apply, hf, coe_comap, coe_smul,\r\n      Function.comp_apply, Pi.smul_apply, RingHom.id_apply]\r\n```",
                    "createdAt": "2023-08-11T12:45:32Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M96Q6",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\ndef comapRingHom [Semiring Z] (f : X → Y) (hf : Continuous f) :\r\n    LocallyConstant Y Z →+* LocallyConstant X Z where\r\n  toMonoidHom := comapMonoidHom f hf\r\n  map_zero' := map_zero (comapAddMonoidHom f hf)\r\n  map_add' := map_add (comapAddMonoidHom f hf)\r\n```",
                    "createdAt": "2023-08-11T12:46:31Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M96vk",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\ndef comapₐ (R: Type*) [CommSemiring R] [Semiring Z] [Algebra R Z]\r\n    (f : X → Y) (hf : Continuous f) : LocallyConstant Y Z →ₐ[R] LocallyConstant X Z where\r\n  toRingHom := comapRingHom f hf\r\n  commutes' r := by\r\n    ext x\r\n    simp [hf]\r\n```",
                    "createdAt": "2023-08-11T12:48:18Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M97fJ",
                    "body": "You should change the definition of `congrLeft` to:\r\n```lean\r\n@[simps]\r\nnoncomputable\r\ndef congrLeft [TopologicalSpace Y] (e : X ≃ₜ Y) : LocallyConstant X Z ≃ LocallyConstant Y Z where\r\n  toFun := comap e.symm\r\n  invFun := comap e\r\n  left_inv := by\r\n    intro x\r\n    rw [comap_comap _ _ e.continuous e.symm.continuous x]\r\n    simp\r\n  right_inv := by\r\n    intro x\r\n    rw [comap_comap _ _ e.symm.continuous e.continuous x]\r\n    simp\r\n```\r\nThe reason for changing the definition is that the simp-normal-form for the inverse of an homeomorphism is `e.symm`, not `e.invFun`. This had no importance before, but now it has since we want `@[simps]` to generate useful lemmas.\r\n\r\nThen, you can do:\r\n```suggestion\r\n@[to_additive (attr := simps!) \"`LocallyConstant.congrLeft` as an `AddEquiv`.\"]\r\n```",
                    "createdAt": "2023-08-11T12:51:45Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M97vG",
                    "body": "```suggestion\r\n  toEquiv := congrLeft e\r\n  map_mul' := map_mul (comapMulHom _ e.continuous_invFun)\r\n```",
                    "createdAt": "2023-08-11T12:52:52Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M971w",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\ndef congrLeftₗ (R: Type*) [Semiring R] [AddCommMonoid Z] [Module R Z] (e : X ≃ₜ Y) :\r\n    LocallyConstant X Z ≃ₗ[R] LocallyConstant Y Z where\r\n  toLinearMap := comapₗ R _ e.continuous_invFun\r\n  invFun := (congrLeft e).invFun\r\n  left_inv := (congrLeft e).left_inv\r\n  right_inv := (congrLeft e).right_inv\r\n```",
                    "createdAt": "2023-08-11T12:53:22Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M979G",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\ndef congrLeftRing [Semiring Z] (e : X ≃ₜ Y) :\r\n    LocallyConstant X Z ≃+* LocallyConstant Y Z where\r\n  toEquiv := congrLeft e\r\n  map_mul' := map_mul (comapRingHom _ e.continuous_invFun)\r\n  map_add' := map_add (comapRingHom _ e.continuous_invFun)\r\n```",
                    "createdAt": "2023-08-11T12:53:52Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M98V8",
                    "body": "Using `comapRingHom` instead of `comapMonoidHom` has no importance here (thanks to the generality of `map_mul`), I just find it cleaner to refer to the ring version while defining the ring equivalence.",
                    "createdAt": "2023-08-11T12:55:33Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M98cE",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\ndef congrLeftₐ (R: Type*) [CommSemiring R] [Semiring Z] [Algebra R Z] (e : X ≃ₜ Y) :\r\n    LocallyConstant X Z ≃ₐ[R] LocallyConstant Y Z where\r\n  toEquiv := congrLeft e\r\n  map_mul' := map_mul (comapₐ R _ e.continuous_invFun)\r\n  map_add' := map_add (comapₐ R _ e.continuous_invFun)\r\n  commutes' := (comapₐ R _ e.continuous_invFun).commutes'\r\n```",
                    "createdAt": "2023-08-11T12:55:51Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_vhI",
                    "body": "```suggestion\r\n  commutes' _ := rfl\r\n```",
                    "createdAt": "2023-08-11T21:14:05Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NDggj",
                    "body": "```suggestion\r\ndef evalMonoidHom [MulOneClass Z] (x : X) : LocallyConstant X Z →* Z :=\r\n  (Pi.evalMonoidHom x).comp coeFnMonoidHom\r\n```\r\nor similar, same throughout",
                    "createdAt": "2023-08-13T11:35:19Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NFQGS",
                    "body": "I made these changes, but had to define more algebraic versions of `coeFn` to do so. There was also no linear version of `Pi.eval`, and since the file `Mathlib/Algebra/Module/Pi` doesn't know about linear maps, I added it to `Mathlib/Algebra/Module/LinearMap` (`#find_home` agrees with this location). Is this what you had in mind? ",
                    "createdAt": "2023-08-14T09:26:35Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQ7UJ",
                    "body": "This is [LinearMap.proj](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Pi.html#LinearMap.proj). Yes, the naming is a bit inconsistent...",
                    "createdAt": "2023-08-16T18:25:09Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRket",
                    "body": "That's annoying! Should I add an alias so we have both names?",
                    "createdAt": "2023-08-16T21:33:15Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRmWh",
                    "body": "Adding an alias would only postpone the problem, since all lemmas about it will still have `proj` in their name. Granted, that's a bit better for discoverability, but I think the real solution is just to change this name if people on Zulip agree (and in an other PR of course!)",
                    "createdAt": "2023-08-16T21:42:29Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRujb",
                    "body": "Ok, I've created a [poll](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/LinearMap.2Eproj/near/385549555) on Zulip. Now that I think about it, the `proj` name seems more natural for dependent functions, but `eval` for non-dependent ones.",
                    "createdAt": "2023-08-16T22:20:13Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQ76T",
                    "body": "Could you move `coeFnMonoidHom` to this section too?",
                    "createdAt": "2023-08-16T18:27:52Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRm6G",
                    "body": "This means the `DistribMulAction` and `Module` instances have to move to this section as well (they are necessary to define `coeFnₗ` and depend on `coeFnAddMonoidHom`). I'm fine with that change and I'll push it, but I don't feel strongly about it and can move them back if needed.",
                    "createdAt": "2023-08-16T21:45:54Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRnH8",
                    "body": "Ah it's probably best not to move anything then, sorry!",
                    "createdAt": "2023-08-16T21:47:14Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQ_xi",
                    "body": "```suggestion\r\n@[simps!] def coeFnₗ (R : Type*) [Semiring R] [AddCommMonoid Y]\r\n```\r\n\r\nYou can see the generated lemmas by adding `?`, and in general it's always better to check them. Here, you see that without the `!` the lemma contains `ZeroHom.toFun`, which is bad because it's not in `simp` normal form. One of the things the `!` does is applying `simp` to the right hand side of the generated lemma to make sure that this doesn't happen. This is a bit slower so it's not the case by default, but you should basically never hesitate to do it if the lemma gets better.",
                    "createdAt": "2023-08-16T18:45:22Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRDjb",
                    "body": "```suggestion\r\n@[simps]\r\nnoncomputable\r\n```\r\n\r\nYou can check the lemmas generated by `@[simps]` on `congrLeftₗ` before and after this change to see the difference!",
                    "createdAt": "2023-08-16T19:01:16Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NRDtD",
                    "body": "```suggestion\r\n@[simps!]\r\nnoncomputable\r\n```",
                    "createdAt": "2023-08-16T19:01:56Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NZ9i4",
                    "body": "```suggestion\r\ndef congrLeftMulEquiv [Mul Z] (e : X ≃ₜ Y) :\r\n```",
                    "createdAt": "2023-08-18T16:38:13Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NZ9mS",
                    "body": "```suggestion\r\ndef congrLeftRingEquiv [Semiring Z] (e : X ≃ₜ Y) :\r\n```",
                    "createdAt": "2023-08-18T16:38:29Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI1NjIzODI5",
              "login": "dagurtomas"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: algebraic maps in LocallyConstant",
        "updatedAt": "2023-08-18T23:14:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6520",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9156ca3a6c416686d926267f1cb365168785e58f"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJYHT6z",
              "createdAt": "2023-08-11T10:32:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJYHT62",
              "createdAt": "2023-08-11T10:32:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5uEK_bzwAAAAJYHUTA",
              "createdAt": "2023-08-11T10:32:37Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQ4NjU2Nzkz",
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "aac70886a7e8f3e255d8c6bc9f4452163f0f9988"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJYIDuI",
              "createdAt": "2023-08-11T10:57:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N7MLa",
              "createdAt": "2023-08-11T11:14:56Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5W6xOT",
                "title": "[Merged by Bors] - feat: Nobeling's theorem",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6286"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dyhNt",
              "createdAt": "2023-08-11T11:57:02Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5uEK_bzwAAAAJYJzv-",
              "createdAt": "2023-08-11T11:57:40Z",
              "assignee": {
                "id": "MDQ6VXNlcjQ4NjU2Nzkz",
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j0byh",
              "createdAt": "2023-08-11T12:30:28Z",
              "body": "I'm about to make a ton of suggestions which are going to look a bit messy but are actually following very simple principles. I should probably have made some of these suggestions on your previous PR, but seeing the full hierarchy makes them more obvious. \r\n\r\n1. in general it's better not to use the `.map_add'` fields, and instead apply the general [map_add](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/Group.html#map_add) that should subsume all of them.\r\n2. Lots of structures build on each other (for example [RingHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/Ring.html#RingHom) extends [MonoidHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Hom/Group.html#MonoidHom)), and you can define an element of these bigger structures either in a \"flat\" way like you do (going back to the `toFun` field, and reproving all the properties of the substructures) or by specifying directly the substructures. This one is particularly useful when you already have a name for it, and is usually cleaner.\r\n3. Now one thing you may notice with the suggestion 2 is that, if each level of a nested structure is a definition, that means that you have to unfold all of these to get to the actual function. This is where `@[simps]` gets handy by providing lemmas taking care of all the unfolding.\r\n\r\nYou may already know some or even all of this, but I felt bad not explaining the reasons behind my suggestions.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dyswb",
              "createdAt": "2023-08-11T12:30:58Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJYLwPG",
              "createdAt": "2023-08-11T12:56:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJYLwPL",
              "createdAt": "2023-08-11T12:56:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j1m7f",
              "createdAt": "2023-08-11T15:46:40Z",
              "body": "I see, thanks! The reason I wanted to define the `toFun` explicitly for all of these was that it was so annoying to have to unfold the nested definitions when I wanted to access the underlying function. But if `@[simps]` takes care of that, I agree this is better. ",
              "author": {
                "login": "dagurtomas"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a276591f738fc616a3eb76c0946eda1d0536b6ea"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fee82e7fca67adc93651719d681dd95a21246ff6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5f07d8022bce8b7d5440f6f619921d5c899ba789"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "27ac42f5559fba0ab80db30e7aad2a1e119bdbaf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ded9e8e01098a0961a67182416546ffc142b5405"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cbf648df334e82c9e622ca6b682b5467f521ea6d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "95da0e2406cbbe7748d8f9360bb8d24aac1d8c53"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "38c4a3215be845d41423d9182e2b53866938bcb9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "95dcf36ac3bb6bc2cf002c8f1081a3129bf0385e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "32eb082931ebd8c972d5c88e0a1f01ac72918716"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b52111ea68248c535a821d203de99eddf70c227b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b40393d61650becbd984754fb380e17d7bbaab30"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d3bf5568903e10342e562b328445e4596d6f3841"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9a910638aa5730331709b72924d17a47acde95f7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "98472415be4d12c0004fe761605f6047bf7b6a42"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJYT1tr",
              "createdAt": "2023-08-11T16:06:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJYT1ty",
              "createdAt": "2023-08-11T16:06:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJYT1t3",
              "createdAt": "2023-08-11T16:06:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJYUtsP",
              "createdAt": "2023-08-11T16:29:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d1wvJ",
              "createdAt": "2023-08-11T21:14:05Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d83c8e83729c17b46e3ea84cdb81982f2a784a10"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJYy9sc",
              "createdAt": "2023-08-13T11:24:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJYy9sd",
              "createdAt": "2023-08-13T11:24:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d7LJQ",
              "createdAt": "2023-08-13T11:35:19Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00d9ad6498c998c12c07c357a825c0163b09fbf9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "141077bc5bfdd1d6aa9cbc0f76c590c9b14ebc81"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJZFN7u",
              "createdAt": "2023-08-14T09:41:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJZFN71",
              "createdAt": "2023-08-14T09:41:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJZFN79",
              "createdAt": "2023-08-14T09:41:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJZH-Ep",
              "createdAt": "2023-08-14T10:51:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ePx_V",
              "createdAt": "2023-08-16T18:25:09Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJasiR9",
              "createdAt": "2023-08-16T18:28:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJasiSA",
              "createdAt": "2023-08-16T18:28:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eP44j",
              "createdAt": "2023-08-16T18:45:22Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eP-vI",
              "createdAt": "2023-08-16T19:01:16Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eP-9Z",
              "createdAt": "2023-08-16T19:01:56Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "306384b7cc589166c6d83177057ae857618d8f08"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "54ce923568aeadde02114a78713df58268761e55"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a2941267321a21e10b4b9fb1649da045c2544b5e"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJay1nK",
              "createdAt": "2023-08-16T22:27:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJay1nM",
              "createdAt": "2023-08-16T22:27:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJay2Ka",
              "createdAt": "2023-08-16T22:27:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJazE-_",
              "createdAt": "2023-08-16T22:39:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ed3BY",
              "createdAt": "2023-08-18T16:38:13Z",
              "body": "Thanks, and sorry for the slow review!\r\n\r\nbors d+",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kYl7T",
              "createdAt": "2023-08-18T16:38:49Z",
              "body": ":v: dagurtomas can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uEK_bzwAAAAJb5nGo",
              "createdAt": "2023-08-18T16:39:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uEK_bzwAAAAJb5nH9",
              "createdAt": "2023-08-18T16:39:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f478039b64e481f8c0007b1efac7ea8e92c17182"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b08238fdc47a9adb52c8cde24dc7f75b8bd871b3"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kZvSO",
              "createdAt": "2023-08-18T21:50:43Z",
              "body": "bors r+",
              "author": {
                "login": "dagurtomas"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kZ-4M",
              "createdAt": "2023-08-18T23:14:10Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5907386034/job/16025245407)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5907386034/job/16025245568)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5907386034/job/16025245709)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uEK_bzwAAAAJcCyRD",
              "createdAt": "2023-08-18T23:14:12Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uEK_bzwAAAAJcCyU3",
              "createdAt": "2023-08-18T23:14:16Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
