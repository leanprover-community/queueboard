{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 25,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "and other basic `zpow` lemmas\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> List.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6YCsJ2",
              "body": "### PR summary [c058a693f3](https://github.com/leanprover-community/mathlib4/pull/20032/commits/c058a693f362b094e832dd1c86482ebf9ecaf8d9)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ one_le_zpow_iff_right_of_lt_one₀`\n`+ one_le_zpow_iff_right₀`\n`+ one_lt_zpow_iff_right_of_lt_one₀`\n`+ one_lt_zpow_iff_right₀`\n`+ zpow_le_one_iff_right_of_lt_one₀`\n`+ zpow_le_one_iff_right₀`\n`+ zpow_lt_one_iff_right_of_lt_one₀`\n`+ zpow_lt_one_iff_right₀`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-18T09:39:25Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YC9q-",
              "body": "Thanks for factoring this off! To continue discussion from the other PR:\r\n\r\n> For the simp tagging, I just followed what was already done in the file\r\n\r\nThe simplifier isn't capable of automatically filling in auxiliary (non-typeclass) hypotheses, even if the exact statement is already there in the context, is it? So I think simp-tagging these is a no-op, since the simplifier won't know how to use them.",
              "createdAt": "2024-12-18T10:10:25Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YDkva",
              "body": "> The simplifier isn't capable of automatically filling in auxiliary (non-typeclass) hypotheses, even if the exact statement is already there in the context, is it?\r\n\r\nYes, it is! which is why it's so powerful. If you have an example where it doesn't work, we should open a bug report to the Lean repo.",
              "createdAt": "2024-12-18T11:28:08Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YDoPZ",
              "body": "OK, thanks, I've definitely learned something then!",
              "createdAt": "2024-12-18T11:35:14Z",
              "author": {
                "login": "loefflerd"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c058a693f362b094e832dd1c86482ebf9ecaf8d9",
                "additions": 25,
                "deletions": 1,
                "committedDate": "2024-12-18T09:38:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWuseA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390259096/job/34584898680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWuuNg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390259219/job/34584899126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtuJw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254279/job/34584882727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtt2A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254278/job/34584882648"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtu7w",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254281/job/34584882927"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtfRw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584878919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtdag",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34584878442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtvLA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254291/job/34584882988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtitw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584879799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtgGw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34584879131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtwUA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254291/job/34584883280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtg_g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584879358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWteyQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34584878793"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWtkLQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584880173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDYayIg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34586669602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWunCA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34584897288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDWvOlw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20032&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-18T09:38:30Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/GroupWithZero/Unbundled.lean",
              "additions": 25,
              "deletions": 1
            }
          ]
        },
        "headRefName": "one_le_zpow_iff_right",
        "headRefOid": "c058a693f362b094e832dd1c86482ebf9ecaf8d9",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6FnufX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20032,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWuseA",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390259096/job/34584898680"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWuuNg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390259219/job/34584899126"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtuJw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254279/job/34584882727"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtt2A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254278/job/34584882648"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtu7w",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254281/job/34584882927"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtfRw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584878919"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtdag",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34584878442"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtvLA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254291/job/34584882988"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtitw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584879799"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtgGw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34584879131"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtwUA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390254291/job/34584883280"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtg_g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584879358"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWteyQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34584878793"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWtkLQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390253061/job/34584880173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDYayIg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12390252822/job/34586669602"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWunCA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34584897288"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDWvOlw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20032&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: `1 ≤ a ^ n ↔ 0 ≤ n` when `1 < a`",
        "updatedAt": "2024-12-18T11:35:15Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20032",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6jwHY0zwAAAAOn0QD6",
              "createdAt": "2024-12-18T09:38:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6jwHY0zwAAAAOn0QEH",
              "createdAt": "2024-12-18T09:38:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YCsJ2",
              "createdAt": "2024-12-18T09:39:25Z",
              "body": "### PR summary [c058a693f3](https://github.com/leanprover-community/mathlib4/pull/20032/commits/c058a693f362b094e832dd1c86482ebf9ecaf8d9)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ one_le_zpow_iff_right_of_lt_one₀`\n`+ one_le_zpow_iff_right₀`\n`+ one_lt_zpow_iff_right_of_lt_one₀`\n`+ one_lt_zpow_iff_right₀`\n`+ zpow_le_one_iff_right_of_lt_one₀`\n`+ zpow_le_one_iff_right₀`\n`+ zpow_lt_one_iff_right_of_lt_one₀`\n`+ zpow_lt_one_iff_right₀`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5teGUz",
              "createdAt": "2024-12-18T09:40:02Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6ErfEb",
                "title": "refactor: make `PadicInt.valuation` `ℕ`-valued",
                "url": "https://github.com/leanprover-community/mathlib4/pull/19858"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YC9q-",
              "createdAt": "2024-12-18T10:10:25Z",
              "body": "Thanks for factoring this off! To continue discussion from the other PR:\r\n\r\n> For the simp tagging, I just followed what was already done in the file\r\n\r\nThe simplifier isn't capable of automatically filling in auxiliary (non-typeclass) hypotheses, even if the exact statement is already there in the context, is it? So I think simp-tagging these is a no-op, since the simplifier won't know how to use them.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YDkva",
              "createdAt": "2024-12-18T11:28:08Z",
              "body": "> The simplifier isn't capable of automatically filling in auxiliary (non-typeclass) hypotheses, even if the exact statement is already there in the context, is it?\r\n\r\nYes, it is! which is why it's so powerful. If you have an example where it doesn't work, we should open a bug report to the Lean repo.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YDoPZ",
              "createdAt": "2024-12-18T11:35:14Z",
              "body": "OK, thanks, I've definitely learned something then!",
              "author": {
                "login": "loefflerd"
              }
            }
          ]
        }
      }
    }
  }
}
