{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 105,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "author": {
          "login": "tb65536"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR adds API and changes the definition of the normal closure of $F\\leq K\\leq L$ to be an intermediate field of L/F, rather than an intermediate field of L/K. For example, I think it would be more common to say that the normal closure of $\\mathbb{Q}(\\sqrt[3]{2})/\\mathbb{Q}$ is $\\mathbb{Q}(\\sqrt[3]{2},\\zeta_3)/\\mathbb{Q}$ rather than $\\mathbb{Q}(\\sqrt[3]{2},\\zeta_3)/\\mathbb{Q}(\\sqrt[3]{2})$. This change also means that the normal closure goes from being a dependent function `(K : Type) → IntermediateField K L` to being a non-dependent function `Type → IntermediateField F L`, making it easier to compare across the Galois corespondence.\r\n\r\nSupersedes https://github.com/leanprover-community/mathlib/pull/18971\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #6273\r\n- [x] depends on: #6289\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-09-07T01:25:47Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5igc79",
              "body": "I am not sure I understand the point of the new definition, since as you said [normalClosure](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/Normal.html#normalClosure) is already an `IntermediateField`.",
              "createdAt": "2023-07-26T23:21:32Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5igd0X",
              "body": "> I am not sure I understand the point of the new definition, since as you said [normalClosure](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/Normal.html#normalClosure) is already an `IntermediateField`.\r\n\r\nYes sorry, I got myself confused. The difference is that if you apply the old definition to an intermediate field, then you have to restrict scalars to get back to the same intermediate field type. It's more convenient in this case to have a function `K : IntermediateField F L → normalClosure K : IntermediateField F L`, rather than a dependent function `K : IntermediateField F L → normalClosure K : IntermediateField K L`.",
              "createdAt": "2023-07-26T23:26:15Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5igeN0",
              "body": "I especially have in mind the Galois correspondence, where `normalClosure : IntermediateField F L → IntermediateField F L` corresponds to `normalCore : Subgroup G → Subgroup G`.",
              "createdAt": "2023-07-26T23:28:25Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iggg9",
              "body": "> I especially have in mind the Galois correspondence, where `normalClosure : IntermediateField F L → IntermediateField F L` corresponds to `normalCore : Subgroup G → Subgroup G`.\r\n\r\nAh, so the point is if `normalClosure K` should be an `IntermediateField K L` (as the current definition) or an `IntermediateField F L`. I agree that your definition seems more reasonable, but I am not 100% sure. But having both seems a little strange.",
              "createdAt": "2023-07-26T23:41:34Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5igg4b",
              "body": "Yeah, having both does seems strange. I'll look into refactoring the current definition to be `IntermediateField F L`, and see how it feels.",
              "createdAt": "2023-07-26T23:43:56Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ighjZ",
              "body": "One problem with your definition is that `normalClosure K` is not a `K`-algebra automatically, so in some sense you loose information.",
              "createdAt": "2023-07-26T23:47:40Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5igtCM",
              "body": "The refactor seemed to go through smoothly, and I've added back the lost instances.",
              "createdAt": "2023-07-27T00:40:16Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5i2LLL",
              "body": "It looks like a reasonable modification to me, but I would like to have a second opinion. Maybe you can ask on Zulip.",
              "createdAt": "2023-07-31T13:25:13Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jDN9L",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#6273~~\n* ~~leanprover-community/mathlib4#6289~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-08-02T08:47:06Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jDunH",
              "body": "I think the PR title and description are out of date: the file is no longer new, and at a glance nor is `IntermediateField.normalClosure`!",
              "createdAt": "2023-08-02T10:02:42Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j-x84",
              "body": "> This change also means that the normal closure goes from being a dependent function `(K : IntermediateField F L) -> (IntermediateField K L)` to being a non-dependent function `IntermediateField F L -> IntermediateField F L`, making it easier to compare across the Galois corespondence.\r\n\r\nThis comment is a bit misleading, the `normalClosure` does not have the signature that you claim it does in the PR description; it is actually `(K : Type) -> (IntermediateField K L)`.",
              "createdAt": "2023-08-14T14:15:40Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kAFcH",
              "body": "> This comment is a bit misleading, the `normalClosure` does not have the signature that you claim it does in the PR description; it is actually `(K : Type) -> (IntermediateField K L)`.\r\n\r\nGood point. I've updated the PR description.",
              "createdAt": "2023-08-14T17:19:38Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kAIBE",
              "body": "I made another edit, your spelling looked like it was describing `k : K`.",
              "createdAt": "2023-08-14T17:23:20Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kAgiH",
              "body": "@jcommelin, I'd argue that a TFAE is worse because:\r\n\r\n* In this particular case the overall proof is longer\r\n* It's harder to use, because you have to remember the indices of the statement you want\r\n* It's harder to find, because you can't just guess the name of the sub-statements any more\r\n* It's totally reasonable to expect someone to navigate the API by going via the \"hub and spoke\" model where `Normal` is the canonical spelling and all the other are consequences. In my opinion, TFAEs are most useful where there is no canonical spelling (or as an implementation detail to reduce the proof burden when building the API).\r\n\r\nThis came up when definig `Algebra.ModEq`, where we realized that a canonical spelling was more useful than a large TFAE.",
              "createdAt": "2023-08-14T18:24:04Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5krH_N",
              "body": "This looks great to me. Can you show it's a `ClosureOperator`?",
              "createdAt": "2023-08-22T22:51:33Z",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ksD8U",
              "body": "I think @YaelDillies concluded that ClosureOperator was poorly designed and not worth trying to use; I think a galois connection would be more sensible?",
              "createdAt": "2023-08-23T04:42:29Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ksFYe",
              "body": "Wouldn't defining a Galois connection require defining a type of normal intermediate fields? Is that something that we want to do?",
              "createdAt": "2023-08-23T04:51:24Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lDI7N",
              "body": "You can try using `ClosureOperator` because it's the right situation in theory: You have a Galois correspondence between an order and a suborder of it, and you don't want to define that suborder as a separate type. But don't expect too much of it, as Eric said I dislike my own API here.",
              "createdAt": "2023-08-28T09:07:17Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l3bKv",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2023-09-06T20:08:56Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l4FUh",
              "body": "This PR was included in a batch that was canceled, it will be automatically retried",
              "createdAt": "2023-09-06T22:19:24Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l4lAB",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6103675343/job/16564492234)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6103675343/job/16564492704)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6103675343/job/16564492023)",
              "createdAt": "2023-09-07T01:25:46Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e7e9ff2d7d16b30a6914faeafb9d20eb7ff3b0b7",
                "additions": 135,
                "deletions": 86,
                "committedDate": "2023-07-26T22:15:15Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f2839c1f7a130b993e3039299643da83e8c75b6b",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-07-26T22:21:45Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8e331b7322d28f269167be16de163f5aa6de296e",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-07-26T22:32:02Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5724e2218ddf3d52b785d186a5973c58bc082b13",
                "additions": 87,
                "deletions": 2,
                "committedDate": "2023-07-26T22:48:21Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4372a11012c4f6794070012de17602c2309fc69f",
                "additions": 17,
                "deletions": 17,
                "committedDate": "2023-07-26T23:01:54Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5efeca4a0421f15a4abb3638d20c285ad6881550",
                "additions": 21,
                "deletions": 19,
                "committedDate": "2023-07-26T23:03:40Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2dea73e7e8812633941343b99c0983e2786c8704",
                "additions": 8,
                "deletions": 37,
                "committedDate": "2023-07-26T23:15:48Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fc039b237d654788fa95703cd676a02dbc463872",
                "additions": 4,
                "deletions": 1,
                "committedDate": "2023-07-26T23:26:29Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b995a17d74094de1a61bf39694a1e2e4762fbb99",
                "additions": 67,
                "deletions": 119,
                "committedDate": "2023-07-27T00:05:24Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4af4bd4a41bba7d90c8f4d16686b8949e8cb0951",
                "additions": 28,
                "deletions": 5,
                "committedDate": "2023-07-27T00:34:48Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "27a174fea0ed70c7474f3d6793fdbe6aea6e4e97",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-07-27T00:36:51Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "62bc9e43a476cb0ff79e7195f7f85653385feb6d",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-07-27T01:15:06Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1a5c534958358c71596fe6db14ac3be9e4991ae8",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-07-27T01:48:22Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "74f460ce095b86effe6d9aab3a44084f0daa1a30",
                "additions": 4,
                "deletions": 11,
                "committedDate": "2023-07-31T17:59:32Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "70198dd0cce925152f009bd45debf6a1ce3ba477",
                "additions": 0,
                "deletions": 8,
                "committedDate": "2023-07-31T18:47:41Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9aac2340dd62da5edd76b43b83ee1b6a4fe9f89a",
                "additions": 8011,
                "deletions": 2894,
                "committedDate": "2023-08-01T19:47:24Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1ac7f5eb3905a3568712aecb341d03fe5bdd715c",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-08-02T01:08:56Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "297989e09050e50d62d7dfca3266d6fa48646f2b",
                "additions": 2339,
                "deletions": 683,
                "committedDate": "2023-08-02T15:33:20Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "864ab2790137efd226378ac154026d59e98eb450",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-02T15:34:59Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e7a44c67710f8e1aee5b23aa075db4293d0dd969",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2023-08-02T16:10:01Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5769ecc58dddbf352ba99d5420c0bc034f89f17f",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-08-02T19:43:33Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c62eccb848ed32341dce24904cefed8d9289f811",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-02T19:57:59Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5c5ae881b372abacbb68bf134195e664ab67c867",
                "additions": 7025,
                "deletions": 3303,
                "committedDate": "2023-08-09T14:43:37Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0471830b4d449b984bc84a01c8b42d1875ff7c62",
                "additions": 30,
                "deletions": 24,
                "committedDate": "2023-08-14T18:17:05Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "445270125587f18aebaff10211b344d0e60d20e3",
                "additions": 25,
                "deletions": 0,
                "committedDate": "2023-08-14T18:41:47Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "462bd3c3da94c2b094b568d6d316368960eaf0d8",
                "additions": 0,
                "deletions": 31,
                "committedDate": "2023-08-14T18:41:57Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bac1a63c152d63d45b543a2dc70c06cb13dbeec5",
                "additions": 20,
                "deletions": 2,
                "committedDate": "2023-08-23T04:47:46Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1a3254d8b9c6ffe3562e0dbd9d2e22eb1cb9be19",
                "additions": 0,
                "deletions": 7,
                "committedDate": "2023-08-23T05:16:12Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fe9b1a8b266de6b9f3f28f26fb3f8012f33cd348",
                "additions": 29072,
                "deletions": 18876,
                "committedDate": "2023-08-23T06:02:33Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a1edf10e14a8ba4e399687576b6b374c6ce1f34d",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-23T06:14:59Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-26T22:19:05Z",
        "deletions": 19,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/FieldTheory/IntermediateField.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/FieldTheory/KrullTopology.lean",
              "additions": 0,
              "deletions": 7
            },
            {
              "path": "Mathlib/FieldTheory/NormalClosure.lean",
              "additions": 101,
              "deletions": 12
            }
          ]
        },
        "headRefName": "tb_normal_closure",
        "headRefOid": "a1edf10e14a8ba4e399687576b6b374c6ce1f34d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WfQK_",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5e0gbv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T06:13:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d-3Pa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-14T12:37:02Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6163,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cseYL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-31T15:53:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ctQjh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-31T17:01:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ctSgl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-07-31T17:05:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3DSn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-01T22:44:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3Kym",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-01T23:25:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3XqN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T00:48:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3a1Y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-02T01:09:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c9OKE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T17:52:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c949t",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-02T19:41:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c95tz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-02T19:43:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d-3Pa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-14T12:37:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eBVA8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-14T18:21:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e0gbv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-23T06:13:39Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MQ-jZ",
                    "body": "```suggestion\r\ndef toFieldRange : L →ₐ[K] f.fieldRange :=\r\n  f.rangeRestrict\r\n```\r\nwhich if it works, suggests that the name should be `frangeRestrict` (or maybe that this isn't really needed since they're defeq anyway)",
                    "createdAt": "2023-07-31T15:53:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MRY6H",
                    "body": "Can you make a quick PR that moves this content with no other changes, to make the diff easier to folllow?",
                    "createdAt": "2023-07-31T17:01:32Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MRaRv",
                    "body": "Sure, will do.",
                    "createdAt": "2023-07-31T17:05:00Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXdvh",
                    "body": "What's the replacement if I want `IntermediateField K L` after all?",
                    "createdAt": "2023-08-01T22:44:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXinZ",
                    "body": "You can get it from the `IsScalarTower` instance (turn the `IsScalarTower` into an `algHom`, and take the `fieldRange`).",
                    "createdAt": "2023-08-01T23:25:28Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXq1z",
                    "body": "Can you add a lemma that states that `(construction_you_describe).restrictScalars K = normalClosure` (or if it's already there, can you tell me its name)?",
                    "createdAt": "2023-08-02T00:48:12Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXs0a",
                    "body": "Done: https://github.com/leanprover-community/mathlib4/pull/6163/commits/1ac7f5eb3905a3568712aecb341d03fe5bdd715c",
                    "createdAt": "2023-08-02T01:09:19Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MbXTf",
                    "body": "This almost certainly creates a diamond that didn't exist before: `RingHom.toAlgebra` is almost always a bad idea.\r\nYou can fix it with\r\n```suggestion\r\nnoncomputable instance algebra : Algebra K (normalClosure F K L) :=\r\n  IntermediateField.algebra <|\r\n    { (⨆ f : K →ₐ[F] L, f.fieldRange) with\r\n      algebraMap_mem' := fun r =>\r\n        le_iSup (fun f : K →ₐ[F] L => f.fieldRange) (IsScalarTower.toAlgHom F K L) ⟨r, rfl⟩ }\r\n```\r\nbut this seems to defeat the point of the refactor.",
                    "createdAt": "2023-08-02T17:52:00Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mbw5T",
                    "body": "Well, the point of the refactor is to make `normalClosure` easier to use, so it's not a big deal that the algebra instance retains the messiness of the original definition.",
                    "createdAt": "2023-08-02T19:41:22Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MbxW6",
                    "body": "I pushed your definition (slightly golfed)",
                    "createdAt": "2023-08-02T19:43:48Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NF8Y6",
                    "body": "Would it make sense to make these into a TFAE?",
                    "createdAt": "2023-08-14T12:37:02Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NHiHb",
                    "body": "It's a little longer, but looks cleaner: https://github.com/leanprover-community/mathlib4/pull/6163/commits/0471830b4d449b984bc84a01c8b42d1875ff7c62",
                    "createdAt": "2023-08-14T18:21:05Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nov96",
                    "body": "```suggestion\r\n@[simps]\r\nnoncomputable def closureOperator : ClosureOperator (IntermediateField F L) where\r\n```",
                    "createdAt": "2023-08-23T06:13:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEzMzM5MDE3",
              "login": "tb65536"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - refactor(FieldTheory/NormalClosure): change definition and add API",
        "updatedAt": "2024-12-31T03:48:43Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6163",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e7e9ff2d7d16b30a6914faeafb9d20eb7ff3b0b7"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJP1TEV",
              "createdAt": "2023-07-26T22:19:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJP1TEb",
              "createdAt": "2023-07-26T22:19:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOBdYtcs5Nsiim",
              "createdAt": "2023-07-26T22:20:38Z",
              "source": {
                "id": "PR_kwDOBdYtcs5QB4Fk",
                "title": "feat(field_theory/normal_closure): New file",
                "url": "https://github.com/leanprover-community/mathlib3/pull/18971"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2839c1f7a130b993e3039299643da83e8c75b6b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e331b7322d28f269167be16de163f5aa6de296e"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJP2Fgv",
              "createdAt": "2023-07-26T22:48:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJP2Fg5",
              "createdAt": "2023-07-26T22:48:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5724e2218ddf3d52b785d186a5973c58bc082b13"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5srQMUzwAAAAJP2Stc",
              "createdAt": "2023-07-26T22:57:33Z",
              "assignee": {
                "id": "MDQ6VXNlcjMyNDkwNTMy",
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4372a11012c4f6794070012de17602c2309fc69f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5efeca4a0421f15a4abb3638d20c285ad6881550"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2dea73e7e8812633941343b99c0983e2786c8704"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5igc79",
              "createdAt": "2023-07-26T23:21:32Z",
              "body": "I am not sure I understand the point of the new definition, since as you said [normalClosure](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/Normal.html#normalClosure) is already an `IntermediateField`.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5igd0X",
              "createdAt": "2023-07-26T23:26:15Z",
              "body": "> I am not sure I understand the point of the new definition, since as you said [normalClosure](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/Normal.html#normalClosure) is already an `IntermediateField`.\r\n\r\nYes sorry, I got myself confused. The difference is that if you apply the old definition to an intermediate field, then you have to restrict scalars to get back to the same intermediate field type. It's more convenient in this case to have a function `K : IntermediateField F L → normalClosure K : IntermediateField F L`, rather than a dependent function `K : IntermediateField F L → normalClosure K : IntermediateField K L`.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fc039b237d654788fa95703cd676a02dbc463872"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5igeN0",
              "createdAt": "2023-07-26T23:28:25Z",
              "body": "I especially have in mind the Galois correspondence, where `normalClosure : IntermediateField F L → IntermediateField F L` corresponds to `normalCore : Subgroup G → Subgroup G`.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iggg9",
              "createdAt": "2023-07-26T23:41:34Z",
              "body": "> I especially have in mind the Galois correspondence, where `normalClosure : IntermediateField F L → IntermediateField F L` corresponds to `normalCore : Subgroup G → Subgroup G`.\r\n\r\nAh, so the point is if `normalClosure K` should be an `IntermediateField K L` (as the current definition) or an `IntermediateField F L`. I agree that your definition seems more reasonable, but I am not 100% sure. But having both seems a little strange.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5igg4b",
              "createdAt": "2023-07-26T23:43:56Z",
              "body": "Yeah, having both does seems strange. I'll look into refactoring the current definition to be `IntermediateField F L`, and see how it feels.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ighjZ",
              "createdAt": "2023-07-26T23:47:40Z",
              "body": "One problem with your definition is that `normalClosure K` is not a `K`-algebra automatically, so in some sense you loose information.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJP3Leq",
              "createdAt": "2023-07-26T23:49:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b995a17d74094de1a61bf39694a1e2e4762fbb99"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4af4bd4a41bba7d90c8f4d16686b8949e8cb0951"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "27a174fea0ed70c7474f3d6793fdbe6aea6e4e97"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5igtCM",
              "createdAt": "2023-07-27T00:40:16Z",
              "body": "The refactor seemed to go through smoothly, and I've added back the lost instances.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJP4NpT",
              "createdAt": "2023-07-27T00:41:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJP4NpW",
              "createdAt": "2023-07-27T00:41:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "62bc9e43a476cb0ff79e7195f7f85653385feb6d"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJP5YN_",
              "createdAt": "2023-07-27T01:42:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1a5c534958358c71596fe6db14ac3be9e4991ae8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i2LLL",
              "createdAt": "2023-07-31T13:25:13Z",
              "body": "It looks like a reasonable modification to me, but I would like to have a second opinion. Maybe you can ask on Zulip.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cseYL",
              "createdAt": "2023-07-31T15:53:22Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ctQjh",
              "createdAt": "2023-07-31T17:01:31Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJSDkdL",
              "createdAt": "2023-07-31T17:05:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJSDkdV",
              "createdAt": "2023-07-31T17:05:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "74f460ce095b86effe6d9aab3a44084f0daa1a30"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NwNhn",
              "createdAt": "2023-07-31T18:18:57Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5W1NTd",
                "title": "[Merged by Bors] - refactor(FieldTheory/NormalClosure): move to new file",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6273"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJSGmgC",
              "createdAt": "2023-07-31T18:19:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJSGslQ",
              "createdAt": "2023-07-31T18:21:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "70198dd0cce925152f009bd45debf6a1ce3ba477"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJSyyvd",
              "createdAt": "2023-08-01T16:46:59Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJSzbAB",
              "createdAt": "2023-08-01T17:05:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9aac2340dd62da5edd76b43b83ee1b6a4fe9f89a"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJS4xUq",
              "createdAt": "2023-08-01T19:48:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NxpLM",
              "createdAt": "2023-08-01T19:54:11Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5W8cGd",
                "title": "[Merged by Bors] - refactor(FieldTheory/NormalClosure): Some golfs",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6289"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJS5OlU",
              "createdAt": "2023-08-01T20:02:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c3DSn",
              "createdAt": "2023-08-01T22:44:29Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1ac7f5eb3905a3568712aecb341d03fe5bdd715c"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJTLBnU",
              "createdAt": "2023-08-02T08:47:04Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jDN9L",
              "createdAt": "2023-08-02T08:47:06Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#6273~~\n* ~~leanprover-community/mathlib4#6289~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJTLwla",
              "createdAt": "2023-08-02T09:05:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jDunH",
              "createdAt": "2023-08-02T10:02:42Z",
              "body": "I think the PR title and description are out of date: the file is no longer new, and at a glance nor is `IntermediateField.normalClosure`!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "297989e09050e50d62d7dfca3266d6fa48646f2b"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJTbYXl",
              "createdAt": "2023-08-02T15:34:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "864ab2790137efd226378ac154026d59e98eb450"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJTbjYO",
              "createdAt": "2023-08-02T15:38:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJTbjYT",
              "createdAt": "2023-08-02T15:38:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJTckI1",
              "createdAt": "2023-08-02T16:03:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e7a44c67710f8e1aee5b23aa075db4293d0dd969"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c9OKE",
              "createdAt": "2023-08-02T17:52:00Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Ny4ig",
              "createdAt": "2023-08-02T18:06:09Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5XCTtk",
                "title": "[Merged by Bors] - chore(FieldTheory/NormalClosure): remove a porting note",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6315"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5769ecc58dddbf352ba99d5420c0bc034f89f17f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c62eccb848ed32341dce24904cefed8d9289f811"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5c5ae881b372abacbb68bf134195e664ab67c867"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d-3Pa",
              "createdAt": "2023-08-14T12:37:02Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j-x84",
              "createdAt": "2023-08-14T14:15:40Z",
              "body": "> This change also means that the normal closure goes from being a dependent function `(K : IntermediateField F L) -> (IntermediateField K L)` to being a non-dependent function `IntermediateField F L -> IntermediateField F L`, making it easier to compare across the Galois corespondence.\r\n\r\nThis comment is a bit misleading, the `normalClosure` does not have the signature that you claim it does in the PR description; it is actually `(K : Type) -> (IntermediateField K L)`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kAFcH",
              "createdAt": "2023-08-14T17:19:38Z",
              "body": "> This comment is a bit misleading, the `normalClosure` does not have the signature that you claim it does in the PR description; it is actually `(K : Type) -> (IntermediateField K L)`.\r\n\r\nGood point. I've updated the PR description.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kAIBE",
              "createdAt": "2023-08-14T17:23:20Z",
              "body": "I made another edit, your spelling looked like it was describing `k : K`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0471830b4d449b984bc84a01c8b42d1875ff7c62"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kAgiH",
              "createdAt": "2023-08-14T18:24:04Z",
              "body": "@jcommelin, I'd argue that a TFAE is worse because:\r\n\r\n* In this particular case the overall proof is longer\r\n* It's harder to use, because you have to remember the indices of the statement you want\r\n* It's harder to find, because you can't just guess the name of the sub-statements any more\r\n* It's totally reasonable to expect someone to navigate the API by going via the \"hub and spoke\" model where `Normal` is the canonical spelling and all the other are consequences. In my opinion, TFAEs are most useful where there is no canonical spelling (or as an implementation detail to reduce the proof burden when building the API).\r\n\r\nThis came up when definig `Algebra.ModEq`, where we realized that a canonical spelling was more useful than a large TFAE.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "445270125587f18aebaff10211b344d0e60d20e3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "462bd3c3da94c2b094b568d6d316368960eaf0d8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5krH_N",
              "createdAt": "2023-08-22T22:51:33Z",
              "body": "This looks great to me. Can you show it's a `ClosureOperator`?",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ksD8U",
              "createdAt": "2023-08-23T04:42:29Z",
              "body": "I think @YaelDillies concluded that ClosureOperator was poorly designed and not worth trying to use; I think a galois connection would be more sensible?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bac1a63c152d63d45b543a2dc70c06cb13dbeec5"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ksFYe",
              "createdAt": "2023-08-23T04:51:24Z",
              "body": "Wouldn't defining a Galois connection require defining a type of normal intermediate fields? Is that something that we want to do?",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1a3254d8b9c6ffe3562e0dbd9d2e22eb1cb9be19"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJd6rZ_",
              "createdAt": "2023-08-23T05:21:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fe9b1a8b266de6b9f3f28f26fb3f8012f33cd348"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJd7pVm",
              "createdAt": "2023-08-23T06:06:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e0gbv",
              "createdAt": "2023-08-23T06:13:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a1edf10e14a8ba4e399687576b6b374c6ce1f34d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lDI7N",
              "createdAt": "2023-08-28T09:07:17Z",
              "body": "You can try using `ClosureOperator` because it's the right situation in theory: You have a Galois correspondence between an order and a suborder of it, and you don't want to define that suborder as a separate type. But don't expect too much of it, as Eric said I dislike my own API here.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l3bKv",
              "createdAt": "2023-09-06T20:08:56Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5srQMUzwAAAAJl7wDD",
              "createdAt": "2023-09-06T20:09:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5srQMUzwAAAAJl7wFU",
              "createdAt": "2023-09-06T20:09:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l4FUh",
              "createdAt": "2023-09-06T22:19:24Z",
              "body": "This PR was included in a batch that was canceled, it will be automatically retried",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l4lAB",
              "createdAt": "2023-09-07T01:25:46Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6103675343/job/16564492234)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6103675343/job/16564492704)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6103675343/job/16564492023)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5srQMUzwAAAAJmCY0F",
              "createdAt": "2023-09-07T01:25:47Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5srQMUzwAAAAOtC-5H",
              "createdAt": "2024-12-31T03:48:43Z"
            }
          ]
        }
      }
    }
  }
}
