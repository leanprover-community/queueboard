{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 25,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This action posts the comment\r\n\r\n```\r\n!bench\r\n\r\nThis is an automated bench-marking that runs when a PR is opened. No need to repeat.\r\n```\r\n\r\nwhenever a PR is *opened*. It then ignores any subsequent changes to the PR.\r\n\r\nThe automatic benching should help in catching PRs that unknowingly introduce a high performance cost, as was the case for my PR #18033.\r\n\r\n### Note.\r\n\r\nRunning `!bench` strains the benchmarking system and it is not feasible to run it on every push.  However, Sebastian, in private communication with Johan, approved of automatically benching every PR once, when it is opened.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6UdBh2",
              "body": "!bench\n\nThis is an automated bench-marking that runs when a PR is opened. No need to repeat.",
              "createdAt": "2024-11-21T10:02:36Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UdB6k",
              "body": "### PR summary [a4f9ff985b](https://github.com/leanprover-community/mathlib4/pull/19329/commits/a4f9ff985b4d13039748423609e3f35c066e5a9b)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-11-21T10:03:13Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UdCJL",
              "body": "@Kha @jcommelin\r\n\r\nThis is the PR introducing automatic benching of all newly-opened PRs.",
              "createdAt": "2024-11-21T10:03:30Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UdgZQ",
              "body": "!bench\n\nThis is an automated bench-marking that runs when a PR is opened. No need to repeat.",
              "createdAt": "2024-11-21T10:42:12Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Udg4e",
              "body": "Let me play devil's advocate for a moment. AIUI, this PR aims to solve the following problem: a PR introduces an unexpected regression, that is only caught by benchmarking it after merging --- and might go entirely unnoticed, because there is no process to flag such regressions, and to follow up on such PRs. Addressing this would be nice!\r\n\r\nBenchmarking every PR prior to landing does help for that, I agree --- but also feels like a very blunt tool. (I does put lots of strain on the current benchmarking runners, and I would expect the number of mathlib PRs to go up, not down, in the future.)\r\nHave you considered different solutions? For instance: analysing these logs afterwards and trying to flag PRs automatically with \"interesting changes\", for a human to look at? (In general, that seems like a difficult problem --- adding new results generally increases instructions, after all --- but just catching \"big regressions\" should be easy still.)\r\nOr are you thinking that the \"human time\" spent on such a tool is more expensive than CI time? (That's a fair argument.)\r\n\r\n\r\nTo clarify: I'm not opposed to this decision, but I'd like to understand better why you feel this way.",
              "createdAt": "2024-11-21T10:43:09Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Uh73X",
              "body": "I would expect that the majority of PRs don't pass CI when first opened; so I don't expect this to actually be that useful.",
              "createdAt": "2024-11-21T18:03:34Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UiXUD",
              "body": "These doubts are fair points.  I am also thinking about a \"monthly audit\" that automatically searches the commits to master of the past month, looking for some form of increase.\n\nI'll think about maybe this check could become \"bench the first commit that passes CI\", rather than \"bench the first commit \".",
              "createdAt": "2024-11-21T19:01:46Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UjwXT",
              "body": "Why not bench only when it's sent to bors?",
              "createdAt": "2024-11-21T21:45:10Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Ujxtn",
              "body": "Slightly different, but related idea: can a workflow scan the benchmarks for \"merged\" PRs, analyse them and post on zulip \"this looks suspiscious, can somebody please take a look\"? Even a fairly conservative estimate (e.g. adds > 500 * 10‚Åπ instructions) could already help.",
              "createdAt": "2024-11-21T21:48:26Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Um7M6",
              "body": "Don't we already bench every commit to master? It seems much more reliable to focus on analyzing those results. Even benchmarking the first time a PR passes CI assumes that unexpected perf changes only (or more likely) happen in the initial change, not in response to reviews.",
              "createdAt": "2024-11-22T08:56:37Z",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Uu-AV",
              "body": "Thanks for all this feedback! If @adomani agrees, I think we'll focus on monthly (weekly?) reports first, analyzing benches of merged PRs.",
              "createdAt": "2024-11-23T06:02:15Z",
              "author": {
                "login": "jcommelin"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "db408a28b389b873257b0f094e2c51e1a7aa6aa2",
                "additions": 20,
                "deletions": 0,
                "committedDate": "2024-11-21T09:55:23Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFOew",
                        "name": "automatic_first_bench",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891091/job/33313345147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFNHw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891090/job/33313344799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFPmA",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891106/job/33313345432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFNGA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891088/job/33313344792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFNMA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891092/job/33313344816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx3Jg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794053/job/33313027878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx41w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794040/job/33313028311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFPzg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891095/job/33313345486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx4Rw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794053/job/33313028167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFM1Q",
                        "name": "check workflows generated by build.in.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891106/job/33313344725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx3kA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794040/job/33313027984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaFOXg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950891095/job/33313345118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx5YA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794053/job/33313028448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx5_A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794040/job/33313028604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwZx6gg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794053/job/33313028738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaNOew",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11950794040/job/33313476219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaF6Sg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33313356362"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaGxdQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19329&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwaGAlg",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33313357974"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a4f9ff985b4d13039748423609e3f35c066e5a9b",
                "additions": 10,
                "deletions": 5,
                "committedDate": "2024-11-21T10:41:09Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEfqw",
                        "name": "automatic_first_bench",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560908/job/33315430315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEg7g",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560902/job/33315430638"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEexw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560899/job/33315430087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEe9A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560905/job/33315430132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEW3w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315428063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEXrg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315428270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEhsA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560912/job/33315430832"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEZrw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315428783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEeYQ",
                        "name": "check workflows generated by build.in.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560902/job/33315429985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEYxA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315428548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEfFg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560912/job/33315430166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEYMQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315428401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEWWA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315427928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcEbzA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315429324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwceLdQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315851125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcFNrg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33315442094"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcF-QQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19329&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHwcFRWw",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33315443035"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-21T10:02:20Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": ".github/workflows/first_bench_is_free.yml",
              "additions": 25,
              "deletions": 0
            }
          ]
        },
        "headRefName": "adomani/first_bench_for_all",
        "headRefOid": "a4f9ff985b4d13039748423609e3f35c066e5a9b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6CpE8E",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
              "color": "006b75",
              "name": "CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19329,
        "potentialMergeCommit": {
          "oid": "053beb380fad9f4c2250e38dbbb68fb9df8d1c3a"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjY1NTE0MTMx",
              "login": "Ruben-VandeVelde"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEfqw",
                "name": "automatic_first_bench",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560908/job/33315430315"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEg7g",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560902/job/33315430638"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEexw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560899/job/33315430087"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEe9A",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560905/job/33315430132"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEW3w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315428063"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEXrg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315428270"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEhsA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560912/job/33315430832"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEZrw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315428783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEeYQ",
                "name": "check workflows generated by build.in.yml",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560902/job/33315429985"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEYxA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315428548"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEfFg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560912/job/33315430166"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEYMQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315428401"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEWWA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315427928"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcEbzA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560077/job/33315429324"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwceLdQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11951560049/job/33315851125"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcFNrg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33315442094"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcF-QQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19329&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHwcFRWw",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33315443035"
              }
            ]
          }
        },
        "title": "perf(CI): automatically benchmark PRs when they are opened",
        "updatedAt": "2024-11-23T06:02:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19329",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UdBh2",
              "createdAt": "2024-11-21T10:02:36Z",
              "body": "!bench\n\nThis is an automated bench-marking that runs when a PR is opened. No need to repeat.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UdB6k",
              "createdAt": "2024-11-21T10:03:13Z",
              "body": "### PR summary [a4f9ff985b](https://github.com/leanprover-community/mathlib4/pull/19329/commits/a4f9ff985b4d13039748423609e3f35c066e5a9b)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fq8qvzwAAAAOUqcqY",
              "createdAt": "2024-11-21T10:03:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
                "name": "CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UdCJL",
              "createdAt": "2024-11-21T10:03:30Z",
              "body": "@Kha @jcommelin\r\n\r\nThis is the PR introducing automatic benching of all newly-opened PRs.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fq8qvzwAAAAOUsQuG",
              "createdAt": "2024-11-21T10:24:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UdgZQ",
              "createdAt": "2024-11-21T10:42:12Z",
              "body": "!bench\n\nThis is an automated bench-marking that runs when a PR is opened. No need to repeat.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Udg4e",
              "createdAt": "2024-11-21T10:43:09Z",
              "body": "Let me play devil's advocate for a moment. AIUI, this PR aims to solve the following problem: a PR introduces an unexpected regression, that is only caught by benchmarking it after merging --- and might go entirely unnoticed, because there is no process to flag such regressions, and to follow up on such PRs. Addressing this would be nice!\r\n\r\nBenchmarking every PR prior to landing does help for that, I agree --- but also feels like a very blunt tool. (I does put lots of strain on the current benchmarking runners, and I would expect the number of mathlib PRs to go up, not down, in the future.)\r\nHave you considered different solutions? For instance: analysing these logs afterwards and trying to flag PRs automatically with \"interesting changes\", for a human to look at? (In general, that seems like a difficult problem --- adding new results generally increases instructions, after all --- but just catching \"big regressions\" should be easy still.)\r\nOr are you thinking that the \"human time\" spent on such a tool is more expensive than CI time? (That's a fair argument.)\r\n\r\n\r\nTo clarify: I'm not opposed to this decision, but I'd like to understand better why you feel this way.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Uh73X",
              "createdAt": "2024-11-21T18:03:34Z",
              "body": "I would expect that the majority of PRs don't pass CI when first opened; so I don't expect this to actually be that useful.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UiXUD",
              "createdAt": "2024-11-21T19:01:46Z",
              "body": "These doubts are fair points.  I am also thinking about a \"monthly audit\" that automatically searches the commits to master of the past month, looking for some form of increase.\n\nI'll think about maybe this check could become \"bench the first commit that passes CI\", rather than \"bench the first commit \".",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UjwXT",
              "createdAt": "2024-11-21T21:45:10Z",
              "body": "Why not bench only when it's sent to bors?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Ujxtn",
              "createdAt": "2024-11-21T21:48:26Z",
              "body": "Slightly different, but related idea: can a workflow scan the benchmarks for \"merged\" PRs, analyse them and post on zulip \"this looks suspiscious, can somebody please take a look\"? Even a fairly conservative estimate (e.g. adds > 500 * 10‚Åπ instructions) could already help.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Um7M6",
              "createdAt": "2024-11-22T08:56:37Z",
              "body": "Don't we already bench every commit to master? It seems much more reliable to focus on analyzing those results. Even benchmarking the first time a PR passes CI assumes that unexpected perf changes only (or more likely) happen in the initial change, not in response to reviews.",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Uu-AV",
              "createdAt": "2024-11-23T06:02:15Z",
              "body": "Thanks for all this feedback! If @adomani agrees, I think we'll focus on monthly (weekly?) reports first, analyzing benches of merged PRs.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            }
          ]
        }
      }
    }
  }
}
