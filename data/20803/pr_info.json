{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 31,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "roos-j"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Some lemmas for showing that a function on a proper space has compact support.\r\n\r\n---\r\n\r\nThese have common potential use cases in analysis formalizations, e.g. [here](https://github.com/fpvandoorn/carleson/pull/192).\r\n\r\n\r\nNote: I struggled a bit finding the right home for these, `#find_home` gave `Mathlib.Topology.MetricSpace.ProperSpace`, but that didn't work due to cyclic imports. `Mathlib.Algebra.Support` doesn't work for the same reason. \r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2025-01-17T21:35:16Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6ayf97",
              "body": "### PR summary [955c463197](https://github.com/leanprover-community/mathlib4/pull/20803/commits/955c46319729156b3ab27d47912603175b9d2750)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ of_mulSupport_subset_ball`\n`+ of_mulSupport_subset_closedBall`\n`+ of_mulSupport_subset_isBounded`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-16T21:31:32Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6a7WGn",
              "body": "> Note: I struggled a bit finding the right home for these, `#find_home` gave `Mathlib.Topology.MetricSpace.ProperSpace`, but that didn't work due to cyclic imports. `Mathlib.Algebra.Support` doesn't work for the same reason.\r\n\r\nFor future reference, not finding home for a lemma can be a symptom of it being non-atomic (because its atomic parts want to live in two differents parts of mathlib).",
              "createdAt": "2025-01-17T21:30:08Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6a7Xqb",
              "body": "Thank you for your opinion.",
              "createdAt": "2025-01-17T21:35:14Z",
              "author": {
                "login": "roos-j"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "955c46319729156b3ab27d47912603175b9d2750",
                "additions": 31,
                "deletions": 0,
                "committedDate": "2025-01-16T21:11:13Z",
                "author": {
                  "name": "Joris Roos",
                  "email": "roos.jor@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVO_yQw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12832315046/job/35784749635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVdzdUg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837163453/job/35800276306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUlrnvg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672418/job/35741427646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVdzdKA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837163441/job/35800276264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVdu9EQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837140581/job/35800202513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmjPPg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954274/job/35742338878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVd-9wQ",
                        "name": "Cross off linked issues",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837228130/job/35800464833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmjO2Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954271/job/35742338777"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVdu9FA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837140582/job/35800202516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmjQDg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954281/job/35742339086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVdu9Pw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837140583/job/35800202559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUlrlkw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672431/job/35741427091"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmjPOw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954272/job/35742338875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUlrmBQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672418/job/35741427205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUlrnJw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672431/job/35741427495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmjQhw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954272/job/35742339207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUlrpCw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672418/job/35741427979"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmqalQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672431/job/35742456469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmjnBQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35742344965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIUmkv4A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20803&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-16T21:30:42Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/MetricSpace/Bounded.lean",
              "additions": 31,
              "deletions": 0
            }
          ]
        },
        "headRefName": "roosj/of_support_subset",
        "headRefOid": "955c46319729156b3ab27d47912603175b9d2750",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6IEL36",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6YlrFF",
              "body": "Thank you for the PR!\r\n\r\nDo you have any use case where it is significantly simpler to use those lemmas rather than redoing their proof wherever needed (\"inlining\", in the programming lingo)? The proofs are combining atomic facts (\"if a function is supported on a compact set then it has compact support\", \"a closed ball is compact\", ) in straightforward ways to get non-atomic facts (\"if a function is supported on a closed ball then it has compact support\"), so I doubt mathlib wants them.\r\n\r\nIf we were to accept all non-atomic combinations of two atomic lemmas in mathlib, we would end up with a combinatorial explosion of lemmas. So we must be reasonable.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-17T21:28:12Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20803,
        "potentialMergeCommit": {
          "oid": "e4b065c4889aa94ca6377080e489626f0cca9728"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6YlrFF",
              "body": "Thank you for the PR!\r\n\r\nDo you have any use case where it is significantly simpler to use those lemmas rather than redoing their proof wherever needed (\"inlining\", in the programming lingo)? The proofs are combining atomic facts (\"if a function is supported on a compact set then it has compact support\", \"a closed ball is compact\", ) in straightforward ways to get non-atomic facts (\"if a function is supported on a closed ball then it has compact support\"), so I doubt mathlib wants them.\r\n\r\nIf we were to accept all non-atomic combinations of two atomic lemmas in mathlib, we would end up with a combinatorial explosion of lemmas. So we must be reasonable.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-17T21:28:12Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCi6X8w",
              "login": "roos-j"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVO_yQw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12832315046/job/35784749635"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVdzdUg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837163453/job/35800276306"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUlrnvg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672418/job/35741427646"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVdzdKA",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837163441/job/35800276264"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVdu9EQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837140581/job/35800202513"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmjPPg",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954274/job/35742338878"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVd-9wQ",
                "name": "Cross off linked issues",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837228130/job/35800464833"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmjO2Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954271/job/35742338777"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVdu9FA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837140582/job/35800202516"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmjQDg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954281/job/35742339086"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVdu9Pw",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12837140583/job/35800202559"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUlrlkw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672431/job/35741427091"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmjPOw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954272/job/35742338875"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUlrmBQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672418/job/35741427205"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUlrnJw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672431/job/35741427495"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmjQhw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817954272/job/35742339207"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUlrpCw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672418/job/35741427979"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmqalQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12817672431/job/35742456469"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmjnBQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35742344965"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIUmkv4A",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20803&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: `HasCompactMulSupport` lemmas in `ProperSpace`s",
        "updatedAt": "2025-01-17T21:35:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20803",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6mhh4NzwAAAAO3wypG",
              "createdAt": "2025-01-16T21:30:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ayf97",
              "createdAt": "2025-01-16T21:31:32Z",
              "body": "### PR summary [955c463197](https://github.com/leanprover-community/mathlib4/pull/20803/commits/955c46319729156b3ab27d47912603175b9d2750)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ of_mulSupport_subset_ball`\n`+ of_mulSupport_subset_closedBall`\n`+ of_mulSupport_subset_isBounded`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6mhh4NzwAAAAO3w0c6",
              "createdAt": "2025-01-16T21:31:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6mhh4NzwAAAAO4cL5o",
              "createdAt": "2025-01-17T15:46:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6YlrFF",
              "createdAt": "2025-01-17T21:28:12Z",
              "body": "Thank you for the PR!\r\n\r\nDo you have any use case where it is significantly simpler to use those lemmas rather than redoing their proof wherever needed (\"inlining\", in the programming lingo)? The proofs are combining atomic facts (\"if a function is supported on a compact set then it has compact support\", \"a closed ball is compact\", ) in straightforward ways to get non-atomic facts (\"if a function is supported on a closed ball then it has compact support\"), so I doubt mathlib wants them.\r\n\r\nIf we were to accept all non-atomic combinations of two atomic lemmas in mathlib, we would end up with a combinatorial explosion of lemmas. So we must be reasonable.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6a7WGn",
              "createdAt": "2025-01-17T21:30:08Z",
              "body": "> Note: I struggled a bit finding the right home for these, `#find_home` gave `Mathlib.Topology.MetricSpace.ProperSpace`, but that didn't work due to cyclic imports. `Mathlib.Algebra.Support` doesn't work for the same reason.\r\n\r\nFor future reference, not finding home for a lemma can be a symptom of it being non-atomic (because its atomic parts want to live in two differents parts of mathlib).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6mhh4NzwAAAAO4ou0H",
              "createdAt": "2025-01-17T21:30:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6mhh4NzwAAAAO4ou0S",
              "createdAt": "2025-01-17T21:30:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6a7Xqb",
              "createdAt": "2025-01-17T21:35:14Z",
              "body": "Thank you for your opinion.",
              "author": {
                "login": "roos-j"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6mhh4NzwAAAAO4o7AF",
              "createdAt": "2025-01-17T21:35:16Z"
            }
          ]
        }
      }
    }
  }
}
