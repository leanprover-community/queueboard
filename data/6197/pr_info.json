{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 12,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-05T10:11:33Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5i0tP-",
              "body": "🚀 Pull request has been placed on the maintainer queue by Vierkantor.",
              "createdAt": "2023-07-31T09:15:49Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jVB8S",
              "body": "bors merge",
              "createdAt": "2023-08-05T09:49:49Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jVDAV",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5770029379/job/15642678473)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5770029379/job/15642678344)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5770029379/job/15642678411)",
              "createdAt": "2023-08-05T10:11:32Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a2a5d1d58b95af057e4cf9c1eaa1790265c92455",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-07-28T01:44:57Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c0eda80cb2bc2865a7a7815738ab58aeabbb1429",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-28T01:56:32Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott@tqft.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3b650f41536001ee0f4b5c72917636dc45d719b2",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-28T02:22:13Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "55963117ecfbf5359c7feeb03c069ae895b15b68",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2023-07-31T11:44:39Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott@tqft.net"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-28T01:45:17Z",
        "deletions": 7,
        "files": {
          "nodes": [
            {
              "path": "Cache/IO.lean",
              "additions": 11,
              "deletions": 6
            },
            {
              "path": "Cache/Requests.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "cache_no_traverse",
        "headRefOid": "55963117ecfbf5359c7feeb03c069ae895b15b68",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Wm-Vy",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cdZJn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-07-28T02:23:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cpRpl",
              "body": "LGTM otherwise. I'm a bit hesitant to merge this given my Lean 4 metaprogramming knowledge, so:\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-07-31T09:15:35Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6197,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cdKfP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-07-28T01:47:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cdLFn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-07-28T01:49:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cdNrg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-07-28T01:56:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cdZJn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-07-28T02:23:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cpRXB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-07-31T09:14:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cpRpl",
              "body": "LGTM otherwise. I'm a bit hesitant to merge this given my Lean 4 metaprogramming knowledge, so:\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-07-31T09:15:35Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MHWn6",
                    "body": "```suggestion\r\ndef filterExists (hashMap : HashMap) (keep : Bool) : IO HashMap :=\r\n```\r\nthis name was already misleading but now it is even more misleading",
                    "createdAt": "2023-07-28T01:47:22Z",
                    "author": {
                      "login": "digama0"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MHWzX",
                    "body": "```suggestion\r\n  let hashMap ← if forceDownload then pure hashMap else hashMap.filter false\r\n```\r\nyou hit the footgun case of ← lifting over `if`",
                    "createdAt": "2023-07-28T01:49:02Z",
                    "author": {
                      "login": "digama0"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MHXmk",
                    "body": "Oof, can we have a linter?",
                    "createdAt": "2023-07-28T01:56:28Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MHakc",
                    "body": "This should just be an error in core; most similar cases give you a \"can't lift <- over binder\" error. I think it's just an oversight.",
                    "createdAt": "2023-07-28T02:23:28Z",
                    "author": {
                      "login": "digama0"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MPE-M",
                    "body": "Did I understand the purpose correctly?\r\n\r\n```suggestion\r\n/-- Filter the hashmap by whether the entries exist as files in the cache directory.\r\n\r\nIf `keep` is true, the result will contain the entries that do exist;\r\nif `keep` is false, the result will contain the entries that do not exist.\r\n-/\r\ndef filterExists (hashMap : HashMap) (keep : Bool) : IO HashMap :=\r\n```",
                    "createdAt": "2023-07-31T09:14:54Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: cache doesn't need to traverse the cache directory",
        "updatedAt": "2023-08-05T10:11:37Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6197",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a2a5d1d58b95af057e4cf9c1eaa1790265c92455"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sz6kvzwAAAAJQoBP3",
              "createdAt": "2023-07-28T01:45:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sz6kvzwAAAAJQoBP7",
              "createdAt": "2023-07-28T01:45:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cdKfP",
              "createdAt": "2023-07-28T01:47:22Z",
              "body": "",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cdLFn",
              "createdAt": "2023-07-28T01:49:02Z",
              "body": "",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c0eda80cb2bc2865a7a7815738ab58aeabbb1429"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3b650f41536001ee0f4b5c72917636dc45d719b2"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sz6kvzwAAAAJQpVdI",
              "createdAt": "2023-07-28T02:42:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cpRXB",
              "createdAt": "2023-07-31T09:14:54Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cpRpl",
              "createdAt": "2023-07-31T09:15:35Z",
              "body": "LGTM otherwise. I'm a bit hesitant to merge this given my Lean 4 metaprogramming knowledge, so:\r\n\r\nmaintainer merge",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i0tP-",
              "createdAt": "2023-07-31T09:15:49Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by Vierkantor.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "55963117ecfbf5359c7feeb03c069ae895b15b68"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jVB8S",
              "createdAt": "2023-08-05T09:49:49Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sz6kvzwAAAAJU7xRj",
              "createdAt": "2023-08-05T09:50:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sz6kvzwAAAAJU7xRx",
              "createdAt": "2023-08-05T09:50:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jVDAV",
              "createdAt": "2023-08-05T10:11:32Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5770029379/job/15642678473)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5770029379/job/15642678344)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5770029379/job/15642678411)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sz6kvzwAAAAJU76bD",
              "createdAt": "2023-08-05T10:11:34Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sz6kvzwAAAAJU76bo",
              "createdAt": "2023-08-05T10:11:37Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOB7kabM5RhCAI",
              "createdAt": "2024-03-19T09:03:09Z",
              "source": {
                "id": "I_kwDOB7kabM6Cy6Yy",
                "title": "<- lifting over if produces incorrect code",
                "url": "https://github.com/leanprover/lean4/issues/3713"
              }
            }
          ]
        }
      }
    }
  }
}
