{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 9,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "jsm28"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Add the following straightforward lemmas about spheres:\r\n\r\n```lean\r\n@[simp] lemma Sphere.center_mem_iff {s : Sphere P} : s.center ∈ s ↔ s.radius = 0 := by\r\n```\r\n\r\n```lean\r\nlemma Sphere.nonempty_iff [Nontrivial V] {s : Sphere P} : (s : Set P).Nonempty ↔ 0 ≤ s.radius := by\r\n```\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6ggtFt",
              "body": "### PR summary [f487b1cf8e](https://github.com/leanprover-community/mathlib4/pull/22472/commits/f487b1cf8e3e7f197b250c7159caa21e058e0a1a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ Sphere.center_mem_iff`\n`+ Sphere.nonempty_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-02T21:56:49Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gk8vP",
              "body": "It's the usual principle of allowing a proof (if a sphere is constructed by calculations) to be deferred until needed rather than requiring a proof before data can be constructed at all. Also, it's consistent with `Metric.sphere`, and in particular it makes sense for the membership predicates to be defeq. (As previously noted, `EuclideanGeometry.Sphere` is actually a general (pseudo)metric space definition with a less-general namespace and location in mathlib, and various of the more basic lemmas are actually metric space lemmas.)",
              "createdAt": "2025-03-03T11:17:46Z",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6glUHn",
              "body": "> It's the usual principle of allowing a proof (if a sphere is constructed by calculations) to be deferred until needed rather than requiring a proof before data can be constructed at all.\r\n\r\nI don't think that really applies here though, since:\r\n\r\n* You can often use `nnnorm` / `nnndirst` to construct a non-negative real directly\r\n* You can always use `Real.toNNReal` to defer such a proof obligation",
              "createdAt": "2025-03-03T11:59:21Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6glU3S",
              "body": "> Also, it's consistent with `Metric.sphere`, and in particular it makes sense for the membership predicates to be defeq.\r\n\r\nI think the predicate would still be defeq if using NNReal, at least when going from `Sphere` to `sphere`.",
              "createdAt": "2025-03-03T12:00:25Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gld5a",
              "body": "I think the more interesting cases of calculation would be where the radius is given by a calculation that might actually produce a negative result in some cases (and in those cases no sphere actually exists with the given property, but it's still useful to have defeq both ways and prove later the conditions under which the resulting sphere does something useful).",
              "createdAt": "2025-03-03T12:15:03Z",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6glnhH",
              "body": "If you have a concrete example in mind, it would be great to add it to the docstring of Sphere (in a future PR)!",
              "createdAt": "2025-03-03T12:31:15Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gmBQa",
              "body": "I suspect the most common examples end up with radius 0 because that's what `Real.sqrt` of a negative argument defaults to. However, there may well be a case for choosing to explicitly give some such cases a negative (arbitrary) radius in order to allow other `iff` results to be true without side conditions (if it's actually useful for the sphere to be empty, if the desired result is \"a point is in this sphere iff ...\" where in some cases no points satisfy that condition).",
              "createdAt": "2025-03-03T12:59:58Z",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6h4Jrv",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2025-03-11T22:33:39Z",
              "author": {
                "login": "ocfnash"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "dfb3bdb106628f00d553a92b469bc5c3c50f4242",
                "additions": 12,
                "deletions": 0,
                "committedDate": "2025-03-02T21:51:13Z",
                "author": {
                  "name": "Joseph Myers",
                  "email": "jsm@polyomino.org.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz9Vg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673760/job/38067305814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz85w",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673762/job/38067305703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Py9AQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619667009/job/38067289345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3oOVBA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13629162490/job/38092903684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz84Q",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673758/job/38067305697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz85g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673759/job/38067305702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3oOVCg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13629162485/job/38092903690"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz86A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673757/job/38067305704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3oOU4g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13629162470/job/38092903650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Py8pQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619667025/job/38067289253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz9hg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673756/job/38067305862"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Py8iQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619667009/job/38067289225"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Py8WQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619667025/job/38067289177"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Pz9Rw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619673756/job/38067305799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Py9QA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619667009/job/38067289408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P64rQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619667025/job/38067419309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P0Cug",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38067307194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P0U7A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "78e064bdfe12b874a4d018fac9327ec933751429",
                "additions": 2721,
                "deletions": 1685,
                "committedDate": "2025-03-03T12:03:54Z",
                "author": {
                  "name": "Joseph Myers",
                  "email": "jsm@polyomino.org.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f487b1cf8e3e7f197b250c7159caa21e058e0a1a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-03-03T12:05:23Z",
                "author": {
                  "name": "Joseph Myers",
                  "email": "jsm@polyomino.org.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_KyGoQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799536842/job/38598903457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sFsSg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475619/job/38096956490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sZ_-Q",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630580808/job/38097289209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3scI-w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630593026/job/38097324283"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3tZ82g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630924825/job/38098336986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3vJvVw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13631527763/job/38100168535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_KuwyQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799517206/job/38598848713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_LJXWQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799664847/job/38599284569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sF3mw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476890/job/38096959387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3saAHg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630580800/job/38097289246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3scI4w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630593015/job/38097324259"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3tZ8ew",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630924824/job/38098336891"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3vJvEg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13631527767/job/38100168466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_KuwSg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799517212/job/38598848586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_LJYLw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799664856/job/38599284783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sF3Mw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476897/job/38096959283"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sZ_xg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630580804/job/38097289158"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3scKNg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630593020/job/38097324598"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3tZ8-w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630924847/job/38098337019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3vJvGg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13631527778/job/38100168474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_KuxKw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799517213/job/38598848811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_LJWzA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799664845/job/38599284428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sFp5w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475616/job/38096955879"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sF3Vg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476887/job/38096959318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sFqNg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475619/job/38096955958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sFrqA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475616/job/38096956328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sF4_g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476887/job/38096959742"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sFuFQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475619/job/38096956949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3snIng",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475616/job/38097504414"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAIHQ2MlA",
                        "context": "bors",
                        "state": "PENDING",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/10022",
                        "description": "Waiting in queue"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sGeiA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38096969352"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3sIczg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-02T21:55:53Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Geometry/Euclidean/Sphere/Basic.lean",
              "additions": 9,
              "deletions": 0
            }
          ]
        },
        "headRefName": "jsm28/sphere_mem_lemmas",
        "headRefOid": "f487b1cf8e3e7f197b250c7159caa21e058e0a1a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6NE4Ws",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
              "color": "acff3f",
              "name": "easy"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJn8g",
              "color": "33DBEC",
              "name": "t-euclidean-geometry"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6fhNS9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-11T22:43:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fhGgT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2025-03-11T22:32:34Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22472,
        "potentialMergeCommit": {
          "oid": "bc3ecc0a74ae10cadf4a2526faa5fe56cf4e1d1c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6eLVMo",
              "body": "What's the rationale for allowing negative-radius spheres in the first place? I can see the appeal of allowing zero-radius spheres, but would be tempted to change the definition to `radius : NNReal` to get rid of this class of degeneracy.",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-03T10:52:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eL8xE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-03T12:02:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eL9gJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-03T12:03:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eMBb_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jsm28"
              },
              "submittedAt": "2025-03-03T12:11:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eMBuI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jsm28"
              },
              "submittedAt": "2025-03-03T12:11:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eMMUA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-03T12:29:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eMfVE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jsm28"
              },
              "submittedAt": "2025-03-03T13:02:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fhGgT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2025-03-11T22:32:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fhNS9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-11T22:43:21Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c513L9G",
                    "body": "I think this might be better with `Set.Nonempty s` on the LHS",
                    "createdAt": "2025-03-03T12:02:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c513O5r",
                    "body": "Changed to use `Set.Nonempty`.",
                    "createdAt": "2025-03-03T12:11:11Z",
                    "author": {
                      "login": "jsm28"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c513Mgi",
                    "body": "Why not \r\n```suggestion\r\n  obtain ⟨v, hv⟩ := (NormedSpace.sphere_nonempty (x := (s.center : V)) (r := s.radius)).2 h\r\n```",
                    "createdAt": "2025-03-03T12:03:31Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c513PE6",
                    "body": "I don't see how that would work, since `s.center` is in `P` not `V`.",
                    "createdAt": "2025-03-03T12:11:47Z",
                    "author": {
                      "login": "jsm28"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c513VHF",
                    "body": "Ah, I think I was expecting a `NormedAddTorsor.sphere_nonempty` lemma about `Metric.sphere`. Could you add that one too, which should be defeq to this statement?",
                    "createdAt": "2025-03-03T12:29:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c513gb-",
                    "body": "Where should such a lemma go? It needs to import both `Mathlib.Analysis.Normed.Affine.AddTorsor` and `Mathlib.Analysis.NormedSpace.Pointwise`.\r\n\r\n```lean\r\n@[simp] lemma NormedAddTorsor.sphere_nonempty [Nontrivial V] (x : P) {r : ℝ} :\r\n    (sphere x r).Nonempty ↔ 0 ≤ r := by\r\n  refine ⟨fun ⟨p, hp⟩ ↦ nonneg_of_mem_sphere hp, fun h ↦ ?_⟩\r\n  obtain ⟨v, hv⟩ := (NormedSpace.sphere_nonempty (x := (0 : V)) (r := r)).2 h\r\n  refine ⟨v +ᵥ x, ?_⟩\r\n  simpa [mem_sphere] using hv\r\n```\r\n",
                    "createdAt": "2025-03-03T13:02:46Z",
                    "author": {
                      "login": "jsm28"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52oDKi",
                    "body": "Let's unblock this PR by leaving the extra lemma for a follow-up PR.",
                    "createdAt": "2025-03-11T22:32:34Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52oGXt",
                    "body": "> Where should such a lemma go? \r\n\r\nIt could also just go right here in this file for now!",
                    "createdAt": "2025-03-11T22:43:21Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwNTM3Nzkz",
              "login": "jsm28"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_KyGoQ",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799536842/job/38598903457"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sFsSg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475619/job/38096956490"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sZ_-Q",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630580808/job/38097289209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3scI-w",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630593026/job/38097324283"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3tZ82g",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630924825/job/38098336986"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3vJvVw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13631527763/job/38100168535"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_KuwyQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799517206/job/38598848713"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_LJXWQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799664847/job/38599284569"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sF3mw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476890/job/38096959387"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3saAHg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630580800/job/38097289246"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3scI4w",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630593015/job/38097324259"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3tZ8ew",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630924824/job/38098336891"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3vJvEg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13631527767/job/38100168466"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_KuwSg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799517212/job/38598848586"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_LJYLw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799664856/job/38599284783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sF3Mw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476897/job/38096959283"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sZ_xg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630580804/job/38097289158"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3scKNg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630593020/job/38097324598"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3tZ8-w",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630924847/job/38098337019"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3vJvGg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13631527778/job/38100168474"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_KuxKw",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799517213/job/38598848811"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_LJWzA",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13799664845/job/38599284428"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sFp5w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475616/job/38096955879"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sF3Vg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476887/job/38096959318"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sFqNg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475619/job/38096955958"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sFrqA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475616/job/38096956328"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sF4_g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630476887/job/38096959742"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sFuFQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475619/job/38096956949"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3snIng",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13630475616/job/38097504414"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAIHQ2MlA",
                "context": "bors",
                "state": "PENDING",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/10022",
                "description": "Waiting in queue"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sGeiA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38096969352"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3sIczg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22472&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Geometry/Euclidean/Sphere/Basic): two small lemmas",
        "updatedAt": "2025-03-11T22:43:21Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22472",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dfb3bdb106628f00d553a92b469bc5c3c50f4242"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6sPw0uzwAAAAPZCdwq",
              "createdAt": "2025-03-02T21:55:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6sPw0uzwAAAAPZCdwv",
              "createdAt": "2025-03-02T21:55:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJn8g",
                "name": "t-euclidean-geometry"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ggtFt",
              "createdAt": "2025-03-02T21:56:49Z",
              "body": "### PR summary [f487b1cf8e](https://github.com/leanprover-community/mathlib4/pull/22472/commits/f487b1cf8e3e7f197b250c7159caa21e058e0a1a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ Sphere.center_mem_iff`\n`+ Sphere.nonempty_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5-PPFG",
              "createdAt": "2025-03-03T00:36:45Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6NFJWb",
                "title": "feat(Geometry/Euclidean/Sphere/Tangent): tangents to spheres",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22483"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eLVMo",
              "createdAt": "2025-03-03T10:52:29Z",
              "body": "What's the rationale for allowing negative-radius spheres in the first place? I can see the appeal of allowing zero-radius spheres, but would be tempted to change the definition to `radius : NNReal` to get rid of this class of degeneracy.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gk8vP",
              "createdAt": "2025-03-03T11:17:46Z",
              "body": "It's the usual principle of allowing a proof (if a sphere is constructed by calculations) to be deferred until needed rather than requiring a proof before data can be constructed at all. Also, it's consistent with `Metric.sphere`, and in particular it makes sense for the membership predicates to be defeq. (As previously noted, `EuclideanGeometry.Sphere` is actually a general (pseudo)metric space definition with a less-general namespace and location in mathlib, and various of the more basic lemmas are actually metric space lemmas.)",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6glUHn",
              "createdAt": "2025-03-03T11:59:21Z",
              "body": "> It's the usual principle of allowing a proof (if a sphere is constructed by calculations) to be deferred until needed rather than requiring a proof before data can be constructed at all.\r\n\r\nI don't think that really applies here though, since:\r\n\r\n* You can often use `nnnorm` / `nnndirst` to construct a non-negative real directly\r\n* You can always use `Real.toNNReal` to defer such a proof obligation",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6glU3S",
              "createdAt": "2025-03-03T12:00:25Z",
              "body": "> Also, it's consistent with `Metric.sphere`, and in particular it makes sense for the membership predicates to be defeq.\r\n\r\nI think the predicate would still be defeq if using NNReal, at least when going from `Sphere` to `sphere`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eL8xE",
              "createdAt": "2025-03-03T12:02:22Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eL9gJ",
              "createdAt": "2025-03-03T12:03:31Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "78e064bdfe12b874a4d018fac9327ec933751429"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f487b1cf8e3e7f197b250c7159caa21e058e0a1a"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gld5a",
              "createdAt": "2025-03-03T12:15:03Z",
              "body": "I think the more interesting cases of calculation would be where the radius is given by a calculation that might actually produce a negative result in some cases (and in those cases no sphere actually exists with the given property, but it's still useful to have defeq both ways and prove later the conditions under which the resulting sphere does something useful).",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6glnhH",
              "createdAt": "2025-03-03T12:31:15Z",
              "body": "If you have a concrete example in mind, it would be great to add it to the docstring of Sphere (in a future PR)!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gmBQa",
              "createdAt": "2025-03-03T12:59:58Z",
              "body": "I suspect the most common examples end up with radius 0 because that's what `Real.sqrt` of a negative argument defaults to. However, there may well be a case for choosing to explicitly give some such cases a negative (arbitrary) radius in order to allow other `iff` results to be true without side conditions (if it's actually useful for the sphere to be empty, if the desired result is \"a point is in this sphere iff ...\" where in some cases no points satisfy that condition).",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h4Jrv",
              "createdAt": "2025-03-11T22:33:39Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6sPw0uzwAAAAPjVnC6",
              "createdAt": "2025-03-11T22:33:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            }
          ]
        }
      }
    }
  }
}
