{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 3,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ChrisHughes24"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n`Formula` is currently an abbreviation for `BoundedFormula`. There were some definitions like `not` which were defined on both `BoundedFormula` and `Formula`, and I have made the `Formula` versions into `abbrev` so there is no need to duplicate `simp` lemmas.\r\n\r\nA concrete advantage of this PR is that the following lemma is proved by `simp` with the lemma `Formula.realize_not` where it wasn't before.\r\n\r\n```\r\nexample (φ : L.Formula α) (v : α → M) :\r\n    Formula.Realize (∼ φ) v ↔ ¬φ.Realize v := by\r\n  simp\r\n```\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-08-02T16:24:06Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jFuhx",
              "body": "Is there a reason not to delete the `simp` lemmas that you are talking about in this PR? E.g [FirstOrder.Language.Formula.realize_not](https://leanprover-community.github.io/mathlib4_docs/Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Formula.realize_not) if I understand correctly?\r\n\r\nOtherwise LGTM\r\n\r\nbors d+",
              "createdAt": "2023-08-02T15:40:54Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jFujA",
              "body": ":v: ChrisHughes24 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-02T15:40:56Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jFzmo",
              "body": "The issue is that the simp lemmas didn't trigger because there were two definitions of `not` on `Formula`, both `BoundedFormula.not` and `Formula.not`, which are equal, and since `Formula` is reducible it's easy to end up with the wrong one. So the lemmas stand, but I did make a mistake in my description and I should have written `Formula.realize_not` instead of `Sentence.realize_not`",
              "createdAt": "2023-08-02T15:48:52Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jF0F1",
              "body": "bors merge",
              "createdAt": "2023-08-02T15:49:54Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jF1fR",
              "body": "Ah right I understand now. Thanks!",
              "createdAt": "2023-08-02T15:53:39Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jGDza",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5741039884/job/15560239400)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5741039884/job/15560239985)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5741039884/job/15560240261)",
              "createdAt": "2023-08-02T16:24:05Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "3f7627c13f5abe2a1465492de32c4a0c4ccf5cd5",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-07-27T08:13:27Z",
                "author": {
                  "name": "Chris Hughes",
                  "email": "chrishughes24@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-27T08:19:07Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/ModelTheory/Syntax.lean",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "ModelTheory-def-abbrev",
        "headRefOid": "3f7627c13f5abe2a1465492de32c4a0c4ccf5cd5",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WhMmF",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6171,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMzODQ3Njg2",
              "login": "ChrisHughes24"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix(ModelTheory): make some defs into abbrevs",
        "updatedAt": "2023-08-02T16:24:19Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6171",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3f7627c13f5abe2a1465492de32c4a0c4ccf5cd5"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5stdtGzwAAAAJQCf5p",
              "createdAt": "2023-07-27T08:19:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jFuhx",
              "createdAt": "2023-08-02T15:40:54Z",
              "body": "Is there a reason not to delete the `simp` lemmas that you are talking about in this PR? E.g [FirstOrder.Language.Formula.realize_not](https://leanprover-community.github.io/mathlib4_docs/Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Formula.realize_not) if I understand correctly?\r\n\r\nOtherwise LGTM\r\n\r\nbors d+",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jFujA",
              "createdAt": "2023-08-02T15:40:56Z",
              "body": ":v: ChrisHughes24 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5stdtGzwAAAAJTbrd4",
              "createdAt": "2023-08-02T15:41:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5stdtGzwAAAAJTbrg0",
              "createdAt": "2023-08-02T15:41:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jFzmo",
              "createdAt": "2023-08-02T15:48:52Z",
              "body": "The issue is that the simp lemmas didn't trigger because there were two definitions of `not` on `Formula`, both `BoundedFormula.not` and `Formula.not`, which are equal, and since `Formula` is reducible it's easy to end up with the wrong one. So the lemmas stand, but I did make a mistake in my description and I should have written `Formula.realize_not` instead of `Sentence.realize_not`",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jF0F1",
              "createdAt": "2023-08-02T15:49:54Z",
              "body": "bors merge",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5stdtGzwAAAAJTcCw_",
              "createdAt": "2023-08-02T15:50:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jF1fR",
              "createdAt": "2023-08-02T15:53:39Z",
              "body": "Ah right I understand now. Thanks!",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jGDza",
              "createdAt": "2023-08-02T16:24:05Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5741039884/job/15560239400)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5741039884/job/15560239985)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5741039884/job/15560240261)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5stdtGzwAAAAJTdUrC",
              "createdAt": "2023-08-02T16:24:07Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5stdtGzwAAAAJTdVK9",
              "createdAt": "2023-08-02T16:24:19Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
