{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 27,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "author": {
          "login": "euprunin"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Motivation: PR #16273",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2024-09-12T11:49:41Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Ke2p3",
              "body": "### PR summary [95aa2ef257](https://github.com/leanprover-community/mathlib4/pull/16384/commits/95aa2ef2578645f675fb36b1501c84c8d8412404)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic.Linter.TextBased | 2 | 3 | +1 (+50.00%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.Linter` `Mathlib.Tactic.Linter.TextBased`|1|\n\n</details>\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ duplicateImportsLinter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-09-01T13:37:02Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Kkuzq",
              "body": "Merge conflict resolved.",
              "createdAt": "2024-09-02T14:30:18Z",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KmUTw",
              "body": "@grunweg I think I lean towards option 1, but it would be fun to try tackling option 2 or even 3 as follow-ups if time permits.",
              "createdAt": "2024-09-02T21:05:16Z",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K5Qly",
              "body": "@grunweg a question, not directly related to getting this PR's scope:\r\n\r\nShouldn't this and the `BroadImport` linter both be syntax based and look at `(‚Üê getEnv).header.imports`? \r\n\r\nOr maybe a wrapper of that like [Lean.Environment.importsOf](https://leanprover-community.github.io/mathlib4_docs/ImportGraph/Imports.html#Lean.Environment.importsOf)\r\n\r\n(forgot if that still includes the duplicates, but I thought it might)\r\n",
              "createdAt": "2024-09-04T22:32:57Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LBcqB",
              "body": "I believe I've addressed all the review comments. Please let me know if there's anything else I can do.\r\n\r\nAs for the policy, should I squash the intermediate \"fixup\" commits added during the review, or is that handled automatically during the merge?",
              "createdAt": "2024-09-05T18:45:05Z",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LIbtG",
              "body": "PRs are squash-merged in the end, so there is no need to squash intermediate commits.\r\nIn fact, it is easier for reviewers if you *don't* rebase your commits once they were reviewed: that makes it easier to see what you changed. (Before your PR gets reviewed, rebasing is fine. I do so quite often when dependent PRs have been merged.)",
              "createdAt": "2024-09-06T14:56:12Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LlGDd",
              "body": "When rebasing on `master` this linter now flags a new duplicate import:\r\n\r\n```\r\n% lake exe lint-style\r\nerror: Mathlib/CategoryTheory/Sites/Adjunction.lean:8: Duplicate imports: import Mathlib.CategoryTheory.Adjunction.Restrict (already imported on line 6)\r\nerror: found 1 new style error(s)\r\n```",
              "createdAt": "2024-09-10T18:44:47Z",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LzHui",
              "body": "@joneugster, I just wanted to check in and see if the latest version has addressed all of your review comments. Please feel free to let me know if anything still needs attention!",
              "createdAt": "2024-09-12T07:05:27Z",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6L0eYh",
              "body": "I think this looks very good now, thank you for the PR.\r\n\r\nMy suggestion to unify this and the broad import linter in a syntax linter can -- if possible -- be a new PR and is certainly out-of-scope here.\r\n\r\nmaintainer merge",
              "createdAt": "2024-09-12T09:48:41Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6L0ejv",
              "body": "üöÄ Pull request has been placed on the maintainer queue by joneugster.",
              "createdAt": "2024-09-12T09:49:01Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6L0lTm",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2024-09-12T10:02:01Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6L1kV2",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10829350182/job/30046717226)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10829350182/job/30046717510)",
              "createdAt": "2024-09-12T11:49:41Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "95aa2ef2578645f675fb36b1501c84c8d8412404",
                "additions": 27,
                "deletions": 1,
                "committedDate": "2024-09-06T14:43:37Z",
                "author": {
                  "name": "euprunin",
                  "email": "euprunin@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG748WFw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560522/job/29788935703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG748V7w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560523/job/29788935663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG748WEA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560525/job/29788935696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG_xUr2A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10830189290/job/30049381336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74ceOQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407835/job/29788413497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74ceMQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407844/job/29788413489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cbdA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788412788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74ccBw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788412935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cfoA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407847/job/29788413856"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG748XpQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560522/job/29788936101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74ceOg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788413498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cZjQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788412301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cedQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407847/job/29788413557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74ccyw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788413131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cdMA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788413232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cZ5g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788412390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74caqQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788412585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74cgEA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788413968"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG77D95w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29791157735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74c6ow",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29788420771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG74d5cw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16384&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHTDSzzg",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5752",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-01T13:36:16Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/Linter/TextBased.lean",
              "additions": 27,
              "deletions": 1
            }
          ]
        },
        "headRefName": "euprunin_duplicate_import_linter",
        "headRefOid": "95aa2ef2578645f675fb36b1501c84c8d8412404",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c56FbXR",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
              "color": "33DBEC",
              "name": "t-linter"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ISPn0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-09-06T14:54:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H_Vaa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2024-09-04T22:35:05Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16384,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HpvMQ",
              "body": "Thanks for the PR! While I don't expect this linter to find many *new* issues, it also looks like it should run quickly, so including this as a linter should not hurt.\r\n\r\nI have the feeling the implementation can be made more robust, by not manually parsing the list of imports. This is a pre-existing issue; refactoring the `broadImports` linter has been on my list for a while. In the short term, I can think of the following options.\r\n(1) Landing the linter as-is, with my comments addressed (and refactoring in a follow-up).\r\n(2) Extracting the current implementation for parsing the imports into one function, and using that for both linters: this is a small amount of extra work compared to (1), but makes the future refactoring easier to complete.\r\n(3) I'll try to refactor the linters now, and this PR waits on that refactoring. Nicest in the medium-term. I will try, but cannot guarantee I'd get to this before end of September.\r\n\r\nWhat do you think? Do you think you could do (2)? Or would you like to try (3), with some pointers in the right direction?",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-09-02T15:14:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Hqow4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "euprunin"
              },
              "submittedAt": "2024-09-02T19:20:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Hqpjp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "euprunin"
              },
              "submittedAt": "2024-09-02T19:26:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Hqppq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "euprunin"
              },
              "submittedAt": "2024-09-02T19:27:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H_LRB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2024-09-04T22:01:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H_Mzb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2024-09-04T22:06:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H_TmG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2024-09-04T22:27:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H_Vaa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2024-09-04T22:35:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6IIDjk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "euprunin"
              },
              "submittedAt": "2024-09-05T18:35:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6IID2C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "euprunin"
              },
              "submittedAt": "2024-09-05T18:35:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6IID-o",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "euprunin"
              },
              "submittedAt": "2024-09-05T18:36:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ISPn0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-09-06T14:54:52Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nxkkd",
                    "body": "Careful, the error code does not match what you had above.",
                    "createdAt": "2024-09-02T15:06:28Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nyNN3",
                    "body": "Thanks! Fixed.",
                    "createdAt": "2024-09-02T19:27:17Z",
                    "author": {
                      "login": "euprunin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nxkq-",
                    "body": "How about including a `name` of a duplicate import in the error message?",
                    "createdAt": "2024-09-02T15:06:54Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nxk7f",
                    "body": "On the naming side, I'd call the variant `duplicateImport` (singular).\r\nPerhaps it's also nicer to start the error message in lower-case, but as all other variants use upper-case also, that change should be made separately for all variants.",
                    "createdAt": "2024-09-02T15:07:56Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nyNKQ",
                    "body": "All feedback adressed including changing the `StyleError` capitalization.",
                    "createdAt": "2024-09-02T19:26:32Z",
                    "author": {
                      "login": "euprunin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5n_DVE",
                    "body": "I think @grunweg meant the capitalisation of the String messages, not the constructor names!",
                    "createdAt": "2024-09-04T22:27:22Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5n_Egv",
                    "body": "So let's just revert this change of yours and stick to \r\n\r\n```lean\r\n| StyleError.duplicateImports => s!\"Duplicate imports: {whatever you have here}\"\r\n```\r\n\r\nas you had it originally!",
                    "createdAt": "2024-09-04T22:35:05Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nxlcE",
                    "body": "This should work, but is quadratic in the number of imports. (In practice, that should not matter much.)\r\nA slightly more efficient way would be to sort the imports at the end, and then check if any two consecutive imports are the same (using `List.eraseReps` or similar).",
                    "createdAt": "2024-09-02T15:10:07Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nyMh1",
                    "body": "I tried using `List.eraseReps`, but the code became a bit too lengthy for my liking (we still need to track the line number of each duplicate, which adds some complexity). I'm now using `Std.HashMap` instead. Does it look better?",
                    "createdAt": "2024-09-02T19:20:03Z",
                    "author": {
                      "login": "euprunin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n-9rS",
                    "body": "```suggestion\r\nimport Std.Data.HashMap.Basic\r\n```\r\nunnecessary broad import",
                    "createdAt": "2024-09-04T22:01:33Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5oEctY",
                    "body": "Thanks!",
                    "createdAt": "2024-09-05T18:36:09Z",
                    "author": {
                      "login": "euprunin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n--zQ",
                    "body": "I don't think this is following the naming convention, is it? My intuition says `StyleError.copyright` should be lower case.\r\n\r\n[Style guide](https://leanprover-community.github.io/contribute/naming.html#general-conventions):\r\n> All other terms of Types (basically anything else) are in lowerCamelCase.",
                    "createdAt": "2024-09-04T22:02:43Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5oEcoY",
                    "body": "Ah, I misunderstood @grunweg's suggestion. Now reverted to the original style.",
                    "createdAt": "2024-09-05T18:35:50Z",
                    "author": {
                      "login": "euprunin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5oJQQg",
                    "body": "Indeed, I had referred to the capitalisation of the *error messages*, not the constructors. Thanks for correcting this.",
                    "createdAt": "2024-09-06T14:54:52Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n-_RR",
                    "body": "Isn't this `String.trim`?",
                    "createdAt": "2024-09-04T22:04:18Z",
                    "author": {
                      "login": "joneugster"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5oEcea",
                    "body": "Thank you! I searched for it but somehow overlooked it.",
                    "createdAt": "2024-09-05T18:35:10Z",
                    "author": {
                      "login": "euprunin"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCqdB6w",
              "login": "euprunin"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG748WFw",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560522/job/29788935703"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG748V7w",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560523/job/29788935663"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG748WEA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560525/job/29788935696"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG_xUr2A",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10830189290/job/30049381336"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74ceOQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407835/job/29788413497"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74ceMQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407844/job/29788413489"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cbdA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788412788"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74ccBw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788412935"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cfoA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407847/job/29788413856"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG748XpQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740560522/job/29788936101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74ceOg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788413498"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cZjQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788412301"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cedQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407847/job/29788413557"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74ccyw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788413131"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cdMA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788413232"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cZ5g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788412390"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74caqQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29788412585"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74cgEA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407543/job/29788413968"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG77D95w",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10740407536/job/29791157735"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74c6ow",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29788420771"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG74d5cw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16384&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHTDSzzg",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5752",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: lint on (syntactically) duplicate imports",
        "updatedAt": "2024-09-12T11:49:46Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16384",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Ke2p3",
              "createdAt": "2024-09-01T13:37:02Z",
              "body": "### PR summary [95aa2ef257](https://github.com/leanprover-community/mathlib4/pull/16384/commits/95aa2ef2578645f675fb36b1501c84c8d8412404)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic.Linter.TextBased | 2 | 3 | +1 (+50.00%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.Linter` `Mathlib.Tactic.Linter.TextBased`|1|\n\n</details>\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ duplicateImportsLinter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6U-vR4zwAAAANIG867",
              "createdAt": "2024-09-01T13:37:03Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwMTA1MDE2",
                "login": "grunweg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANIO070",
              "createdAt": "2024-09-02T02:40:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6U-vR4zwAAAANIrZ_R",
              "createdAt": "2024-09-02T14:10:12Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6U-vR4zwAAAANIsXYR",
              "createdAt": "2024-09-02T14:30:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Kkuzq",
              "createdAt": "2024-09-02T14:30:18Z",
              "body": "Merge conflict resolved.",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HpvMQ",
              "createdAt": "2024-09-02T15:06:28Z",
              "body": "Thanks for the PR! While I don't expect this linter to find many *new* issues, it also looks like it should run quickly, so including this as a linter should not hurt.\r\n\r\nI have the feeling the implementation can be made more robust, by not manually parsing the list of imports. This is a pre-existing issue; refactoring the `broadImports` linter has been on my list for a while. In the short term, I can think of the following options.\r\n(1) Landing the linter as-is, with my comments addressed (and refactoring in a follow-up).\r\n(2) Extracting the current implementation for parsing the imports into one function, and using that for both linters: this is a small amount of extra work compared to (1), but makes the future refactoring easier to complete.\r\n(3) I'll try to refactor the linters now, and this PR waits on that refactoring. Nicest in the medium-term. I will try, but cannot guarantee I'd get to this before end of September.\r\n\r\nWhat do you think? Do you think you could do (2)? Or would you like to try (3), with some pointers in the right direction?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANIudY_",
              "createdAt": "2024-09-02T15:17:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANIudZH",
              "createdAt": "2024-09-02T15:17:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
                "name": "t-linter"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KmUTw",
              "createdAt": "2024-09-02T21:05:16Z",
              "body": "@grunweg I think I lean towards option 1, but it would be fun to try tackling option 2 or even 3 as follow-ups if time permits.",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6U-vR4zwAAAANJZXB_",
              "createdAt": "2024-09-03T14:26:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6H_LRB",
              "createdAt": "2024-09-04T22:01:33Z",
              "body": "",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6H_Mzb",
              "createdAt": "2024-09-04T22:02:43Z",
              "body": "",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANKs0O3",
              "createdAt": "2024-09-04T22:11:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5Qly",
              "createdAt": "2024-09-04T22:32:57Z",
              "body": "@grunweg a question, not directly related to getting this PR's scope:\r\n\r\nShouldn't this and the `BroadImport` linter both be syntax based and look at `(‚Üê getEnv).header.imports`? \r\n\r\nOr maybe a wrapper of that like [Lean.Environment.importsOf](https://leanprover-community.github.io/mathlib4_docs/ImportGraph/Imports.html#Lean.Environment.importsOf)\r\n\r\n(forgot if that still includes the duplicates, but I thought it might)\r\n",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6U-vR4zwAAAANLf-u-",
              "createdAt": "2024-09-05T18:37:44Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6U-vR4zwAAAANLgJON",
              "createdAt": "2024-09-05T18:41:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LBcqB",
              "createdAt": "2024-09-05T18:45:05Z",
              "body": "I believe I've addressed all the review comments. Please let me know if there's anything else I can do.\r\n\r\nAs for the policy, should I squash the intermediate \"fixup\" commits added during the review, or is that handled automatically during the merge?",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANL8jxy",
              "createdAt": "2024-09-06T09:10:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6U-vR4zwAAAANMMtzr",
              "createdAt": "2024-09-06T14:44:14Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6U-vR4zwAAAANMM8Uv",
              "createdAt": "2024-09-06T14:49:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LIbtG",
              "createdAt": "2024-09-06T14:56:12Z",
              "body": "PRs are squash-merged in the end, so there is no need to squash intermediate commits.\r\nIn fact, it is easier for reviewers if you *don't* rebase your commits once they were reviewed: that makes it easier to see what you changed. (Before your PR gets reviewed, rebasing is fine. I do so quite often when dependent PRs have been merged.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LlGDd",
              "createdAt": "2024-09-10T18:44:47Z",
              "body": "When rebasing on `master` this linter now flags a new duplicate import:\r\n\r\n```\r\n% lake exe lint-style\r\nerror: Mathlib/CategoryTheory/Sites/Adjunction.lean:8: Duplicate imports: import Mathlib.CategoryTheory.Adjunction.Restrict (already imported on line 6)\r\nerror: found 1 new style error(s)\r\n```",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5U9_U4",
              "createdAt": "2024-09-10T18:49:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c57CK9y",
                "title": "[Merged by Bors] - chore: remove (syntactically) duplicate import",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16681"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LzHui",
              "createdAt": "2024-09-12T07:05:27Z",
              "body": "@joneugster, I just wanted to check in and see if the latest version has addressed all of your review comments. Please feel free to let me know if anything still needs attention!",
              "author": {
                "login": "euprunin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6L0eYh",
              "createdAt": "2024-09-12T09:48:41Z",
              "body": "I think this looks very good now, thank you for the PR.\r\n\r\nMy suggestion to unify this and the broad import linter in a syntax linter can -- if possible -- be a new PR and is certainly out-of-scope here.\r\n\r\nmaintainer merge",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6U-vR4zwAAAANQK2jT",
              "createdAt": "2024-09-12T09:48:48Z",
              "assignee": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6L0ejv",
              "createdAt": "2024-09-12T09:49:01Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by joneugster.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANQK3Vw",
              "createdAt": "2024-09-12T09:49:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6L0lTm",
              "createdAt": "2024-09-12T10:02:01Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6U-vR4zwAAAANQLjQb",
              "createdAt": "2024-09-12T10:02:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6L1kV2",
              "createdAt": "2024-09-12T11:49:41Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10829350182/job/30046717226)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10829350182/job/30046717510)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6U-vR4zwAAAANQQ4ry",
              "createdAt": "2024-09-12T11:49:42Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6U-vR4zwAAAANQQ47A",
              "createdAt": "2024-09-12T11:49:46Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOB7kabM5X_xkr",
              "createdAt": "2024-09-23T21:59:07Z",
              "source": {
                "id": "PR_kwDOB7kabM58bopV",
                "title": "chore: remove (syntactically) duplicate imports",
                "url": "https://github.com/leanprover/lean4/pull/5437"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
