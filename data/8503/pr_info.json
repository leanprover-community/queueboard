{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 312,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            }
          ]
        },
        "author": {
          "login": "thorimur"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR introduces some metaprogramming infrastructure and utilities that are necessary for `refine?` (#8364).\r\n\r\n* `elabTermWithHoles'` (and `withCollectingNewGoalsFrom'`): a more configurable version of `elabTermWithHoles`, which allows: preserving the initial mvar type; *not* tagging untagged goals; and postponing mvars.\r\n* Some `Syntax` and `TSyntax` functionality, including:\r\n  * `TSyntax.map`(`M`), for acting on `TSyntax` with functions `f : Syntax -> (m) Syntax`\r\n  * Range operations: `includes` and `isEqByRange`\r\n  * `setTrailingInfoBy?` and `unsetOriginalTrailing`, which is like `unsetTrailing`, but behaves as expected.\r\n* `Term.withoutModifyingState`, which does not allow unknown mvarIds to escape via the infotree\r\n* `hasNewErrors`, which runs a monad computation and returns the value along with `true` or `false` depending on whether new error messages have been logged\r\n* the option `pp.anonymousMVarSuffixes`, which can be set to `false` to replace all numeric suffixes of anonymous mvars with `✝`, which is useful in tandem with `#guard_msgs` for tests (but is essentially a workaround—although it can make some tactic states more legible).\r\n\r\n---\r\n\r\nI'm open to suggestions on the location and name of the option/delaborator used for trimming the numeric suffixes of anonymous mvar names (which is used in the tests)—including whether or not it should exist in the first place, as it's essentially just a workaround.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5vfHsR",
              "body": "Sorry for the lack of review. There is a lot of unrelated content here, which makes it unreviewable as-is, and I have been meaning to point out specific bits that could be their own PRs, but I haven't been able to get around to doing that.\r\n\r\nIf you want to contribute this, here are some guidelines:\r\n- Make sure each meta PR is contributing one feature.\r\n- We might call them \"features\", but every new function is something we're paying for (in complexity, in time to learn, in maintenance, in debugging, etc.). Make sure each addition to the API is something that satisfies a need and will pay for itself. The PR description could include justification, especially for features that aren't so obvious -- please make sure the justification is succinct and easy to evaluate.\r\n- I think mathlib meta API should include details of the relationship of a function to other pre-existing functions in core and std in docstrings. Ideally mathlib, too. Whenever I see a function in our meta library, one of my first questions is \"ok, what is this and why did we need to write it -- what did core/std not solve already?\"\r\n- Since we're not in the land of proofs, we should follow software engineering principles and include unit tests per function added.\r\n\r\nHopefully this makes sense.\r\n\r\nPlease don't spend time splitting this PR up all at once, and also feel free to defer some of the extra work (like writing good tests) until you get confirmation that a PR might be accepted. You can use this current PR to comment on specific features you'd want (one or two at a time please, for my sake!) to help focus the splitting-up.",
              "createdAt": "2023-12-27T15:55:10Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5vgCgA",
              "body": "@kmill Entirely reasonable, thanks for taking the time to spell it out! :) (I'll be busy with the holidays and traveling for a little while, but will start splitting this PR according to these considerations afterwards (or intermittently).)",
              "createdAt": "2023-12-27T22:38:21Z",
              "author": {
                "login": "thorimur"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ff943a3a6e7944b9226f31c15f63910f98adb820",
                "additions": 94,
                "deletions": 2,
                "committedDate": "2023-11-12T06:46:25Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2bed4b1597b078231ed6804f326826f078b6887c",
                "additions": 87,
                "deletions": 0,
                "committedDate": "2023-11-12T06:46:26Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "34597a743a5b341a4835aa79e109d340936e0379",
                "additions": 34,
                "deletions": 1,
                "committedDate": "2023-11-12T06:46:26Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb78091382e2ce0fba27f7d9c924a9673f20a576",
                "additions": 22,
                "deletions": 1,
                "committedDate": "2023-11-12T06:46:26Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "987565c1bbdcb82278d6afe3b102784a7e4ce61d",
                "additions": 61,
                "deletions": 1,
                "committedDate": "2023-11-19T02:22:02Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "30f5a9a0b84c2f19cdae7e3a891abb6bf1c46ed8",
                "additions": 13,
                "deletions": 0,
                "committedDate": "2023-11-19T02:22:02Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "231f17f64732697773572128a42e017fe8298320",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-11-19T02:23:56Z",
                "author": {
                  "name": "thorimur",
                  "email": "68410468+thorimur@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYbou4g",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840304/job/18819460834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYbou7g",
                        "name": "label-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840303/job/18819460846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblpsA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410352"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblqXw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYbou6A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840309/job/18819460840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblqIg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblp2A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410392"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYbovJQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840309/job/18819460901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblqkg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410578"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblrKg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblrYg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410786"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblrgw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblrCw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblqwQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYblrzA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYb35gA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819709312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErGBJ3Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8503"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-19T02:28:44Z",
        "deletions": 5,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/CoreM.lean",
              "additions": 22,
              "deletions": 1
            },
            {
              "path": "Mathlib/Lean/Elab/Tactic/ElabTerm.lean",
              "additions": 88,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/Elab/Term.lean",
              "additions": 34,
              "deletions": 1
            },
            {
              "path": "Mathlib/Util/Delaborators.lean",
              "additions": 73,
              "deletions": 1
            },
            {
              "path": "Mathlib/Util/Syntax.lean",
              "additions": 94,
              "deletions": 2
            }
          ]
        },
        "headRefName": "thorimur/refine-question-mark-helper",
        "headRefOid": "231f17f64732697773572128a42e017fe8298320",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5f1Lci",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8503,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY4NDEwNDY4",
              "login": "thorimur"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYbou4g",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840304/job/18819460834"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYbou7g",
                "name": "label-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840303/job/18819460846"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblpsA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410352"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblqXw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410527"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYbou6A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840309/job/18819460840"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblqIg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410466"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblp2A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410392"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYbovJQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917840309/job/18819460901"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblqkg",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410578"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblrKg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410730"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblrYg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410786"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblrgw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410819"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblrCw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410699"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblqwQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819410625"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYblrzA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817547/job/18819410892"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYb35gA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6917817549/job/18819709312"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAErGBJ3Q",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8503"
              }
            ]
          }
        },
        "title": "feat: meta utils for `refine?`",
        "updatedAt": "2024-07-31T08:14:01Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8503",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53P8LJzwAAAAKP0sOW",
              "createdAt": "2023-11-19T02:28:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53P8LJzwAAAAKP0sOX",
              "createdAt": "2023-11-19T02:28:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Pb-7q",
              "createdAt": "2023-11-19T02:29:17Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5fOp7r",
                "title": "feat: `refine?`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8364"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53P8LJzwAAAAKP0sqT",
              "createdAt": "2023-11-19T02:30:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53P8LJzwAAAAKP00EM",
              "createdAt": "2023-11-19T02:59:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vfHsR",
              "createdAt": "2023-12-27T15:55:10Z",
              "body": "Sorry for the lack of review. There is a lot of unrelated content here, which makes it unreviewable as-is, and I have been meaning to point out specific bits that could be their own PRs, but I haven't been able to get around to doing that.\r\n\r\nIf you want to contribute this, here are some guidelines:\r\n- Make sure each meta PR is contributing one feature.\r\n- We might call them \"features\", but every new function is something we're paying for (in complexity, in time to learn, in maintenance, in debugging, etc.). Make sure each addition to the API is something that satisfies a need and will pay for itself. The PR description could include justification, especially for features that aren't so obvious -- please make sure the justification is succinct and easy to evaluate.\r\n- I think mathlib meta API should include details of the relationship of a function to other pre-existing functions in core and std in docstrings. Ideally mathlib, too. Whenever I see a function in our meta library, one of my first questions is \"ok, what is this and why did we need to write it -- what did core/std not solve already?\"\r\n- Since we're not in the land of proofs, we should follow software engineering principles and include unit tests per function added.\r\n\r\nHopefully this makes sense.\r\n\r\nPlease don't spend time splitting this PR up all at once, and also feel free to defer some of the extra work (like writing good tests) until you get confirmation that a PR might be accepted. You can use this current PR to comment on specific features you'd want (one or two at a time please, for my sake!) to help focus the splitting-up.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53P8LJzwAAAAKkRH8A",
              "createdAt": "2023-12-27T15:55:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53P8LJzwAAAAKkRH8D",
              "createdAt": "2023-12-27T15:55:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c53P8LJzwAAAAKkRIrj",
              "createdAt": "2023-12-27T15:55:52Z",
              "assignee": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vgCgA",
              "createdAt": "2023-12-27T22:38:21Z",
              "body": "@kmill Entirely reasonable, thanks for taking the time to spell it out! :) (I'll be busy with the holidays and traveling for a little while, but will start splitting this PR according to these considerations afterwards (or intermittently).)",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53P8LJzwAAAAKqktJf",
              "createdAt": "2024-01-11T05:22:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
