{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 182,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "shuxuezhuyi"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Suppose `f : [a, b] → δ` or `f : (a, b) → δ` is continuous and injective. Then `f` is strictly monotone.\r\n\r\nCo-authored-by: Johan Commelin <johan@commelin.net>\r\n\r\nCo-authored-by: Yaël Dillies <yael.dillies@gmail.com>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2024-02-13T16:25:53Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5zeowk",
              "body": "> Primary takeaway: do things for types first then sets.\r\n\r\n@j-loreaux Thank you very much for your advice! Now the code has been refactored.",
              "createdAt": "2024-02-11T03:37:54Z",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zssJu",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2024-02-13T10:23:01Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zs-Dp",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7885314665/job/21516168695)",
              "createdAt": "2024-02-13T10:50:01Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zt98y",
              "body": "Canceled.",
              "createdAt": "2024-02-13T12:37:29Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zt-Ll",
              "body": "bors r-\r\n\r\nbors d+",
              "createdAt": "2024-02-13T12:38:08Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zt-MO",
              "body": ":v: shuxuezhuyi can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-02-13T12:38:10Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zuCiU",
              "body": "bors r+",
              "createdAt": "2024-02-13T12:49:12Z",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zuQp_",
              "body": "Let's first wait for CI to finish.\r\n\r\nbors r-",
              "createdAt": "2024-02-13T13:22:51Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zuQrB",
              "body": "Canceled.",
              "createdAt": "2024-02-13T13:22:54Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zvBFJ",
              "body": "bors r+",
              "createdAt": "2024-02-13T14:59:45Z",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zv8B0",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7888682964/job/21526790971)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7888682964/job/21526791459)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7888682964/job/21526790574)",
              "createdAt": "2024-02-13T16:25:51Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "498422ae8198f659d9dc46713deaaabc9179d8b9",
                "additions": 69,
                "deletions": 1,
                "committedDate": "2023-09-07T15:11:14Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "059e16ec5e9e1afb225b46d0c7ba1dacee6ca7ce",
                "additions": 99,
                "deletions": 20,
                "committedDate": "2023-09-10T01:38:40Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8a2dd37968e5b8f37852cf8ccf23819e4afd1c76",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-09-10T01:51:10Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a86e09352a3e77f8b621db4fb6db4e3db61c8002",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-10T02:05:34Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ec70c063f498f3840ecb8da7cbb0606045e0f337",
                "additions": 17166,
                "deletions": 8015,
                "committedDate": "2023-09-17T03:35:52Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ab133b4351f7376d36ee186cd8c9f287baf27625",
                "additions": 156,
                "deletions": 130,
                "committedDate": "2023-09-17T07:39:04Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bb95e6912238e46911dac7903cb8f08b5ffeac04",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-09-19T01:41:00Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f400238000b4cd370c3a3fb09fc91b0f84fad152",
                "additions": 16162,
                "deletions": 7981,
                "committedDate": "2023-10-02T13:11:15Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAENmv9LA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6657686555/job/18092916012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAENmv8Vw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6657686552/job/18092915799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAENmv7pA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6657686554/job/18092915620"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAENmv7fw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6657686555/job/18092915583"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "18793a3c5fc22808f5180659e466e5f6a527ef53",
                "additions": 114179,
                "deletions": 56555,
                "committedDate": "2023-12-12T09:03:32Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2d0f448f18d5a5adbb31f1883c38ed4ef3c1f39c",
                "additions": 50,
                "deletions": 48,
                "committedDate": "2023-12-12T10:06:50Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQZ_g",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179869233/job/19550968318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQX2A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868888/job/19550967768"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQa0A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868889/job/19550968528"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQbTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179869235/job/19550968652"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQZIQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868888/job/19550968097"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQYGQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868889/job/19550967833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQZ-w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179869235/job/19550968315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQb_g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868888/job/19550968830"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQWzw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868889/job/19550967503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQdIg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868888/job/19550969122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQZIA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868889/job/19550968096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQb5g",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868889/job/19550968806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQaxw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868888/job/19550968519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjVQebQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868888/job/19550969453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjWV7NA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7179868889/job/19552107316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErF91Iw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "be4fb49f12633187653c6ca1bc372396975dd999",
                "additions": 76584,
                "deletions": 44473,
                "committedDate": "2024-01-26T02:18:38Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f7168ba543c43da9c9bbf65fa39667400bd8123f",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-01-26T04:14:04Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ecab054dcbd459cd9488cbc4e286cfd1a280579c",
                "additions": 22,
                "deletions": 0,
                "committedDate": "2024-01-26T11:16:24Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aaqIw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667856151/job/20898556451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aX_mw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667841047/job/20898512795"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYMmQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842096/job/20898516121"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYPGQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842088/job/20898516761"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYAXw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667841044/job/20898512991"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYN_g",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842088/job/20898516478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYOJg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842096/job/20898516518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aX_yw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667841044/job/20898512843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYNdA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842096/job/20898516340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYMiQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842088/job/20898516105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYPWg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842096/job/20898516826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYNWg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842088/job/20898516314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYOlw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842088/job/20898516631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYOww",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842096/job/20898516675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3anhtQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842088/job/20898767285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aYP8w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667842096/job/20898516979"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aY19w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8672c3c9fdaf01b4cf09bf925da55c26fdd2844a",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-01-26T12:17:31Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bGbaw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668100735/job/20899273579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bGbaQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668100736/job/20899273577"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an66Q",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667930385/job/20898773737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an2Og",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929899/job/20898772538"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an2XA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929914/job/20898772572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an6_A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667930387/job/20898773756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bGcbg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668100735/job/20899273838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an4fQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929899/job/20898773117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an3xg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929914/job/20898772934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an7og",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667930387/job/20898773922"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an3BA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929899/job/20898772740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an3Cg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929914/job/20898772746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an3zQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929899/job/20898772941"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an5Dw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929914/job/20898773263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an4dQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929914/job/20898773109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an5MA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929899/job/20898773296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bU7ng",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929914/job/20899511198"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3an54w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7667929899/job/20898773475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3aofHg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fcd37b2fffef56a6d18a2782f5f77973d004a25f",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2024-01-26T12:41:37Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUmqA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180064/job/20899505832"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUnmQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180020/job/20899506073"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUnlQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180016/job/20899506069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUnxw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180068/job/20899506119"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUobw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180020/job/20899506287"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUpzg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180016/job/20899506638"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUm8g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180068/job/20899505906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUpNw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180020/job/20899506487"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUoUA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180016/job/20899506256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUmCQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180020/job/20899505673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUo_Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180016/job/20899506429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUmZQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180016/job/20899505765"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUqFA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180020/job/20899506708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bc7NQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180016/job/20899642165"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bUqwg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668180020/job/20899506882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bVhZQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "10e894e8c22c2f3811268cead114bb86b016d24a",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2024-01-26T12:45:45Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-9tFMA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7843948397/job/21405320496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TDOjA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851120920/job/21427703436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-9tEDw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7843948396/job/21405320207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TDOaA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851120918/job/21427703400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcnRw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226602/job/20899637063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bck7A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226265/job/20899636460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bck0g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226256/job/20899636434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcm5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226589/job/20899636964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE-9tEMA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7843948397/job/21405320240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TDPLw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851120920/job/21427703599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcnPA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226265/job/20899637052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcj2Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226256/job/20899636185"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcn4Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226589/job/20899637217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bclnw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226265/job/20899636639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcmKw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226256/job/20899636779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcmTw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226265/job/20899636815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcnAA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226256/job/20899636992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcj9g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226265/job/20899636214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcliw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226256/job/20899636619"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bcn_A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226265/job/20899637244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3dxFgA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7668226256/job/20902069632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3bdn_w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "62dd828b50d9e25177c8a41afaae8b80e44a7883",
                "additions": 5,
                "deletions": 27,
                "committedDate": "2024-02-10T00:12:12Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dc26a95aab61cd20593ca71d040212a8a695edab",
                "additions": 29742,
                "deletions": 13692,
                "committedDate": "2024-02-10T00:20:06Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG2ew",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851143061/job/21427762811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG1Zw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142943/job/21427762535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG1Rw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142944/job/21427762503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG2jA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851143060/job/21427762828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG3Lg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142943/job/21427762990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG3Ew",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142944/job/21427762963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG3Kw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851143060/job/21427762987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG1-g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142943/job/21427762682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG18w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142944/job/21427762675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG2rQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142943/job/21427762861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG2eA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142944/job/21427762808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG3-g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142943/job/21427763194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG3og",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142944/job/21427763106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TG4mg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142943/job/21427763354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_UTWjQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7851142944/job/21429016205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_TH_Aw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "099df0be4c81d60599dafc4eeb3508b34c1e8345",
                "additions": 79,
                "deletions": 76,
                "committedDate": "2024-02-11T03:27:51Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9JBg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395531/job/21445429510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IEA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395397/job/21445429264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9ImA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395398/job/21445429400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9JDg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395532/job/21445429518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9Iwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395397/job/21445429442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IDQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395398/job/21445429261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9JNw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395532/job/21445429559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IcQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395397/job/21445429361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IOA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395398/job/21445429304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9Ilg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395397/job/21445429398"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IaQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395398/job/21445429353"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IPA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395397/job/21445429308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9IyA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395398/job/21445429448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9I9Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395397/job/21445429493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_kVseQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7859395398/job/21445831801"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGZrSwAQ",
                        "context": "bors",
                        "state": "PENDING",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1580",
                        "description": "Running"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_j9WCQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3423882b8408540de21e1578c5b1b0b89e7b6aba",
                "additions": 6521,
                "deletions": 3387,
                "committedDate": "2024-02-13T12:37:26Z",
                "author": {
                  "name": "Johan Commelin",
                  "email": "johan@commelin.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMOIw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593896/job/21520125475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMLsw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520124851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMMfw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMOLg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593901/job/21520125486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMQAA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMOVQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125525"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMO_A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593901/job/21520125692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMNig",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMLiA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520124808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMO7Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMNbg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMMlQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMPMA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArMQ6Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520126185"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFAtojuA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21522686904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFArN2Mw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGZwWjwg",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1587",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-09-07T15:20:43Z",
        "deletions": 4,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Set/Intervals/Image.lean",
              "additions": 24,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Antichain.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Directed.lean",
              "additions": 23,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Order/IntermediateValue.lean",
              "additions": 125,
              "deletions": 1
            }
          ]
        },
        "headRefName": "WenYang/continuous_inj_is_monotone_Icc",
        "headRefOid": "3423882b8408540de21e1578c5b1b0b89e7b6aba",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Zy0oY",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lVaBd",
              "body": "Primary takeaway: do things for types first then sets. Thanks for this contribution!",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-10-26T17:29:53Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7018,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5hA73S",
              "body": "Thanks for your PR! It seems that you are sometimes missing a few tricks.\r\n\r\nI had a go at optimizing and generalizing your PR a bit.\r\nYou should try and see if you can apply more of my tricks to clean it up further.\r\n\r\nHere is the resulting code:\r\n```\r\n/-- If `f : [a, b] → δ` is continuous and injective, then `f` is strictly monotone. -/\r\ntheorem ContinuousOn.StrictMonoOn_of_InjOn {a b : α} {f : α → δ} (hab : a ≤ b) (hfab : f a ≤ f b)\r\n    (hf_c : ContinuousOn f (Icc a b)) (hf_i : InjOn f (Icc a b)) :\r\n    StrictMonoOn f (Icc a b) := by\r\n-- I learned this proof from\r\n-- <https://www.math.cuhk.edu.hk/course_builder/2021/math1050b/1050b-l14h-3.pdf>\r\n  intro s hs t ht hst\r\n  by_contra' hfts\r\n  replace hfts : f t < f s := lt_of_le_of_ne hfts <| hf_i.ne ht hs hst.ne'\r\n  by_cases h7 : f s ≤ f a\r\n  · have h9 : Icc t b ⊆ Icc a b := Icc_subset_Icc_left ht.1\r\n    have h11 : f a ∈ Ioc (f t) (f b) := ⟨(hfts.trans_le h7), hfab⟩\r\n    obtain ⟨u, hu⟩ : f a ∈ f '' Ioc t b :=\r\n      intermediate_value_Ioc ht.2 (hf_c.mono h9) h11\r\n    apply (lt_of_lt_of_le' hu.1.1 ht.1).ne'\r\n    exact hf_i (h9 (Ioc_subset_Icc_self hu.1)) (left_mem_Icc.mpr hab) hu.2\r\n  · by_cases h10 : f a < f t\r\n    · have h11 : Icc a s ⊆ Icc a b := Icc_subset_Icc_right hs.2\r\n      obtain ⟨u, hu⟩ : f t ∈ f '' Ioo a s :=\r\n        intermediate_value_Ioo hs.1 (hf_c.mono h11) ⟨h10, hfts⟩\r\n      apply (hu.1.2.trans hst).ne\r\n      exact hf_i (h11 (Ioo_subset_Icc_self hu.1)) ht hu.2\r\n    · push_neg at h7 h10\r\n      have h8 : a ≠ t := (lt_of_lt_of_le' hst hs.1).ne\r\n      have h9 : f a ≠ f t := hf_i.ne (left_mem_Icc.mpr hab) ht h8\r\n      have h11 : f t < f a := h9.symm.lt_of_le h10\r\n      have h12 : Icc s t ⊆ Icc a b := Icc_subset_Icc hs.1 ht.2\r\n      obtain ⟨u, hu⟩ : f a ∈ f '' Ioo s t :=\r\n        intermediate_value_Ioo' hst.le (hf_c.mono h12) ⟨h11, h7⟩\r\n      apply (lt_of_lt_of_le' hu.1.1 hs.1).ne'\r\n      exact hf_i (h12 (Ioo_subset_Icc_self hu.1)) (left_mem_Icc.mpr hab) hu.2\r\n\r\n/-- If `f : [a, b] → δ` is continuous and injective, then `f` is strictly antitone. -/\r\ntheorem ContinuousOn.StrictAntiOn_of_InjOn {a b : α} {f : α → δ} (h1 : a ≤ b) (hfab : f b ≤ f a)\r\n    (p1 : ContinuousOn f (Icc a b)) (hf_i : InjOn f (Icc a b)) :\r\n    StrictAntiOn f (Icc a b) := by\r\n    let g (x : α) : OrderDual δ := f x\r\n    have h2' : g a ≤ g b := hfab\r\n    exact ContinuousOn.StrictMonoOn_of_InjOn h1 h2' p1 hf_i\r\n\r\n/-- Suppose f : [a, b] → δ is continuous and injective. Then f is strictly monotone.-/\r\ntheorem ContinuousOn.StrictMonoOn_of_InjOn'' {a b : α} {f : α → δ} (h1 : a ≤ b)\r\n    (p1 : ContinuousOn f (Icc a b)) (p2 : InjOn f (Icc a b)) :\r\n    StrictMonoOn f (Icc a b) ∨ StrictAntiOn f (Icc a b) :=\r\n  (le_total (f a) (f b)).imp\r\n    (ContinuousOn.StrictMonoOn_of_InjOn h1 · p1 p2)\r\n    (ContinuousOn.StrictAntiOn_of_InjOn h1 · p1 p2)\r\n\r\n/-- This lemma is only used to\r\nprove and will be immediately superseded by\r\n`continuous_inj_is_monotone_Ioo` below.\r\nIt asserts that a continuous injective `f: (a, b) → δ` must be strictly monotone on\r\nevery closed interval `[c, d] ⊆ (a, b)`.-/\r\nprivate lemma continuous_inj_is_monotone_Ioo_H1 {a b : α} {f : α → δ}\r\n    (p1 : ContinuousOn f (Ioo a b)) (p2 : InjOn f (Ioo a b))\r\n    {c d : α} (h2 : c ∈ Ioo a b) (h3 : d ∈ Ioo a b) (h4 : c ≤ d) :\r\n    StrictMonoOn f (Icc c d) ∨ StrictAntiOn f (Icc c d) := by\r\n  have h5 : Icc c d ⊆ Ioo a b := Set.Icc_subset (Ioo a b) h2 h3\r\n  have h6 : ContinuousOn f (Icc c d) := ContinuousOn.mono p1 h5\r\n  have h7 : InjOn f (Icc c d) := InjOn.mono h5 p2\r\n  exact ContinuousOn.StrictMonoOn_of_InjOn'' h4 h6 h7\r\n\r\n/-- This lemma is only used to\r\nprove and will be immediately superseded by\r\n`continuous_inj_is_monotone_Ioo` below.\r\nIt asserts that a continuous injective `f: (a, b) → δ` is strictly increasing if\r\nit is strictly increasing on some closed interval `[c, d] ⊆ (a, b)`.-/\r\nprivate lemma continuous_inj_is_monotone_Ioo_H2 {a b : α} {f : α → δ}\r\n    {c d : α} (hc : c ∈ Ioo a b) (hd : d ∈ Ioo a b) (hcd : c < d)\r\n    (p1 : ContinuousOn f (Ioo a b)) (p2 : InjOn f (Ioo a b))\r\n    (h5 : StrictMonoOn f (Icc c d)) : StrictMonoOn f (Ioo a b) := by\r\n  unfold StrictMonoOn\r\n  intro x hx y hy hxy\r\n  let s := min c x\r\n  let t := max d y\r\n  have hsc : s ≤ c := min_le_left c x\r\n  have hdt : d ≤ t := le_max_left d y\r\n  have hs : s ∈ Ioo a b := ⟨lt_min hc.1 hx.1, min_lt_of_left_lt hc.2⟩\r\n  have ht : t ∈ Ioo a b := ⟨lt_max_of_lt_right hy.1, max_lt hd.2 hy.2⟩\r\n  have hst : s < t := lt_of_le_of_lt hsc (lt_of_lt_of_le hcd hdt)\r\n  have h6 : Icc c d ⊆ Icc s t := Icc_subset_Icc hsc hdt\r\n  have h7 : StrictMonoOn f (Icc s t) ∨ StrictAntiOn f (Icc s t) :=\r\n    continuous_inj_is_monotone_Ioo_H1 p1 p2 hs ht hst.le\r\n  have h8' : StrictAntiOn f (Icc s t) → False := by\r\n    intro h7\r\n    have h9 : StrictAntiOn f (Icc c d) := StrictAntiOn.mono h7 h6\r\n    have hcd' : c ≤ d := LT.lt.le hcd\r\n    have hc : c ∈ Icc c d := Iff.mpr left_mem_Icc hcd'\r\n    have hd : d ∈ Icc c d := Iff.mpr right_mem_Icc hcd'\r\n    have hcd_1 : f c < f d := h5 hc hd hcd\r\n    have hcd_2 : f d < f c := h9 hc hd hcd\r\n    have : f c < f c := lt_trans hcd_1 hcd_2\r\n    exact this.false\r\n  have h8 : StrictMonoOn f (Icc s t) := by tauto\r\n  have hsx : s ≤ x := min_le_right c x\r\n  have hyt : y ≤ t := le_max_right d y\r\n  have h9 : Icc x y ⊆ Icc s t := Icc_subset_Icc hsx hyt\r\n  have h10 : StrictMonoOn f (Icc x y) := StrictMonoOn.mono h8 h9\r\n  exact h10 (left_mem_Icc.mpr (le_of_lt hxy)) (right_mem_Icc.mpr (le_of_lt hxy)) hxy\r\n\r\n/-- Every continuous injective `f : (a, b) → δ` is strictly monotone.-/\r\ntheorem continuous_inj_is_monotone_Ioo {a b : α} {f : α → δ} (h1 : a < b)\r\n    (p1 : ContinuousOn f (Ioo a b)) (p2 : InjOn f (Ioo a b)) :\r\n    StrictMonoOn f (Ioo a b) ∨ StrictAntiOn f (Ioo a b) := by\r\n  have h3 : (Ioo a b).Nonempty := Iff.mpr nonempty_Ioo h1\r\n  choose c hc using h3\r\n  have h4 : (Ioo c b).Nonempty := Iff.mpr nonempty_Ioo hc.2\r\n  choose d hd' using h4\r\n  have hcd : c < d := hd'.1\r\n  have hd : d ∈ Ioo a b := ⟨lt_trans hc.1 hcd, hd'.2⟩\r\n  have h5 : StrictMonoOn f (Icc c d) ∨ StrictAntiOn f (Icc c d) :=\r\n    continuous_inj_is_monotone_Ioo_H1 p1 p2 hc hd hcd.le\r\n  have h5_1 := continuous_inj_is_monotone_Ioo_H2 hc hd hcd p1 p2\r\n  have h5_2 (h5 : StrictAntiOn f (Icc c d)) : StrictAntiOn f (Ioo a b) := by\r\n    let g (x : α) : OrderDual δ := f x\r\n    have hg' : StrictMonoOn g (Ioo a b) := continuous_inj_is_monotone_Ioo_H2 hc hd hcd p1 p2 h5\r\n    exact hg'\r\n  tauto\r\n```",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-14T19:46:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hKKKT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "shuxuezhuyi"
              },
              "submittedAt": "2023-09-17T08:08:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hPBJf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-18T15:19:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hSnPR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "shuxuezhuyi"
              },
              "submittedAt": "2023-09-19T01:51:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hSnQm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "shuxuezhuyi"
              },
              "submittedAt": "2023-09-19T01:51:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lVaBd",
              "body": "Primary takeaway: do things for types first then sets. Thanks for this contribution!",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-10-26T17:29:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5uAs3O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "shuxuezhuyi"
              },
              "submittedAt": "2024-01-26T12:34:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5vmJVT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "shuxuezhuyi"
              },
              "submittedAt": "2024-02-09T12:28:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5vqRJh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "shuxuezhuyi"
              },
              "submittedAt": "2024-02-10T00:18:20Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PD-RS",
                    "body": "```suggestion\r\n/-- If `f : [a, b] → δ` is continuous and injective, then `f` is strictly monotone. -/\r\ntheorem ContinuousOn.StrictMonoOn_of_InjOn {a b : α} {f : α → δ} (hab : a ≤ b) (hfab : f a ≤ f b)\r\n    (hf_c : ContinuousOn f (Icc a b)) (hf_i : InjOn f (Icc a b)) :\r\n    StrictMonoOn f (Icc a b) := by\r\n-- I learned this proof from\r\n-- <https://www.math.cuhk.edu.hk/course_builder/2021/math1050b/1050b-l14h-3.pdf>\r\n  intro s hs t ht hst\r\n  by_contra' hfts\r\n  replace hfts : f t < f s := lt_of_le_of_ne hfts <| hf_i.ne ht hs hst.ne'\r\n  by_cases h7 : f s ≤ f a\r\n  · have h9 : Icc t b ⊆ Icc a b := Icc_subset_Icc_left ht.1\r\n    have h11 : f a ∈ Ioc (f t) (f b) := ⟨(hfts.trans_le h7), hfab⟩\r\n    obtain ⟨u, hu⟩ : f a ∈ f '' Ioc t b :=\r\n      intermediate_value_Ioc ht.2 (hf_c.mono h9) h11\r\n    apply (lt_of_lt_of_le' hu.1.1 ht.1).ne'\r\n    exact hf_i (h9 (Ioc_subset_Icc_self hu.1)) (left_mem_Icc.mpr hab) hu.2\r\n  · by_cases h10 : f a < f t\r\n    · have h11 : Icc a s ⊆ Icc a b := Icc_subset_Icc_right hs.2\r\n      obtain ⟨u, hu⟩ : f t ∈ f '' Ioo a s :=\r\n        intermediate_value_Ioo hs.1 (hf_c.mono h11) ⟨h10, hfts⟩\r\n      apply (hu.1.2.trans hst).ne\r\n      exact hf_i (h11 (Ioo_subset_Icc_self hu.1)) ht hu.2\r\n    · push_neg at h7 h10\r\n      have h8 : a ≠ t := (lt_of_lt_of_le' hst hs.1).ne\r\n      have h9 : f a ≠ f t := hf_i.ne (left_mem_Icc.mpr hab) ht h8\r\n      have h11 : f t < f a := h9.symm.lt_of_le h10\r\n      have h12 : Icc s t ⊆ Icc a b := Icc_subset_Icc hs.1 ht.2\r\n      obtain ⟨u, hu⟩ : f a ∈ f '' Ioo s t :=\r\n        intermediate_value_Ioo' hst.le (hf_c.mono h12) ⟨h11, h7⟩\r\n      apply (lt_of_lt_of_le' hu.1.1 hs.1).ne'\r\n      exact hf_i (h12 (Ioo_subset_Icc_self hu.1)) (left_mem_Icc.mpr hab) hu.2\r\n```",
                    "createdAt": "2023-09-14T19:44:39Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PKJfZ",
                    "body": "Done. Although the code is still long.",
                    "createdAt": "2023-09-17T08:08:26Z",
                    "author": {
                      "login": "shuxuezhuyi"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PNUCi",
                    "body": "```suggestion\r\nif `f(a) ≤ f(b)`.-/\r\n```",
                    "createdAt": "2023-09-18T15:19:19Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PPgwV",
                    "body": "Done.",
                    "createdAt": "2023-09-19T01:51:28Z",
                    "author": {
                      "login": "shuxuezhuyi"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PNURd",
                    "body": "```suggestion\r\nif `f(b) ≤ f(a)`.-/\r\n```",
                    "createdAt": "2023-09-18T15:19:47Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PPgxG",
                    "body": "Done.",
                    "createdAt": "2023-09-19T01:51:37Z",
                    "author": {
                      "login": "shuxuezhuyi"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R3Yh-",
                    "body": "```suggestion\r\nthen `a = b`.-/\r\n```",
                    "createdAt": "2023-10-26T16:55:34Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R3Y7w",
                    "body": "I think `Data.Set.Image` is too strong an import for the `Order.Directed` file, so the results that need this import should go elsewhere.",
                    "createdAt": "2023-10-26T16:57:05Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R3Z22",
                    "body": "Probably this works. This is how we do it throughout the rest of the order library:\r\n```suggestion\r\nContinuousOn.StrictMonoOn_of_InjOn_Icc (δ := δᵒᵈ) hab hfab hf_c hf_i\r\n```",
                    "createdAt": "2023-10-26T17:00:37Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R3hRP",
                    "body": "I think this theorem would be a lot less headache to prove if you did it for types first. Then you can prove the version for sets using the one for types. Note: this is how the intermediate value theorem is proved as well.\r\n\r\nThe right generality might be something like this.\r\n```\r\ntheorem Continuous.strictMono_of_injective {α : Type*} [ConditionallyCompleteLinearOrder α] [TopologicalSpace α] [OrderTopology α] [DenselyOrdered α] {δ : Type*} [LinearOrder δ] [TopologicalSpace δ] [OrderClosedTopology δ] {f : C(α, δ)} (hf₁ : f ⊥ ≤ f ⊤) (hf₂ : Function.Injective f) : StrictMono f := sorry\r\n```\r\nIf you do it this way, then you don't have to continue worry about whether or not your elements are in the interval or not. Then to prove the version for intervals, you just use `ContinuousOn.restrict`.",
                    "createdAt": "2023-10-26T17:28:49Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5XedlS",
                    "body": "Thank you very much! I add `Continuous.strictMono_of_injective` now. ~However, I find that the order on a closed interval is not necessarily a conditionally complete linear order. So I cannot deduce `ContinuousOn.StrictMonoOn_of_InjOn_Icc` from `Continuous.strictMono_of_injective` yet.~ Let me think again.",
                    "createdAt": "2024-01-26T12:34:10Z",
                    "author": {
                      "login": "shuxuezhuyi"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yd_ai",
                    "body": "I cannot deduce `ContinuousOn.StrictMonoOn_of_InjOn_Icc` from `Continuous.strictMono_of_injective` in Lean. It is very strange, https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/How.20to.20tell.20Lean.20preorders.20from.20different.20sources.20are.20same.3F",
                    "createdAt": "2024-02-09T12:28:33Z",
                    "author": {
                      "login": "shuxuezhuyi"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YgeJB",
                    "body": "Many thanks to @alreadydone ! I can deduce `ContinuousOn.StrictMonoOn_of_InjOn_Icc` from `Continuous.strictMono_of_injective` now.",
                    "createdAt": "2024-02-10T00:18:19Z",
                    "author": {
                      "login": "shuxuezhuyi"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg4MzI0NTY=",
              "login": "shuxuezhuyi"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMOIw",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593896/job/21520125475"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMLsw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520124851"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMMfw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125055"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMOLg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593901/job/21520125486"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMQAA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125952"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMOVQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125525"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMO_A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593901/job/21520125692"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMNig",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125322"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMLiA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520124808"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMO7Q",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125677"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMNbg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125294"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMMlQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520125077"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMPMA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21520125744"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArMQ6Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593648/job/21520126185"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFAtojuA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7886593650/job/21522686904"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFArN2Mw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7018"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGZwWjwg",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1587",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(Topology/Algebra/Order): continuous injective function on interval is strictly monotone",
        "updatedAt": "2024-02-13T16:25:56Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7018",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJmu6B4",
              "createdAt": "2023-09-08T04:07:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJmu6B6",
              "createdAt": "2023-09-08T04:07:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hA73S",
              "createdAt": "2023-09-14T19:44:39Z",
              "body": "Thanks for your PR! It seems that you are sometimes missing a few tricks.\r\n\r\nI had a go at optimizing and generalizing your PR a bit.\r\nYou should try and see if you can apply more of my tricks to clean it up further.\r\n\r\nHere is the resulting code:\r\n```\r\n/-- If `f : [a, b] → δ` is continuous and injective, then `f` is strictly monotone. -/\r\ntheorem ContinuousOn.StrictMonoOn_of_InjOn {a b : α} {f : α → δ} (hab : a ≤ b) (hfab : f a ≤ f b)\r\n    (hf_c : ContinuousOn f (Icc a b)) (hf_i : InjOn f (Icc a b)) :\r\n    StrictMonoOn f (Icc a b) := by\r\n-- I learned this proof from\r\n-- <https://www.math.cuhk.edu.hk/course_builder/2021/math1050b/1050b-l14h-3.pdf>\r\n  intro s hs t ht hst\r\n  by_contra' hfts\r\n  replace hfts : f t < f s := lt_of_le_of_ne hfts <| hf_i.ne ht hs hst.ne'\r\n  by_cases h7 : f s ≤ f a\r\n  · have h9 : Icc t b ⊆ Icc a b := Icc_subset_Icc_left ht.1\r\n    have h11 : f a ∈ Ioc (f t) (f b) := ⟨(hfts.trans_le h7), hfab⟩\r\n    obtain ⟨u, hu⟩ : f a ∈ f '' Ioc t b :=\r\n      intermediate_value_Ioc ht.2 (hf_c.mono h9) h11\r\n    apply (lt_of_lt_of_le' hu.1.1 ht.1).ne'\r\n    exact hf_i (h9 (Ioc_subset_Icc_self hu.1)) (left_mem_Icc.mpr hab) hu.2\r\n  · by_cases h10 : f a < f t\r\n    · have h11 : Icc a s ⊆ Icc a b := Icc_subset_Icc_right hs.2\r\n      obtain ⟨u, hu⟩ : f t ∈ f '' Ioo a s :=\r\n        intermediate_value_Ioo hs.1 (hf_c.mono h11) ⟨h10, hfts⟩\r\n      apply (hu.1.2.trans hst).ne\r\n      exact hf_i (h11 (Ioo_subset_Icc_self hu.1)) ht hu.2\r\n    · push_neg at h7 h10\r\n      have h8 : a ≠ t := (lt_of_lt_of_le' hst hs.1).ne\r\n      have h9 : f a ≠ f t := hf_i.ne (left_mem_Icc.mpr hab) ht h8\r\n      have h11 : f t < f a := h9.symm.lt_of_le h10\r\n      have h12 : Icc s t ⊆ Icc a b := Icc_subset_Icc hs.1 ht.2\r\n      obtain ⟨u, hu⟩ : f a ∈ f '' Ioo s t :=\r\n        intermediate_value_Ioo' hst.le (hf_c.mono h12) ⟨h11, h7⟩\r\n      apply (lt_of_lt_of_le' hu.1.1 hs.1).ne'\r\n      exact hf_i (h12 (Ioo_subset_Icc_self hu.1)) (left_mem_Icc.mpr hab) hu.2\r\n\r\n/-- If `f : [a, b] → δ` is continuous and injective, then `f` is strictly antitone. -/\r\ntheorem ContinuousOn.StrictAntiOn_of_InjOn {a b : α} {f : α → δ} (h1 : a ≤ b) (hfab : f b ≤ f a)\r\n    (p1 : ContinuousOn f (Icc a b)) (hf_i : InjOn f (Icc a b)) :\r\n    StrictAntiOn f (Icc a b) := by\r\n    let g (x : α) : OrderDual δ := f x\r\n    have h2' : g a ≤ g b := hfab\r\n    exact ContinuousOn.StrictMonoOn_of_InjOn h1 h2' p1 hf_i\r\n\r\n/-- Suppose f : [a, b] → δ is continuous and injective. Then f is strictly monotone.-/\r\ntheorem ContinuousOn.StrictMonoOn_of_InjOn'' {a b : α} {f : α → δ} (h1 : a ≤ b)\r\n    (p1 : ContinuousOn f (Icc a b)) (p2 : InjOn f (Icc a b)) :\r\n    StrictMonoOn f (Icc a b) ∨ StrictAntiOn f (Icc a b) :=\r\n  (le_total (f a) (f b)).imp\r\n    (ContinuousOn.StrictMonoOn_of_InjOn h1 · p1 p2)\r\n    (ContinuousOn.StrictAntiOn_of_InjOn h1 · p1 p2)\r\n\r\n/-- This lemma is only used to\r\nprove and will be immediately superseded by\r\n`continuous_inj_is_monotone_Ioo` below.\r\nIt asserts that a continuous injective `f: (a, b) → δ` must be strictly monotone on\r\nevery closed interval `[c, d] ⊆ (a, b)`.-/\r\nprivate lemma continuous_inj_is_monotone_Ioo_H1 {a b : α} {f : α → δ}\r\n    (p1 : ContinuousOn f (Ioo a b)) (p2 : InjOn f (Ioo a b))\r\n    {c d : α} (h2 : c ∈ Ioo a b) (h3 : d ∈ Ioo a b) (h4 : c ≤ d) :\r\n    StrictMonoOn f (Icc c d) ∨ StrictAntiOn f (Icc c d) := by\r\n  have h5 : Icc c d ⊆ Ioo a b := Set.Icc_subset (Ioo a b) h2 h3\r\n  have h6 : ContinuousOn f (Icc c d) := ContinuousOn.mono p1 h5\r\n  have h7 : InjOn f (Icc c d) := InjOn.mono h5 p2\r\n  exact ContinuousOn.StrictMonoOn_of_InjOn'' h4 h6 h7\r\n\r\n/-- This lemma is only used to\r\nprove and will be immediately superseded by\r\n`continuous_inj_is_monotone_Ioo` below.\r\nIt asserts that a continuous injective `f: (a, b) → δ` is strictly increasing if\r\nit is strictly increasing on some closed interval `[c, d] ⊆ (a, b)`.-/\r\nprivate lemma continuous_inj_is_monotone_Ioo_H2 {a b : α} {f : α → δ}\r\n    {c d : α} (hc : c ∈ Ioo a b) (hd : d ∈ Ioo a b) (hcd : c < d)\r\n    (p1 : ContinuousOn f (Ioo a b)) (p2 : InjOn f (Ioo a b))\r\n    (h5 : StrictMonoOn f (Icc c d)) : StrictMonoOn f (Ioo a b) := by\r\n  unfold StrictMonoOn\r\n  intro x hx y hy hxy\r\n  let s := min c x\r\n  let t := max d y\r\n  have hsc : s ≤ c := min_le_left c x\r\n  have hdt : d ≤ t := le_max_left d y\r\n  have hs : s ∈ Ioo a b := ⟨lt_min hc.1 hx.1, min_lt_of_left_lt hc.2⟩\r\n  have ht : t ∈ Ioo a b := ⟨lt_max_of_lt_right hy.1, max_lt hd.2 hy.2⟩\r\n  have hst : s < t := lt_of_le_of_lt hsc (lt_of_lt_of_le hcd hdt)\r\n  have h6 : Icc c d ⊆ Icc s t := Icc_subset_Icc hsc hdt\r\n  have h7 : StrictMonoOn f (Icc s t) ∨ StrictAntiOn f (Icc s t) :=\r\n    continuous_inj_is_monotone_Ioo_H1 p1 p2 hs ht hst.le\r\n  have h8' : StrictAntiOn f (Icc s t) → False := by\r\n    intro h7\r\n    have h9 : StrictAntiOn f (Icc c d) := StrictAntiOn.mono h7 h6\r\n    have hcd' : c ≤ d := LT.lt.le hcd\r\n    have hc : c ∈ Icc c d := Iff.mpr left_mem_Icc hcd'\r\n    have hd : d ∈ Icc c d := Iff.mpr right_mem_Icc hcd'\r\n    have hcd_1 : f c < f d := h5 hc hd hcd\r\n    have hcd_2 : f d < f c := h9 hc hd hcd\r\n    have : f c < f c := lt_trans hcd_1 hcd_2\r\n    exact this.false\r\n  have h8 : StrictMonoOn f (Icc s t) := by tauto\r\n  have hsx : s ≤ x := min_le_right c x\r\n  have hyt : y ≤ t := le_max_right d y\r\n  have h9 : Icc x y ⊆ Icc s t := Icc_subset_Icc hsx hyt\r\n  have h10 : StrictMonoOn f (Icc x y) := StrictMonoOn.mono h8 h9\r\n  exact h10 (left_mem_Icc.mpr (le_of_lt hxy)) (right_mem_Icc.mpr (le_of_lt hxy)) hxy\r\n\r\n/-- Every continuous injective `f : (a, b) → δ` is strictly monotone.-/\r\ntheorem continuous_inj_is_monotone_Ioo {a b : α} {f : α → δ} (h1 : a < b)\r\n    (p1 : ContinuousOn f (Ioo a b)) (p2 : InjOn f (Ioo a b)) :\r\n    StrictMonoOn f (Ioo a b) ∨ StrictAntiOn f (Ioo a b) := by\r\n  have h3 : (Ioo a b).Nonempty := Iff.mpr nonempty_Ioo h1\r\n  choose c hc using h3\r\n  have h4 : (Ioo c b).Nonempty := Iff.mpr nonempty_Ioo hc.2\r\n  choose d hd' using h4\r\n  have hcd : c < d := hd'.1\r\n  have hd : d ∈ Ioo a b := ⟨lt_trans hc.1 hcd, hd'.2⟩\r\n  have h5 : StrictMonoOn f (Icc c d) ∨ StrictAntiOn f (Icc c d) :=\r\n    continuous_inj_is_monotone_Ioo_H1 p1 p2 hc hd hcd.le\r\n  have h5_1 := continuous_inj_is_monotone_Ioo_H2 hc hd hcd p1 p2\r\n  have h5_2 (h5 : StrictAntiOn f (Icc c d)) : StrictAntiOn f (Ioo a b) := by\r\n    let g (x : α) : OrderDual δ := f x\r\n    have hg' : StrictMonoOn g (Ioo a b) := continuous_inj_is_monotone_Ioo_H2 hc hd hcd p1 p2 h5\r\n    exact hg'\r\n  tauto\r\n```",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAJqeSsh",
              "createdAt": "2023-09-14T19:46:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJqeSsp",
              "createdAt": "2023-09-14T19:46:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAJrWt0G",
              "createdAt": "2023-09-17T09:14:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJrWt0I",
              "createdAt": "2023-09-17T09:14:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hPBJf",
              "createdAt": "2023-09-18T15:19:19Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAJr24qI",
              "createdAt": "2023-09-18T15:20:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJr24qU",
              "createdAt": "2023-09-18T15:20:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAJsLHzf",
              "createdAt": "2023-09-19T01:52:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJsLHzl",
              "createdAt": "2023-09-19T01:52:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5wa7e6zwAAAAJtq-i-",
              "createdAt": "2023-09-21T04:37:29Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJx4t3v",
              "createdAt": "2023-09-28T14:51:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAJzZvLL",
              "createdAt": "2023-10-02T13:23:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OxI6u",
              "createdAt": "2023-10-07T15:14:48Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cLCk6",
                "title": "feat(Topology/Algebra/Order): extend homeomorphism of `Ioo` to `Icc`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7565"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OxUy0",
              "createdAt": "2023-10-08T13:07:03Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5bUF1Z",
                "title": "feat: extend function between `Ioo` to be homeomorphism between `Icc`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7398"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAJ29pfr",
              "createdAt": "2023-10-09T00:41:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAJ29pfu",
              "createdAt": "2023-10-09T00:41:02Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lVaBd",
              "createdAt": "2023-10-26T16:55:34Z",
              "body": "Primary takeaway: do things for types first then sets. Thanks for this contribution!",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAK8zBQW",
              "createdAt": "2024-02-09T12:30:21Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK8zBQh",
              "createdAt": "2024-02-09T12:30:21Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK8zBQo",
              "createdAt": "2024-02-09T12:30:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAK9Ji6b",
              "createdAt": "2024-02-09T23:44:19Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAK9Ji6c",
              "createdAt": "2024-02-09T23:44:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK9Ji6e",
              "createdAt": "2024-02-09T23:44:19Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zeowk",
              "createdAt": "2024-02-11T03:37:54Z",
              "body": "> Primary takeaway: do things for types first then sets.\r\n\r\n@j-loreaux Thank you very much for your advice! Now the code has been refactored.",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAK9UZGS",
              "createdAt": "2024-02-11T03:38:25Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK9UZGU",
              "createdAt": "2024-02-11T03:38:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zssJu",
              "createdAt": "2024-02-13T10:23:01Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK-hqdC",
              "createdAt": "2024-02-13T10:23:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAK-hqgB",
              "createdAt": "2024-02-13T10:23:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zs-Dp",
              "createdAt": "2024-02-13T10:50:01Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7885314665/job/21516168695)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zt98y",
              "createdAt": "2024-02-13T12:37:29Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zt-Ll",
              "createdAt": "2024-02-13T12:38:08Z",
              "body": "bors r-\r\n\r\nbors d+",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zt-MO",
              "createdAt": "2024-02-13T12:38:10Z",
              "body": ":v: shuxuezhuyi can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK-oZ1d",
              "createdAt": "2024-02-13T12:39:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zuCiU",
              "createdAt": "2024-02-13T12:49:12Z",
              "body": "bors r+",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zuQp_",
              "createdAt": "2024-02-13T13:22:51Z",
              "body": "Let's first wait for CI to finish.\r\n\r\nbors r-",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zuQrB",
              "createdAt": "2024-02-13T13:22:54Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wa7e6zwAAAAK-qUnF",
              "createdAt": "2024-02-13T13:23:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wa7e6zwAAAAK-rV3Q",
              "createdAt": "2024-02-13T13:44:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zvBFJ",
              "createdAt": "2024-02-13T14:59:45Z",
              "body": "bors r+",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zv8B0",
              "createdAt": "2024-02-13T16:25:51Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7888682964/job/21526790971)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7888682964/job/21526791459)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7888682964/job/21526790574)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wa7e6zwAAAAK-0DBK",
              "createdAt": "2024-02-13T16:25:53Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wa7e6zwAAAAK-0DOU",
              "createdAt": "2024-02-13T16:25:56Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
