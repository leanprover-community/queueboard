{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1393,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "chrisflav"
        },
        "baseRefName": "master",
        "body": "We show https://stacks.math.columbia.edu/tag/01LH using #14208. This shall be used to construct the relative spectrum of a quasi-coherent algebra.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [ ] depends on: #14208\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 8,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6RcCcE",
              "body": "### PR summary [8e111f0557](https://github.com/leanprover-community/mathlib4/pull/18284/commits/8e111f05571afaee4a561bd11823638f8b5d0e78)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.AlgebraicGeometry.Sites.Representability`|1724|\n| `Mathlib.AlgebraicGeometry.RelativeGluing`|1731|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CompatibleFamily`\n`+ CompatibleFamily.eq_iff`\n`+ CompatibleFamily.ext`\n`+ CompatibleFamily.openCover`\n`+ Glued`\n`+ Glued.homOfLE_iso_hom`\n`+ Glued.Œπ_f`\n`+ H_def`\n`+ PreRelativeGluingData`\n`+ PreRelativeGluingData.f_Œπ`\n`+ PreRelativeGluingData.œÅres`\n`+ PreRelativeGluingData.œÅres_Œπ`\n`+ RelativeGluingData`\n`+ Scheme.Opens.lift`\n`+ Scheme.Opens.lift_fac`\n`+ Scheme.isoOfEq_hom_isoOfEq_hom`\n`+ Scheme.isoOfEq_inv`\n`+ _root_.AlgebraicGeometry.Scheme.Hom.range_subset_iff_preimage_eq_top`\n`+ _root_.AlgebraicGeometry.Scheme.OpenCover.fromOpens`\n`+ _root_.AlgebraicGeometry.Scheme.OpenCover.mkOfCovers`\n`+ _root_.AlgebraicGeometry.Scheme.OpenCover.mkOfiSupEqTop`\n`+ _root_.AlgebraicGeometry.Scheme.OpensCover`\n`+ _root_.AlgebraicGeometry.Scheme.OpensCover.openCover`\n`+ _root_.AlgebraicGeometry.Scheme.OpensCover.pullbackCover`\n`+ _root_.AlgebraicGeometry.Scheme.homOfLE_isoOfEq_hom`\n`+ _root_.AlgebraicGeometry.Scheme.isoOfEq_isoOfEq`\n`+ _root_.AlgebraicGeometry.Scheme.isoOfEq_morphismRestrict`\n`+ _root_.AlgebraicGeometry.Scheme.morphismRestrict_eq_lift`\n`+ _root_.CategoryTheory.IsPullback.of_evaluation_isPullback`\n`+ _root_.CategoryTheory.Limits.Types.isPullback_of`\n`+ auxFamily_isAmalgamation`\n`+ auxFamily_unique`\n`+ auxg_mem`\n`+ auxhGeneralnew_apply`\n`+ auxhOfLE_comp`\n`+ auxhOfLE_f`\n`+ auxhOfLE_trans`\n`+ auxhOfLE_œÅ`\n`+ auxhOfLE_œÅres_Œπ`\n`+ auxh_spec`\n`+ compatibleFamilyMap`\n`+ compatibleFamilyMap_comp`\n`+ compatibleFamilyMap_id`\n`+ coveringIndexSet`\n`+ coveringIndexSet_exists_of_mem`\n`+ coveringIndexSet_le`\n`+ coveringIndexSet_mem`\n`+ coveringSet`\n`+ coveringSet_mem`\n`+ coveringSet_subset`\n`+ exists_glued`\n`+ fac`\n`+ fac'`\n`+ foo'`\n`+ fst'_self_eq_snd`\n`+ glueData`\n`+ homOfLE_auxhGeneralnew`\n`+ iSup_coveringIndexSet`\n`+ injective`\n`+ instance : IsIso (yonedaGluedToSheaf hf) := by`\n`+ instance : IsOpenImmersion.IsStableUnderComposition`\n`+ instance : IsOpenImmersion.RespectsIso`\n`+ instance : Presheaf.IsLocallySurjective Scheme.zariskiTopology (Sigma.desc d.subsheaf)`\n`+ instance : Sheaf.IsLocallyInjective (yonedaGluedToSheaf hf)`\n`+ instance [Presheaf.IsLocallySurjective Scheme.zariskiTopology (Sigma.desc f)] :`\n`+ instance {i j : d.Œπ} (hij : d.U i ‚â§ d.U j) : IsIso (d.œÅres hij)`\n`+ instance {i j : d.Œπ} (hij : d.U i ‚â§ d.U j) : Mono (d.œÅ hij) := by`\n`+ isIso_fst'_self`\n`+ le_monomorphisms`\n`+ lift‚ÇÉ`\n`+ lift‚ÇÉ_p‚ÇÅ`\n`+ lift‚ÇÉ_p‚ÇÇ`\n`+ lift‚ÇÉ_p‚ÇÉ`\n`+ mkGluedFromRepresentable`\n`+ morphismRestrict_naturality`\n`+ preimage_comp`\n`+ presheaf`\n`+ presheaf_isSheaf`\n`+ presheaf_mono_of_le`\n`+ pullback‚ÇÉ`\n`+ pullback‚ÇÉ.fst_fst'_eq_p‚ÇÅ`\n`+ pullback‚ÇÉ.fst_snd_eq_p‚ÇÇ`\n`+ pullback‚ÇÉ.hom_ext`\n`+ pullback‚ÇÉ.map_p‚ÇÅ_comp`\n`+ pullback‚ÇÉ.map_p‚ÇÇ_comp`\n`+ pullback‚ÇÉ.map_p‚ÇÉ_comp`\n`+ pullback‚ÇÉ.p‚ÇÅ`\n`+ pullback‚ÇÉ.p‚ÇÇ`\n`+ pullback‚ÇÉ.p‚ÇÉ`\n`+ pullback‚ÇÉ.snd_fst'_eq_p‚ÇÅ`\n`+ pullback‚ÇÉ.snd_snd_eq_p‚ÇÉ`\n`+ pullback‚ÇÉ.œÄ`\n`+ range_auxg_Œπ_f_subset`\n`+ representability`\n`+ sSup_coveringSet`\n`+ sheaf`\n`+ sheaf_representable`\n`+ subfamily`\n`+ subfamily_apply_h`\n`+ subfamily_comp`\n`+ subfamily_h'`\n`+ subfamily_injective`\n`+ subsheaf`\n`+ subsheaf_isOpenImmersion`\n`+ toGlued`\n`+ yonedaGluedToSheaf`\n`+ yonedaIsoSheaf`\n`+ ùí≤'new_le`\n`+ ùí≤'new_le_left`\n`+ ùí≤'new_le_right`\n`+ ùí≤_new_pullback_fst_Œπ`\n`+ ùí≤new_le_left`\n`+ ùí≤new_le_right`\n`+ ùí≤new_map_auxhGeneralnew`\n`+ ùí≤new_map_auxhGeneralnew'`\n`+ ùìã_map_homOfLE`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-27T14:29:05Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6RcC3g",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#14208\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-27T14:33:39Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SN-M7",
              "body": "Is this related to the fact that if `S` is a scheme, `U` an open covering of `S`, and `F` is a Zariski sheaf of sets on the category of `S`-schemes, then `F` is representable iff for any `i`, the \"pullback\" of `F` on `(U i)`-schemes is representable by a `(U i)`-scheme? I would expect that this result could be proven in a relatively direct manner using the representability theorem. Then, using this statement, one may get the global `Spec` once we know more about quasi-coherent sheaves of modules/algebras: in the category of `S`-schemes, the global `Spec` of a quasi-coherent `O_S`-algebra `A` should represent the functor which sends a `S`-scheme `p : X -> S` to the type of morphisms `A -> p_* O_X`.",
              "createdAt": "2024-11-02T21:06:54Z",
              "author": {
                "login": "joelriou"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-10-27T14:28:13Z",
        "deletions": 7,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Gluing.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/OpenImmersion.lean",
              "additions": 12,
              "deletions": 4
            },
            {
              "path": "Mathlib/AlgebraicGeometry/RelativeGluing.lean",
              "additions": 1074,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Sites/Representability.lean",
              "additions": 170,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Functor/FullyFaithful.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Types.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/MorphismProperty/Representable.lean",
              "additions": 126,
              "deletions": 0
            }
          ]
        },
        "headRefName": "chrisflav-relative-gluing",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6AA_n6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
              "color": "33DBEC",
              "name": "t-algebraic-geometry"
            }
          ]
        },
        "number": 18284,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_K4w",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541293418/job/32123112163"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_K2A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541293414/job/32123112152"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_LHg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541293415/job/32123112222"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8Zbg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270861/job/32123066734"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8ZGA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270860/job/32123066648"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_K4A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541293412/job/32123112160"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8Zqg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270861/job/32123066794"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8ZWQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270860/job/32123066713"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_LMw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541293412/job/32123112243"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8Ziw",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270860/job/32123066763"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8ZJQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270861/job/32123066661"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq8Z-g",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270861/job/32123066874"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHerNRAQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541270860/job/32123343105"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_SGw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32123114011"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHeq_m5A",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18284&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(AlgebraicGeometry): relative gluing of schemes",
        "updatedAt": "2024-11-02T21:07:31Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/18284"
      }
    }
  }
}
