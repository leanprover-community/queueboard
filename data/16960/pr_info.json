{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 34,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "vihdzp"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "A strict monotonic function in an unbounded well-order has an unbounded range.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\nThe lemma [`StrictMono.not_bddAbove_range`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/SuccPred/Archimedean.html#StrictMono.not_bddAbove_range) already exists with incompatible assumptions. Should either be renamed, or is it ok to use a primed lemma here?\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-09-24T08:11:40Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6M17KA",
              "body": "### PR summary [e3ff52657e](https://github.com/leanprover-community/mathlib4/pull/16960/commits/e3ff52657edc8010be66fffba3729127c3824e0f)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.WellFounded | 220 | 230 | +10 (+4.55%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>14 files</summary> `Mathlib.Data.Fintype.Sum` `Mathlib.GroupTheory.Perm.List` `Mathlib.Data.Fintype.Option` `Mathlib.GroupTheory.Perm.Support` `Mathlib.Data.Fintype.Parity` `Mathlib.CategoryTheory.Countable` `Mathlib.Data.Fintype.Card` `Mathlib.CategoryTheory.ComposableArrows` `Mathlib.Data.Fintype.Shrink` `Mathlib.Data.Finite.Set` `Mathlib.CategoryTheory.FinCategory.AsType` `Mathlib.Data.Fintype.Prod` `Mathlib.Algebra.CharZero.Infinite` `Mathlib.CategoryTheory.EffectiveEpi.Preserves`</details>|2|\n| `Mathlib.Order.Interval.Set.OrderIso` `Mathlib.Order.Fin.Tuple`|3|\n|<details><summary>7 files</summary> `Mathlib.CategoryTheory.SmallObject.Iteration` `Mathlib.Data.Multiset.Sort` `Mathlib.Testing.SlimCheck.Testable` `Mathlib.Algebra.Order.Group.PiLex` `Mathlib.Testing.SlimCheck.Sampleable` `Mathlib.Tactic.SlimCheck` `Mathlib.Data.PNat.Factors`</details>|4|\n|<details><summary>3 files</summary> `Mathlib.Data.List.Sort` `Mathlib.Data.Nat.Factors` `Mathlib.Data.List.NodupEquivFin`</details>|6|\n|<details><summary>7 files</summary> `Mathlib.Order.Fin.Basic` `Mathlib.Order.Hom.Set` `Mathlib.Control.Random` `Mathlib.Order.PiLex` `Mathlib.Testing.SlimCheck.Gen` `Mathlib.Order.IsWellOrderLimitElement` `Mathlib.Order.InitialSeg`</details>|7|\n| `Mathlib.Combinatorics.Quiver.Arborescence` `Mathlib.Order.WellFounded`|10|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ StrictAnti.not_bddBelow_range_of_isPredArchimedean`\n`+ StrictAnti.not_bddBelow_range_of_isSuccArchimedean`\n`+ StrictMono.not_bddAbove_range_of_isSuccArchimedean`\n`+ StrictMono.not_bddAbove_range_of_wellFoundedLT`\n`+ StrictMono.not_bddBelow_range_of_isPredArchimedean`\n`+ StrictMono.not_bddBelow_range_of_wellFoundedGT`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-20T06:41:52Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M3el-",
              "body": "The primed and unprimed versions are special cases of a more general lemma: If `f : alpha -> beta` is strictly monotone, `Ici b` is well-founded for all `b : beta` and `cof  beta <= cof alpha`, then `f` has unbounded range. I'm not saying you should be proving the two special cases using this general lemma (because it would require importing cofinality), but you should prove it, give it the unprimed name and name the two special cases something like `_of_succArchimedean` and `_ofWellFoundedLT`.",
              "createdAt": "2024-09-20T10:06:29Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M3i5M",
              "body": "I don't think your generalization is true as stated. The embedding from `Ï‰_ 1` into `Ï‰_ Ï‰` satisfies the hypotheses but has bounded range.",
              "createdAt": "2024-09-20T10:15:33Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M3l-a",
              "body": "Maybe if you replace cofinality by maximum coheight of an element?",
              "createdAt": "2024-09-20T10:22:26Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M9dWY",
              "body": "As in, the maximum rank of the well-founded order `Set.Iic x`? This should be true, but it'd be a hassle to state and prove, and I'm not even sure it subsumes the `PredArchimedean` lemma, at least not without further API. Do we have that these intervals are well-founded in any `PredArchimedean` order?\r\n\r\nMore than that, I do question whether anyone would ever find this generalization useful. It feels a bit too much on the specific side to me.",
              "createdAt": "2024-09-21T01:58:38Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M94Bg",
              "body": "Sure, but at least the existence of this general statement and the fact it could eventually be proved should guide us in (re)naming its special cases. Can you therefore please rename the two special cases something like _of_succArchimedean and _ofWellFoundedLT?",
              "createdAt": "2024-09-21T06:44:14Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-UsV",
              "body": "What about `StrictAnti.not_bddBelow_range`? There wouldn't be any corresponding `StrictAnti.not_bddBelow_range_of_wellFoundedX`.\r\n\r\nI'm fine with simply renaming the new lemmas to end in `of_wellFoundedX` and leaving the other ones as is.",
              "createdAt": "2024-09-21T11:12:57Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-aN6",
              "body": "Why wouldn't there be? Isn't there a `WellFoundedGT` version?",
              "createdAt": "2024-09-21T12:33:36Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-aPh",
              "body": "Yes, but that also takes in a `StrictMono` argument.",
              "createdAt": "2024-09-21T12:34:00Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-bW1",
              "body": "I don't get it. If you dualise both `alpha` and `beta`, then `f : alpha -> beta` goes from `StrictMono` to `StrictMono`, not `StrictAnti`.",
              "createdAt": "2024-09-21T12:49:34Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-faJ",
              "body": "Yeah, that's the thing. We wouldn't have `StrictAnti.not_bddAbove_range_of_wellFoundedLT`. But we do have [`StrictAnti.not_bddAbove_range`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/SuccPred/Archimedean.html#StrictAnti.not_bddAbove_range)",
              "createdAt": "2024-09-21T13:40:49Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-f0r",
              "body": "Ah sure. I think it makes sense to rename them for consistency",
              "createdAt": "2024-09-21T13:47:12Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M-i5m",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2024-09-21T14:20:28Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6NSCs3",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2024-09-24T06:37:02Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6NTBRC",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11008868301/job/30567336815)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11008868301/job/30567336470)",
              "createdAt": "2024-09-24T08:11:39Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6f1029f343016f80588bc76c8c7e99aa745806f6",
                "additions": 11,
                "deletions": 0,
                "committedDate": "2024-09-20T06:37:51Z",
                "author": {
                  "name": "Violeta HernÃ¡ndez",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPdrRg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954491988/job/30416530246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPdrTg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954491982/job/30416530254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXJBw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954455022/job/30416423175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXKXQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954454969/job/30416423517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPdsTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954491962/job/30416530508"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXKOA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954455022/job/30416423480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXIrA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954454969/job/30416423084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPdrhw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954491962/job/30416530311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXLHw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954455022/job/30416423711"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXJqA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954454969/job/30416423336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPXMBg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954455022/job/30416423942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFRWJwA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10954454969/job/30418504128"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPd8KQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30416534569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHFPerkg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16960&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "52c146979a2cdd8cf2f3916d19cedd721d499cda",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-09-21T11:26:47Z",
                "author": {
                  "name": "Violeta HernÃ¡ndez",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c30a21811d335842e83611204894fd440a407f2b",
                "additions": 23,
                "deletions": 8,
                "committedDate": "2024-09-21T13:51:17Z",
                "author": {
                  "name": "Violeta HernÃ¡ndez",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqbw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099732/job/30470105711"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqfw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099726/job/30470105727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjpkg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099571/job/30470105490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjplg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099569/job/30470105494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099723/job/30470105701"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqNQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099571/job/30470105653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjp5w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099569/job/30470105575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqwA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099723/job/30470105792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqMQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099569/job/30470105649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjp7w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099571/job/30470105583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjqtw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099571/job/30470105783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCln0g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973099569/job/30470137810"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCjzfA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30470108028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCkAVA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16960&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e3ff52657edc8010be66fffba3729127c3824e0f",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-09-21T13:55:40Z",
                "author": {
                  "name": "Violeta HernÃ¡ndez",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGC6tsg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279075/job/30470483378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGC6tZA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279082/job/30470483300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmbWg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121058/job/30470151002"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGC6tIA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279080/job/30470483232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmbXA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121057/job/30470151004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmaog",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150818"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCma_A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470150908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmbcQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121059/job/30470151025"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGC6tCA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279075/job/30470483208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmbBw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmazg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470150862"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmbmQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121059/job/30470151065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmazQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmalA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470150804"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmbMQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGDSArA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470865068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmfCw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30470151947"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHGCmwag",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16960&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHWTfGsQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5998",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-20T06:41:13Z",
        "deletions": 8,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Order/SuccPred/Archimedean.lean",
              "additions": 23,
              "deletions": 8
            },
            {
              "path": "Mathlib/Order/WellFounded.lean",
              "additions": 11,
              "deletions": 0
            }
          ]
        },
        "headRefName": "vi.sm_nbr",
        "headRefOid": "e3ff52657edc8010be66fffba3729127c3824e0f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c58H_uh",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6KRXdh",
              "body": "maintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-21T14:20:07Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16960,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6KRXdh",
              "body": "maintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-21T14:20:07Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY1NDY1Njcw",
              "login": "vihdzp"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGC6tsg",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279075/job/30470483378"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGC6tZA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279082/job/30470483300"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmbWg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121058/job/30470151002"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGC6tIA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279080/job/30470483232"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmbXA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121057/job/30470151004"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmaog",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150818"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCma_A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470150908"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmbcQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121059/job/30470151025"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGC6tCA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973279075/job/30470483208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmbBw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150919"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmazg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470150862"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmbmQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973121059/job/30470151065"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmazQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmalA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470150804"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmbMQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120994/job/30470150961"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGDSArA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10973120993/job/30470865068"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmfCw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30470151947"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHGCmwag",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16960&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHWTfGsQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5998",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(Order/WellFounded): `StrictMono.not_bddAbove_range`",
        "updatedAt": "2024-09-24T08:11:45Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16960",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XRvGYzwAAAANWcPeZ",
              "createdAt": "2024-09-20T06:41:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6XRvGYzwAAAANWcPeh",
              "createdAt": "2024-09-20T06:41:13Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M17KA",
              "createdAt": "2024-09-20T06:41:52Z",
              "body": "### PR summary [e3ff52657e](https://github.com/leanprover-community/mathlib4/pull/16960/commits/e3ff52657edc8010be66fffba3729127c3824e0f)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.WellFounded | 220 | 230 | +10 (+4.55%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>14 files</summary> `Mathlib.Data.Fintype.Sum` `Mathlib.GroupTheory.Perm.List` `Mathlib.Data.Fintype.Option` `Mathlib.GroupTheory.Perm.Support` `Mathlib.Data.Fintype.Parity` `Mathlib.CategoryTheory.Countable` `Mathlib.Data.Fintype.Card` `Mathlib.CategoryTheory.ComposableArrows` `Mathlib.Data.Fintype.Shrink` `Mathlib.Data.Finite.Set` `Mathlib.CategoryTheory.FinCategory.AsType` `Mathlib.Data.Fintype.Prod` `Mathlib.Algebra.CharZero.Infinite` `Mathlib.CategoryTheory.EffectiveEpi.Preserves`</details>|2|\n| `Mathlib.Order.Interval.Set.OrderIso` `Mathlib.Order.Fin.Tuple`|3|\n|<details><summary>7 files</summary> `Mathlib.CategoryTheory.SmallObject.Iteration` `Mathlib.Data.Multiset.Sort` `Mathlib.Testing.SlimCheck.Testable` `Mathlib.Algebra.Order.Group.PiLex` `Mathlib.Testing.SlimCheck.Sampleable` `Mathlib.Tactic.SlimCheck` `Mathlib.Data.PNat.Factors`</details>|4|\n|<details><summary>3 files</summary> `Mathlib.Data.List.Sort` `Mathlib.Data.Nat.Factors` `Mathlib.Data.List.NodupEquivFin`</details>|6|\n|<details><summary>7 files</summary> `Mathlib.Order.Fin.Basic` `Mathlib.Order.Hom.Set` `Mathlib.Control.Random` `Mathlib.Order.PiLex` `Mathlib.Testing.SlimCheck.Gen` `Mathlib.Order.IsWellOrderLimitElement` `Mathlib.Order.InitialSeg`</details>|7|\n| `Mathlib.Combinatorics.Quiver.Arborescence` `Mathlib.Order.WellFounded`|10|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ StrictAnti.not_bddBelow_range_of_isPredArchimedean`\n`+ StrictAnti.not_bddBelow_range_of_isSuccArchimedean`\n`+ StrictMono.not_bddAbove_range_of_isSuccArchimedean`\n`+ StrictMono.not_bddAbove_range_of_wellFoundedLT`\n`+ StrictMono.not_bddBelow_range_of_isPredArchimedean`\n`+ StrictMono.not_bddBelow_range_of_wellFoundedGT`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5XTyws",
              "createdAt": "2024-09-20T07:11:08Z",
              "source": {
                "id": "PR_kwDOFcwZ1c58IKiF",
                "title": "[Merged by Bors] - refactor(SetTheory/Ordinal/Enum): better definition for `Ordinal.enumOrd`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16962"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M3el-",
              "createdAt": "2024-09-20T10:06:29Z",
              "body": "The primed and unprimed versions are special cases of a more general lemma: If `f : alpha -> beta` is strictly monotone, `Ici b` is well-founded for all `b : beta` and `cof  beta <= cof alpha`, then `f` has unbounded range. I'm not saying you should be proving the two special cases using this general lemma (because it would require importing cofinality), but you should prove it, give it the unprimed name and name the two special cases something like `_of_succArchimedean` and `_ofWellFoundedLT`.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XRvGYzwAAAANWltTd",
              "createdAt": "2024-09-20T10:06:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M3i5M",
              "createdAt": "2024-09-20T10:15:33Z",
              "body": "I don't think your generalization is true as stated. The embedding from `Ï‰_ 1` into `Ï‰_ Ï‰` satisfies the hypotheses but has bounded range.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M3l-a",
              "createdAt": "2024-09-20T10:22:26Z",
              "body": "Maybe if you replace cofinality by maximum coheight of an element?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M9dWY",
              "createdAt": "2024-09-21T01:58:38Z",
              "body": "As in, the maximum rank of the well-founded order `Set.Iic x`? This should be true, but it'd be a hassle to state and prove, and I'm not even sure it subsumes the `PredArchimedean` lemma, at least not without further API. Do we have that these intervals are well-founded in any `PredArchimedean` order?\r\n\r\nMore than that, I do question whether anyone would ever find this generalization useful. It feels a bit too much on the specific side to me.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M94Bg",
              "createdAt": "2024-09-21T06:44:14Z",
              "body": "Sure, but at least the existence of this general statement and the fact it could eventually be proved should guide us in (re)naming its special cases. Can you therefore please rename the two special cases something like _of_succArchimedean and _ofWellFoundedLT?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-UsV",
              "createdAt": "2024-09-21T11:12:57Z",
              "body": "What about `StrictAnti.not_bddBelow_range`? There wouldn't be any corresponding `StrictAnti.not_bddBelow_range_of_wellFoundedX`.\r\n\r\nI'm fine with simply renaming the new lemmas to end in `of_wellFoundedX` and leaving the other ones as is.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-aN6",
              "createdAt": "2024-09-21T12:33:36Z",
              "body": "Why wouldn't there be? Isn't there a `WellFoundedGT` version?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-aPh",
              "createdAt": "2024-09-21T12:34:00Z",
              "body": "Yes, but that also takes in a `StrictMono` argument.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-bW1",
              "createdAt": "2024-09-21T12:49:34Z",
              "body": "I don't get it. If you dualise both `alpha` and `beta`, then `f : alpha -> beta` goes from `StrictMono` to `StrictMono`, not `StrictAnti`.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-faJ",
              "createdAt": "2024-09-21T13:40:49Z",
              "body": "Yeah, that's the thing. We wouldn't have `StrictAnti.not_bddAbove_range_of_wellFoundedLT`. But we do have [`StrictAnti.not_bddAbove_range`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/SuccPred/Archimedean.html#StrictAnti.not_bddAbove_range)",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-f0r",
              "createdAt": "2024-09-21T13:47:12Z",
              "body": "Ah sure. I think it makes sense to rename them for consistency",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6XRvGYzwAAAANXS2qZ",
              "createdAt": "2024-09-21T13:55:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XRvGYzwAAAANXS2qb",
              "createdAt": "2024-09-21T13:55:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6KRXdh",
              "createdAt": "2024-09-21T14:20:07Z",
              "body": "maintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M-i5m",
              "createdAt": "2024-09-21T14:20:28Z",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XRvGYzwAAAANXToc2",
              "createdAt": "2024-09-21T14:20:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6XRvGYzwAAAANXT5Yr",
              "createdAt": "2024-09-21T14:50:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6NSCs3",
              "createdAt": "2024-09-24T06:37:02Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XRvGYzwAAAANY3fd4",
              "createdAt": "2024-09-24T06:37:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6NTBRC",
              "createdAt": "2024-09-24T08:11:39Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11008868301/job/30567336815)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11008868301/job/30567336470)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6XRvGYzwAAAANY8dSB",
              "createdAt": "2024-09-24T08:11:40Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6XRvGYzwAAAANY8djV",
              "createdAt": "2024-09-24T08:11:45Z"
            }
          ]
        }
      }
    }
  }
}
