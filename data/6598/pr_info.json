{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 80,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "vasnesterov"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Add Radon's theorem on convex sets\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-09-14T22:04:56Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ksWAv",
              "body": "Thank you very much for your review and advice, I've learned a lot of things from this! I did everything you suggested and make a few more small simplifications in both `radon_partition` and `radon_set_partition`.",
              "createdAt": "2023-08-23T06:19:28Z",
              "author": {
                "login": "vasnesterov"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mfKs4",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2023-09-14T13:24:12Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mfN_W",
              "body": ":v: vasnesterov can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-14T13:32:02Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mh6rt",
              "body": "Thanks everyone! I am really happy about my first commit!\r\n\r\nbors r+",
              "createdAt": "2023-09-14T21:19:23Z",
              "author": {
                "login": "vasnesterov"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5miGaP",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6191003688/job/16808404586)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6191003688/job/16808405131)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6191003688/job/16808405282)",
              "createdAt": "2023-09-14T22:04:55Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "327f61b74e7ed8df565a2201c51196de794b30e1",
                "additions": 192,
                "deletions": 0,
                "committedDate": "2023-08-15T19:48:33Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a090517f101f574f5a5ef006206ae4495dd917d3",
                "additions": 17,
                "deletions": 19,
                "committedDate": "2023-08-15T20:35:30Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f7aede908ad28f23da0e6c3d57b51b420d3337e6",
                "additions": 4,
                "deletions": 3,
                "committedDate": "2023-08-15T20:42:48Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6538282134752364317b0a30e3ef33addd9457b9",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-15T20:52:54Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e54a3d646fdf2290d7d5c99af05e3b3e7cb250ca",
                "additions": 77,
                "deletions": 35,
                "committedDate": "2023-08-18T08:24:13Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0c29258b2ec681eabef9b1adc8914a028c72cc44",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-08-18T08:30:10Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8bdf8583818984a5ce10948b0863f2c1c4feda2a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-18T08:34:26Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "00c1ce76a53193f5faa96f86a91e266164084ae0",
                "additions": 65,
                "deletions": 167,
                "committedDate": "2023-08-22T22:21:48Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "27d539d3601446675d6f6daac54ad148be1a207d",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-08-22T22:25:25Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f1185367eebc1ae3d20477fd9fa3b2444dea3deb",
                "additions": 4,
                "deletions": 30,
                "committedDate": "2023-09-02T11:40:32Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2ddeb56dbe5896527a1ee8074fdddeb97ccbea41",
                "additions": 39,
                "deletions": 44,
                "committedDate": "2023-09-10T18:36:47Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3757dfd1d916efbc4ab49a253ee575cb9aa82c82",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-09-10T18:41:42Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2eb9e0c53603fec198d36f620158c190fb3fa536",
                "additions": 50,
                "deletions": 50,
                "committedDate": "2023-09-13T19:30:54Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "00858f148f6fb3e95ba8dad14a3fd92e96bfb92d",
                "additions": 4,
                "deletions": 6,
                "committedDate": "2023-09-13T19:37:18Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4b4f8ccc84af046b4da4c7653b27682643628f0d",
                "additions": 11,
                "deletions": 15,
                "committedDate": "2023-09-14T10:02:58Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "vas.nesterov63@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "be26f1efe7ce119a42d9c1dbb718d22b69f6db44",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-14T10:08:14Z",
                "author": {
                  "name": "Vasily Nesterov",
                  "email": "118051017+vasnesterov@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1cb2a8a67f00c5595875fa9c6f3298b029abf4fd",
                "additions": 36715,
                "deletions": 16591,
                "committedDate": "2023-09-14T12:09:23Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c90bb1ab4902c5d192b22c483bbbd2f2d0b8ba87",
                "additions": 56,
                "deletions": 71,
                "committedDate": "2023-09-14T13:16:54Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5f8c18307d7eba97114770df76f57f246113782b",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-09-14T13:20:41Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-15T20:26:50Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Convex/Combination.lean",
              "additions": 28,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Convex/Radon.lean",
              "additions": 51,
              "deletions": 0
            }
          ]
        },
        "headRefName": "radon_convexity",
        "headRefOid": "5f8c18307d7eba97114770df76f57f246113782b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YANd5",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5hBKFr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-14T20:22:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g8swJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-09-14T10:05:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fpqqe",
              "body": "I'm very sorry for leaving this aside for so long. With the end of the summer vacations more people should be available to review your PR, but I will un-assign myself from this since I wont have a lot of time in the next few weeks. I'll try to have a final look tomorrow, otherwise I'll ask another maintainer to finish the review. Sorry again!",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-31T13:45:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g-QBl",
              "body": "Looks great, thanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-14T13:44:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g-I7O",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-14T13:32:00Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6598,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eUXFO",
              "body": "Thanks and congrats for your first PR! I left two small style comments as well as an alternative formulation which I believe could simplify the proof, so let's start with that and then I'll have a deeper look at the proof.",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-17T11:29:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eV8Je",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-17T14:50:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebHt1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "vasnesterov"
              },
              "submittedAt": "2023-08-18T09:09:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5elUKs",
              "body": "I had a look at the main proof. Overall it's well structured and will definitely be a welcome addition to mathlib after some refinement!\r\nI made quite extensive suggestions and tried to explain what I did, the hope being that you can pick up some of our usual tricks. So please ask if you have any question about what I wrote!",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-21T12:58:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eomww",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "vasnesterov"
              },
              "submittedAt": "2023-08-21T19:17:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ewBGX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-22T14:51:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fpqqe",
              "body": "I'm very sorry for leaving this aside for so long. With the end of the summer vacations more people should be available to review your PR, but I will un-assign myself from this since I wont have a lot of time in the next few weeks. I'll try to have a final look tomorrow, otherwise I'll ask another maintainer to finish the review. Sorry again!",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-31T13:45:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f2UbP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "vasnesterov"
              },
              "submittedAt": "2023-09-02T11:48:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gSDM_",
              "body": "Hey! I'm one of the few convexity reviewers. I am taking over reviewing here.\n\nYour PR is in a good place. I'm just hoping we can cut down the proof a bit by extracting lemmas. Here's a first idea: If `s`, `t` are disjoint and the sums of `w` and `w smul f` over `s union t` are zero, then `centerMass s w f = centerMass t w f`. You might suffer a bit because the `centerMass` API expects positive scalars and you're giving it negative ones. Feel free to write versions of the `centerMass` API lemmas that assume negative scalars if that helps you.\n\nLet me also mention that you could (in later PRs) prove Helly's theorem and simplify my proof of Stone's separation theorem from this.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-07T17:35:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g3-Nu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-09-13T19:33:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g7YBo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-14T07:30:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g8swJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-09-14T10:05:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g-EiP",
              "body": "Thanks! This is now nice and short.\r\n\r\nI've pushed one last cleanup. If you're happy with it, feel free to merge!\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-14T13:23:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g-I7O",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-14T13:32:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g-P2J",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-14T13:44:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g-QBl",
              "body": "Looks great, thanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-14T13:44:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hBKFr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-14T20:22:37Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT9xv",
                    "body": "```suggestion\r\n    (h : ¬AffineIndependent 𝕜 ((↑) : s → E)) : ∃ (I : Set E), (I ⊆ s) ∧\r\n    (Set.Nonempty ((convexHull 𝕜 I) ∩ (convexHull 𝕜 (s \\ I)))) := by\r\n```\r\nI don't think we have a documentation for this yet, but the convention in Lean4 is that everything before the `:=` should be indented twice.",
                    "createdAt": "2023-08-17T11:20:23Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT9-b",
                    "body": "```suggestion\r\ntheorem radon_partition (s : Set E)\r\n```",
                    "createdAt": "2023-08-17T11:20:54Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NT_l1",
                    "body": "I would suggest formulating the theorem for a *family* of points instead of a set of points: it should be both easier to use and easier to prove. It would look like this:\r\n```lean\r\ntheorem radon_partition {ι : Type*} {f : ι → E}\r\n    (h : ¬AffineIndependent 𝕜 f) : ∃ (I : Set ι),\r\n    (Set.Nonempty ((convexHull 𝕜 (f '' I)) ∩ (convexHull 𝕜 (f '' Iᶜ)))) := by\r\n  sorry\r\n```",
                    "createdAt": "2023-08-17T11:27:49Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NU9QT",
                    "body": "Actually I thought a bit more about it and it's not that clear that it would be easier to use. I would still say to state that version and deduce the current one from it, but I don't have a strong opinion so do as you wish.",
                    "createdAt": "2023-08-17T14:50:52Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYRyj",
                    "body": "Thanks! I did as you suggest, and the proof really got a little easier.",
                    "createdAt": "2023-08-18T09:09:36Z",
                    "author": {
                      "login": "vasnesterov"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfLmW",
                    "body": "Since you're working in a vector space, you can use [affineIndependent_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/AffineSpace/Independent.html#affineIndependent_iff), which is more convenient that these \"weighted VSub\".\r\n```suggestion\r\n  rw [affineIndependent_iff] at h; push_neg at h\r\n```",
                    "createdAt": "2023-08-21T12:05:21Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfMjP",
                    "body": "```suggestion\r\n  let I : Finset ι := s1.filter (fun i => 0 ≤ w i)\r\n```\r\nThis may sound very picky, but there is a good reason: by convention, most lemmas in the library use `≤` instead of `≥`. The choice is a bit arbitrary, but it's important that we have a \"normal form\", otherwise we would spend a lot of time reversing the inequality back-and-forth depending on the lemmas we use. So it's best to stick to it.",
                    "createdAt": "2023-08-21T12:08:55Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfNGl",
                    "body": "```suggestion\r\n    simpa only [h_wsum, not_le] using sum_filter_add_sum_filter_not s1 (fun i => 0 ≤ w i) w\r\n```\r\nNothing fundamental here, but if you don't know about `simpa` you should learn about it, it's a great way to do \"`exact` up to some rewriting/simplification\"!",
                    "createdAt": "2023-08-21T12:11:10Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfQTP",
                    "body": "A few things here:\r\n- as above, prefer `0 < _` to `_ > 0`\r\n- reasoning by cases is a perfectly fine strategy, but here you can take a shortcut: the lemma [Finset.exists_pos_of_sum_zero_of_exists_nonzero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Order.html#Finset.exists_pos_of_sum_zero_of_exists_nonzero) tells you that there exists at least a positive term (basically by doing the case disjunction for you), so you get `h_I_neg` directly\r\n- proving that a sum of nonnegative elements is positive by exhibiting a positive term is so common that we have a lemma for it, [Finset.sum_pos'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/BigOperators/Order.html#Finset.sum_pos')\r\n- with my other suggestions below, you actually only need `h_I_pos`.\r\n```suggestion\r\n  have h_I_pos : 0 < weights_sum_I := by\r\n    rcases exists_pos_of_sum_zero_of_exists_nonzero _ h_wsum ⟨nonzero_w_index, h1, h2⟩\r\n      with ⟨pos_w_index, h1', h2'⟩\r\n    exact sum_pos'\r\n      (by simp only [mem_filter, and_imp, imp_self, implies_true])\r\n      ⟨pos_w_index, by simp only [mem_filter, h1', h2'.le, and_self, h2']⟩\r\n```\r\nHere's what the proof of `h_J_neg` would look like from there:\r\n```lean\r\n  have h_J_neg : weights_sum_J < 0 := by\r\n    linarith\r\n```",
                    "createdAt": "2023-08-21T12:23:45Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NhMI6",
                    "body": "It's very cool! Can you teach me how you find exactly which lemmas to use in `simp only`?",
                    "createdAt": "2023-08-21T19:17:28Z",
                    "author": {
                      "login": "vasnesterov"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nl3Zi",
                    "body": "`simp? [...]` tells you which lemmas are used, both from the set of simp lemmas and the manually provided ones. To be fair, in these case you could keep the condensed form (`by simp` on line 55, `by simp [h1', h2'.le, h2']` on line 56). The rule is that all `simp` calls that do *not* close the goal should be replaced by `simp only` to be more predictable.",
                    "createdAt": "2023-08-22T14:51:08Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfQjM",
                    "body": "```suggestion\r\n  let w' : ι → 𝕜 := fun i => |w i| / weights_sum_I\r\n```\r\nThis is easier to work with thanks to the existing API.",
                    "createdAt": "2023-08-21T12:24:37Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfSCN",
                    "body": "Using `Finset.sum_congr` to turn a sum into a more convenient one like you do is a great general strategy, but in simple cases like that you can directly use `simp_rw` to do a lot of work under the binders. But again, keep your strategy in mind for more complicated cases!\r\nAlso, you have `open Finset`, so you can remove a lot of these `Finset.`\r\n```suggestion\r\n    simp_rw [← sum_div, div_eq_one_iff_eq h_I_pos.ne.symm]\r\n    refine sum_congr rfl ?_\r\n    intro i hi\r\n    simp only [abs_eq_self, mem_filter.mp hi]\r\n```",
                    "createdAt": "2023-08-21T12:30:20Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfSUk",
                    "body": "```suggestion\r\n    simp_rw [← sum_div, div_eq_one_iff_eq h_I_pos.ne.symm, eq_neg_of_add_eq_zero_left h3,\r\n      ← sum_neg_distrib]\r\n    refine sum_congr rfl ?_\r\n    intro i hi\r\n    simp only [abs_eq_neg_self, (mem_filter.mp hi).2.le]\r\n```\r\nSimilar to above.",
                    "createdAt": "2023-08-21T12:31:27Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfSsA",
                    "body": "```suggestion\r\n  have h6 : ∀ v, 0 ≤ w' v := by\r\n    intro; exact div_nonneg (abs_nonneg _) h_I_pos.le\r\n```\r\nReversing the inequalities as usual, and here the proof becomes simpler thanks to the new definition of `w'`",
                    "createdAt": "2023-08-21T12:32:51Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfSvL",
                    "body": "Could you move this closer to `p`?",
                    "createdAt": "2023-08-21T12:33:03Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfU4u",
                    "body": "- As mentioned above, you can completely avoid `VSub` here.\r\n- Again, no need for an auxiliary function here\r\n- The tactic `congr : 1` in my code generates two goals. The `<;>` combinator after it tells it that the next tactic should be run in both cases.\r\n```suggestion\r\n    apply eq_of_sub_eq_zero\r\n    simp_rw [div_eq_inv_mul, mul_smul, ← smul_sum, ← smul_sub, sub_eq_add_neg, ← sum_neg_distrib]\r\n    apply smul_eq_zero_of_right\r\n    rw [← h_vsum, ← Finset.sum_filter_add_sum_filter_not s1 (fun i => 0 ≤ w i) (fun i ↦ w i • f i)]\r\n    congr 1 <;>\r\n    refine sum_congr (by simp only [not_le]) fun i hi ↦ ?_\r\n    · rw [mem_filter] at hi\r\n      rw [abs_eq_self.mpr hi.2]\r\n    · rw [mem_filter, not_le] at hi\r\n      rw [abs_eq_neg_self.mpr hi.2.le, neg_smul, neg_neg]\r\n```",
                    "createdAt": "2023-08-21T12:41:23Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfWkl",
                    "body": "- When there are multiple goals and a tactic block only applies to the first one, it's better to indicate it by using the \"dotted list\" syntax\r\n- In `apply` you can specify all the arguments you want\r\n- Since `convex_convexHull 𝕜 _` has type `Convex 𝕜 something`, you can write `(convex_convexHull 𝕜 _).sum_mem` for `Convex.sum_mem (convex_convexHull 𝕜 _)`. This is called \"dot notation\"\r\n- `s ⊆ t` is defined as `∀ {x}, x ∈ s → x ∈ t`, so a lot of the time you can apply it directly without needing `Set.mem_of_mem_of_subset`\r\n```suggestion\r\n  · apply (convex_convexHull 𝕜 _).sum_mem (fun i _ ↦ h6 i) h5_I\r\n    exact fun i hi ↦ subset_convexHull _ _ (Set.mem_image_of_mem _ hi)\r\n```",
                    "createdAt": "2023-08-21T12:47:29Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfXDv",
                    "body": "Same comments as above. Note that in the second `apply`, the last `_` is the only one Lean can't guess, so it becomes the new goal.\r\n```suggestion\r\n  · rw [h7]\r\n    apply (convex_convexHull 𝕜 _).sum_mem (fun i _ ↦ h6 i) h5_J\r\n    intro i hi\r\n    apply subset_convexHull _ _ (Set.mem_image_of_mem _ _)\r\n    intro h9_neg\r\n    exact not_lt_of_le (mem_filter.mp h9_neg).2 (mem_filter.mp hi).2\r\n```",
                    "createdAt": "2023-08-21T12:49:14Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OLeOa",
                    "body": "I was very surprised why you'd have to use `Lean.Internal.coeM` here, but I see where it comes from. I think it shouldn't appear, and I've just asked about it on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Lean.2EInternal.2ECoeM/near/388318831).\r\nIn your case it's easy enough to just use `Subtype.val '' I` anyways, the following proof works:\r\n```lean\r\n  obtain ⟨I, hI⟩ := radon_partition h\r\n  use (↑) '' I\r\n  constructor\r\n  · exact Subtype.coe_image_subset _ _\r\n  rwa [compl_eq_univ_diff, image_diff  Subtype.val_injective, image_univ, Subtype.range_coe] at hI\r\n```",
                    "createdAt": "2023-08-31T13:28:25Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OTzZM",
                    "body": "It is much simpler, thank you!",
                    "createdAt": "2023-09-02T11:48:25Z",
                    "author": {
                      "login": "vasnesterov"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol3dW",
                    "body": "```suggestion\r\n\r\nconvex hull, radon\r\n```",
                    "createdAt": "2023-09-07T12:44:00Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol31u",
                    "body": "You're using too many brackets\r\n```suggestion\r\n    (convexHull 𝕜 (f '' I) ∩ convexHull 𝕜 (f '' Iᶜ)).Nonempty := by\r\n```\nAlso note that you can use dot notation.",
                    "createdAt": "2023-09-07T12:45:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol38y",
                    "body": "```suggestion\r\ntheorem radon_partition {ι : Type*} {f : ι → E} (h : ¬ AffineIndependent 𝕜 f) :\r\n  ∃ I : Set ι,\r\n```",
                    "createdAt": "2023-09-07T12:45:53Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OnEls",
                    "body": "```suggestion\n    intro; positivity\n```\n",
                    "createdAt": "2023-09-07T16:32:20Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OnFCH",
                    "body": "```suggestion\n  refine \\<(↑) '' I, Subtype.coe_image_subset _ _, ?_\\>\n  rwa [compl_eq_univ_diff, image_diff Subtype.val_injective, image_univ, Subtype.range_coe] at hI\n```\n(to be replaced by the corresponding unicode, sorry!)",
                    "createdAt": "2023-09-07T16:34:11Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OnRbw",
                    "body": "You could define this using `Finset.centerMass` which hopefully make everything easier.",
                    "createdAt": "2023-09-07T17:24:14Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OnR4_",
                    "body": "Do you really need the type annotation here?\n```suggestion\n  use I\n```",
                    "createdAt": "2023-09-07T17:26:08Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5O-Yye",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    @Finset.sum_congr _ _ _ _ _ ((fun i => c • w i • z i)) _ rfl, ←Finset.smul_sum, smul_comm,\n```\n",
                    "createdAt": "2023-09-13T19:33:47Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5O-Yyi",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n      p'' = p := by\n```\n",
                    "createdAt": "2023-09-13T19:33:47Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PAV-S",
                    "body": "You should not need this, as in that case both `∑ i in I, w i` and `∑ i in J, w i` are zero and `centerMass I w z = centerMass J w z = 0` by the junk value of division by zero (`a / 0 = 0`).\r\n```suggestion\r\n    (h_wsum_zero : ∑ i in I, w i + ∑ j in J, w j = 0)\r\n```",
                    "createdAt": "2023-09-14T07:27:23Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PAWBB",
                    "body": "```suggestion\r\n    centerMass I w z = centerMass J w z := by\r\n```",
                    "createdAt": "2023-09-14T07:27:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PAWEB",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-09-14T07:27:40Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PAWpY",
                    "body": "```suggestion\r\nlemma Finset.centerMass_of_sum_add_sum_eq_zero {ι : Type*} {z : ι → E} (w : ι → 𝕜) (I J : Finset ι)\r\n```\r\nCan you also move it to `Analysis.Convex.Combination`?",
                    "createdAt": "2023-09-14T07:29:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PAXBn",
                    "body": "```suggestion\r\n  · exact (convex_convexHull _ _).centerMass_mem (fun _ hi ↦ (mem_filter.mp hi).2) h_I_pos\r\n```",
                    "createdAt": "2023-09-14T07:30:37Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PBNwe",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  rw [Finset.centerMass, Finset.centerMass, eq_neg_of_add_eq_zero_right h_wsum_zero,\n```\n",
                    "createdAt": "2023-09-14T10:05:31Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PCIbL",
                    "body": "```suggestion\r\n/-- **Radon's theorem on convex sets**: Any family `f` of affine dependent vectors contains a set `I`\r\n```",
                    "createdAt": "2023-09-14T13:31:56Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PCM5U",
                    "body": "@YaelDillies, do you think using `Disjoint` here would be better or worse?",
                    "createdAt": "2023-09-14T13:44:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PEHAh",
                    "body": "Probably worse. That's neither how we prove nor use it.",
                    "createdAt": "2023-09-14T20:22:37Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOBwlQyQ",
              "login": "vasnesterov"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Analysis/Convex): Radon's convexity theorem",
        "updatedAt": "2023-09-14T22:04:59Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6598",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "327f61b74e7ed8df565a2201c51196de794b30e1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a090517f101f574f5a5ef006206ae4495dd917d3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f7aede908ad28f23da0e6c3d57b51b420d3337e6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6538282134752364317b0a30e3ef33addd9457b9"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJaGoNJ",
              "createdAt": "2023-08-15T21:28:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eUXFO",
              "createdAt": "2023-08-17T11:20:22Z",
              "body": "Thanks and congrats for your first PR! I left two small style comments as well as an alternative formulation which I believe could simplify the proof, so let's start with that and then I'll have a deeper look at the proof.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJbGW6p",
              "createdAt": "2023-08-17T11:30:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJbGW6w",
              "createdAt": "2023-08-17T11:30:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e54a3d646fdf2290d7d5c99af05e3b3e7cb250ca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0c29258b2ec681eabef9b1adc8914a028c72cc44"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8bdf8583818984a5ce10948b0863f2c1c4feda2a"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJbqiCq",
              "createdAt": "2023-08-18T09:09:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJbqiCy",
              "createdAt": "2023-08-18T09:09:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5uZIJFzwAAAAJcjo_6",
              "createdAt": "2023-08-21T08:59:32Z",
              "assignee": {
                "id": "MDQ6VXNlcjQ4NjU2Nzkz",
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5elUKs",
              "createdAt": "2023-08-21T12:05:12Z",
              "body": "I had a look at the main proof. Overall it's well structured and will definitely be a welcome addition to mathlib after some refinement!\r\nI made quite extensive suggestions and tried to explain what I did, the hope being that you can pick up some of our usual tricks. So please ask if you have any question about what I wrote!",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJcszJI",
              "createdAt": "2023-08-21T12:58:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJcszJT",
              "createdAt": "2023-08-21T12:58:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00c1ce76a53193f5faa96f86a91e266164084ae0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "27d539d3601446675d6f6daac54ad148be1a207d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ksWAv",
              "createdAt": "2023-08-23T06:19:28Z",
              "body": "Thank you very much for your review and advice, I've learned a lot of things from this! I did everything you suggested and make a few more small simplifications in both `radon_partition` and `radon_set_partition`.",
              "author": {
                "login": "vasnesterov"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJd7_nm",
              "createdAt": "2023-08-23T06:19:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJd7_nv",
              "createdAt": "2023-08-23T06:19:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJgCpuc",
              "createdAt": "2023-08-27T06:37:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fpqqe",
              "createdAt": "2023-08-31T13:28:25Z",
              "body": "I'm very sorry for leaving this aside for so long. With the end of the summer vacations more people should be available to review your PR, but I will un-assign myself from this since I wont have a lot of time in the next few weeks. I'll try to have a final look tomorrow, otherwise I'll ask another maintainer to finish the review. Sorry again!",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJip-Fg",
              "createdAt": "2023-08-31T13:45:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJip-Ft",
              "createdAt": "2023-08-31T13:45:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnassignedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f1185367eebc1ae3d20477fd9fa3b2444dea3deb"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJjxyd5",
              "createdAt": "2023-09-02T11:48:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJjxyd6",
              "createdAt": "2023-09-02T11:48:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gSDM_",
              "createdAt": "2023-09-07T12:43:59Z",
              "body": "Hey! I'm one of the few convexity reviewers. I am taking over reviewing here.\n\nYour PR is in a good place. I'm just hoping we can cut down the proof a bit by extracting lemmas. Here's a first idea: If `s`, `t` are disjoint and the sums of `w` and `w smul f` over `s union t` are zero, then `centerMass s w f = centerMass t w f`. You might suffer a bit because the `centerMass` API expects positive scalars and you're giving it negative ones. Feel free to write versions of the `centerMass` API lemmas that assume negative scalars if that helps you.\n\nLet me also mention that you could (in later PRs) prove Helly's theorem and simplify my proof of Stone's separation theorem from this.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJmh8iE",
              "createdAt": "2023-09-07T17:36:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJmh8iK",
              "createdAt": "2023-09-07T17:36:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2ddeb56dbe5896527a1ee8074fdddeb97ccbea41"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3757dfd1d916efbc4ab49a253ee575cb9aa82c82"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2eb9e0c53603fec198d36f620158c190fb3fa536"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g3-Nu",
              "createdAt": "2023-09-13T19:33:47Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00858f148f6fb3e95ba8dad14a3fd92e96bfb92d"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJpvoFt",
              "createdAt": "2023-09-13T19:53:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJpvoF3",
              "createdAt": "2023-09-13T19:53:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g7YBo",
              "createdAt": "2023-09-14T07:27:23Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJqASr_",
              "createdAt": "2023-09-14T07:32:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJqASsF",
              "createdAt": "2023-09-14T07:32:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4b4f8ccc84af046b4da4c7653b27682643628f0d"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g8swJ",
              "createdAt": "2023-09-14T10:05:31Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "be26f1efe7ce119a42d9c1dbb718d22b69f6db44"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJqHadb",
              "createdAt": "2023-09-14T10:11:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJqHadp",
              "createdAt": "2023-09-14T10:11:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1cb2a8a67f00c5595875fa9c6f3298b029abf4fd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c90bb1ab4902c5d192b22c483bbbd2f2d0b8ba87"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5f8c18307d7eba97114770df76f57f246113782b"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g-EiP",
              "createdAt": "2023-09-14T13:23:59Z",
              "body": "Thanks! This is now nice and short.\r\n\r\nI've pushed one last cleanup. If you're happy with it, feel free to merge!\r\n\r\nmaintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mfKs4",
              "createdAt": "2023-09-14T13:24:12Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g-I7O",
              "createdAt": "2023-09-14T13:31:56Z",
              "body": "Thanks!\r\n\r\nbors d+",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mfN_W",
              "createdAt": "2023-09-14T13:32:02Z",
              "body": ":v: vasnesterov can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZIJFzwAAAAJqPndG",
              "createdAt": "2023-09-14T13:32:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZIJFzwAAAAJqPngB",
              "createdAt": "2023-09-14T13:32:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g-P2J",
              "createdAt": "2023-09-14T13:44:30Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g-QBl",
              "createdAt": "2023-09-14T13:44:49Z",
              "body": "Looks great, thanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mh6rt",
              "createdAt": "2023-09-14T21:19:23Z",
              "body": "Thanks everyone! I am really happy about my first commit!\r\n\r\nbors r+",
              "author": {
                "login": "vasnesterov"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5miGaP",
              "createdAt": "2023-09-14T22:04:55Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6191003688/job/16808404586)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6191003688/job/16808405131)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6191003688/job/16808405282)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uZIJFzwAAAAJqiHiR",
              "createdAt": "2023-09-14T22:04:56Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uZIJFzwAAAAJqiHmE",
              "createdAt": "2023-09-14T22:04:59Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OdecW",
              "createdAt": "2023-09-18T11:02:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ajmCx",
                "title": "[Merged by Bors] - feat(Analysis/Convex): Helly's convexity theorem",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7236"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
