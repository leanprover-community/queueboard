{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1843,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "euprunin"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\nThis is an easier to review alternative to PR #16419. This PR only adds the linter and does not change any imports. Currently unsorted imports are added to `nolints-style.txt`.\r\n\r\nRationale for sorting imports:\r\n* Reduces the risk of introduction of new unintentional import order dependencies\r\n* Documents existing (potential) import order dependencies as linting exceptions\r\n* Simplifies the identification and resolution of merge conflicts\r\n* Establishes a standard format for imports\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-10-01T05:55:08Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6MBgUg",
              "body": "### PR summary [3d17b119c0](https://github.com/leanprover-community/mathlib4/pull/16772/commits/3d17b119c0d20fa4d4e343d21d27b54b605bec8f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ unsortedImportsLinter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-09-13T15:19:04Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MGMup",
              "body": "I won't have time to review this in depth until October, sorry. That said, the implementation looks straightforward, so the harder part is deciding if this PR is desirable. (If import order had no performance effects, I would say \"clearly yes\", but sadly the story is not as simple.)\r\n\r\nTwo quick thoughts:\r\n- given that this linter produces sometimes unhelpful warnings, I'm not sure if it should be active by default. (Putting comments when out of order imports are intentionally left so does seem useful, though.)\r\n- I don't think putting 1800 entries into nolints-style should land as-is. If there are many exceptions, they should be auto-updatable (which that file intentionally is not); rather style-exceptions.txt should be restored. If we foresee exceptions changing, one could also just comment the few cases of intentional out of order imports. \r\n- If (almost) all imports should be sorted, I wonder if a PR changing most of these is fine and should land before (perhaps split into parts).\r\n\r\nA good next step could be to start a discussion in the #mathlib stream, trying to gauge if this PR is desired or not.\r\nI gather this PR and its predecessor have been sitting, mostly without attention for two weeks. I can imagine this is a rather unsatisfactory situation for you, @eprunin. I'm sorry for that. Collectively deciding about a (at least slightly) controversial PR takes time --- one way you can accelarate is by asking on zulip first.\r\n\r\n(I don't remember a zulip threat about this, but haven't checked. If there was already, sorry for the noise. In that case, I'd rather label with PR with awaiting-zulip, or link to the discussion in the description.)",
              "createdAt": "2024-09-13T22:05:18Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MGNxb",
              "body": "Actually, let me label this with awaiting-zulip: I think there should first be a decision if this PR is wanted by the mathlib maintainers. (I am not a maintainer.)",
              "createdAt": "2024-09-13T22:06:26Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MI3os",
              "body": "Assuming that this is something that receives approval, I would probably recommend to create a PR depending on\n\n#16574\n\nthat extends that linter by checking that the (parsed) imports are sorted.",
              "createdAt": "2024-09-14T20:12:29Z",
              "author": {
                "login": "adomani"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f29fce09c0e7471f2a033cc382634e87d50bf8bd",
                "additions": 22,
                "deletions": 1,
                "committedDate": "2024-09-13T15:13:44Z",
                "author": {
                  "name": "euprunin",
                  "email": "euprunin@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3d17b119c0d20fa4d4e343d21d27b54b605bec8f",
                "additions": 1821,
                "deletions": 0,
                "committedDate": "2024-09-13T15:13:50Z",
                "author": {
                  "name": "euprunin",
                  "email": "euprunin@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHA6chvg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813202/job/30126055870"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHA6ciMQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813227/job/30126055985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHA6cgUw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813207/job/30126055507"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHMXgGVA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11119478386/job/30894720596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAxABEw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735815/job/30116151571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAxAA5Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735816/job/30116151525"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwza_Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115945213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzcTQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115945549"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAxACYA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735817/job/30116151904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHA6cgew",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813202/job/30126055547"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzeAA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115945984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwze7A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115946220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAxABDQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735817/job/30116151565"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzccA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115945584"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzdeQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115945849"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzflw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115946391"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzbEA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115945232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAwzg6w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115946731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAzZscQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30118669425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAxAZWA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30116157784"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHAxD7yw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16772&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-13T15:18:20Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/Linter/TextBased.lean",
              "additions": 22,
              "deletions": 1
            },
            {
              "path": "scripts/nolints-style.txt",
              "additions": 1821,
              "deletions": 0
            }
          ]
        },
        "headRefName": "euprunin_lint_unsorted_imports",
        "headRefOid": "3d17b119c0d20fa4d4e343d21d27b54b605bec8f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c57cslb",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
              "color": "33DBEC",
              "name": "t-linter"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABmPU_0w",
              "color": "53A5FF",
              "name": "awaiting-zulip"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6JUrja",
              "body": "LGTM\r\nIt is still a mystery to me why sometimes the order of the imports changes performance (if I understand correctly)",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2024-09-13T19:13:35Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16772,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwMTA1MDE2",
                "login": "grunweg"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE2ODg1MzM=",
                "login": "alexjbest"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5NDY3NzQ1",
                "login": "adomani"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6JUrja",
              "body": "LGTM\r\nIt is still a mystery to me why sometimes the order of the imports changes performance (if I understand correctly)",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2024-09-13T19:13:35Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCqdB6w",
              "login": "euprunin"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHA6chvg",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813202/job/30126055870"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHA6ciMQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813227/job/30126055985"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHA6cgUw",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813207/job/30126055507"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHMXgGVA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11119478386/job/30894720596"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAxABEw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735815/job/30116151571"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAxAA5Q",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735816/job/30116151525"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwza_Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115945213"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzcTQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115945549"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAxACYA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735817/job/30116151904"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHA6cgew",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10854813202/job/30126055547"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzeAA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115945984"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwze7A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115946220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAxABDQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851735817/job/30116151565"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzccA",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115945584"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzdeQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115945849"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzflw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115946391"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzbEA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30115945232"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAwzg6w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669408/job/30115946731"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAzZscQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10851669411/job/30118669425"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAxAZWA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30116157784"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHAxD7yw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16772&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: add unsorted imports linter",
        "updatedAt": "2024-10-01T05:55:08Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16772",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MBgUg",
              "createdAt": "2024-09-13T15:19:04Z",
              "body": "### PR summary [3d17b119c0](https://github.com/leanprover-community/mathlib4/pull/16772/commits/3d17b119c0d20fa4d4e343d21d27b54b605bec8f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ unsortedImportsLinter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6Wgc4dzwAAAANRbA8P",
              "createdAt": "2024-09-13T15:49:53Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwMTA1MDE2",
                "login": "grunweg"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6Wgc4dzwAAAANRbDTk",
              "createdAt": "2024-09-13T15:50:46Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE2ODg1MzM=",
                "login": "alexjbest"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6Wgc4dzwAAAANRbDT1",
              "createdAt": "2024-09-13T15:50:46Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM0OTE2Mjc=",
                "login": "mo271"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6Wgc4dzwAAAANRbDT8",
              "createdAt": "2024-09-13T15:50:46Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5NDY3NzQ1",
                "login": "adomani"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6Wgc4dzwAAAANRbHGi",
              "createdAt": "2024-09-13T15:52:04Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6JUrja",
              "createdAt": "2024-09-13T19:13:35Z",
              "body": "LGTM\r\nIt is still a mystery to me why sometimes the order of the imports changes performance (if I understand correctly)",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MGMup",
              "createdAt": "2024-09-13T22:05:18Z",
              "body": "I won't have time to review this in depth until October, sorry. That said, the implementation looks straightforward, so the harder part is deciding if this PR is desirable. (If import order had no performance effects, I would say \"clearly yes\", but sadly the story is not as simple.)\r\n\r\nTwo quick thoughts:\r\n- given that this linter produces sometimes unhelpful warnings, I'm not sure if it should be active by default. (Putting comments when out of order imports are intentionally left so does seem useful, though.)\r\n- I don't think putting 1800 entries into nolints-style should land as-is. If there are many exceptions, they should be auto-updatable (which that file intentionally is not); rather style-exceptions.txt should be restored. If we foresee exceptions changing, one could also just comment the few cases of intentional out of order imports. \r\n- If (almost) all imports should be sorted, I wonder if a PR changing most of these is fine and should land before (perhaps split into parts).\r\n\r\nA good next step could be to start a discussion in the #mathlib stream, trying to gauge if this PR is desired or not.\r\nI gather this PR and its predecessor have been sitting, mostly without attention for two weeks. I can imagine this is a rather unsatisfactory situation for you, @eprunin. I'm sorry for that. Collectively deciding about a (at least slightly) controversial PR takes time --- one way you can accelarate is by asking on zulip first.\r\n\r\n(I don't remember a zulip threat about this, but haven't checked. If there was already, sorry for the noise. In that case, I'd rather label with PR with awaiting-zulip, or link to the discussion in the description.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Wgc4dzwAAAANRqP3M",
              "createdAt": "2024-09-13T22:05:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
                "name": "t-linter"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Wgc4dzwAAAANRqQGr",
              "createdAt": "2024-09-13T22:05:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABmPU_0w",
                "name": "awaiting-zulip"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MGNxb",
              "createdAt": "2024-09-13T22:06:26Z",
              "body": "Actually, let me label this with awaiting-zulip: I think there should first be a decision if this PR is wanted by the mathlib maintainers. (I am not a maintainer.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MI3os",
              "createdAt": "2024-09-14T20:12:29Z",
              "body": "Assuming that this is something that receives approval, I would probably recommend to create a PR depending on\n\n#16574\n\nthat extends that linter by checking that the (parsed) imports are sorted.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6Wgc4dzwAAAANeQo9f",
              "createdAt": "2024-10-01T05:55:08Z"
            }
          ]
        }
      }
    }
  }
}
