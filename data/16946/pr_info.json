{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 250,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Also add a few basic lemmas and fix the delaborator in `Algebra.BigOperators.Expect`.\r\n\r\nFrom LeanAPAP\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2024-09-28T20:02:31Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6MuNBs",
              "body": "### PR summary [e9a939bbc7](https://github.com/leanprover-community/mathlib4/pull/16946/commits/e9a939bbc72d9390d9e2134a51018d4a3e21eb3b)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.BigOperators.Expect | 677 | 684 | +7 (+1.03%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>332 files</summary> `Mathlib.MeasureTheory.Integral.VitaliCaratheodory` `Mathlib.Analysis.CStarAlgebra.GelfandDuality` `Mathlib.Probability.Process.HittingTime` `Mathlib.Analysis.InnerProductSpace.Spectrum` `Mathlib.NumberTheory.Cyclotomic.Rat` `Mathlib.Probability.BorelCantelli` `Mathlib.NumberTheory.LSeries.HurwitzZetaValues` `Mathlib.Analysis.SpecialFunctions.Gamma.Basic` `Mathlib.Probability.Variance` `Mathlib.LinearAlgebra.Matrix.PosDef` `Mathlib.Analysis.SpecialFunctions.Integrals` `Mathlib.NumberTheory.Harmonic.ZetaAsymp` `Mathlib.Dynamics.Ergodic.AddCircle` `Mathlib.Analysis.Calculus.BumpFunction.Convolution` `Mathlib.Analysis.Fourier.PoissonSummation` `Mathlib.Analysis.InnerProductSpace.Rayleigh` `Mathlib.NumberTheory.Cyclotomic.Discriminant` `Mathlib.MeasureTheory.Measure.FiniteMeasure` `Mathlib.MeasureTheory.Integral.IntervalAverage` `Mathlib.Analysis.Distribution.FourierSchwartz` `Mathlib.Analysis.Normed.Lp.PiLp` `Mathlib.Analysis.Calculus.ParametricIntervalIntegral` `Mathlib.MeasureTheory.Measure.ProbabilityMeasure` `Mathlib.MeasureTheory.Function.UnifTight` `Mathlib.NumberTheory.GaussSum` `Mathlib.MeasureTheory.Measure.Lebesgue.Complex` `Mathlib.NumberTheory.EulerProduct.DirichletLSeries` `Mathlib.MeasureTheory.Integral.IntervalIntegral` `Mathlib.Analysis.Complex.AbsMax` `Mathlib.Analysis.InnerProductSpace.ProdL2` `Mathlib.Probability.Kernel.Disintegration.CDFToKernel` `Mathlib.Analysis.CStarAlgebra.Spectrum` `Mathlib.Geometry.Manifold.Instances.Real` `Mathlib.Geometry.Manifold.Complex` `Mathlib.NumberTheory.LSeries.DirichletContinuation` `Mathlib.MeasureTheory.Integral.CircleIntegral` `Mathlib.Probability.StrongLaw` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Unique` `Mathlib.Analysis.SpecialFunctions.Gaussian.GaussianIntegral` `Mathlib.Analysis.SpecialFunctions.Gamma.Beta` `Mathlib.MeasureTheory.Integral.TorusIntegral` `Mathlib.MeasureTheory.Function.L2Space` `Mathlib.MeasureTheory.Measure.LevyProkhorovMetric` `Mathlib.Algebra.Module.ZLattice.Covolume` `Mathlib.MeasureTheory.Function.ContinuousMapDense` `Mathlib.Analysis.Complex.TaylorSeries` `Mathlib.Analysis.Normed.Algebra.Spectrum` `Mathlib.Analysis.FunctionalSpaces.SobolevInequality` `Mathlib.NumberTheory.LSeries.ZMod` `Mathlib.Analysis.CStarAlgebra.Module.Constructions` `Mathlib.Probability.Distributions.Exponential` `Mathlib.Analysis.SpecialFunctions.Complex.Arctan` `Mathlib.Analysis.BoxIntegral.Partition.Measure` `Mathlib.Probability.Kernel.Composition` `Mathlib.Probability.Martingale.Upcrossing` `Mathlib.MeasureTheory.Function.SimpleFuncDenseLp` `Mathlib.Probability.Martingale.OptionalSampling` `Mathlib.MeasureTheory.Integral.DivergenceTheorem` `Mathlib.NumberTheory.NumberField.Discriminant` `Mathlib.NumberTheory.NumberField.EquivReindex` `Mathlib.MeasureTheory.Measure.LogLikelihoodRatio` `Mathlib.NumberTheory.SiegelsLemma` `Mathlib.Analysis.SpecialFunctions.ImproperIntegrals` `Mathlib.Analysis.Fourier.ZMod` `Mathlib.Analysis.SpecialFunctions.Complex.LogBounds` `Mathlib.MeasureTheory.Function.LpSpace` `Mathlib.Analysis.SpecialFunctions.Gamma.Deligne` `Mathlib.Analysis.Complex.PhragmenLindelof` `Mathlib.NumberTheory.ModularForms.JacobiTheta.Manifold` `Mathlib.Analysis.InnerProductSpace.NormPow` `Mathlib.Algebra.Module.ZLattice.Basic` `Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls` `Mathlib.MeasureTheory.Integral.FundThmCalculus` `Mathlib.NumberTheory.Cyclotomic.Three` `Mathlib.Probability.Kernel.Disintegration.Integral` `Mathlib.NumberTheory.LSeries.HurwitzZetaEven` `Mathlib.Analysis.CStarAlgebra.Matrix` `Mathlib.Geometry.Manifold.PoincareConjecture` `Mathlib.MeasureTheory.Measure.Portmanteau` `Mathlib.NumberTheory.LSeries.Deriv` `Mathlib.MeasureTheory.Measure.Haar.NormedSpace` `Mathlib.Analysis.Fourier.AddCircle` `Mathlib.Analysis.SpecialFunctions.Gaussian.PoissonSummation` `Mathlib.MeasureTheory.Measure.Lebesgue.EqHaar` `Mathlib.Analysis.Fourier.Inversion` `Mathlib.Analysis.Normed.Algebra.QuaternionExponential` `Mathlib.MeasureTheory.Function.LpSeminorm.TriangleInequality` `Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.Rpow` `Mathlib.Probability.Kernel.WithDensity` `Mathlib.Analysis.SpecialFunctions.NonIntegrable` `Mathlib.Geometry.Euclidean.Angle.Oriented.Basic` `Mathlib.MeasureTheory.Function.ConditionalExpectation.AEMeasurable` `Mathlib.Geometry.Euclidean.Sphere.Ptolemy` `Mathlib.Analysis.Normed.Algebra.MatrixExponential` `Mathlib.MeasureTheory.Group.AddCircle` `Mathlib.Probability.Independence.ZeroOne` `Mathlib.Analysis.SpecialFunctions.Complex.Analytic` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.Basic` `Mathlib.Probability.Kernel.Disintegration.StandardBorel` `Mathlib.MeasureTheory.Function.UniformIntegrable` `Mathlib.MeasureTheory.Measure.Hausdorff` `Mathlib.Probability.Distributions.Gaussian` `Mathlib.Probability.Kernel.CondDistrib` `Mathlib.MeasureTheory.Integral.Bochner` `Mathlib.MeasureTheory.Measure.Haar.Unique` `Mathlib.Geometry.Manifold.BumpFunction` `Mathlib.Probability.Martingale.Basic` `Mathlib.Analysis.InnerProductSpace.GramSchmidtOrtho` `Mathlib.Analysis.Normed.Lp.ProdLp` `Mathlib.MeasureTheory.Decomposition.RadonNikodym` `Mathlib.Probability.Kernel.RadonNikodym` `Mathlib.NumberTheory.Harmonic.GammaDeriv` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.FundamentalCone` `Mathlib.MeasureTheory.Decomposition.SignedLebesgue` `Mathlib.MeasureTheory.Measure.WithDensityFinite` `Mathlib.Analysis.Complex.CauchyIntegral` `Mathlib.Analysis.InnerProductSpace.JointEigenspace` `Mathlib.MeasureTheory.Group.GeometryOfNumbers` `Mathlib.Analysis.SpecialFunctions.PolarCoord` `Mathlib.MeasureTheory.Covering.LiminfLimsup` `Mathlib.Geometry.Euclidean.Angle.Sphere` `Mathlib.Analysis.InnerProductSpace.LinearPMap` `Mathlib.MeasureTheory.Order.UpperLower` `Mathlib.Analysis.Calculus.ParametricIntegral` `Mathlib.Probability.Martingale.Convergence` `Mathlib.Analysis.Normed.Lp.lpSpace` `Mathlib.MeasureTheory.Function.LpSpace.DomAct.Basic` `Mathlib.Probability.Kernel.IntegralCompProd` `Mathlib.NumberTheory.ModularForms.JacobiTheta.OneVariable` `Mathlib.Probability.Kernel.Disintegration.CondCDF` `Mathlib.MeasureTheory.Function.AEEqOfIntegral` `Mathlib.Probability.Kernel.Disintegration.Density` `Mathlib.Analysis.Convex.Integral` `Mathlib.MeasureTheory.Covering.BesicovitchVectorSpace` `Mathlib.MeasureTheory.Constructions.Prod.Integral` `Mathlib.NumberTheory.Cyclotomic.Embeddings` `Mathlib.MeasureTheory.Integral.Layercake` `Mathlib.Analysis.CStarAlgebra.Module.Defs` `Mathlib.Analysis.Complex.Schwarz` `Mathlib.Analysis.Fourier.FourierTransformDeriv` `Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace` `Mathlib.NumberTheory.LSeries.RiemannZeta` `Mathlib.MeasureTheory.Covering.OneDim` `Mathlib.Data.Real.Pi.Leibniz` `Mathlib.NumberTheory.FLT.Three` `Mathlib.Geometry.Euclidean.Inversion.Calculus` `Mathlib.Analysis.InnerProductSpace.Positive` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody` `Mathlib.NumberTheory.NumberField.Units.Basic` `Mathlib.Probability.Kernel.Invariance` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral` `Mathlib.Probability.Distributions.Uniform` `Mathlib.MeasureTheory.Covering.DensityTheorem` `Mathlib.MeasureTheory.Constructions.UnitInterval` `Mathlib.NumberTheory.Liouville.Measure` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unique` `Mathlib.NumberTheory.DirichletCharacter.GaussSum` `Mathlib.MeasureTheory.Measure.FiniteMeasureProd` `Mathlib.Probability.Kernel.MeasurableIntegral` `Mathlib.NumberTheory.ModularForms.JacobiTheta.Bounds` `Mathlib.Analysis.MeanInequalities` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.MDifferentiable` `Mathlib.NumberTheory.LSeries.Dirichlet` `Mathlib.MeasureTheory.Integral.Asymptotics` `Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.ExpLog` `Mathlib.Tactic.NormNum.LegendreSymbol` `Mathlib.NumberTheory.ModularForms.JacobiTheta.TwoVariable` `Mathlib.Analysis.Fourier.RiemannLebesgueLemma` `Mathlib.Analysis.BoxIntegral.Basic` `Mathlib.Analysis.Quaternion` `Mathlib.Analysis.BoxIntegral.Integrability` `Mathlib.Analysis.InnerProductSpace.Calculus` `Mathlib.MeasureTheory.Function.StronglyMeasurable.Lp` `Mathlib.Combinatorics.Additive.AP.Three.Behrend` `Mathlib.Topology.MetricSpace.GromovHausdorff` `Mathlib.MeasureTheory.Integral.IntegralEqImproper` `Mathlib.Analysis.Complex.Polynomial.Basic` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Basic` `Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving` `Mathlib.MeasureTheory.Function.L1Space` `Mathlib.Probability.Kernel.Disintegration.Basic` `Mathlib.Analysis.Complex.RemovableSingularity` `Mathlib.MeasureTheory.Measure.Tilted` `Mathlib.Analysis.Complex.Liouville` `Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum` `Mathlib.NumberTheory.LSeries.MellinEqDirichlet` `Mathlib.Geometry.Euclidean.Angle.Oriented.RightAngle` `Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol` `Mathlib.MeasureTheory.Function.Jacobian` `Mathlib.Analysis.Complex.LocallyUniformLimit` `Mathlib.Analysis.InnerProductSpace.EuclideanDist` `Mathlib.MeasureTheory.Function.LpOrder` `Mathlib.Analysis.Convex.Measure` `Mathlib.Probability.Moments` `Mathlib.NumberTheory.LegendreSymbol.AddCharacter` `Mathlib.NumberTheory.Cyclotomic.PID` `Mathlib.NumberTheory.JacobiSum.Basic` `Mathlib.Analysis.Normed.Lp.LpEquiv` `Mathlib.Topology.MetricSpace.HausdorffDimension` `Mathlib.Analysis.Distribution.AEEqOfIntegralContDiff` `Mathlib.Analysis.InnerProductSpace.PiL2` `Mathlib.MeasureTheory.Group.FundamentalDomain` `Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity` `Mathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup` `Mathlib.MeasureTheory.Decomposition.Lebesgue` `Mathlib.Geometry.Euclidean.Angle.Oriented.Rotation` `Mathlib.MeasureTheory.Function.LocallyIntegrable` `Mathlib.Analysis.InnerProductSpace.StarOrder` `Mathlib.Analysis.NormedSpace.DualNumber` `Mathlib.Probability.Process.Stopping` `Mathlib.MeasureTheory.Integral.PeakFunction` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL1` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL2` `Mathlib.NumberTheory.NumberField.Units.DirichletTheorem` `Mathlib.MeasureTheory.Integral.MeanInequalities` `Mathlib.MeasureTheory.Integral.BoundedContinuousFunction` `Mathlib.Analysis.Normed.Algebra.Basic` `Mathlib.MeasureTheory.Integral.ExpDecay` `Mathlib.Dynamics.Ergodic.Action.OfMinimal` `Mathlib.NumberTheory.NumberField.Units.Regulator` `Mathlib.Analysis.SpecialFunctions.Stirling` `Mathlib.Analysis.ConstantSpeed` `Mathlib.LinearAlgebra.Matrix.Hermitian` `Mathlib.Analysis.Calculus.Monotone` `Mathlib.RingTheory.Polynomial.Selmer` `Mathlib.Geometry.Manifold.IntegralCurve` `Mathlib.Analysis.SumIntegralComparisons` `Mathlib.MeasureTheory.Constructions.HaarToSphere` `Mathlib.Analysis.SpecialFunctions.JapaneseBracket` `Mathlib.MeasureTheory.Integral.CircleTransform` `Mathlib.MeasureTheory.Integral.DominatedConvergence` `Mathlib.Probability.Kernel.MeasureCompProd` `Mathlib.NumberTheory.ZetaValues` `Mathlib.MeasureTheory.Function.ConvergenceInMeasure` `Mathlib.Analysis.Fourier.FourierTransform` `Mathlib.LinearAlgebra.Matrix.LDL` `Mathlib.Probability.Independence.Integrable` `Mathlib.Analysis.Matrix` `Mathlib.Probability.IdentDistrib` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances` `Mathlib.Analysis.Convolution` `Mathlib.LinearAlgebra.Matrix.SchurComplement` `Mathlib.MeasureTheory.Function.LpSeminorm.CompareExp` `Mathlib.Topology.MetricSpace.Kuratowski` `Mathlib.Analysis.MellinInversion` `Mathlib.Analysis.CStarAlgebra.Hom` `Mathlib.Analysis.Complex.Polynomial.UnitTrinomial` `Mathlib.Geometry.Manifold.PartitionOfUnity` `Mathlib.MeasureTheory.Measure.SeparableMeasure` `Mathlib.MeasureTheory.Covering.Differentiation` `Mathlib.NumberTheory.LSeries.HurwitzZetaOdd` `Mathlib.Analysis.Complex.Hadamard` `Mathlib.Analysis.Calculus.LineDeriv.IntegrationByParts` `Mathlib.Combinatorics.SimpleGraph.LapMatrix` `Mathlib.Analysis.BoundedVariation` `Mathlib.Analysis.InnerProductSpace.Adjoint` `Mathlib.NumberTheory.WellApproximable` `Mathlib.MeasureTheory.Measure.Lebesgue.Basic` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Order` `Mathlib.Analysis.Convex.Cone.Proper` `Mathlib.Probability.Process.Adapted` `Mathlib.Probability.Distributions.Pareto` `Mathlib.MeasureTheory.Measure.Lebesgue.Integral` `Mathlib.Analysis.Calculus.Rademacher` `Mathlib.Analysis.Calculus.BumpFunction.InnerProduct` `Mathlib.LinearAlgebra.Matrix.Spectrum` `Mathlib.MeasureTheory.Integral.Pi` `Mathlib.NumberTheory.NumberField.House` `Mathlib.Analysis.InnerProductSpace.l2Space` `Mathlib.NumberTheory.NumberField.Embeddings` `Mathlib.MeasureTheory.Function.Intersectivity` `Mathlib.Probability.Process.Filtration` `Mathlib.MeasureTheory.Integral.Periodic` `Mathlib.NumberTheory.Harmonic.Bounds` `Mathlib.Analysis.MellinTransform` `Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar` `Mathlib.MeasureTheory.Integral.Gamma` `Mathlib.Analysis.VonNeumannAlgebra.Basic` `Mathlib.MeasureTheory.Measure.DiracProba` `Mathlib.MeasureTheory.Integral.IntegrableOn` `Mathlib.Analysis.SpecialFunctions.Trigonometric.EulerSineProd` `Mathlib.MeasureTheory.Integral.SetToL1` `Mathlib.Probability.Kernel.Condexp` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Indicator` `Mathlib.Geometry.Euclidean.Triangle` `Mathlib.MeasureTheory.Covering.Besicovitch` `Mathlib.Analysis.Calculus.BumpFunction.FiniteDimension` `Mathlib.Probability.Distributions.Gamma` `Mathlib.Probability.Martingale.OptionalStopping` `Mathlib.Probability.Martingale.BorelCantelli` `Mathlib.Probability.Density` `Mathlib.Analysis.Complex.OpenMapping` `Mathlib.Probability.ProbabilityMassFunction.Integrals` `Mathlib.Analysis.Calculus.BumpFunction.Normed` `Mathlib.Analysis.ODE.PicardLindelof` `Mathlib.NumberTheory.NumberField.ClassNumber` `Mathlib.Probability.ConditionalExpectation` `Mathlib.MeasureTheory.Integral.SetIntegral` `Mathlib.Analysis.InnerProductSpace.Orientation` `Mathlib.Geometry.Euclidean.Angle.Oriented.Affine` `Mathlib.NumberTheory.LSeries.HurwitzZeta` `Mathlib.Tactic` `Mathlib.Analysis.SpecialFunctions.Gaussian.FourierTransform` `Mathlib.MeasureTheory.Function.LpSpace.DomAct.Continuous` `Mathlib.MeasureTheory.Group.Integral` `Mathlib.MeasureTheory.Measure.Haar.Disintegration` `Mathlib.Analysis.Distribution.SchwartzSpace` `Mathlib.Probability.Integration` `Mathlib.Analysis.BoxIntegral.DivergenceTheorem` `Mathlib.MeasureTheory.Measure.WithDensityVectorMeasure` `Mathlib.Analysis.SpecialFunctions.Pow.Integral` `Mathlib.Geometry.Manifold.WhitneyEmbedding` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic` `Mathlib.Probability.Kernel.Integral` `Mathlib.MeasureTheory.Integral.Average` `Mathlib.Probability.Kernel.Disintegration.Unique` `Mathlib.LinearAlgebra.Matrix.HermitianFunctionalCalculus` `Mathlib.Probability.Independence.Conditional` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Basic` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Real` `Mathlib.Data.Real.Pi.Wallis` `Mathlib.Analysis.Normed.Algebra.TrivSqZeroExt` `Mathlib.Probability.Process.PartitionFiltration` `Mathlib.Probability.Notation` `Mathlib.NumberTheory.LSeries.AbstractFuncEq` `Mathlib.Probability.CDF` `Mathlib.MeasureTheory.Measure.Haar.OfBasis` `Mathlib.Analysis.InnerProductSpace.TwoDim` `Mathlib.Probability.Martingale.Centering` `Mathlib.MeasureTheory.Measure.Haar.Quotient` `Mathlib.Geometry.Manifold.Instances.Sphere` `Mathlib.Analysis.Normed.Algebra.UnitizationL1`</details>|1|\n| `Mathlib.Algebra.BigOperators.Expect`|7|\n| `Mathlib.Algebra.Order.BigOperators.Expect`|713|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.GCongr.expect_le_expect`\n`+ abs_expect_le_expect_abs`\n`+ compact_inner_le_weight_mul_Lp_of_nonneg`\n`+ evalFinsetExpect`\n`+ exists_lt_of_expect_lt`\n`+ exists_lt_of_lt_expect`\n`+ expect_apply`\n`+ expect_le`\n`+ expect_le_expect`\n`+ expect_mul_expect`\n`+ expect_mul_sq_le_sq_mul_sq`\n`+ expect_nonneg`\n`+ expect_pos`\n`+ le_expect`\n`+ le_expect_nonempty_of_subadditive`\n`+ le_expect_nonempty_of_subadditive_on_pred`\n`+ le_expect_of_subadditive`\n`+ le_expect_of_subadditive_on_pred`\n`++ expect_eq_zero_iff_of_nonneg`\n`++ expect_eq_zero_iff_of_nonpos`\n`++ expect_ite_mem`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-19T12:59:41Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N6L7B",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-09-28T17:24:16Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N6UQE",
              "body": "bors merge",
              "createdAt": "2024-09-28T19:34:43Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N6Vzs",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11086525732/job/30804160557)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11086525732/job/30804160639)",
              "createdAt": "2024-09-28T20:02:30Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e745c4092ca6b40aeb6d72f5e77339dbfbefadd4",
                "additions": 256,
                "deletions": 2,
                "committedDate": "2024-09-28T19:00:40Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "97ba2fbb5fd38abff3202e44e844ab042017d3c2",
                "additions": 19,
                "deletions": 25,
                "committedDate": "2024-09-28T19:09:19Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAxLOg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086347611/job/30803774266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAz-BQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086368240/job/30803820037"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAxLIA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086347618/job/30803774240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAz-aw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086368245/job/30803820139"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAxLLA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086347621/job/30803774252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAz-Cw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086368241/job/30803820043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwuGg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344601/job/30803766810"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwwSA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344913/job/30803767368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwwdA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344920/job/30803767412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwuMQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344600/job/30803766833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwuvg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344605/job/30803766974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwwrg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344911/job/30803767470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAxLpQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086347611/job/30803774373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAz-pQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086368240/job/30803820197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwvCw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344600/job/30803767051"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwvEQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344605/job/30803767057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwwRg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344911/job/30803767366"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwupA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344600/job/30803766948"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwuRw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344605/job/30803766855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAwvlg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344600/job/30803767190"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBAYXA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086344605/job/30804023388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAw_wQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30803771329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLAxMIQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16946&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e9a939bbc72d9390d9e2134a51018d4a3e21eb3b",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-09-28T19:34:10Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWQw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492650/job/30804088387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWkw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492661/job/30804088467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEVtA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEV3A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804088284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWwQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492654/job/30804088513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWVg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEVmw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804088219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWfQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492654/job/30804088445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEV6Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWJA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804088356"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEWug",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088506"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBKW-Q",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804186873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBEq8Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30804093681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHLBExPA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16946&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHX1WMhA",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6086",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-19T12:58:56Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Expect.lean",
              "additions": 24,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/BigOperators/Expect.lean",
              "additions": 211,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/MeanInequalities.lean",
              "additions": 14,
              "deletions": 0
            }
          ]
        },
        "headRefName": "expect_order",
        "headRefOid": "e9a939bbc72d9390d9e2134a51018d4a3e21eb3b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c58CJWA",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6LM2S_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-28T19:13:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16946,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6KBYCT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-19T13:53:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KBlme",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-19T14:08:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOK0q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T18:15:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOacY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T18:43:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOcX4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T18:46:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOgAJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T18:52:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOh5V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T18:58:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOjA6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T19:01:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KOluE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T19:08:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPD35",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T19:39:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPGSZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T19:45:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPICf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T19:51:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPJu3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T19:56:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPPNe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T20:10:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPdbS",
              "body": "Looks pretty decent overall!",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T20:49:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPpnE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T21:09:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPp5x",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T21:10:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPqP9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-20T21:11:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPrq7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T21:15:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KPry_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-20T21:15:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KQ6Cp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-21T08:25:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LMxV8",
              "body": "bors d+",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-28T17:24:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LMxXv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-28T17:24:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LMx_y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-28T17:44:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LM2Nr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-28T19:10:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6LM2S_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-28T19:13:17Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pUGY-",
                    "body": "Was this removal intentional?",
                    "createdAt": "2024-09-19T13:49:08Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pUOQa",
                    "body": "Whoops, no. Will fix",
                    "createdAt": "2024-09-19T14:08:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pUGr5",
                    "body": "Let's mention that this is about 𝔼 too here",
                    "createdAt": "2024-09-19T13:49:50Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pUHE0",
                    "body": "These removals look unintentional",
                    "createdAt": "2024-09-19T13:50:44Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pUHlh",
                    "body": "Would be great to have contrapositives of these: if the expectation is more than a, then some value is more than a. I'd prefer a TODO here and a different PR, but they're close enough to these that putting them here is fine too.",
                    "createdAt": "2024-09-19T13:52:02Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcQZF",
                    "body": "This is a nonterminal simp on the goals which it doesn't close, correct?",
                    "createdAt": "2024-09-20T18:13:29Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcaQS",
                    "body": "I think this really really doesn't matter here. There are six goals and the simp is closing four of them and doesn't touch the other two (in particular, `any_goals` means it doesn't act on them). Any attempt to structure the proof to avoid the nonterminality would make the proof less robust to future changes.",
                    "createdAt": "2024-09-20T18:46:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcQeR",
                    "body": "This looks like it should fail the single-goal linter",
                    "createdAt": "2024-09-20T18:13:53Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcQ3r",
                    "body": "Could be useful to have a separate file for testing positivity extensions...",
                    "createdAt": "2024-09-20T18:15:34Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcZMl",
                    "body": "The point of having the tests right after the extensions is that the way positivity works implies that it works cumulatively: If positivity proves a goal, then importing more things will not make it not prove that goal anymore",
                    "createdAt": "2024-09-20T18:43:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pccFL",
                    "body": "This sounds like it's an argument for centralising the extensions! The idea is that if they're all in one place, it's easy to test all the extensions simultaneously - we already have a test file for positivity, and I'm saying we should extend/imitate that one, rather than placing them sporadically throughout mathlib",
                    "createdAt": "2024-09-20T18:52:39Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcdSe",
                    "body": "> This sounds like it's an argument for centralising the extensions!\r\n\r\nCan you expand? I don't understand how \"positivity extensions work cumulatively\" implies \"positivity extensions should all be defined in the same place\"",
                    "createdAt": "2024-09-20T18:58:08Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcd_j",
                    "body": "I'm not saying they should all be defined in the same place! I'm saying they should all be _tested_ in the same place, and cumulativity implies this is just as fair a way of testing. The locations they're currently defined is better\r\n(I realise now that the first sentence in my last message made this unclear - sorry!)",
                    "createdAt": "2024-09-20T19:01:19Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pcfk7",
                    "body": "> cumulativity implies this is just as fair a way of testing\r\n\r\nMaybe, but testing in the individual files means you get much faster feedback when debugging the extension. This is nonnegligible",
                    "createdAt": "2024-09-20T19:08:47Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pc216",
                    "body": "Note that what you're suggesting is inconsistent with the way positivity extensions are already tested, inconsistent with the rest of mathlib, and inconsistent with general software design principles. What is so special about the way that this particular positivity extension works that means it deserves to be treated differently?",
                    "createdAt": "2024-09-20T19:39:00Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pc4O4",
                    "body": "> inconsistent with the way positivity extensions are already tested\r\n\r\nFactually incorrect: Grepping `example.*positivity` returns examples in 12 files that are not `test.positivity`. That's roughly a third of the files containing positivity extensions\r\n\r\n> inconsistent with the rest of mathlib\r\n\r\nExplained by the fact that positivity extensions are cumulative, which is a pretty rare feature among mathlib tactics\r\n\r\n> inconsistent with general software design principles\r\n\r\nCitation needed, but sure I'll concede",
                    "createdAt": "2024-09-20T19:45:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pc5VT",
                    "body": "Really what I'm saying is: two thirds of the positivity extensions are tested in one place (the `test/` folder), and these ones should be tested there too.",
                    "createdAt": "2024-09-20T19:51:06Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pc6YA",
                    "body": "Anyway I think it's bad to have tests scattered like this, but I won't block the PR on it",
                    "createdAt": "2024-09-20T19:56:09Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pc9g_",
                    "body": "I think it makes a lot of sense scattered, so 🤷 Let's find something more interesting to talk about",
                    "createdAt": "2024-09-20T20:10:22Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdFyC",
                    "body": "What's this change doing? Or more specifically, how do I know there won't be n more PRs incrementing the number again :D",
                    "createdAt": "2024-09-20T20:43:56Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdMCX",
                    "body": "Before this PR, `𝔼 i, f i` pretty-prints as `𝔼 i : Module ℚ≥0 M, f i`. After this PR, it will pretty-print as `𝔼 i : ι, f i`. I just originally mistakenly copied the argument numbers from the `Finset.sum` delaborator without tweaking them.",
                    "createdAt": "2024-09-20T21:09:39Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdF9z",
                    "body": "```suggestion\r\n/-- If `m` is a subadditive function (`m (x + y) ≤ m x + m y`, `m 0 = 0`), and `f i`,\r\n```",
                    "createdAt": "2024-09-20T20:45:00Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdGFK",
                    "body": "```suggestion\r\n/-- If `m` is a subadditive function (`m (x + y) ≤ m x + m y`, `f 1 = 1`), and \r\n`{f i}_{i ∈ s}`, is a finite family of elements, then `m (𝔼 i in s, f i) ≤ 𝔼 i in s, m (f i)`. -/\r\n```\r\nor something like this? It wasn't entirely clear to me what you meant originally",
                    "createdAt": "2024-09-20T20:45:38Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdMOr",
                    "body": "Actually, let's just do\r\n```suggestion\r\n/-- If `m` is a subadditive function (`m (x + y) ≤ m x + m y`, `m 1 = 1`),\r\nthen `m (𝔼 i ∈ s, f i) ≤ 𝔼 i ∈ s, m (f i)`. -/\r\n```",
                    "createdAt": "2024-09-20T21:10:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdNKj",
                    "body": "that works too, but note `m 0 = 0`, not 1",
                    "createdAt": "2024-09-20T21:15:39Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdGQW",
                    "body": "This docstring doesn't include something for `h_div`",
                    "createdAt": "2024-09-20T20:46:33Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdG46",
                    "body": "hmm, I wonder if there's a way of stating this so that h_add only needs to hold on a subset of M, maybe the submonoid generated by `f '' s`? Can be a todo",
                    "createdAt": "2024-09-20T20:48:00Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5peJH_",
                    "body": "The lemmas already existed for `sum`. I copied them over",
                    "createdAt": "2024-09-21T08:25:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdHFr",
                    "body": "norm version? also can be todo",
                    "createdAt": "2024-09-20T20:48:48Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdMYW",
                    "body": "It's in APAP already. Can add it, but it will become a new file",
                    "createdAt": "2024-09-20T21:11:31Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pdNFm",
                    "body": "Yeah, let's just put a TODO here so it doesn't get forgotten",
                    "createdAt": "2024-09-20T21:15:14Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qFGED",
                    "body": "This is a bit weird to me - can't positivity figure out that {1} is nonempty?",
                    "createdAt": "2024-09-28T17:23:47Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qFKso",
                    "body": "Well spotted. This was accidentally the pre-`proveFinsetNonempty` version of the extension",
                    "createdAt": "2024-09-28T19:10:01Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qFGGR",
                    "body": "This is the same one that you're marking not simp in another PR, yes?",
                    "createdAt": "2024-09-28T17:24:43Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5qFG0y",
                    "body": "Now that `univ_nonempty` is simp, I can indeed unsimp this lemma",
                    "createdAt": "2024-09-28T17:44:42Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qFKyx",
                    "body": "```suggestion\r\nlemma exists_lt_of_lt_expect (hs : s.Nonempty) (h : a < 𝔼 i ∈ s, f i) : ∃ x ∈ s, a < f x := by\r\n```",
                    "createdAt": "2024-09-28T19:12:43Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qFKy5",
                    "body": "```suggestion\r\nlemma exists_lt_of_expect_lt (hs : s.Nonempty) (h : 𝔼 i ∈ s, f i < a) : ∃ x ∈ s, f x < a := by\r\n```",
                    "createdAt": "2024-09-28T19:12:50Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWQw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492650/job/30804088387"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWkw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492661/job/30804088467"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEVtA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088244"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEV3A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804088284"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWwQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492654/job/30804088513"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWVg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088406"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEVmw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804088219"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWfQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492654/job/30804088445"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEV6Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088297"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWJA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804088356"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEWug",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492568/job/30804088506"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBKW-Q",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11086492564/job/30804186873"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBEq8Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30804093681"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHLBExPA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16946&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHX1WMhA",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6086",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: order properties of `Finset.expect`",
        "updatedAt": "2024-09-28T20:14:15Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16946",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XLHl4zwAAAANVw3ch",
              "createdAt": "2024-09-19T12:59:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XLHl4zwAAAANVw3cs",
              "createdAt": "2024-09-19T12:59:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MuNBs",
              "createdAt": "2024-09-19T12:59:41Z",
              "body": "### PR summary [e9a939bbc7](https://github.com/leanprover-community/mathlib4/pull/16946/commits/e9a939bbc72d9390d9e2134a51018d4a3e21eb3b)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.BigOperators.Expect | 677 | 684 | +7 (+1.03%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>332 files</summary> `Mathlib.MeasureTheory.Integral.VitaliCaratheodory` `Mathlib.Analysis.CStarAlgebra.GelfandDuality` `Mathlib.Probability.Process.HittingTime` `Mathlib.Analysis.InnerProductSpace.Spectrum` `Mathlib.NumberTheory.Cyclotomic.Rat` `Mathlib.Probability.BorelCantelli` `Mathlib.NumberTheory.LSeries.HurwitzZetaValues` `Mathlib.Analysis.SpecialFunctions.Gamma.Basic` `Mathlib.Probability.Variance` `Mathlib.LinearAlgebra.Matrix.PosDef` `Mathlib.Analysis.SpecialFunctions.Integrals` `Mathlib.NumberTheory.Harmonic.ZetaAsymp` `Mathlib.Dynamics.Ergodic.AddCircle` `Mathlib.Analysis.Calculus.BumpFunction.Convolution` `Mathlib.Analysis.Fourier.PoissonSummation` `Mathlib.Analysis.InnerProductSpace.Rayleigh` `Mathlib.NumberTheory.Cyclotomic.Discriminant` `Mathlib.MeasureTheory.Measure.FiniteMeasure` `Mathlib.MeasureTheory.Integral.IntervalAverage` `Mathlib.Analysis.Distribution.FourierSchwartz` `Mathlib.Analysis.Normed.Lp.PiLp` `Mathlib.Analysis.Calculus.ParametricIntervalIntegral` `Mathlib.MeasureTheory.Measure.ProbabilityMeasure` `Mathlib.MeasureTheory.Function.UnifTight` `Mathlib.NumberTheory.GaussSum` `Mathlib.MeasureTheory.Measure.Lebesgue.Complex` `Mathlib.NumberTheory.EulerProduct.DirichletLSeries` `Mathlib.MeasureTheory.Integral.IntervalIntegral` `Mathlib.Analysis.Complex.AbsMax` `Mathlib.Analysis.InnerProductSpace.ProdL2` `Mathlib.Probability.Kernel.Disintegration.CDFToKernel` `Mathlib.Analysis.CStarAlgebra.Spectrum` `Mathlib.Geometry.Manifold.Instances.Real` `Mathlib.Geometry.Manifold.Complex` `Mathlib.NumberTheory.LSeries.DirichletContinuation` `Mathlib.MeasureTheory.Integral.CircleIntegral` `Mathlib.Probability.StrongLaw` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Unique` `Mathlib.Analysis.SpecialFunctions.Gaussian.GaussianIntegral` `Mathlib.Analysis.SpecialFunctions.Gamma.Beta` `Mathlib.MeasureTheory.Integral.TorusIntegral` `Mathlib.MeasureTheory.Function.L2Space` `Mathlib.MeasureTheory.Measure.LevyProkhorovMetric` `Mathlib.Algebra.Module.ZLattice.Covolume` `Mathlib.MeasureTheory.Function.ContinuousMapDense` `Mathlib.Analysis.Complex.TaylorSeries` `Mathlib.Analysis.Normed.Algebra.Spectrum` `Mathlib.Analysis.FunctionalSpaces.SobolevInequality` `Mathlib.NumberTheory.LSeries.ZMod` `Mathlib.Analysis.CStarAlgebra.Module.Constructions` `Mathlib.Probability.Distributions.Exponential` `Mathlib.Analysis.SpecialFunctions.Complex.Arctan` `Mathlib.Analysis.BoxIntegral.Partition.Measure` `Mathlib.Probability.Kernel.Composition` `Mathlib.Probability.Martingale.Upcrossing` `Mathlib.MeasureTheory.Function.SimpleFuncDenseLp` `Mathlib.Probability.Martingale.OptionalSampling` `Mathlib.MeasureTheory.Integral.DivergenceTheorem` `Mathlib.NumberTheory.NumberField.Discriminant` `Mathlib.NumberTheory.NumberField.EquivReindex` `Mathlib.MeasureTheory.Measure.LogLikelihoodRatio` `Mathlib.NumberTheory.SiegelsLemma` `Mathlib.Analysis.SpecialFunctions.ImproperIntegrals` `Mathlib.Analysis.Fourier.ZMod` `Mathlib.Analysis.SpecialFunctions.Complex.LogBounds` `Mathlib.MeasureTheory.Function.LpSpace` `Mathlib.Analysis.SpecialFunctions.Gamma.Deligne` `Mathlib.Analysis.Complex.PhragmenLindelof` `Mathlib.NumberTheory.ModularForms.JacobiTheta.Manifold` `Mathlib.Analysis.InnerProductSpace.NormPow` `Mathlib.Algebra.Module.ZLattice.Basic` `Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls` `Mathlib.MeasureTheory.Integral.FundThmCalculus` `Mathlib.NumberTheory.Cyclotomic.Three` `Mathlib.Probability.Kernel.Disintegration.Integral` `Mathlib.NumberTheory.LSeries.HurwitzZetaEven` `Mathlib.Analysis.CStarAlgebra.Matrix` `Mathlib.Geometry.Manifold.PoincareConjecture` `Mathlib.MeasureTheory.Measure.Portmanteau` `Mathlib.NumberTheory.LSeries.Deriv` `Mathlib.MeasureTheory.Measure.Haar.NormedSpace` `Mathlib.Analysis.Fourier.AddCircle` `Mathlib.Analysis.SpecialFunctions.Gaussian.PoissonSummation` `Mathlib.MeasureTheory.Measure.Lebesgue.EqHaar` `Mathlib.Analysis.Fourier.Inversion` `Mathlib.Analysis.Normed.Algebra.QuaternionExponential` `Mathlib.MeasureTheory.Function.LpSeminorm.TriangleInequality` `Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.Rpow` `Mathlib.Probability.Kernel.WithDensity` `Mathlib.Analysis.SpecialFunctions.NonIntegrable` `Mathlib.Geometry.Euclidean.Angle.Oriented.Basic` `Mathlib.MeasureTheory.Function.ConditionalExpectation.AEMeasurable` `Mathlib.Geometry.Euclidean.Sphere.Ptolemy` `Mathlib.Analysis.Normed.Algebra.MatrixExponential` `Mathlib.MeasureTheory.Group.AddCircle` `Mathlib.Probability.Independence.ZeroOne` `Mathlib.Analysis.SpecialFunctions.Complex.Analytic` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.Basic` `Mathlib.Probability.Kernel.Disintegration.StandardBorel` `Mathlib.MeasureTheory.Function.UniformIntegrable` `Mathlib.MeasureTheory.Measure.Hausdorff` `Mathlib.Probability.Distributions.Gaussian` `Mathlib.Probability.Kernel.CondDistrib` `Mathlib.MeasureTheory.Integral.Bochner` `Mathlib.MeasureTheory.Measure.Haar.Unique` `Mathlib.Geometry.Manifold.BumpFunction` `Mathlib.Probability.Martingale.Basic` `Mathlib.Analysis.InnerProductSpace.GramSchmidtOrtho` `Mathlib.Analysis.Normed.Lp.ProdLp` `Mathlib.MeasureTheory.Decomposition.RadonNikodym` `Mathlib.Probability.Kernel.RadonNikodym` `Mathlib.NumberTheory.Harmonic.GammaDeriv` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.FundamentalCone` `Mathlib.MeasureTheory.Decomposition.SignedLebesgue` `Mathlib.MeasureTheory.Measure.WithDensityFinite` `Mathlib.Analysis.Complex.CauchyIntegral` `Mathlib.Analysis.InnerProductSpace.JointEigenspace` `Mathlib.MeasureTheory.Group.GeometryOfNumbers` `Mathlib.Analysis.SpecialFunctions.PolarCoord` `Mathlib.MeasureTheory.Covering.LiminfLimsup` `Mathlib.Geometry.Euclidean.Angle.Sphere` `Mathlib.Analysis.InnerProductSpace.LinearPMap` `Mathlib.MeasureTheory.Order.UpperLower` `Mathlib.Analysis.Calculus.ParametricIntegral` `Mathlib.Probability.Martingale.Convergence` `Mathlib.Analysis.Normed.Lp.lpSpace` `Mathlib.MeasureTheory.Function.LpSpace.DomAct.Basic` `Mathlib.Probability.Kernel.IntegralCompProd` `Mathlib.NumberTheory.ModularForms.JacobiTheta.OneVariable` `Mathlib.Probability.Kernel.Disintegration.CondCDF` `Mathlib.MeasureTheory.Function.AEEqOfIntegral` `Mathlib.Probability.Kernel.Disintegration.Density` `Mathlib.Analysis.Convex.Integral` `Mathlib.MeasureTheory.Covering.BesicovitchVectorSpace` `Mathlib.MeasureTheory.Constructions.Prod.Integral` `Mathlib.NumberTheory.Cyclotomic.Embeddings` `Mathlib.MeasureTheory.Integral.Layercake` `Mathlib.Analysis.CStarAlgebra.Module.Defs` `Mathlib.Analysis.Complex.Schwarz` `Mathlib.Analysis.Fourier.FourierTransformDeriv` `Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace` `Mathlib.NumberTheory.LSeries.RiemannZeta` `Mathlib.MeasureTheory.Covering.OneDim` `Mathlib.Data.Real.Pi.Leibniz` `Mathlib.NumberTheory.FLT.Three` `Mathlib.Geometry.Euclidean.Inversion.Calculus` `Mathlib.Analysis.InnerProductSpace.Positive` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody` `Mathlib.NumberTheory.NumberField.Units.Basic` `Mathlib.Probability.Kernel.Invariance` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral` `Mathlib.Probability.Distributions.Uniform` `Mathlib.MeasureTheory.Covering.DensityTheorem` `Mathlib.MeasureTheory.Constructions.UnitInterval` `Mathlib.NumberTheory.Liouville.Measure` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unique` `Mathlib.NumberTheory.DirichletCharacter.GaussSum` `Mathlib.MeasureTheory.Measure.FiniteMeasureProd` `Mathlib.Probability.Kernel.MeasurableIntegral` `Mathlib.NumberTheory.ModularForms.JacobiTheta.Bounds` `Mathlib.Analysis.MeanInequalities` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.MDifferentiable` `Mathlib.NumberTheory.LSeries.Dirichlet` `Mathlib.MeasureTheory.Integral.Asymptotics` `Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.ExpLog` `Mathlib.Tactic.NormNum.LegendreSymbol` `Mathlib.NumberTheory.ModularForms.JacobiTheta.TwoVariable` `Mathlib.Analysis.Fourier.RiemannLebesgueLemma` `Mathlib.Analysis.BoxIntegral.Basic` `Mathlib.Analysis.Quaternion` `Mathlib.Analysis.BoxIntegral.Integrability` `Mathlib.Analysis.InnerProductSpace.Calculus` `Mathlib.MeasureTheory.Function.StronglyMeasurable.Lp` `Mathlib.Combinatorics.Additive.AP.Three.Behrend` `Mathlib.Topology.MetricSpace.GromovHausdorff` `Mathlib.MeasureTheory.Integral.IntegralEqImproper` `Mathlib.Analysis.Complex.Polynomial.Basic` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Basic` `Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving` `Mathlib.MeasureTheory.Function.L1Space` `Mathlib.Probability.Kernel.Disintegration.Basic` `Mathlib.Analysis.Complex.RemovableSingularity` `Mathlib.MeasureTheory.Measure.Tilted` `Mathlib.Analysis.Complex.Liouville` `Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum` `Mathlib.NumberTheory.LSeries.MellinEqDirichlet` `Mathlib.Geometry.Euclidean.Angle.Oriented.RightAngle` `Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol` `Mathlib.MeasureTheory.Function.Jacobian` `Mathlib.Analysis.Complex.LocallyUniformLimit` `Mathlib.Analysis.InnerProductSpace.EuclideanDist` `Mathlib.MeasureTheory.Function.LpOrder` `Mathlib.Analysis.Convex.Measure` `Mathlib.Probability.Moments` `Mathlib.NumberTheory.LegendreSymbol.AddCharacter` `Mathlib.NumberTheory.Cyclotomic.PID` `Mathlib.NumberTheory.JacobiSum.Basic` `Mathlib.Analysis.Normed.Lp.LpEquiv` `Mathlib.Topology.MetricSpace.HausdorffDimension` `Mathlib.Analysis.Distribution.AEEqOfIntegralContDiff` `Mathlib.Analysis.InnerProductSpace.PiL2` `Mathlib.MeasureTheory.Group.FundamentalDomain` `Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity` `Mathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup` `Mathlib.MeasureTheory.Decomposition.Lebesgue` `Mathlib.Geometry.Euclidean.Angle.Oriented.Rotation` `Mathlib.MeasureTheory.Function.LocallyIntegrable` `Mathlib.Analysis.InnerProductSpace.StarOrder` `Mathlib.Analysis.NormedSpace.DualNumber` `Mathlib.Probability.Process.Stopping` `Mathlib.MeasureTheory.Integral.PeakFunction` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL1` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL2` `Mathlib.NumberTheory.NumberField.Units.DirichletTheorem` `Mathlib.MeasureTheory.Integral.MeanInequalities` `Mathlib.MeasureTheory.Integral.BoundedContinuousFunction` `Mathlib.Analysis.Normed.Algebra.Basic` `Mathlib.MeasureTheory.Integral.ExpDecay` `Mathlib.Dynamics.Ergodic.Action.OfMinimal` `Mathlib.NumberTheory.NumberField.Units.Regulator` `Mathlib.Analysis.SpecialFunctions.Stirling` `Mathlib.Analysis.ConstantSpeed` `Mathlib.LinearAlgebra.Matrix.Hermitian` `Mathlib.Analysis.Calculus.Monotone` `Mathlib.RingTheory.Polynomial.Selmer` `Mathlib.Geometry.Manifold.IntegralCurve` `Mathlib.Analysis.SumIntegralComparisons` `Mathlib.MeasureTheory.Constructions.HaarToSphere` `Mathlib.Analysis.SpecialFunctions.JapaneseBracket` `Mathlib.MeasureTheory.Integral.CircleTransform` `Mathlib.MeasureTheory.Integral.DominatedConvergence` `Mathlib.Probability.Kernel.MeasureCompProd` `Mathlib.NumberTheory.ZetaValues` `Mathlib.MeasureTheory.Function.ConvergenceInMeasure` `Mathlib.Analysis.Fourier.FourierTransform` `Mathlib.LinearAlgebra.Matrix.LDL` `Mathlib.Probability.Independence.Integrable` `Mathlib.Analysis.Matrix` `Mathlib.Probability.IdentDistrib` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances` `Mathlib.Analysis.Convolution` `Mathlib.LinearAlgebra.Matrix.SchurComplement` `Mathlib.MeasureTheory.Function.LpSeminorm.CompareExp` `Mathlib.Topology.MetricSpace.Kuratowski` `Mathlib.Analysis.MellinInversion` `Mathlib.Analysis.CStarAlgebra.Hom` `Mathlib.Analysis.Complex.Polynomial.UnitTrinomial` `Mathlib.Geometry.Manifold.PartitionOfUnity` `Mathlib.MeasureTheory.Measure.SeparableMeasure` `Mathlib.MeasureTheory.Covering.Differentiation` `Mathlib.NumberTheory.LSeries.HurwitzZetaOdd` `Mathlib.Analysis.Complex.Hadamard` `Mathlib.Analysis.Calculus.LineDeriv.IntegrationByParts` `Mathlib.Combinatorics.SimpleGraph.LapMatrix` `Mathlib.Analysis.BoundedVariation` `Mathlib.Analysis.InnerProductSpace.Adjoint` `Mathlib.NumberTheory.WellApproximable` `Mathlib.MeasureTheory.Measure.Lebesgue.Basic` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Order` `Mathlib.Analysis.Convex.Cone.Proper` `Mathlib.Probability.Process.Adapted` `Mathlib.Probability.Distributions.Pareto` `Mathlib.MeasureTheory.Measure.Lebesgue.Integral` `Mathlib.Analysis.Calculus.Rademacher` `Mathlib.Analysis.Calculus.BumpFunction.InnerProduct` `Mathlib.LinearAlgebra.Matrix.Spectrum` `Mathlib.MeasureTheory.Integral.Pi` `Mathlib.NumberTheory.NumberField.House` `Mathlib.Analysis.InnerProductSpace.l2Space` `Mathlib.NumberTheory.NumberField.Embeddings` `Mathlib.MeasureTheory.Function.Intersectivity` `Mathlib.Probability.Process.Filtration` `Mathlib.MeasureTheory.Integral.Periodic` `Mathlib.NumberTheory.Harmonic.Bounds` `Mathlib.Analysis.MellinTransform` `Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar` `Mathlib.MeasureTheory.Integral.Gamma` `Mathlib.Analysis.VonNeumannAlgebra.Basic` `Mathlib.MeasureTheory.Measure.DiracProba` `Mathlib.MeasureTheory.Integral.IntegrableOn` `Mathlib.Analysis.SpecialFunctions.Trigonometric.EulerSineProd` `Mathlib.MeasureTheory.Integral.SetToL1` `Mathlib.Probability.Kernel.Condexp` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Indicator` `Mathlib.Geometry.Euclidean.Triangle` `Mathlib.MeasureTheory.Covering.Besicovitch` `Mathlib.Analysis.Calculus.BumpFunction.FiniteDimension` `Mathlib.Probability.Distributions.Gamma` `Mathlib.Probability.Martingale.OptionalStopping` `Mathlib.Probability.Martingale.BorelCantelli` `Mathlib.Probability.Density` `Mathlib.Analysis.Complex.OpenMapping` `Mathlib.Probability.ProbabilityMassFunction.Integrals` `Mathlib.Analysis.Calculus.BumpFunction.Normed` `Mathlib.Analysis.ODE.PicardLindelof` `Mathlib.NumberTheory.NumberField.ClassNumber` `Mathlib.Probability.ConditionalExpectation` `Mathlib.MeasureTheory.Integral.SetIntegral` `Mathlib.Analysis.InnerProductSpace.Orientation` `Mathlib.Geometry.Euclidean.Angle.Oriented.Affine` `Mathlib.NumberTheory.LSeries.HurwitzZeta` `Mathlib.Tactic` `Mathlib.Analysis.SpecialFunctions.Gaussian.FourierTransform` `Mathlib.MeasureTheory.Function.LpSpace.DomAct.Continuous` `Mathlib.MeasureTheory.Group.Integral` `Mathlib.MeasureTheory.Measure.Haar.Disintegration` `Mathlib.Analysis.Distribution.SchwartzSpace` `Mathlib.Probability.Integration` `Mathlib.Analysis.BoxIntegral.DivergenceTheorem` `Mathlib.MeasureTheory.Measure.WithDensityVectorMeasure` `Mathlib.Analysis.SpecialFunctions.Pow.Integral` `Mathlib.Geometry.Manifold.WhitneyEmbedding` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic` `Mathlib.Probability.Kernel.Integral` `Mathlib.MeasureTheory.Integral.Average` `Mathlib.Probability.Kernel.Disintegration.Unique` `Mathlib.LinearAlgebra.Matrix.HermitianFunctionalCalculus` `Mathlib.Probability.Independence.Conditional` `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Basic` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Real` `Mathlib.Data.Real.Pi.Wallis` `Mathlib.Analysis.Normed.Algebra.TrivSqZeroExt` `Mathlib.Probability.Process.PartitionFiltration` `Mathlib.Probability.Notation` `Mathlib.NumberTheory.LSeries.AbstractFuncEq` `Mathlib.Probability.CDF` `Mathlib.MeasureTheory.Measure.Haar.OfBasis` `Mathlib.Analysis.InnerProductSpace.TwoDim` `Mathlib.Probability.Martingale.Centering` `Mathlib.MeasureTheory.Measure.Haar.Quotient` `Mathlib.Geometry.Manifold.Instances.Sphere` `Mathlib.Analysis.Normed.Algebra.UnitizationL1`</details>|1|\n| `Mathlib.Algebra.BigOperators.Expect`|7|\n| `Mathlib.Algebra.Order.BigOperators.Expect`|713|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.GCongr.expect_le_expect`\n`+ abs_expect_le_expect_abs`\n`+ compact_inner_le_weight_mul_Lp_of_nonneg`\n`+ evalFinsetExpect`\n`+ exists_lt_of_expect_lt`\n`+ exists_lt_of_lt_expect`\n`+ expect_apply`\n`+ expect_le`\n`+ expect_le_expect`\n`+ expect_mul_expect`\n`+ expect_mul_sq_le_sq_mul_sq`\n`+ expect_nonneg`\n`+ expect_pos`\n`+ le_expect`\n`+ le_expect_nonempty_of_subadditive`\n`+ le_expect_nonempty_of_subadditive_on_pred`\n`+ le_expect_of_subadditive`\n`+ le_expect_of_subadditive_on_pred`\n`++ expect_eq_zero_iff_of_nonneg`\n`++ expect_eq_zero_iff_of_nonpos`\n`++ expect_ite_mem`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6KBYCT",
              "createdAt": "2024-09-19T13:49:08Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XLHl4zwAAAANV0XDZ",
              "createdAt": "2024-09-19T13:53:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6XLHl4zwAAAANW3Dum",
              "createdAt": "2024-09-20T15:38:01Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6XLHl4zwAAAANW6I7v",
              "createdAt": "2024-09-20T16:50:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6KOK0q",
              "createdAt": "2024-09-20T18:13:29Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6KPdbS",
              "createdAt": "2024-09-20T20:43:56Z",
              "body": "Looks pretty decent overall!",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6LMxV8",
              "createdAt": "2024-09-28T17:23:46Z",
              "body": "bors d+",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N6L7B",
              "createdAt": "2024-09-28T17:24:16Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6LMxXv",
              "createdAt": "2024-09-28T17:24:43Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6XLHl4zwAAAANczRkg",
              "createdAt": "2024-09-28T17:49:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6XLHl4zwAAAANcz6MC",
              "createdAt": "2024-09-28T19:09:30Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6LM2S_",
              "createdAt": "2024-09-28T19:12:43Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6XLHl4zwAAAANcz-rw",
              "createdAt": "2024-09-28T19:20:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N6UQE",
              "createdAt": "2024-09-28T19:34:43Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N6Vzs",
              "createdAt": "2024-09-28T20:02:30Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11086525732/job/30804160557)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11086525732/job/30804160639)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6XLHl4zwAAAANc0OsV",
              "createdAt": "2024-09-28T20:02:31Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6XLHl4zwAAAANc0OtW",
              "createdAt": "2024-09-28T20:02:33Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
