{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 187,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I suspect this improves performance\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #20317\r\n- [x] depends on: #20318\r\n- [x] depends on: #21274\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Vn8NM",
              "body": "### PR summary [13ecad712e](https://github.com/leanprover-community/mathlib4/pull/19668/commits/13ecad712e3b4f4e979d5fa2a1ee147997d60513)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.WithBot | 175 | 178 | +3 (+1.71%) |\n| Mathlib.Order.Hom.Basic | 201 | 204 | +3 (+1.49%) |\n| Mathlib.Algebra.Order.Monoid.Unbundled.WithTop | 211 | 214 | +3 (+1.42%) |\n| Mathlib.Order.Interval.Set.WithBotTop | 249 | 251 | +2 (+0.80%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>169 files</summary> `Mathlib.Algebra.Field.ULift` `Mathlib.Algebra.Group.Action.Pi` `Mathlib.Algebra.Group.Center` `Mathlib.Algebra.Group.Pi.Lemmas` `Mathlib.Algebra.Group.Pointwise.Set.Basic` `Mathlib.Algebra.Group.Submonoid.Basic` `Mathlib.Algebra.Group.Submonoid.Defs` `Mathlib.Algebra.Group.Submonoid.DistribMulAction` `Mathlib.Algebra.Group.Submonoid.MulAction` `Mathlib.Algebra.Group.Submonoid.MulOpposite` `Mathlib.Algebra.Group.Submonoid.Operations` `Mathlib.Algebra.Group.Subsemigroup.Basic` `Mathlib.Algebra.Group.Subsemigroup.Defs` `Mathlib.Algebra.Group.Subsemigroup.Membership` `Mathlib.Algebra.Group.Subsemigroup.Operations` `Mathlib.Algebra.GroupWithZero.Center` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic` `Mathlib.Algebra.NoZeroSMulDivisors.Pi` `Mathlib.Algebra.Order.Field.Pointwise` `Mathlib.Algebra.Order.Group.Action` `Mathlib.Algebra.Order.Group.Bounds` `Mathlib.Algebra.Order.Group.CompleteLattice` `Mathlib.Algebra.Order.Group.Cone` `Mathlib.Algebra.Order.Group.Pointwise.Bounds` `Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice` `Mathlib.Algebra.Order.GroupWithZero.Bounds` `Mathlib.Algebra.Order.GroupWithZero.Submonoid` `Mathlib.Algebra.Order.Interval.Set.Group` `Mathlib.Algebra.Order.Interval.Set.Instances` `Mathlib.Algebra.Order.Interval.Set.Monoid` `Mathlib.Algebra.Order.Kleene` `Mathlib.Algebra.Order.Monoid.Submonoid` `Mathlib.Algebra.Order.Pi` `Mathlib.Algebra.Order.Quantale` `Mathlib.Algebra.Order.Ring.Prod` `Mathlib.Algebra.Ring.Centralizer` `Mathlib.Algebra.Ring.CompTypeclasses` `Mathlib.Algebra.Ring.Equiv` `Mathlib.Algebra.Ring.Pi` `Mathlib.Algebra.Ring.Pointwise.Set` `Mathlib.Algebra.Ring.Prod` `Mathlib.Algebra.Ring.Submonoid` `Mathlib.Algebra.Ring.Subsemiring.Defs` `Mathlib.Algebra.Ring.Subsemiring.Order` `Mathlib.Algebra.Ring.ULift` `Mathlib.Algebra.Tropical.Lattice` `Mathlib.Combinatorics.Quiver.Arborescence` `Mathlib.Data.Bool.Set` `Mathlib.Data.Bundle` `Mathlib.Data.Countable.Small` `Mathlib.Data.FP.Basic` `Mathlib.Data.Nat.Order.Lemmas` `Mathlib.Data.Nat.Pairing` `Mathlib.Data.Nat.Set` `Mathlib.Data.PEquiv` `Mathlib.Data.PFun` `Mathlib.Data.Part` `Mathlib.Data.Rel` `Mathlib.Data.Semiquot` `Mathlib.Data.Set.Accumulate` `Mathlib.Data.Set.Basic` `Mathlib.Data.Set.BoolIndicator` `Mathlib.Data.Set.Function` `Mathlib.Data.Set.Functor` `Mathlib.Data.Set.Image` `Mathlib.Data.Set.Insert` `Mathlib.Data.Set.Lattice` `Mathlib.Data.Set.List` `Mathlib.Data.Set.Monotone` `Mathlib.Data.Set.NAry` `Mathlib.Data.Set.Pairwise.Basic` `Mathlib.Data.Set.Pairwise.Lattice` `Mathlib.Data.Set.Prod` `Mathlib.Data.Set.Sigma` `Mathlib.Data.Set.Subset` `Mathlib.Data.Set.Subsingleton` `Mathlib.Data.Set.SymmDiff` `Mathlib.Data.Set.UnionLift` `Mathlib.Data.SetLike.Basic` `Mathlib.Data.Setoid.Basic` `Mathlib.GroupTheory.Congruence.Basic` `Mathlib.GroupTheory.Congruence.Defs` `Mathlib.GroupTheory.Congruence.Hom` `Mathlib.GroupTheory.Congruence.Opposite` `Mathlib.GroupTheory.GroupAction.DomAct.ActionHom` `Mathlib.GroupTheory.GroupAction.DomAct.Basic` `Mathlib.GroupTheory.GroupAction.Pointwise` `Mathlib.GroupTheory.OreLocalization.OreSet` `Mathlib.GroupTheory.Submonoid.Center` `Mathlib.GroupTheory.Submonoid.Centralizer` `Mathlib.GroupTheory.Subsemigroup.Center` `Mathlib.GroupTheory.Subsemigroup.Centralizer` `Mathlib.Logic.Embedding.Set` `Mathlib.Logic.Equiv.Embedding` `Mathlib.Logic.Equiv.Nat` `Mathlib.Logic.Equiv.PartialEquiv` `Mathlib.Logic.Equiv.Set` `Mathlib.Logic.Function.FiberPartition` `Mathlib.Logic.Small.Basic` `Mathlib.Logic.Small.Set` `Mathlib.Order.Antichain` `Mathlib.Order.Bounded` `Mathlib.Order.Bounds.Basic` `Mathlib.Order.Bounds.Image` `Mathlib.Order.Bounds.Lattice` `Mathlib.Order.Bounds.OrderIso` `Mathlib.Order.Chain` `Mathlib.Order.Circular` `Mathlib.Order.Closure` `Mathlib.Order.Cofinal` `Mathlib.Order.CompleteBooleanAlgebra` `Mathlib.Order.CompleteLattice` `Mathlib.Order.Concept` `Mathlib.Order.ConditionallyCompleteLattice.Basic` `Mathlib.Order.ConditionallyCompleteLattice.Defs` `Mathlib.Order.ConditionallyCompleteLattice.Group` `Mathlib.Order.ConditionallyCompleteLattice.Indexed` `Mathlib.Order.Copy` `Mathlib.Order.Directed` `Mathlib.Order.Estimator` `Mathlib.Order.Filter.AtTopBot.CompleteLattice` `Mathlib.Order.Filter.AtTopBot.Defs` `Mathlib.Order.Filter.AtTopBot.Disjoint` `Mathlib.Order.Filter.AtTopBot.Map` `Mathlib.Order.Filter.AtTopBot.Monoid` `Mathlib.Order.Filter.AtTopBot.Tendsto` `Mathlib.Order.Filter.Basic` `Mathlib.Order.Filter.Curry` `Mathlib.Order.Filter.Defs` `Mathlib.Order.Filter.Ker` `Mathlib.Order.Filter.Map` `Mathlib.Order.Filter.NAry` `Mathlib.Order.Filter.Partial` `Mathlib.Order.Filter.Prod` `Mathlib.Order.Filter.Tendsto` `Mathlib.Order.GaloisConnection.Basic` `Mathlib.Order.Heyting.Regular` `Mathlib.Order.Hom.CompleteLattice` `Mathlib.Order.Hom.Order` `Mathlib.Order.Hom.Set` `Mathlib.Order.Interval.Basic` `Mathlib.Order.Interval.Set.Basic` `Mathlib.Order.Interval.Set.Disjoint` `Mathlib.Order.Interval.Set.Image` `Mathlib.Order.Interval.Set.OrderIso` `Mathlib.Order.Interval.Set.SurjOn` `Mathlib.Order.Interval.Set.WithBotTop` `Mathlib.Order.LatticeIntervals` `Mathlib.Order.Monotone.Extension` `Mathlib.Order.Monotone.Odd` `Mathlib.Order.Monotone.Union` `Mathlib.Order.Nucleus` `Mathlib.Order.OrdContinuous` `Mathlib.Order.Rel.GaloisConnection` `Mathlib.Order.RelIso.Set` `Mathlib.Order.ScottContinuity` `Mathlib.Order.SemiconjSup` `Mathlib.Order.WellFounded` `Mathlib.RingTheory.Congruence.Basic` `Mathlib.RingTheory.Congruence.Defs` `Mathlib.RingTheory.Congruence.Opposite` `Mathlib.RingTheory.NonUnitalSubsemiring.Defs` `Mathlib.RingTheory.OreLocalization.OreSet` `Mathlib.RingTheory.RingInvo` `Mathlib.Tactic.DeriveCountable` `Mathlib.Tactic.Monotonicity.Lemmas` `Mathlib.Tactic.Monotonicity` `Mathlib.Tactic.Peel` `Mathlib.Tactic.TautoSet`</details>|2|\n|<details><summary>37 files</summary> `Mathlib.Algebra.Order.AddGroupWithTop` `Mathlib.Algebra.Order.Field.InjSurj` `Mathlib.Algebra.Order.Group.Abs` `Mathlib.Algebra.Order.Group.InjSurj` `Mathlib.Algebra.Order.Group.Lattice` `Mathlib.Algebra.Order.Group.MinMax` `Mathlib.Algebra.Order.Group.OrderIso` `Mathlib.Algebra.Order.Group.PosPart` `Mathlib.Algebra.Order.Group.Unbundled.Abs` `Mathlib.Algebra.Order.Group.Unbundled.Int` `Mathlib.Algebra.Order.Group.Units` `Mathlib.Algebra.Order.GroupWithZero.Unbundled.Lemmas` `Mathlib.Algebra.Order.Monoid.Basic` `Mathlib.Algebra.Order.Monoid.Unbundled.WithTop` `Mathlib.Algebra.Order.Monoid.Units` `Mathlib.Algebra.Order.Monoid.WithTop` `Mathlib.Algebra.Order.PUnit` `Mathlib.Algebra.Order.Ring.Idempotent` `Mathlib.Algebra.Order.Ring.InjSurj` `Mathlib.Algebra.Order.Sub.Unbundled.Hom` `Mathlib.Algebra.Order.Sub.WithTop` `Mathlib.Algebra.Tropical.Basic` `Mathlib.Data.Nat.Cast.WithTop` `Mathlib.Data.Sum.Lattice` `Mathlib.Data.Sum.Order` `Mathlib.Order.Antisymmetrization` `Mathlib.Order.BooleanAlgebra` `Mathlib.Order.Booleanisation` `Mathlib.Order.GaloisConnection.Defs` `Mathlib.Order.Heyting.Basic` `Mathlib.Order.Heyting.Hom` `Mathlib.Order.Hom.Basic` `Mathlib.Order.Hom.Bounded` `Mathlib.Order.Hom.Lattice` `Mathlib.Order.SymmDiff` `Mathlib.Order.WithBot` `Mathlib.Tactic.ApplyFun`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ add_left_inj`\n`+ add_right_inj`\n`+ instance (priority := 10) instLE : LE (WithBot α) where le := WithBot.LE`\n`+ instance (priority := 10) instLE : LE (WithTop α) where le := WithTop.LE`\n`+ instance (priority := 10) instLT : LT (WithBot α) where lt := WithBot.LT`\n`+ instance (priority := 10) instLT : LT (WithTop α) where lt := WithTop.LT`\n`+ not_coe_le_bot`\n`+ orderBot`\n`++ LE`\n`++ LT`\n`+-+- lt_iff_exists_coe`\n`- add_left_cancel_iff`\n`- add_right_cancel_iff`\n`- instance (priority := 10) le : LE (WithBot α)`\n`- instance (priority := 10) le : LE (WithTop α)`\n`- instance (priority := 10) lt : LT (WithBot α)`\n`- instance (priority := 10) lt : LT (WithTop α)`\n`-+-+ addLeftMono`\n`-+-+ addLeftReflectLT`\n`-+-+ addRightMono`\n`-+-+ addRightReflectLT`\n`-+-+ le_def`\n`-+-+ lt_def`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-12-01T22:16:56Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6eKuEm",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#20317~~\n* ~~leanprover-community/mathlib4#20318~~\n* ~~leanprover-community/mathlib4#21274~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-02-12T12:44:41Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "13ecad712e3b4f4e979d5fa2a1ee147997d60513",
                "additions": 187,
                "deletions": 182,
                "committedDate": "2025-02-12T13:41:35Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjsHA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751059/job/37097106460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpZAmoQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299206388/job/37137426081"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpZCG7w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299215818/job/37137450735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpe-grA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13301516609/job/37143683244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpgomhg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302164330/job/37145421446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIphXlUg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302444097/job/37146191186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjyeA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751970/job/37097108088"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpZAmwQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299206395/job/37137426113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpZCG4w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299215819/job/37137450723"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpe-gow",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13301516627/job/37143683235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpgonJA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302164326/job/37145421604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIphXlfA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302444102/job/37146191228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjxbw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751949/job/37097107823"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpZAmxQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299206396/job/37137426117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpZCGcw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299215821/job/37137450611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpe-hQg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13301516611/job/37143683394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIpgomcA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302164337/job/37145421424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIphXlQQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302444105/job/37146191169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjpgQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751063/job/37097105793"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjxRQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751947/job/37097107781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjraQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751063/job/37097106281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjpWA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751059/job/37097105752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjyzQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751947/job/37097108173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoyjt5A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751059/job/37097106916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoythkA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751063/job/37097267600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoylIaQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37097130089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoylpGg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19668&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-01T22:16:04Z",
        "deletions": 182,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/WithTop.lean",
              "additions": 88,
              "deletions": 138
            },
            {
              "path": "Mathlib/Order/Hom/Basic.lean",
              "additions": 16,
              "deletions": 9
            },
            {
              "path": "Mathlib/Order/Interval/Set/WithBotTop.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/Order/WithBot.lean",
              "additions": 80,
              "deletions": 31
            }
          ]
        },
        "headRefName": "with_bot_inductive_le",
        "headRefOid": "13ecad712e3b4f4e979d5fa2a1ee147997d60513",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6DrTL3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6bzuhE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2025-02-13T06:58:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TbAnQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-02T17:02:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19668,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6TbAMX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-02T17:01:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TbAnQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-02T17:02:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TcHtz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-12-02T18:54:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6byYQ-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2025-02-13T02:34:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6byYc5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2025-02-13T02:35:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6bzaci",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-13T06:07:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6bzuhE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2025-02-13T06:58:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6bz2zH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-13T07:18:48Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vPIjR",
                    "body": "How does this compare to\r\n```lean\r\ndef le : WithBot α → WithBot α → Prop\r\n | (a : WithBot α), (b: WithBot α) => a ≤ b\r\n | ⊥, _ => True\r\n```",
                    "createdAt": "2024-12-02T17:01:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vP20x",
                    "body": "This suggestion is invalid since you aren't covering the `(a : alpha), \\bot` case (at least once you fix the typo in the first branch)\n\nOnce you've covered it, the following won't work:\n```\nexample : \\forall x y : WithBot alpha, x <= y -> True\n  | \\bot, \\bot, _ => sorry\n  | \\bot, (b : alpha), _ => sorry\n  | (a : alpha), (b : alpha) => sorry\n```",
                    "createdAt": "2024-12-02T18:54:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vPIzu",
                    "body": "Also, shouldn't this be `LE` or `Le`?",
                    "createdAt": "2024-12-02T17:02:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c50ctzS",
                    "body": "An alternative approach I tried (but failed to fix all failures) is to define `le` and `lt` using `match`, so that `WithBot.some x ≤ WithBot.some y` is defeq `x ≤ y`.",
                    "createdAt": "2025-02-13T02:34:59Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50dcXG",
                    "body": "Personally, my goal is for the two relations not to be foralls. It's really annoying that `intro` sees through `<=` on `ENNReal` for example. So your solution would work too",
                    "createdAt": "2025-02-13T06:07:10Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50doUL",
                    "body": "Can we postpone this PR until Feb 17? If I don't suggest a working alternative (a PR that builds) until then, then we go forward with merging this one.",
                    "createdAt": "2025-02-13T06:58:42Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50dtV_",
                    "body": "Yes, no problem. I don't have time to work on this PR in the foreseeable future anyway.",
                    "createdAt": "2025-02-13T07:18:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c50ct8W",
                    "body": "You can use `@[mk_iff le_iff]` as a workaround.",
                    "createdAt": "2025-02-13T02:35:51Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjsHA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751059/job/37097106460"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpZAmoQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299206388/job/37137426081"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpZCG7w",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299215818/job/37137450735"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpe-grA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13301516609/job/37143683244"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpgomhg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302164330/job/37145421446"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIphXlUg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302444097/job/37146191186"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjyeA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751970/job/37097108088"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpZAmwQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299206395/job/37137426113"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpZCG4w",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299215819/job/37137450723"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpe-gow",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13301516627/job/37143683235"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpgonJA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302164326/job/37145421604"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIphXlfA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302444102/job/37146191228"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjxbw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751949/job/37097107823"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpZAmxQ",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299206396/job/37137426117"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpZCGcw",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13299215821/job/37137450611"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpe-hQg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13301516611/job/37143683394"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpgomcA",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302164337/job/37145421424"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIphXlQQ",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13302444105/job/37146191169"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjpgQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751063/job/37097105793"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjxRQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751947/job/37097107781"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjraQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751063/job/37097106281"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjpWA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751059/job/37097105752"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjyzQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751947/job/37097108173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoyjt5A",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751059/job/37097106916"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoythkA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286751063/job/37097267600"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoylIaQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37097130089"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoylpGg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19668&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor: define `≤`/`<` on `WithBot`/`WithTop` by induction",
        "updatedAt": "2025-02-13T07:18:49Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19668",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vn8NM",
              "createdAt": "2024-12-01T22:16:56Z",
              "body": "### PR summary [13ecad712e](https://github.com/leanprover-community/mathlib4/pull/19668/commits/13ecad712e3b4f4e979d5fa2a1ee147997d60513)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.WithBot | 175 | 178 | +3 (+1.71%) |\n| Mathlib.Order.Hom.Basic | 201 | 204 | +3 (+1.49%) |\n| Mathlib.Algebra.Order.Monoid.Unbundled.WithTop | 211 | 214 | +3 (+1.42%) |\n| Mathlib.Order.Interval.Set.WithBotTop | 249 | 251 | +2 (+0.80%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>169 files</summary> `Mathlib.Algebra.Field.ULift` `Mathlib.Algebra.Group.Action.Pi` `Mathlib.Algebra.Group.Center` `Mathlib.Algebra.Group.Pi.Lemmas` `Mathlib.Algebra.Group.Pointwise.Set.Basic` `Mathlib.Algebra.Group.Submonoid.Basic` `Mathlib.Algebra.Group.Submonoid.Defs` `Mathlib.Algebra.Group.Submonoid.DistribMulAction` `Mathlib.Algebra.Group.Submonoid.MulAction` `Mathlib.Algebra.Group.Submonoid.MulOpposite` `Mathlib.Algebra.Group.Submonoid.Operations` `Mathlib.Algebra.Group.Subsemigroup.Basic` `Mathlib.Algebra.Group.Subsemigroup.Defs` `Mathlib.Algebra.Group.Subsemigroup.Membership` `Mathlib.Algebra.Group.Subsemigroup.Operations` `Mathlib.Algebra.GroupWithZero.Center` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic` `Mathlib.Algebra.NoZeroSMulDivisors.Pi` `Mathlib.Algebra.Order.Field.Pointwise` `Mathlib.Algebra.Order.Group.Action` `Mathlib.Algebra.Order.Group.Bounds` `Mathlib.Algebra.Order.Group.CompleteLattice` `Mathlib.Algebra.Order.Group.Cone` `Mathlib.Algebra.Order.Group.Pointwise.Bounds` `Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice` `Mathlib.Algebra.Order.GroupWithZero.Bounds` `Mathlib.Algebra.Order.GroupWithZero.Submonoid` `Mathlib.Algebra.Order.Interval.Set.Group` `Mathlib.Algebra.Order.Interval.Set.Instances` `Mathlib.Algebra.Order.Interval.Set.Monoid` `Mathlib.Algebra.Order.Kleene` `Mathlib.Algebra.Order.Monoid.Submonoid` `Mathlib.Algebra.Order.Pi` `Mathlib.Algebra.Order.Quantale` `Mathlib.Algebra.Order.Ring.Prod` `Mathlib.Algebra.Ring.Centralizer` `Mathlib.Algebra.Ring.CompTypeclasses` `Mathlib.Algebra.Ring.Equiv` `Mathlib.Algebra.Ring.Pi` `Mathlib.Algebra.Ring.Pointwise.Set` `Mathlib.Algebra.Ring.Prod` `Mathlib.Algebra.Ring.Submonoid` `Mathlib.Algebra.Ring.Subsemiring.Defs` `Mathlib.Algebra.Ring.Subsemiring.Order` `Mathlib.Algebra.Ring.ULift` `Mathlib.Algebra.Tropical.Lattice` `Mathlib.Combinatorics.Quiver.Arborescence` `Mathlib.Data.Bool.Set` `Mathlib.Data.Bundle` `Mathlib.Data.Countable.Small` `Mathlib.Data.FP.Basic` `Mathlib.Data.Nat.Order.Lemmas` `Mathlib.Data.Nat.Pairing` `Mathlib.Data.Nat.Set` `Mathlib.Data.PEquiv` `Mathlib.Data.PFun` `Mathlib.Data.Part` `Mathlib.Data.Rel` `Mathlib.Data.Semiquot` `Mathlib.Data.Set.Accumulate` `Mathlib.Data.Set.Basic` `Mathlib.Data.Set.BoolIndicator` `Mathlib.Data.Set.Function` `Mathlib.Data.Set.Functor` `Mathlib.Data.Set.Image` `Mathlib.Data.Set.Insert` `Mathlib.Data.Set.Lattice` `Mathlib.Data.Set.List` `Mathlib.Data.Set.Monotone` `Mathlib.Data.Set.NAry` `Mathlib.Data.Set.Pairwise.Basic` `Mathlib.Data.Set.Pairwise.Lattice` `Mathlib.Data.Set.Prod` `Mathlib.Data.Set.Sigma` `Mathlib.Data.Set.Subset` `Mathlib.Data.Set.Subsingleton` `Mathlib.Data.Set.SymmDiff` `Mathlib.Data.Set.UnionLift` `Mathlib.Data.SetLike.Basic` `Mathlib.Data.Setoid.Basic` `Mathlib.GroupTheory.Congruence.Basic` `Mathlib.GroupTheory.Congruence.Defs` `Mathlib.GroupTheory.Congruence.Hom` `Mathlib.GroupTheory.Congruence.Opposite` `Mathlib.GroupTheory.GroupAction.DomAct.ActionHom` `Mathlib.GroupTheory.GroupAction.DomAct.Basic` `Mathlib.GroupTheory.GroupAction.Pointwise` `Mathlib.GroupTheory.OreLocalization.OreSet` `Mathlib.GroupTheory.Submonoid.Center` `Mathlib.GroupTheory.Submonoid.Centralizer` `Mathlib.GroupTheory.Subsemigroup.Center` `Mathlib.GroupTheory.Subsemigroup.Centralizer` `Mathlib.Logic.Embedding.Set` `Mathlib.Logic.Equiv.Embedding` `Mathlib.Logic.Equiv.Nat` `Mathlib.Logic.Equiv.PartialEquiv` `Mathlib.Logic.Equiv.Set` `Mathlib.Logic.Function.FiberPartition` `Mathlib.Logic.Small.Basic` `Mathlib.Logic.Small.Set` `Mathlib.Order.Antichain` `Mathlib.Order.Bounded` `Mathlib.Order.Bounds.Basic` `Mathlib.Order.Bounds.Image` `Mathlib.Order.Bounds.Lattice` `Mathlib.Order.Bounds.OrderIso` `Mathlib.Order.Chain` `Mathlib.Order.Circular` `Mathlib.Order.Closure` `Mathlib.Order.Cofinal` `Mathlib.Order.CompleteBooleanAlgebra` `Mathlib.Order.CompleteLattice` `Mathlib.Order.Concept` `Mathlib.Order.ConditionallyCompleteLattice.Basic` `Mathlib.Order.ConditionallyCompleteLattice.Defs` `Mathlib.Order.ConditionallyCompleteLattice.Group` `Mathlib.Order.ConditionallyCompleteLattice.Indexed` `Mathlib.Order.Copy` `Mathlib.Order.Directed` `Mathlib.Order.Estimator` `Mathlib.Order.Filter.AtTopBot.CompleteLattice` `Mathlib.Order.Filter.AtTopBot.Defs` `Mathlib.Order.Filter.AtTopBot.Disjoint` `Mathlib.Order.Filter.AtTopBot.Map` `Mathlib.Order.Filter.AtTopBot.Monoid` `Mathlib.Order.Filter.AtTopBot.Tendsto` `Mathlib.Order.Filter.Basic` `Mathlib.Order.Filter.Curry` `Mathlib.Order.Filter.Defs` `Mathlib.Order.Filter.Ker` `Mathlib.Order.Filter.Map` `Mathlib.Order.Filter.NAry` `Mathlib.Order.Filter.Partial` `Mathlib.Order.Filter.Prod` `Mathlib.Order.Filter.Tendsto` `Mathlib.Order.GaloisConnection.Basic` `Mathlib.Order.Heyting.Regular` `Mathlib.Order.Hom.CompleteLattice` `Mathlib.Order.Hom.Order` `Mathlib.Order.Hom.Set` `Mathlib.Order.Interval.Basic` `Mathlib.Order.Interval.Set.Basic` `Mathlib.Order.Interval.Set.Disjoint` `Mathlib.Order.Interval.Set.Image` `Mathlib.Order.Interval.Set.OrderIso` `Mathlib.Order.Interval.Set.SurjOn` `Mathlib.Order.Interval.Set.WithBotTop` `Mathlib.Order.LatticeIntervals` `Mathlib.Order.Monotone.Extension` `Mathlib.Order.Monotone.Odd` `Mathlib.Order.Monotone.Union` `Mathlib.Order.Nucleus` `Mathlib.Order.OrdContinuous` `Mathlib.Order.Rel.GaloisConnection` `Mathlib.Order.RelIso.Set` `Mathlib.Order.ScottContinuity` `Mathlib.Order.SemiconjSup` `Mathlib.Order.WellFounded` `Mathlib.RingTheory.Congruence.Basic` `Mathlib.RingTheory.Congruence.Defs` `Mathlib.RingTheory.Congruence.Opposite` `Mathlib.RingTheory.NonUnitalSubsemiring.Defs` `Mathlib.RingTheory.OreLocalization.OreSet` `Mathlib.RingTheory.RingInvo` `Mathlib.Tactic.DeriveCountable` `Mathlib.Tactic.Monotonicity.Lemmas` `Mathlib.Tactic.Monotonicity` `Mathlib.Tactic.Peel` `Mathlib.Tactic.TautoSet`</details>|2|\n|<details><summary>37 files</summary> `Mathlib.Algebra.Order.AddGroupWithTop` `Mathlib.Algebra.Order.Field.InjSurj` `Mathlib.Algebra.Order.Group.Abs` `Mathlib.Algebra.Order.Group.InjSurj` `Mathlib.Algebra.Order.Group.Lattice` `Mathlib.Algebra.Order.Group.MinMax` `Mathlib.Algebra.Order.Group.OrderIso` `Mathlib.Algebra.Order.Group.PosPart` `Mathlib.Algebra.Order.Group.Unbundled.Abs` `Mathlib.Algebra.Order.Group.Unbundled.Int` `Mathlib.Algebra.Order.Group.Units` `Mathlib.Algebra.Order.GroupWithZero.Unbundled.Lemmas` `Mathlib.Algebra.Order.Monoid.Basic` `Mathlib.Algebra.Order.Monoid.Unbundled.WithTop` `Mathlib.Algebra.Order.Monoid.Units` `Mathlib.Algebra.Order.Monoid.WithTop` `Mathlib.Algebra.Order.PUnit` `Mathlib.Algebra.Order.Ring.Idempotent` `Mathlib.Algebra.Order.Ring.InjSurj` `Mathlib.Algebra.Order.Sub.Unbundled.Hom` `Mathlib.Algebra.Order.Sub.WithTop` `Mathlib.Algebra.Tropical.Basic` `Mathlib.Data.Nat.Cast.WithTop` `Mathlib.Data.Sum.Lattice` `Mathlib.Data.Sum.Order` `Mathlib.Order.Antisymmetrization` `Mathlib.Order.BooleanAlgebra` `Mathlib.Order.Booleanisation` `Mathlib.Order.GaloisConnection.Defs` `Mathlib.Order.Heyting.Basic` `Mathlib.Order.Heyting.Hom` `Mathlib.Order.Hom.Basic` `Mathlib.Order.Hom.Bounded` `Mathlib.Order.Hom.Lattice` `Mathlib.Order.SymmDiff` `Mathlib.Order.WithBot` `Mathlib.Tactic.ApplyFun`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ add_left_inj`\n`+ add_right_inj`\n`+ instance (priority := 10) instLE : LE (WithBot α) where le := WithBot.LE`\n`+ instance (priority := 10) instLE : LE (WithTop α) where le := WithTop.LE`\n`+ instance (priority := 10) instLT : LT (WithBot α) where lt := WithBot.LT`\n`+ instance (priority := 10) instLT : LT (WithTop α) where lt := WithTop.LT`\n`+ not_coe_le_bot`\n`+ orderBot`\n`++ LE`\n`++ LT`\n`+-+- lt_iff_exists_coe`\n`- add_left_cancel_iff`\n`- add_right_cancel_iff`\n`- instance (priority := 10) le : LE (WithBot α)`\n`- instance (priority := 10) le : LE (WithTop α)`\n`- instance (priority := 10) lt : LT (WithBot α)`\n`- instance (priority := 10) lt : LT (WithTop α)`\n`-+-+ addLeftMono`\n`-+-+ addLeftReflectLT`\n`-+-+ addRightMono`\n`-+-+ addRightReflectLT`\n`-+-+ le_def`\n`-+-+ lt_def`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAObAYd6",
              "createdAt": "2024-12-01T22:16:59Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAObAYd-",
              "createdAt": "2024-12-01T22:16:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TbAMX",
              "createdAt": "2024-12-02T17:01:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TbAnQ",
              "createdAt": "2024-12-02T17:02:17Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOcNYTq",
              "createdAt": "2024-12-03T08:41:55Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOgDNWK",
              "createdAt": "2024-12-07T15:43:39Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAOiiUDN",
              "createdAt": "2024-12-11T05:51:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOn2z3N",
              "createdAt": "2024-12-18T10:25:57Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAOn3aKk",
              "createdAt": "2024-12-18T10:38:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAOsIkxJ",
              "createdAt": "2024-12-27T13:32:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOsipcd",
              "createdAt": "2024-12-29T09:37:33Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOsir3n",
              "createdAt": "2024-12-29T09:44:52Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAOsistn",
              "createdAt": "2024-12-29T09:47:38Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAOsitLj",
              "createdAt": "2024-12-29T09:49:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOsmtUX",
              "createdAt": "2024-12-29T22:03:33Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAO-cg7n",
              "createdAt": "2025-01-27T15:47:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAO-eGMx",
              "createdAt": "2025-01-27T16:15:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAO-iv_6",
              "createdAt": "2025-01-27T17:35:30Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAO-iyIB",
              "createdAt": "2025-01-27T17:36:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAPBYYlO",
              "createdAt": "2025-01-30T19:47:35Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c54IE8c",
              "createdAt": "2025-02-05T16:40:53Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Ji14J",
                "title": "[Merged by Bors] - chore(Order/WithBot): golf, clean up",
                "url": "https://github.com/leanprover-community/mathlib4/pull/21274"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAPKYkgm",
              "createdAt": "2025-02-12T12:44:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6eKuEm",
              "createdAt": "2025-02-12T12:44:41Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#20317~~\n* ~~leanprover-community/mathlib4#20318~~\n* ~~leanprover-community/mathlib4#21274~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAPKaPDp",
              "createdAt": "2025-02-12T13:16:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "13ecad712e3b4f4e979d5fa2a1ee147997d60513"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAPKbpCr",
              "createdAt": "2025-02-12T13:41:42Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAPKbrb0",
              "createdAt": "2025-02-12T13:42:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6byYQ-",
              "createdAt": "2025-02-13T02:34:59Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6byYc5",
              "createdAt": "2025-02-13T02:35:51Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            }
          ]
        }
      }
    }
  }
}
