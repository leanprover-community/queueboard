{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 492,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I suspect this improves performance\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #20317\r\n- [x] depends on: #20318\r\n- [ ] depends on: #21274\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Vn8NM",
              "body": "### PR summary [3a90c6317f](https://github.com/leanprover-community/mathlib4/pull/19668/commits/3a90c6317f49ebd66d96f929daa358c8e2081ed6)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.WithBot | 173 | 176 | +3 (+1.73%) |\n| Mathlib.Order.Hom.Basic | 199 | 202 | +3 (+1.51%) |\n| Mathlib.Algebra.Order.Monoid.Unbundled.WithTop | 209 | 212 | +3 (+1.44%) |\n| Mathlib.Order.Interval.Set.WithBotTop | 237 | 239 | +2 (+0.84%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>85 files</summary> `Mathlib.Algebra.Group.Pointwise.Set.Basic` `Mathlib.Algebra.Group.Submonoid.Basic` `Mathlib.Algebra.Group.Submonoid.MulOpposite` `Mathlib.Algebra.Group.Submonoid.Operations` `Mathlib.Algebra.Group.Subsemigroup.Basic` `Mathlib.Algebra.Group.Subsemigroup.Membership` `Mathlib.Algebra.Group.Subsemigroup.Operations` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic` `Mathlib.Algebra.Order.Field.Pointwise` `Mathlib.Algebra.Order.Group.Action` `Mathlib.Algebra.Order.Group.CompleteLattice` `Mathlib.Algebra.Order.Group.Cone` `Mathlib.Algebra.Order.Group.Pointwise.Bounds` `Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice` `Mathlib.Algebra.Order.Interval.Set.Group` `Mathlib.Algebra.Order.Monoid.Submonoid` `Mathlib.Algebra.Order.Quantale` `Mathlib.Algebra.Ring.Pointwise.Set` `Mathlib.Algebra.Ring.Subsemiring.Order` `Mathlib.Algebra.Tropical.Lattice` `Mathlib.Data.FP.Basic` `Mathlib.Data.Nat.Pairing` `Mathlib.Data.PFun` `Mathlib.Data.Rel` `Mathlib.Data.Semiquot` `Mathlib.Data.Set.Accumulate` `Mathlib.Data.Set.Functor` `Mathlib.Data.Set.Lattice` `Mathlib.Data.Set.Pairwise.Lattice` `Mathlib.Data.Set.Sigma` `Mathlib.Data.Set.Subset` `Mathlib.Data.Set.UnionLift` `Mathlib.Data.Setoid.Basic` `Mathlib.GroupTheory.Congruence.Basic` `Mathlib.GroupTheory.Congruence.Defs` `Mathlib.GroupTheory.Congruence.Hom` `Mathlib.GroupTheory.Congruence.Opposite` `Mathlib.GroupTheory.GroupAction.Pointwise` `Mathlib.GroupTheory.Submonoid.Center` `Mathlib.GroupTheory.Submonoid.Centralizer` `Mathlib.GroupTheory.Subsemigroup.Centralizer` `Mathlib.Logic.Equiv.Nat` `Mathlib.Logic.Small.Set` `Mathlib.Order.Antichain` `Mathlib.Order.Bounds.Lattice` `Mathlib.Order.Bounds.OrderIso` `Mathlib.Order.Chain` `Mathlib.Order.Closure` `Mathlib.Order.Cofinal` `Mathlib.Order.CompleteBooleanAlgebra` `Mathlib.Order.CompleteLattice` `Mathlib.Order.Concept` `Mathlib.Order.ConditionallyCompleteLattice.Basic` `Mathlib.Order.ConditionallyCompleteLattice.Group` `Mathlib.Order.ConditionallyCompleteLattice.Indexed` `Mathlib.Order.Copy` `Mathlib.Order.Estimator` `Mathlib.Order.Filter.Basic` `Mathlib.Order.Filter.Curry` `Mathlib.Order.Filter.Ker` `Mathlib.Order.Filter.NAry` `Mathlib.Order.Filter.Partial` `Mathlib.Order.Filter.Prod` `Mathlib.Order.Filter.Tendsto` `Mathlib.Order.GaloisConnection.Basic` `Mathlib.Order.Heyting.Regular` `Mathlib.Order.Hom.CompleteLattice` `Mathlib.Order.Hom.Order` `Mathlib.Order.Hom.Set` `Mathlib.Order.Interval.Basic` `Mathlib.Order.Interval.Set.Disjoint` `Mathlib.Order.Interval.Set.OrderIso` `Mathlib.Order.Interval.Set.WithBotTop` `Mathlib.Order.Monotone.Extension` `Mathlib.Order.Nucleus` `Mathlib.Order.OrdContinuous` `Mathlib.Order.Rel.GaloisConnection` `Mathlib.Order.SemiconjSup` `Mathlib.RingTheory.Congruence.Basic` `Mathlib.RingTheory.Congruence.Defs` `Mathlib.RingTheory.Congruence.Opposite` `Mathlib.Tactic.DeriveCountable` `Mathlib.Tactic.Monotonicity.Lemmas` `Mathlib.Tactic.Monotonicity` `Mathlib.Tactic.Peel`</details>|2|\n|<details><summary>34 files</summary> `Mathlib.Algebra.Order.AddGroupWithTop` `Mathlib.Algebra.Order.Field.InjSurj` `Mathlib.Algebra.Order.Group.Abs` `Mathlib.Algebra.Order.Group.InjSurj` `Mathlib.Algebra.Order.Group.Lattice` `Mathlib.Algebra.Order.Group.MinMax` `Mathlib.Algebra.Order.Group.OrderIso` `Mathlib.Algebra.Order.Group.PosPart` `Mathlib.Algebra.Order.Group.Unbundled.Abs` `Mathlib.Algebra.Order.Group.Unbundled.Int` `Mathlib.Algebra.Order.Group.Units` `Mathlib.Algebra.Order.GroupWithZero.Unbundled.Lemmas` `Mathlib.Algebra.Order.Monoid.Basic` `Mathlib.Algebra.Order.Monoid.Unbundled.WithTop` `Mathlib.Algebra.Order.Monoid.Units` `Mathlib.Algebra.Order.Monoid.WithTop` `Mathlib.Algebra.Order.Ring.Idempotent` `Mathlib.Algebra.Order.Ring.InjSurj` `Mathlib.Algebra.Order.Sub.Unbundled.Hom` `Mathlib.Algebra.Order.Sub.WithTop` `Mathlib.Algebra.PUnitInstances.Order` `Mathlib.Algebra.Tropical.Basic` `Mathlib.Data.Nat.Cast.WithTop` `Mathlib.Data.Sum.Lattice` `Mathlib.Data.Sum.Order` `Mathlib.Order.Antisymmetrization` `Mathlib.Order.Booleanisation` `Mathlib.Order.GaloisConnection.Defs` `Mathlib.Order.Heyting.Hom` `Mathlib.Order.Hom.Basic` `Mathlib.Order.Hom.Bounded` `Mathlib.Order.Hom.Lattice` `Mathlib.Order.WithBot` `Mathlib.Tactic.ApplyFun`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ WithBot.le_ofDual_iff`\n`+ WithBot.le_toDual_iff`\n`+ WithBot.lt_ofDual_iff`\n`+ WithBot.lt_toDual_iff`\n`+ WithBot.ofDual_le_iff`\n`+ WithBot.ofDual_le_ofDual_iff`\n`+ WithBot.ofDual_lt_iff`\n`+ WithBot.ofDual_lt_ofDual_iff`\n`+ WithBot.toDual_le_iff`\n`+ WithBot.toDual_le_toDual_iff`\n`+ WithBot.toDual_lt_iff`\n`+ WithBot.toDual_lt_toDual_iff`\n`+ WithTop.le_ofDual_iff`\n`+ WithTop.le_toDual_iff`\n`+ WithTop.lt_ofDual_iff`\n`+ WithTop.lt_toDual_iff`\n`+ WithTop.ofDual_le_iff`\n`+ WithTop.ofDual_le_ofDual_iff`\n`+ WithTop.ofDual_lt_iff`\n`+ WithTop.ofDual_lt_ofDual_iff`\n`+ WithTop.toDual_le_iff`\n`+ WithTop.toDual_le_toDual_iff`\n`+ WithTop.toDual_lt_iff`\n`+ WithTop.toDual_lt_toDual_iff`\n`+ add_left_inj`\n`+ add_right_inj`\n`+ instance (priority := 10) instLE : LE (WithBot α) where le := WithBot.LE`\n`+ instance (priority := 10) instLE : LE (WithTop α) where le := WithTop.LE`\n`+ instance (priority := 10) instLT : LT (WithBot α) where lt := WithBot.LT`\n`+ instance (priority := 10) instLT : LT (WithTop α) where lt := WithTop.LT`\n`++ LE`\n`++ LT`\n`++ le_def`\n`++ lt_def`\n`++-- coe_le_coe`\n`++-- coe_le_iff`\n`++-- coe_lt_coe`\n`++-- coe_max`\n`++-- coe_min`\n`++-- ge_of_forall_gt_iff_ge`\n`++-- le_coe_iff`\n`++-- le_of_forall_lt_iff_le`\n`++-- lt_iff_exists_coe`\n`+-+- linearOrder`\n`+-+- orderBot`\n`+-+- orderTop`\n`- add_left_cancel_iff`\n`- add_right_cancel_iff`\n`- instance (priority := 10) le : LE (WithBot α)`\n`- instance (priority := 10) le : LE (WithTop α)`\n`- instance (priority := 10) lt : LT (WithBot α)`\n`- instance (priority := 10) lt : LT (WithTop α)`\n`-+-+ addLeftMono`\n`-+-+ addLeftReflectLT`\n`-+-+ addRightMono`\n`-+-+ addRightReflectLT`\n`-+-+ distribLattice`\n`-+-+ isTotal_le`\n`-+-+ semilatticeInf`\n`-- le_ofDual_iff`\n`-- le_toDual_iff`\n`-- lt_ofDual_iff`\n`-- lt_toDual_iff`\n`-- ofDual_le_iff`\n`-- ofDual_le_ofDual_iff`\n`-- ofDual_lt_iff`\n`-- ofDual_lt_ofDual_iff`\n`-- toDual_le_iff`\n`-- toDual_le_toDual_iff`\n`-- toDual_lt_iff`\n`-- toDual_lt_toDual_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-12-01T22:16:56Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7tVs",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#20317~~\n* ~~leanprover-community/mathlib4#20318~~\n* leanprover-community/mathlib4#21274\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-01-27T15:47:33Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "3a90c6317f49ebd66d96f929daa358c8e2081ed6",
                "additions": 492,
                "deletions": 717,
                "committedDate": "2025-01-27T17:35:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIfAcV3w",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13060054893/job/36440577503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYARA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852432/job/36240228420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYDIw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852908/job/36240229155"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYDpA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852935/job/36240229284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYBcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852419/job/36240228723"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYFDw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852912/job/36240229647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYAPg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852419/job/36240228414"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYCLw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852432/job/36240228911"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYDhg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852912/job/36240229254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBYEpA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852432/job/36240229540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBrn6g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852419/job/36240549866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBZWFw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36240250391"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcBaieQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19668&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-01T22:16:04Z",
        "deletions": 717,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/WithTop.lean",
              "additions": 88,
              "deletions": 138
            },
            {
              "path": "Mathlib/Order/Hom/Basic.lean",
              "additions": 18,
              "deletions": 12
            },
            {
              "path": "Mathlib/Order/Interval/Set/WithBotTop.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/Order/WithBot.lean",
              "additions": 383,
              "deletions": 563
            }
          ]
        },
        "headRefName": "with_bot_inductive_le",
        "headRefOid": "3a90c6317f49ebd66d96f929daa358c8e2081ed6",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6DrTL3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6TbAnQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-02T17:02:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19668,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6TbAMX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-02T17:01:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TbAnQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-02T17:02:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TcHtz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-12-02T18:54:55Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vPIjR",
                    "body": "How does this compare to\r\n```lean\r\ndef le : WithBot α → WithBot α → Prop\r\n | (a : WithBot α), (b: WithBot α) => a ≤ b\r\n | ⊥, _ => True\r\n```",
                    "createdAt": "2024-12-02T17:01:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vP20x",
                    "body": "This suggestion is invalid since you aren't covering the `(a : alpha), \\bot` case (at least once you fix the typo in the first branch)\n\nOnce you've covered it, the following won't work:\n```\nexample : \\forall x y : WithBot alpha, x <= y -> True\n  | \\bot, \\bot, _ => sorry\n  | \\bot, (b : alpha), _ => sorry\n  | (a : alpha), (b : alpha) => sorry\n```",
                    "createdAt": "2024-12-02T18:54:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vPIzu",
                    "body": "Also, shouldn't this be `LE` or `Le`?",
                    "createdAt": "2024-12-02T17:02:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIfAcV3w",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13060054893/job/36440577503"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYARA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852432/job/36240228420"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYDIw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852908/job/36240229155"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYDpA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852935/job/36240229284"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYBcw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852419/job/36240228723"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYFDw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852912/job/36240229647"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYAPg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852419/job/36240228414"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYCLw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852432/job/36240228911"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYDhg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852912/job/36240229254"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBYEpA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852432/job/36240229540"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBrn6g",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12994852419/job/36240549866"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBZWFw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36240250391"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcBaieQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19668&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor: define `≤`/`<` on `WithBot`/`WithTop` by induction",
        "updatedAt": "2025-01-30T19:47:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19668",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vn8NM",
              "createdAt": "2024-12-01T22:16:56Z",
              "body": "### PR summary [3a90c6317f](https://github.com/leanprover-community/mathlib4/pull/19668/commits/3a90c6317f49ebd66d96f929daa358c8e2081ed6)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.WithBot | 173 | 176 | +3 (+1.73%) |\n| Mathlib.Order.Hom.Basic | 199 | 202 | +3 (+1.51%) |\n| Mathlib.Algebra.Order.Monoid.Unbundled.WithTop | 209 | 212 | +3 (+1.44%) |\n| Mathlib.Order.Interval.Set.WithBotTop | 237 | 239 | +2 (+0.84%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>85 files</summary> `Mathlib.Algebra.Group.Pointwise.Set.Basic` `Mathlib.Algebra.Group.Submonoid.Basic` `Mathlib.Algebra.Group.Submonoid.MulOpposite` `Mathlib.Algebra.Group.Submonoid.Operations` `Mathlib.Algebra.Group.Subsemigroup.Basic` `Mathlib.Algebra.Group.Subsemigroup.Membership` `Mathlib.Algebra.Group.Subsemigroup.Operations` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic` `Mathlib.Algebra.Order.Field.Pointwise` `Mathlib.Algebra.Order.Group.Action` `Mathlib.Algebra.Order.Group.CompleteLattice` `Mathlib.Algebra.Order.Group.Cone` `Mathlib.Algebra.Order.Group.Pointwise.Bounds` `Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice` `Mathlib.Algebra.Order.Interval.Set.Group` `Mathlib.Algebra.Order.Monoid.Submonoid` `Mathlib.Algebra.Order.Quantale` `Mathlib.Algebra.Ring.Pointwise.Set` `Mathlib.Algebra.Ring.Subsemiring.Order` `Mathlib.Algebra.Tropical.Lattice` `Mathlib.Data.FP.Basic` `Mathlib.Data.Nat.Pairing` `Mathlib.Data.PFun` `Mathlib.Data.Rel` `Mathlib.Data.Semiquot` `Mathlib.Data.Set.Accumulate` `Mathlib.Data.Set.Functor` `Mathlib.Data.Set.Lattice` `Mathlib.Data.Set.Pairwise.Lattice` `Mathlib.Data.Set.Sigma` `Mathlib.Data.Set.Subset` `Mathlib.Data.Set.UnionLift` `Mathlib.Data.Setoid.Basic` `Mathlib.GroupTheory.Congruence.Basic` `Mathlib.GroupTheory.Congruence.Defs` `Mathlib.GroupTheory.Congruence.Hom` `Mathlib.GroupTheory.Congruence.Opposite` `Mathlib.GroupTheory.GroupAction.Pointwise` `Mathlib.GroupTheory.Submonoid.Center` `Mathlib.GroupTheory.Submonoid.Centralizer` `Mathlib.GroupTheory.Subsemigroup.Centralizer` `Mathlib.Logic.Equiv.Nat` `Mathlib.Logic.Small.Set` `Mathlib.Order.Antichain` `Mathlib.Order.Bounds.Lattice` `Mathlib.Order.Bounds.OrderIso` `Mathlib.Order.Chain` `Mathlib.Order.Closure` `Mathlib.Order.Cofinal` `Mathlib.Order.CompleteBooleanAlgebra` `Mathlib.Order.CompleteLattice` `Mathlib.Order.Concept` `Mathlib.Order.ConditionallyCompleteLattice.Basic` `Mathlib.Order.ConditionallyCompleteLattice.Group` `Mathlib.Order.ConditionallyCompleteLattice.Indexed` `Mathlib.Order.Copy` `Mathlib.Order.Estimator` `Mathlib.Order.Filter.Basic` `Mathlib.Order.Filter.Curry` `Mathlib.Order.Filter.Ker` `Mathlib.Order.Filter.NAry` `Mathlib.Order.Filter.Partial` `Mathlib.Order.Filter.Prod` `Mathlib.Order.Filter.Tendsto` `Mathlib.Order.GaloisConnection.Basic` `Mathlib.Order.Heyting.Regular` `Mathlib.Order.Hom.CompleteLattice` `Mathlib.Order.Hom.Order` `Mathlib.Order.Hom.Set` `Mathlib.Order.Interval.Basic` `Mathlib.Order.Interval.Set.Disjoint` `Mathlib.Order.Interval.Set.OrderIso` `Mathlib.Order.Interval.Set.WithBotTop` `Mathlib.Order.Monotone.Extension` `Mathlib.Order.Nucleus` `Mathlib.Order.OrdContinuous` `Mathlib.Order.Rel.GaloisConnection` `Mathlib.Order.SemiconjSup` `Mathlib.RingTheory.Congruence.Basic` `Mathlib.RingTheory.Congruence.Defs` `Mathlib.RingTheory.Congruence.Opposite` `Mathlib.Tactic.DeriveCountable` `Mathlib.Tactic.Monotonicity.Lemmas` `Mathlib.Tactic.Monotonicity` `Mathlib.Tactic.Peel`</details>|2|\n|<details><summary>34 files</summary> `Mathlib.Algebra.Order.AddGroupWithTop` `Mathlib.Algebra.Order.Field.InjSurj` `Mathlib.Algebra.Order.Group.Abs` `Mathlib.Algebra.Order.Group.InjSurj` `Mathlib.Algebra.Order.Group.Lattice` `Mathlib.Algebra.Order.Group.MinMax` `Mathlib.Algebra.Order.Group.OrderIso` `Mathlib.Algebra.Order.Group.PosPart` `Mathlib.Algebra.Order.Group.Unbundled.Abs` `Mathlib.Algebra.Order.Group.Unbundled.Int` `Mathlib.Algebra.Order.Group.Units` `Mathlib.Algebra.Order.GroupWithZero.Unbundled.Lemmas` `Mathlib.Algebra.Order.Monoid.Basic` `Mathlib.Algebra.Order.Monoid.Unbundled.WithTop` `Mathlib.Algebra.Order.Monoid.Units` `Mathlib.Algebra.Order.Monoid.WithTop` `Mathlib.Algebra.Order.Ring.Idempotent` `Mathlib.Algebra.Order.Ring.InjSurj` `Mathlib.Algebra.Order.Sub.Unbundled.Hom` `Mathlib.Algebra.Order.Sub.WithTop` `Mathlib.Algebra.PUnitInstances.Order` `Mathlib.Algebra.Tropical.Basic` `Mathlib.Data.Nat.Cast.WithTop` `Mathlib.Data.Sum.Lattice` `Mathlib.Data.Sum.Order` `Mathlib.Order.Antisymmetrization` `Mathlib.Order.Booleanisation` `Mathlib.Order.GaloisConnection.Defs` `Mathlib.Order.Heyting.Hom` `Mathlib.Order.Hom.Basic` `Mathlib.Order.Hom.Bounded` `Mathlib.Order.Hom.Lattice` `Mathlib.Order.WithBot` `Mathlib.Tactic.ApplyFun`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ WithBot.le_ofDual_iff`\n`+ WithBot.le_toDual_iff`\n`+ WithBot.lt_ofDual_iff`\n`+ WithBot.lt_toDual_iff`\n`+ WithBot.ofDual_le_iff`\n`+ WithBot.ofDual_le_ofDual_iff`\n`+ WithBot.ofDual_lt_iff`\n`+ WithBot.ofDual_lt_ofDual_iff`\n`+ WithBot.toDual_le_iff`\n`+ WithBot.toDual_le_toDual_iff`\n`+ WithBot.toDual_lt_iff`\n`+ WithBot.toDual_lt_toDual_iff`\n`+ WithTop.le_ofDual_iff`\n`+ WithTop.le_toDual_iff`\n`+ WithTop.lt_ofDual_iff`\n`+ WithTop.lt_toDual_iff`\n`+ WithTop.ofDual_le_iff`\n`+ WithTop.ofDual_le_ofDual_iff`\n`+ WithTop.ofDual_lt_iff`\n`+ WithTop.ofDual_lt_ofDual_iff`\n`+ WithTop.toDual_le_iff`\n`+ WithTop.toDual_le_toDual_iff`\n`+ WithTop.toDual_lt_iff`\n`+ WithTop.toDual_lt_toDual_iff`\n`+ add_left_inj`\n`+ add_right_inj`\n`+ instance (priority := 10) instLE : LE (WithBot α) where le := WithBot.LE`\n`+ instance (priority := 10) instLE : LE (WithTop α) where le := WithTop.LE`\n`+ instance (priority := 10) instLT : LT (WithBot α) where lt := WithBot.LT`\n`+ instance (priority := 10) instLT : LT (WithTop α) where lt := WithTop.LT`\n`++ LE`\n`++ LT`\n`++ le_def`\n`++ lt_def`\n`++-- coe_le_coe`\n`++-- coe_le_iff`\n`++-- coe_lt_coe`\n`++-- coe_max`\n`++-- coe_min`\n`++-- ge_of_forall_gt_iff_ge`\n`++-- le_coe_iff`\n`++-- le_of_forall_lt_iff_le`\n`++-- lt_iff_exists_coe`\n`+-+- linearOrder`\n`+-+- orderBot`\n`+-+- orderTop`\n`- add_left_cancel_iff`\n`- add_right_cancel_iff`\n`- instance (priority := 10) le : LE (WithBot α)`\n`- instance (priority := 10) le : LE (WithTop α)`\n`- instance (priority := 10) lt : LT (WithBot α)`\n`- instance (priority := 10) lt : LT (WithTop α)`\n`-+-+ addLeftMono`\n`-+-+ addLeftReflectLT`\n`-+-+ addRightMono`\n`-+-+ addRightReflectLT`\n`-+-+ distribLattice`\n`-+-+ isTotal_le`\n`-+-+ semilatticeInf`\n`-- le_ofDual_iff`\n`-- le_toDual_iff`\n`-- lt_ofDual_iff`\n`-- lt_toDual_iff`\n`-- ofDual_le_iff`\n`-- ofDual_le_ofDual_iff`\n`-- ofDual_lt_iff`\n`-- ofDual_lt_ofDual_iff`\n`-- toDual_le_iff`\n`-- toDual_le_toDual_iff`\n`-- toDual_lt_iff`\n`-- toDual_lt_toDual_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAObAYd6",
              "createdAt": "2024-12-01T22:16:59Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAObAYd-",
              "createdAt": "2024-12-01T22:16:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TbAMX",
              "createdAt": "2024-12-02T17:01:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TbAnQ",
              "createdAt": "2024-12-02T17:02:17Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOcNYTq",
              "createdAt": "2024-12-03T08:41:55Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOgDNWK",
              "createdAt": "2024-12-07T15:43:39Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAOiiUDN",
              "createdAt": "2024-12-11T05:51:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOn2z3N",
              "createdAt": "2024-12-18T10:25:57Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAOn3aKk",
              "createdAt": "2024-12-18T10:38:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAOsIkxJ",
              "createdAt": "2024-12-27T13:32:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOsipcd",
              "createdAt": "2024-12-29T09:37:33Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOsir3n",
              "createdAt": "2024-12-29T09:44:52Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAOsistn",
              "createdAt": "2024-12-29T09:47:38Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAOsitLj",
              "createdAt": "2024-12-29T09:49:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAOsmtUX",
              "createdAt": "2024-12-29T22:03:33Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAO-cg7n",
              "createdAt": "2025-01-27T15:47:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7tVs",
              "createdAt": "2025-01-27T15:47:33Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#20317~~\n* ~~leanprover-community/mathlib4#20318~~\n* leanprover-community/mathlib4#21274\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAO-eGMx",
              "createdAt": "2025-01-27T16:15:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3a90c6317f49ebd66d96f929daa358c8e2081ed6"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6hhnetzwAAAAO-iv_6",
              "createdAt": "2025-01-27T17:35:30Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6hhnetzwAAAAO-iyIB",
              "createdAt": "2025-01-27T17:36:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6hhnetzwAAAAPBYYlO",
              "createdAt": "2025-01-30T19:47:35Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            }
          ]
        }
      }
    }
  }
}
