{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 272,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Quoting the docstring:\r\n\r\n`fast_instance% inst` takes an expression for a typeclass instance `inst`, and unfolds it into\r\nconstructor applications that leverage existing instances.\r\nFor instance, when used as\r\n```lean\r\ninstance instSemiring : Semiring X := sorry\r\ninstance instRing : Ring X := fast_instance% Function.Injective.ring ..\r\n```\r\nthis will define `instRing` as a nested constructor application that refers to `instSemiring`.\r\nThe advantage is then that `instRing.toSemiring` unifies almost immediately with `instSemiring`,\r\nrather than having to break it down into smaller pieces.\r\n\r\nRelated to #7432\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c53t1zs",
              "body": "!bench",
              "createdAt": "2024-03-20T01:22:35Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53uEqf",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/0c2d8124-56c7-451d-91be-69fdd3747969) for commit 02e5f990e1584126610890b97f8b4be4efec4214.\nThe entire run failed.\nFound no significant differences.",
              "createdAt": "2024-03-20T02:11:51Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53v6Bs",
              "body": "!bench",
              "createdAt": "2024-03-20T08:45:49Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53wDcp",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/b45973c3-31bc-4235-b80b-90592ed84b81) for commit f31997b25e8c090645e512ba514fe29a9a427c8f.\nThe entire run failed.\nFound no significant differences.",
              "createdAt": "2024-03-20T09:10:46Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53wN5i",
              "body": "Ping me when ready. I think metaprogramming to hide preferred parent and even intermediate structure internals is the future and am glad this got started. ",
              "createdAt": "2024-03-20T09:36:13Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53wnE_",
              "body": "Feel free to push things to this branch to get linting passing, so that we have a benchmark.",
              "createdAt": "2024-03-20T10:31:57Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53xFKP",
              "body": "!bench",
              "createdAt": "2024-03-20T11:31:10Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53xPsU",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/c57e1eee-7f86-4b67-a82c-46774bfc853f) for commit ce19211a584fc4db8bd8c69eea1e72f34fc0f87f.\nThere were [no significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/c57e1eee-7f86-4b67-a82c-46774bfc853f) against commit 69fd837a71463d8905afbf335b908a035aa11a7e.",
              "createdAt": "2024-03-20T11:56:26Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KYN6",
              "body": "!bench",
              "createdAt": "2024-03-22T21:51:03Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KY9o",
              "body": "One comment: I think `compact_instance%` would be a more fitting name",
              "createdAt": "2024-03-22T21:53:58Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54Kf4K",
              "body": "!bench",
              "createdAt": "2024-03-22T22:23:00Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KjoB",
              "body": "> One comment: I think `compact_instance%` would be a more fitting name\r\n\r\nSure, that sounds reasonable; though I'll refrain from doing so until I have a benchmark that indicates this actually helps.",
              "createdAt": "2024-03-22T22:33:41Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KkCg",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/5c0265b7-6a83-419a-9258-1017636ece6d) for commit 3e91dd17dcebf31f5a53cbe7eacf09e933195294.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/5c0265b7-6a83-419a-9258-1017636ece6d) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -10.3%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -8.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.0%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.0%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.6%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.5%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.4%\n```",
              "createdAt": "2024-03-22T22:35:48Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KlQV",
              "body": "That is pretty good",
              "createdAt": "2024-03-22T22:40:36Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KmNj",
              "body": "I think the changes in #11029 should be useful to focus the use of the compactor. There I just make versions of `Function.Injective/Surjective` instances taking bundled class instance from the target/source instead of just the data. ",
              "createdAt": "2024-03-22T22:45:52Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54Kni2",
              "body": "Huh, I guess the benchmark doesn't care about shake output; so we're going to get a repeat.\r\n\r\nWhat this doesn't tell us is which `fast_instance%`s are carrying the weight; but maybe we don't care.",
              "createdAt": "2024-03-22T22:52:47Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54KpkO",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/f347a7c9-d5c8-4c37-9856-525d319f20b1) for commit 27f7d4702a224e4d8e822ca2333d527e5b334ab2.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/f347a7c9-d5c8-4c37-9856-525d319f20b1) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -10.3%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -8.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.0%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.0%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.6%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.5%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.4%\n```",
              "createdAt": "2024-03-22T22:59:53Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54K9AD",
              "body": "!bench",
              "createdAt": "2024-03-22T23:35:33Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54LCPU",
              "body": "`RingTheory.NonUnitalSubsemiring.Basic` is another target.",
              "createdAt": "2024-03-22T23:46:14Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54LKZU",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/0be42ab7-df41-4ea7-93c9-24da90211a38) for commit d633325c810cca0546413f60eaae7b3cc3da083f.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/0be42ab7-df41-4ea7-93c9-24da90211a38) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -45.4%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -9.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.1%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.4%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.7%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.5%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.NumberTheory.RamificationInertia              instructions    -3.9%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.4%\n```",
              "createdAt": "2024-03-23T00:00:50Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54LhjC",
              "body": "I think with the comments those are all the obvious application spots",
              "createdAt": "2024-03-23T01:37:10Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54Lkeu",
              "body": "Whoops, wrong command beginning with`b`",
              "createdAt": "2024-03-23T01:49:55Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54LkfF",
              "body": "Canceled.",
              "createdAt": "2024-03-23T01:49:57Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54Lki1",
              "body": "!bench",
              "createdAt": "2024-03-23T01:50:14Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54Llmp",
              "body": "> Whoops, wrong command beginning with`b`\n\nBut that doesn't begin with a `b` :) ",
              "createdAt": "2024-03-23T01:57:22Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54LnAG",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/abf54b58-416b-48b3-8ff0-07c0e038345e) for commit 5b956b683359c1f609afdd04aa67ffe08e563b47.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/abf54b58-416b-48b3-8ff0-07c0e038345e) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.Algebra.Algebra.Subalgebra.Unitization        instructions   -14.7%\n+ ~Mathlib.Algebra.Order.Nonneg.Ring                     instructions   -30.7%\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -45.4%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -9.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.1%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.4%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.8%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.9%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.NumberTheory.RamificationInertia              instructions    -3.9%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.5%\n```",
              "createdAt": "2024-03-23T02:15:43Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54MyPr",
              "body": "I made a variation on the implementation where, in the recursion, rather than synthesizing arguments, it synthesizes the whole expression. When that fails, it does whnf to get the fields of the structure to recurse. It also uses `provided`'s fields while synthesizing instances due to the fact that it's able to get the fields via whnf rather than using defeq (and hoping defeq does the right thing -- I have a small, but unconfirmed, worry about using defeq since the fields might not be reduced that way).\r\n\r\nThis has revealed that there are some instances that are only defeq at default transparency. For example, in `Mathlib/RingTheory/Congruence.lean` this instance has a problem:\r\n```\r\n-- RingCon.instNonUnitalNonAssocSemiringQuotientToAddToDistribToMul\r\nset_option trace.Tactic.fast_instance true\r\ninstance [NonUnitalNonAssocSemiring R] (c : RingCon R) : NonUnitalNonAssocSemiring c.Quotient :=\r\n  fast_instance%\r\n  Function.Surjective.nonUnitalNonAssocSemiring _ Quotient.surjective_Quotient_mk'' rfl\r\n    (fun _ _ => rfl) (fun _ _ => rfl) fun _ _ => rfl\r\n/-\r\n  [] ❌ type: Mul (RingCon.Quotient c) ▼\r\n    [] defeq only at default transparency \r\n\r\nProvided instance \r\n  { mul := fun x x_1 ↦ x * x_1 }\r\nis not defeq to inferred instance\r\n  { mul := Quotient.map₂' (fun x x_1 ↦ x * x_1) ⋯ }\r\n-/\r\n```\r\nNote that in my code I'm doing whnf when doing the \"provided instance ...\" error. That can be removed, I was just trying to understand what's the difference.\r\n\r\n```lean\r\nprivate partial def makeFastInstance (provided : Expr) : MetaM Expr := do\r\n  let ty ← inferType provided\r\n  withTraceNode `Tactic.fast_instance (fun e => return m!\"{exceptEmoji e} type: {ty}\") do\r\n  let .some className ← isClass? ty\r\n    | throwError \"Can only be used for classes, but given term of type{indentExpr ty}\"\r\n  if let .some new ← trySynthInstance ty then\r\n    if ← withReducibleAndInstances <| isDefEq provided new then\r\n      trace[Tactic.fast_instance] \"replaced with synthesized instance\"\r\n      return new\r\n    else\r\n      if ← withDefault <| isDefEq provided new then\r\n        trace[Tactic.fast_instance] \"defeq only at default transparency\"\r\n      withReducibleAndInstances do\r\n      -- uncomment these to see reduced terms. occasionally useful\r\n      --let provided ← whnf provided\r\n      --let new ← whnf new\r\n      throwError \"\\\r\n        Provided instance {indentExpr provided}\\n\\\r\n        is not defeq to inferred instance{indentExpr new}\"\r\n  let ctor := getStructureCtor (← getEnv) className\r\n  withReducible <| forallTelescopeReducing ty fun tyArgs _ => do\r\n    let provided' ← withReducibleAndInstances <| whnf <| mkAppN provided tyArgs\r\n    unless provided'.isAppOf ctor.name do\r\n      throwError \"\\\r\n        Provided instance does not reduce to constructor application{indentExpr provided}\"\r\n    let mut args := provided'.getAppArgs\r\n    let instParams ← withReducible <| forallTelescopeReducing ctor.type fun args _ =>\r\n      args.mapM fun arg => return (← arg.fvarId!.getBinderInfo).isInstImplicit\r\n    unless args.size == instParams.size do\r\n      throwError \"Incorrect number of arguments for constructor application{indentExpr provided}\"\r\n    for i in [ctor.numParams:args.size] do\r\n      if instParams[i]! then\r\n        args := args.set! i (← makeFastInstance args[i]!)\r\n    let provided' := mkAppN provided'.getAppFn args\r\n    mkLambdaFVars tyArgs provided'\r\n```\r\n\r\nAt first I thought it was a bug in my code, but after a lot of debugging, my guess is that it's because in your version the instance in question contains metavariables so instance synthesis fails and so it doesn't realize there's a problem.\r\n\r\nBy the way, I changed the elaborator to have this body:\r\n```lean\r\n    let provided ← Elab.Term.withSynthesize do\r\n      Elab.Term.elabTermEnsuringType arg expectedType\r\n    try\r\n      makeFastInstance (← instantiateMVars provided)\r\n    catch e =>\r\n      logError m!\"\\\r\n        Error when normalizing instance. Use `set_option trace.Tactic.fast_instance true \\\r\n        to analyze error.\\n\\n\\\r\n        {e.toMessageData}\"\r\n      return provided\r\n```",
              "createdAt": "2024-03-23T22:19:58Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54N26N",
              "body": "@kmill Here are the issues I found with this: \n\nSubmodule.Quotient.module' in Mathlib.LinearAlgebra.Quotient\ninstNonUnitalNonAssocSemiringQuotientToAddToDistribToMul in Mathlib.RingTheory.Congruence\ninstNonUnitalNonAssocRingQuotientToAddToDistribToNonUnitalNonAssocSemiringToMul in Mathlib.RingTheory.Congruence\nCauSeq.Completion.Cauchy.ring in Mathlib.Algebra.Order.CauSeq.Completion\n\nThe first is because the `InjSurj` module constructor is not marked `reducible`. #11631\n\nThe next two can be solved by marking various `Quotient` wrappers for `RingCon`, `Con`, and `AddCon` `reducible`. Though there is still something going on since `inferInstance` is not firing on `AddCon` classes for `RingCon`. #11632 \n\nThe last is amusing. The extra `mul := ( . * . )` fields block reduction because the `Mul` instance uses `Quotient.map\\2` which probably should not be reducible. They are easy enough to delete. #11627",
              "createdAt": "2024-03-24T18:40:40Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54N3sB",
              "body": "I would also avoid the `whnf` calls for the debugging error. It took me extra time to actually figure out where the offending instances were coming from. When I deleted those, it pointed me to the parent projection immediately. ",
              "createdAt": "2024-03-24T18:42:40Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54N7R4",
              "body": "@mattrobball Sorry that the whnf caused you issues. It's not a good default, and I pointed it out so you could know to comment it out. I needed both ways to understand that there was an issue.\r\n\r\nThanks for investigating this further!",
              "createdAt": "2024-03-24T19:33:43Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54N7-D",
              "body": "No need to apologize. Just relaying my experience. ",
              "createdAt": "2024-03-24T19:37:59Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54UiXR",
              "body": "After a brute force regex insertions and an attempt to build, @kmill 's implementation seems to handle things a bit more gracefully. ",
              "createdAt": "2024-03-25T18:31:26Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54WApC",
              "body": "@kmill, I'm quite happy for you to take over from me on this; I've clearly communicated the idea well enough, your code is a bit more polished, and hopefully this is something that the FRO can justify allocating your paid time towards :)",
              "createdAt": "2024-03-25T22:32:19Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54WDTt",
              "body": "In truth, I am happy to merge either version once the two are reconciled and the name is finalized. I guess `normalize` is ok but it is quite generic. ",
              "createdAt": "2024-03-25T22:41:53Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54WD19",
              "body": "@eric-wieser I spent more time on this than I should already, and I wouldn't be able to pick up on it again for a while. I'm happy for you to claim ownership of what I wrote, and I can review if you ping me :-)",
              "createdAt": "2024-03-25T22:44:05Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c58fpfr",
              "body": "Time has worn away preferences. Let's get this in any state, including its current one.",
              "createdAt": "2024-05-01T15:54:03Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Eh82E",
              "body": "### PR summary [22493806b4](https://github.com/leanprover-community/mathlib4/pull/11521/commits/22493806b4ee5c1fbfbe80ce304d1d07b580e6d9)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.FastInstance` `Mathlib.Tactic`|1|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ elabFastInstance`\n`+ instRing`\n`+ instSemiring`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>",
              "createdAt": "2024-07-11T17:24:33Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Eh9Pg",
              "body": "I took the liberty to split the new files from the applications to avoid rotting. The original state is on branch#fast_instance_temp. \r\n\r\n@eric-wieser please do as you wish with this, including reverting",
              "createdAt": "2024-07-11T17:25:25Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FAd0B",
              "body": "@eric-wieser I think it would be great to get this in soon. Is there anything we're still waiting on?",
              "createdAt": "2024-07-16T17:53:49Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G89Kd",
              "body": "I'm working on this right now, and I'll push some updates soon.",
              "createdAt": "2024-08-01T22:32:02Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G9sHs",
              "body": "### PR summary [4e3ae830f9](https://github.com/leanprover-community/mathlib4/pull/11521/commits/4e3ae830f90c11637da7c33786438fd5d4bd4399)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance`|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec2`\n`+ elabFastInstance`\n`+ error`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-02T01:27:41Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G9tTS",
              "body": "Pushed a new version of the algorithm I had in my comment. There's a question about how to handle things like Decidable instances that aren't canonical and that don't reduce to a constructor — I had to make a decision for sake of getting something down, and you can see the error message in the tests.\r\n\r\nPlease let me know if you notice any problems with the logic! It recursively visits non-Prop class arguments of constructors.\r\n\r\nIn case it's useful, I'll see if we can get a term version of `where` syntax so we can replace `where ...` with `:= fast_instance% termWhere ...` (with `termWhere` a placeholder), though I seem to remember most (or all?) cases of `fast_instance%` didn't need this.  (On an airplane that's about to land, had to push and write this comment quickly.)",
              "createdAt": "2024-08-02T01:33:15Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G-qNc",
              "body": "### PR summary [511147ff2c](https://github.com/leanprover-community/mathlib4/pull/11521/commits/511147ff2c50c07d52a80bd62c8b6be5b1e859b7)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance`|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-02T05:13:46Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HAJmc",
              "body": "Great! Thanks. I should be able to take a look this afternoon. ",
              "createdAt": "2024-08-02T09:29:56Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HQymo",
              "body": "### PR summary [f1ffab88ad](https://github.com/leanprover-community/mathlib4/pull/11521/commits/f1ffab88ade842e75c5953b1725326447f934b79)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance`|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped.instField`\n`+ dec2`\n`+ elabFastInstance`\n`+ fastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Add (Wrapped α) where add := fun ⟨m⟩ ⟨n⟩ => ⟨m + n⟩`\n`+ instance : Div (Wrapped α) where div m n := ⟨Div.div m.1 n.1⟩`\n`+ instance : Inf (Wrapped α) where inf s t := ⟨Inf.inf s.1 t.1⟩`\n`+ instance : IntCast (Wrapped α) where intCast n := ⟨IntCast.intCast n⟩`\n`+ instance : Inv (Wrapped α) where inv m := ⟨Inv.inv m.1⟩`\n`+ instance : Mul (Wrapped α) where mul := fun ⟨m⟩ ⟨n⟩ => ⟨m * n⟩`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance : NNRatCast (Wrapped α) where nnratCast n := ⟨NNRatCast.nnratCast n⟩`\n`+ instance : NatCast (Wrapped α) where natCast n := ⟨NatCast.natCast n⟩`\n`+ instance : Neg (Wrapped α) where neg m := ⟨Neg.neg m.1⟩`\n`+ instance : One (Wrapped α) where one := ⟨1⟩`\n`+ instance : Pow (Wrapped α) ℕ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : Pow (Wrapped α) ℤ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : RatCast (Wrapped α) where ratCast n := ⟨RatCast.ratCast n⟩`\n`+ instance : SMul ℕ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ≥0 (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℤ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : Sub (Wrapped α) where sub m n := ⟨Sub.sub m.1 n.1⟩`\n`+ instance : Sup (Wrapped α) where sup s t := ⟨Sup.sup s.1 t.1⟩`\n`+ instance : Zero (Wrapped α) where zero := ⟨0⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ slowInstance`\n`++ Wrapped`\n`++ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-05T15:18:04Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HQ0h2",
              "body": "@kmill wonderful. I silenced the `sorry`'s in the first test with `guard_msg`. I also added a second \"real-world\" test which is currently failing. ",
              "createdAt": "2024-08-05T15:21:56Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6a6iN3",
              "body": "### PR summary [37b82b8ef1](https://github.com/leanprover-community/mathlib4/pull/11521/commits/37b82b8ef17b1ab9793d956345afb99cde7b7b0a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped.instField`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ fastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Add (Wrapped α) where add := fun ⟨m⟩ ⟨n⟩ => ⟨m + n⟩`\n`+ instance : Div (Wrapped α) where div m n := ⟨Div.div m.1 n.1⟩`\n`+ instance : Inf (Wrapped α) where inf s t := ⟨Inf.inf s.1 t.1⟩`\n`+ instance : IntCast (Wrapped α) where intCast n := ⟨IntCast.intCast n⟩`\n`+ instance : Inv (Wrapped α) where inv m := ⟨Inv.inv m.1⟩`\n`+ instance : Mul (Wrapped α) where mul := fun ⟨m⟩ ⟨n⟩ => ⟨m * n⟩`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance : NNRatCast (Wrapped α) where nnratCast n := ⟨NNRatCast.nnratCast n⟩`\n`+ instance : NatCast (Wrapped α) where natCast n := ⟨NatCast.natCast n⟩`\n`+ instance : Neg (Wrapped α) where neg m := ⟨Neg.neg m.1⟩`\n`+ instance : One (Wrapped α) where one := ⟨1⟩`\n`+ instance : Pow (Wrapped α) ℕ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : Pow (Wrapped α) ℤ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : RatCast (Wrapped α) where ratCast n := ⟨RatCast.ratCast n⟩`\n`+ instance : SMul ℕ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ≥0 (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℤ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : Sub (Wrapped α) where sub m n := ⟨Sub.sub m.1 n.1⟩`\n`+ instance : Sup (Wrapped α) where sup s t := ⟨Sup.sup s.1 t.1⟩`\n`+ instance : Zero (Wrapped α) where zero := ⟨0⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ slowInstance`\n`++ Wrapped`\n`++ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-17T19:17:26Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bd0RL",
              "body": "### PR summary [d0a3b12d12](https://github.com/leanprover-community/mathlib4/pull/11521/commits/d0a3b12d1285e950be7c214219b5724b165d215b)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped.instField`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ fastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Add (Wrapped α) where add := fun ⟨m⟩ ⟨n⟩ => ⟨m + n⟩`\n`+ instance : Div (Wrapped α) where div m n := ⟨Div.div m.1 n.1⟩`\n`+ instance : Inf (Wrapped α) where inf s t := ⟨Inf.inf s.1 t.1⟩`\n`+ instance : IntCast (Wrapped α) where intCast n := ⟨IntCast.intCast n⟩`\n`+ instance : Inv (Wrapped α) where inv m := ⟨Inv.inv m.1⟩`\n`+ instance : Mul (Wrapped α) where mul := fun ⟨m⟩ ⟨n⟩ => ⟨m * n⟩`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance : NNRatCast (Wrapped α) where nnratCast n := ⟨NNRatCast.nnratCast n⟩`\n`+ instance : NatCast (Wrapped α) where natCast n := ⟨NatCast.natCast n⟩`\n`+ instance : Neg (Wrapped α) where neg m := ⟨Neg.neg m.1⟩`\n`+ instance : One (Wrapped α) where one := ⟨1⟩`\n`+ instance : Pow (Wrapped α) ℕ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : Pow (Wrapped α) ℤ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : RatCast (Wrapped α) where ratCast n := ⟨RatCast.ratCast n⟩`\n`+ instance : SMul ℕ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ≥0 (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℤ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : Sub (Wrapped α) where sub m n := ⟨Sub.sub m.1 n.1⟩`\n`+ instance : Sup (Wrapped α) where sup s t := ⟨Sup.sup s.1 t.1⟩`\n`+ instance : Zero (Wrapped α) where zero := ⟨0⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ slowInstance`\n`++ Wrapped`\n`++ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-22T21:14:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bd1kM",
              "body": "### PR summary [8e6f7431b6](https://github.com/leanprover-community/mathlib4/pull/11521/commits/8e6f7431b6f4bf9a629fd24a4039db39eb9ff928)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-22T21:17:59Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bd5q8",
              "body": "!bench",
              "createdAt": "2025-01-22T21:28:31Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bd5__",
              "body": "Should there also be a test with a measure of some heartbeat count that is smaller with `fast_instance%` than without?",
              "createdAt": "2025-01-22T21:29:22Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bd6-k",
              "body": "### PR summary [92e327721c](https://github.com/leanprover-community/mathlib4/pull/11521/commits/92e327721c3513514aace343a77d61399fe2a3af)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-22T21:31:50Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6beFXn",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/449d8ce1-4b0c-4638-8b3c-aab203dff323) for commit 8e6f7431b6f4bf9a629fd24a4039db39eb9ff928.\nThere were [no significant changes](https://speed.lean-lang.org/mathlib4/compare/fdd48529-a934-40e5-b33d-d3706e8b238e/to/449d8ce1-4b0c-4638-8b3c-aab203dff323) against commit 80283e82493b544a6a60aa1e61bb206268ee11f5.",
              "createdAt": "2025-01-22T21:57:40Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6beFk7",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+20.981⬝10⁹|(+0.01%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/12917798917)",
              "createdAt": "2025-01-22T21:58:09Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6beF-v",
              "body": "Of course, I forgot that the applications are split off now.",
              "createdAt": "2025-01-22T21:59:16Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6beJRZ",
              "body": "I wonder why the PR summary now posts a new comment, rather than updating the old ones.  It seems to be limited to this PR, though.",
              "createdAt": "2025-01-22T22:07:44Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bloZ-",
              "body": "### PR summary [55bc9b1daa](https://github.com/leanprover-community/mathlib4/pull/11521/commits/55bc9b1daaf5c791fd822a9cd650948f137ebd8d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-23T16:33:08Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6blpYP",
              "body": "#20993 has the original changes mostly working on a current master. ~~We has some shenanigans with unknown free variables etc. now though~~ Not on current master",
              "createdAt": "2025-01-23T16:34:49Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bl82e",
              "body": "### PR summary [56ec6a243b](https://github.com/leanprover-community/mathlib4/pull/11521/commits/56ec6a243b14360454cb7ea837371cd3c735f9c9)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-23T16:56:18Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2e15cb4abac65074fea1ed2fadd01ab95cea93d2",
                "additions": 80,
                "deletions": 0,
                "committedDate": "2024-07-11T17:20:10Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "22493806b4ee5c1fbfbe80ce304d1d07b580e6d9",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2024-07-11T17:22:06Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWP0Mg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895837453/job/27336635442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWP0XA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895837454/job/27336635484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPxSA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836993/job/27336634696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPvfw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836994/job/27336634239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWP0Ig",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895837446/job/27336635426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPzWQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836993/job/27336635225"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPwgA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836994/job/27336634496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWP1QA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895837446/job/27336635712"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPyKQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836993/job/27336634921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPxVg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836994/job/27336634710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPv6g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836993/job/27336634346"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWPyFQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836994/job/27336634901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWP0Uw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836993/job/27336635475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWyHIw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9895836994/job/27337197347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWQS-Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27336643321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGXWROOQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b97e168a896159007a105f53842a076092576805",
                "additions": 62197,
                "deletions": 174485,
                "committedDate": "2024-08-01T22:11:58Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4e3ae830f90c11637da7c33786438fd5d4bd4399",
                "additions": 230,
                "deletions": 49,
                "committedDate": "2024-08-02T01:26:08Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VeUQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408361/job/28244794961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VeQA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408383/job/28244794944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VhZw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408591/job/28244795751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4ViDw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408589/job/28244795919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VeSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408362/job/28244794955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VjDQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408591/job/28244796173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4Vgcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408589/job/28244795507"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VfGA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408362/job/28244795160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4ViDg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408591/job/28244795918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VhaQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408589/job/28244795753"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4Vi6Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408589/job/28244796137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4Vgig",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408591/job/28244795530"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VjsA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408591/job/28244796336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4lgcQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10208408589/job/28245057649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4VsfA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28244798588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk4WPXw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "511147ff2c50c07d52a80bd62c8b6be5b1e859b7",
                "additions": 6,
                "deletions": 1,
                "committedDate": "2024-08-02T05:13:00Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LuYw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360738/job/28249878115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LuVQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360742/job/28249878101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LqXw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360298/job/28249877087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LrcQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360299/job/28249877361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LvKw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360750/job/28249878315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LrsA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360298/job/28249877424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LsRA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360299/job/28249877572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LunA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360750/job/28249878172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9Lq4Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360298/job/28249877217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9Lr1A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360299/job/28249877460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9Lqmg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360299/job/28249877146"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LrQQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360298/job/28249877313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9LsLw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360298/job/28249877551"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9ZdVw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10210360299/job/28250103127"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9L8Sw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28249881675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGk9MyHg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f1ffab88ade842e75c5953b1725326447f934b79",
                "additions": 165,
                "deletions": 0,
                "committedDate": "2024-08-05T15:17:12Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmmVzGw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251644186/job/28360143643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmmVxbw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251644185/job/28360143215"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml5ASg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251498080/job/28359671882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml4_2Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251498068/job/28359671769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml44Uw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497478/job/28359669843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml47QQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497475/job/28359670593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml5CJg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251498075/job/28359672358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmmVxnw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251644186/job/28360143263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml489Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497478/job/28359671029"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml45tw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497475/job/28359670199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml5AdQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251498075/job/28359671925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml45gQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497478/job/28359670145"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml489g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497475/job/28359671030"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml44KA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497475/job/28359669800"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml47JA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497478/job/28359670564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml4_WQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497478/job/28359671641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmmWBpw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251497475/job/28360147367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml5j3g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28359680990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGml62Ag",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "37b82b8ef17b1ab9793d956345afb99cde7b7b0a",
                "additions": 451786,
                "deletions": 235716,
                "committedDate": "2025-01-17T19:16:18Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmwFw",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424534/job/35794825239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmwtA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424535/job/35794825396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVr31DA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12843256694/job/35815027980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOEGA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917183798/job/36023010328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmubA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424539/job/35794824812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYlysw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835419149/job/35794809523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVr31Ig",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12843256698/job/35815028002"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOEEw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917183805/job/36023010323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYlyoQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835419144/job/35794809505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVr31Gw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12843256695/job/35815027995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOFHw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917183799/job/36023010591"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYly2w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835419148/job/35794809563"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmxRA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424534/job/35794825540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmyGQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424535/job/35794825753"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYl0HQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835419148/job/35794809885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmzXQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424535/job/35794826077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVY8FGg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12835424534/job/35795174682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYmM3w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35794816223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYlsmw",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVYnO0g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d0a3b12d1285e950be7c214219b5724b165d215b",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2025-01-22T21:13:46Z",
                "author": {
                  "name": "Matthew Robert Ballard",
                  "email": "100034030+mattrobball@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOjOA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186290/job/36023018296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOl8A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186556/job/36023018992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOluw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186554/job/36023018939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOitA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186293/job/36023018164"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOm2g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186552/job/36023019226"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOjrg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186293/job/36023018414"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOkyw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186290/job/36023018699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOlvQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186552/job/36023018941"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyikuA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186293/job/36023346360"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyOmlQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917186290/job/36023019157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyPGwQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36023027393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyPhxw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8e6f7431b6f4bf9a629fd24a4039db39eb9ff928",
                "additions": 0,
                "deletions": 159,
                "committedDate": "2025-01-22T21:17:00Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYgOA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917238802/job/36023181368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYywKoA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917364399/job/36023569056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYluA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917239818/job/36023182776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYywLoQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917364407/job/36023569313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYlxg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917239821/job/36023182790"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYywLkw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917364408/job/36023569299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyinJA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917238831/job/36023346980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYmpA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917239853/job/36023183012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyioTg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917238831/job/36023347278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYeyQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917238802/job/36023181001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYn3Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917239853/job/36023183325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYzNtLA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917238831/job/36024053036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyYhgw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917238802/job/36023181699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyZEoQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36023190689"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYyaA6w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "92e327721c3513514aace343a77d61399fe2a3af",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-01-22T21:30:55Z",
                "author": {
                  "name": "Matthew Robert Ballard",
                  "email": "100034030+mattrobball@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_lPA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439041/job/36023821628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_j-A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439265/job/36023821304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_jvw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439270/job/36023821247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYzNusA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439048/job/36024053424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_laQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439275/job/36023821673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYzNvqg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439048/job/36024053674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_jOg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439041/job/36023821114"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_kLg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439275/job/36023821358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy_mjQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439041/job/36023821965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYzyUBQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12917439048/job/36024652805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYy__jQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36023828365"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYzBBJw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "55bc9b1daaf5c791fd822a9cd650948f137ebd8d",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2025-01-23T16:32:08Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh3vZg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933711797/job/36072976230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh34cA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933712648/job/36072978544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh343g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933712662/job/36072978654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh3uyg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933711806/job/36072976074"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh36JQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933712647/job/36072978981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh3tUw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933711806/job/36072975699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh3tEA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933711797/job/36072975632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh34vg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933712647/job/36072978622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh3xIw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933711797/job/36072976675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZiXevw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12933711806/job/36073496255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh4foQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36072988577"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZh5njg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "56ec6a243b14360454cb7ea837371cd3c735f9c9",
                "additions": 3,
                "deletions": 5,
                "committedDate": "2025-01-23T16:55:16Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN2DA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127141/job/36074386956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN9sA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127919/job/36074388912"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN9kg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127914/job/36074388882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN2FQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127137/job/36074386965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN9xw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127915/job/36074388935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN3cA",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127137/job/36074387312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN3tQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127141/job/36074387381"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN-8Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127915/job/36074389233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjN5Vg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127141/job/36074387798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjOguQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36074397881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIZjQFxA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-03-20T00:05:11Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FastInstance.lean",
              "additions": 131,
              "deletions": 0
            },
            {
              "path": "MathlibTest/fast_instance.lean",
              "additions": 139,
              "deletions": 0
            }
          ]
        },
        "headRefName": "fast_instance",
        "headRefOid": "56ec6a243b14360454cb7ea837371cd3c735f9c9",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5qKUgX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZFQie",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2025-01-22T21:13:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50GQEj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-03-20T01:14:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZFVBH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2025-01-22T21:25:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YnIFo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-18T10:33:31Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 11521,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c50FrSv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-03-20T00:05:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50FrfI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-03-20T00:05:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50GQEj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-03-20T01:14:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50lMae",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-22T22:53:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50mU6B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-03-23T01:04:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50mac8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-03-23T01:29:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50mm48",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-03-23T01:58:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50mnmn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-03-23T02:15:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50m2_i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-03-23T08:37:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50nB0E",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-03-23T14:24:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ER7_Y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-08-05T15:26:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YnIFo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-18T10:33:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZFQie",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2025-01-22T21:13:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZFVBH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2025-01-22T21:25:19Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbAl",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n```\n",
                    "createdAt": "2024-03-20T00:05:30Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbAn",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\nimport Mathlib.Tactic.FastInstance\nimport Mathlib.Tactic.FieldSimp\n```\n",
                    "createdAt": "2024-03-20T00:05:30Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbAp",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n```\n",
                    "createdAt": "2024-03-20T00:05:30Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbAq",
                    "body": "**[imports]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\nimport Mathlib.Tactic.FastInstance\nimport Mathlib.Tactic.FieldSimp\n```\n",
                    "createdAt": "2024-03-20T00:05:30Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbEC",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  let (mvars, binders, _body_) ← forallMetaTelescope (← inferType e)\n```\n",
                    "createdAt": "2024-03-20T00:05:48Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbEE",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  guard (← isDefEq (← inferType e) expectedType)\n```\n",
                    "createdAt": "2024-03-20T00:05:48Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bRbEH",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n      if let .some new_arg ← trySynthInstance (← inferType arg) then\n```\n",
                    "createdAt": "2024-03-20T00:05:48Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bR4Cy",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  | `(term| fast_instance% $arg), expectedType => do\n```\n",
                    "createdAt": "2024-03-20T01:14:09Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bkfdT",
                    "body": "There's something weird happening with a free variable on this one.",
                    "createdAt": "2024-03-22T22:53:12Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5blMfO",
                    "body": "Is it still a hassle to use `addDecl` here to add `new_arg` to the environment as an instance? ",
                    "createdAt": "2024-03-23T01:03:50Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5blbki",
                    "body": "Clarification: this isn't in scope for this but I would like to know. ",
                    "createdAt": "2024-03-23T01:58:38Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5blcIC",
                    "body": "Adding new declarations in this elaborator feels a little too magic to me; but feel free to create a branch targeting this PR and see what the benchmark says.",
                    "createdAt": "2024-03-23T02:15:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5blRIO",
                    "body": "Line 97 and below have more `slow_instance%`’s",
                    "createdAt": "2024-03-23T01:29:26Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5blpoC",
                    "body": "```suggestion\nAuthors: Eric Wieser\n```\nAlthough I imagine that you know better what you want people to call you!  ;-)",
                    "createdAt": "2024-03-23T08:36:36Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5blpqk",
                    "body": "```suggestion\n  -- the parameters should have been assigned by unification\n```\n",
                    "createdAt": "2024-03-23T08:37:20Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bl0jt",
                    "body": "Should be there at reducible and instance transparency?",
                    "createdAt": "2024-03-23T14:24:03Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5llXDB",
                    "body": "Here we have an argument which is not a class so it is not visited. But it contains a class instance itself as an argument. The current implementation just leaves it as how `Function.Injective` built it. Replacing it wholecloth with the existing instance would avoid having to disassemble the argument during unification.",
                    "createdAt": "2024-08-05T15:26:19Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5yzBDC",
                    "body": "Hmm. After taking another the test doesn't seem to check this. Let's just revert back to what was before, re-bench, and then merge.",
                    "createdAt": "2025-01-22T21:13:38Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ygLgF",
                    "body": "This should fix the linter failure.\r\n```suggestion\r\nimport Lean\r\nimport Mathlib.Init\r\n",
                    "createdAt": "2025-01-18T10:33:31Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yzD6D",
                    "body": "```suggestion\r\n    Use `set_option trace.Elab.fast_instance true` to analyze the error.\\n\\n\\\r\n```",
                    "createdAt": "2025-01-22T21:25:19Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN2DA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127141/job/36074386956"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN9sA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127919/job/36074388912"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN9kg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127914/job/36074388882"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN2FQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127137/job/36074386965"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN9xw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127915/job/36074388935"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN3cA",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127137/job/36074387312"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN3tQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127141/job/36074387381"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN-8Q",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127915/job/36074389233"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjN5Vg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12934127141/job/36074387798"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjOguQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36074397881"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIZjQFxA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11521&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: add `fast_instance%` elaborator",
        "updatedAt": "2025-01-23T16:56:20Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/11521",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALV1eeB",
              "createdAt": "2024-03-20T00:05:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALV1eeK",
              "createdAt": "2024-03-20T00:05:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALV1eeY",
              "createdAt": "2024-03-20T00:05:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50FrSv",
              "createdAt": "2024-03-20T00:05:30Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50FrfI",
              "createdAt": "2024-03-20T00:05:48Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50GQEj",
              "createdAt": "2024-03-20T01:14:09Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53t1zs",
              "createdAt": "2024-03-20T01:22:35Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53uEqf",
              "createdAt": "2024-03-20T02:11:51Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/0c2d8124-56c7-451d-91be-69fdd3747969) for commit 02e5f990e1584126610890b97f8b4be4efec4214.\nThe entire run failed.\nFound no significant differences.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53v6Bs",
              "createdAt": "2024-03-20T08:45:49Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53wDcp",
              "createdAt": "2024-03-20T09:10:46Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/b45973c3-31bc-4235-b80b-90592ed84b81) for commit f31997b25e8c090645e512ba514fe29a9a427c8f.\nThe entire run failed.\nFound no significant differences.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RijcE",
              "createdAt": "2024-03-20T09:11:51Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5qDrws",
                "title": "[Merged by Bors] - chore: Rename `coe_nat`/`coe_int`/`coe_rat` to `natCast`/`intCast`/`ratCast`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/11499"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53wN5i",
              "createdAt": "2024-03-20T09:36:13Z",
              "body": "Ping me when ready. I think metaprogramming to hide preferred parent and even intermediate structure internals is the future and am glad this got started. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53wnE_",
              "createdAt": "2024-03-20T10:31:57Z",
              "body": "Feel free to push things to this branch to get linting passing, so that we have a benchmark.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53xFKP",
              "createdAt": "2024-03-20T11:31:10Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6C6OGFzwAAAALWMgIz",
              "createdAt": "2024-03-20T11:40:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53xPsU",
              "createdAt": "2024-03-20T11:56:26Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/c57e1eee-7f86-4b67-a82c-46774bfc853f) for commit ce19211a584fc4db8bd8c69eea1e72f34fc0f87f.\nThere were [no significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/c57e1eee-7f86-4b67-a82c-46774bfc853f) against commit 69fd837a71463d8905afbf335b908a035aa11a7e.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RiwMM",
              "createdAt": "2024-03-20T12:26:39Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5nB5nf",
                "title": "perf(Sub*): use direct inheritance for algebraic instances on subtypes",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10617"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KYN6",
              "createdAt": "2024-03-22T21:51:03Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KY9o",
              "createdAt": "2024-03-22T21:53:58Z",
              "body": "One comment: I think `compact_instance%` would be a more fitting name",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54Kf4K",
              "createdAt": "2024-03-22T22:23:00Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KjoB",
              "createdAt": "2024-03-22T22:33:41Z",
              "body": "> One comment: I think `compact_instance%` would be a more fitting name\r\n\r\nSure, that sounds reasonable; though I'll refrain from doing so until I have a benchmark that indicates this actually helps.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KkCg",
              "createdAt": "2024-03-22T22:35:48Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/5c0265b7-6a83-419a-9258-1017636ece6d) for commit 3e91dd17dcebf31f5a53cbe7eacf09e933195294.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/5c0265b7-6a83-419a-9258-1017636ece6d) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -10.3%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -8.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.0%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.0%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.6%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.5%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KlQV",
              "createdAt": "2024-03-22T22:40:36Z",
              "body": "That is pretty good",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KmNj",
              "createdAt": "2024-03-22T22:45:52Z",
              "body": "I think the changes in #11029 should be useful to focus the use of the compactor. There I just make versions of `Function.Injective/Surjective` instances taking bundled class instance from the target/source instead of just the data. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54Kni2",
              "createdAt": "2024-03-22T22:52:47Z",
              "body": "Huh, I guess the benchmark doesn't care about shake output; so we're going to get a repeat.\r\n\r\nWhat this doesn't tell us is which `fast_instance%`s are carrying the weight; but maybe we don't care.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50lMae",
              "createdAt": "2024-03-22T22:53:12Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54KpkO",
              "createdAt": "2024-03-22T22:59:53Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/f347a7c9-d5c8-4c37-9856-525d319f20b1) for commit 27f7d4702a224e4d8e822ca2333d527e5b334ab2.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/f347a7c9-d5c8-4c37-9856-525d319f20b1) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -10.3%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -8.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.0%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.0%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.6%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.5%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54K9AD",
              "createdAt": "2024-03-22T23:35:33Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54LCPU",
              "createdAt": "2024-03-22T23:46:14Z",
              "body": "`RingTheory.NonUnitalSubsemiring.Basic` is another target.",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54LKZU",
              "createdAt": "2024-03-23T00:00:50Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/0be42ab7-df41-4ea7-93c9-24da90211a38) for commit d633325c810cca0546413f60eaae7b3cc3da083f.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/0be42ab7-df41-4ea7-93c9-24da90211a38) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -45.4%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -9.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.1%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.4%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.7%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.5%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.NumberTheory.RamificationInertia              instructions    -3.9%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50mU6B",
              "createdAt": "2024-03-23T01:03:50Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50mac8",
              "createdAt": "2024-03-23T01:29:26Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54LhjC",
              "createdAt": "2024-03-23T01:37:10Z",
              "body": "I think with the comments those are all the obvious application spots",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54Lkeu",
              "createdAt": "2024-03-23T01:49:55Z",
              "body": "Whoops, wrong command beginning with`b`",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54LkfF",
              "createdAt": "2024-03-23T01:49:57Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALYjl_P",
              "createdAt": "2024-03-23T01:50:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6C6OGFzwAAAALYjmBf",
              "createdAt": "2024-03-23T01:50:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54Lki1",
              "createdAt": "2024-03-23T01:50:14Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6C6OGFzwAAAALYjm3E",
              "createdAt": "2024-03-23T01:50:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALYjm3I",
              "createdAt": "2024-03-23T01:50:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALYjm3O",
              "createdAt": "2024-03-23T01:50:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54Llmp",
              "createdAt": "2024-03-23T01:57:22Z",
              "body": "> Whoops, wrong command beginning with`b`\n\nBut that doesn't begin with a `b` :) ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54LnAG",
              "createdAt": "2024-03-23T02:15:43Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/abf54b58-416b-48b3-8ff0-07c0e038345e) for commit 5b956b683359c1f609afdd04aa67ffe08e563b47.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/1fa7b43f-361e-40fa-90a0-aaa1a6372cee/to/abf54b58-416b-48b3-8ff0-07c0e038345e) against commit 69fd837a71463d8905afbf335b908a035aa11a7e:\n```diff\n  Benchmark                                              Metric         Change\n  ============================================================================\n+ ~Mathlib.Algebra.Algebra.Subalgebra.Unitization        instructions   -14.7%\n+ ~Mathlib.Algebra.Order.Nonneg.Ring                     instructions   -30.7%\n+ ~Mathlib.AlgebraicGeometry.GammaSpecAdjunction         instructions   -11.0%\n+ ~Mathlib.AlgebraicGeometry.Spec                        instructions   -13.0%\n+ ~Mathlib.FieldTheory.AbelRuffini                       instructions   -45.4%\n+ ~Mathlib.FieldTheory.Adjoin                            instructions    -9.9%\n+ ~Mathlib.FieldTheory.PurelyInseparable                 instructions   -13.1%\n+ ~Mathlib.FieldTheory.SeparableDegree                   instructions   -20.4%\n+ ~Mathlib.FieldTheory.Subfield                          instructions   -14.6%\n+ ~Mathlib.FieldTheory.Subfield.Order                    instructions   -76.7%\n+ ~Mathlib.NumberTheory.NumberField.CanonicalEmbedding   instructions    -7.8%\n+ ~Mathlib.NumberTheory.NumberField.ClassNumber          instructions   -17.6%\n+ ~Mathlib.NumberTheory.NumberField.Discriminant         instructions    -8.9%\n+ ~Mathlib.NumberTheory.NumberField.FractionalIdeal      instructions   -20.4%\n+ ~Mathlib.NumberTheory.NumberField.Units                instructions    -6.1%\n+ ~Mathlib.NumberTheory.RamificationInertia              instructions    -3.9%\n+ ~Mathlib.RingTheory.Subring.Order                      instructions   -79.3%\n+ ~Mathlib.RingTheory.Subsemiring.Order                  instructions   -64.5%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50m2_i",
              "createdAt": "2024-03-23T08:36:36Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50nB0E",
              "createdAt": "2024-03-23T14:24:03Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54MyPr",
              "createdAt": "2024-03-23T22:19:58Z",
              "body": "I made a variation on the implementation where, in the recursion, rather than synthesizing arguments, it synthesizes the whole expression. When that fails, it does whnf to get the fields of the structure to recurse. It also uses `provided`'s fields while synthesizing instances due to the fact that it's able to get the fields via whnf rather than using defeq (and hoping defeq does the right thing -- I have a small, but unconfirmed, worry about using defeq since the fields might not be reduced that way).\r\n\r\nThis has revealed that there are some instances that are only defeq at default transparency. For example, in `Mathlib/RingTheory/Congruence.lean` this instance has a problem:\r\n```\r\n-- RingCon.instNonUnitalNonAssocSemiringQuotientToAddToDistribToMul\r\nset_option trace.Tactic.fast_instance true\r\ninstance [NonUnitalNonAssocSemiring R] (c : RingCon R) : NonUnitalNonAssocSemiring c.Quotient :=\r\n  fast_instance%\r\n  Function.Surjective.nonUnitalNonAssocSemiring _ Quotient.surjective_Quotient_mk'' rfl\r\n    (fun _ _ => rfl) (fun _ _ => rfl) fun _ _ => rfl\r\n/-\r\n  [] ❌ type: Mul (RingCon.Quotient c) ▼\r\n    [] defeq only at default transparency \r\n\r\nProvided instance \r\n  { mul := fun x x_1 ↦ x * x_1 }\r\nis not defeq to inferred instance\r\n  { mul := Quotient.map₂' (fun x x_1 ↦ x * x_1) ⋯ }\r\n-/\r\n```\r\nNote that in my code I'm doing whnf when doing the \"provided instance ...\" error. That can be removed, I was just trying to understand what's the difference.\r\n\r\n```lean\r\nprivate partial def makeFastInstance (provided : Expr) : MetaM Expr := do\r\n  let ty ← inferType provided\r\n  withTraceNode `Tactic.fast_instance (fun e => return m!\"{exceptEmoji e} type: {ty}\") do\r\n  let .some className ← isClass? ty\r\n    | throwError \"Can only be used for classes, but given term of type{indentExpr ty}\"\r\n  if let .some new ← trySynthInstance ty then\r\n    if ← withReducibleAndInstances <| isDefEq provided new then\r\n      trace[Tactic.fast_instance] \"replaced with synthesized instance\"\r\n      return new\r\n    else\r\n      if ← withDefault <| isDefEq provided new then\r\n        trace[Tactic.fast_instance] \"defeq only at default transparency\"\r\n      withReducibleAndInstances do\r\n      -- uncomment these to see reduced terms. occasionally useful\r\n      --let provided ← whnf provided\r\n      --let new ← whnf new\r\n      throwError \"\\\r\n        Provided instance {indentExpr provided}\\n\\\r\n        is not defeq to inferred instance{indentExpr new}\"\r\n  let ctor := getStructureCtor (← getEnv) className\r\n  withReducible <| forallTelescopeReducing ty fun tyArgs _ => do\r\n    let provided' ← withReducibleAndInstances <| whnf <| mkAppN provided tyArgs\r\n    unless provided'.isAppOf ctor.name do\r\n      throwError \"\\\r\n        Provided instance does not reduce to constructor application{indentExpr provided}\"\r\n    let mut args := provided'.getAppArgs\r\n    let instParams ← withReducible <| forallTelescopeReducing ctor.type fun args _ =>\r\n      args.mapM fun arg => return (← arg.fvarId!.getBinderInfo).isInstImplicit\r\n    unless args.size == instParams.size do\r\n      throwError \"Incorrect number of arguments for constructor application{indentExpr provided}\"\r\n    for i in [ctor.numParams:args.size] do\r\n      if instParams[i]! then\r\n        args := args.set! i (← makeFastInstance args[i]!)\r\n    let provided' := mkAppN provided'.getAppFn args\r\n    mkLambdaFVars tyArgs provided'\r\n```\r\n\r\nAt first I thought it was a bug in my code, but after a lot of debugging, my guess is that it's because in your version the instance in question contains metavariables so instance synthesis fails and so it doesn't realize there's a problem.\r\n\r\nBy the way, I changed the elaborator to have this body:\r\n```lean\r\n    let provided ← Elab.Term.withSynthesize do\r\n      Elab.Term.elabTermEnsuringType arg expectedType\r\n    try\r\n      makeFastInstance (← instantiateMVars provided)\r\n    catch e =>\r\n      logError m!\"\\\r\n        Error when normalizing instance. Use `set_option trace.Tactic.fast_instance true \\\r\n        to analyze error.\\n\\n\\\r\n        {e.toMessageData}\"\r\n      return provided\r\n```",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54N26N",
              "createdAt": "2024-03-24T18:40:40Z",
              "body": "@kmill Here are the issues I found with this: \n\nSubmodule.Quotient.module' in Mathlib.LinearAlgebra.Quotient\ninstNonUnitalNonAssocSemiringQuotientToAddToDistribToMul in Mathlib.RingTheory.Congruence\ninstNonUnitalNonAssocRingQuotientToAddToDistribToNonUnitalNonAssocSemiringToMul in Mathlib.RingTheory.Congruence\nCauSeq.Completion.Cauchy.ring in Mathlib.Algebra.Order.CauSeq.Completion\n\nThe first is because the `InjSurj` module constructor is not marked `reducible`. #11631\n\nThe next two can be solved by marking various `Quotient` wrappers for `RingCon`, `Con`, and `AddCon` `reducible`. Though there is still something going on since `inferInstance` is not firing on `AddCon` classes for `RingCon`. #11632 \n\nThe last is amusing. The extra `mul := ( . * . )` fields block reduction because the `Mul` instance uses `Quotient.map\\2` which probably should not be reducible. They are easy enough to delete. #11627",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54N3sB",
              "createdAt": "2024-03-24T18:42:40Z",
              "body": "I would also avoid the `whnf` calls for the debugging error. It took me extra time to actually figure out where the offending instances were coming from. When I deleted those, it pointed me to the parent projection immediately. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54N7R4",
              "createdAt": "2024-03-24T19:33:43Z",
              "body": "@mattrobball Sorry that the whnf caused you issues. It's not a good default, and I pointed it out so you could know to comment it out. I needed both ways to understand that there was an issue.\r\n\r\nThanks for investigating this further!",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54N7-D",
              "createdAt": "2024-03-24T19:37:59Z",
              "body": "No need to apologize. Just relaying my experience. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RoU8a",
              "createdAt": "2024-03-25T02:05:26Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ql0VT",
                "title": "chore(Algebra.Ring.InjSurj): remove redundant `mul` and `add` fields ",
                "url": "https://github.com/leanprover-community/mathlib4/pull/11627"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54UiXR",
              "createdAt": "2024-03-25T18:31:26Z",
              "body": "After a brute force regex insertions and an attempt to build, @kmill 's implementation seems to handle things a bit more gracefully. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54WApC",
              "createdAt": "2024-03-25T22:32:19Z",
              "body": "@kmill, I'm quite happy for you to take over from me on this; I've clearly communicated the idea well enough, your code is a bit more polished, and hopefully this is something that the FRO can justify allocating your paid time towards :)",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54WDTt",
              "createdAt": "2024-03-25T22:41:53Z",
              "body": "In truth, I am happy to merge either version once the two are reconciled and the name is finalized. I guess `normalize` is ok but it is quite generic. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54WD19",
              "createdAt": "2024-03-25T22:44:05Z",
              "body": "@eric-wieser I spent more time on this than I should already, and I wouldn't be able to pick up on it again for a while. I'm happy for you to claim ownership of what I wrote, and I can review if you ping me :-)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6C6OGFzwAAAALcCdr_",
              "createdAt": "2024-03-28T13:25:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c58fpfr",
              "createdAt": "2024-05-01T15:54:03Z",
              "body": "Time has worn away preferences. Let's get this in any state, including its current one.",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5TVnQQ",
              "createdAt": "2024-06-16T23:36:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5yUz_a",
                "title": "perf(Algebra/{Group, GroupWithZero, Ring}/InjSurj): reduce everything",
                "url": "https://github.com/leanprover-community/mathlib4/pull/13795"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6C6OGFzwAAAAMhHmr6",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Tzxm6",
              "createdAt": "2024-07-11T11:45:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c50u15r",
                "title": "[Merged by Bors] - chore(RingTheory/AdicCompletion): manual instances",
                "url": "https://github.com/leanprover-community/mathlib4/pull/14534"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2e15cb4abac65074fea1ed2fadd01ab95cea93d2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "22493806b4ee5c1fbfbe80ce304d1d07b580e6d9"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6C6OGFzwAAAAMjLQto",
              "createdAt": "2024-07-11T17:23:53Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Eh82E",
              "createdAt": "2024-07-11T17:24:33Z",
              "body": "### PR summary [22493806b4](https://github.com/leanprover-community/mathlib4/pull/11521/commits/22493806b4ee5c1fbfbe80ce304d1d07b580e6d9)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic.FastInstance` `Mathlib.Tactic`|1|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ elabFastInstance`\n`+ instRing`\n`+ instSemiring`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Eh9Pg",
              "createdAt": "2024-07-11T17:25:25Z",
              "body": "I took the liberty to split the new files from the applications to avoid rotting. The original state is on branch#fast_instance_temp. \r\n\r\n@eric-wieser please do as you wish with this, including reverting",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6C6OGFzwAAAAMjL00z",
              "createdAt": "2024-07-11T17:34:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6C6OGFzwAAAAMjL9tP",
              "createdAt": "2024-07-11T17:37:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5T0ehm",
              "createdAt": "2024-07-11T21:47:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c50Nk5v",
                "title": "[Merged by Bors] - feat(RingTheory/AdicCompletion): comparison with tensor product",
                "url": "https://github.com/leanprover-community/mathlib4/pull/14358"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FAd0B",
              "createdAt": "2024-07-16T17:53:49Z",
              "body": "@eric-wieser I think it would be great to get this in soon. Is there anything we're still waiting on?",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b97e168a896159007a105f53842a076092576805"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6G89Kd",
              "createdAt": "2024-08-01T22:32:02Z",
              "body": "I'm working on this right now, and I'll push some updates soon.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4e3ae830f90c11637da7c33786438fd5d4bd4399"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6G9sHs",
              "createdAt": "2024-08-02T01:27:41Z",
              "body": "### PR summary [4e3ae830f9](https://github.com/leanprover-community/mathlib4/pull/11521/commits/4e3ae830f90c11637da7c33786438fd5d4bd4399)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance`|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec2`\n`+ elabFastInstance`\n`+ error`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6G9tTS",
              "createdAt": "2024-08-02T01:33:15Z",
              "body": "Pushed a new version of the algorithm I had in my comment. There's a question about how to handle things like Decidable instances that aren't canonical and that don't reduce to a constructor — I had to make a decision for sake of getting something down, and you can see the error message in the tests.\r\n\r\nPlease let me know if you notice any problems with the logic! It recursively visits non-Prop class arguments of constructors.\r\n\r\nIn case it's useful, I'll see if we can get a term version of `where` syntax so we can replace `where ...` with `:= fast_instance% termWhere ...` (with `termWhere` a placeholder), though I seem to remember most (or all?) cases of `fast_instance%` didn't need this.  (On an airplane that's about to land, had to push and write this comment quickly.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "511147ff2c50c07d52a80bd62c8b6be5b1e859b7"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6G-qNc",
              "createdAt": "2024-08-02T05:13:46Z",
              "body": "### PR summary [511147ff2c](https://github.com/leanprover-community/mathlib4/pull/11521/commits/511147ff2c50c07d52a80bd62c8b6be5b1e859b7)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance`|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HAJmc",
              "createdAt": "2024-08-02T09:29:56Z",
              "body": "Great! Thanks. I should be able to take a look this afternoon. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f1ffab88ade842e75c5953b1725326447f934b79"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HQymo",
              "createdAt": "2024-08-05T15:18:04Z",
              "body": "### PR summary [f1ffab88ad](https://github.com/leanprover-community/mathlib4/pull/11521/commits/f1ffab88ade842e75c5953b1725326447f934b79)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance`|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped.instField`\n`+ dec2`\n`+ elabFastInstance`\n`+ fastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Add (Wrapped α) where add := fun ⟨m⟩ ⟨n⟩ => ⟨m + n⟩`\n`+ instance : Div (Wrapped α) where div m n := ⟨Div.div m.1 n.1⟩`\n`+ instance : Inf (Wrapped α) where inf s t := ⟨Inf.inf s.1 t.1⟩`\n`+ instance : IntCast (Wrapped α) where intCast n := ⟨IntCast.intCast n⟩`\n`+ instance : Inv (Wrapped α) where inv m := ⟨Inv.inv m.1⟩`\n`+ instance : Mul (Wrapped α) where mul := fun ⟨m⟩ ⟨n⟩ => ⟨m * n⟩`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance : NNRatCast (Wrapped α) where nnratCast n := ⟨NNRatCast.nnratCast n⟩`\n`+ instance : NatCast (Wrapped α) where natCast n := ⟨NatCast.natCast n⟩`\n`+ instance : Neg (Wrapped α) where neg m := ⟨Neg.neg m.1⟩`\n`+ instance : One (Wrapped α) where one := ⟨1⟩`\n`+ instance : Pow (Wrapped α) ℕ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : Pow (Wrapped α) ℤ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : RatCast (Wrapped α) where ratCast n := ⟨RatCast.ratCast n⟩`\n`+ instance : SMul ℕ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ≥0 (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℤ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : Sub (Wrapped α) where sub m n := ⟨Sub.sub m.1 n.1⟩`\n`+ instance : Sup (Wrapped α) where sup s t := ⟨Sup.sup s.1 t.1⟩`\n`+ instance : Zero (Wrapped α) where zero := ⟨0⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ slowInstance`\n`++ Wrapped`\n`++ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HQ0h2",
              "createdAt": "2024-08-05T15:21:56Z",
              "body": "@kmill wonderful. I silenced the `sorry`'s in the first test with `guard_msg`. I also added a second \"real-world\" test which is currently failing. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ER7_Y",
              "createdAt": "2024-08-05T15:26:19Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5y8B4k",
              "createdAt": "2025-01-16T00:19:01Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6H7hns",
                "title": "fix: prevent `exact?` recursing forever on `n = 55`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20784"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "37b82b8ef17b1ab9793d956345afb99cde7b7b0a"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6a6iN3",
              "createdAt": "2025-01-17T19:17:26Z",
              "body": "### PR summary [37b82b8ef1](https://github.com/leanprover-community/mathlib4/pull/11521/commits/37b82b8ef17b1ab9793d956345afb99cde7b7b0a)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|2|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped.instField`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ fastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Add (Wrapped α) where add := fun ⟨m⟩ ⟨n⟩ => ⟨m + n⟩`\n`+ instance : Div (Wrapped α) where div m n := ⟨Div.div m.1 n.1⟩`\n`+ instance : Inf (Wrapped α) where inf s t := ⟨Inf.inf s.1 t.1⟩`\n`+ instance : IntCast (Wrapped α) where intCast n := ⟨IntCast.intCast n⟩`\n`+ instance : Inv (Wrapped α) where inv m := ⟨Inv.inv m.1⟩`\n`+ instance : Mul (Wrapped α) where mul := fun ⟨m⟩ ⟨n⟩ => ⟨m * n⟩`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance : NNRatCast (Wrapped α) where nnratCast n := ⟨NNRatCast.nnratCast n⟩`\n`+ instance : NatCast (Wrapped α) where natCast n := ⟨NatCast.natCast n⟩`\n`+ instance : Neg (Wrapped α) where neg m := ⟨Neg.neg m.1⟩`\n`+ instance : One (Wrapped α) where one := ⟨1⟩`\n`+ instance : Pow (Wrapped α) ℕ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : Pow (Wrapped α) ℤ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : RatCast (Wrapped α) where ratCast n := ⟨RatCast.ratCast n⟩`\n`+ instance : SMul ℕ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ≥0 (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℤ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : Sub (Wrapped α) where sub m n := ⟨Sub.sub m.1 n.1⟩`\n`+ instance : Sup (Wrapped α) where sup s t := ⟨Sup.sup s.1 t.1⟩`\n`+ instance : Zero (Wrapped α) where zero := ⟨0⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ slowInstance`\n`++ Wrapped`\n`++ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6YnIFo",
              "createdAt": "2025-01-18T10:33:31Z",
              "body": "",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d0a3b12d1285e950be7c214219b5724b165d215b"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bd0RL",
              "createdAt": "2025-01-22T21:14:38Z",
              "body": "### PR summary [d0a3b12d12](https://github.com/leanprover-community/mathlib4/pull/11521/commits/d0a3b12d1285e950be7c214219b5724b165d215b)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped.instField`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ fastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Add (Wrapped α) where add := fun ⟨m⟩ ⟨n⟩ => ⟨m + n⟩`\n`+ instance : Div (Wrapped α) where div m n := ⟨Div.div m.1 n.1⟩`\n`+ instance : Inf (Wrapped α) where inf s t := ⟨Inf.inf s.1 t.1⟩`\n`+ instance : IntCast (Wrapped α) where intCast n := ⟨IntCast.intCast n⟩`\n`+ instance : Inv (Wrapped α) where inv m := ⟨Inv.inv m.1⟩`\n`+ instance : Mul (Wrapped α) where mul := fun ⟨m⟩ ⟨n⟩ => ⟨m * n⟩`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance : NNRatCast (Wrapped α) where nnratCast n := ⟨NNRatCast.nnratCast n⟩`\n`+ instance : NatCast (Wrapped α) where natCast n := ⟨NatCast.natCast n⟩`\n`+ instance : Neg (Wrapped α) where neg m := ⟨Neg.neg m.1⟩`\n`+ instance : One (Wrapped α) where one := ⟨1⟩`\n`+ instance : Pow (Wrapped α) ℕ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : Pow (Wrapped α) ℤ where pow m n := ⟨Pow.pow m.1 n⟩`\n`+ instance : RatCast (Wrapped α) where ratCast n := ⟨RatCast.ratCast n⟩`\n`+ instance : SMul ℕ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℚ≥0 (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : SMul ℤ (Wrapped α) where smul n m := ⟨SMul.smul n m.1⟩`\n`+ instance : Sub (Wrapped α) where sub m n := ⟨Sub.sub m.1 n.1⟩`\n`+ instance : Sup (Wrapped α) where sup s t := ⟨Sup.sup s.1 t.1⟩`\n`+ instance : Zero (Wrapped α) where zero := ⟨0⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ slowInstance`\n`++ Wrapped`\n`++ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e6f7431b6f4bf9a629fd24a4039db39eb9ff928"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bd1kM",
              "createdAt": "2025-01-22T21:17:59Z",
              "body": "### PR summary [8e6f7431b6](https://github.com/leanprover-community/mathlib4/pull/11521/commits/8e6f7431b6f4bf9a629fd24a4039db39eb9ff928)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ZFVBH",
              "createdAt": "2025-01-22T21:25:19Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bd5q8",
              "createdAt": "2025-01-22T21:28:31Z",
              "body": "!bench",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bd5__",
              "createdAt": "2025-01-22T21:29:22Z",
              "body": "Should there also be a test with a measure of some heartbeat count that is smaller with `fast_instance%` than without?",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "92e327721c3513514aace343a77d61399fe2a3af"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bd6-k",
              "createdAt": "2025-01-22T21:31:50Z",
              "body": "### PR summary [92e327721c](https://github.com/leanprover-community/mathlib4/pull/11521/commits/92e327721c3513514aace343a77d61399fe2a3af)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6beFXn",
              "createdAt": "2025-01-22T21:57:40Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/449d8ce1-4b0c-4638-8b3c-aab203dff323) for commit 8e6f7431b6f4bf9a629fd24a4039db39eb9ff928.\nThere were [no significant changes](https://speed.lean-lang.org/mathlib4/compare/fdd48529-a934-40e5-b33d-d3706e8b238e/to/449d8ce1-4b0c-4638-8b3c-aab203dff323) against commit 80283e82493b544a6a60aa1e61bb206268ee11f5.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6beFk7",
              "createdAt": "2025-01-22T21:58:09Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+20.981⬝10⁹|(+0.01%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/12917798917)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6beF-v",
              "createdAt": "2025-01-22T21:59:16Z",
              "body": "Of course, I forgot that the applications are split off now.",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6beJRZ",
              "createdAt": "2025-01-22T22:07:44Z",
              "body": "I wonder why the PR summary now posts a new comment, rather than updating the old ones.  It seems to be limited to this PR, though.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "55bc9b1daaf5c791fd822a9cd650948f137ebd8d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bloZ-",
              "createdAt": "2025-01-23T16:33:08Z",
              "body": "### PR summary [55bc9b1daa](https://github.com/leanprover-community/mathlib4/pull/11521/commits/55bc9b1daaf5c791fd822a9cd650948f137ebd8d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6blpYP",
              "createdAt": "2025-01-23T16:34:49Z",
              "body": "#20993 has the original changes mostly working on a current master. ~~We has some shenanigans with unknown free variables etc. now though~~ Not on current master",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "56ec6a243b14360454cb7ea837371cd3c735f9c9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bl82e",
              "createdAt": "2025-01-23T16:56:18Z",
              "body": "### PR summary [56ec6a243b](https://github.com/leanprover-community/mathlib4/pull/11521/commits/56ec6a243b14360454cb7ea837371cd3c735f9c9)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Tactic`|1|\n| `Mathlib.Tactic.FastInstance` (new file)|20|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CommMagma`\n`+ CommSemigroup`\n`+ Dec`\n`+ Function.Injective.commMagma`\n`+ Function.Injective.commSemigroup`\n`+ Function.Injective.semigroup`\n`+ Mul`\n`+ Semigroup`\n`+ Wrapped`\n`+ dec1`\n`+ dec2`\n`+ elabFastInstance`\n`+ instCommSemigroup`\n`+ instRing`\n`+ instSemigroup`\n`+ instSemiring`\n`+ instance : Mul Nat := ⟨(· * · )⟩`\n`+ instance [Mul α] : Mul (Wrapped α) where mul m n := ⟨Mul.mul m.1 n.1⟩`\n`+ val_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        }
      }
    }
  }
}
