{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 94,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "joelriou"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR introduces the map `Int.negOnePow : ℤ → ℤ` which sends `n` to `(-1 : Units ℤ) ^ n`.\r\n\r\n---\r\n@jcommelin: I hope it is ok for you to appear in the `Authors:` list of this file: the name `neg_one_pow` and some lemmas were in the code you contributed to the LTE.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-09-04T17:58:34Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kof-q",
              "body": "Is this map not in fact a group hom (albeit one from an additive group to a multiplicative group)? Specifically, it is the homomorphism from Z to Units Z whose kernel is the even integers. I suppose this is Z to Additive (Units Z), maybe, as an AddMonoidHom?\r\n\r\nI think we should have this fact (and ideally in fact define it as such an object).",
              "createdAt": "2023-08-22T14:48:46Z",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kpCAe",
              "body": "> Is this map not in fact a group hom (albeit one from an additive group to a multiplicative group)? Specifically, it is the homomorphism from Z to Units Z whose kernel is the even integers. I suppose this is Z to Additive (Units Z), maybe, as an AddMonoidHom?\r\n\r\n> I think we should have this fact (and ideally in fact define it as such an object).\r\n\r\nThere is [zpowersHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/GroupPower/Lemmas.html#zpowersHom); maybe we can develop more general API around it connecting to [orderOf](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/OrderOfElement.html#orderOf).",
              "createdAt": "2023-08-22T15:53:20Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kzH-u",
              "body": "In order to clarify the intent of this PR, its purpose is to have a convenient way to manipulate `(-1)^n` in computations (e.g. signs in (co)homology theory). Obviously, there is an intermediate isomorphism between the integers mod two and the multiplicative group of the integers which could be used here, but it would add two layers (the surjective map from the integers to the integers mod 2, and the inclusion of units). I have attempted to use the unfolded syntax `((-1 : Units ℤ) ^ n : ℤ)`, but doing computations with it was not very practical. Whichever way it is done internally, I think it is good to have a definition `Int.newOnePow : ℤ → ℤ` like it was done in the Liquid Tensor Experiment.",
              "createdAt": "2023-08-24T07:06:02Z",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lpd0n",
              "body": ":v: joelriou can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-04T14:31:42Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lqLjk",
              "body": "Thanks very much for the reviews!\r\n\r\nbors merge",
              "createdAt": "2023-09-04T17:18:15Z",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lqSXS",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6076327214/job/16484123389)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6076327214/job/16484123242)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6076327214/job/16484123152)",
              "createdAt": "2023-09-04T17:58:33Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5o9igZ",
              "body": "> I have attempted to use the unfolded syntax `((-1 : Units ℤ) ^ n : ℤ)`, but doing computations with it was not very practical.\r\n\r\nCan you elaborate on this? I effectively rejected a similar PR for mathlib 3, https://github.com/leanprover-community/mathlib/pull/11204, because I argued we should instead be filling out the API to make it more practical (which I believe we largely did)",
              "createdAt": "2023-10-13T06:17:27Z",
              "author": {
                "login": "eric-wieser"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8efbbe85ddd3c61fccebfa02530d03af04a84f18",
                "additions": 94,
                "deletions": 0,
                "committedDate": "2023-08-22T08:14:44Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "joel.riou@universite-paris-saclay.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c285e21a18a3be85ae8e36f03923b5aa2f6395fa",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-08-22T08:20:27Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "joel.riou@universite-paris-saclay.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "45e1b54b4ac794ccfb5eb9e2f6214720fc705e5c",
                "additions": 2650,
                "deletions": 2347,
                "committedDate": "2023-08-24T06:57:52Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "joel.riou@universite-paris-saclay.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f4feddf79de520f3a1b53b20d7ef02e96a12b6c4",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-04T16:52:22Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "37772949+joelriou@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c662cc836352ea28d8a02d141c41f02fae56bfe2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-04T16:52:41Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "37772949+joelriou@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "60ba31ed9f8573c78557a57ee93ca2921f35baab",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-04T16:52:58Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "37772949+joelriou@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d6ba7f0b7fee909cc35930103fa88fffbf187b02",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-04T16:53:29Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "37772949+joelriou@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1a57b415c326d815e2b21f4d84b270af5f0ccb46",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-04T16:53:50Z",
                "author": {
                  "name": "Joël Riou",
                  "email": "37772949+joelriou@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-22T08:16:39Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/GroupPower/NegOnePow.lean",
              "additions": 93,
              "deletions": 0
            }
          ]
        },
        "headRefName": "neg-one-pow",
        "headRefOid": "1a57b415c326d815e2b21f4d84b270af5f0ccb46",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Yd8Wz",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5f8Vme",
              "body": "The stuff in LTE convinced me that this is a useful approach. We might figure out a better approach at some point, but for now, let's have this.\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-04T14:31:40Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6720,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5f8Vme",
              "body": "The stuff in LTE convinced me that this is a useful approach. We might figure out a better approach at some point, but for now, let's have this.\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-04T14:31:40Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OYXvR",
                    "body": "Two minor edits:\r\n```suggestion\r\n/-- The map `ℤ → ℤ` which sends `n` to `(-1 : ℤˣ) ^ n`. -/\r\n```",
                    "createdAt": "2023-09-04T14:28:08Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OYX6z",
                    "body": "```suggestion\r\n    (n₁ - n₂).negOnePow = n₁.negOnePow * n₂.negOnePow := by\r\n```",
                    "createdAt": "2023-09-04T14:28:55Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OYYQw",
                    "body": "```suggestion\r\nThis file defines the map `negOnePow : ℤ → ℤ` which sends `n` to `(-1 : ℤˣ) ^ n`.\r\n```",
                    "createdAt": "2023-09-04T14:30:19Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OYYXb",
                    "body": "```suggestion\r\ndef negOnePow (n : ℤ) : ℤ := (-1 : ℤˣ) ^ n\r\n```",
                    "createdAt": "2023-09-04T14:30:46Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OYYc2",
                    "body": "```suggestion\r\nlemma negOnePow_def (n : ℤ) : n.negOnePow = (-1 : ℤˣ) ^ n := rfl\r\n```",
                    "createdAt": "2023-09-04T14:31:05Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "MDQ6VXNlcjM0MDI1NTky",
              "login": "linesthatinterlace"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Algebra): integer powers of -1",
        "updatedAt": "2023-10-13T06:17:27Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6720",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8efbbe85ddd3c61fccebfa02530d03af04a84f18"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u6uLZzwAAAAJdSZX9",
              "createdAt": "2023-08-22T08:16:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OEH69",
              "createdAt": "2023-08-22T08:17:16Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Q-fSR",
                "title": "feat/refactor: redefinition of homology + derived categories",
                "url": "https://github.com/leanprover-community/mathlib4/pull/4197"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OEH_P",
              "createdAt": "2023-08-22T08:18:01Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YUNdE",
                "title": "[Merged by Bors] - feat: the shift on the category of triangles",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6688"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OEIEk",
              "createdAt": "2023-08-22T08:19:03Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YIT9o",
                "title": "[Merged by Bors] - feat: the shift on the category of cochain complexes",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6626"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c285e21a18a3be85ae8e36f03923b5aa2f6395fa"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u6uLZzwAAAAJdU3Iw",
              "createdAt": "2023-08-22T09:04:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kof-q",
              "createdAt": "2023-08-22T14:48:46Z",
              "body": "Is this map not in fact a group hom (albeit one from an additive group to a multiplicative group)? Specifically, it is the homomorphism from Z to Units Z whose kernel is the even integers. I suppose this is Z to Additive (Units Z), maybe, as an AddMonoidHom?\r\n\r\nI think we should have this fact (and ideally in fact define it as such an object).",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kpCAe",
              "createdAt": "2023-08-22T15:53:20Z",
              "body": "> Is this map not in fact a group hom (albeit one from an additive group to a multiplicative group)? Specifically, it is the homomorphism from Z to Units Z whose kernel is the even integers. I suppose this is Z to Additive (Units Z), maybe, as an AddMonoidHom?\r\n\r\n> I think we should have this fact (and ideally in fact define it as such an object).\r\n\r\nThere is [zpowersHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/GroupPower/Lemmas.html#zpowersHom); maybe we can develop more general API around it connecting to [orderOf](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/OrderOfElement.html#orderOf).",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "45e1b54b4ac794ccfb5eb9e2f6214720fc705e5c"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kzH-u",
              "createdAt": "2023-08-24T07:06:02Z",
              "body": "In order to clarify the intent of this PR, its purpose is to have a convenient way to manipulate `(-1)^n` in computations (e.g. signs in (co)homology theory). Obviously, there is an intermediate isomorphism between the integers mod two and the multiplicative group of the integers which could be used here, but it would add two layers (the surjective map from the integers to the integers mod 2, and the inclusion of units). I have attempted to use the unfolded syntax `((-1 : Units ℤ) ^ n : ℤ)`, but doing computations with it was not very practical. Whichever way it is done internally, I think it is good to have a definition `Int.newOnePow : ℤ → ℤ` like it was done in the Liquid Tensor Experiment.",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ONRgq",
              "createdAt": "2023-08-31T08:30:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ZNnXo",
                "title": "[Merged by Bors] -  feat: more API for the complex of morphisms between cochain complexes",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6894"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5f8Vme",
              "createdAt": "2023-09-04T14:28:07Z",
              "body": "The stuff in LTE convinced me that this is a useful approach. We might figure out a better approach at some point, but for now, let's have this.\r\n\r\nbors d+",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lpd0n",
              "createdAt": "2023-09-04T14:31:42Z",
              "body": ":v: joelriou can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u6uLZzwAAAAJkbTVx",
              "createdAt": "2023-09-04T14:31:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5u6uLZzwAAAAJkbTX7",
              "createdAt": "2023-09-04T14:31:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f4feddf79de520f3a1b53b20d7ef02e96a12b6c4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c662cc836352ea28d8a02d141c41f02fae56bfe2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "60ba31ed9f8573c78557a57ee93ca2921f35baab"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d6ba7f0b7fee909cc35930103fa88fffbf187b02"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1a57b415c326d815e2b21f4d84b270af5f0ccb46"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lqLjk",
              "createdAt": "2023-09-04T17:18:15Z",
              "body": "Thanks very much for the reviews!\r\n\r\nbors merge",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5u6uLZzwAAAAJkgHtT",
              "createdAt": "2023-09-04T17:18:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lqSXS",
              "createdAt": "2023-09-04T17:58:33Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6076327214/job/16484123389)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6076327214/job/16484123242)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6076327214/job/16484123152)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5u6uLZzwAAAAJkg206",
              "createdAt": "2023-09-04T17:58:34Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5u6uLZzwAAAAJkg23z",
              "createdAt": "2023-09-04T17:58:37Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5o9igZ",
              "createdAt": "2023-10-13T06:17:27Z",
              "body": "> I have attempted to use the unfolded syntax `((-1 : Units ℤ) ^ n : ℤ)`, but doing computations with it was not very practical.\r\n\r\nCan you elaborate on this? I effectively rejected a similar PR for mathlib 3, https://github.com/leanprover-community/mathlib/pull/11204, because I argued we should instead be filling out the API to make it more practical (which I believe we largely did)",
              "author": {
                "login": "eric-wieser"
              }
            }
          ]
        }
      }
    }
  }
}
