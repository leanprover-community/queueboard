{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 346,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "author": {
          "login": "vihdzp"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We define `Order.pred'` in a successor order, such that `pred' a = b` for some non-maximal `b` with `succ b = a` if it exists, and `pred' a = a` otherwise. In a successor-predecessor partial order, `pred'` and `pred` coincide.\r\n\r\n`Order.pred'` is most nicely behaved in a linear order with no maximum, where it forms a Galois connection with `succ`.\r\n\r\nThis definition is meant to accomplish three goals:\r\n- Generalize `Ordinal.pred`, which serves the same function as `Order.pred'`.\r\n- Simplify the proofs for the `IsSuccLimit` inductive principles. We basically reproduce the definition of `pred'` within them already.\r\n- Use it to construct a `PredOrder` instance from a `SuccOrder` instance. I believe the condition for this to be possible is that there are no non-minimal successor limits.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n--> \r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2024-09-04T18:03:35Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Kvfnt",
              "body": "### PR summary [527ce6f1f8](https://github.com/leanprover-community/mathlib4/pull/16463/commits/527ce6f1f864eccdc4a10a4d5078cec830a38c4d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Order.SuccPred.Inverse`|353|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.IsMax.succ'_eq`\n`+ _root_.IsMin.pred'_eq`\n`+ gc_pred'_succ`\n`+ gc_pred_succ'`\n`+ le_succ'_iff_pred_le`\n`+ le_succ'_iff_pred_le_of_not_isMin`\n`+ lt_pred'_iff_succ_lt`\n`+ lt_pred'_iff_succ_lt_of_not_isMax`\n`+ not_isMax_pred'_succ`\n`+ not_isMin_succ'_pred`\n`+ pred'`\n`+ pred'_bot`\n`+ pred'_eq_pred`\n`+ pred'_eq_pred_apply`\n`+ pred'_eq_self`\n`+ pred'_eq_self_iff`\n`+ pred'_eq_self_iff'`\n`+ pred'_le_iff_le_succ`\n`+ pred'_le_iff_le_succ_of_not_isMax`\n`+ pred'_le_self`\n`+ pred'_lt_self_iff`\n`+ pred'_mono`\n`+ pred'_ne_self_iff`\n`+ pred'_ne_self_iff'`\n`+ pred'_succ`\n`+ pred'_succ_of_not_isMax`\n`+ pred'_wcovBy`\n`+ pred_succ'_eq_self_iff`\n`+ pred_succ'_eq_self_iff_of_not_isMin`\n`+ pred_succ'_pred`\n`+ pred_succ'_pred_of_not_isMin`\n`+ self_le_succ'`\n`+ self_lt_succ'_iff`\n`+ succ'`\n`+ succ'_eq_self`\n`+ succ'_eq_self_iff`\n`+ succ'_eq_self_iff'`\n`+ succ'_eq_succ`\n`+ succ'_eq_succ_apply`\n`+ succ'_lt_iff_lt_pred`\n`+ succ'_lt_iff_lt_pred_of_not_isMin`\n`+ succ'_mono`\n`+ succ'_ne_self_iff`\n`+ succ'_ne_self_iff'`\n`+ succ'_pred`\n`+ succ'_pred_of_not_isMin`\n`+ succ'_top`\n`+ succ_pred'_eq_self_iff`\n`+ succ_pred'_eq_self_iff_of_not_isMax`\n`+ succ_pred'_succ`\n`+ succ_pred'_succ_of_not_isMax`\n`+ wcovBy_succ'`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-04T00:56:36Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Kvj4c",
              "body": ">This brings the file above the 1500 line limit, so I can put this in another file if desired (what should it be called?)\r\n\r\n`Order.SuccPred.Inverse`.",
              "createdAt": "2024-09-04T01:17:54Z",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KwRU6",
              "body": "This is, in general, not actually a `PredOrder`. For instance, on `Ordinal`, we have `pred' ω = ω` even though `¬ IsMin ω`.",
              "createdAt": "2024-09-04T04:44:04Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KwRr_",
              "body": "Is this an argument for weakening `PredOrder` to include `Ordinal`?",
              "createdAt": "2024-09-04T04:45:47Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KwWBm",
              "body": "That's not my intention; I think such a weakening would make things a lot more inconvenient elsewhere. `pred_lt_of_not_isMin` is a nice condition since we can forget about the `¬ IsMin a` condition in the relatively common scenario where we have a `NoMinOrder`. `pred_lt_of_not_isSuccLimit` doesn't have that same convenience, unless we restrict to something much stronger like a `IsSuccArchimedean` + `NoMinOrder`.\r\n\r\nStill, I think this weaker `pred'` has value. It captures the idea that in a `LinearOrder` + `SuccOrder` you can also go backwards, at least some of the time.",
              "createdAt": "2024-09-04T05:05:27Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KxIPg",
              "body": "> I think such a weakening would make things a lot more inconvenient elsewhere. `pred_lt_of_not_isMin` is a nice condition since we can forget about the `¬ IsMin a` condition in the relatively common scenario where we have a `NoMinOrder`. `pred_lt_of_not_isSuccLimit` doesn't have that same convenience, unless we restrict to something much stronger like a `IsSuccArchimedean` + `NoMinOrder`.\r\n\r\nI'm afraid that means you're getting stuck in my original framework, which I thought out well for my application but not for others. @Command-Master recently managed to escape my framework in a fruitful way. I think you should do the same",
              "createdAt": "2024-09-04T07:36:50Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KxN3k",
              "body": "What would be the axioms of this weakened `pred`? Would it require a `SuccOrder` instance, or can you state it without it? In a tree that's a path decomposition, right?",
              "createdAt": "2024-09-04T07:49:15Z",
              "author": {
                "login": "Command-Master"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KxO7q",
              "body": "`succ` has a universal property, right? So anything you state with `succ` can be stated without.",
              "createdAt": "2024-09-04T07:51:36Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K03MW",
              "body": "I think a possible axiomatization of this weakened predecessor might be\r\n```lean 4\r\nclass WeakPredOrder (α : Type*) [Preorder α] where\r\n  pred : α → α \r\n  pred_wcovBy : ∀ a, pred a ⩿ a\r\n  pred_of_covBy {a b} : a ⋖ b → pred b ⋖ b\r\n```\r\nThat is, `pred a` is some element that's covered by `a` if it exists, and (equivalent to) `a` otherwise.\r\n\r\nI believe you can recover the current definition of `PredOrder` by adding `pred_eq_of_covBy : a ⋖ b → pred b = a`. Note that this will always be satisfied in a linear order.\r\n\r\nEDIT: to recover `PredOrder` you actually need `le_pred_of_lt` and `min_of_le_pred`, but the latter can be weakened to `IsSuccLimit a → IsMin a`.",
              "createdAt": "2024-09-04T13:45:19Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K1Ag-",
              "body": "Note that every preorder admits a (noncomputable) `WeakPredOrder` instance:\r\n```lean 4\r\nopen Classical in\r\nnoncomputable instance (α : Type*) [Preorder α] : WeakPredOrder α where\r\n  pred a := if h : ∃ b, b ⋖ a then Classical.choose h else a\r\n  pred_wcovBy a := by\r\n    dsimp\r\n    split_ifs with h\r\n    · exact (Classical.choose_spec h).wcovBy\r\n    · exact WCovBy.refl a\r\n  pred_of_covBy := by\r\n    intro a b h\r\n    dsimp\r\n    have H : ∃ a, a ⋖ b := ⟨a, h⟩ \r\n    rw [dif_pos H]\r\n    exact Classical.choose_spec H\r\n```\r\nSo we could switch up the design even more, making `succ` and `pred` defined for any preorder, and making the existing `SuccOrder` and `PredOrder` classes constrain their properties.",
              "createdAt": "2024-09-04T14:00:12Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K1EeL",
              "body": "Let's move to [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/weaker.20SuccOrder.2FPredOrder/near/467548394).",
              "createdAt": "2024-09-04T14:06:36Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6K3A47",
              "body": "It seems like this might not be the right approach to generalizing `pred`, so I'll close this PR.",
              "createdAt": "2024-09-04T18:03:35Z",
              "author": {
                "login": "vihdzp"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "14a96bb11ee69b1b77e943d4e6e3deeb3c51261d",
                "additions": 301,
                "deletions": 0,
                "committedDate": "2024-09-04T00:28:56Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szkDA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840521/job/29641991180"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szjiQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840528/job/29641991049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szmGg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840521/job/29641991706"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szlRw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840528/job/29641991495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szk5w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840521/job/29641991399"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szkcQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840528/job/29641991281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szipg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840528/job/29641990822"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5szi3Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840521/job/29641990877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tT-Eg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840528/job/29642522130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5sznWg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10692840521/job/29641992026"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a1d76c82066efd9f67c9a8961bb18100a500eaf6",
                "additions": 14,
                "deletions": 0,
                "committedDate": "2024-09-04T00:45:31Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tiW1w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693130130/job/29642757847"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tiW9Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693130134/job/29642757877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRPrQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026750/job/29642477485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRQaw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026752/job/29642477675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tiXAQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693130131/job/29642757889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRRyA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026750/job/29642478024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRRsw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026752/job/29642478003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tiXmQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693130131/job/29642758041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRQfg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026750/job/29642477694"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRPgw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026752/job/29642477443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRRRA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026750/job/29642477892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRRLg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026752/job/29642477870"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tRSdQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026750/job/29642478197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5ubU6w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693026752/job/29643691243"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tik0Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29642761425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5tjPUA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9fa0fc58c73ab40272e6044c8eb5ce314ac65c8a",
                "additions": 344,
                "deletions": 311,
                "committedDate": "2024-09-04T01:46:48Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0VsQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693633319/job/29644101041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0VyA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693633329/job/29644101064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0Seg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632912/job/29644100218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0Sow",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632913/job/29644100259"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0WFw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693633316/job/29644101143"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0TsQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632912/job/29644100529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0SHA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632913/job/29644100124"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0VkQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693633316/job/29644101009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0TEw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632912/job/29644100371"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0TIw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632913/job/29644100387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0ReA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632913/job/29644099960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0RtA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632912/job/29644100020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0UQg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632912/job/29644100674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u10nA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693632913/job/29644125340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u0lOg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29644105018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1OGQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "409a1f5e3335ddd56e44a4f213f09efb7bb662ad",
                "additions": 0,
                "deletions": 3,
                "committedDate": "2024-09-04T01:47:42Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1sBw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640981/job/29644123143"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1sew",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640987/job/29644123259"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1psw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640732/job/29644122547"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1qCQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640778/job/29644122633"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1sxQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640983/job/29644123333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1rgg",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640778/job/29644123010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1rvQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640732/job/29644123069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1sEg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640983/job/29644123154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1rFQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640732/job/29644122901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1qsg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640778/job/29644122802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1sRQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640778/job/29644123205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1qdA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640732/job/29644122740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2kpw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640778/job/29644137639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u1suQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693640732/job/29644123321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u14XQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29644126301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2AGQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4d46218d69811eb5ebffb1302e974862038bdbe2",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-09-04T01:47:57Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2C2w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642887/job/29644128987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2Cpg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642884/job/29644128934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2AmQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642696/job/29644128409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2Bmw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642695/job/29644128667"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2DPg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642877/job/29644129086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2Ang",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642695/job/29644128414"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2CCg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642696/job/29644128778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2Crg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642877/job/29644128942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2BoQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642696/job/29644128673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2BJg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642695/job/29644128550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2CBA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642695/job/29644128772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2BGg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642696/job/29644128538"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u3Z1w",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642695/job/29644151255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2Ceg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693642696/job/29644128890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u2NsA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29644131760"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u25MA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e0697558691fdff6dae4796530c32a45ba292126",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2024-09-04T01:48:33Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u25gQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647962/job/29644142977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u253Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647963/job/29644143069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u233Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647792/job/29644142557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u236w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647788/job/29644142571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u26OQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647956/job/29644143161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u25NA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647792/job/29644142900"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u24gg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647788/job/29644142722"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u25mA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647956/job/29644143000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u24yw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647792/job/29644142795"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u249g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647788/job/29644142838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u25rg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647788/job/29644143022"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u24Tg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647792/job/29644142670"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u26Mg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647792/job/29644143154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u4sBA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693647788/job/29644172292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u3Cpw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29644145319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u3ytw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "527ce6f1f864eccdc4a10a4d5078cec830a38c4d",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2024-09-04T01:50:47Z",
                "author": {
                  "name": "Violeta Hernández",
                  "email": "vi.hdz.p@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5y2KcQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238015/job/29648325233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG52l5HA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651367/job/29652252956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5y2JyQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238018/job/29648325065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG52l5Ng",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651374/job/29652252982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5y2JxQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238014/job/29648325061"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG52l5Ow",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651370/job/29652252987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6XCdig",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10707073474/job/29686275466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6KTA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666763/job/29644196428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6KCw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666764/job/29644196363"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6HKw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644195627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6IsA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644196016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6KgA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666762/job/29644196480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5y2Jyg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238015/job/29648325066"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG52l6aQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651367/job/29652253289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6Hpw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644195751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6Gxw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644195527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6J9Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666762/job/29644196341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6IVg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644195926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6JtA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644196276"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6JBQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644196101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6Hhg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644195718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6Jng",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644196254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5v77Qw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29645273923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u6VbQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29644199277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG5u66HQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-04T00:55:46Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Cover.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/SuccPred/Inverse.lean",
              "additions": 344,
              "deletions": 0
            }
          ]
        },
        "headRefName": "vi.pred'",
        "headRefOid": "527ce6f1f864eccdc4a10a4d5078cec830a38c4d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c56U-0n",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABmPU_0w",
              "color": "53A5FF",
              "name": "awaiting-zulip"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6H2G8K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Command-Master"
              },
              "submittedAt": "2024-09-04T06:57:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H1nxb",
              "body": "Why is this a new definition rather than a non-instance `PredOrder` definition?",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-04T04:42:43Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16463,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6H1nxb",
              "body": "Why is this a new definition rather than a non-instance `PredOrder` definition?",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-04T04:42:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6H2G8K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Command-Master"
              },
              "submittedAt": "2024-09-04T06:57:13Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n5kJ8",
                    "body": "If I'm not mistaken this condition is equivalent to `∃ b < a, succ b = a`, and I think it might be better—the `IsMax` here feels a bit weird.",
                    "createdAt": "2024-09-04T06:29:23Z",
                    "author": {
                      "login": "Command-Master"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n5pRs",
                    "body": "Could you add `succ_pred'_of_ne` (if `pred' a ≠ a` then `succ (pred' a) = a`)?",
                    "createdAt": "2024-09-04T06:48:53Z",
                    "author": {
                      "login": "Command-Master"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n5p16",
                    "body": "One direction of `pred'_ne_self_iff`, `pred'_eq_self_iff` and `succ_pred'_eq_self_iff` is true without the `NoMaxOrder` assumption. For `pred'_eq_self_iff` that's `pred'_eq_self`, but could you add those lemmas for the other two?",
                    "createdAt": "2024-09-04T06:50:50Z",
                    "author": {
                      "login": "Command-Master"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY1NDY1Njcw",
              "login": "vihdzp"
            },
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjU1NjY0OTcz",
              "login": "Command-Master"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5y2KcQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238015/job/29648325233"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG52l5HA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651367/job/29652252956"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5y2JyQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238018/job/29648325065"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG52l5Ng",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651374/job/29652252982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5y2JxQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238014/job/29648325061"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG52l5Ow",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651370/job/29652252987"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6XCdig",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10707073474/job/29686275466"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6KTA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666763/job/29644196428"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6KCw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666764/job/29644196363"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6HKw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644195627"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6IsA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644196016"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6KgA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666762/job/29644196480"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5y2Jyg",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10695238015/job/29648325066"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG52l6aQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10696651367/job/29652253289"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6Hpw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644195751"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6Gxw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644195527"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6J9Q",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666762/job/29644196341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6IVg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644195926"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6JtA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644196276"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6JBQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644196101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6Hhg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29644195718"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6Jng",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666460/job/29644196254"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5v77Qw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10693666437/job/29645273923"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u6VbQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29644199277"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG5u66HQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16463&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Order/SuccPred/Inverse): \"predecessor\" from successor",
        "updatedAt": "2024-09-04T19:41:17Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16463",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VQSWVzwAAAANJyHHG",
              "createdAt": "2024-09-04T00:55:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6VQSWVzwAAAANJyHHW",
              "createdAt": "2024-09-04T00:55:46Z",
              "assignee": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Kvfnt",
              "createdAt": "2024-09-04T00:56:36Z",
              "body": "### PR summary [527ce6f1f8](https://github.com/leanprover-community/mathlib4/pull/16463/commits/527ce6f1f864eccdc4a10a4d5078cec830a38c4d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Order.SuccPred.Inverse`|353|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.IsMax.succ'_eq`\n`+ _root_.IsMin.pred'_eq`\n`+ gc_pred'_succ`\n`+ gc_pred_succ'`\n`+ le_succ'_iff_pred_le`\n`+ le_succ'_iff_pred_le_of_not_isMin`\n`+ lt_pred'_iff_succ_lt`\n`+ lt_pred'_iff_succ_lt_of_not_isMax`\n`+ not_isMax_pred'_succ`\n`+ not_isMin_succ'_pred`\n`+ pred'`\n`+ pred'_bot`\n`+ pred'_eq_pred`\n`+ pred'_eq_pred_apply`\n`+ pred'_eq_self`\n`+ pred'_eq_self_iff`\n`+ pred'_eq_self_iff'`\n`+ pred'_le_iff_le_succ`\n`+ pred'_le_iff_le_succ_of_not_isMax`\n`+ pred'_le_self`\n`+ pred'_lt_self_iff`\n`+ pred'_mono`\n`+ pred'_ne_self_iff`\n`+ pred'_ne_self_iff'`\n`+ pred'_succ`\n`+ pred'_succ_of_not_isMax`\n`+ pred'_wcovBy`\n`+ pred_succ'_eq_self_iff`\n`+ pred_succ'_eq_self_iff_of_not_isMin`\n`+ pred_succ'_pred`\n`+ pred_succ'_pred_of_not_isMin`\n`+ self_le_succ'`\n`+ self_lt_succ'_iff`\n`+ succ'`\n`+ succ'_eq_self`\n`+ succ'_eq_self_iff`\n`+ succ'_eq_self_iff'`\n`+ succ'_eq_succ`\n`+ succ'_eq_succ_apply`\n`+ succ'_lt_iff_lt_pred`\n`+ succ'_lt_iff_lt_pred_of_not_isMin`\n`+ succ'_mono`\n`+ succ'_ne_self_iff`\n`+ succ'_ne_self_iff'`\n`+ succ'_pred`\n`+ succ'_pred_of_not_isMin`\n`+ succ'_top`\n`+ succ_pred'_eq_self_iff`\n`+ succ_pred'_eq_self_iff_of_not_isMax`\n`+ succ_pred'_succ`\n`+ succ_pred'_succ_of_not_isMax`\n`+ wcovBy_succ'`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Kvj4c",
              "createdAt": "2024-09-04T01:17:54Z",
              "body": ">This brings the file above the 1500 line limit, so I can put this in another file if desired (what should it be called?)\r\n\r\n`Order.SuccPred.Inverse`.",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6H1nxb",
              "createdAt": "2024-09-04T04:42:43Z",
              "body": "Why is this a new definition rather than a non-instance `PredOrder` definition?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KwRU6",
              "createdAt": "2024-09-04T04:44:04Z",
              "body": "This is, in general, not actually a `PredOrder`. For instance, on `Ordinal`, we have `pred' ω = ω` even though `¬ IsMin ω`.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KwRr_",
              "createdAt": "2024-09-04T04:45:47Z",
              "body": "Is this an argument for weakening `PredOrder` to include `Ordinal`?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KwWBm",
              "createdAt": "2024-09-04T05:05:27Z",
              "body": "That's not my intention; I think such a weakening would make things a lot more inconvenient elsewhere. `pred_lt_of_not_isMin` is a nice condition since we can forget about the `¬ IsMin a` condition in the relatively common scenario where we have a `NoMinOrder`. `pred_lt_of_not_isSuccLimit` doesn't have that same convenience, unless we restrict to something much stronger like a `IsSuccArchimedean` + `NoMinOrder`.\r\n\r\nStill, I think this weaker `pred'` has value. It captures the idea that in a `LinearOrder` + `SuccOrder` you can also go backwards, at least some of the time.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6VQSWVzwAAAANJ41sm",
              "createdAt": "2024-09-04T05:47:27Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU1NjY0OTcz",
                "login": "Command-Master"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6VQSWVzwAAAANJ41s1",
              "createdAt": "2024-09-04T05:47:27Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6H2G8K",
              "createdAt": "2024-09-04T06:29:23Z",
              "body": "",
              "author": {
                "login": "Command-Master"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KxIPg",
              "createdAt": "2024-09-04T07:36:50Z",
              "body": "> I think such a weakening would make things a lot more inconvenient elsewhere. `pred_lt_of_not_isMin` is a nice condition since we can forget about the `¬ IsMin a` condition in the relatively common scenario where we have a `NoMinOrder`. `pred_lt_of_not_isSuccLimit` doesn't have that same convenience, unless we restrict to something much stronger like a `IsSuccArchimedean` + `NoMinOrder`.\r\n\r\nI'm afraid that means you're getting stuck in my original framework, which I thought out well for my application but not for others. @Command-Master recently managed to escape my framework in a fruitful way. I think you should do the same",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VQSWVzwAAAANJ9MVg",
              "createdAt": "2024-09-04T07:36:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KxN3k",
              "createdAt": "2024-09-04T07:49:15Z",
              "body": "What would be the axioms of this weakened `pred`? Would it require a `SuccOrder` instance, or can you state it without it? In a tree that's a path decomposition, right?",
              "author": {
                "login": "Command-Master"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KxO7q",
              "createdAt": "2024-09-04T07:51:36Z",
              "body": "`succ` has a universal property, right? So anything you state with `succ` can be stated without.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K03MW",
              "createdAt": "2024-09-04T13:45:19Z",
              "body": "I think a possible axiomatization of this weakened predecessor might be\r\n```lean 4\r\nclass WeakPredOrder (α : Type*) [Preorder α] where\r\n  pred : α → α \r\n  pred_wcovBy : ∀ a, pred a ⩿ a\r\n  pred_of_covBy {a b} : a ⋖ b → pred b ⋖ b\r\n```\r\nThat is, `pred a` is some element that's covered by `a` if it exists, and (equivalent to) `a` otherwise.\r\n\r\nI believe you can recover the current definition of `PredOrder` by adding `pred_eq_of_covBy : a ⋖ b → pred b = a`. Note that this will always be satisfied in a linear order.\r\n\r\nEDIT: to recover `PredOrder` you actually need `le_pred_of_lt` and `min_of_le_pred`, but the latter can be weakened to `IsSuccLimit a → IsMin a`.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K1Ag-",
              "createdAt": "2024-09-04T14:00:12Z",
              "body": "Note that every preorder admits a (noncomputable) `WeakPredOrder` instance:\r\n```lean 4\r\nopen Classical in\r\nnoncomputable instance (α : Type*) [Preorder α] : WeakPredOrder α where\r\n  pred a := if h : ∃ b, b ⋖ a then Classical.choose h else a\r\n  pred_wcovBy a := by\r\n    dsimp\r\n    split_ifs with h\r\n    · exact (Classical.choose_spec h).wcovBy\r\n    · exact WCovBy.refl a\r\n  pred_of_covBy := by\r\n    intro a b h\r\n    dsimp\r\n    have H : ∃ a, a ⋖ b := ⟨a, h⟩ \r\n    rw [dif_pos H]\r\n    exact Classical.choose_spec H\r\n```\r\nSo we could switch up the design even more, making `succ` and `pred` defined for any preorder, and making the existing `SuccOrder` and `PredOrder` classes constrain their properties.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K1EeL",
              "createdAt": "2024-09-04T14:06:36Z",
              "body": "Let's move to [Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/weaker.20SuccOrder.2FPredOrder/near/467548394).",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6VQSWVzwAAAANKWXv7",
              "createdAt": "2024-09-04T14:28:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6VQSWVzwAAAANKWXwL",
              "createdAt": "2024-09-04T14:28:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABmPU_0w",
                "name": "awaiting-zulip"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K3A47",
              "createdAt": "2024-09-04T18:03:35Z",
              "body": "It seems like this might not be the right approach to generalizing `pred`, so I'll close this PR.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6VQSWVzwAAAANKh4Kg",
              "createdAt": "2024-09-04T18:03:35Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6VQSWVzwAAAANKlrr4",
              "createdAt": "2024-09-04T19:41:17Z"
            }
          ]
        }
      }
    }
  }
}
