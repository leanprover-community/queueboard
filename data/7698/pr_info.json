{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 180,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "sgouezel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Currently, the class `IsFreeGroup` contains data (namely, a specific set of generators). This is bad, as there are many sets of generators in a free group, and changing sets of generators happens all the time in geometric group theory. We switch to a design in which\r\n* we define `FreeGroupBasis`, following the definition and API of bases of vector spaces. Most existing API around `IsFreeGroup` is transferred to lemmas taking a free group basis as a variable.\r\n* The typeclass `IsFreeGroup` is Prop-valued, and requires only the existence of a free group basis.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-10-28T19:31:12Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5pJHfi",
              "body": "Just a comment about names: for module we have `Module.Free`. Should we use `isFree` everywhere?",
              "createdAt": "2023-10-16T08:38:45Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pKiam",
              "body": "I don't really have an opinion about names. In this PR, I didn't want to change the name, so I kept `IsFreeGroup`, but I think it's a good name given that `FreeGroup` is already taken for the concrete construction.",
              "createdAt": "2023-10-16T12:28:48Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5p0pe9",
              "body": "bors d+",
              "createdAt": "2023-10-23T15:02:45Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5p0pgv",
              "body": ":v: sgouezel can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-10-23T15:02:49Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qVCaR",
              "body": "bors r+",
              "createdAt": "2023-10-28T19:06:59Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qVDki",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6678728667/job/18150089883)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6678728667/job/18150089742)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6678728667/job/18150089807)",
              "createdAt": "2023-10-28T19:31:11Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a1e0a63221aca22805a037e79433ddcb6e697a1d",
                "additions": 126,
                "deletions": 80,
                "committedDate": "2023-10-15T08:14:52Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1666ef22b74080ebdfe6ec7e672defdaf7329c34",
                "additions": 60,
                "deletions": 28,
                "committedDate": "2023-10-15T09:27:19Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e8852939985fb5219ba5e4c3909f7e640fcebd03",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-10-15T09:35:29Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "69e50ae4176961fdc788cbd709473c365d211245",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-15T10:00:52Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ab55453ee08085610b38c412ba4fca879cafce8f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-16T12:26:18Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f56b93fec770c60be303183cb0a281682b612166",
                "additions": 4,
                "deletions": 6,
                "committedDate": "2023-10-28T18:26:39Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-15T10:52:15Z",
        "deletions": 103,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/GroupTheory/CoprodI.lean",
              "additions": 16,
              "deletions": 15
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/IsFreeGroup.lean",
              "additions": 162,
              "deletions": 86
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/NielsenSchreier.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "SG_isfreegroup",
        "headRefOid": "f56b93fec770c60be303183cb0a281682b612166",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5c0-vF",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5k51kI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-23T15:30:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k5Y3p",
              "body": "Apart from the missing `ext` lemma, this is a really neat refactor!",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-10-23T15:02:18Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7698,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kEa6e",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-15T22:16:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kEa9N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-15T22:17:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kEbBj",
              "body": "I haven't had time to review this in detail yet, but this approach looks great to me! I'd like to do something similar to `IsTensorProduct` at some point...",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-15T22:19:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kIGO8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-10-16T12:26:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k5Y3p",
              "body": "Apart from the missing `ext` lemma, this is a really neat refactor!",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-10-23T15:02:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k51kI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-23T15:30:17Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RD1XH",
                    "body": "style nit:\r\n```suggestion\r\n  coe b := fun i ↦ b.repr.symm (FreeGroup.of i)\r\n```\r\nreads slightly more clearly as \"the coercion of `b` is this function\"",
                    "createdAt": "2023-10-15T22:16:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RD1Z8",
                    "body": "This should surely follow in one tactic from an existing injectivity lemma or a `symm_eq_symm` lemma or something?",
                    "createdAt": "2023-10-15T22:17:46Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RGMy8",
                    "body": "That's what I thought, but I couldn't locate a convenient lemma for that. Hence the slightly convoluted proof...",
                    "createdAt": "2023-10-16T12:26:53Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rljph",
                    "body": "It's slightly more than one tactic because there's also an extensionality of homomorphisms out of free groups. That we need this intermediate cast `(b.symm : FreeGroup ι →* G)` suggests to add `FreeGroup.ext_equiv` as a `MulEquiv` equivalent to `FreeGroup.ext_hom`:\r\n\r\n```\r\n/-- Two isomorphisms out of a free group are equal if they are equal on generators.\r\n\r\nSee note [partially-applied ext lemmas]. -/\r\n@[to_additive (attr := ext) \"Two isomorphisms out of a free additive group are equal if they are\r\n  equal on generators. See note [partially-applied ext lemmas].\"]\r\ntheorem _root_.FreeGroup.ext_equiv {G : Type*} [Group G] (f g : FreeGroup ι ≃* G) (h : ∀ a, f (FreeGroup.of a) = g (FreeGroup.of a)) :\r\n    f = g :=\r\n  by ext x; exact FunLike.congr_fun (FreeGroup.ext_hom (G := G) f g h) x\r\n```\r\nOr should this even be for any `MonoidHomClass`?",
                    "createdAt": "2023-10-23T14:44:57Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rlln5",
                    "body": "With that `ext` lemma I could cut down the `suffices` to:\r\n```suggestion\r\n    suffices H : b.symm = b'.symm by\r\n      simpa using congr_arg MulEquiv.symm H\r\n```",
                    "createdAt": "2023-10-23T14:49:56Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rl2a6",
                    "body": "I think in general we have been avoiding adding the Equiv versions of any ext lemmas; if you want them, you can get there by applying `MulEquiv.toMonoidHom_injective` or similar. Tagging *these* lemmas with `ext` may be reasonable.",
                    "createdAt": "2023-10-23T15:30:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: change `IsFreeGroup` to a `Prop`",
        "updatedAt": "2023-10-28T19:31:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7698",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a1e0a63221aca22805a037e79433ddcb6e697a1d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1666ef22b74080ebdfe6ec7e672defdaf7329c34"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e8852939985fb5219ba5e4c3909f7e640fcebd03"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "69e50ae4176961fdc788cbd709473c365d211245"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z3KEkzwAAAAJ7Oz67",
              "createdAt": "2023-10-15T10:52:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z3KEkzwAAAAJ7Oz69",
              "createdAt": "2023-10-15T10:52:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kEa6e",
              "createdAt": "2023-10-15T22:16:40Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kEa9N",
              "createdAt": "2023-10-15T22:17:46Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kEbBj",
              "createdAt": "2023-10-15T22:19:29Z",
              "body": "I haven't had time to review this in detail yet, but this approach looks great to me! I'd like to do something similar to `IsTensorProduct` at some point...",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pJHfi",
              "createdAt": "2023-10-16T08:38:45Z",
              "body": "Just a comment about names: for module we have `Module.Free`. Should we use `isFree` everywhere?",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ab55453ee08085610b38c412ba4fca879cafce8f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pKiam",
              "createdAt": "2023-10-16T12:28:48Z",
              "body": "I don't really have an opinion about names. In this PR, I didn't want to change the name, so I kept `IsFreeGroup`, but I think it's a good name given that `FreeGroup` is already taken for the concrete construction.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5k5Y3p",
              "createdAt": "2023-10-23T14:44:57Z",
              "body": "Apart from the missing `ext` lemma, this is a really neat refactor!",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5p0pe9",
              "createdAt": "2023-10-23T15:02:45Z",
              "body": "bors d+",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5p0pgv",
              "createdAt": "2023-10-23T15:02:49Z",
              "body": ":v: sgouezel can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z3KEkzwAAAAKASga7",
              "createdAt": "2023-10-23T15:02:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z3KEkzwAAAAKASge-",
              "createdAt": "2023-10-23T15:03:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f56b93fec770c60be303183cb0a281682b612166"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qVCaR",
              "createdAt": "2023-10-28T19:06:59Z",
              "body": "bors r+",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z3KEkzwAAAAKDoqdp",
              "createdAt": "2023-10-28T19:07:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qVDki",
              "createdAt": "2023-10-28T19:31:11Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6678728667/job/18150089883)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6678728667/job/18150089742)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6678728667/job/18150089807)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5z3KEkzwAAAAKDoyv2",
              "createdAt": "2023-10-28T19:31:12Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5z3KEkzwAAAAKDoyxX",
              "createdAt": "2023-10-28T19:31:16Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
