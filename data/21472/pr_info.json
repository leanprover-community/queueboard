{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1017,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kbuzzard"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\nIn a recent PR I wrote `def ... : TopologicalRing D := ...` and the defLemma linter hauled me up on this, so I have finally snapped. I think it's less confusing for everyone if these mixin classes were named `Is` so that it's absolutely clear that they're supplying no data.\r\n\r\nThis was done in VS Code searching/replacing for `TopologicalRing`, `toTopologicalRing` and `instTopologicalRing` with \"match case\" and \"match whole world\" on, and inserting `To` everywhere, and then doing the analogous three search/replaces for `TopologicalSemiring`. There seems to be no file or directory called `TopologicalRing`, which made life a bit easier.\r\n\r\nVarious inconclusive discussions [here](https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Naming.20conventions.20for.20.60Prop.60-valued.20defs.20and.20classes/near/497867723) and [here](https://leanprover.zulipchat.com/#narrow/channel/270676-lean4/topic/.60Antisymm.60.20is.20in.20.60Type.60/near/449417472) seem to make it clear that there is no convention in general for the naming of predicates; one idea which seems to be appealing is \"if it's an adjective (e.g. `Continuous`, `Finite`, `Normal`) then no `Is`, but if it's a noun (e.g. `TopologicalRing`) then `Is`.\" This PR sticks to that convention which I would be happy to make \"official\". ",
        "changedFiles": 187,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6dLlnW",
              "body": "### PR summary [57a91332c8](https://github.com/leanprover-community/mathlib4/pull/21472/commits/57a91332c86a9084ea044ce4d2ccaae9ac5a813d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsTopologicalAddGroup`\n`+ IsTopologicalAddGroup.addNegClosureNhd`\n`+ IsTopologicalAddGroup.pathConnectedSpace`\n`+ IsTopologicalGroup`\n`+ IsTopologicalGroup.continuous_conj`\n`+ IsTopologicalGroup.continuous_conj'`\n`+ IsTopologicalGroup.continuous_conj_prod`\n`+ IsTopologicalGroup.exists_antitone_basis_nhds_one`\n`+ IsTopologicalGroup.ext`\n`+ IsTopologicalGroup.ext_iff`\n`+ IsTopologicalGroup.isInducing_iff_nhds_one`\n`+ IsTopologicalGroup.mulInvClosureNhd`\n`+ IsTopologicalGroup.of_comm_of_nhds_one`\n`+ IsTopologicalGroup.of_nhds_one`\n`+ IsTopologicalGroup.of_nhds_one'`\n`+ IsTopologicalGroup.t1Space`\n`+ IsTopologicalGroup.t2Space_iff_one_closed`\n`+ IsTopologicalGroup.t2Space_of_one_sep`\n`+ IsTopologicalGroup.toUniformSpace`\n`+ IsTopologicalRing`\n`+ IsTopologicalRing.of_addGroup_of_nhds_zero`\n`+ IsTopologicalRing.of_nhds_zero`\n`+ IsTopologicalRing.of_norm`\n`+ IsTopologicalSemiring`\n`+ IsTopologicalSemiring.continuousNeg_of_mul`\n`+ IsTopologicalSemiring.toIsTopologicalRing`\n`+ OrderDual.instIsTopologicalGroup`\n`+ Pi.instIsTopologicalRing`\n`+ Pi.instIsTopologicalSemiring`\n`+ Subring.instIsTopologicalRing`\n`+ instIsTopologicalGroup`\n`+ instance (K L : Type*) [Field K] [Field L] [Algebra K L] : IsTopologicalGroup (L ‚âÉ‚Çê[K] L)`\n`+ instance (S : Subgroup G) : IsTopologicalGroup S`\n`+ instance (priority := 10) UniformGroup.to_topologicalGroup : IsTopologicalGroup Œ±`\n`+ instance (priority := 100) : IsTopologicalRing R`\n`+ instance (priority := 100) IsHaarMeasure.noAtoms [IsTopologicalGroup G] [BorelSpace G] [T1Space G]`\n`+ instance (priority := 100) IsTopologicalGroup.regularSpace : RegularSpace G := by`\n`+ instance (priority := 100) IsTopologicalGroup.to_continuousDiv [TopologicalSpace G] [Group G]`\n`+ instance (priority := 100) IsTopologicalRing.to_topologicalAddGroup [NonUnitalNonAssocRing Œ±]`\n`+ instance (priority := 100) LinearOrderedField.topologicalRing : IsTopologicalRing ùïú`\n`+ instance (priority := 100) NonUnitalSeminormedRing.toIsTopologicalRing [NonUnitalSeminormedRing Œ±] :`\n`+ instance (priority := 100) SeminormedCommGroup.toIsTopologicalGroup : IsTopologicalGroup E`\n`+ instance (priority := 100) continuousSMul [IsTopologicalRing R] :`\n`+ instance (priority := 600) hSpace (G : Type u) [TopologicalSpace G] [Group G]`\n`+ instance (s : Subalgebra R A) : IsTopologicalSemiring s`\n`+ instance (v : HeightOneSpectrum R) : IsTopologicalRing (v.adicCompletionIntegers K)`\n`+ instance : IsTopologicalAddGroup (TangentSpace I x) := inferInstanceAs (IsTopologicalAddGroup E)`\n`+ instance : IsTopologicalAddGroup ‚Ñö := inferInstance`\n`+ instance : IsTopologicalAddGroup ‚Ñù := by infer_instance`\n`+ instance : IsTopologicalGroup (Aut F) := ‚ü®‚ü©`\n`+ instance : IsTopologicalGroup (ContinuousMonoidHom A E)`\n`+ instance : IsTopologicalGroup (PontryaginDual A)`\n`+ instance : IsTopologicalGroup (Profinite.limitCone (F ‚ãô (forget‚ÇÇ ProfiniteGrp Profinite))).pt`\n`+ instance : IsTopologicalGroup (ULift G)`\n`+ instance : IsTopologicalGroup Circle := Metric.sphere.topologicalGroup`\n`+ instance : IsTopologicalRing (AdeleRing R K) := instIsTopologicalRingProd`\n`+ instance : IsTopologicalRing (FiniteIntegralAdeles R K)`\n`+ instance : IsTopologicalRing (InfiniteAdeleRing K) := Pi.instIsTopologicalRing`\n`+ instance : IsTopologicalRing (Localization M)`\n`+ instance : IsTopologicalRing (ProdAdicCompletions R K)`\n`+ instance : IsTopologicalRing (ULift Œ±)`\n`+ instance : IsTopologicalRing ‚Ñö := inferInstance`\n`+ instance : IsTopologicalRing ‚Ñù := inferInstance`\n`+ instance : IsTopologicalSemiring (ULift Œ±)`\n`+ instance : IsTopologicalSemiring ‚Ñù‚â•0`\n`+ instance [AddCommGroup Œ≤] [IsTopologicalAddGroup Œ≤] : AddCommGroup C_c(Œ±, Œ≤)`\n`+ instance [AddGroup R] [IsTopologicalAddGroup R] : IsTopologicalAddGroup (Matrix m n R)`\n`+ instance [CommGroup Œ≤] [IsTopologicalGroup Œ≤] : IsTopologicalGroup C(Œ±, Œ≤)`\n`+ instance [ContinuousMul Œ±] : IsTopologicalGroup Œ±À£`\n`+ instance [Fintype n] [NonUnitalNonAssocSemiring R] [IsTopologicalSemiring R] :`\n`+ instance [Group Œ±] [IsTopologicalGroup Œ±] : IsTopologicalGroup Œ±·µê·µí·µñ`\n`+ instance [Group Œ≤] [IsTopologicalGroup Œ≤] : Group C(Œ±, Œ≤)`\n`+ instance [IsTopologicalGroup G] : LieGroup I 0 G := by`\n`+ instance [IsTopologicalGroup G] [CompactSpace G] (U : OpenSubgroup G) (K : OpenSubgroup U) :`\n`+ instance [IsTopologicalSemiring A] (s : StarSubalgebra R A) : IsTopologicalSemiring s`\n`+ instance [NonUnitalCommRing Œ≤] [IsTopologicalRing Œ≤] :`\n`+ instance [NonUnitalCommSemiring Œ≤] [IsTopologicalSemiring Œ≤] :`\n`+ instance [NonUnitalNonAssocRing Œ±] [NonUnitalNonAssocRing Œ≤] [IsTopologicalRing Œ±]`\n`+ instance [NonUnitalNonAssocRing Œ≤] [IsTopologicalRing Œ≤] :`\n`+ instance [NonUnitalNonAssocSemiring Œ±] [NonUnitalNonAssocSemiring Œ≤] [IsTopologicalSemiring Œ±]`\n`+ instance [NonUnitalNonAssocSemiring Œ≤] [IsTopologicalSemiring Œ≤] :`\n`+ instance [NonUnitalNonAssocSemiring Œ≤] [IsTopologicalSemiring Œ≤] [StarRing Œ≤] [ContinuousStar Œ≤] :`\n`+ instance [NonUnitalRing Œ≤] [IsTopologicalRing Œ≤] : NonUnitalRing C_c(Œ±, Œ≤)`\n`+ instance [NonUnitalSemiring Œ≤] [IsTopologicalSemiring Œ≤] :`\n`+ instance [Ring R] [AddCommGroup M] [Module R M] [Module R·µê·µí·µñ M] [IsTopologicalRing R]`\n`+ instance [TopologicalSpace H] [Group H] [IsTopologicalGroup H] : IsTopologicalGroup (G √ó H)`\n`+ instance _root_.ContinuousMulEquiv.isHaarMeasure_map [BorelSpace G] [IsTopologicalGroup G]`\n`+ instance _root_.IsTopologicalSemiring.toIsModuleTopology : IsModuleTopology R R := by`\n`+ instance _root_.IsTopologicalSemiring.toOppositeIsModuleTopology : IsModuleTopology R·µê·µí·µñ R`\n`+ instance {E : Type*} [TopologicalSpace E] [AddCommGroup E] [IsTopologicalAddGroup E]`\n`+ instance {G} [TopologicalSpace G] [AddGroup G] [IsTopologicalAddGroup G] :`\n`+ instance {G} [TopologicalSpace G] [Group G] [IsTopologicalGroup G] :`\n`+ instance {R : Type*} [Ring R] [UniformSpace R] [IsTopologicalRing R] [UniformAddGroup R]`\n`++ instance [NonUnitalNonAssocRing Œ±] [TopologicalSpace Œ±] [IsTopologicalRing Œ±] :`\n`++ instance [NonUnitalNonAssocSemiring Œ±] [TopologicalSpace Œ±] [IsTopologicalSemiring Œ±] :`\n`+++++ instIsTopologicalRing`\n`+++++ instIsTopologicalSemiring`\n`+++++++++ instIsTopologicalAddGroup`\n`+++--- neg`\n`++-- div`\n`++-- eventually_nhds_zero_mapsTo`\n`++-- hasBasis_nhds_zero`\n`++-- hasBasis_nhds_zero_of_basis`\n`++-- instTopologicalSpace`\n`++-- inv`\n`++-- mul_iff_left`\n`++-- mul_iff_right`\n`++-- neg_left`\n`++-- neg_right`\n`++-- nhds_zero_eq`\n`++-- nhds_zero_eq_of_basis`\n`++--+- instCompleteSpace`\n`+-+- instCommGroup`\n`+-+- instGroup`\n`+-+- instNonUnitalCommRing`\n`+-+- instNonUnitalCommSemiring`\n`+-+- instNonUnitalNonAssocRing`\n`+-+- instNonUnitalRing`\n`+-+- instNonUnitalSemiring`\n`+-+- instZPow`\n`+-+- instZSMul`\n`+-+- sub`\n`+-+- topologicalAddGroup`\n`+-+- topologicalRing`\n`+-+-+-+- instAddCommGroup`\n`- OrderDual.instTopologicalGroup`\n`- Pi.instTopologicalRing`\n`- Pi.instTopologicalSemiring`\n`- Subring.instTopologicalRing`\n`- TopologicalAddGroup`\n`- TopologicalAddGroup.addNegClosureNhd`\n`- TopologicalAddGroup.pathConnectedSpace`\n`- TopologicalGroup`\n`- TopologicalGroup.continuous_conj`\n`- TopologicalGroup.continuous_conj'`\n`- TopologicalGroup.continuous_conj_prod`\n`- TopologicalGroup.exists_antitone_basis_nhds_one`\n`- TopologicalGroup.ext`\n`- TopologicalGroup.ext_iff`\n`- TopologicalGroup.isInducing_iff_nhds_one`\n`- TopologicalGroup.mulInvClosureNhd`\n`- TopologicalGroup.of_comm_of_nhds_one`\n`- TopologicalGroup.of_nhds_one`\n`- TopologicalGroup.of_nhds_one'`\n`- TopologicalGroup.t1Space`\n`- TopologicalGroup.t2Space_iff_one_closed`\n`- TopologicalGroup.t2Space_of_one_sep`\n`- TopologicalGroup.toUniformSpace`\n`- TopologicalRing`\n`- TopologicalRing.of_addGroup_of_nhds_zero`\n`- TopologicalRing.of_nhds_zero`\n`- TopologicalRing.of_norm`\n`- TopologicalSemiring`\n`- TopologicalSemiring.continuousNeg_of_mul`\n`- TopologicalSemiring.toTopologicalRing`\n`- instTopologicalGroup`\n`- instance (K L : Type*) [Field K] [Field L] [Algebra K L] : TopologicalGroup (L ‚âÉ‚Çê[K] L)`\n`- instance (S : Subgroup G) : TopologicalGroup S`\n`- instance (priority := 10) UniformGroup.to_topologicalGroup : TopologicalGroup Œ±`\n`- instance (priority := 100) : TopologicalRing R`\n`- instance (priority := 100) IsHaarMeasure.noAtoms [TopologicalGroup G] [BorelSpace G] [T1Space G]`\n`- instance (priority := 100) LinearOrderedField.topologicalRing : TopologicalRing ùïú`\n`- instance (priority := 100) NonUnitalSeminormedRing.toTopologicalRing [NonUnitalSeminormedRing Œ±] :`\n`- instance (priority := 100) SeminormedCommGroup.toTopologicalGroup : TopologicalGroup E`\n`- instance (priority := 100) TopologicalGroup.regularSpace : RegularSpace G := by`\n`- instance (priority := 100) TopologicalGroup.to_continuousDiv [TopologicalSpace G] [Group G]`\n`- instance (priority := 100) TopologicalRing.to_topologicalAddGroup [NonUnitalNonAssocRing Œ±]`\n`- instance (priority := 100) continuousSMul [TopologicalRing R] :`\n`- instance (priority := 600) hSpace (G : Type u) [TopologicalSpace G] [Group G] [TopologicalGroup G] :`\n`- instance (s : Subalgebra R A) : TopologicalSemiring s`\n`- instance (v : HeightOneSpectrum R) : TopologicalRing (v.adicCompletionIntegers K)`\n`- instance : TopologicalAddGroup (TangentSpace I x) := inferInstanceAs (TopologicalAddGroup E)`\n`- instance : TopologicalAddGroup ‚Ñö := inferInstance`\n`- instance : TopologicalAddGroup ‚Ñù := by infer_instance`\n`- instance : TopologicalGroup (Aut F) := ‚ü®‚ü©`\n`- instance : TopologicalGroup (ContinuousMonoidHom A E)`\n`- instance : TopologicalGroup (PontryaginDual A)`\n`- instance : TopologicalGroup (Profinite.limitCone (F ‚ãô (forget‚ÇÇ ProfiniteGrp Profinite))).pt`\n`- instance : TopologicalGroup (ULift G)`\n`- instance : TopologicalGroup Circle := Metric.sphere.topologicalGroup`\n`- instance : TopologicalRing (AdeleRing R K) := instTopologicalRingProd`\n`- instance : TopologicalRing (FiniteIntegralAdeles R K)`\n`- instance : TopologicalRing (InfiniteAdeleRing K) := Pi.instTopologicalRing`\n`- instance : TopologicalRing (Localization M)`\n`- instance : TopologicalRing (ProdAdicCompletions R K)`\n`- instance : TopologicalRing (ULift Œ±)`\n`- instance : TopologicalRing ‚Ñö := inferInstance`\n`- instance : TopologicalRing ‚Ñù := inferInstance`\n`- instance : TopologicalSemiring (ULift Œ±)`\n`- instance : TopologicalSemiring ‚Ñù‚â•0`\n`- instance [AddCommGroup Œ≤] [TopologicalAddGroup Œ≤] : AddCommGroup C_c(Œ±, Œ≤)`\n`- instance [AddGroup R] [TopologicalAddGroup R] : TopologicalAddGroup (Matrix m n R)`\n`- instance [CommGroup Œ≤] [TopologicalGroup Œ≤] : TopologicalGroup C(Œ±, Œ≤)`\n`- instance [ContinuousMul Œ±] : TopologicalGroup Œ±À£`\n`- instance [Fintype n] [NonUnitalNonAssocSemiring R] [TopologicalSemiring R] :`\n`- instance [Group Œ±] [TopologicalGroup Œ±] : TopologicalGroup Œ±·µê·µí·µñ`\n`- instance [Group Œ≤] [TopologicalGroup Œ≤] : Group C(Œ±, Œ≤)`\n`- instance [NonUnitalCommRing Œ≤] [TopologicalRing Œ≤] :`\n`- instance [NonUnitalCommSemiring Œ≤] [TopologicalSemiring Œ≤] :`\n`- instance [NonUnitalNonAssocRing Œ±] [NonUnitalNonAssocRing Œ≤] [TopologicalRing Œ±]`\n`- instance [NonUnitalNonAssocRing Œ≤] [TopologicalRing Œ≤] :`\n`- instance [NonUnitalNonAssocSemiring Œ±] [NonUnitalNonAssocSemiring Œ≤] [TopologicalSemiring Œ±]`\n`- instance [NonUnitalNonAssocSemiring Œ≤] [TopologicalSemiring Œ≤] :`\n`- instance [NonUnitalNonAssocSemiring Œ≤] [TopologicalSemiring Œ≤] [StarRing Œ≤] [ContinuousStar Œ≤] :`\n`- instance [NonUnitalRing Œ≤] [TopologicalRing Œ≤] : NonUnitalRing C_c(Œ±, Œ≤)`\n`- instance [NonUnitalSemiring Œ≤] [TopologicalSemiring Œ≤] :`\n`- instance [Ring R] [AddCommGroup M] [Module R M] [Module R·µê·µí·µñ M] [TopologicalRing R]`\n`- instance [TopologicalGroup G] : LieGroup I 0 G := by`\n`- instance [TopologicalGroup G] [CompactSpace G] (U : OpenSubgroup G) (K : OpenSubgroup U) :`\n`- instance [TopologicalSemiring A] (s : StarSubalgebra R A) : TopologicalSemiring s`\n`- instance [TopologicalSpace H] [Group H] [TopologicalGroup H] : TopologicalGroup (G √ó H)`\n`- instance _root_.ContinuousMulEquiv.isHaarMeasure_map [BorelSpace G] [TopologicalGroup G] {H : Type*}`\n`- instance _root_.TopologicalSemiring.toIsModuleTopology : IsModuleTopology R R := by`\n`- instance _root_.TopologicalSemiring.toOppositeIsModuleTopology : IsModuleTopology R·µê·µí·µñ R`\n`- instance {E : Type*} [TopologicalSpace E] [AddCommGroup E] [TopologicalAddGroup E]`\n`- instance {G} [TopologicalSpace G] [AddGroup G] [TopologicalAddGroup G] :`\n`- instance {G} [TopologicalSpace G] [Group G] [TopologicalGroup G] :`\n`- instance {R : Type*} [Ring R] [UniformSpace R] [TopologicalRing R] [UniformAddGroup R]`\n`-- instance [NonUnitalNonAssocRing Œ±] [TopologicalSpace Œ±] [TopologicalRing Œ±] :`\n`-- instance [NonUnitalNonAssocSemiring Œ±] [TopologicalSpace Œ±] [TopologicalSemiring Œ±] :`\n`----- instTopologicalRing`\n`----- instTopologicalSemiring`\n`--------- instTopologicalAddGroup`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-05T14:47:00Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dQEBC",
              "body": "I guess we want this for `Topological(Add)Group` too",
              "createdAt": "2025-02-05T23:06:54Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6eCr7Y",
              "body": "I think I don't like this change but I don't have a good argument for it, so let's say I have no objection.",
              "createdAt": "2025-02-11T17:14:21Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6eFu4z",
              "body": "> I felt like the community was ready for `IsTopologicalRing` though, nobody really seems to object when I suggest it.\r\n\r\nCan you link to a Zulip thread where you suggested that in the PR description, and also ping that thread to notify the people there about this PR?",
              "createdAt": "2025-02-11T23:39:16Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ekZ27",
              "body": "I'm happy enough with this to merge it, but let's see if another maintainer thinks there is enough consensus. I'll note that we *don't* have this for various algebraic mixins like `StarOrderedRing`, but perhaps we should.\r\n\r\nmaintainer merge",
              "createdAt": "2025-02-14T21:54:33Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ekZ8p",
              "body": "üöÄ Pull request has been placed on the maintainer queue by j-loreaux.",
              "createdAt": "2025-02-14T21:54:51Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6emICT",
              "body": "Could you adjust the PR title and the PR description to the fact that you are also doing topological groups?\r\nmaintainer merge",
              "createdAt": "2025-02-15T07:39:57Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6emIEC",
              "body": "üöÄ Pull request has been placed on the maintainer queue by sgouezel.",
              "createdAt": "2025-02-15T07:40:18Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6emJJR",
              "body": "I'm also in favour of this change.  It looks like voting here is by\n\nmaintainer merge\n\nso I'll follow the tradition! üòÑ",
              "createdAt": "2025-02-15T07:50:05Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6emJKr",
              "body": "üöÄ Pull request has been placed on the maintainer queue by adomani.",
              "createdAt": "2025-02-15T07:50:24Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6emNSV",
              "body": "LGTM too.",
              "createdAt": "2025-02-15T08:35:22Z",
              "author": {
                "login": "riccardobrasca"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "62de47d37c0eb8106e4085a6e16b249391869ee1",
                "additions": 263,
                "deletions": 191,
                "committedDate": "2025-02-05T14:42:46Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQVISg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159894805/job/36725672010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQhmpg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159952825/job/36725876390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQhl6A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159952791/job/36725876200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQhmtQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159952807/job/36725876405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQVKCA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159894821/job/36725672456"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQhoXw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159952811/job/36725876831"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQVIJQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159894821/job/36725671973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQVKQQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159894805/job/36725672513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQhmHg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159952811/job/36725876254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQVMQQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159894805/job/36725673025"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQbx0g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13159894821/job/36725780946"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQiG0A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36725884624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQjqGQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e8106ee9a7b582edfa49f223a15dddbad75f79bc",
                "additions": 177,
                "deletions": 176,
                "committedDate": "2025-02-05T14:50:44Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2JXw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160049320/job/36726212959"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2T6Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160050513/job/36726215657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2UEA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160050522/job/36726215696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2Geg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160049330/job/36726212218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2Vuw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160050516/job/36726216123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2Ibg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160049330/job/36726212718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2G4w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160049320/job/36726212323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2UEw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160050516/job/36726215699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRNSsQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160049330/job/36726592177"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2Lfw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160049320/job/36726213503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ2z0g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36726223826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjQ4dwg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d7d0c6815804d519f2a6bb5561a1d7087848487a",
                "additions": 0,
                "deletions": 72,
                "committedDate": "2025-02-05T14:54:35Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLR_w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149286/job/36726559231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLZjw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149968/job/36726561167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLY8g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149964/job/36726561010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRNVjA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149281/job/36726592908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLbCQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149965/job/36726561545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRNXYg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149281/job/36726593378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLQCA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149286/job/36726558728"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLZDA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149965/job/36726561036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRbiCQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149281/job/36726825481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRLTcA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160149286/job/36726559600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRL7_Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36726569981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRNYrw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3102477e9da0151133def0670c861f0340e25a9a",
                "additions": 24,
                "deletions": 24,
                "committedDate": "2025-02-05T15:00:10Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRamSg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160218269/job/36726810186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRasQQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160219052/job/36726811713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRarYA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160219033/job/36726811488"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRbnNQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160218262/job/36726826805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRar8w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160219048/job/36726811635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRblMw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160218262/job/36726826291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRapUQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160218269/job/36726810961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRauBA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160219048/job/36726812164"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRarZA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160218269/job/36726811492"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjSYAtA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13160218262/job/36727816372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRbU8w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36726822131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjRc-Og",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3d8686f65edb2aaabd2aa402b77b32c7173e58c7",
                "additions": 10,
                "deletions": 9,
                "committedDate": "2025-02-05T16:05:46Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtWGQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161547992/job/36731311641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjq0P3w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13168277443/job/36753444831"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtgvw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161548990/job/36731314367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjq0PhQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13168277448/job/36753444741"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVthBA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161549015/job/36731314436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjq0PfQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13168277441/job/36753444733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtWOw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161548002/job/36731311675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtjDg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161549005/job/36731314958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtYDA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161548002/job/36731312140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtZGA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161547992/job/36731312408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVthOQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161549005/job/36731314489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVtbVQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161547992/job/36731312981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjW5Big",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13161548002/job/36732551562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVuQ_w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36731326719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIjVv49Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "451382da70ebcafb51f974df66a45a20033cb758",
                "additions": 18244,
                "deletions": 9676,
                "committedDate": "2025-02-10T15:55:39Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4btiw",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244950956/job/36969049483"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4bt6w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244950957/job/36969049579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4by-A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244951499/job/36969050872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4byXA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244951492/job/36969050716"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4b0nA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244951504/job/36969051292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4bsRw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244950956/job/36969049159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4bsKQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244950957/job/36969049129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4byeA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244951504/job/36969050744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4q4vg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244950956/job/36969298110"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4bvtg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13244950957/job/36969050038"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4cZJg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36969060646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4d-yA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "765ffa39c9eae8400145b3cdce4ba2c9f16eab80",
                "additions": 611,
                "deletions": 611,
                "committedDate": "2025-02-10T15:59:15Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4p9zw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018277/job/36969283023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4qBOg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018902/job/36969283898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4qBbQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018906/job/36969283949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4q8tA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018268/job/36969299124"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4qDRg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018903/job/36969284422"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4q7JQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018268/job/36969298725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4p7lw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018277/job/36969282455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4qB-g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018903/job/36969284090"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4p_ng",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018277/job/36969283486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm7mWqg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13245018268/job/36972369578"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4qi4g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36969292514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIm4sHKA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c18597dfaff6d6394cfd06364993581b03f69f80",
                "additions": 7,
                "deletions": 6,
                "committedDate": "2025-02-10T18:34:53Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1SOQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247951767/job/36978905657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1cGA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247952710/job/36978908184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1byQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247952694/job/36978908105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1T-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247951765/job/36978906104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1eQg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247952712/job/36978908738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1SjA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247951765/job/36978905740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1UhQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247951767/job/36978906245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1cxQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247952712/job/36978908357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB1WPQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247951767/job/36978906685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInC3Syw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13247951765/job/36979987147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB128Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36978915057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInB3IPw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9c0d05478e9e02a1ab261da917bbb5474c0adece",
                "additions": 43,
                "deletions": 36,
                "committedDate": "2025-02-10T19:33:34Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNW3w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249390634/job/36983494367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNd4w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249391272/job/36983496163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNeCQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249391287/job/36983496201"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNW7g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249390637/job/36983494382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNeDA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249391291/job/36983496204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNYYw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249390637/job/36983494755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNZEA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249390634/job/36983494928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNfxQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249391291/job/36983496645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGNacA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249390634/job/36983495280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInHxihw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13249390637/job/36985135751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGN6gw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36983503491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInGPdFw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f91da01ad927e521e5deb91b57f08d09d26343a4",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-02-10T20:44:51Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInKjhrg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250823613/job/36988051886"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVRyA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084351/job/36985721288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoymXrw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286763893/job/37097150383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIn6lT6g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13267455515/job/37038412778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVUig",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084932/job/36985721994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIn6lUQA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13267455521/job/37038412864"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVUaQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084936/job/36985721961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIn6lUUw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13267455506/job/37038412883"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVP_Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084371/job/36985720829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoymVTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286763892/job/37097149772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVWmA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084964/job/36985722520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVQVQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084351/job/36985720917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoymVsQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286763893/job/37097149873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVRQg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084371/job/36985721154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoymXDA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286763892/job/37097150220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVVfg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084964/job/36985722238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVS_w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084351/job/36985721599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoymZOA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286763893/job/37097150776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIwXyA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13250084371/job/36986165192"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozCfGA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286763892/job/37097611032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIVy2g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36985729754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAInIXLGw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "032779580d9a580a1d170fa6750d3180c22ec9e6",
                "additions": 8134,
                "deletions": 5928,
                "committedDate": "2025-02-12T13:54:21Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUfWQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981155/job/37097906009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUcgQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981358/job/37097905281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUeBw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981350/job/37097905671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUfFw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981148/job/37097905943"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUfHg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981362/job/37097905950"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUcmg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981148/job/37097905306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUcmw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981155/job/37097905307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUckg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981362/job/37097905298"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozUgpQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981155/job/37097906341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozvp0Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13286981148/job/37098351057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozU_6A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37097914344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIozWejg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "57a91332c86a9084ea044ce4d2ccaae9ac5a813d",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-02-14T10:37:55Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbH8A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484183/job/37223843824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbUow",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485250/job/37223847075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbVBw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485242/job/37223847175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbIjA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484181/job/37223843980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbWBw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485253/job/37223847431"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbJUA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484183/job/37223844176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbJgg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484181/job/37223844226"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbVAQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485253/job/37223847169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbKnw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484183/job/37223844511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqsZYpg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484181/job/37224863910"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrbtpA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37223853476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIqrdIaA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-05T14:45:59Z",
        "deletions": 1007,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/HierarchyDesign.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/ZLattice/Covolume.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Analytic/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Analytic/Composition.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/Analytic/OfScalars.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Asymptotics/TVS.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/CStarMatrix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Isometric.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Order.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Restrict.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unique.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unital.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unitary.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/FormalMultilinearSeries.lean",
              "additions": 14,
              "deletions": 14
            },
            {
              "path": "Mathlib/Analysis/Complex/Circle.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/Tietze.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Convex/AmpleSet.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Extrema.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Gauge.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/GaugeRescale.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/KreinMilman.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Normed.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Strict.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Topology.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Analysis/Convex/Visible.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Convolution.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Distribution/SchwartzSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Fourier/FourierTransform.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Fourier/RiemannLebesgueLemma.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/EuclideanDist.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/AbsConvex.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Barrelled.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Bounded.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/StrongTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WeakOperatorTopology.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WeakSpace.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WithSeminorms.lean",
              "additions": 24,
              "deletions": 23
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Exponential.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/MatrixExponential.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/TrivSqZeroExt.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Lemmas.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/UnitBall.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Quotient.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Uniform.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/Compact.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Connected.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/DualNumber.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/HahnBanach/SeparatingDual.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Separation.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Multilinear/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Seminorm.lean",
              "additions": 11,
              "deletions": 10
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/ExpLog.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/PosPart.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/Rpow/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/OrdinaryHypergeometric.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SumOverResidueClass.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/EssSurj.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/IsFundamentalgroup.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Topology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Dynamics/Ergodic/Action/OfMinimal.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Dynamics/Flow.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Dynamics/OmegaLimit.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/KrullTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/LieGroup.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/Algebra/Structures.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/IsManifold/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/VectorBundle/Hom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/Polish/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/AEEqFun.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Group/LIntegral.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Group/Measure.lean",
              "additions": 22,
              "deletions": 22
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Content.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/EverywherePos.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Haar/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Haar/NormedSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Haar/Quotient.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Haar/Unique.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Lebesgue/VolumeOfBalls.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/VectorMeasure/Basic.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/AdeleRing.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Probability/Process/Adapted.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/FiniteAdeleRing.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/MvPowerSeries/PiTopology.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/PowerSeries/PiTopology.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/Algebra/Affine.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Algebra.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean",
              "additions": 15,
              "deletions": 15
            },
            {
              "path": "Mathlib/Topology/Algebra/Category/ProfiniteGrp/Limits.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ClopenNhdofOne.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/Algebra/ClosedSubgroup.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ContinuousAffineMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ContinuousMonoidHom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Equicontinuity.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Field.lean",
              "additions": 8,
              "deletions": 8
            }
          ]
        },
        "headRefName": "kbuzzard_nuke_TopologicalRing",
        "headRefOid": "57a91332c86a9084ea044ce4d2ccaae9ac5a813d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6KJuUL",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6aze3w",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-05T23:08:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6biPCm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2025-02-11T17:10:51Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21472,
        "potentialMergeCommit": {
          "oid": "9370416023725f51ca1b8ce5207cd042e02831da"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "xroblot"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6aze3w",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-05T23:08:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6bWTSh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2025-02-10T15:48:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6bhmGI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2025-02-11T16:16:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6biPCm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2025-02-11T17:10:51Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5z2_17",
                    "body": "Everything on this line is Prop-valued; what would you propose the rule is for `Is` vs not?",
                    "createdAt": "2025-02-05T23:08:57Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50MRTh",
                    "body": "The topology people are sometimes funny about the `Is` convention (because they have some other convention involving e.g. `IsCompact` and also `CompactSpace`) but the algebra people aren't, so I propose `IsTopologicalAddGroup` and leaving the rest alone. What do you think?",
                    "createdAt": "2025-02-10T15:48:28Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50TFMm",
                    "body": "I have now changed this to `IsTopologicalAddGroup`. I would argue that `Continuous` is a special case, because instead of an `IsContinuous` predicate we typically use the bundled `Continuous` typeclass. I would happily change everything to `Is` on that line but there has been some pushback from people with what I believe are largely spurious objections (e.g. \"it unnecessarily makes things a bit longer\"). I felt like the community was ready for `IsTopologicalRing` though, nobody really seems to object when I suggest it.",
                    "createdAt": "2025-02-11T16:16:43Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50TcvH",
                    "body": "Note that `ContinuousSMul` was called `has_continuous_smul` in Lean3.",
                    "createdAt": "2025-02-11T17:10:51Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbH8A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484183/job/37223843824"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbUow",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485250/job/37223847075"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbVBw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485242/job/37223847175"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbIjA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484181/job/37223843980"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbWBw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485253/job/37223847431"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbJUA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484183/job/37223844176"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbJgg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484181/job/37223844226"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbVAQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327485253/job/37223847169"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbKnw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484183/job/37223844511"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqsZYpg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13327484181/job/37224863910"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrbtpA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37223853476"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIqrdIaA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21472&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore: rename TopologicalRing -> IsTopologicalRing",
        "updatedAt": "2025-02-15T08:35:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21472",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "62de47d37c0eb8106e4085a6e16b249391869ee1"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dLlnW",
              "createdAt": "2025-02-05T14:47:00Z",
              "body": "### PR summary [57a91332c8](https://github.com/leanprover-community/mathlib4/pull/21472/commits/57a91332c86a9084ea044ce4d2ccaae9ac5a813d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsTopologicalAddGroup`\n`+ IsTopologicalAddGroup.addNegClosureNhd`\n`+ IsTopologicalAddGroup.pathConnectedSpace`\n`+ IsTopologicalGroup`\n`+ IsTopologicalGroup.continuous_conj`\n`+ IsTopologicalGroup.continuous_conj'`\n`+ IsTopologicalGroup.continuous_conj_prod`\n`+ IsTopologicalGroup.exists_antitone_basis_nhds_one`\n`+ IsTopologicalGroup.ext`\n`+ IsTopologicalGroup.ext_iff`\n`+ IsTopologicalGroup.isInducing_iff_nhds_one`\n`+ IsTopologicalGroup.mulInvClosureNhd`\n`+ IsTopologicalGroup.of_comm_of_nhds_one`\n`+ IsTopologicalGroup.of_nhds_one`\n`+ IsTopologicalGroup.of_nhds_one'`\n`+ IsTopologicalGroup.t1Space`\n`+ IsTopologicalGroup.t2Space_iff_one_closed`\n`+ IsTopologicalGroup.t2Space_of_one_sep`\n`+ IsTopologicalGroup.toUniformSpace`\n`+ IsTopologicalRing`\n`+ IsTopologicalRing.of_addGroup_of_nhds_zero`\n`+ IsTopologicalRing.of_nhds_zero`\n`+ IsTopologicalRing.of_norm`\n`+ IsTopologicalSemiring`\n`+ IsTopologicalSemiring.continuousNeg_of_mul`\n`+ IsTopologicalSemiring.toIsTopologicalRing`\n`+ OrderDual.instIsTopologicalGroup`\n`+ Pi.instIsTopologicalRing`\n`+ Pi.instIsTopologicalSemiring`\n`+ Subring.instIsTopologicalRing`\n`+ instIsTopologicalGroup`\n`+ instance (K L : Type*) [Field K] [Field L] [Algebra K L] : IsTopologicalGroup (L ‚âÉ‚Çê[K] L)`\n`+ instance (S : Subgroup G) : IsTopologicalGroup S`\n`+ instance (priority := 10) UniformGroup.to_topologicalGroup : IsTopologicalGroup Œ±`\n`+ instance (priority := 100) : IsTopologicalRing R`\n`+ instance (priority := 100) IsHaarMeasure.noAtoms [IsTopologicalGroup G] [BorelSpace G] [T1Space G]`\n`+ instance (priority := 100) IsTopologicalGroup.regularSpace : RegularSpace G := by`\n`+ instance (priority := 100) IsTopologicalGroup.to_continuousDiv [TopologicalSpace G] [Group G]`\n`+ instance (priority := 100) IsTopologicalRing.to_topologicalAddGroup [NonUnitalNonAssocRing Œ±]`\n`+ instance (priority := 100) LinearOrderedField.topologicalRing : IsTopologicalRing ùïú`\n`+ instance (priority := 100) NonUnitalSeminormedRing.toIsTopologicalRing [NonUnitalSeminormedRing Œ±] :`\n`+ instance (priority := 100) SeminormedCommGroup.toIsTopologicalGroup : IsTopologicalGroup E`\n`+ instance (priority := 100) continuousSMul [IsTopologicalRing R] :`\n`+ instance (priority := 600) hSpace (G : Type u) [TopologicalSpace G] [Group G]`\n`+ instance (s : Subalgebra R A) : IsTopologicalSemiring s`\n`+ instance (v : HeightOneSpectrum R) : IsTopologicalRing (v.adicCompletionIntegers K)`\n`+ instance : IsTopologicalAddGroup (TangentSpace I x) := inferInstanceAs (IsTopologicalAddGroup E)`\n`+ instance : IsTopologicalAddGroup ‚Ñö := inferInstance`\n`+ instance : IsTopologicalAddGroup ‚Ñù := by infer_instance`\n`+ instance : IsTopologicalGroup (Aut F) := ‚ü®‚ü©`\n`+ instance : IsTopologicalGroup (ContinuousMonoidHom A E)`\n`+ instance : IsTopologicalGroup (PontryaginDual A)`\n`+ instance : IsTopologicalGroup (Profinite.limitCone (F ‚ãô (forget‚ÇÇ ProfiniteGrp Profinite))).pt`\n`+ instance : IsTopologicalGroup (ULift G)`\n`+ instance : IsTopologicalGroup Circle := Metric.sphere.topologicalGroup`\n`+ instance : IsTopologicalRing (AdeleRing R K) := instIsTopologicalRingProd`\n`+ instance : IsTopologicalRing (FiniteIntegralAdeles R K)`\n`+ instance : IsTopologicalRing (InfiniteAdeleRing K) := Pi.instIsTopologicalRing`\n`+ instance : IsTopologicalRing (Localization M)`\n`+ instance : IsTopologicalRing (ProdAdicCompletions R K)`\n`+ instance : IsTopologicalRing (ULift Œ±)`\n`+ instance : IsTopologicalRing ‚Ñö := inferInstance`\n`+ instance : IsTopologicalRing ‚Ñù := inferInstance`\n`+ instance : IsTopologicalSemiring (ULift Œ±)`\n`+ instance : IsTopologicalSemiring ‚Ñù‚â•0`\n`+ instance [AddCommGroup Œ≤] [IsTopologicalAddGroup Œ≤] : AddCommGroup C_c(Œ±, Œ≤)`\n`+ instance [AddGroup R] [IsTopologicalAddGroup R] : IsTopologicalAddGroup (Matrix m n R)`\n`+ instance [CommGroup Œ≤] [IsTopologicalGroup Œ≤] : IsTopologicalGroup C(Œ±, Œ≤)`\n`+ instance [ContinuousMul Œ±] : IsTopologicalGroup Œ±À£`\n`+ instance [Fintype n] [NonUnitalNonAssocSemiring R] [IsTopologicalSemiring R] :`\n`+ instance [Group Œ±] [IsTopologicalGroup Œ±] : IsTopologicalGroup Œ±·µê·µí·µñ`\n`+ instance [Group Œ≤] [IsTopologicalGroup Œ≤] : Group C(Œ±, Œ≤)`\n`+ instance [IsTopologicalGroup G] : LieGroup I 0 G := by`\n`+ instance [IsTopologicalGroup G] [CompactSpace G] (U : OpenSubgroup G) (K : OpenSubgroup U) :`\n`+ instance [IsTopologicalSemiring A] (s : StarSubalgebra R A) : IsTopologicalSemiring s`\n`+ instance [NonUnitalCommRing Œ≤] [IsTopologicalRing Œ≤] :`\n`+ instance [NonUnitalCommSemiring Œ≤] [IsTopologicalSemiring Œ≤] :`\n`+ instance [NonUnitalNonAssocRing Œ±] [NonUnitalNonAssocRing Œ≤] [IsTopologicalRing Œ±]`\n`+ instance [NonUnitalNonAssocRing Œ≤] [IsTopologicalRing Œ≤] :`\n`+ instance [NonUnitalNonAssocSemiring Œ±] [NonUnitalNonAssocSemiring Œ≤] [IsTopologicalSemiring Œ±]`\n`+ instance [NonUnitalNonAssocSemiring Œ≤] [IsTopologicalSemiring Œ≤] :`\n`+ instance [NonUnitalNonAssocSemiring Œ≤] [IsTopologicalSemiring Œ≤] [StarRing Œ≤] [ContinuousStar Œ≤] :`\n`+ instance [NonUnitalRing Œ≤] [IsTopologicalRing Œ≤] : NonUnitalRing C_c(Œ±, Œ≤)`\n`+ instance [NonUnitalSemiring Œ≤] [IsTopologicalSemiring Œ≤] :`\n`+ instance [Ring R] [AddCommGroup M] [Module R M] [Module R·µê·µí·µñ M] [IsTopologicalRing R]`\n`+ instance [TopologicalSpace H] [Group H] [IsTopologicalGroup H] : IsTopologicalGroup (G √ó H)`\n`+ instance _root_.ContinuousMulEquiv.isHaarMeasure_map [BorelSpace G] [IsTopologicalGroup G]`\n`+ instance _root_.IsTopologicalSemiring.toIsModuleTopology : IsModuleTopology R R := by`\n`+ instance _root_.IsTopologicalSemiring.toOppositeIsModuleTopology : IsModuleTopology R·µê·µí·µñ R`\n`+ instance {E : Type*} [TopologicalSpace E] [AddCommGroup E] [IsTopologicalAddGroup E]`\n`+ instance {G} [TopologicalSpace G] [AddGroup G] [IsTopologicalAddGroup G] :`\n`+ instance {G} [TopologicalSpace G] [Group G] [IsTopologicalGroup G] :`\n`+ instance {R : Type*} [Ring R] [UniformSpace R] [IsTopologicalRing R] [UniformAddGroup R]`\n`++ instance [NonUnitalNonAssocRing Œ±] [TopologicalSpace Œ±] [IsTopologicalRing Œ±] :`\n`++ instance [NonUnitalNonAssocSemiring Œ±] [TopologicalSpace Œ±] [IsTopologicalSemiring Œ±] :`\n`+++++ instIsTopologicalRing`\n`+++++ instIsTopologicalSemiring`\n`+++++++++ instIsTopologicalAddGroup`\n`+++--- neg`\n`++-- div`\n`++-- eventually_nhds_zero_mapsTo`\n`++-- hasBasis_nhds_zero`\n`++-- hasBasis_nhds_zero_of_basis`\n`++-- instTopologicalSpace`\n`++-- inv`\n`++-- mul_iff_left`\n`++-- mul_iff_right`\n`++-- neg_left`\n`++-- neg_right`\n`++-- nhds_zero_eq`\n`++-- nhds_zero_eq_of_basis`\n`++--+- instCompleteSpace`\n`+-+- instCommGroup`\n`+-+- instGroup`\n`+-+- instNonUnitalCommRing`\n`+-+- instNonUnitalCommSemiring`\n`+-+- instNonUnitalNonAssocRing`\n`+-+- instNonUnitalRing`\n`+-+- instNonUnitalSemiring`\n`+-+- instZPow`\n`+-+- instZSMul`\n`+-+- sub`\n`+-+- topologicalAddGroup`\n`+-+- topologicalRing`\n`+-+-+-+- instAddCommGroup`\n`- OrderDual.instTopologicalGroup`\n`- Pi.instTopologicalRing`\n`- Pi.instTopologicalSemiring`\n`- Subring.instTopologicalRing`\n`- TopologicalAddGroup`\n`- TopologicalAddGroup.addNegClosureNhd`\n`- TopologicalAddGroup.pathConnectedSpace`\n`- TopologicalGroup`\n`- TopologicalGroup.continuous_conj`\n`- TopologicalGroup.continuous_conj'`\n`- TopologicalGroup.continuous_conj_prod`\n`- TopologicalGroup.exists_antitone_basis_nhds_one`\n`- TopologicalGroup.ext`\n`- TopologicalGroup.ext_iff`\n`- TopologicalGroup.isInducing_iff_nhds_one`\n`- TopologicalGroup.mulInvClosureNhd`\n`- TopologicalGroup.of_comm_of_nhds_one`\n`- TopologicalGroup.of_nhds_one`\n`- TopologicalGroup.of_nhds_one'`\n`- TopologicalGroup.t1Space`\n`- TopologicalGroup.t2Space_iff_one_closed`\n`- TopologicalGroup.t2Space_of_one_sep`\n`- TopologicalGroup.toUniformSpace`\n`- TopologicalRing`\n`- TopologicalRing.of_addGroup_of_nhds_zero`\n`- TopologicalRing.of_nhds_zero`\n`- TopologicalRing.of_norm`\n`- TopologicalSemiring`\n`- TopologicalSemiring.continuousNeg_of_mul`\n`- TopologicalSemiring.toTopologicalRing`\n`- instTopologicalGroup`\n`- instance (K L : Type*) [Field K] [Field L] [Algebra K L] : TopologicalGroup (L ‚âÉ‚Çê[K] L)`\n`- instance (S : Subgroup G) : TopologicalGroup S`\n`- instance (priority := 10) UniformGroup.to_topologicalGroup : TopologicalGroup Œ±`\n`- instance (priority := 100) : TopologicalRing R`\n`- instance (priority := 100) IsHaarMeasure.noAtoms [TopologicalGroup G] [BorelSpace G] [T1Space G]`\n`- instance (priority := 100) LinearOrderedField.topologicalRing : TopologicalRing ùïú`\n`- instance (priority := 100) NonUnitalSeminormedRing.toTopologicalRing [NonUnitalSeminormedRing Œ±] :`\n`- instance (priority := 100) SeminormedCommGroup.toTopologicalGroup : TopologicalGroup E`\n`- instance (priority := 100) TopologicalGroup.regularSpace : RegularSpace G := by`\n`- instance (priority := 100) TopologicalGroup.to_continuousDiv [TopologicalSpace G] [Group G]`\n`- instance (priority := 100) TopologicalRing.to_topologicalAddGroup [NonUnitalNonAssocRing Œ±]`\n`- instance (priority := 100) continuousSMul [TopologicalRing R] :`\n`- instance (priority := 600) hSpace (G : Type u) [TopologicalSpace G] [Group G] [TopologicalGroup G] :`\n`- instance (s : Subalgebra R A) : TopologicalSemiring s`\n`- instance (v : HeightOneSpectrum R) : TopologicalRing (v.adicCompletionIntegers K)`\n`- instance : TopologicalAddGroup (TangentSpace I x) := inferInstanceAs (TopologicalAddGroup E)`\n`- instance : TopologicalAddGroup ‚Ñö := inferInstance`\n`- instance : TopologicalAddGroup ‚Ñù := by infer_instance`\n`- instance : TopologicalGroup (Aut F) := ‚ü®‚ü©`\n`- instance : TopologicalGroup (ContinuousMonoidHom A E)`\n`- instance : TopologicalGroup (PontryaginDual A)`\n`- instance : TopologicalGroup (Profinite.limitCone (F ‚ãô (forget‚ÇÇ ProfiniteGrp Profinite))).pt`\n`- instance : TopologicalGroup (ULift G)`\n`- instance : TopologicalGroup Circle := Metric.sphere.topologicalGroup`\n`- instance : TopologicalRing (AdeleRing R K) := instTopologicalRingProd`\n`- instance : TopologicalRing (FiniteIntegralAdeles R K)`\n`- instance : TopologicalRing (InfiniteAdeleRing K) := Pi.instTopologicalRing`\n`- instance : TopologicalRing (Localization M)`\n`- instance : TopologicalRing (ProdAdicCompletions R K)`\n`- instance : TopologicalRing (ULift Œ±)`\n`- instance : TopologicalRing ‚Ñö := inferInstance`\n`- instance : TopologicalRing ‚Ñù := inferInstance`\n`- instance : TopologicalSemiring (ULift Œ±)`\n`- instance : TopologicalSemiring ‚Ñù‚â•0`\n`- instance [AddCommGroup Œ≤] [TopologicalAddGroup Œ≤] : AddCommGroup C_c(Œ±, Œ≤)`\n`- instance [AddGroup R] [TopologicalAddGroup R] : TopologicalAddGroup (Matrix m n R)`\n`- instance [CommGroup Œ≤] [TopologicalGroup Œ≤] : TopologicalGroup C(Œ±, Œ≤)`\n`- instance [ContinuousMul Œ±] : TopologicalGroup Œ±À£`\n`- instance [Fintype n] [NonUnitalNonAssocSemiring R] [TopologicalSemiring R] :`\n`- instance [Group Œ±] [TopologicalGroup Œ±] : TopologicalGroup Œ±·µê·µí·µñ`\n`- instance [Group Œ≤] [TopologicalGroup Œ≤] : Group C(Œ±, Œ≤)`\n`- instance [NonUnitalCommRing Œ≤] [TopologicalRing Œ≤] :`\n`- instance [NonUnitalCommSemiring Œ≤] [TopologicalSemiring Œ≤] :`\n`- instance [NonUnitalNonAssocRing Œ±] [NonUnitalNonAssocRing Œ≤] [TopologicalRing Œ±]`\n`- instance [NonUnitalNonAssocRing Œ≤] [TopologicalRing Œ≤] :`\n`- instance [NonUnitalNonAssocSemiring Œ±] [NonUnitalNonAssocSemiring Œ≤] [TopologicalSemiring Œ±]`\n`- instance [NonUnitalNonAssocSemiring Œ≤] [TopologicalSemiring Œ≤] :`\n`- instance [NonUnitalNonAssocSemiring Œ≤] [TopologicalSemiring Œ≤] [StarRing Œ≤] [ContinuousStar Œ≤] :`\n`- instance [NonUnitalRing Œ≤] [TopologicalRing Œ≤] : NonUnitalRing C_c(Œ±, Œ≤)`\n`- instance [NonUnitalSemiring Œ≤] [TopologicalSemiring Œ≤] :`\n`- instance [Ring R] [AddCommGroup M] [Module R M] [Module R·µê·µí·µñ M] [TopologicalRing R]`\n`- instance [TopologicalGroup G] : LieGroup I 0 G := by`\n`- instance [TopologicalGroup G] [CompactSpace G] (U : OpenSubgroup G) (K : OpenSubgroup U) :`\n`- instance [TopologicalSemiring A] (s : StarSubalgebra R A) : TopologicalSemiring s`\n`- instance [TopologicalSpace H] [Group H] [TopologicalGroup H] : TopologicalGroup (G √ó H)`\n`- instance _root_.ContinuousMulEquiv.isHaarMeasure_map [BorelSpace G] [TopologicalGroup G] {H : Type*}`\n`- instance _root_.TopologicalSemiring.toIsModuleTopology : IsModuleTopology R R := by`\n`- instance _root_.TopologicalSemiring.toOppositeIsModuleTopology : IsModuleTopology R·µê·µí·µñ R`\n`- instance {E : Type*} [TopologicalSpace E] [AddCommGroup E] [TopologicalAddGroup E]`\n`- instance {G} [TopologicalSpace G] [AddGroup G] [TopologicalAddGroup G] :`\n`- instance {G} [TopologicalSpace G] [Group G] [TopologicalGroup G] :`\n`- instance {R : Type*} [Ring R] [UniformSpace R] [TopologicalRing R] [UniformAddGroup R]`\n`-- instance [NonUnitalNonAssocRing Œ±] [TopologicalSpace Œ±] [TopologicalRing Œ±] :`\n`-- instance [NonUnitalNonAssocSemiring Œ±] [TopologicalSpace Œ±] [TopologicalSemiring Œ±] :`\n`----- instTopologicalRing`\n`----- instTopologicalSemiring`\n`--------- instTopologicalAddGroup`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e8106ee9a7b582edfa49f223a15dddbad75f79bc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d7d0c6815804d519f2a6bb5561a1d7087848487a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3102477e9da0151133def0670c861f0340e25a9a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3d8686f65edb2aaabd2aa402b77b32c7173e58c7"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dQEBC",
              "createdAt": "2025-02-05T23:06:54Z",
              "body": "I guess we want this for `Topological(Add)Group` too",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6aze3w",
              "createdAt": "2025-02-05T23:08:57Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6o3n3uzwAAAAPFzxVR",
              "createdAt": "2025-02-06T03:14:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "451382da70ebcafb51f974df66a45a20033cb758"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6o3n3uzwAAAAPImCAG",
              "createdAt": "2025-02-10T15:56:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "765ffa39c9eae8400145b3cdce4ba2c9f16eab80"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c18597dfaff6d6394cfd06364993581b03f69f80"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9c0d05478e9e02a1ab261da917bbb5474c0adece"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f91da01ad927e521e5deb91b57f08d09d26343a4"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6o3n3uzwAAAAPI4U8_",
              "createdAt": "2025-02-10T21:30:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6eCr7Y",
              "createdAt": "2025-02-11T17:14:21Z",
              "body": "I think I don't like this change but I don't have a good argument for it, so let's say I have no objection.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6o3n3uzwAAAAPJt2Vy",
              "createdAt": "2025-02-11T18:11:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6eFu4z",
              "createdAt": "2025-02-11T23:39:16Z",
              "body": "> I felt like the community was ready for `IsTopologicalRing` though, nobody really seems to object when I suggest it.\r\n\r\nCan you link to a Zulip thread where you suggested that in the PR description, and also ping that thread to notify the people there about this PR?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6o3n3uzwAAAAPKbrkR",
              "createdAt": "2025-02-12T13:42:26Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "032779580d9a580a1d170fa6750d3180c22ec9e6"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6o3n3uzwAAAAPKcaZk",
              "createdAt": "2025-02-12T13:55:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "57a91332c86a9084ea044ce4d2ccaae9ac5a813d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ekZ27",
              "createdAt": "2025-02-14T21:54:33Z",
              "body": "I'm happy enough with this to merge it, but let's see if another maintainer thinks there is enough consensus. I'll note that we *don't* have this for various algebraic mixins like `StarOrderedRing`, but perhaps we should.\r\n\r\nmaintainer merge",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ekZ8p",
              "createdAt": "2025-02-14T21:54:51Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by j-loreaux.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6o3n3uzwAAAAPMniVB",
              "createdAt": "2025-02-14T21:54:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6emICT",
              "createdAt": "2025-02-15T07:39:57Z",
              "body": "Could you adjust the PR title and the PR description to the fact that you are also doing topological groups?\r\nmaintainer merge",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6emIEC",
              "createdAt": "2025-02-15T07:40:18Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by sgouezel.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6emJJR",
              "createdAt": "2025-02-15T07:50:05Z",
              "body": "I'm also in favour of this change.  It looks like voting here is by\n\nmaintainer merge\n\nso I'll follow the tradition! üòÑ",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6emJKr",
              "createdAt": "2025-02-15T07:50:24Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by adomani.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6emNSV",
              "createdAt": "2025-02-15T08:35:22Z",
              "body": "LGTM too.",
              "author": {
                "login": "riccardobrasca"
              }
            }
          ]
        }
      }
    }
  }
}
