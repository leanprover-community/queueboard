{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 222,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Many proofs use the \"stream of consciousness\" style from Lean 3, rather than `have ... := ` or `suffices ... from/by`.\r\n\r\nThis PR updates a fraction of these to the preferred Lean 4 style.\r\n\r\nI think a good goal would be to delete the \"deferred\" versions of `have`, `suffices`, and `let` at the bottom of `Mathlib.Tactic.Have`\r\n\r\n(Anyone who would like to contribute more cleanup is welcome to push directly to this branch.)\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 53,
        "closed": true,
        "closedAt": "2023-09-07T23:49:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ltg31",
              "body": "I personally think the style with `have/suffices ... \\. proof` is really quite nice and it's a shame we're getting rid of it. The new `from` looks weird to me without the preceding comma, too.",
              "createdAt": "2023-09-05T11:20:30Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lt8mR",
              "body": "I think both styles are fine. @semorrison what do you see as the downside of the\r\n```\r\nhave : bla\r\n· proof\r\n```\r\nstyle?",
              "createdAt": "2023-09-05T12:38:46Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lxeAC",
              "body": "I think this is a lean3-ism, which unnecessarily introduces an intermediate tactic state with multiple goals (immediately before the `·`) which doesn't help either human or machine readers of the code.\r\n\r\nThis PR originated because I made a PR upstreaming the tactic supporting this style to Std, and @digama0 (correctly, I think!) told me this was [a bad idea](https://github.com/leanprover/std4/pull/239).\r\n\r\nSupporting this syntax also makes parsing slightly more complicated, because Lean has to decide whether the core syntax or the overriden syntax from Mathlib is relevant. Of course it can cope, but why not make it unambiguous? \r\n\r\nI think everything is better about the new style, and we should consciously move on from lean3-isms where possible, rather than holding on to them out of familiarity.  ",
              "createdAt": "2023-09-06T00:13:17Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lzCdz",
              "body": "One reason not to do this manually is that this syntactic transformation is within the realm of things we could do automatically (once we get full library syntax rewrites working).",
              "createdAt": "2023-09-06T08:13:54Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lzKUb",
              "body": "Sorry, why is that a reason to not do it? Are you asking that this be left as a warm-up / practice problem for full library rewrites?",
              "createdAt": "2023-09-06T08:35:17Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l5RMZ",
              "body": "It's fine if you want to do it now, but it might be a waste of work if a computer will soon automate the job.",
              "createdAt": "2023-09-07T05:44:19Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l5875",
              "body": "I wasn't proposing to do anymore than are already here.",
              "createdAt": "2023-09-07T08:20:26Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l7Yr6",
              "body": "I have always difficulties with the syntax for `suffices`. Why isn't it `suffices H : ... := by ...` just like everywhere else?",
              "createdAt": "2023-09-07T12:29:15Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l7bUB",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-07T12:35:56Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l-WMt",
              "body": "bors merge",
              "createdAt": "2023-09-07T22:31:11Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l-jUE",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6115406159/job/16598887808)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6115406159/job/16598888042)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6115406159/job/16598887927)",
              "createdAt": "2023-09-07T23:49:32Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "eef9c48d529d37fa3277766c4a5493824a3dcde8",
                "additions": 225,
                "deletions": 239,
                "committedDate": "2023-09-05T11:05:32Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "025c609450e68df9eb84be3a394d18e109af13ea",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-09-05T11:10:06Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "793fbc550282470ae5733f468d3cde6572a3cb50",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2023-09-07T22:25:26Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott@tqft.net"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-05T11:07:17Z",
        "deletions": 239,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/GCDMonoid/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Abelian/NonPreadditive.lean",
              "additions": 25,
              "deletions": 26
            },
            {
              "path": "Mathlib/CategoryTheory/Adjunction/FullyFaithful.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Closed/Cartesian.lean",
              "additions": 14,
              "deletions": 12
            },
            {
              "path": "Mathlib/CategoryTheory/ConnectedComponents.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/FilteredColimitCommutesFiniteLimit.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Final.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/KanExtension.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/RegularMono.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Types.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean",
              "additions": 4,
              "deletions": 8
            },
            {
              "path": "Mathlib/CategoryTheory/Subobject/MonoOver.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Combinatorics/HalesJewett.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Computability/Primrec.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Computability/TuringMachine.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Control/Fix.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Control/LawfulFix.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Bitvec/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Bool/Count.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/FinEnum.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finset/NatAntidiagonal.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/List/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/List/Chain.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/EditDistance/Bounds.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/List/EditDistance/Estimator.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/List/Indexes.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/List/Perm.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/Rotate.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Multiset/Basic.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Data/Nat/Bitwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Nat/Choose/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/Nat/Factorial/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/ForSqrt.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Num/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Ordmap/Ordset.lean",
              "additions": 49,
              "deletions": 48
            },
            {
              "path": "Mathlib/Data/Rat/Floor.lean",
              "additions": 5,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/Real/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Real/CauSeq.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Set/Equitable.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Set/Intervals/OrdConnectedComponent.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/TypeVec.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Dynamics/PeriodicPts.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/GroupTheory/Archimedean.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/FrobeniusNumber.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Disjointed.lean",
              "additions": 4,
              "deletions": 6
            },
            {
              "path": "Mathlib/Order/Filter/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/FixedPoints.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/PrimeIdeal.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/SuccPred/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/SuccPred/LinearLocallyFinite.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Order/SupIndep.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Game/PGame.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/NormNum/Prime.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "stream_of_tactics",
        "headRefOid": "793fbc550282470ae5733f468d3cde6572a3cb50",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Zj-u8",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gR-Fl",
              "body": "It's clearly much better like that, thanks!\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-09-07T12:35:54Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6964,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gR-Fl",
              "body": "It's clearly much better like that, thanks!\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-09-07T12:35:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol0UP",
                    "body": "```suggestion\r\n  suffices i + j = n ∧ j ≤ k ↔ ∃ a, a + j = k ∧ a + (n - k) = i by simpa\r\n```",
                    "createdAt": "2023-09-07T12:32:02Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol0cm",
                    "body": "```suggestion\r\n  suffices i + j = n ∧ k ≤ i ↔ ∃ a, a + j = n - k ∧ a + k = i by simpa\r\n```",
                    "createdAt": "2023-09-07T12:32:30Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol0hW",
                    "body": "```suggestion\r\n    by simp [← h (pure b)]\r\n```",
                    "createdAt": "2023-09-07T12:32:47Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol0op",
                    "body": "```suggestion\r\n  suffices ∃ a, a <:+ xs ∧ levenshtein C a ys = levenshtein C a' ys by simpa\r\n```",
                    "createdAt": "2023-09-07T12:33:12Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ol1Ip",
                    "body": "```suggestion\r\n  suffices ass : x ⊓ y ⊔ x ⊓ yᶜ ∈ J by rwa [sup_inf_inf_compl] at ass\r\n```",
                    "createdAt": "2023-09-07T12:35:11Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjM3OTg0ODUx",
              "login": "ericrbg"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: avoid lean3 style have/suffices",
        "updatedAt": "2023-09-07T23:49:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6964",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "eef9c48d529d37fa3277766c4a5493824a3dcde8"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wKR-czwAAAAJk3j0e",
              "createdAt": "2023-09-05T11:07:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wKR-czwAAAAJk3j0j",
              "createdAt": "2023-09-05T11:07:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOH5Wj9M5ORnLB",
              "createdAt": "2023-09-05T11:07:53Z",
              "source": {
                "id": "PR_kwDOH5Wj9M5ZiVIr",
                "title": "chore: upstream have/suffices/let without :=",
                "url": "https://github.com/leanprover-community/batteries/pull/239"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "025c609450e68df9eb84be3a394d18e109af13ea"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ltg31",
              "createdAt": "2023-09-05T11:20:30Z",
              "body": "I personally think the style with `have/suffices ... \\. proof` is really quite nice and it's a shame we're getting rid of it. The new `from` looks weird to me without the preceding comma, too.",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wKR-czwAAAAJk6xjm",
              "createdAt": "2023-09-05T12:28:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lt8mR",
              "createdAt": "2023-09-05T12:38:46Z",
              "body": "I think both styles are fine. @semorrison what do you see as the downside of the\r\n```\r\nhave : bla\r\n· proof\r\n```\r\nstyle?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lxeAC",
              "createdAt": "2023-09-06T00:13:17Z",
              "body": "I think this is a lean3-ism, which unnecessarily introduces an intermediate tactic state with multiple goals (immediately before the `·`) which doesn't help either human or machine readers of the code.\r\n\r\nThis PR originated because I made a PR upstreaming the tactic supporting this style to Std, and @digama0 (correctly, I think!) told me this was [a bad idea](https://github.com/leanprover/std4/pull/239).\r\n\r\nSupporting this syntax also makes parsing slightly more complicated, because Lean has to decide whether the core syntax or the overriden syntax from Mathlib is relevant. Of course it can cope, but why not make it unambiguous? \r\n\r\nI think everything is better about the new style, and we should consciously move on from lean3-isms where possible, rather than holding on to them out of familiarity.  ",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lzCdz",
              "createdAt": "2023-09-06T08:13:54Z",
              "body": "One reason not to do this manually is that this syntactic transformation is within the realm of things we could do automatically (once we get full library syntax rewrites working).",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lzKUb",
              "createdAt": "2023-09-06T08:35:17Z",
              "body": "Sorry, why is that a reason to not do it? Are you asking that this be left as a warm-up / practice problem for full library rewrites?",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l5RMZ",
              "createdAt": "2023-09-07T05:44:19Z",
              "body": "It's fine if you want to do it now, but it might be a waste of work if a computer will soon automate the job.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l5875",
              "createdAt": "2023-09-07T08:20:26Z",
              "body": "I wasn't proposing to do anymore than are already here.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l7Yr6",
              "createdAt": "2023-09-07T12:29:15Z",
              "body": "I have always difficulties with the syntax for `suffices`. Why isn't it `suffices H : ... := by ...` just like everywhere else?",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gR-Fl",
              "createdAt": "2023-09-07T12:32:02Z",
              "body": "It's clearly much better like that, thanks!\r\nbors d+",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l7bUB",
              "createdAt": "2023-09-07T12:35:56Z",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wKR-czwAAAAJmVqRH",
              "createdAt": "2023-09-07T12:36:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wKR-czwAAAAJmVqTN",
              "createdAt": "2023-09-07T12:36:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "793fbc550282470ae5733f468d3cde6572a3cb50"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOB7kabM5OUkfM",
              "createdAt": "2023-09-07T22:30:55Z",
              "source": {
                "id": "I_kwDOB7kabM5wc8AT",
                "title": "suffices syntax could be made more uniform with other tactics",
                "url": "https://github.com/leanprover/lean4/issues/2520"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l-WMt",
              "createdAt": "2023-09-07T22:31:11Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wKR-czwAAAAJmptvx",
              "createdAt": "2023-09-07T22:31:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l-jUE",
              "createdAt": "2023-09-07T23:49:32Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6115406159/job/16598887808)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6115406159/job/16598888042)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6115406159/job/16598887927)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wKR-czwAAAAJmrCwb",
              "createdAt": "2023-09-07T23:49:33Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wKR-czwAAAAJmrCy8",
              "createdAt": "2023-09-07T23:49:36Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OVFA-",
              "createdAt": "2023-09-08T11:01:25Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WI83C",
                "title": "[Merged by Bors] - feat: von Neumann Mean Ergodic Theorem",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6053"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PHDmP",
              "createdAt": "2023-10-30T13:11:11Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5dMKMu",
                "title": "feat: Hölder's inequality for more than 2 functions",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7756"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Q2CxS",
              "createdAt": "2024-02-14T11:03:14Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5m1Oil",
                "title": "[Merged by Bors] - feat: Linear and quadratic bounds on `sin` and `cos`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10525"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Q2no3",
              "createdAt": "2024-02-14T19:24:36Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5m2fCK",
                "title": "[Merged by Bors] - refactor: do not import old-style `have`/`suffices`/`replace` within mathlib",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10534"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Q6VjS",
              "createdAt": "2024-02-16T20:33:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5nIBqS",
                "title": "[Merged by Bors] - chore: remove stream-of-consciousness uses of `have`, `replace` and `suffices`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10640"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
