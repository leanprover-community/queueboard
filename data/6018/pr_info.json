{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 0,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Briefly during the port we were adding \"Ported by\" headers, but only ~60 / 3000 files ended up with such a header.\r\n\r\nI propose deleting them.\r\n\r\nWe could consider adding these uniformly via a script, as part of the great history rewrite...?\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 66,
        "closed": true,
        "closedAt": "2023-07-24T14:02:08Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5h-C39",
              "body": "> We could consider adding these uniformly via a script, as part of the great history rewrite...?\r\n\r\nI wasn't planning on doing anything this involved when merging the histories together; doing this meaningfully would requires using the github API to ask for a list of authors for every commit in a PR, since many PRs were opened by one person but then someone else bore the brunt of the work.\r\n\r\nI think removing the headers is sensible: `Authors` is useful because it tells you who self-identified as a good reviewer for changes the file. `Ported by` only tells you about the history, which you can look at with git.",
              "createdAt": "2023-07-20T10:15:29Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iNduM",
              "body": "bors merge",
              "createdAt": "2023-07-24T11:03:54Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iOjIL",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289209655)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210115)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210352)",
              "createdAt": "2023-07-24T14:02:07Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0988506f2bb28a67ac299fa300b64d3b708e4e64",
                "additions": 0,
                "deletions": 66,
                "committedDate": "2023-07-20T05:35:11Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-20T05:36:29Z",
        "deletions": 66,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Divisibility/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Divisibility/Units.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/GroupPower/Ring.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Commute.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Equiv/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Equiv/TypeTags.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Equiv/Units/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Group.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Ring.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Hom/Units.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Field/Canonical/Defs.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Field/Defs.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Group/OrderIso.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Hom/Monoid.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Prod.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/WithTop.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Canonical.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/CharZero.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Defs.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Divisibility.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Equiv.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/EssentialImage.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Functor/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Iso.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/NatTrans.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Whiskering.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/ConnectedComponent.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Path.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Subquiver.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Symmetric.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Int/Cast/Lemmas.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Int/Dvd/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Int/Order/Lemmas.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/Choose/Central.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/ForSqrt.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/Log.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Pi/Algebra.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Accumulate.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Image.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Intervals/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Intervals/Group.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Intervals/SurjOn.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Opposite.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/TwoPointing.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Submonoid/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Init/Data/Sigma/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Equiv/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Equiv/Nat.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Chain.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/ConditionallyCompleteLattice/Group.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/SymmDiff.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Lift.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Datatypes.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Elimination.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Frontend.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Lemmas.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Parsing.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Preprocessing.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linarith/Verification.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Monotonicity/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Monotonicity/Lemmas.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/RestateAxiom.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/ToAdditive.lean",
              "additions": 0,
              "deletions": 1
            }
          ]
        },
        "headRefName": "rm_ported_by",
        "headRefOid": "0988506f2bb28a67ac299fa300b64d3b708e4e64",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5V9Yqp",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6018,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: remove 'Ported by' headers",
        "updatedAt": "2023-07-24T14:02:19Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6018",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0988506f2bb28a67ac299fa300b64d3b708e4e64"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sEyl5zwAAAAJMTQot",
              "createdAt": "2023-07-20T05:36:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sEyl5zwAAAAJMTQoy",
              "createdAt": "2023-07-20T05:36:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sEyl5zwAAAAJMVbSB",
              "createdAt": "2023-07-20T06:57:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5h-C39",
              "createdAt": "2023-07-20T10:15:29Z",
              "body": "> We could consider adding these uniformly via a script, as part of the great history rewrite...?\r\n\r\nI wasn't planning on doing anything this involved when merging the histories together; doing this meaningfully would requires using the github API to ask for a list of authors for every commit in a PR, since many PRs were opened by one person but then someone else bore the brunt of the work.\r\n\r\nI think removing the headers is sensible: `Authors` is useful because it tells you who self-identified as a good reviewer for changes the file. `Ported by` only tells you about the history, which you can look at with git.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iNduM",
              "createdAt": "2023-07-24T11:03:54Z",
              "body": "bors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sEyl5zwAAAAJOBFWI",
              "createdAt": "2023-07-24T11:04:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sEyl5zwAAAAJOBFY4",
              "createdAt": "2023-07-24T11:04:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iOjIL",
              "createdAt": "2023-07-24T14:02:07Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289209655)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210115)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210352)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sEyl5zwAAAAJOIGLT",
              "createdAt": "2023-07-24T14:02:08Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sEyl5zwAAAAJOIGvx",
              "createdAt": "2023-07-24T14:02:19Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
