{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 25,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-07-19T04:14:54Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hx2gO",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-07-18T15:31:45Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5h08dD",
              "body": "> Surely these instances could go in `Mathlib.Algebra.Order.Sub.Basic`?\r\n> \r\n> I'm generally in favour of smaller files but in this case the granularity seems a bit too fine. I note that though you import `Sub.Canonical`, in fact `Sub.Basic` suffices.\r\n> \r\n> In any case, I'll let you decide.\r\n> \r\n> bors d+\r\n\r\nUnfortunately in `Sub.Basic` we fail with: `error: failed to synthesize instance Add (α × β)`",
              "createdAt": "2023-07-19T01:55:53Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5h08vX",
              "body": "bors merge",
              "createdAt": "2023-07-19T01:57:57Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5h1ZKu",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5594412140/jobs/10229223484)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5594412140/jobs/10229223647)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5594412140/jobs/10229223748)",
              "createdAt": "2023-07-19T04:14:53Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "5d04f18c2cde8bcdac672ae2e3c4d4664f124abe",
                "additions": 35,
                "deletions": 0,
                "committedDate": "2023-07-14T08:37:45Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "653e00a37ea8e1eca945960ca4fbd53c665263cf",
                "additions": 6,
                "deletions": 3,
                "committedDate": "2023-07-14T08:42:40Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "194d6430798cc1047fe2da3e68ddcfa05fb7b756",
                "additions": 25,
                "deletions": 38,
                "committedDate": "2023-07-14T08:55:56Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5bb09f9e65df8c2b50f2731339e0eb8c28c4f13f",
                "additions": 9975,
                "deletions": 2584,
                "committedDate": "2023-07-19T01:56:54Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7458516147975424cf2e2134bfa4a408591fa18f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-19T01:57:18Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-14T08:56:35Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Sub/Prod.lean",
              "additions": 24,
              "deletions": 0
            }
          ]
        },
        "headRefName": "tsub_lemmas",
        "headRefOid": "7458516147975424cf2e2134bfa4a408591fa18f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Vf88c",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5bgxXS",
              "body": "Surely these instances could go in `Mathlib.Algebra.Order.Sub.Basic`?\r\n\r\nI'm generally in favour of smaller files but in this case the granularity seems a bit too fine. I note that though you import `Sub.Canonical`, in fact `Sub.Basic` suffices.\r\n\r\nIn any case, I'll let you decide.\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-07-18T15:31:43Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5890,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5bgxXS",
              "body": "Surely these instances could go in `Mathlib.Algebra.Order.Sub.Basic`?\r\n\r\nI'm generally in favour of smaller files but in this case the granularity seems a bit too fine. I note that though you import `Sub.Canonical`, in fact `Sub.Basic` suffices.\r\n\r\nIn any case, I'll let you decide.\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-07-18T15:31:43Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: product instances for `OrderedSub`",
        "updatedAt": "2023-07-19T04:14:59Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5890",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5d04f18c2cde8bcdac672ae2e3c4d4664f124abe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "653e00a37ea8e1eca945960ca4fbd53c665263cf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "194d6430798cc1047fe2da3e68ddcfa05fb7b756"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rjl1ozwAAAAJJTEb2",
              "createdAt": "2023-07-14T08:56:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rjl1ozwAAAAJJTEb8",
              "createdAt": "2023-07-14T08:56:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rjl1ozwAAAAJJTqWU",
              "createdAt": "2023-07-14T09:14:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rjl1ozwAAAAJJUvJ6",
              "createdAt": "2023-07-14T09:45:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5bgxXS",
              "createdAt": "2023-07-18T15:31:43Z",
              "body": "Surely these instances could go in `Mathlib.Algebra.Order.Sub.Basic`?\r\n\r\nI'm generally in favour of smaller files but in this case the granularity seems a bit too fine. I note that though you import `Sub.Canonical`, in fact `Sub.Basic` suffices.\r\n\r\nIn any case, I'll let you decide.\r\n\r\nbors d+",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hx2gO",
              "createdAt": "2023-07-18T15:31:45Z",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rjl1ozwAAAAJLOfZQ",
              "createdAt": "2023-07-18T15:32:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rjl1ozwAAAAJLOffD",
              "createdAt": "2023-07-18T15:32:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5h08dD",
              "createdAt": "2023-07-19T01:55:53Z",
              "body": "> Surely these instances could go in `Mathlib.Algebra.Order.Sub.Basic`?\r\n> \r\n> I'm generally in favour of smaller files but in this case the granularity seems a bit too fine. I note that though you import `Sub.Canonical`, in fact `Sub.Basic` suffices.\r\n> \r\n> In any case, I'll let you decide.\r\n> \r\n> bors d+\r\n\r\nUnfortunately in `Sub.Basic` we fail with: `error: failed to synthesize instance Add (α × β)`",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5bb09f9e65df8c2b50f2731339e0eb8c28c4f13f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7458516147975424cf2e2134bfa4a408591fa18f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5h08vX",
              "createdAt": "2023-07-19T01:57:57Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rjl1ozwAAAAJLhpB0",
              "createdAt": "2023-07-19T01:58:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5h1ZKu",
              "createdAt": "2023-07-19T04:14:53Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5594412140/jobs/10229223484)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5594412140/jobs/10229223647)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5594412140/jobs/10229223748)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5rjl1ozwAAAAJLj_C9",
              "createdAt": "2023-07-19T04:14:55Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5rjl1ozwAAAAJLj_H1",
              "createdAt": "2023-07-19T04:14:59Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
