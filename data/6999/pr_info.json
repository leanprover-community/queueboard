{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 13,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "dwrensha"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Similar to `Nat.ofDigits_digits_append_digits`, but with a `digits` on the RHS instead of an `ofDigits` on the LHS.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-09-08T12:17:06Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5l45fH",
              "body": "This is a generalization of a lemma that I needed for a USAMO problem: https://github.com/dwrensha/math-puzzles-in-lean4/blob/918bb01e426d1c60ae2f9b841dfeb95f1f9f7841/MathPuzzles/Usa2003Q1.lean#L21-L30\r\n\r\ncc @b-mehta, who minimized the proof of `digits_add'`, and @mo271 who has also worked on the `Data.Nat.Digits` file.",
              "createdAt": "2023-09-07T03:14:31Z",
              "author": {
                "login": "dwrensha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l5b2T",
              "body": "This also works\r\n\r\n```lean\r\ntheorem digits_append_digits {b m n : ℕ} (hb : 1 < b) :\r\n    digits b n ++ digits b m = digits b (n + b ^ (digits b n).length * m) := by\r\n  rw [← ofDigits_digits_append_digits]\r\n  refine' (digits_ofDigits b hb _ (fun l hl => _) (fun h_append => _)).symm\r\n  · rcases (List.mem_append.mp hl) with (h | h) <;> exact digits_lt_base hb h\r\n  · by_cases digits b m = []\r\n    · simp only [h, List.append_nil] at h_append ⊢\r\n      exact getLast_digit_ne_zero b <| digits_ne_nil_iff_ne_zero.mp h_append\r\n    · exact (List.getLast_append' _ _ h) ▸\r\n          (getLast_digit_ne_zero _ <| digits_ne_nil_iff_ne_zero.mp h)\r\n```          ",
              "createdAt": "2023-09-07T06:33:23Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l7M9N",
              "body": "@mo271 Thanks! Your proof looks nicer, so I switched to that.\r\n\r\nI also weakened `hb` to only require that `0 < b`, rather than `1 < b`.\r\n(We can't weaken it any more, because the theorem is *not* true if `b = 0`.)",
              "createdAt": "2023-09-07T11:54:40Z",
              "author": {
                "login": "dwrensha"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mBJ4X",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6120915076/job/16613690882)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6120915076/job/16613691112)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6120915076/job/16613690594)",
              "createdAt": "2023-09-08T12:17:04Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "edf3d4de4696db60c95b431f5d594d6de2943cc8",
                "additions": 13,
                "deletions": 0,
                "committedDate": "2023-09-07T03:11:14Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a927af2b195d6cdca42adb8a971c97409e19f2b9",
                "additions": 8,
                "deletions": 10,
                "committedDate": "2023-09-07T11:23:18Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fa8c033ba141e900b7699d0f0607785884df974b",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-09-07T11:50:40Z",
                "author": {
                  "name": "David Renshaw",
                  "email": "dwrenshaw@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-07T03:12:02Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Nat/Digits.lean",
              "additions": 13,
              "deletions": 0
            }
          ]
        },
        "headRefName": "digits-append-digits",
        "headRefOid": "fa8c033ba141e900b7699d0f0607785884df974b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5ZvMj2",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gRwYX",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-07T11:59:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gYvxy",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-08T09:46:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6999,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gPUWM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-07T05:54:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gPmPt",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-07T06:55:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gRwYX",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-07T11:59:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gYvxy",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-08T09:46:17Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OkNcM",
                    "body": "```suggestion\r\n    rw [List.getLast_append' _ _ (digits_ne_nil_iff_ne_zero.mpr hm)]\r\n```",
                    "createdAt": "2023-09-07T05:54:30Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ5NTc2OA==",
              "login": "dwrensha"
            },
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: add Nat.digits_append_digits",
        "updatedAt": "2023-09-08T12:17:19Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6999",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "edf3d4de4696db60c95b431f5d594d6de2943cc8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l45fH",
              "createdAt": "2023-09-07T03:14:31Z",
              "body": "This is a generalization of a lemma that I needed for a USAMO problem: https://github.com/dwrensha/math-puzzles-in-lean4/blob/918bb01e426d1c60ae2f9b841dfeb95f1f9f7841/MathPuzzles/Usa2003Q1.lean#L21-L30\r\n\r\ncc @b-mehta, who minimized the proof of `digits_add'`, and @mo271 who has also worked on the `Data.Nat.Digits` file.",
              "author": {
                "login": "dwrensha"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gPUWM",
              "createdAt": "2023-09-07T05:54:30Z",
              "body": "",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l5b2T",
              "createdAt": "2023-09-07T06:33:23Z",
              "body": "This also works\r\n\r\n```lean\r\ntheorem digits_append_digits {b m n : ℕ} (hb : 1 < b) :\r\n    digits b n ++ digits b m = digits b (n + b ^ (digits b n).length * m) := by\r\n  rw [← ofDigits_digits_append_digits]\r\n  refine' (digits_ofDigits b hb _ (fun l hl => _) (fun h_append => _)).symm\r\n  · rcases (List.mem_append.mp hl) with (h | h) <;> exact digits_lt_base hb h\r\n  · by_cases digits b m = []\r\n    · simp only [h, List.append_nil] at h_append ⊢\r\n      exact getLast_digit_ne_zero b <| digits_ne_nil_iff_ne_zero.mp h_append\r\n    · exact (List.getLast_append' _ _ h) ▸\r\n          (getLast_digit_ne_zero _ <| digits_ne_nil_iff_ne_zero.mp h)\r\n```          ",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gPmPt",
              "createdAt": "2023-09-07T06:55:24Z",
              "body": "",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a927af2b195d6cdca42adb8a971c97409e19f2b9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fa8c033ba141e900b7699d0f0607785884df974b"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5wW3LazwAAAAJmT9-0",
              "createdAt": "2023-09-07T11:50:49Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l7M9N",
              "createdAt": "2023-09-07T11:54:40Z",
              "body": "@mo271 Thanks! Your proof looks nicer, so I switched to that.\r\n\r\nI also weakened `hb` to only require that `0 < b`, rather than `1 < b`.\r\n(We can't weaken it any more, because the theorem is *not* true if `b = 0`.)",
              "author": {
                "login": "dwrensha"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gRwYX",
              "createdAt": "2023-09-07T11:59:53Z",
              "body": "",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wW3LazwAAAAJmt7u0",
              "createdAt": "2023-09-08T03:00:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gYvxy",
              "createdAt": "2023-09-08T09:46:17Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wW3LazwAAAAJm4v-y",
              "createdAt": "2023-09-08T09:46:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wW3LazwAAAAJm4wA-",
              "createdAt": "2023-09-08T09:46:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mBJ4X",
              "createdAt": "2023-09-08T12:17:04Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6120915076/job/16613690882)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6120915076/job/16613691112)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6120915076/job/16613690594)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wW3LazwAAAAJm-QVv",
              "createdAt": "2023-09-08T12:17:07Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wW3LazwAAAAJm-Qzo",
              "createdAt": "2023-09-08T12:17:19Z"
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
