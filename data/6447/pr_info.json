{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 487,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "AntoineChambert-Loir"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-10-05T10:24:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5j0Vj6",
              "body": "Remaining questions:\r\n- add the algebra case now or later?\r\n- what about the namespaces and, more generally, the names of all theorems?",
              "createdAt": "2023-08-11T12:17:11Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j3Sos",
              "body": "Thanks for these adjustments.\r\nShould the definitions of `lTensor.inverse`etc. be private? \r\nI had commented out the tag because I was using them in another file. ",
              "createdAt": "2023-08-11T21:49:05Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j4GxG",
              "body": "Each of the maps `rTensor.inverse` and `lTensor.inverse` is actually part of  linear_equiv which is easy to define from this, and gives an obvious understanding of the exactness. Should I add this ?",
              "createdAt": "2023-08-12T03:21:58Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j4I8V",
              "body": "(It remains to do the same for lTensor)",
              "createdAt": "2023-08-12T03:44:01Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j4JB8",
              "body": "Also : I can prove the result for algebras. It uses the result for submodules plus something like the thing I posted on Zulip. If that thing can be cleaned up quickly, then it is worth being added now.",
              "createdAt": "2023-08-12T03:44:53Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mE1gc",
              "body": "I attempted to give definitions for `lTensor` and use `TensorProduct.comm` to get the other ones.\r\nI am not sure the result is better. This could make the API slightly dissymmetric (unless one hides the definitions).\r\nAlso : there are coercion issues, because a LinearEquiv is not a LinearMap, so that some `rw` lemmas do not apply, etc.\r\n@jcommelin @kbuzzard can you tell me what you think I should do? ",
              "createdAt": "2023-09-09T16:02:39Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mLb8d",
              "body": "I believe I have followed all suggestions you made me.\r\nAfter the #exit, there are a few lemmas about TensorProduct.comm \r\nwhich I may simply drop, or turn into something potentially useful, while trivial to rewrite if needed.\r\n(Conjugating lTensor something with TensorProduct.comm gives rTensor, etc.)\r\n",
              "createdAt": "2023-09-11T17:08:34Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mLcgV",
              "body": "One final question : at a few points (line 550, for example), I need to add an explicit `have` which is proved by `rfl`, but is needed for another `rw`.  \r\nIs there a better way to achieve the same result?",
              "createdAt": "2023-09-11T17:10:19Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nRmP8",
              "body": "There was a merge conflict in Mathlib.lean.\r\nI added Mathlib.LinearAlgebra.TensorProduct.RightExactness at the (hopefully) correct line.",
              "createdAt": "2023-09-24T20:50:10Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nURg4",
              "body": "Do you think it is possible to split the PR?",
              "createdAt": "2023-09-25T10:13:02Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nY6XI",
              "body": "> Do you think it is possible to split the PR?\r\n\r\nYes and no : \r\nYes, because it can be naturally decomposed into two PRs, one for modules and the other for algebras ;\r\nNo, because I don't understand enough about git to delegate something to a subsequent PR…",
              "createdAt": "2023-09-25T23:08:06Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nY7nd",
              "body": "The lowest-tech version of splitting a PR is to simply have it open on github in one window, and copy over the pieces one at a time that you want to have in the earlier half of the PR.",
              "createdAt": "2023-09-25T23:14:44Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nagmj",
              "body": "> > Do you think it is possible to split the PR?\r\n> \r\n> Yes and no : Yes, because it can be naturally decomposed into two PRs, one for modules and the other for algebras ; No, because I don't understand enough about git to delegate something to a subsequent PR…\r\n\r\nYou can just open a new PR with only the module stuff (or the algebra stuff, whatever makes more sense to start with) and ignore this one. When the other one gets accepted just merge master into this one. Of course this is not the perfect solution since the modifications done in the other PR will probably be in conflict with this one, but this is usually not a big deal.\r\n\r\nIf you are interested in learning the right way to do it I guess internet is full of explanations, but I found [this](https://web.archive.org/web/20210116050503/https://unhashable.com/stacked-pull-requests-keeping-github-diffs-small/) one, suggested by Johan, very clear.",
              "createdAt": "2023-09-26T07:43:34Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nfbOi",
              "body": "@riccardobrasca I removed the case of algebras from this PR.",
              "createdAt": "2023-09-26T20:56:33Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oI60x",
              "body": "There is only [this](https://github.com/leanprover-community/mathlib4/pull/6447#discussion_r1291484918) left and then LGTM, thanks!\r\n\r\nbors d+",
              "createdAt": "2023-10-04T15:43:01Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oI62h",
              "body": ":v: AntoineChambert-Loir can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-10-04T15:43:03Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNdWa",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2023-10-05T08:22:43Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNdvi",
              "body": "Build failed:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6416509168/job/17420388572)",
              "createdAt": "2023-10-05T08:23:47Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNf7E",
              "body": "bors is complaining about a linter error.",
              "createdAt": "2023-10-05T08:29:09Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNh30",
              "body": "Let me correct this at once.",
              "createdAt": "2023-10-05T08:33:52Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNk9l",
              "body": "> Let me correct this at once.\r\n\r\nI don't understand why CI didn't catch this but bors did...",
              "createdAt": "2023-10-05T08:41:32Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNlU_",
              "body": "Maybe I could post something on Zulip about this?",
              "createdAt": "2023-10-05T08:42:26Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNlZR",
              "body": "> > Let me correct this at once.\r\n> \r\n> I don't understand why CI didn't catch this but bors did...\r\n\r\nAh, it's a new linter, that's probably the reason.",
              "createdAt": "2023-10-05T08:42:37Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oNv4h",
              "body": "bors merge",
              "createdAt": "2023-10-05T09:02:54Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oObTa",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6416928676/job/17421663507)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6416928676/job/17421663821)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6416928676/job/17421664402)",
              "createdAt": "2023-10-05T10:24:32Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "066f0f4d075f06de989b737bc5f3f82ef2888628",
                "additions": 317,
                "deletions": 0,
                "committedDate": "2023-08-08T13:49:50Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "57b2e95dfa18ac3a05f666a51e3d1b3df6dfff62",
                "additions": 6,
                "deletions": 5,
                "committedDate": "2023-08-08T14:14:00Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bc9025fa1b44e4ca1082eed8b425e8269ae3e3bf",
                "additions": 65,
                "deletions": 70,
                "committedDate": "2023-08-09T07:58:28Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "533ebc4c7cadb66ce29144e1935b6e31693e1215",
                "additions": 40,
                "deletions": 24,
                "committedDate": "2023-08-09T13:24:32Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "820737a635f69b70b3eda9c5820dc3b3173eeb52",
                "additions": 1,
                "deletions": 19,
                "committedDate": "2023-08-09T13:26:36Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6990767e16517dac325c042b672c20fee6447ee7",
                "additions": 54,
                "deletions": 25,
                "committedDate": "2023-08-09T14:08:48Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8fc47aed056784386eedc72cdea1275357e2ccb1",
                "additions": 12,
                "deletions": 12,
                "committedDate": "2023-08-09T14:14:33Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bd9a8fccc59cc066e423be3ab31409f9318686cf",
                "additions": 9,
                "deletions": 2,
                "committedDate": "2023-08-09T14:18:39Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "36de1fa9962a68b881f9c902be6fa59b844069ae",
                "additions": 89,
                "deletions": 107,
                "committedDate": "2023-08-09T18:02:03Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "96d4e43cf7468a743d5ef5034e6c277c62bff378",
                "additions": 3196,
                "deletions": 2162,
                "committedDate": "2023-08-10T21:31:16Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "efaa2ed47862116ee80f4e1b893bdef6f6d72262",
                "additions": 35,
                "deletions": 18,
                "committedDate": "2023-08-11T10:12:49Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "164360c5c0ea7d069ed26da5e16e26322e5d0eb3",
                "additions": 37,
                "deletions": 1,
                "committedDate": "2023-08-11T10:58:59Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "393cc4ebac5b4ddf0cc8b9cda1dcdcf916f88781",
                "additions": 16,
                "deletions": 13,
                "committedDate": "2023-08-11T11:08:18Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4947ca0f8e7d0fefa5d2ac92531adf1c70d8c23a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-11T12:15:19Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "047744bfdb1318c5b315ff5ef8375999713952b1",
                "additions": 18,
                "deletions": 10,
                "committedDate": "2023-08-11T14:53:50Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ffb017a8c13da049c10bf0c8ccd49bd6dcacb69a",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-08-11T15:04:23Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0de6dc1c5a0ea10179e6865e7d5c27ddfe95a63e",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2023-08-11T15:23:32Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "04fa78268f0879776b4bd09f6841b8db0c48abf4",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-11T15:25:30Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2a9783916fcd7f21740fb70ab6feebe668b10b60",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-08-11T18:11:12Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b8118d487b8a795e10eec645ba01b50595473ebe",
                "additions": 20,
                "deletions": 31,
                "committedDate": "2023-08-11T21:29:13Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3e38a3340d66945a1460452eb881f0ea6fa06a43",
                "additions": 25,
                "deletions": 46,
                "committedDate": "2023-08-11T21:39:01Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b5e386bc58d5b5125ac6b7d0e9b4448505751325",
                "additions": 7,
                "deletions": 10,
                "committedDate": "2023-08-12T00:18:12Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "253ca41e755703d4abadd96d54e92bdfa5ca6678",
                "additions": 55,
                "deletions": 1,
                "committedDate": "2023-08-12T03:39:14Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "245a6ef7da28b0bf63cf46c7960c73c414638fb7",
                "additions": 179,
                "deletions": 4,
                "committedDate": "2023-08-12T04:00:44Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "97d92ea744082db1613f53a738e3185f5443f1b4",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-14T08:12:02Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "739eca98aa40f8aa17274a879f7568c0e2f9aa12",
                "additions": 252,
                "deletions": 174,
                "committedDate": "2023-08-14T15:11:53Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2008f500be7ef77c9143e5d2824828802fe2a337",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-08-14T15:11:56Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0843eb01a49d808ed87ecb31cd8e0d49974697f6",
                "additions": 41,
                "deletions": 21,
                "committedDate": "2023-08-14T15:20:13Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bc95c04e6a7f45173c8e15d0f7c366f34076bb60",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-09-01T17:18:14Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2db8ea99167ccbb4942391c9ce63227bb4944db6",
                "additions": 23,
                "deletions": 22,
                "committedDate": "2023-09-01T17:23:13Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f130fa410b8ee7d2011aebeef2d1c06b671c801c",
                "additions": 35199,
                "deletions": 20656,
                "committedDate": "2023-09-01T18:02:36Z",
                "author": {
                  "name": "Johan Commelin",
                  "email": "johan@commelin.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "718f3a550517f7eb5434711a5fc19f1b675a9055",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-01T21:09:51Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "988721904c1815cce8d935c0029b81513502b982",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-09-01T21:23:54Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2858063fd2a636d604cc18cd597b8e66e988fb62",
                "additions": 185,
                "deletions": 97,
                "committedDate": "2023-09-03T15:06:47Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "36aa5a55d3bb84322ea1161517181db41d219f0f",
                "additions": 18,
                "deletions": 69,
                "committedDate": "2023-09-03T20:43:01Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "107fab6248a6c9205abf6c5feee7230f023c2ccc",
                "additions": 6,
                "deletions": 3,
                "committedDate": "2023-09-03T20:49:35Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3cbf3330459a0287f8afcc66d02a2a27305b7e15",
                "additions": 7,
                "deletions": 3,
                "committedDate": "2023-09-03T20:52:19Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "11627caf598e2977a7bebfbef58f07fc3eaadcaa",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-09-03T20:54:43Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "35c1d558c1ba578e33e358e64ede2b8f26434f5e",
                "additions": 7,
                "deletions": 10,
                "committedDate": "2023-09-04T14:37:51Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2813d3369739caca936601b4810b05a666c39c86",
                "additions": 155,
                "deletions": 100,
                "committedDate": "2023-09-09T16:00:03Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3101dee57a3aaed8f165c0bd54f95eac84049482",
                "additions": 14,
                "deletions": 1,
                "committedDate": "2023-09-09T17:04:30Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bce4f09ea94189030e1732cac0b3ed194adb4ef7",
                "additions": 111,
                "deletions": 108,
                "committedDate": "2023-09-11T16:55:34Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "86f3b0d9408f92c226013b0acaff8f21ff6787cc",
                "additions": 113,
                "deletions": 105,
                "committedDate": "2023-09-11T17:05:45Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e35016bc146421bdf323c99587dd5fbc4a2b705b",
                "additions": 14,
                "deletions": 10,
                "committedDate": "2023-09-16T10:04:14Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5c6c5126316bf4be746566a6a3c209188d933b56",
                "additions": 0,
                "deletions": 87,
                "committedDate": "2023-09-16T10:05:00Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "036b2adf1b14827b7073f40ff4c810e5d5e5a997",
                "additions": 9,
                "deletions": 9,
                "committedDate": "2023-09-17T16:04:20Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cea4ee6c754f90dc231b80f0b8e5ff370d51a7c5",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-09-24T20:46:44Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "61c186c308df386167f23e7e62f4531392ebd001",
                "additions": 36117,
                "deletions": 16647,
                "committedDate": "2023-09-24T20:48:01Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "719c77ed9b7a951cce4c53e3a94e7a1a22fd7e09",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-09-25T23:12:56Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "380225002eb11f5105d0cca0ff006faa72f4a2bb",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-09-25T23:15:39Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e62ee8a3cace705d6318e243c06f688a76b60bd1",
                "additions": 0,
                "deletions": 241,
                "committedDate": "2023-09-26T20:55:11Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4ced73ec4267d5fa6e32aee72748128d7cae40a4",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-09-26T20:55:43Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d2142cc9e6b531706771028b46df815159bb18c2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-27T12:46:49Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0f397de9dd258ebbe8a6f5ee7a7cec85bb01a8f9",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-27T12:48:00Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c8c55f07ef514dc7ff967c9752380d99d178ae35",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-27T12:48:26Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@u-paris.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6da6385d4ca571b62597523eef7cc2d7e5cfe95b",
                "additions": 18,
                "deletions": 5,
                "committedDate": "2023-09-27T12:55:32Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "005161311fc23bdc7746644c22f1278e073fc085",
                "additions": 28,
                "deletions": 27,
                "committedDate": "2023-09-27T13:15:26Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0fe45f0688ce554b3c8bca95ac25ed6a96929669",
                "additions": 43,
                "deletions": 46,
                "committedDate": "2023-09-27T15:33:44Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "78d70f7780499e01160ee7a55d2bca31a86e8d87",
                "additions": 11,
                "deletions": 18,
                "committedDate": "2023-09-27T15:36:35Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e17e8692fbde002801267633f856906bb00d8505",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-09-27T19:16:35Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fa883e880c880efebac45ab5d415ec018d55bf81",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-10-05T08:36:30Z",
                "author": {
                  "name": "Antoine Chambert-Loir",
                  "email": "antoine.chambert-loir@math.univ-paris-diderot.fr"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-08T13:50:53Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Exact.lean",
              "additions": 67,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct.lean",
              "additions": 18,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct/RightExactness.lean",
              "additions": 362,
              "deletions": 0
            },
            {
              "path": "docs/references.bib",
              "additions": 38,
              "deletions": 1
            }
          ]
        },
        "headRefName": "TensRightExact",
        "headRefOid": "fa883e880c880efebac45ab5d415ec018d55bf81",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Xb7qL",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5h792B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T23:15:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0j1_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-11T16:46:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i5VDf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-10-05T08:22:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iHl5R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2023-09-27T10:40:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fzs4s",
              "body": "This looks very nice to me. I've left a bunch of comments but mathematically this looks fine.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-09-01T18:27:38Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6447,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM3NzcyOTQ5",
                "login": "joelriou"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dbXbx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-08T17:29:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dc4us",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-08T17:57:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dc5Oy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-08T17:58:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dc59w",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-08T18:00:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ddcUI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-08T19:26:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ddvsM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-08T19:50:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ddwXv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-08T19:51:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5djY7M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T13:27:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5djY_7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T13:27:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5djZIe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T13:27:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5djZQr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T13:27:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5djfNw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-09T13:38:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dj2WV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-09T14:05:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dj5Cc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T14:09:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dj6bg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T14:10:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dj91N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-09T14:15:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dkOar",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-09T14:40:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dviJ_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-10T21:11:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvlhW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T21:24:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvlnb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T21:24:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvnOe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-10T21:30:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvo35",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T21:36:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dyAh_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T10:14:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dyAm5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T10:14:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dyAub",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T10:15:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dyIBJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T10:38:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dynMD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T12:15:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dynSV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T12:15:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dynVc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T12:15:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dynZ8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T12:16:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dynfu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T12:16:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dz9-G",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T15:18:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dz-lm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T15:18:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dz_ml",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T15:19:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0FP_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T15:23:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0GB8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T15:24:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0j1_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-11T16:46:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d16Q_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T21:52:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d18Ph",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-11T21:57:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d4TXN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-12T11:12:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d4cy5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-12T12:08:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d4sGV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-12T13:23:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d8xoP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-08-14T07:20:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eBHIY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-08-14T17:46:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fz5ex",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-01T18:13:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fzs4s",
              "body": "This looks very nice to me. I've left a bunch of comments but mathematically this looks fine.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-09-01T18:27:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f0zvn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-01T21:23:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f00yi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-01T21:29:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f00-B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-01T21:30:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4Fpv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-03T14:46:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4FrQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-03T14:46:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4GLM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-03T15:01:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4GWM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-03T15:06:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4Gvh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-03T15:19:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4JLT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-03T16:48:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f4t8A",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-04T03:16:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f8aZ7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-04T14:41:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gegXE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-09T10:18:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gel8-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-09T12:53:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gel-G",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-09T12:54:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gewZy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-09T17:30:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gljGq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-11T17:04:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hJ8-F",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-16T18:05:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hKVLF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-17T16:04:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h3Fth",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T10:29:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h79Rm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-25T23:13:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5h792B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-25T23:15:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iGck8",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-09-27T08:50:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iHjYg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2023-09-27T10:32:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iHl5R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2023-09-27T10:40:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iIllG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-27T12:55:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iInec",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-27T12:57:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iI2Vv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-27T13:15:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iMTIl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-27T19:13:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iMTQW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-09-27T19:13:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i2VKd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-10-04T20:14:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5i5VDf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "riccardobrasca"
              },
              "submittedAt": "2023-10-05T08:22:35Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MuVV1",
                    "body": "Why are these `outParam`s?",
                    "createdAt": "2023-08-08T14:31:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MvUKQ",
                    "body": "Probably ridiculous attempt to state something that would work for classes of maps. ",
                    "createdAt": "2023-08-08T17:57:17Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzO8y",
                    "body": "Right now it does nothing at all.",
                    "createdAt": "2023-08-09T13:38:13Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzbfX",
                    "body": "As I wrote below, I tried something but it does not work so well.\r\nWhat I expected to build is a definition of Exact that works for all kind of additive maps.\r\nNow, with your suggestion of defining Exact as `forall y, …`, I cannot manage to evaluate it as a LinearMap…\r\nWhat do I do wrong?",
                    "createdAt": "2023-08-09T14:10:47Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzrxN",
                    "body": "You need to define it as `∀x, g x = 0 ↔ x ∈ set.range f` where `f` and `g` are just plain functions. You can't use `ker` and `range` in the definition, as those only work on specific types of map.",
                    "createdAt": "2023-08-09T14:40:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MuVwG",
                    "body": "Can we define this as\r\n```suggestion\r\n  ∀x, g x = 0 ↔ x ∈ set.range f\r\n```\r\nSo that we can have a single definition for all morphisms?",
                    "createdAt": "2023-08-08T14:32:33Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MvUf9",
                    "body": "Yes, I'll rewrite this, but what if one needs later an actual equality (eg in the final theorem)? \r\nWould it deserve to be stated explicitly?",
                    "createdAt": "2023-08-08T17:58:35Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mvqkx",
                    "body": "I think you then have `LinearMap.exact_iff` and `Exact.linearMap_ker_eq` lemmas to help go back and forth, and same for `AddMonoidHom`. It doesn't help much with lemma duplication, but it does at least prevent the definition being duplicated.",
                    "createdAt": "2023-08-08T19:26:29Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mzatj",
                    "body": "I tried something, but it does not work some well.",
                    "createdAt": "2023-08-09T14:09:09Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7lZn",
                    "body": "I did that finally, using the [Zero _] Typeclass.",
                    "createdAt": "2023-08-10T21:11:05Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MuWs-",
                    "body": "Can you define this in terms of `RightInverse` instead of surjective, and then prove the surjective one in terms of this one?",
                    "createdAt": "2023-08-08T14:35:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MvU9a",
                    "body": "Yes, certainly. And this look it will be cleaner.\r\n",
                    "createdAt": "2023-08-08T18:00:31Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzK2J",
                    "body": "Done.",
                    "createdAt": "2023-08-09T13:27:01Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mv5bx",
                    "body": "I think a nicer statement is something like:\r\n```lean\r\nlemma le_comap_range_lTensor (q : Q) :\r\n    LinearMap.range g ≤ (LinearMap.range (lTensor Q g)).comap (TensorProduct.mk R Q P q) := by\r\n  rintro x ⟨n, rfl⟩\r\n  exact ⟨q ⊗ₜ[R] n, rfl⟩\r\n\r\nlemma lTensor.mem_range {p : P} (q : Q) (hp : p ∈ LinearMap.range g) :\r\n    q ⊗ₜ[R] p ∈  LinearMap.range (lTensor Q g) := le_comap_range_lTensor g q hp\r\n```\r\nwhere I'd recommend dropping the second lemma unless you really need it.",
                    "createdAt": "2023-08-08T19:50:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzK6D",
                    "body": "Done.",
                    "createdAt": "2023-08-09T13:27:10Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mv5wE",
                    "body": "`LinearMap.mk\\2` can make this a bit shorter",
                    "createdAt": "2023-08-08T19:51:44Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzLBy",
                    "body": "Indeed, thanks!",
                    "createdAt": "2023-08-09T13:27:25Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzLJp",
                    "body": "(It also makes the second one compile directly)",
                    "createdAt": "2023-08-09T13:27:40Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MzZPB",
                    "body": "```suggestion\r\n  · intro p p' q\r\n```\r\nand below, will fix the errors.",
                    "createdAt": "2023-08-09T14:05:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Mzdf3",
                    "body": "Thanks ! (I definitely hate it that \\cdot, \\centerdot and . give seemingly looking results while only one of them is admitted.)",
                    "createdAt": "2023-08-09T14:15:17Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7nwB",
                    "body": "A general style comment\r\n```suggestion\r\ndef rTensor.inverse_ofRightInverse {h : P → N} (hgh : Function.RightInverse h g) :\r\n    P ⊗[R] Q →ₗ[R] N ⊗[R] Q ⧸ (LinearMap.range (rTensor Q f)) := by\r\n  rw [exact_iff] at hfg\r\n```\r\nand throughout",
                    "createdAt": "2023-08-10T21:24:04Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7pAz",
                    "body": "OK, I had (apparently wrongly) understood that hypotheses had a 4 char indent, but the goal only 2. I'll fix that.",
                    "createdAt": "2023-08-10T21:30:47Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9zS0",
                    "body": "Done.",
                    "createdAt": "2023-08-11T12:15:51Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7n0t",
                    "body": "```suggestion\r\nprivate\r\n```",
                    "createdAt": "2023-08-10T21:24:28Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9zas",
                    "body": "Done (also for the other one)",
                    "createdAt": "2023-08-11T12:16:26Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7qFv",
                    "body": "```suggestion\r\n  rTensor.inverse_ofRightInverse Q hfg\r\n    (Function.rightInverse_surjInv hg)\r\n```\r\nwhich requires a very minor tweak to a later proof",
                    "createdAt": "2023-08-10T21:36:52Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9zUr",
                    "body": "Done!",
                    "createdAt": "2023-08-11T12:15:58Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9ZI1",
                    "body": "Is this already in references.bib?",
                    "createdAt": "2023-08-11T10:14:29Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9edf",
                    "body": "No!",
                    "createdAt": "2023-08-11T10:38:55Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9zXZ",
                    "body": "Added.",
                    "createdAt": "2023-08-11T12:16:11Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9ZMu",
                    "body": "This should go in `references.bib`",
                    "createdAt": "2023-08-11T10:14:43Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9zPD",
                    "body": "Added.",
                    "createdAt": "2023-08-11T12:15:33Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M9ZSs",
                    "body": "```suggestion\r\ndef Exact [Zero P] : Prop := ∀ y, g y = 0 ↔ y ∈ Set.range f\r\n```",
                    "createdAt": "2023-08-11T10:15:02Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-n72",
                    "body": "I would guess\r\n```suggestion\r\nlemma Exact.linearMap_ker_eq (hfg : Exact f g) : ker g = range f := SetLike.ext hfg\r\n```\r\n(untested)",
                    "createdAt": "2023-08-11T15:18:00Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QQJIW",
                    "body": "it works and had been changed accordingly.",
                    "createdAt": "2023-10-04T20:14:43Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QSaay",
                    "body": "Thanks, let's merge this!",
                    "createdAt": "2023-10-05T08:22:35Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-oV3",
                    "body": "I think this is `SetLike.ext_iff.symm`",
                    "createdAt": "2023-08-11T15:18:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-sQ8",
                    "body": "this is almost that, but `exact…` does not work.",
                    "createdAt": "2023-08-11T15:23:55Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-pAt",
                    "body": "I think the naming guide would suggest\r\n```suggestion\r\ntheorem rTensor_surjective (hg : Function.Surjective g) :\r\n```",
                    "createdAt": "2023-08-11T15:19:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-ssI",
                    "body": "I make the change, but what about `Function.Surjective` (with a capital S)?",
                    "createdAt": "2023-08-11T15:24:39Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-_Gg",
                    "body": "`Function.Surjective` is a type (Prop) while `rTensor_surjective` is a term (proof) of that type.",
                    "createdAt": "2023-08-11T16:46:34Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_1ur",
                    "body": "What do you think of:\r\n```suggestion\r\n  rw [exact_iff] at hfg\r\n  refine\r\n    TensorProduct.lift\r\n      { toFun := fun p ↦ Submodule.mkQ _ ∘ₗ TensorProduct.mk R _ _ (h p)\r\n        map_add' := fun p p' => LinearMap.ext <| fun q => (Submodule.Quotient.eq _).mpr ?_\r\n        map_smul' := fun r p => LinearMap.ext <| fun q => (Submodule.Quotient.eq _).mpr ?_ }\r\n  · change h (p + p') ⊗ₜ[R] q - (h p ⊗ₜ[R] q + h p' ⊗ₜ[R] q) ∈ range (rTensor Q f)\r\n    rw [← TensorProduct.add_tmul, ← TensorProduct.sub_tmul]\r\n    apply le_comap_range_rTensor f\r\n    rw [← hfg, mem_ker, map_sub, map_add]\r\n    simp only [hgh _, sub_self]\r\n  · change h (r • p) ⊗ₜ[R] q - r • h p ⊗ₜ[R] q ∈ range (rTensor Q f)\r\n    rw [TensorProduct.smul_tmul', ← TensorProduct.sub_tmul]\r\n    apply le_comap_range_rTensor f\r\n    rw [← hfg, mem_ker, map_sub, map_smul]\r\n    simp only [hgh _, sub_self]\r\n```\r\nI think this makes it a bit clearer that half of the linearity is obvious, while the other half needs exactness",
                    "createdAt": "2023-08-11T21:52:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_3Rq",
                    "body": "For me, it's harder to read, but OK.",
                    "createdAt": "2023-08-11T21:57:07Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NBd28",
                    "body": "Do you want me to update the second definition in the same way?",
                    "createdAt": "2023-08-12T11:12:34Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NBkUE",
                    "body": "I'm happy to leave this for another reviewer to tie break if you don't like it.",
                    "createdAt": "2023-08-12T12:08:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NBu36",
                    "body": "That's OK. That's actually good to be able to adjust to other people's stylistic habits.",
                    "createdAt": "2023-08-12T13:23:04Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NHZae",
                    "body": "I made the effort of writing the other proof — that helped me appreciate this style.",
                    "createdAt": "2023-08-14T17:46:47Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NEpYV",
                    "body": "```suggestion\r\nCopyright (c) 2023 Antoine Chambert-Loir. All rights reserved.\r\n```",
                    "createdAt": "2023-08-14T07:20:26Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OR8SO",
                    "body": "```suggestion\r\nimport Mathlib.RingTheory.TensorProduct\r\n```",
                    "createdAt": "2023-09-01T17:30:15Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OVjFR",
                    "body": "OK.",
                    "createdAt": "2023-09-03T14:46:44Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OR-IR",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-09-01T17:36:53Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OR_Lw",
                    "body": "```suggestion\r\nvariable {f : M →ₗ[R] N} (g : N →ₗ[R] P)\r\n```",
                    "createdAt": "2023-09-01T17:40:33Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OR_Qi",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-09-01T17:40:49Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSAWi",
                    "body": "It's funny that Lean doesn't fuss about `(N : Submodule R N)` but boy is it confusing to have two `N`s. Maybe `lemma LinearMap.exact_subtype_mkQ (N : Submodule R M) :` is better?\r\n",
                    "createdAt": "2023-09-01T17:44:46Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSD0C",
                    "body": "```suggestion\r\n    simp only [← hfg, mem_ker, map_sub, map_add, hgh _, sub_self]\r\n```\r\nStupid golf suggestion; feel free to ignore. Same idea a few lines later probably also works.",
                    "createdAt": "2023-09-01T17:57:04Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSEN9",
                    "body": "```suggestion\r\n  apply TensorProduct.ext' (fun n q ↦ ?_)\r\n```\r\nditto",
                    "createdAt": "2023-09-01T17:59:09Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtbuP",
                    "body": "I can comply, but do you really find this more legible?",
                    "createdAt": "2023-09-09T10:18:52Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtiHL",
                    "body": "If you do take Kevin's suggestion, it should be `refine`.\r\n\r\nBetter would be `attribute [ext] Tensor product.ext` then you can just use `ext n q` here.",
                    "createdAt": "2023-09-09T12:53:19Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSEY_",
                    "body": "```suggestion\r\n  rw [Submodule.Quotient.eq, ← TensorProduct.sub_tmul]\r\n```\r\nno reason why not, I guess.",
                    "createdAt": "2023-09-01T18:00:03Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSFE2",
                    "body": "I never remember which is the left inverse and which is the right inverse but given that you've called this function `...ofRightInverse` I'm surprised you're talking about left inverse in the docstring.\r\n\r\nI think it should be called `def rTensor.linearEquiv_of_rightInverse` though?",
                    "createdAt": "2023-09-01T18:03:39Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Oyah8",
                    "body": "Adjusted",
                    "createdAt": "2023-09-11T17:04:42Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSGOn",
                    "body": "This `with` adds a horrible `let src := ...` in Lean 4 which can sometimes cause tremendous slowdowns, but I don't know if this will be the case here (certainly the file seems to compile quickly enough...). You could ask Eric or Matt Ballard about the dangers of this one.",
                    "createdAt": "2023-09-01T18:09:43Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OVjmy",
                    "body": "Let's not take risks. What is advised then ?",
                    "createdAt": "2023-09-03T15:01:50Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtiIq",
                    "body": "I wouldn't worry about it for `def`s. It matters most for `instance`.",
                    "createdAt": "2023-09-09T12:54:00Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSGYH",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-09-01T18:10:26Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSGpZ",
                    "body": "Two questions:\r\n\r\n1. Should this definition `Exact` be in the root namespace? (I don't have a good suggestion for a namespace atm, but it feels like the name is too generic to go in root.)\r\n2. Should this definition be in a file called `RightExactness.lean` in a folder on tensor products? It seems likely that files might want to import the definition of exactness without wanting to import tensor products. So I think it makes sense to split this file into two.",
                    "createdAt": "2023-09-01T18:11:50Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSGqE",
                    "body": "Silly nitpick: should we try to always have the statement about `lTensor` first, and then the one for `rTensor`? (Or vice versa, I just picked the order that was used above for `le_comap_range_{l,r}Tensor`.)\r\n\r\nCan you easily deduce one from the other, using commutativity of the tensor product? Or does that quickly become a nasty mess?",
                    "createdAt": "2023-09-01T18:11:53Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSxs6",
                    "body": "It would be good practice to keep the same order throughout.\r\nI will try to deduce `rTensor` from `lTensor`. This may be not so nice, though, if I need to require more module structures than the plain one. I'll see.",
                    "createdAt": "2023-09-01T21:29:32Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OVjDz",
                    "body": "Regarding your suggestion of deducing one from another : \r\n* I defined `TensorProduct.flip` and wrote few lemmas about it \r\n* That allows a quick proof for surjectivity for `lTensor` given that of `rTensor`  and (hopefully, to come) a quick proof of exactness for `lTensor` from that of `rTensor`.\r\nHowever, the proof of exactness gives additional results that explicitely compute some quotients, and I wonder whether this shouldn't be retained. If so, it would be bizarre that they have different definitions, but maybe not. So I leave this open for the moment.",
                    "createdAt": "2023-09-03T14:46:06Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OVjyV",
                    "body": "What was the statement of your `TensorProduct.flip`?",
                    "createdAt": "2023-09-03T15:06:47Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSHwH",
                    "body": "left -> right?",
                    "createdAt": "2023-09-01T18:17:38Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSH06",
                    "body": "again I am slightly scared about the `with` but I would defer to Eric or Matt.",
                    "createdAt": "2023-09-01T18:18:04Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxGxp",
                    "body": "This file seems pretty fast, but CC @eric-wieser @mattrobball ",
                    "createdAt": "2023-09-27T08:43:46Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pxooe",
                    "body": "It think it would be fine performance-wise. But, generally I think the code reads better if, when using an instance of the/a parent structure, that you inline it instead of using `with`. `with` is better for when you break direct inheritance but still have all the fields. \r\n\r\n```suggestion\r\n  { toLinearMap := lTensor.toFun Q hfg\r\n```",
                    "createdAt": "2023-09-27T10:38:33Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSIFj",
                    "body": "Did you mean to leave this morse code here?",
                    "createdAt": "2023-09-01T18:19:21Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSwRC",
                    "body": "Actually, this was not morse code, but me playing with the various dots that are all different to Lean…\r\nI'll remove that line…",
                    "createdAt": "2023-09-01T21:23:06Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSIwL",
                    "body": "```suggestion\r\n/-- The ideal of `A ⊗[R] B` generated by `I` is the image of `I ⊗[R] B`. -/\r\n```\r\nI think the backticks make a (positive) difference in the API docs; there are several more of these below which probably should also be added.",
                    "createdAt": "2023-09-01T18:23:12Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSJHT",
                    "body": "I can never remember whether we're supposed to be using `Type*` or `Type _` nowadays, but I suspect we're not supposed to be using both. I think it's `Type*` right?",
                    "createdAt": "2023-09-01T18:25:19Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSx5a",
                    "body": "`Type*` but when I wrote this, it was in the middle of `Type*` being promoted.",
                    "createdAt": "2023-09-01T21:30:34Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OSJZF",
                    "body": "```suggestion\r\n  have : map f g = (map f (AlgHom.id R D)).comp (map (AlgHom.id R A) g) := ext rfl rfl\r\n```",
                    "createdAt": "2023-09-01T18:26:56Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OVkPC",
                    "body": "This already exists as `TensorProduct.comm`",
                    "createdAt": "2023-09-03T15:19:28Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OVnBg",
                    "body": "Cool! I'll use that then.",
                    "createdAt": "2023-09-03T16:48:13Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OWCgo",
                    "body": "I suspect `toLinearMap` is no longer the simp-normal form, and the preferred spelling uses a coercion instead. I suspect it needs a type situation, but\r\n```suggestion\r\n    lift f ∘ₗ TensorProduct.comm R N M =\r\n```",
                    "createdAt": "2023-09-04T03:16:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OYa2n",
                    "body": "`simp`could made no progress on the proof of the lemma;\r\nwas it enough to assume it was in simp normal form?\r\nAnyway I made the change.",
                    "createdAt": "2023-09-04T14:41:24Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtvnJ",
                    "body": "I think composition via `LinearMap.comp` would be better here.",
                    "createdAt": "2023-09-09T17:30:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PJ49Q",
                    "body": "Do you need the `by exact`?\r\n```suggestion\r\nlemma lift_comp_comm_eq (f : M →ₗ[R] N →ₗ[R] P) :\r\n    lift f ∘ₗ TensorProduct.comm R N M = lift f.flip :=\r\n  ext rfl\r\n```\r\n(also `f` should be explicit)",
                    "createdAt": "2023-09-16T18:05:51Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PKWCX",
                    "body": "No, I don't need it. I followed your suggestion and removed a few other \"by exact\"",
                    "createdAt": "2023-09-17T16:04:48Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PnSGc",
                    "body": "a nit: we generally don't write `∘ₗ` (or indeed any operator) with parens around its operands\r\n```suggestion\r\n    TensorProduct.comm R Q P ∘ₗ lTensor Q g ∘ₗ TensorProduct.comm R N Q =\r\n```",
                    "createdAt": "2023-09-25T10:29:23Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PqOHL",
                    "body": "OK",
                    "createdAt": "2023-09-25T23:13:36Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PqOUk",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-09-25T23:15:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pw3bv",
                    "body": "The real point is probably to teach `to_additive` to handle this.",
                    "createdAt": "2023-09-27T08:05:10Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pw4Pz",
                    "body": "```suggestion\r\nlemma map_comp_comm_eq (f : M →ₗ[R] P) (g : N →ₗ[R] Q) :\r\n```",
                    "createdAt": "2023-09-27T08:08:05Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pw4Y-",
                    "body": "```suggestion\r\nlemma comm_comp_rTensor_comp_comm_eq (g : N →ₗ[R] P) :\r\n```",
                    "createdAt": "2023-09-27T08:08:31Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pw4dA",
                    "body": "```suggestion\r\nlemma comm_comp_lTensor_comp_comm_eq (g : N →ₗ[R] P) :\r\n```",
                    "createdAt": "2023-09-27T08:08:44Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pw4_5",
                    "body": "Maybe mention that (of course) we are talking about right exactness.",
                    "createdAt": "2023-09-27T08:10:34Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PyOW_",
                    "body": "I elaborated the documentation slightly",
                    "createdAt": "2023-09-27T12:55:49Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pw90p",
                    "body": "```suggestion\r\ndef lTensor.toFun :\r\n  Q ⊗[R] N ⧸ LinearMap.range (lTensor Q f) →ₗ[R] Q ⊗[R] P :=\r\n    Submodule.liftQ _ (lTensor Q g) <| by\r\n      rw [LinearMap.range_le_iff_comap, ← LinearMap.ker_comp, ← lTensor_comp,\r\n        hfg.linearMap_comp_eq_zero, lTensor_zero, ker_zero]\r\n```\r\nWe usually avoid tactic mode to define data.",
                    "createdAt": "2023-09-27T08:20:52Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PyPFn",
                    "body": "ok",
                    "createdAt": "2023-09-27T12:57:31Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxBXx",
                    "body": "```suggestion\r\ndef lTensor.inverse_of_rightInverse {h : P → N} (hgh : Function.RightInverse h g) :\r\n    Q ⊗[R] P →ₗ[R] Q ⊗[R] N ⧸ LinearMap.range (lTensor Q f) :=\r\n  TensorProduct.lift <| LinearMap.flip <|\r\n    { toFun := fun p ↦ Submodule.mkQ _ ∘ₗ ((TensorProduct.mk R _ _).flip (h p))\r\n      map_add' := fun p p' => LinearMap.ext <| fun q => (Submodule.Quotient.eq _).mpr <| by\r\n        change q ⊗ₜ[R] (h (p + p')) - (q ⊗ₜ[R] (h p) + q ⊗ₜ[R] (h p')) ∈ range (lTensor Q f)\r\n        rw [← TensorProduct.tmul_add, ← TensorProduct.tmul_sub]  \r\n        apply le_comap_range_lTensor f\r\n        simp only [← exact_iff.1 hfg, mem_ker, map_sub, map_add, hgh _, sub_self]\r\n      map_smul' := fun r p => LinearMap.ext <| fun q => (Submodule.Quotient.eq _).mpr <| by\r\n        change q ⊗ₜ[R] (h (r • p)) - r • q ⊗ₜ[R] (h p) ∈ range (lTensor Q f)\r\n        rw [← TensorProduct.tmul_smul, ← TensorProduct.tmul_sub]\r\n        apply le_comap_range_lTensor f\r\n        simp only [← exact_iff.1 hfg, mem_ker, map_sub, map_smul, hgh _, sub_self] }\r\n```\r\nAs above.",
                    "createdAt": "2023-09-27T08:29:32Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxDJy",
                    "body": "```suggestion\r\n  simp? [lTensor.inverse_of_rightInverse] says\r\n    simp only [inverse_of_rightInverse, coe_comp, Function.comp_apply, lTensor_tmul, lift.tmul,\r\n      flip_apply, coe_mk, AddHom.coe_mk, mk_apply, Submodule.mkQ_apply]\r\n```\r\nI think this is a good example for the `says` tactic.",
                    "createdAt": "2023-09-27T08:34:20Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxHIb",
                    "body": "```suggestion\r\ntheorem lTensor_exact : Exact (lTensor Q f) (lTensor Q g) := by\r\n  rw [exact_iff, ← Submodule.ker_mkQ (p := range (lTensor Q f)),\r\n    ← lTensor.inverse_comp_rTensor Q hfg hg]\r\n  apply symm\r\n  apply LinearMap.ker_comp_of_ker_eq_bot\r\n  rw [LinearMap.ker_eq_bot]\r\n  exact (lTensor.equiv Q hfg hg).symm.injective\r\n```",
                    "createdAt": "2023-09-27T08:45:00Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxHZD",
                    "body": "You can write this in term mode as above.",
                    "createdAt": "2023-09-27T08:45:50Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxHa1",
                    "body": "Same.",
                    "createdAt": "2023-09-27T08:45:56Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxHg8",
                    "body": "You can use `says` as above.",
                    "createdAt": "2023-09-27T08:46:15Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5P0OMf",
                    "body": "done, but I don't know what the `says` tactic does.",
                    "createdAt": "2023-09-27T19:13:21Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxH0y",
                    "body": "```suggestion\r\ntheorem rTensor_exact : Exact (rTensor Q f) (rTensor Q g) := by\r\n  rw [exact_iff, ← Submodule.ker_mkQ (p := range (rTensor Q f)),\r\n    ← rTensor.inverse_comp_rTensor Q hfg hg]\r\n  apply symm\r\n  apply ker_comp_of_ker_eq_bot\r\n  rw [ker_eq_bot]\r\n  exact (rTensor.equiv Q hfg hg).symm.injective\r\n```",
                    "createdAt": "2023-09-27T08:47:18Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5P0OSf",
                    "body": "why not, but I'm not convinced. Done, anyway.",
                    "createdAt": "2023-09-27T19:13:42Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxITj",
                    "body": "```suggestion\r\nvariable {R : Type*} [CommSemiring R] {M N P P' Q : Type*}\r\n  [AddCommMonoid M] [AddCommMonoid N] [AddCommGroup P] [AddCommMonoid P'] [AddCommMonoid Q]\r\n  [Module R M] [Module R N] [Module R P] [Module R P'] [Module R Q]\r\n  {f : M →ₗ[R] N} (g : N →ₗ[R] P)\r\n```\r\nLooks nicer to me, but not so important. (If you change this you can do the same everywhere else).",
                    "createdAt": "2023-09-27T08:48:48Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxIyM",
                    "body": "```suggestion\r\ntheorem TensorProduct.map_ker :\r\n    ker (TensorProduct.map g g') = range (lTensor N f') ⊔ range (rTensor N' f) := by\r\n  rw [← lTensor_comp_rTensor, ker_comp, ← Exact.linearMap_ker_eq (rTensor_exact N' hfg hg),\r\n    ← Submodule.comap_map_eq]\r\n  apply congr_arg₂ _ rfl\r\n  rw [range_eq_map, ← Submodule.map_comp, rTensor_comp_lTensor,\r\n    Submodule.map_top, ← lTensor_comp_rTensor, range_eq_map, Submodule.map_comp,\r\n    Submodule.map_top, range_eq_top.mpr (rTensor.surjective M' hg), Submodule.map_top,\r\n    Exact.linearMap_ker_eq (lTensor_exact P hfg' hg')]\r\n```",
                    "createdAt": "2023-09-27T08:50:15Z",
                    "author": {
                      "login": "riccardobrasca"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxnDb",
                    "body": "```suggestion\r\n  lTensor.linearEquiv_of_rightInverse Q hfg (Function.rightInverse_surjInv hg)\r\n```",
                    "createdAt": "2023-09-27T10:32:09Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PxpK5",
                    "body": "How should I think of this name compared to `LinearMap.lTensor.toFun`? @riccardobrasca ",
                    "createdAt": "2023-09-27T10:40:44Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PyUzP",
                    "body": "There is no direct relation.\r\n `LinearMap.lTensor f` is the linear map `Q tensor N -> Q tensor P` associated with a linear map `g : N -> P`.\r\nHere, we want to understand this map `LinearMap.lTensor g` when we know that `g` is surjective and know its kernel : it is surjective (by `lTensor.surjective`) and we compute its kernel in terms of a map `f : M -> N` whose image is the kernel of `g`.",
                    "createdAt": "2023-09-27T13:15:06Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4MTczNDg=",
              "login": "AntoineChambert-Loir"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: Right exactness of tensor product of modules",
        "updatedAt": "2023-10-05T10:24:37Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6447",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "066f0f4d075f06de989b737bc5f3f82ef2888628"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJWL-V3",
              "createdAt": "2023-08-08T13:53:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "57b2e95dfa18ac3a05f666a51e3d1b3df6dfff62"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dbXbx",
              "createdAt": "2023-08-08T14:31:19Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ddvsM",
              "createdAt": "2023-08-08T19:50:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ddwXv",
              "createdAt": "2023-08-08T19:51:43Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bc9025fa1b44e4ca1082eed8b425e8269ae3e3bf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "533ebc4c7cadb66ce29144e1935b6e31693e1215"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "820737a635f69b70b3eda9c5820dc3b3173eeb52"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dj2WV",
              "createdAt": "2023-08-09T14:05:55Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6990767e16517dac325c042b672c20fee6447ee7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8fc47aed056784386eedc72cdea1275357e2ccb1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bd9a8fccc59cc066e423be3ab31409f9318686cf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "36de1fa9962a68b881f9c902be6fa59b844069ae"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dvlhW",
              "createdAt": "2023-08-10T21:24:04Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dvlnb",
              "createdAt": "2023-08-10T21:24:27Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "96d4e43cf7468a743d5ef5034e6c277c62bff378"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dvo35",
              "createdAt": "2023-08-10T21:36:52Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "efaa2ed47862116ee80f4e1b893bdef6f6d72262"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dyAh_",
              "createdAt": "2023-08-11T10:14:29Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dyAm5",
              "createdAt": "2023-08-11T10:14:43Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dyAub",
              "createdAt": "2023-08-11T10:15:02Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "164360c5c0ea7d069ed26da5e16e26322e5d0eb3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "393cc4ebac5b4ddf0cc8b9cda1dcdcf916f88781"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4947ca0f8e7d0fefa5d2ac92531adf1c70d8c23a"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j0Vj6",
              "createdAt": "2023-08-11T12:17:11Z",
              "body": "Remaining questions:\r\n- add the algebra case now or later?\r\n- what about the namespaces and, more generally, the names of all theorems?",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "047744bfdb1318c5b315ff5ef8375999713952b1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ffb017a8c13da049c10bf0c8ccd49bd6dcacb69a"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dz9-G",
              "createdAt": "2023-08-11T15:18:00Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dz-lm",
              "createdAt": "2023-08-11T15:18:27Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dz_ml",
              "createdAt": "2023-08-11T15:19:14Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0de6dc1c5a0ea10179e6865e7d5c27ddfe95a63e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "04fa78268f0879776b4bd09f6841b8db0c48abf4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2a9783916fcd7f21740fb70ab6feebe668b10b60"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b8118d487b8a795e10eec645ba01b50595473ebe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3e38a3340d66945a1460452eb881f0ea6fa06a43"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j3Sos",
              "createdAt": "2023-08-11T21:49:05Z",
              "body": "Thanks for these adjustments.\r\nShould the definitions of `lTensor.inverse`etc. be private? \r\nI had commented out the tag because I was using them in another file. ",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d16Q_",
              "createdAt": "2023-08-11T21:52:40Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b5e386bc58d5b5125ac6b7d0e9b4448505751325"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j4GxG",
              "createdAt": "2023-08-12T03:21:58Z",
              "body": "Each of the maps `rTensor.inverse` and `lTensor.inverse` is actually part of  linear_equiv which is easy to define from this, and gives an obvious understanding of the exactness. Should I add this ?",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "253ca41e755703d4abadd96d54e92bdfa5ca6678"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j4I8V",
              "createdAt": "2023-08-12T03:44:01Z",
              "body": "(It remains to do the same for lTensor)",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j4JB8",
              "createdAt": "2023-08-12T03:44:53Z",
              "body": "Also : I can prove the result for algebras. It uses the result for submodules plus something like the thing I posted on Zulip. If that thing can be cleaned up quickly, then it is worth being added now.",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "245a6ef7da28b0bf63cf46c7960c73c414638fb7"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d8xoP",
              "createdAt": "2023-08-14T07:20:26Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "97d92ea744082db1613f53a738e3185f5443f1b4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "739eca98aa40f8aa17274a879f7568c0e2f9aa12"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2008f500be7ef77c9143e5d2824828802fe2a337"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0843eb01a49d808ed87ecb31cd8e0d49974697f6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bc95c04e6a7f45173c8e15d0f7c366f34076bb60"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJjg2sf",
              "createdAt": "2023-09-01T17:21:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2db8ea99167ccbb4942391c9ce63227bb4944db6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f130fa410b8ee7d2011aebeef2d1c06b671c801c"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5twQA1zwAAAAJjiDGU",
              "createdAt": "2023-09-01T18:05:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fz5ex",
              "createdAt": "2023-09-01T18:11:50Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fzs4s",
              "createdAt": "2023-09-01T17:30:15Z",
              "body": "This looks very nice to me. I've left a bunch of comments but mathematically this looks fine.",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5twQA1zwAAAAJjis_s",
              "createdAt": "2023-09-01T18:27:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJjis_v",
              "createdAt": "2023-09-01T18:27:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "718f3a550517f7eb5434711a5fc19f1b675a9055"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "988721904c1815cce8d935c0029b81513502b982"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2858063fd2a636d604cc18cd597b8e66e988fb62"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5f4Gvh",
              "createdAt": "2023-09-03T15:19:28Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "36aa5a55d3bb84322ea1161517181db41d219f0f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "107fab6248a6c9205abf6c5feee7230f023c2ccc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3cbf3330459a0287f8afcc66d02a2a27305b7e15"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "11627caf598e2977a7bebfbef58f07fc3eaadcaa"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5f4t8A",
              "createdAt": "2023-09-04T03:16:09Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "35c1d558c1ba578e33e358e64ede2b8f26434f5e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2813d3369739caca936601b4810b05a666c39c86"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mE1gc",
              "createdAt": "2023-09-09T16:02:39Z",
              "body": "I attempted to give definitions for `lTensor` and use `TensorProduct.comm` to get the other ones.\r\nI am not sure the result is better. This could make the API slightly dissymmetric (unless one hides the definitions).\r\nAlso : there are coercion issues, because a LinearEquiv is not a LinearMap, so that some `rw` lemmas do not apply, etc.\r\n@jcommelin @kbuzzard can you tell me what you think I should do? ",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3101dee57a3aaed8f165c0bd54f95eac84049482"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gewZy",
              "createdAt": "2023-09-09T17:30:45Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bce4f09ea94189030e1732cac0b3ed194adb4ef7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "86f3b0d9408f92c226013b0acaff8f21ff6787cc"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mLb8d",
              "createdAt": "2023-09-11T17:08:34Z",
              "body": "I believe I have followed all suggestions you made me.\r\nAfter the #exit, there are a few lemmas about TensorProduct.comm \r\nwhich I may simply drop, or turn into something potentially useful, while trivial to rewrite if needed.\r\n(Conjugating lTensor something with TensorProduct.comm gives rTensor, etc.)\r\n",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mLcgV",
              "createdAt": "2023-09-11T17:10:19Z",
              "body": "One final question : at a few points (line 550, for example), I need to add an explicit `have` which is proved by `rfl`, but is needed for another `rw`.  \r\nIs there a better way to achieve the same result?",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e35016bc146421bdf323c99587dd5fbc4a2b705b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5c6c5126316bf4be746566a6a3c209188d933b56"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hJ8-F",
              "createdAt": "2023-09-16T18:05:50Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "036b2adf1b14827b7073f40ff4c810e5d5e5a997"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5twQA1zwAAAAJrY1oI",
              "createdAt": "2023-09-17T16:05:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJrY1oL",
              "createdAt": "2023-09-17T16:05:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJr8Euw",
              "createdAt": "2023-09-18T17:09:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cea4ee6c754f90dc231b80f0b8e5ff370d51a7c5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "61c186c308df386167f23e7e62f4531392ebd001"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5twQA1zwAAAAJvONDL",
              "createdAt": "2023-09-24T20:48:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nRmP8",
              "createdAt": "2023-09-24T20:50:10Z",
              "body": "There was a merge conflict in Mathlib.lean.\r\nI added Mathlib.LinearAlgebra.TensorProduct.RightExactness at the (hopefully) correct line.",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5twQA1zwAAAAJvd1eI",
              "createdAt": "2023-09-25T09:26:43Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5twQA1zwAAAAJvfC6a",
              "createdAt": "2023-09-25T09:52:17Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM3NzcyOTQ5",
                "login": "joelriou"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nURg4",
              "createdAt": "2023-09-25T10:13:02Z",
              "body": "Do you think it is possible to split the PR?",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h3Fth",
              "createdAt": "2023-09-25T10:29:23Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nY6XI",
              "createdAt": "2023-09-25T23:08:06Z",
              "body": "> Do you think it is possible to split the PR?\r\n\r\nYes and no : \r\nYes, because it can be naturally decomposed into two PRs, one for modules and the other for algebras ;\r\nNo, because I don't understand enough about git to delegate something to a subsequent PR…",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5twQA1zwAAAAJv9RPG",
              "createdAt": "2023-09-25T23:08:06Z"
            },
            {
              "__typename": "ReopenedEvent",
              "id": "REE_lADOFcwZ1c5twQA1zwAAAAJv9Twc",
              "createdAt": "2023-09-25T23:10:14Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "719c77ed9b7a951cce4c53e3a94e7a1a22fd7e09"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nY7nd",
              "createdAt": "2023-09-25T23:14:44Z",
              "body": "The lowest-tech version of splitting a PR is to simply have it open on github in one window, and copy over the pieces one at a time that you want to have in the earlier half of the PR.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5h792B",
              "createdAt": "2023-09-25T23:15:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "380225002eb11f5105d0cca0ff006faa72f4a2bb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nagmj",
              "createdAt": "2023-09-26T07:43:34Z",
              "body": "> > Do you think it is possible to split the PR?\r\n> \r\n> Yes and no : Yes, because it can be naturally decomposed into two PRs, one for modules and the other for algebras ; No, because I don't understand enough about git to delegate something to a subsequent PR…\r\n\r\nYou can just open a new PR with only the module stuff (or the algebra stuff, whatever makes more sense to start with) and ignore this one. When the other one gets accepted just merge master into this one. Of course this is not the perfect solution since the modifications done in the other PR will probably be in conflict with this one, but this is usually not a big deal.\r\n\r\nIf you are interested in learning the right way to do it I guess internet is full of explanations, but I found [this](https://web.archive.org/web/20210116050503/https://unhashable.com/stacked-pull-requests-keeping-github-diffs-small/) one, suggested by Johan, very clear.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e62ee8a3cace705d6318e243c06f688a76b60bd1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4ced73ec4267d5fa6e32aee72748128d7cae40a4"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nfbOi",
              "createdAt": "2023-09-26T20:56:33Z",
              "body": "@riccardobrasca I removed the case of algebras from this PR.",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5iGck8",
              "createdAt": "2023-09-27T08:05:10Z",
              "body": "",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5iHjYg",
              "createdAt": "2023-09-27T10:32:09Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5iHl5R",
              "createdAt": "2023-09-27T10:38:33Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d2142cc9e6b531706771028b46df815159bb18c2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0f397de9dd258ebbe8a6f5ee7a7cec85bb01a8f9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c8c55f07ef514dc7ff967c9752380d99d178ae35"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6da6385d4ca571b62597523eef7cc2d7e5cfe95b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "005161311fc23bdc7746644c22f1278e073fc085"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0fe45f0688ce554b3c8bca95ac25ed6a96929669"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "78d70f7780499e01160ee7a55d2bca31a86e8d87"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e17e8692fbde002801267633f856906bb00d8505"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oI60x",
              "createdAt": "2023-10-04T15:43:01Z",
              "body": "There is only [this](https://github.com/leanprover-community/mathlib4/pull/6447#discussion_r1291484918) left and then LGTM, thanks!\r\n\r\nbors d+",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oI62h",
              "createdAt": "2023-10-04T15:43:03Z",
              "body": ":v: AntoineChambert-Loir can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJ0_-gy",
              "createdAt": "2023-10-04T15:43:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5twQA1zwAAAAJ0_-jo",
              "createdAt": "2023-10-04T15:43:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNdWa",
              "createdAt": "2023-10-05T08:22:43Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5twQA1zwAAAAJ1bYWk",
              "createdAt": "2023-10-05T08:22:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNdvi",
              "createdAt": "2023-10-05T08:23:47Z",
              "body": "Build failed:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6416509168/job/17420388572)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNf7E",
              "createdAt": "2023-10-05T08:29:09Z",
              "body": "bors is complaining about a linter error.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNh30",
              "createdAt": "2023-10-05T08:33:52Z",
              "body": "Let me correct this at once.",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fa883e880c880efebac45ab5d415ec018d55bf81"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNk9l",
              "createdAt": "2023-10-05T08:41:32Z",
              "body": "> Let me correct this at once.\r\n\r\nI don't understand why CI didn't catch this but bors did...",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNlU_",
              "createdAt": "2023-10-05T08:42:26Z",
              "body": "Maybe I could post something on Zulip about this?",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNlZR",
              "createdAt": "2023-10-05T08:42:37Z",
              "body": "> > Let me correct this at once.\r\n> \r\n> I don't understand why CI didn't catch this but bors did...\r\n\r\nAh, it's a new linter, that's probably the reason.",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oNv4h",
              "createdAt": "2023-10-05T09:02:54Z",
              "body": "bors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oObTa",
              "createdAt": "2023-10-05T10:24:32Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6416928676/job/17421663507)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6416928676/job/17421663821)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6416928676/job/17421664402)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5twQA1zwAAAAJ1haJt",
              "createdAt": "2023-10-05T10:24:33Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5twQA1zwAAAAJ1haUl",
              "createdAt": "2023-10-05T10:24:37Z"
            }
          ]
        }
      }
    }
  }
}
