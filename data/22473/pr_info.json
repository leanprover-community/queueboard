{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 16,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 105,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6ggtvZ",
              "body": "### PR summary [fd7608e545](https://github.com/leanprover-community/mathlib4/pull/22473/commits/fd7608e5459ef71ee37a3ad31371ac46dfec3f30)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.MLList.Dedup | 22 | 0 | -22 (-100.00%) |\n| Mathlib.Data.MLList.DepthFirst | 23 | 0 | -23 (-100.00%) |\n| Mathlib.Data.MLList.IO | 21 | 0 | -21 (-100.00%) |\n| Mathlib.Data.MLList.Split | 164 | 0 | -164 (-100.00%) |\n| Mathlib.Deprecated.ByteArray | 21 | 0 | -21 (-100.00%) |\n| Mathlib.Deprecated.NatLemmas | 25 | 0 | -25 (-100.00%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.MLList.Split`|-164|\n| `Mathlib.Deprecated.NatLemmas`|-25|\n| `Mathlib.Data.MLList.DepthFirst`|-23|\n| `Mathlib.Data.MLList.Dedup`|-22|\n| `Mathlib.Data.MLList.IO` `Mathlib.Deprecated.ByteArray`|-21|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`- Aleph'.relIso`\n`- AlgEquiv.isSeparable`\n`- Antitone.map_iInf_of_continuousAt'`\n`- Antitone.map_iSup_of_continuousAt'`\n`- Antitone.map_sInf_of_continuousAt'`\n`- Antitone.map_sSup_of_continuousAt'`\n`- ByteArray.toSlice`\n`- ByteArray.toSliceT`\n`- ByteSlice`\n`- ByteSlice.toString`\n`- ByteSliceT`\n`- ByteSliceT.toSlice`\n`- CstarModule`\n`- CstarRing`\n`- FiniteDimensional.Subalgebra.is_simple_order_of_finrank_prime`\n`- Finsupp.total_eq_fintype_total`\n`- Finsupp.total_eq_fintype_total_apply`\n`- Fintype.range_total`\n`- Fintype.total`\n`- Fintype.total_apply`\n`- Fintype.total_apply_single`\n`- Int.ofNat_ceil_eq_ceil`\n`- Int.ofNat_floor_eq_floor`\n`- IsAlgClosure.alg_closed`\n`- IsAlgClosure.algebraic`\n`- IsPrefix.get_eq`\n`- IsPrefix.head_eq`\n`- IsSeparable.of_isScalarTower`\n`- KaehlerDifferential.total_surjective`\n`- LawfulFix.fix_eq'`\n`- LinearIndependent.injective_total`\n`- LinearIndependent.totalEquiv`\n`- LinearIndependent.totalEquiv_apply_coe`\n`- LinearIndependent.total_comp_repr`\n`- LinearIndependent.total_ne_of_not_mem_support`\n`- LinearIndependent.total_repr`\n`- LinearMap.map_finsupp_total`\n`- LipschitzWith.mul'`\n`- Matrix.mulVec_stdBasis`\n`- Matrix.mulVec_stdBasis_apply`\n`- Matrix.toBilin'_stdBasis`\n`- Matrix.toLinearMap₂'_stdBasis`\n`- Matrix.toLinearMapₛₗ₂'_stdBasis`\n`- Matrix.vecMul_stdBasis`\n`- Monotone.map_iInf_of_continuousAt'`\n`- Monotone.map_iSup_of_continuousAt'`\n`- Monotone.map_sInf_of_continuousAt'`\n`- Monotone.map_sSup_of_continuousAt'`\n`- Quot.EqvGen_sound`\n`- Quot.exact`\n`- Span.finsupp_total_repr`\n`- SquaresAddClosure`\n`- SumSqIn`\n`- Up`\n`- Up.WF`\n`- Up.next`\n`- _root_.NatOrdinal.mul_le_nmul`\n`- _root_.bounded_mem`\n`- _root_.topologicalGroup_quotient`\n`- _root_.zero_at_im_infty`\n`- abs_intCast`\n`- add_left_neg`\n`- add_right_neg`\n`- add_right_self`\n`- aleph'.relIso_coe`\n`- aleph'Equiv`\n`- aleph'_alephIdx`\n`- alephIdx`\n`- alephIdx.initialSeg`\n`- alephIdx.relIso`\n`- alephIdx.relIso_coe`\n`- alephIdx_aleph'`\n`- all_iff_forall`\n`- any_iff_exists`\n`- apply_total`\n`- apply_total_id`\n`- basis_repr_stdBasis`\n`- bot_lt_mul'`\n`- card_typein_out_lt`\n`- cardinalMeasurableSet_le`\n`- coe_stdBasis`\n`- cof_sup_le`\n`- cof_sup_le_lift`\n`- cons_prefix_iff`\n`- continuous_curry`\n`- continuous_uncurry`\n`- cos_quadratic_upper_bound`\n`- csInf_upper_bounds_eq_csSup`\n`- csSup_lower_bounds_eq_csInf`\n`- dedup`\n`- dedupBy`\n`- depthFirst`\n`- depthFirstRemovingDuplicates`\n`- depthFirstRemovingDuplicates'`\n`- diagonal_comp_stdBasis`\n`- discriminate`\n`- disjoint_stdBasis_stdBasis`\n`- div_div_div_cancel_right'`\n`- div_mul_div_cancel''`\n`- dotProduct_stdBasis_eq_mul`\n`- dotProduct_stdBasis_one`\n`- dropWhile_nthLe_zero_not`\n`- enumIsoOut`\n`- eq'`\n`- eq_of_infix_of_length_eq`\n`- eq_of_prefix_of_length_eq`\n`- eq_of_suffix_of_length_eq`\n`- eq_zero_of_out_empty`\n`- equation_smul_iff`\n`- equivFun_symm_stdBasis`\n`- erase_get`\n`- even_add_self`\n`- eventually_of_forall`\n`- exists_absolutelyContinuous_isFiniteMeasure`\n`- exists_mem_iterate_mem_of_volume_lt_mul_volume`\n`- fix_eq`\n`- forIn.loop`\n`- formPerm_apply_get`\n`- formPerm_apply_get_length`\n`- formPerm_apply_get_zero`\n`- formPerm_apply_lt_get`\n`- formPerm_pow_apply_get`\n`- frequently_of_forall`\n`- get?_iterate`\n`- getD_eq_get`\n`- getElem_reverse'`\n`- getI_eq_get`\n`- getUpToFirst`\n`- get_cons`\n`- get_iterate`\n`- get_succ_scanl`\n`- groupBy`\n`- iInf_ker_proj_le_iSup_range_stdBasis`\n`- iSup_range_stdBasis`\n`- iSup_range_stdBasis_eq_iInf_ker_proj`\n`- iSup_range_stdBasis_le_iInf_ker_proj`\n`- inf_le_of_mem_convexHull`\n`- initialSegOut`\n`- instance : ToString ByteSlice`\n`- instance {m : Type u → Type v} : ForIn m ByteSlice UInt8`\n`- inv_mul_self`\n`- isClosed_iff_sup`\n`- isInfix.reverse`\n`- isPrefix.reverse`\n`- isSemireal`\n`- isSemireal.neg_one_not_SumSq`\n`- isSquare_mul_self`\n`- isStrictTotalOrder`\n`- isSuffix.reverse`\n`- isSumSq`\n`- isSumSq.add`\n`- isSumSq.nonneg`\n`- ker_stdBasis`\n`- le_div_iff'`\n`- le_div_iff_mul_le`\n`- le_sup_of_mem_convexHull`\n`- le_sup_shrink_equiv`\n`- length_le_of_sublist`\n`- liminf_top`\n`- limsInf_principal`\n`- limsSup_principal`\n`- limsup_top`\n`- linearIndependent_iff_injective_total`\n`- linearIndependent_iff_totalOn`\n`- linearIndependent_stdBasis`\n`- lines`\n`- linesFromHandle`\n`- listTransvecCol_get`\n`- listTransvecRow_get`\n`- lmapDomain_total`\n`- ltByCases`\n`- ltGeByCases`\n`- lt_sup`\n`- map_add`\n`- map_mul`\n`- map_one`\n`- map_pow`\n`- map_smul`\n`- map_zero`\n`- matrixEquivTensor_apply_std_basis`\n`- matrix_eq_sum_std_basis`\n`- max_aleph_eq`\n`- measurableSet_discrete`\n`- measurable_compProdFun_of_finite`\n`- measurable_discrete`\n`- mem_closed_iff_sup`\n`- mem_closure_iff_sup`\n`- mem_cons_eq`\n`- mem_of_mem_suffix`\n`- mem_span_iff_total`\n`- mem_span_image_iff_total`\n`- mk_Iio_ord_out_α`\n`- mk_ord_out`\n`- mk_ordinal_out`\n`- mk_zero_zero`\n`- mul_inv_self`\n`- mul_le_iff_le_inv`\n`- mul_left_inv`\n`- mul_lt_top'`\n`- mul_pos`\n`- mul_right_inv`\n`- ne_of_vne`\n`- ne_zero_of_out_nonempty`\n`- neg_add_self`\n`- new_def_eq_old_def`\n`- nhds_one_isCountablyGenerated`\n`- nmul_le_nmul_of_nonneg_left`\n`- nmul_le_nmul_of_nonneg_right`\n`- nnnorm_int`\n`- nnnorm_nat`\n`- nonempty_Prop`\n`- nonempty_diff`\n`- nonsingularLift_zero'`\n`- nonsingular_affine_of_Z_ne_zero`\n`- nonsingular_iff_affine_of_Z_ne_zero`\n`- nonsingular_of_affine_of_Z_ne_zero`\n`- nonsingular_smul_iff`\n`- nonsingular_zero'`\n`- nonzero_of_invertible`\n`- norm_int`\n`- norm_nat`\n`- norm_rat`\n`- not_exists_mem_nil`\n`- nthLe_cons`\n`- nthLe_finRange`\n`- nthLe_mapIdx`\n`- nthLe_range`\n`- nthLe_range'`\n`- nthLe_range'_1`\n`- nthLe_rotate_one`\n`- nthLe_tail`\n`- oldMapIdx`\n`- oldMapIdxCore`\n`- oldMapIdxCore_append`\n`- oldMapIdxCore_eq`\n`- oldMapIdx_append`\n`- one_mod_of_ne_one`\n`- one_out_eq`\n`- one_sub_two_div_pi_mul_le_cos`\n`- outOrderBotOfPos`\n`- out_empty_iff_eq_zero`\n`- out_nonempty_iff_ne_zero`\n`- principalSegOut`\n`- principal_iff_principal_swap`\n`- prod_lt_bot`\n`- proj_comp_stdBasis`\n`- proj_stdBasis_ne`\n`- proj_stdBasis_same`\n`- quotientRel_r_def`\n`- range_total`\n`- recOn'`\n`- recOnSubsingleton'`\n`- repr_total`\n`- rpow_add_int`\n`- rpow_add_int'`\n`- rpow_add_nat`\n`- rpow_add_nat'`\n`- rpow_sub_int`\n`- rpow_sub_int'`\n`- rpow_sub_nat`\n`- rpow_sub_nat'`\n`- runCmd`\n`- sSup_eq_sup`\n`- set_smul_mem_nhds_smul`\n`- set_smul_mem_nhds_smul_iff`\n`- sin_le_two_div_pi_mul`\n`- size`\n`- smul_mem_nhds`\n`- span_eq_range_total`\n`- span_image_eq_map_total`\n`- splitAtBecomesTrue`\n`- splitAt_eq_take_drop`\n`- splitWhile`\n`- sqrt_eq_iff_eq_mul_self`\n`- sqrt_eq_iff_sq_eq`\n`- stdBasis`\n`- stdBasis_apply`\n`- stdBasis_apply'`\n`- stdBasis_eq_pi_diag`\n`- stdBasis_eq_single`\n`- stdBasis_ne`\n`- stdBasis_same`\n`- std_basis_eq_basis_mul_basis`\n`- sublist_join`\n`- sumSq`\n`- sumSqIn`\n`- sum_eq_top_iff`\n`- sup_add_nat`\n`- sup_empty`\n`- sup_eq_sSup`\n`- sup_eq_zero_iff`\n`- sup_iterate_eq_nfp`\n`- sup_lt_ord`\n`- sup_lt_ord_lift`\n`- sup_lt_ord_lift_of_isRegular`\n`- sup_lt_ord_of_isRegular`\n`- sup_mul_nat`\n`- sup_opow_nat`\n`- toArray`\n`- toDual_total_left`\n`- toDual_total_right`\n`- to_unit_cont`\n`- total`\n`- totalOn`\n`- totalOn_range`\n`- total_apply`\n`- total_apply_of_mem_supported`\n`- total_comapDomain`\n`- total_comp`\n`- total_comp_lmapDomain`\n`- total_coord`\n`- total_dualBasis`\n`- total_embDomain`\n`- total_equivMapDomain`\n`- total_fin_zero`\n`- total_id_surjective`\n`- total_mapDomain`\n`- total_onFinset`\n`- total_option`\n`- total_range`\n`- total_repr`\n`- total_single`\n`- total_surjective`\n`- total_total`\n`- total_unique`\n`- total_zero`\n`- total_zero_apply`\n`- two_div_pi_mul_le_sin`\n`- type_out`\n`- typein_one_out`\n`- unbounded_range_of_sup_ge`\n`- uncurry_curry_continuous`\n`- upRel`\n`- vne_of_ne`\n`- zero_sum_zero`\n`- ⟨eq_zero_of_mul_eq_zero,`\n`-- div_le_iff`\n`-- div_le_iff'`\n`-- even_iff_not_odd`\n`-- getOp`\n`-- le_div_iff`\n`-- odd_iff_not_even`\n`-- sum_lt_top_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (4.36, 0.54)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|95|-9|disabled deprecation lints|\n|9|-2|`Deprecated` files|\n|632|-139|total LoC in `Deprecated` files|\n\nCurrent commit [fd7608e545](https://github.com/leanprover-community/mathlib4/commit/fd7608e5459ef71ee37a3ad31371ac46dfec3f30)\nReference commit [05ddc5f9e3](https://github.com/leanprover-community/mathlib4/commit/05ddc5f9e340b2f64adad7b37e8b9f203ab59770)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-02T22:03:40Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "4a93b2588c68df6a30c5fc58f3630dae9c61307b",
                "additions": 1,
                "deletions": 1740,
                "committedDate": "2025-03-02T22:02:22Z",
                "author": {
                  "name": "Kim Morrison",
                  "email": "kim@tqft.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6knA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619719497/job/38067414172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6Dfw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619715427/job/38067405695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6aPQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619718480/job/38067411517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6aDQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619718493/job/38067411469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6Zxg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619718486/job/38067411398"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6EgQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619715608/job/38067405953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6axw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619718478/job/38067411655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6FKg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619715608/job/38067406122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6EKg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619715427/job/38067405866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6Z_g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619718478/job/38067411454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8yqA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619715608/job/38067450536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6E3Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619715427/job/38067406045"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6wJg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38067417126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P6zhA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22473&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2d2c5df36f744b5854923e609abfa45fd624a4da",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2025-03-02T22:04:12Z",
                "author": {
                  "name": "Kim Morrison",
                  "email": "kim@tqft.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8gEw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619731899/job/38067445779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8hVQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619732236/job/38067446101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8hNw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619732227/job/38067446071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8zDw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619731897/job/38067450639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8hpg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619732233/job/38067446182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8zbg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619731897/job/38067450734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8fLQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619731899/job/38067445549"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8iWQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619732233/job/38067446361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P8g4g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619731899/job/38067445986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QMmow",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13619731897/job/38067709603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P85uw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38067452347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3P9Nfg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22473&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fd7608e5459ef71ee37a3ad31371ac46dfec3f30",
                "additions": 105,
                "deletions": 0,
                "committedDate": "2025-03-02T22:38:23Z",
                "author": {
                  "name": "Kim Morrison",
                  "email": "kim@tqft.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQtA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010674/job/38068064436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQew",
                        "name": "Lint style",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010636/job/38068064379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiRAg",
                        "name": "Lint style",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010675/job/38068064514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQQA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010635/job/38068064320"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQsw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010673/job/38068064435"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQPg",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010636/job/38068064318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQkw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010635/job/38068064403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQxg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010675/job/38068064454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3QiQ8Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010635/job/38068064497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Qil9Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38068069877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI3Qi1sA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22473&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-02T22:02:44Z",
        "deletions": 1654,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Algebra/Equiv.lean",
              "additions": 0,
              "deletions": 28
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/IsSimpleOrder.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/BigOperators/WithTop.lean",
              "additions": 0,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Group/Action/Defs.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Group/Basic.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Group/Defs.lean",
              "additions": 0,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Group/Equiv/Defs.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Even.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Invertible.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Floor.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Order/GroupWithZero/Unbundled.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/WithTop.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Ring/Int/Parity.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Ring/Parity.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Ring/Semireal/Defs.lean",
              "additions": 0,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Ring/SumsOfSquares.lean",
              "additions": 0,
              "deletions": 12
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/Projective.lean",
              "additions": 0,
              "deletions": 11
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Basic.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Module/Defs.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Complex/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/FunctionsBoundedAtInfty.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Convex/Jensen.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Uniform.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/Real.lean",
              "additions": 0,
              "deletions": 9
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Bounds.lean",
              "additions": 0,
              "deletions": 5
            },
            {
              "path": "Mathlib/Control/LawfulFix.lean",
              "additions": 0,
              "deletions": 16
            },
            {
              "path": "Mathlib/Data/Bool/AllAny.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Complex/Norm.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/ENNReal/Operations.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fin/Basic.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/List/Basic.lean",
              "additions": 0,
              "deletions": 13
            },
            {
              "path": "Mathlib/Data/List/Defs.lean",
              "additions": 0,
              "deletions": 15
            },
            {
              "path": "Mathlib/Data/List/FinRange.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/Flatten.lean",
              "additions": 0,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/List/GetD.lean",
              "additions": 0,
              "deletions": 8
            },
            {
              "path": "Mathlib/Data/List/Indexes.lean",
              "additions": 0,
              "deletions": 75
            },
            {
              "path": "Mathlib/Data/List/Infix.lean",
              "additions": 0,
              "deletions": 30
            },
            {
              "path": "Mathlib/Data/List/Iterate.lean",
              "additions": 0,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/List/Lemmas.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/List/Lex.lean",
              "additions": 2,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/List/Range.lean",
              "additions": 0,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/List/Rotate.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/Scan.lean",
              "additions": 0,
              "deletions": 7
            },
            {
              "path": "Mathlib/Data/List/SplitOn.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/TakeWhile.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/MLList/Dedup.lean",
              "additions": 0,
              "deletions": 41
            },
            {
              "path": "Mathlib/Data/MLList/DepthFirst.lean",
              "additions": 0,
              "deletions": 98
            },
            {
              "path": "Mathlib/Data/MLList/IO.lean",
              "additions": 0,
              "deletions": 62
            },
            {
              "path": "Mathlib/Data/MLList/Split.lean",
              "additions": 0,
              "deletions": 126
            },
            {
              "path": "Mathlib/Data/Matrix/Basis.lean",
              "additions": 0,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/NNReal/Defs.lean",
              "additions": 0,
              "deletions": 20
            },
            {
              "path": "Mathlib/Data/Nat/Init.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Quot.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Real/Basic.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/Real/Sqrt.lean",
              "additions": 0,
              "deletions": 8
            },
            {
              "path": "Mathlib/Data/Set/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Setoid/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Deprecated/ByteArray.lean",
              "additions": 0,
              "deletions": 102
            },
            {
              "path": "Mathlib/Deprecated/NatLemmas.lean",
              "additions": 0,
              "deletions": 37
            },
            {
              "path": "Mathlib/Dynamics/Ergodic/MeasurePreserving.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/FieldTheory/IsAlgClosed/Basic.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/FieldTheory/PerfectClosure.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/Separable.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/GroupTheory/Coset/Defs.lean",
              "additions": 0,
              "deletions": 9
            },
            {
              "path": "Mathlib/GroupTheory/Perm/List.lean",
              "additions": 0,
              "deletions": 28
            },
            {
              "path": "Mathlib/LinearAlgebra/Basis/Defs.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/LinearAlgebra/Dual.lean",
              "additions": 0,
              "deletions": 9
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp/LinearCombination.lean",
              "additions": 0,
              "deletions": 85
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp/VectorSpace.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/LinearIndependent/Basic.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/LinearAlgebra/LinearIndependent/Defs.lean",
              "additions": 0,
              "deletions": 20
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/BilinearForm.lean",
              "additions": 0,
              "deletions": 7
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Diagonal.lean",
              "additions": 0,
              "deletions": 7
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/DotProduct.lean",
              "additions": 0,
              "deletions": 12
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/SesquilinearForm.lean",
              "additions": 0,
              "deletions": 15
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/ToLin.lean",
              "additions": 0,
              "deletions": 18
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Transvection.lean",
              "additions": 0,
              "deletions": 14
            },
            {
              "path": "Mathlib/LinearAlgebra/Quotient/Defs.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/StdBasis.lean",
              "additions": 0,
              "deletions": 111
            },
            {
              "path": "Mathlib/Logic/Nonempty.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Logic/Relation.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/MeasurableSpace/Card.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/MeasurableSpace/Defs.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Typeclasses.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Order/ConditionallyCompleteLattice/Basic.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "Mathlib/Order/Defs/LinearOrder.lean",
              "additions": 0,
              "deletions": 16
            },
            {
              "path": "Mathlib/Order/Filter/Basic.lean",
              "additions": 0,
              "deletions": 4
            },
            {
              "path": "Mathlib/Order/Filter/Pointwise.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/LiminfLimsup.lean",
              "additions": 0,
              "deletions": 5
            },
            {
              "path": "Mathlib/Probability/Kernel/Composition/CompProd.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/Kaehler/Basic.lean",
              "additions": 0,
              "deletions": 7
            },
            {
              "path": "Mathlib/RingTheory/MatrixAlgebra.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/SetTheory/Cardinal/Aleph.lean",
              "additions": 0,
              "deletions": 75
            },
            {
              "path": "Mathlib/SetTheory/Cardinal/Cofinality.lean",
              "additions": 0,
              "deletions": 39
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Arithmetic.lean",
              "additions": 13,
              "deletions": 60
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Basic.lean",
              "additions": 0,
              "deletions": 48
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Exponential.lean",
              "additions": 0,
              "deletions": 11
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/FixedPoint.lean",
              "additions": 0,
              "deletions": 12
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/NaturalOps.lean",
              "additions": 0,
              "deletions": 9
            }
          ]
        },
        "headRefName": "cleanup_deprecations_2025-03",
        "headRefOid": "fd7608e5459ef71ee37a3ad31371ac46dfec3f30",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6NE5A0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
              "color": "E96E5B",
              "name": "awaiting-CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22473,
        "potentialMergeCommit": {
          "oid": "fe7c6a13bd3c90a083fb55c791e4be5677d8cbaa"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQtA",
                "name": "post-or-update-summary-comment",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010674/job/38068064436"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQew",
                "name": "Lint style",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010636/job/38068064379"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiRAg",
                "name": "Lint style",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010675/job/38068064514"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQQA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010635/job/38068064320"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQsw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010673/job/38068064435"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQPg",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010636/job/38068064318"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQkw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010635/job/38068064403"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQxg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010675/job/38068064454"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3QiQ8Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13620010635/job/38068064497"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3Qil9Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38068069877"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI3Qi1sA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22473&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore: remove >6 month old deprecations",
        "updatedAt": "2025-03-02T22:39:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22473",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4a93b2588c68df6a30c5fc58f3630dae9c61307b"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6sPxrJzwAAAAPZChii",
              "createdAt": "2025-03-02T22:02:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ggtvZ",
              "createdAt": "2025-03-02T22:03:40Z",
              "body": "### PR summary [fd7608e545](https://github.com/leanprover-community/mathlib4/pull/22473/commits/fd7608e5459ef71ee37a3ad31371ac46dfec3f30)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.MLList.Dedup | 22 | 0 | -22 (-100.00%) |\n| Mathlib.Data.MLList.DepthFirst | 23 | 0 | -23 (-100.00%) |\n| Mathlib.Data.MLList.IO | 21 | 0 | -21 (-100.00%) |\n| Mathlib.Data.MLList.Split | 164 | 0 | -164 (-100.00%) |\n| Mathlib.Deprecated.ByteArray | 21 | 0 | -21 (-100.00%) |\n| Mathlib.Deprecated.NatLemmas | 25 | 0 | -25 (-100.00%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.MLList.Split`|-164|\n| `Mathlib.Deprecated.NatLemmas`|-25|\n| `Mathlib.Data.MLList.DepthFirst`|-23|\n| `Mathlib.Data.MLList.Dedup`|-22|\n| `Mathlib.Data.MLList.IO` `Mathlib.Deprecated.ByteArray`|-21|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`- Aleph'.relIso`\n`- AlgEquiv.isSeparable`\n`- Antitone.map_iInf_of_continuousAt'`\n`- Antitone.map_iSup_of_continuousAt'`\n`- Antitone.map_sInf_of_continuousAt'`\n`- Antitone.map_sSup_of_continuousAt'`\n`- ByteArray.toSlice`\n`- ByteArray.toSliceT`\n`- ByteSlice`\n`- ByteSlice.toString`\n`- ByteSliceT`\n`- ByteSliceT.toSlice`\n`- CstarModule`\n`- CstarRing`\n`- FiniteDimensional.Subalgebra.is_simple_order_of_finrank_prime`\n`- Finsupp.total_eq_fintype_total`\n`- Finsupp.total_eq_fintype_total_apply`\n`- Fintype.range_total`\n`- Fintype.total`\n`- Fintype.total_apply`\n`- Fintype.total_apply_single`\n`- Int.ofNat_ceil_eq_ceil`\n`- Int.ofNat_floor_eq_floor`\n`- IsAlgClosure.alg_closed`\n`- IsAlgClosure.algebraic`\n`- IsPrefix.get_eq`\n`- IsPrefix.head_eq`\n`- IsSeparable.of_isScalarTower`\n`- KaehlerDifferential.total_surjective`\n`- LawfulFix.fix_eq'`\n`- LinearIndependent.injective_total`\n`- LinearIndependent.totalEquiv`\n`- LinearIndependent.totalEquiv_apply_coe`\n`- LinearIndependent.total_comp_repr`\n`- LinearIndependent.total_ne_of_not_mem_support`\n`- LinearIndependent.total_repr`\n`- LinearMap.map_finsupp_total`\n`- LipschitzWith.mul'`\n`- Matrix.mulVec_stdBasis`\n`- Matrix.mulVec_stdBasis_apply`\n`- Matrix.toBilin'_stdBasis`\n`- Matrix.toLinearMap₂'_stdBasis`\n`- Matrix.toLinearMapₛₗ₂'_stdBasis`\n`- Matrix.vecMul_stdBasis`\n`- Monotone.map_iInf_of_continuousAt'`\n`- Monotone.map_iSup_of_continuousAt'`\n`- Monotone.map_sInf_of_continuousAt'`\n`- Monotone.map_sSup_of_continuousAt'`\n`- Quot.EqvGen_sound`\n`- Quot.exact`\n`- Span.finsupp_total_repr`\n`- SquaresAddClosure`\n`- SumSqIn`\n`- Up`\n`- Up.WF`\n`- Up.next`\n`- _root_.NatOrdinal.mul_le_nmul`\n`- _root_.bounded_mem`\n`- _root_.topologicalGroup_quotient`\n`- _root_.zero_at_im_infty`\n`- abs_intCast`\n`- add_left_neg`\n`- add_right_neg`\n`- add_right_self`\n`- aleph'.relIso_coe`\n`- aleph'Equiv`\n`- aleph'_alephIdx`\n`- alephIdx`\n`- alephIdx.initialSeg`\n`- alephIdx.relIso`\n`- alephIdx.relIso_coe`\n`- alephIdx_aleph'`\n`- all_iff_forall`\n`- any_iff_exists`\n`- apply_total`\n`- apply_total_id`\n`- basis_repr_stdBasis`\n`- bot_lt_mul'`\n`- card_typein_out_lt`\n`- cardinalMeasurableSet_le`\n`- coe_stdBasis`\n`- cof_sup_le`\n`- cof_sup_le_lift`\n`- cons_prefix_iff`\n`- continuous_curry`\n`- continuous_uncurry`\n`- cos_quadratic_upper_bound`\n`- csInf_upper_bounds_eq_csSup`\n`- csSup_lower_bounds_eq_csInf`\n`- dedup`\n`- dedupBy`\n`- depthFirst`\n`- depthFirstRemovingDuplicates`\n`- depthFirstRemovingDuplicates'`\n`- diagonal_comp_stdBasis`\n`- discriminate`\n`- disjoint_stdBasis_stdBasis`\n`- div_div_div_cancel_right'`\n`- div_mul_div_cancel''`\n`- dotProduct_stdBasis_eq_mul`\n`- dotProduct_stdBasis_one`\n`- dropWhile_nthLe_zero_not`\n`- enumIsoOut`\n`- eq'`\n`- eq_of_infix_of_length_eq`\n`- eq_of_prefix_of_length_eq`\n`- eq_of_suffix_of_length_eq`\n`- eq_zero_of_out_empty`\n`- equation_smul_iff`\n`- equivFun_symm_stdBasis`\n`- erase_get`\n`- even_add_self`\n`- eventually_of_forall`\n`- exists_absolutelyContinuous_isFiniteMeasure`\n`- exists_mem_iterate_mem_of_volume_lt_mul_volume`\n`- fix_eq`\n`- forIn.loop`\n`- formPerm_apply_get`\n`- formPerm_apply_get_length`\n`- formPerm_apply_get_zero`\n`- formPerm_apply_lt_get`\n`- formPerm_pow_apply_get`\n`- frequently_of_forall`\n`- get?_iterate`\n`- getD_eq_get`\n`- getElem_reverse'`\n`- getI_eq_get`\n`- getUpToFirst`\n`- get_cons`\n`- get_iterate`\n`- get_succ_scanl`\n`- groupBy`\n`- iInf_ker_proj_le_iSup_range_stdBasis`\n`- iSup_range_stdBasis`\n`- iSup_range_stdBasis_eq_iInf_ker_proj`\n`- iSup_range_stdBasis_le_iInf_ker_proj`\n`- inf_le_of_mem_convexHull`\n`- initialSegOut`\n`- instance : ToString ByteSlice`\n`- instance {m : Type u → Type v} : ForIn m ByteSlice UInt8`\n`- inv_mul_self`\n`- isClosed_iff_sup`\n`- isInfix.reverse`\n`- isPrefix.reverse`\n`- isSemireal`\n`- isSemireal.neg_one_not_SumSq`\n`- isSquare_mul_self`\n`- isStrictTotalOrder`\n`- isSuffix.reverse`\n`- isSumSq`\n`- isSumSq.add`\n`- isSumSq.nonneg`\n`- ker_stdBasis`\n`- le_div_iff'`\n`- le_div_iff_mul_le`\n`- le_sup_of_mem_convexHull`\n`- le_sup_shrink_equiv`\n`- length_le_of_sublist`\n`- liminf_top`\n`- limsInf_principal`\n`- limsSup_principal`\n`- limsup_top`\n`- linearIndependent_iff_injective_total`\n`- linearIndependent_iff_totalOn`\n`- linearIndependent_stdBasis`\n`- lines`\n`- linesFromHandle`\n`- listTransvecCol_get`\n`- listTransvecRow_get`\n`- lmapDomain_total`\n`- ltByCases`\n`- ltGeByCases`\n`- lt_sup`\n`- map_add`\n`- map_mul`\n`- map_one`\n`- map_pow`\n`- map_smul`\n`- map_zero`\n`- matrixEquivTensor_apply_std_basis`\n`- matrix_eq_sum_std_basis`\n`- max_aleph_eq`\n`- measurableSet_discrete`\n`- measurable_compProdFun_of_finite`\n`- measurable_discrete`\n`- mem_closed_iff_sup`\n`- mem_closure_iff_sup`\n`- mem_cons_eq`\n`- mem_of_mem_suffix`\n`- mem_span_iff_total`\n`- mem_span_image_iff_total`\n`- mk_Iio_ord_out_α`\n`- mk_ord_out`\n`- mk_ordinal_out`\n`- mk_zero_zero`\n`- mul_inv_self`\n`- mul_le_iff_le_inv`\n`- mul_left_inv`\n`- mul_lt_top'`\n`- mul_pos`\n`- mul_right_inv`\n`- ne_of_vne`\n`- ne_zero_of_out_nonempty`\n`- neg_add_self`\n`- new_def_eq_old_def`\n`- nhds_one_isCountablyGenerated`\n`- nmul_le_nmul_of_nonneg_left`\n`- nmul_le_nmul_of_nonneg_right`\n`- nnnorm_int`\n`- nnnorm_nat`\n`- nonempty_Prop`\n`- nonempty_diff`\n`- nonsingularLift_zero'`\n`- nonsingular_affine_of_Z_ne_zero`\n`- nonsingular_iff_affine_of_Z_ne_zero`\n`- nonsingular_of_affine_of_Z_ne_zero`\n`- nonsingular_smul_iff`\n`- nonsingular_zero'`\n`- nonzero_of_invertible`\n`- norm_int`\n`- norm_nat`\n`- norm_rat`\n`- not_exists_mem_nil`\n`- nthLe_cons`\n`- nthLe_finRange`\n`- nthLe_mapIdx`\n`- nthLe_range`\n`- nthLe_range'`\n`- nthLe_range'_1`\n`- nthLe_rotate_one`\n`- nthLe_tail`\n`- oldMapIdx`\n`- oldMapIdxCore`\n`- oldMapIdxCore_append`\n`- oldMapIdxCore_eq`\n`- oldMapIdx_append`\n`- one_mod_of_ne_one`\n`- one_out_eq`\n`- one_sub_two_div_pi_mul_le_cos`\n`- outOrderBotOfPos`\n`- out_empty_iff_eq_zero`\n`- out_nonempty_iff_ne_zero`\n`- principalSegOut`\n`- principal_iff_principal_swap`\n`- prod_lt_bot`\n`- proj_comp_stdBasis`\n`- proj_stdBasis_ne`\n`- proj_stdBasis_same`\n`- quotientRel_r_def`\n`- range_total`\n`- recOn'`\n`- recOnSubsingleton'`\n`- repr_total`\n`- rpow_add_int`\n`- rpow_add_int'`\n`- rpow_add_nat`\n`- rpow_add_nat'`\n`- rpow_sub_int`\n`- rpow_sub_int'`\n`- rpow_sub_nat`\n`- rpow_sub_nat'`\n`- runCmd`\n`- sSup_eq_sup`\n`- set_smul_mem_nhds_smul`\n`- set_smul_mem_nhds_smul_iff`\n`- sin_le_two_div_pi_mul`\n`- size`\n`- smul_mem_nhds`\n`- span_eq_range_total`\n`- span_image_eq_map_total`\n`- splitAtBecomesTrue`\n`- splitAt_eq_take_drop`\n`- splitWhile`\n`- sqrt_eq_iff_eq_mul_self`\n`- sqrt_eq_iff_sq_eq`\n`- stdBasis`\n`- stdBasis_apply`\n`- stdBasis_apply'`\n`- stdBasis_eq_pi_diag`\n`- stdBasis_eq_single`\n`- stdBasis_ne`\n`- stdBasis_same`\n`- std_basis_eq_basis_mul_basis`\n`- sublist_join`\n`- sumSq`\n`- sumSqIn`\n`- sum_eq_top_iff`\n`- sup_add_nat`\n`- sup_empty`\n`- sup_eq_sSup`\n`- sup_eq_zero_iff`\n`- sup_iterate_eq_nfp`\n`- sup_lt_ord`\n`- sup_lt_ord_lift`\n`- sup_lt_ord_lift_of_isRegular`\n`- sup_lt_ord_of_isRegular`\n`- sup_mul_nat`\n`- sup_opow_nat`\n`- toArray`\n`- toDual_total_left`\n`- toDual_total_right`\n`- to_unit_cont`\n`- total`\n`- totalOn`\n`- totalOn_range`\n`- total_apply`\n`- total_apply_of_mem_supported`\n`- total_comapDomain`\n`- total_comp`\n`- total_comp_lmapDomain`\n`- total_coord`\n`- total_dualBasis`\n`- total_embDomain`\n`- total_equivMapDomain`\n`- total_fin_zero`\n`- total_id_surjective`\n`- total_mapDomain`\n`- total_onFinset`\n`- total_option`\n`- total_range`\n`- total_repr`\n`- total_single`\n`- total_surjective`\n`- total_total`\n`- total_unique`\n`- total_zero`\n`- total_zero_apply`\n`- two_div_pi_mul_le_sin`\n`- type_out`\n`- typein_one_out`\n`- unbounded_range_of_sup_ge`\n`- uncurry_curry_continuous`\n`- upRel`\n`- vne_of_ne`\n`- zero_sum_zero`\n`- ⟨eq_zero_of_mul_eq_zero,`\n`-- div_le_iff`\n`-- div_le_iff'`\n`-- even_iff_not_odd`\n`-- getOp`\n`-- le_div_iff`\n`-- odd_iff_not_even`\n`-- sum_lt_top_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (4.36, 0.54)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|95|-9|disabled deprecation lints|\n|9|-2|`Deprecated` files|\n|632|-139|total LoC in `Deprecated` files|\n\nCurrent commit [fd7608e545](https://github.com/leanprover-community/mathlib4/commit/fd7608e5459ef71ee37a3ad31371ac46dfec3f30)\nReference commit [05ddc5f9e3](https://github.com/leanprover-community/mathlib4/commit/05ddc5f9e340b2f64adad7b37e8b9f203ab59770)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2d2c5df36f744b5854923e609abfa45fd624a4da"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fd7608e5459ef71ee37a3ad31371ac46dfec3f30"
              }
            }
          ]
        }
      }
    }
  }
}
