{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 63,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "As a bonus, this lets us reduce imports. Also add the API that I independently came up with in https://github.com/leanprover-community/mathlib4/pull/20433#issuecomment-2607541838.\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> List.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6iwY1a",
              "body": "### PR summary [4a56e4cfbb](https://github.com/leanprover-community/mathlib4/pull/23020/commits/4a56e4cfbb37e869705a7278339f51b6998a9ae3)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.Finset.Sum | 466 | 426 | -40 (-8.58%) |\n| Mathlib.Data.Fintype.Sum | 492 | 453 | -39 (-7.93%) |\n| Mathlib.Logic.Equiv.Defs | 122 | 123 | +1 (+0.82%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.Finset.Sum`|-40|\n| `Mathlib.Data.Finite.Sum` `Mathlib.Data.Fintype.Sum`|-39|\n|<details><summary>76 files</summary> `Mathlib.Algebra.AddTorsor.Defs` `Mathlib.Algebra.Free` `Mathlib.Algebra.Group.Action.Defs` `Mathlib.Algebra.Group.Action.Faithful` `Mathlib.Algebra.Group.Action.Hom` `Mathlib.Algebra.Group.Action.Opposite` `Mathlib.Algebra.Group.Action.Option` `Mathlib.Algebra.Group.Action.Pretransitive` `Mathlib.Algebra.Group.Action.Sigma` `Mathlib.Algebra.Group.Action.Sum` `Mathlib.Algebra.Group.Action.TypeTags` `Mathlib.Algebra.Group.Action.Units` `Mathlib.Algebra.Group.Equiv.Defs` `Mathlib.Algebra.Group.Equiv.TypeTags` `Mathlib.Algebra.Group.Hom.End` `Mathlib.Algebra.Group.Int.TypeTags` `Mathlib.Algebra.Group.Invertible.Basic` `Mathlib.Algebra.Group.Nat.Hom` `Mathlib.Algebra.Group.Nat.TypeTags` `Mathlib.Algebra.Group.Opposite` `Mathlib.Algebra.Group.Pi.Units` `Mathlib.Algebra.Group.TypeTags.Basic` `Mathlib.Algebra.Group.TypeTags.Hom` `Mathlib.Algebra.Group.ULift` `Mathlib.Algebra.Group.Units.Opposite` `Mathlib.Algebra.GroupWithZero.Action.Defs` `Mathlib.Algebra.GroupWithZero.Action.End` `Mathlib.Algebra.GroupWithZero.Action.Faithful` `Mathlib.Algebra.GroupWithZero.Action.Opposite` `Mathlib.Algebra.GroupWithZero.Action.Units` `Mathlib.Algebra.GroupWithZero.Hom` `Mathlib.Algebra.GroupWithZero.Invertible` `Mathlib.Algebra.GroupWithZero.Opposite` `Mathlib.Algebra.GroupWithZero.ULift` `Mathlib.Algebra.GroupWithZero.Units.Lemmas` `Mathlib.Algebra.Module.Defs` `Mathlib.Algebra.Module.MinimalAxioms` `Mathlib.Algebra.Module.RingHom` `Mathlib.Algebra.NoZeroSMulDivisors.Defs` `Mathlib.Algebra.NoZeroSMulDivisors.Prod` `Mathlib.Algebra.Opposites` `Mathlib.Algebra.Ring.Action.Rat` `Mathlib.Algebra.Ring.Basic` `Mathlib.Algebra.Ring.Commute` `Mathlib.Algebra.Ring.Hom.Defs` `Mathlib.Algebra.Ring.InjSurj` `Mathlib.Algebra.Ring.Int.Units` `Mathlib.Algebra.Ring.Invertible` `Mathlib.Algebra.Ring.Units` `Mathlib.Combinatorics.Quiver.Basic` `Mathlib.Combinatorics.Quiver.Cast` `Mathlib.Combinatorics.Quiver.ConnectedComponent` `Mathlib.Combinatorics.Quiver.Path` `Mathlib.Combinatorics.Quiver.Prefunctor` `Mathlib.Combinatorics.Quiver.Push` `Mathlib.Combinatorics.Quiver.SingleObj` `Mathlib.Combinatorics.Quiver.Subquiver` `Mathlib.Combinatorics.Quiver.Symmetric` `Mathlib.Control.EquivFunctor` `Mathlib.Control.Monad.Basic` `Mathlib.Control.Monad.Cont` `Mathlib.Control.Monad.Writer` `Mathlib.Control.Traversable.Equiv` `Mathlib.Data.Erased` `Mathlib.Data.Finite.Defs` `Mathlib.Data.Nat.Cast.Commute` `Mathlib.Data.Opposite` `Mathlib.GroupTheory.GroupAction.Ring` `Mathlib.LinearAlgebra.AffineSpace.Defs` `Mathlib.Logic.Equiv.Defs` `Mathlib.Logic.Small.Defs` `Mathlib.Logic.UnivLE` `Mathlib.Tactic.NormNum.Core` `Mathlib.Tactic.NormNum.Result` `Mathlib.Tactic.ProdAssoc` `Mathlib.Tactic.ProxyType`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ left_eq_empty`\n`+ left_eq_univ`\n`+ right_eq_empty`\n`+ right_eq_univ`\n`+ sumIsLeft`\n`+ sumIsRight`\n`+ toLeft_univ`\n`+ toRight_univ`\n`+ univ_disjSum_univ`\n`- Finset.univ_disjSum_univ`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-17T19:20:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i2Glb",
              "body": "> @fpvandoorn, what's your preferred way for me to fix the `simps` error in `Logic.Equiv.Set`?\r\n\r\nBy making sure that `Logic.Equiv.Defs` imports a file containing `initialize_simps_projections Subtype (val → coe)` (currently `Data.Subtype`).\r\nAt least, I think that is the issue.\r\nIf that is the issue, please open an issue that `simps` should raise a warning when two conflicting configurations are found in different imports.\r\n",
              "createdAt": "2025-03-18T08:26:25Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i2I-3",
              "body": "#23041 might also help",
              "createdAt": "2025-03-18T08:31:03Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i2Wag",
              "body": "Or, going even further, we can disallow `@[simps]` at all, unless `initialize_simps_projections` has been called explicitly.\r\n\r\nWhen I wrote `@[simps]`, I was under the impression that being more permissive is better: if the user wants to do X, it should try to do X as best as it can. However, I realize that in the current Mathlib with its many refactors, this is not desired: refactors often unintentionally change things, and `simps` should just complain whenever something changes.\r\n\r\nPlease open issues (or make fixes to `simps`) with how you want it to behave. \r\nIn particular, the suggestion at the start of this message is easy: currently `getRawProjections` either retrieves projection information, or generates it. Splitting that up into two separate functions would do the trick.",
              "createdAt": "2025-03-18T08:49:51Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i5L7C",
              "body": "> By making sure that `Logic.Equiv.Defs` imports a file containing `initialize_simps_projections Subtype (val → coe)` (currently `Data.Subtype`).\r\n\r\nIndeed that's the case.\r\n\r\n> If that is the issue, please open an issue that `simps` should raise a warning when two conflicting configurations are found in different imports.\r\n\r\nI see that you have opened #23041 for that, so I will refrain from doing so.",
              "createdAt": "2025-03-18T11:40:08Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i5Pal",
              "body": "It's not quite the same, but I added it to that issue.\r\n\r\nDo you think this would be good?\r\n\r\n> Or, going even further, we can disallow `@[simps]` at all, unless `initialize_simps_projections` has been called explicitly.",
              "createdAt": "2025-03-18T11:45:51Z",
              "author": {
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "4464c15a506d71a3bedc6eebd25687f06f8111ec",
                "additions": 61,
                "deletions": 20,
                "committedDate": "2025-03-17T19:19:31Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4zJhw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908055840/job/38915590535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4xeWA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908047035/job/38915563096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD41oHw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908068779/job/38915631135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD7uqGw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908992794/job/38918662683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4x1yA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908049004/job/38915569096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4x1vw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908048996/job/38915569087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD41oOw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908068794/job/38915631163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD7uqLg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908992836/job/38918662702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4x19g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908049011/job/38915569142"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD41oNQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908068805/job/38915631157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD7uqRw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908992812/job/38918662727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4xfmg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908047038/job/38915563418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4x4EA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908049019/job/38915569680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4xejQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908047038/job/38915563149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4xgHA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908047035/job/38915563548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4x2zQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908049019/job/38915569357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4xh1g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908047035/job/38915563990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD5Nn6Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908047038/job/38916024297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4zNzg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38915591630"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD4zeDg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23020&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4a56e4cfbb37e869705a7278339f51b6998a9ae3",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2025-03-18T11:40:57Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhehEQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323325/job/38958244113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhenTQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922324009/job/38958245709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhemMA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323993/job/38958245424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhefTw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323348/job/38958243663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhendA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922324002/job/38958245748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEheglg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323348/job/38958243990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhefoA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323325/job/38958243744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhepGw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922324002/job/38958246171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEheiMA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323325/job/38958244400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiSphQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323348/job/38959098245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhgFTQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38958269773"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEhgVIA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23020&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-17T19:19:42Z",
        "deletions": 21,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Finset/Sum.lean",
              "additions": 8,
              "deletions": 16
            },
            {
              "path": "Mathlib/Data/Fintype/Sum.lean",
              "additions": 32,
              "deletions": 4
            },
            {
              "path": "Mathlib/Logic/Equiv/Defs.lean",
              "additions": 23,
              "deletions": 1
            }
          ]
        },
        "headRefName": "finset_to_left_no_disjiunion",
        "headRefOid": "4a56e4cfbb37e869705a7278339f51b6998a9ae3",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6O-2eg",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
              "color": "E96E5B",
              "name": "awaiting-CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6gcsoQ",
              "body": "The finset/fintype changes look great to me",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-17T20:16:09Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23020,
        "potentialMergeCommit": {
          "oid": "6f8aea950c0b9d67c71d1239cda9c633e6bf0404"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6gcMSP",
              "body": "@fpvandoorn, what's your preferred way for me to fix the `simps` error in `Logic.Equiv.Set`?",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-17T19:20:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6gcsoQ",
              "body": "The finset/fintype changes look great to me",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-17T20:16:09Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhehEQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323325/job/38958244113"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhenTQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922324009/job/38958245709"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhemMA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323993/job/38958245424"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhefTw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323348/job/38958243663"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhendA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922324002/job/38958245748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEheglg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323348/job/38958243990"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhefoA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323325/job/38958243744"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhepGw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922324002/job/38958246171"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEheiMA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323325/job/38958244400"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiSphQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922323348/job/38959098245"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhgFTQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38958269773"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEhgVIA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23020&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(Finset): define `toLeft`/`toRight` using `map`",
        "updatedAt": "2025-03-18T11:45:53Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23020",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4464c15a506d71a3bedc6eebd25687f06f8111ec"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6uaUaPzwAAAAPqIty-",
              "createdAt": "2025-03-17T19:20:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6iwY1a",
              "createdAt": "2025-03-17T19:20:38Z",
              "body": "### PR summary [4a56e4cfbb](https://github.com/leanprover-community/mathlib4/pull/23020/commits/4a56e4cfbb37e869705a7278339f51b6998a9ae3)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.Finset.Sum | 466 | 426 | -40 (-8.58%) |\n| Mathlib.Data.Fintype.Sum | 492 | 453 | -39 (-7.93%) |\n| Mathlib.Logic.Equiv.Defs | 122 | 123 | +1 (+0.82%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.Finset.Sum`|-40|\n| `Mathlib.Data.Finite.Sum` `Mathlib.Data.Fintype.Sum`|-39|\n|<details><summary>76 files</summary> `Mathlib.Algebra.AddTorsor.Defs` `Mathlib.Algebra.Free` `Mathlib.Algebra.Group.Action.Defs` `Mathlib.Algebra.Group.Action.Faithful` `Mathlib.Algebra.Group.Action.Hom` `Mathlib.Algebra.Group.Action.Opposite` `Mathlib.Algebra.Group.Action.Option` `Mathlib.Algebra.Group.Action.Pretransitive` `Mathlib.Algebra.Group.Action.Sigma` `Mathlib.Algebra.Group.Action.Sum` `Mathlib.Algebra.Group.Action.TypeTags` `Mathlib.Algebra.Group.Action.Units` `Mathlib.Algebra.Group.Equiv.Defs` `Mathlib.Algebra.Group.Equiv.TypeTags` `Mathlib.Algebra.Group.Hom.End` `Mathlib.Algebra.Group.Int.TypeTags` `Mathlib.Algebra.Group.Invertible.Basic` `Mathlib.Algebra.Group.Nat.Hom` `Mathlib.Algebra.Group.Nat.TypeTags` `Mathlib.Algebra.Group.Opposite` `Mathlib.Algebra.Group.Pi.Units` `Mathlib.Algebra.Group.TypeTags.Basic` `Mathlib.Algebra.Group.TypeTags.Hom` `Mathlib.Algebra.Group.ULift` `Mathlib.Algebra.Group.Units.Opposite` `Mathlib.Algebra.GroupWithZero.Action.Defs` `Mathlib.Algebra.GroupWithZero.Action.End` `Mathlib.Algebra.GroupWithZero.Action.Faithful` `Mathlib.Algebra.GroupWithZero.Action.Opposite` `Mathlib.Algebra.GroupWithZero.Action.Units` `Mathlib.Algebra.GroupWithZero.Hom` `Mathlib.Algebra.GroupWithZero.Invertible` `Mathlib.Algebra.GroupWithZero.Opposite` `Mathlib.Algebra.GroupWithZero.ULift` `Mathlib.Algebra.GroupWithZero.Units.Lemmas` `Mathlib.Algebra.Module.Defs` `Mathlib.Algebra.Module.MinimalAxioms` `Mathlib.Algebra.Module.RingHom` `Mathlib.Algebra.NoZeroSMulDivisors.Defs` `Mathlib.Algebra.NoZeroSMulDivisors.Prod` `Mathlib.Algebra.Opposites` `Mathlib.Algebra.Ring.Action.Rat` `Mathlib.Algebra.Ring.Basic` `Mathlib.Algebra.Ring.Commute` `Mathlib.Algebra.Ring.Hom.Defs` `Mathlib.Algebra.Ring.InjSurj` `Mathlib.Algebra.Ring.Int.Units` `Mathlib.Algebra.Ring.Invertible` `Mathlib.Algebra.Ring.Units` `Mathlib.Combinatorics.Quiver.Basic` `Mathlib.Combinatorics.Quiver.Cast` `Mathlib.Combinatorics.Quiver.ConnectedComponent` `Mathlib.Combinatorics.Quiver.Path` `Mathlib.Combinatorics.Quiver.Prefunctor` `Mathlib.Combinatorics.Quiver.Push` `Mathlib.Combinatorics.Quiver.SingleObj` `Mathlib.Combinatorics.Quiver.Subquiver` `Mathlib.Combinatorics.Quiver.Symmetric` `Mathlib.Control.EquivFunctor` `Mathlib.Control.Monad.Basic` `Mathlib.Control.Monad.Cont` `Mathlib.Control.Monad.Writer` `Mathlib.Control.Traversable.Equiv` `Mathlib.Data.Erased` `Mathlib.Data.Finite.Defs` `Mathlib.Data.Nat.Cast.Commute` `Mathlib.Data.Opposite` `Mathlib.GroupTheory.GroupAction.Ring` `Mathlib.LinearAlgebra.AffineSpace.Defs` `Mathlib.Logic.Equiv.Defs` `Mathlib.Logic.Small.Defs` `Mathlib.Logic.UnivLE` `Mathlib.Tactic.NormNum.Core` `Mathlib.Tactic.NormNum.Result` `Mathlib.Tactic.ProdAssoc` `Mathlib.Tactic.ProxyType`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ left_eq_empty`\n`+ left_eq_univ`\n`+ right_eq_empty`\n`+ right_eq_univ`\n`+ sumIsLeft`\n`+ sumIsRight`\n`+ toLeft_univ`\n`+ toRight_univ`\n`+ univ_disjSum_univ`\n`- Finset.univ_disjSum_univ`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6gcMSP",
              "createdAt": "2025-03-17T19:20:48Z",
              "body": "@fpvandoorn, what's your preferred way for me to fix the `simps` error in `Logic.Equiv.Set`?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6CR6iA",
              "createdAt": "2025-03-17T19:21:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6GqKB0",
                "title": "feat(Data/Finset/Card): of cardinality between",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20433"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6gcsoQ",
              "createdAt": "2025-03-17T20:16:09Z",
              "body": "The finset/fintype changes look great to me",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i2Glb",
              "createdAt": "2025-03-18T08:26:25Z",
              "body": "> @fpvandoorn, what's your preferred way for me to fix the `simps` error in `Logic.Equiv.Set`?\r\n\r\nBy making sure that `Logic.Equiv.Defs` imports a file containing `initialize_simps_projections Subtype (val → coe)` (currently `Data.Subtype`).\r\nAt least, I think that is the issue.\r\nIf that is the issue, please open an issue that `simps` should raise a warning when two conflicting configurations are found in different imports.\r\n",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i2I-3",
              "createdAt": "2025-03-18T08:31:03Z",
              "body": "#23041 might also help",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i2Wag",
              "createdAt": "2025-03-18T08:49:51Z",
              "body": "Or, going even further, we can disallow `@[simps]` at all, unless `initialize_simps_projections` has been called explicitly.\r\n\r\nWhen I wrote `@[simps]`, I was under the impression that being more permissive is better: if the user wants to do X, it should try to do X as best as it can. However, I realize that in the current Mathlib with its many refactors, this is not desired: refactors often unintentionally change things, and `simps` should just complain whenever something changes.\r\n\r\nPlease open issues (or make fixes to `simps`) with how you want it to behave. \r\nIn particular, the suggestion at the start of this message is easy: currently `getRawProjections` either retrieves projection information, or generates it. Splitting that up into two separate functions would do the trick.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6CdEAP",
              "createdAt": "2025-03-18T08:50:20Z",
              "source": {
                "id": "I_kwDOFcwZ1c6uf6mx",
                "title": "simps: warning if attribute generates configuration in other file",
                "url": "https://github.com/leanprover-community/mathlib4/issues/23041"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i5L7C",
              "createdAt": "2025-03-18T11:40:08Z",
              "body": "> By making sure that `Logic.Equiv.Defs` imports a file containing `initialize_simps_projections Subtype (val → coe)` (currently `Data.Subtype`).\r\n\r\nIndeed that's the case.\r\n\r\n> If that is the issue, please open an issue that `simps` should raise a warning when two conflicting configurations are found in different imports.\r\n\r\nI see that you have opened #23041 for that, so I will refrain from doing so.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4a56e4cfbb37e869705a7278339f51b6998a9ae3"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i5Pal",
              "createdAt": "2025-03-18T11:45:51Z",
              "body": "It's not quite the same, but I added it to that issue.\r\n\r\nDo you think this would be good?\r\n\r\n> Or, going even further, we can disallow `@[simps]` at all, unless `initialize_simps_projections` has been called explicitly.",
              "author": {
                "login": "fpvandoorn"
              }
            }
          ]
        }
      }
    }
  }
}
