{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 153,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Gsofv",
              "body": "### PR summary [acaf9f3e18](https://github.com/leanprover-community/mathlib4/pull/15355/commits/acaf9f3e182ed14548325917dd6e173e7365cf00)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-07-31T07:23:11Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G68u4",
              "body": "Between 2024-07-01 and 2024-07-31 there were\r\n* 920 commits to `master` and\r\n* 919 closed PRs\r\n\r\n1: t-algebra t-dynamics\r\nPR #14891 Yury G. Kudryashov: feat(GroupAction/IterateAct): new file\r\nPR #9726 Yury G. Kudryashov: feat: define `AddConstEquiv`\r\n\r\n2: t-algebra t-order\r\nPR #11979 Scott Carnahan: feat (Algebra/Order/AddTorsor) : OrderedVAdd, OrderedCancelVAdd\r\nPR #13148 Ya√´l Dillies: chore: Move order theory and algebra out of `Data.Fin.Tuple.Basic`\r\nPR #13683 Ya√´l Dillies: feat: Antidiagonal as a `Finset (Œπ ‚Üí Œº)`\r\nPR #14292 Eric Wieser: feat: `BilinForm.toQuadraticForm` is surjective in free modules\r\nPR #14479 Scott Carnahan: feat (Algebra/Order/AddTorsor) : Antidiagonals for SMul and VAdd, with finiteness properties\r\nPR #14732 Scott Carnahan: refactor (Algebra/Order/AddTorsor) : Add multiplicative versions of everything, use to_additive\r\nPR #14807 Scott Carnahan: chore: (RingTheory/HahnSeries) : Move valuation material to new file\r\nPR #15327 Ya√´l Dillies: chore: Generalise `Pi.exists_forall_pos_add_lt` to monoids\r\nPR #9904 FR: chore(Algebra/Order/GroupWithZero/Unbundled): resolving name inconsistencies\r\n\r\n3: t-algebra\r\nPR #10846 Scott Carnahan: feat (RingTheory/HahnSeries/Multiplication): module structure on HahnModule\r\nPR #11974 Amelia Livingston: feat: category equivalence between coalgebras and comonoid objects\r\nPR #12010 Amelia Livingston: feat: the category of Hopf algebras\r\nPR #12434 Jz Pan: feat(LinearAlgebra/LinearDisjoint): definition and properties of linearly disjoint of submodules\r\nPR #12650 Christian Merten: feat(RingTheory/AdicCompletion): exactness properties of adic completions\r\nPR #12780 Xavier Roblot: feat: add a version of `Ideal.associatesEquivIsPrincipal` for generators that are non-zero-divisors\r\nPR #12938 Christopher Hoskin: feat(Algebra/Star/NonUnitalSubsemiring): Add NonUnitalStarSubsemiring\r\nPR #12996 Scott Carnahan: feat (RingTheory/HahnSeries) : def leadingCoeff, orderTop lemmas\r\nPR #12998 Scott Carnahan: feat (Algebra/Vertex/HVertexOperator) : Composite heterogeneous vertex operators\r\nPR #13023 Bolton Bailey: feat: add lemma `List.prod_map_ite_eq`\r\nPR #13034 Ya√´l Dillies: chore: Merge `Algebra.Group.Centralizer` into `Algebra.Group.Center`\r\nPR #13047 Antoine Chambert-Loir: feat(GroupTheory): covering a group by cosets (Lemma of B. H. Neumann)\r\nPR #13064 Filippo A. E. Nuccio: feat: add properties of the X-adic valuation on `PowerSeries K`\r\nPR #13071 Scott Carnahan: feat (RingTheory/Binomial) : Standard lemmas for Ring.choose\r\nPR #13089 Christopher Hoskin: refactor(Algebra/Star/Order): Use NonUnitalStarRingHom in Algebra.Star.Order\r\nPR #13161 Ya√´l Dillies: chore: Move `MulAction` on `Opposite`, `Pi`, `Prod`, `Sum`, `Sigma`, `Units`\r\nPR #13162 Andrew Yang: feat(RingTheory/EssentialFiniteness): Define essentially of finite type algebras\r\nPR #13210 Pol'tta / Miyahara K≈ç: style(Mathlib/Algebra/ContinuedFractions/*): shorten names of declarations related to continued fractions\r\nPR #13235 Pol'tta / Miyahara K≈ç: refactor(Mathlib/Data/DFinsupp/Basic): remove `Decidable` instances from some `DFinsupp` functions\r\nPR #13294 Eric Wieser: feat: add pointwise actions on ideals\r\nPR #13421 Scott Carnahan: feat (RingTheory/HahnSeries) SMulZeroClass instances\r\nPR #13422 Scott Carnahan: fix (Algebra/Vertex/HVertexOperator): rm defeq abuse in coeff function\r\nPR #13430 Scott Carnahan: feat (RingTheory/Binomial) : Multichoose at negative arguments\r\nPR #13533 Jiang Jiedong: feat (RingTheory/Valuation) : add lemmas about valuations and notations for valued\r\nPR #13555 Pol'tta / Miyahara K≈ç: refactor(Mathlib/Algebra/ContinuedFractions/*): generalize determinant formula for continued fraction computation to simple continued fraction\r\nPR #13575 Thomas Browning: feat(FieldTheory/PolynomialGaloisGroup): Add `AlgEquivClass` instance for `Polynomial.gal`\r\nPR #13583 Joseph Myers: feat(GroupTheory/GroupAction/Quotient): subgroup action orbit lemmas and equivs\r\nPR #13585 Herman Chau: feat(RingTheory.Binomial): Add BinomialRing instance for NNRat modules.\r\nPR #13630 Thomas Browning: refactor(GroupTheory/Index): Replace `Fintype.card` with `Nat.card`\r\nPR #13637 Thomas Browning: refactor(LinearAlgebra,RingTheory): Replace `Fintype.card` with `Nat.card`\r\nPR #13651 Yury G. Kudryashov: feat(ENat/Basic): add more `simp`/`gcongr` lemmas\r\nPR #13652 Yury G. Kudryashov: chore(Polynomial/TrailingDegree): use `ENat.toNat`, golf\r\nPR #13902 Jujian Zhang: feat(RingTheory/TwosidedIdeal/Basic): define two-sided-ideal\r\nPR #13943 Andrew Yang: chore(GroupTheory/MonoidLocalization): Change `Localization` to an abbrev of `OreLocalization`.\r\nPR #14086 Christian Merten: feat(RingTheory/Localization): localization of algebra maps and commutation with kernels\r\nPR #14211 Jireh Loreaux: chore: namespace some `IsSelfAdjoint` lemmas\r\nPR #14215 Eric Wieser: feat: quadratic forms applied to sums decompose into quadratic and bilinear parts\r\nPR #14225 Mar√≠a In√©s de Frutos-Fern√°ndez: feat(RingTheory.MvPolynomial.WeightedHomogeneous): add graded algebra structure\r\nPR #14232 Jiang Jiedong: feat(FieldTheory/Separable): add elementwise `IsSeparable` and rename the old to `Algebra.IsSeparable`\r\nPR #14234 Jujian Zhang: feat(RingTheory/Flat/Basic): a module is flat iff tensoring is left exact (non-categorical formulation)\r\nPR #14243 Seewoo Lee: feat: add polynomial Wronskian\r\nPR #14271 Christian Merten: feat(RingTheory): presentations of algebras\r\nPR #14280 James Sundstrom: chore(Algebra/Polynomial/Div): rename `mul_div_mod_by_monic_cancel_left` to `mul_divByMonic_cancel_left`\r\nPR #14281 Seewoo Lee: feat: add `LinearMap.IsAlt.eq_of_add_add_eq_zero`\r\nPR #14285 Eric Wieser: feat: `QuadraticForm.baseChange` is unique when it exists\r\nPR #14290 Kevin Buzzard: doc: RingTheory/Generators clarification\r\nPR #14325 Christian Merten: feat(RingTheory/Smooth): define standard smooth algebras\r\nPR #14358 Christian Merten: feat(RingTheory/AdicCompletion): comparison with tensor product\r\nPR #14366 Christian Merten: feat(RingTheory/AdicCompletion): adic completion of Noetherian ring is flat\r\nPR #14372 Andrew Yang: feat(RingTheory/Idempotents): Lifting complete orthogonal idempotents along nil extensions\r\nPR #14373 Andrew Yang: feat(Algebra/Algebra/Basic) Extend scalars of linear maps along surjective ring homs.\r\nPR #14374 Andrew Yang: feat(RingTheory/TensorProduct/Basic): Lifting linear maps to base change\r\nPR #14375 Andrew Yang: feat(RingTheory/LocalRing/Module): Finitely presented flat modules over local rings are free.\r\nPR #14413 Jujian Zhang: feat(Algebra/Category/Ring/Colimits): category of (possibly non-commutative ring) has colimits\r\nPR #14418 Filippo A. E. Nuccio: feat(RingTheory/LaurentSeries): add properties of the X-adic valuation on Laurent series\r\nPR #14422 Riccardo Brasca: feat: add `PowerBasis.exists_smodEq`\r\nPR #14452 Ralf Stephan: feat(PowerSeries): coefficients of series products\r\nPR #14453 Jujian Zhang: feat(RingTheory/TwoSidedIdeal/Basic): two-sided-ideal as a bimodule\r\nPR #14454 Antoine Chambert-Loir: feat (Mathlib/RingTheory/MvPowerSeries/NoZeroDivisors) : power series with constant coeff unit is a unit\r\nPR #14456 Jujian Zhang: feat(RingTheory/TwoSidedIdeal): add lattice structure to two-sided-ideals\r\nPR #14473 Scott Carnahan: refactor (RingTheory/HahnSeries/Summable) : Replace AddVal with orderTop\r\nPR #14478 Andrew Yang: feat(RingTheory/Unramified): Unramified + free => finite\r\nPR #14481 Ralf Stephan: doc (MvPolynomial): add blurb about `aeval`\r\nPR #14512 Whysoserioushah: feat: matrices of matrices\r\nPR #14534 Christian Merten: chore(RingTheory/AdicCompletion): manual instances\r\nPR #14551 Andrew Yang: feat(RingTheory/Localization): Localization at an idempotent\r\nPR #14601 Daniel Weber: chore: make `Algebra.cast` reducible\r\nPR #14611 Jz Pan: feat(LinearAlgebra/TensorProduct/Subalgebra): some linear maps induced by multiplication for subalgebras\r\nPR #14622 Pim Otte: feat(Algebra/BigOperators/Group/Finset): Lemma for product being a square\r\nPR #14637 Daniel Weber: feat: make nonZeroDivisors.coe_ne_zero simp\r\nPR #14639 Daniel Weber: feat(Algebra/Algebra/Defs): add missing coe lemmas for algebraMap\r\nPR #14640 Daniel Weber: feat(FieldTheory/IntermediateField): add `restrict`\r\nPR #14641 Daniel Weber: feat(RingTheory/Valuation/Basic): add lemmas\r\nPR #14643 Daniel Weber: feat(RingTheory/Localization/NumDem): add lemmas\r\nPR #14659 David Kurniadi Angdinata: feat(FieldTheory/*): prove coprimality of polynomials in terms of roots\r\nPR #14667 Daniel Weber: chore: move non `@[to_additive]` parts of `Algebra.Order.Monoid` and `Algebra.Order.Group` to a different file\r\nPR #14673 Ludwig Monnerjahn: feat(GroupTheory/GroupAction): Add theorem for `smul` of `toConjAct`\r\nPR #14674 blizzard_inc: feat(Algebra/Group/SemiconjBy): relating SemiconjBy to orderOf\r\nPR #14684 David Kurniadi Angdinata: feat(GroupTheory/Coset): add equivalences of fibers of monoid homomorphisms\r\nPR #14701 Daniel Weber: feat(Algebra/Polynomial/Basic): transfer some `Finsupp` smul lemmas to polynomials\r\nPR #14705 Ya√´l Dillies: chore: Move group lemmas out of `GroupTheory.GroupAction.Group`\r\nPR #14706 Ya√´l Dillies: move: Rename `GroupTheory.GroupAction.Defs`\r\nPR #14710 Daniel Weber: feat(RingTheory/Algebraic): define `Algebra.Transcendental` and some lemmas\r\nPR #14719 Eric Wieser: feat: Generalize quadratic isometries to quadratic maps\r\nPR #14730 Daniel Weber: feat(RingTheory/Derivation/Basic): add `coe_restrictScalars` lemma for derivations\r\nPR #14735 Jz Pan: feat(Algebra/Polynomial/AlgebraMap): generalize one of the ring in `map_aeval_eq_aeval_map` to `Semiring`\r\nPR #14751 Christian Merten: feat(RingTheory/Localization): more API and kernels of localized maps\r\nPR #14771 Yury G. Kudryashov: chore(UniqueFactorizationMonoid): make `ufm_of_decomposition_of_wfDvdMonoid` an instance\r\nPR #14777 Yury G. Kudryashov: chore(Matrix/Transvection): add `length`/`get` lemmas\r\nPR #14789 Thomas Browning: refactor(GroupTheory/PGroup,Sylow): Replace Fintype.card with Nat.card\r\nPR #14814 Quang Dao: feat(Polynomial/AlgebraMap): add `mapAlgHom`\r\nPR #14826 Riccardo Brasca: chore: Split RingTheory.IntegralClosure\r\nPR #14829 Riccardo Brasca: chore: Split and move RingTheory.Ideal.LocalRing\r\nPR #14831 judithludwig: feat(Algebra/Module/LinearMap/Defs): add `restrictScalars` as a `LinearMap`\r\nPR #14851 Ya√´l Dillies: chore(Algebra/GroupWithZero/Opposite): Move instances from `Algebra.Ring.Opposite`\r\nPR #14856 Thomas Browning: refactor(GroupTheory/Complement,SchurZassenhaus): Replace `Fintype.card` with `Nat.card`\r\nPR #14857 Daniel Weber: feat(RingTheory/Derivation/Basic): add lemmas about the derivation of a fraction\r\nPR #14865 Antoine Chambert-Loir: feat(MvPowerSeries.Basic): compute coefficients of powers of MvPowerSeries\r\nPR #14875 Antoine Chambert-Loir: feat (Data.Finsupp.Weight) : general API for weights and size of finsupp\r\nPR #14895 Ralf Stephan: feat(RingTheory/Powerseries): generalize `coeff_one_pow`\r\nPR #14922 Florent Schaffhauser: feat (Algebra/Module/LinearMap/Defs): the identity map of the zero module is the zero map\r\nPR #14926 Jireh Loreaux: feat: generalize `spectrum.subset_subalgebra` to subalgebra classes\r\nPR #14941 Florent Schaffhauser: feat (Algebra/Ring): add `isSemireal` class for commutative rings\r\nPR #14945 Eric Wieser: feat: add `SMul` instances to `Basis`\r\nPR #14955 Michael Stoll: chore(GroupTheory/OrderOfElement): remove ' from `pow_ne_one_of_lt_orderOf'`\r\nPR #14965 Daniel Weber: feat(RingTheory/Derivation/Basic): add `LinearEquiv.compDer` equivalents for `LinearMap.compDer` lemmas\r\nPR #14966 Daniel Weber: feat(Algebra/Polynomial/Module/Basic): add lemmas about `equivPolynomial` and `equivPolynomialSelf`\r\nPR #14997 Ya√´l Dillies: feat: `OfNat.ofNat n ‚Ä¢ x = n ‚Ä¢ x` and `Nat.cast n ‚Ä¢ x = n ‚Ä¢ x`\r\nPR #14998 Ya√´l Dillies: feat: The multinomial theorem in terms of `piAntidiag`\r\nPR #15023 judithludwig: Feat(RingTheory/Flat): add localization of flat module is flat\r\nPR #15036 Eric Wieser: chore: rename `Basis.smul` to `Basis.smulTower`\r\nPR #15039 Eric Wieser: refactor(RingTheory/Trace/Basic): remove `Field` assumptions\r\nPR #15073 Christian Merten: feat(RingTheory): being finitely-presented is local\r\nPR #15076 Ya√´l Dillies: feat(ZMod): Simple lemmas\r\nPR #15134 Ya√´l Dillies: doc(BigOperators): Expand `Finset.sum` docstring\r\nPR #15148 Jz Pan: feat(FieldTheory/IntermediateField): add `Subfield.extendScalars`\r\nPR #15151 Pietro Monticone: chore(Algebra/Module/Equiv): clean and golf\r\nPR #15185 Jireh Loreaux: feat: `ZeroLEOneClass` for `StarOrderedRing`\r\nPR #15186 Jireh Loreaux: feat: generalize `Int.cast_nonneg` and related lemmas\r\nPR #15193 Jz Pan: feat: add `comap_map` for sub(semi)ring, subalgebra, subfield and intermediate fields\r\nPR #15235 Yury G. Kudryashov: chore(Matrix/RowCol): `Inhabited` -> `Nonempty`\r\nPR #15236 Yury G. Kudryashov: chore(RingTheory): fix `DecidableEq` and `Fintype` vs `Finite`\r\nPR #15287 Yury G. Kudryashov: chore(DirectSum): drop `DecidableEq` assumption\r\nPR #6595 Christopher Hoskin: feat(algebra/hom/centroid): Centre of the Centroid of a *-ring is a *-ring\r\nPR #7569 Christopher Hoskin: refactor(LinearAlgebra/QuadraticForm/Basic) : Generalise `QuadraticForm` to `QuadraticMap`\r\nPR #9334 Christopher Hoskin: refactor(LinearAlgebra/Matrix/SesquilinearForm): Sesquilinear Maps and Matrices\r\n\r\n4: t-algebraic-geometry t-algebra\r\nPR #14377 Andrew Yang: feat(RingTheory): Surjective on stalks ring homomorphisms.\r\nPR #14507 Andrew Yang: feat(RingTheory/Support): Define support of a module\r\nPR #14550 Andrew Yang: feat(AlgebraicGeometry/PrimeSpectrum): Prime spectrum of products of rings.\r\nPR #14859 Andrew Yang: feat(RingTheory/Kaehler): Cotangent complex associated to an embedding into affine space.\r\nPR #15108 Andrew Yang: chore: move `PartialOrder` on `PrimeSpectrum` to `RingTheory`.\r\n\r\n5: t-algebraic-geometry\r\nPR #13885 FMLJohn: Feat(AlgebraicGeometry/FromSpecStalk): Given a scheme `X` and a point `x : X`, the canonical scheme morphism from `Spec(O_x)` to `X`.\r\nPR #13972 Genora51: feat(AlgebraicGeometry): add locally Noetherian and Noetherian schemes\r\nPR #13996 Andrew Yang: feat(AlgebraicGeometry): Define affine morphisms\r\nPR #14231 weihong-xu: feat(AlgebraicGeometry/Modules/Tilde): construct the tilde sheaf associated to a module\r\nPR #14254 Jujian Zhang: feat(Algebra/Category/ModuleCat/{Presheaf, Sheaf}): forgetful functor from sheaves of modules over sheaf of ring R to sheaves of R(X)-module when X is initial\r\nPR #14297 Christian Merten: chore(AlgebraicGeometry/Morphisms): split basic file\r\nPR #14302 Christian Merten: feat(AlgebraicGeometry): residue field of a point and evaluation\r\nPR #14328 Christian Merten: feat(AlgebraicGeometry/Morphisms): stalkwise constructor and more API\r\nPR #14337 Christian Merten: feat(AlgebraicGeometry): zero locus of sections and characterisation of nilpotent elements\r\nPR #14392 Jo√´l Riou: chore: fix docstring\r\nPR #14429 Andrew Yang: feat(AlgebraicGeometry/Limits): Coproducts of Schemes\r\nPR #14430 Andrew Yang: refactor(AlgebraicGeometry): Rework `Morphisms/Basic` to phase away from TFAEs\r\nPR #14549 Andrew Yang: feat(Geometry/RingedSpace): Initial object in `LocallyRingedSpace`\r\nPR #14690 Jo√´l Riou: feat(AlgebraicGeometry): the 1-hypercover attached to a GlueData\r\nPR #14711 Andrew Yang: feat(AlgebraicGeometry/Pullbacks): Fibred product of affine schemes.\r\nPR #14748 Andrew Yang: feat(AlgebraicGeometry): Define preimmersions.\r\nPR #14763 Christian Merten: feat(AlgebraicGeometry): closed immersions are local at the target\r\nPR #14868 Andrew Yang: refactor(AlgebraicGeometry): Promote `invApp` to an iso.\r\nPR #14882 Andrew Yang: feat(AlgebraicGeometry): Being an isomorphism is local at the target.\r\nPR #14946 Andrew Yang: feat(AlgebraicGeometry): Morphism properties local at the source.\r\nPR #14992 Andrew Yang: refactor(AlgebraicGeometry): Introduce `HasRingHomProperty`.\r\nPR #15001 Andrew Yang: refactor(AlgebraicGeometry): Introduce `Scheme.Opens`.\r\nPR #15070 Christian Merten: refactor(AlgebraicGeometry): stalk maps\r\nPR #15079 Andrew Yang: chore(AlgebraicGeometry): Rename `openCoverOfSuprEqTop` to `openCoverOfISupEqTop`\r\nPR #15080 Andrew Yang: refactor(AlgebraicGeometry): Restate `ŒìRestrictAlgebra` in terms of `Œì(U, ‚ä§)`.\r\n\r\n6: t-analysis t-algebra\r\nPR #14423 Yury G. Kudryashov: feat(ENNReal/Inv): add lemmas about `a * a‚Åª¬π`\r\nPR #15207 Ya√´l Dillies: chore(Polynomial/UnitTrinomial): Don't import the fundamental theorem of algebra\r\n\r\n7: t-analysis t-euclidean-geometry\r\nPR #14666 Ya√´l Dillies: chore: Move `smooth_barycentric_coord`\r\n\r\n8: t-analysis t-measure-probability\r\nPR #11185 grunweg: feat: continuity of primitives for parametric integrals\r\nPR #13353 David Loeffler: feat(Analysis/Fourier): discrete Fourier transform on `ZMod N`\r\nPR #15177 Ya√´l Dillies: chore(MeasureTheory): Rename `snorm` to `eLpNorm`\r\n\r\n9: t-analysis t-order\r\nPR #14459 Yury G. Kudryashov: feat(ENNReal/Real): +1 `@[gcongr]`, +2 lemmas\r\n\r\n10: t-analysis\r\nPR #12804 Chris Birkbeck: feat: define logarithmic derivatives\r\nPR #13424 Fr√©d√©ric Dupuis: feat: add `NormedSpace.Core` structure to easily define normed vector spaces\r\nPR #13676 Fr√©d√©ric Dupuis: feat(CstarRing): various lemmas related to the spectral order and the CFC\r\nPR #13952 Ya√´l Dillies: feat: Product of convex hulls\r\nPR #13968 James Sundstrom: feat(Analysis/BoxIntegral/Basic): a bounded, a.e. continuous function is integrable on a box\r\nPR #13971 Geoffrey Irving: feat: Define `AnalyticWithinAt` and `AnalyticWithinOn`\r\nPR #14065 Fr√©d√©ric Dupuis: feat(ContinuousFunctionalCalculus): add several lemmas involving the CFC and `algebraMap`\r\nPR #14100 Jireh Loreaux: refactor: enforce the predicate on the `ContinuousFunctionalCalculus` is nontrivial\r\nPR #14107 Lorenzo Luccioli: feat(SpecialFunctions/Log): Add extended exp\r\nPR #14177 Fr√©d√©ric Dupuis: feat: define the weak operator topology\r\nPR #14432 Fr√©d√©ric Dupuis: feat(ContinuousFunctionalCalculus): When `cfc` is applied to a function that maps zero to zero, it is equal to `cfc‚Çô`\r\nPR #14434 Yury G. Kudryashov: feat(LocalExtr/Basic): add lemmas about `_ ‚àà posTangentConeAt _ _`\r\nPR #14435 Yury G. Kudryashov: feat(LocalExtr/LineDeriv): new file\r\nPR #14448 Fr√©d√©ric Dupuis: feat(ContinuousFunctionalCalculus): Define the real log based on the CFC\r\nPR #14450 Yury G. Kudryashov: feat(LineDeriv/QuadraticMap): new file\r\nPR #14458 Christopher Hoskin: feat(Analysis/LocallyConvex/Polar): Calculate the polar of a set closed under scalar multiplication\r\nPR #14502 adomasbaliuka: feat: Lemma for `fderiv` of scalar function\r\nPR #14545 Jireh Loreaux: feat: normed structure instances for SetLike subobjects\r\nPR #14570 igorkhavkine: feat(ENNReal): `ENNReal.rpow_inv_lt_iff`\r\nPR #14593 adomasbaliuka: feat: Lemmas `DifferentiableAt.add_iff_left`, `DifferentiableAt.add_iff_right`\r\nPR #14648 Anne Baanen: chore(Data.Complex): add `@[simp]` to `Complex.conj_ofReal`\r\nPR #14714 D-Thomine: feat(SpecialFunctions.Log.ENNRealLog): remove a coercion in log_pow\r\nPR #14737 Fr√©d√©ric Dupuis: feat(CstarRing): weaken the definition of `CstarRing` from an equality to an inequality\r\nPR #14827 Daniel Weber: feat(Analysis/Analytic/Basic): add missing `AnalyticOn.neg` lemma\r\nPR #14918 D-Thomine: feat(Analysis.SpecificLimits.Basic): Add limit of C/n in EReal\r\nPR #15022 Ya√´l Dillies: feat(Analysis/Complex): If `a = ‚àë i ‚àà s, f i` and `b = ‚àë i ‚àà s, (‚Äñf i‚Äñ : ‚ÑÇ)`, then `a ‚â§ b`\r\nPR #15031 grunweg: chore(BohrMollerup): move convexity lemmas to Analysis.Convex.Function\r\nPR #15227 Yury G. Kudryashov: chore(Convex/Combination): use `Finite`, not `Fintype`\r\nPR #15230 Yury G. Kudryashov: chore(SobolevInequality): drop a `DecidableEq` assumption\r\nPR #15232 Yury G. Kudryashov: chore(InnerProductSpace/PiL2): `Fintype m` -> `Finite m`\r\nPR #15234 Yury G. Kudryashov: chore(Convex/Radon): drop `DecidableEq` assumptions\r\nPR #15289 Yury G. Kudryashov: chore(LocallyConvex/Bounded): rename `variable`s\r\nPR #15351 Fr√©d√©ric Dupuis: fix(ContinuousFunctionalCalculus): generalize a section from `Field R` to `Semifield R`\r\nPR #7236 Vasily Nesterov: feat(Analysis/Convex): Helly's convexity theorem\r\n\r\n11: t-category-theory t-algebra\r\nPR #14482 Jujian Zhang: feat(RingTheory/Flat): a module is flat iff tensoring preserves exact sequences\r\nPR #14520 Jo√´l Riou: feat: more API for Function.Exact\r\nPR #15058 Jo√´l Riou: feat(Algebra): the free abelian group functor preserves monomorphisms\r\nPR #15297 Andrew Yang: feat(Algebra/Category/Ring): Add dsimp lemmas for `CommRingCat`.\r\n\r\n12: t-category-theory t-algebraic-geometry\r\nPR #13464 Jo√´l Riou: feat: quasi-coherent sheaves\r\nPR #14170 Jack McKoen: feat(CategoryTheory): Split equalizers\r\nPR #14171 Jack McKoen: feat(CategoryTheory): Special equalizers associated to a comonad\r\nPR #14236 Jack McKoen: feat(CategoryTheory): (co)limits in the category of coalgebras\r\n\r\n13: t-category-theory t-condensed\r\nPR #13478 Dagur Asgeirsson: feat(Condensed): characterise epimorphisms in condensed sets and modules\r\nPR #13504 Dagur Asgeirsson: feat(Condensed): the functor from `TopCat` to `LightCondSet`\r\n\r\n14: t-category-theory t-topology t-condensed\r\nPR #14455 Dagur Asgeirsson: feat:(Condensed): the functor from `TopCat` to `CondensedSet` is a faithful right adjoint.\r\nPR #14506 Dagur Asgeirsson: feat(LightCondensed): the functor from `TopCat` to `LightCondSet` is a faithful right adjoint\r\nPR #14514 Dagur Asgeirsson: feat(Condensed): the fully faithful embedding of compactly generated topological spaces in condensed sets\r\nPR #14618 Dagur Asgeirsson: feat(LightCondensed): the fully faithful embedding of sequential spaces in light condensed sets\r\n\r\n15: t-category-theory t-topology\r\nPR #13333 Dagur Asgeirsson: feat(LightProfinite): light profinite sets as sequential limits with surjective transition maps\r\nPR #13358 Dagur Asgeirsson: feat(LightProfinite): define `‚Ñï‚à™{‚àû}` as a light profinite set\r\nPR #13507 Dagur Asgeirsson: feat(CategoryTheory): a sequential limit of surjections is surjective\r\nPR #13905 Dagur Asgeirsson: refactor(Topology/Category): add CompHausLike.Limits\r\nPR #13907 Dagur Asgeirsson: refactor(Topology/Category): add CompHausLike.EffectiveEpi\r\nPR #13908 Dagur Asgeirsson: refactor(Topology/Category): refactor CompHaus.Basic\r\nPR #13909 Dagur Asgeirsson: refactor(Topology/Category): refactor Profinite.Basic\r\nPR #13911 Dagur Asgeirsson: refactor(Topology/Category): refactor Stonean.Basic\r\nPR #13912 Dagur Asgeirsson: refactor(Topology/Category): refactor LightProfinite.Basic\r\nPR #14508 Dagur Asgeirsson: feat(Topology): define compactly generated topological spaces\r\nPR #15201 Etienne: feat: Rename `CompactlyGeneratedSpace` to `UCompactlyGeneratedSpace`\r\nPR #15359 Dagur Asgeirsson: refactor(Topology/Category): preparation for switching to new API for limits in CompHaus\r\nPR #15362 Dagur Asgeirsson: refactor(Topology/Category): use `CompHausLike` API for limits in `LightProfinite`\r\n\r\n16: t-category-theory\r\nPR #10425 Jo√´l Riou: feat(CategoryTheory/Functor): refactoring Lan\r\nPR #10981 Yuma Mizuno: feat(CategoryTheory/Bicategory): existence of Kan extensions\r\nPR #11703 Jo√´l Riou: feat(CategoryTheory/GradedObject): construction of the tensor product\r\nPR #12211 Jo√´l Riou: feat(CategoryTheory/SmallObject): the category of transfinite iterations of a functor\r\nPR #13012 Jo√´l Riou: feat(CategoryTheory/Sites): functors preserving 1-hypercovers are continuous\r\nPR #13312 Kim Morrison: chore(CategoryTheory/Monoidal): oplax functors and comonoids\r\nPR #13313 Kim Morrison: feat(CategoryTheory/Monoidal): convolution monoid\r\nPR #13410 Calle S√∂nne: feat(FiberedCategory/Cartesian): define strongly cartesian morphisms\r\nPR #13486 Dagur Asgeirsson: feat(CategoryTheory): add some instances for essentially small sites\r\nPR #13639 Jo√´l Riou: feat: small types of morphisms in the localized category\r\nPR #13742 Jo√´l Riou: feat: the distinguished triangle in the derived category associated to a short exact sequence of cochain complexes\r\nPR #13840 Emily Riehl: feat (Category Theory): redefine and extend mates\r\nPR #13876 Jo√´l Riou: feat: the distinguished triangle attached to a short exact sequence in an abelian category\r\nPR #13898 Dagur Asgeirsson: feat(CategoryTheory): characterise locally surjective morphisms in categories of coherent/regular/extensive sheaves\r\nPR #13926 Jo√´l Riou: feat: small types of shifted hom in the localized category\r\nPR #13947 Dagur Asgeirsson: feat(CategoryTheory/Sites): discrete sheaves\r\nPR #13963 Jo√´l Riou: feat: definition of Ext-types in abelian categories\r\nPR #14017 Dagur Asgeirsson: feat(CategoryTheory): if LR is abstractly isomorphic to the identity functor, then the unit is an isomorphism.\r\nPR #14028 Calle S√∂nne: feat(Bicategory/NaturalTransformation/Strong): define strong natural transformations\r\nPR #14084 Jo√´l Riou: feat: Functor.mapHomotopyCategory is a triangulated functor\r\nPR #14087 Jo√´l Riou: feat: commutation with shifts of functors from quotient categories\r\nPR #14098 Calle S√∂nne: refactor(Bicategory/Functor): refactor prelaxfunctors\r\nPR #14153 Jo√´l Riou: feat: Functor.mapDerivedCategory is a triangulated functor\r\nPR #14187 Jo√´l Riou: feat(CategoryTheory/Shift): more compatibilities for NatTrans.CommShift\r\nPR #14192 Jo√´l Riou: feat: more compatibilities for `Functor.mapDerivedCategory`\r\nPR #14256 Jo√´l Riou: feat: dualising results in CategoryTheory.Functor.KanExtension.Basic\r\nPR #14258 Jo√´l Riou: feat: dualising results in CategoryTheory.Functor.KanExtension.Pointwise\r\nPR #14261 Jo√´l Riou: feat: dualising results in CategoryTheory.Functor.KanExtension.Adjunction\r\nPR #14274 Mario Carneiro: feat: the Dialectica category\r\nPR #14283 Jo√´l Riou: feat: the forget functor from ModuleCat to AddCommGrp reflects all limits\r\nPR #14291 Jo√´l Riou: feat(CategoryTheory/Functor): refactoring Ran\r\nPR #14303 Calle S√∂nne: feat(Bicategory/Functor/Lax): define lax functors\r\nPR #14339 Jo√´l Riou: feat: the associator isomorphism for graded objects\r\nPR #14340 Jo√´l Riou: feat: API for multiequalizers in the category of types\r\nPR #14343 Jo√´l Riou: feat(CategoryTheory): the triangle identity for the tensor product of graded objects\r\nPR #14344 Calle S√∂nne: chore(CategoryTheory/Limits/Shapes/Pullbacks): split into multiple files and add documentation\r\nPR #14353 Jo√´l Riou: chore: make MorphismProperty.RespectsIso a typeclass\r\nPR #14387 Sina Hazratpour: promoting the Grothendieck construction into a functor\r\nPR #14406 Dagur Asgeirsson: feat(CategoryTheory): generalise uniqueness of Kan extensions\r\nPR #14436 Jo√´l Riou: feat(CategoryTheory): triangulated functors are additive\r\nPR #14447 Kevin Buzzard: doc: add reassoc docstring\r\nPR #14449 Dagur Asgeirsson: chore(CategoryTheory/Sites): saturate -> Saturate\r\nPR #14457 Jo√´l Riou: feat(CategoryTheory): the monoidal category structure on graded objects\r\nPR #14490 Dagur Asgeirsson: feat(CategoryTheory/Adjunction): left adjoint is faithful iff unit is mono, etc.\r\nPR #14496 Jo√´l Riou: feat: the abelian group structure on Ext-groups in abelian categories\r\nPR #14524 Calle S√∂nne: feat(Limits/Shapes/Pullback): Add API and golf proofs\r\nPR #14526 Calle S√∂nne: feat(Limits/Shapes/Pullback): Give pullback.fst and friends explicit parameters\r\nPR #14528 Jo√´l Riou: feat(CategoryTheory/Triangulated): the Yoneda functors are homological\r\nPR #14538 Jujian Zhang: feat(Algebra/Homology/ShortComplex/ExactFunctor): relate preserving exact sequences and preserving finite (co)limits/homology\r\nPR #14548 Andrew Yang: feat(CategoryTheory/GlueData): New constructor for glue data.\r\nPR #14569 Jo√´l Riou: refactor: removing the old homology API\r\nPR #14649 Jo√´l Riou: feat(Algebra/Homology): support of embeddings of complex shapes\r\nPR #14650 Jo√´l Riou: feat(Algebra/Homology): boundaries of embeddings of complex shapes\r\nPR #14717 Jo√´l Riou: feat(CategoryTheory/Localization): induction principles for (co)structured arrows\r\nPR #14722 Moritz Firsching: chore(CategoryTheory/DiscreteCategory): remove discrete_fun_ma_eq_id, mv ‚Ä¶\r\nPR #14734 Jo√´l Riou: feat(Algebra/Homology): the canonical truncation `truncGE`\r\nPR #14800 Jo√´l Riou: feat(CategoryTheory/Sites): definition of sheaf cohomology\r\nPR #14886 Yuma Mizuno: chore(CategoryTheory/Monad): rename `Œ∑'` to `Œ∑`\r\nPR #14890 Jo√´l Riou: feat(CategoryTheory): pushout/pullback squares are stable by isomorphisms\r\nPR #14935 Jo√´l Riou: feat(CategoryTheory/Limits): identification of the point of any limit pullback cone in Type\r\nPR #14936 Jo√´l Riou: feat(CategoryTheory): all morphisms are mono and epi when Quiver.IsThin holds\r\nPR #14951 Jo√´l Riou: feat(Algebra/Homology): relation between pullback/pushout squares and kernels/cokernels in a preadditive category\r\nPR #14959 Jo√´l Riou: feat(CategoryTheory/Sites): definition of Mayer-Vietoris squares\r\nPR #14969 Jo√´l Riou: feat(CategoryTheory): the category of commutative squares\r\nPR #14971 Jo√´l Riou: feat(CategoryTheory): commutative squares that are pushout or pullback squares\r\nPR #14985 Calle S√∂nne: feat(Pullback/CommSq): add more pasting lemmas for `IsPullback`\r\nPR #15044 Jo√´l Riou: feat(CategoryTheory): preservation of pullback/pushout squares\r\nPR #15056 Andrew Yang: refactor(CategoryTheory/Sites): Allow non-fully-faithful dense subsites.\r\nPR #15062 Andrew Yang: feat(CategoryTheory/Site): Locally fully-faithful functors into sites.\r\nPR #15063 Andrew Yang: feat(CategoryTheory/Sites): Sieves under equivalences.\r\nPR #15157 Jo√´l Riou: feat(CategoryTheory/Limits): a pullback cone is limit iff it is so after the application of coyoneda.obj\r\nPR #15194 Calle S√∂nne: feat(Bicategory/Functor): add more API for functors of bicategories\r\n\r\n17: t-combinatorics t-algebra\r\nPR #14000 Ya√´l Dillies: feat: The Erd≈ës‚ÄìGinzburg‚ÄìZiv theorem\r\nPR #14808 Scott Carnahan: feat (RingTheory/Binomial): Chu-Vandermonde identity\r\n\r\n18: t-combinatorics\r\nPR #11667 Pim Otte: feat(Combinatorics/SimpleGraph): interactions between ConnectedComponent and matchings\r\nPR #12273 Peter Nelson : feat(Order/KonigLemma): K≈ënig's infinity lemma\r\nPR #12346 Peter Nelson : feat(Combinatorics/Colex): binary expansions give the colexicographic order on `Finset Nat`\r\nPR #12960 Pim Otte: feat(Combinatorics/SimpleGraph): lemmas for IsMatching\r\nPR #13329 Ya√´l Dillies: chore(Combinatorics/Additive/PluenneckeRuzsa): Use semantic lemma names\r\nPR #13827 Ya√´l Dillies: feat: If `s ‚â§ t` in colex, then `s \\ {a} ‚â§ t \\ {min t}` in colex\r\nPR #13910 Rida Hamadani: chore(Combinatorics/SimpleGraph): Change `girth` to `egirth` and introduce `Nat`-valued `girth`\r\nPR #14212 Eric Wieser: feat: basic results about `Finset.sym2`\r\nPR #14315 Rida Hamadani: feat(Combinatorics/SimpleGraph): vertices are not reachable iff set of walks between them is empty\r\nPR #14356 grunweg: chore(Combinatorics): remove remaining use of autoImplicit\r\nPR #14409 Iv√°n Renison: feat(Combinatorics/SimpleGraph): If a graph has a Walk starting and ending in the same vertex then the chromatic number is grater than two\r\nPR #14582 Rida Hamadani: feat(Combinatorics/SimpleGraph): define `edist` and rewrite `dist`\r\nPR #14623 Pim Otte: feat({Algebra/BigOperators,Combinatorics/SimpleGraph}): Odd cardinality of odd components\r\nPR #14647 grunweg: chore: move 300 lines off Combinatorics/SimpleGraph/Connectivity\r\nPR #14977 Pim Otte: feat(Combinatorics/SimpleGraph/Connectivity): getVert lemmas\r\nPR #15005 Ya√´l Dillies: refactor: Make sure concrete Heyting algebras define their `himp` explicitly\r\nPR #15171 Rida Hamadani: refactor(Combinatorics/SimpleGraph): move `Walk` to its own file\r\nPR #15325 Ya√´l Dillies: chore(Corner/Defs): Fix copy-pasta\r\nPR #8304 Ya√´l Dillies: feat: Combinatorial subspaces and multidimensional Hales-Jewett\r\n\r\n19: t-differential-geometry t-topology\r\nPR #13887 Junyan Xu: feat(Geometry/Manifold): state generalized Poincar√© conjecture\r\n\r\n20: t-differential-geometry\r\nPR #14801 grunweg: fix/docs: fix typo in example code\r\nPR #14802 grunweg: feat: interior and boundary of a product manifold\r\nPR #14974 grunweg: feat: the empty set is a smooth manifold\r\n\r\n21: t-euclidean-geometry\r\nPR #14682 Ya√´l Dillies: feat: Translation of affine bases\r\n\r\n22: t-linter\r\nPR #11884 damiano: feat: add the refine linter, to flag uses of `refine'`\r\nPR #13658 grunweg: chore: add missing spaces around :\r\nPR #14272 grunweg: fix(scripts/{lint_style,mk_all}): limit return value to 125\r\nPR #14322 damiano: feat: the one-line-align linter\r\nPR #14378 damiano: feat: add `endOf` linter\r\nPR #14540 grunweg: chore: remove scripts/mk_all.sh\r\nPR #14557 damiano: fix: make the allowed unused tactics extensible\r\nPR #14558 damiano: fix: silence the `set_option` linter outside of mathlib\r\nPR #14676 grunweg: refactor: improvements to lint_style\r\nPR #14696 grunweg: fix: only run the missingEnd linter in mathlib and related projects\r\nPR #14724 grunweg: fix(lint_style): only print style errors once overall\r\nPR #14758 grunweg: chore: rename endOf linter to missingEnd\r\nPR #15010 damiano: feat: add the `cdot` linter\r\nPR #15081 damiano: fix: parse header in `minImports` to improve reports\r\nPR #15097 damiano: feat: the long line linter as a syntax linter\r\n\r\n23: t-logic\r\nPR #14299 grunweg: chore(SetTheory): remove use of autoImplicit\r\nPR #14323 grunweg: chore(ModelTheory): remove autoImplicit\r\nPR #14381 Pol'tta / Miyahara K≈ç: chore(Mathlib/Data/Equiv/Functor): deduplicate `Functor.mapEquiv`\r\nPR #14419 Yury G. Kudryashov: feat(Logic/Basic): add `simp` lemma for `@Exists.choose _ (¬∑ = a) _`\r\nPR #14420 Yury G. Kudryashov: chore(Logic/Basic): deprecate `Classical.subtype_of_exists`\r\nPR #14421 Yury G. Kudryashov: feat(Data/Set/Image): add `preimage_subset_of_surjOn`\r\nPR #14517 hwatheod: feat(SetTheory/Game/PGame): inserting an option a game\r\nPR #15209 Aaron Anderson: chore(ModelTheory/Encoding): improve the encoding of formulas to avoid `sizeOf`\r\nPR #15275 Aaron Anderson: chore(ModelTheory/Complexity): move quantifier complexity into a new file\r\n\r\n24: t-measure-probability t-dynamics\r\nPR #14595 Yury G. Kudryashov: feat(MeasureTheory/Group): add lemmas about `Filter.EventuallyConst`\r\nPR #15086 Yury G. Kudryashov: feat(Ergodic/Conservative): generalize to `NullMeasurableSet`s\r\nPR #15098 Yury G. Kudryashov: feat(MeasurePreserving): use `NullMeasurableSet`\r\n\r\n25: t-measure-probability\r\nPR #11143 Ya√´l Dillies: feat: Bergelson's Intersectivity Lemma\r\nPR #13871 grunweg: chore/perf(Probability/MeasureTheory): use fun_prop for manual `measurability` calls\r\nPR #14185 Xavier Roblot: feat(MeasureTheory/Constructions/Pi): add `measurePreserving_pi`\r\nPR #14424 Thomas Zhu: chore(Probability/Kernel) Fix typo in `kernel.prod_const`\r\nPR #14472 Moritz Firsching: chore(Probability/Independence/Kernel): remove superfluous `show`s\r\nPR #14487 Yury G. Kudryashov: feat(Measure/Regular): add lemmas about compact closed sets\r\nPR #14488 Yury G. Kudryashov: feat(LpSpace/DomAct): add a lemma + `@[to_additive]`\r\nPR #14489 Yury G. Kudryashov: feat(Function/LpSpace): continuity of `indicatorConstLp` in the set\r\nPR #14500 Yury G. Kudryashov: feat(LpSpace/ContinuousCompMeasurePreserving): new file\r\nPR #14574 Yury G. Kudryashov: feat(Group/Prod): add `MeasureTheory.inv_ae`\r\nPR #14575 Yury G. Kudryashov: feat(Group/Action): add `smul_ae`\r\nPR #14576 Yury G. Kudryashov: feat(MeasureSpace): add `ae_smul_measure_eq`\r\nPR #14638 Yury G. Kudryashov: feat(MeasureTheory): weaken assumptions from `SigmaFinite` to `SFinite`\r\nPR #14646 igorkhavkine: feat(MeasureTheory/Function): Uniform tightness of functions in Lp\r\nPR #14658 Yury G. Kudryashov: feat(Decomposition/Lebesgue): `SigmaFinite -> SFinite`\r\nPR #14680 Yury G. Kudryashov: feat(MeasureTheory): drop measurability assumptions here and there\r\nPR #14700 Yury G. Kudryashov: chore(Integral/Lebesgue): golf\r\nPR #14736 Yury G. Kudryashov: feat(Measure/WithDensity): drop measurability assumption\r\nPR #14740 Yury G. Kudryashov: feat(Integral/Lebesgue): add `setLIntegral_biUnion_of_directed`\r\nPR #14772 Yury G. Kudryashov: chore(Function/EssSup): use `ae_smul_measure_eq`\r\nPR #14818 Yury G. Kudryashov: feat(LpSpace): make `indicatorConstLp_inj` an `Iff` lemma\r\nPR #14822 Yury G. Kudryashov: feat(AEStabilizer): new file\r\nPR #14853 igorkhavkine: feat(MeasureTheory): adding setLintegral_compl and setIntegral_compl theorems.\r\nPR #14933 Yury G. Kudryashov: feat(MeasureTheory/../Action): drop measurability assumptions\r\nPR #14954 igorkhavkine: refactor(MeasureTheory.Function.UniformIntegrable): Rename Vitali convergence related theorems to reflect the IsFiniteMeasure hypothesis.\r\nPR #15021 Ya√´l Dillies: refactor(Probability): Make kernels a type\r\nPR #15041 Yury G. Kudryashov: feat(Group/Measure): drop a `MeasurableMul` assumption\r\nPR #15043 Yury G. Kudryashov: chore(NullMeasurable): remove TODO\r\nPR #15085 Yury G. Kudryashov: feat(ContinuousMapDense): weaken TC assumptions\r\nPR #15089 Yury G. Kudryashov: feat(MeasureSpace): generalize pigeonhole to NullMeasurableSets\r\nPR #15103 Ya√´l Dillies: chore(Kernel/Disintegration): Rename `Basic` to `StandardBorel`\r\nPR #15105 Ya√´l Dillies: refactor: Extract predicate for conditional kernels\r\nPR #15117 Floris van Doorn: feat: generalize constant 5 in Vitali covering\r\nPR #15208 Ya√´l Dillies: chore(MeasureTheory/Constructions/Polish): split off embedding into the reals\r\nPR #15220 Bj√∏rn Kjos-Hanssen: doc: add a warning that `comap` is zero for non-injective functions\r\nPR #15320 Yury G. Kudryashov: chore(VitaliFamily): fix `open`/`open scoped`\r\nPR #15348 Yury G. Kudryashov: chore(LpSpace): minor golf\r\nPR #6642 Yury G. Kudryashov: chore(SimpleFunc): use `FunLike`\r\nPR #9163 igorkhavkine: feat(MeasureTheory/Function): stronger version of Vitali's convergence theorem\r\n\r\n26: t-meta t-algebra\r\nPR #14376 Pol'tta / Miyahara K≈ç: feat(Mathlib/Data/Matrix/Notation): delaborator for `!![a, b; c, d]` notation\r\n\r\n27: t-meta t-category-theory\r\nPR #10581 Yuma Mizuno: feat: string diagram widget\r\nPR #11133 Yuma Mizuno: feat(Tactic/CategoryTheory): normalization in monoidal categories\r\nPR #15067 Yuma Mizuno: chore(Tactic/CategoryTheory/Coherence): import non-meta coherence theorem\r\n\r\n28: t-meta\r\nPR #12016 JovanGerb: feat: interactive `unfold?` tactic\r\nPR #12525 Kyle Miller: feat: `subsingleton` tactic\r\nPR #14253 Kyle Miller: feat: `convert_to ty at h` tactic\r\nPR #14437 damiano: feat: `#min_imports in` command\r\nPR #14586 Eric Wieser: fix(nlinarith): make `findSquares` deterministic\r\nPR #14628 Floris van Doorn: feat(to_additive): unfold lemmas generated by `simp`\r\nPR #15095 Andrew Yang: fix(Tactic/Simps): Prevent `simps` from viewing `field_1` as a prefix of `field`.\r\nPR #15364 Floris van Doorn: feat: gcongr works with eta and proofs\r\n\r\n29: t-number-theory t-algebra\r\nPR #13939 Michael Stoll: feat(NumberTheory/MulChar): extend API for multiplicative characters\r\nPR #14176 Kevin Buzzard: feat: topology on ring of finite adeles.\r\nPR #14227 Riccardo Brasca: feat(Mathlib.NumberTheory.FLT.Three): add various results\r\nPR #14495 David Loeffler: feat(LegendreSymbol/AddCharacter): std add char of ZMod N is primitive\r\nPR #14653 Riccardo Brasca: feat: prove Fermat's Last Theorem for `n=3`\r\n\r\n30: t-number-theory t-analysis\r\nPR #14359 Mar√≠a In√©s de Frutos-Fern√°ndez: feat(Analysis.Normed.Ring.SeminormFromBounded): add SeminormFromBounded\r\nPR #14361 Mar√≠a In√©s de Frutos-Fern√°ndez: feat(Analysis.Normed.Ring.SeminormFromConst): add seminormFromConst\r\n\r\n31: t-number-theory\r\nPR #14041 MKaratarakis: feat: the `House` of an algebraic number\r\nPR #14589 L: chore: rename `ArithmeticFunction.card_divisors` -> `Nat.card_divisors`\r\nPR #14597 L: feat(ArithmeticFunction): more corollaries of `isMultiplicative_sigma`\r\nPR #15223 Yury G. Kudryashov: chore(NumberField/Discriminant): golf\r\nPR #15288 Yury G. Kudryashov: chore(NumberTheory): drop some `DecidableEq` assumptions\r\n\r\n32: t-order\r\nPR #10560 Ya√´l Dillies: refactor: Make `Frame` extend `HeytingAlgebra`\r\nPR #12175 Christopher Hoskin: feat(Topology/Order/ScottTopology): Characterise the Scott Topology of a Complete Linear Order\r\nPR #13337 Ya√´l Dillies: feat: Monotonicity of monadic operations on `Part`\r\nPR #13505 Ya√´l Dillies: feat(Order): Galois connection between `pred` and `succ`\r\nPR #13823 Ya√´l Dillies: feat: Sublattice generated by a product set\r\nPR #14004 Peter Nelson : feat(Order/Atoms): strong atomicity typeclass\r\nPR #14034 Peter Nelson : feat(Order/WellFounded): well-founded of strictly monotone\r\nPR #14169 Pietro Monticone: feat(Order/WithBot): add `forall_iff_eq_bot ` and `forall_iff_eq_top `\r\nPR #14304 grunweg: chore(Order): remove almost all autoImplicit\r\nPR #14467 Kevin Buzzard: doc: add definition of upper/lower set to UpperSet, LowerSet\r\nPR #14564 D-Thomine: feat(Order.LiminfLimsup): add limsup_max\r\nPR #14908 Anthony Bordg: feat: the Galois connection induced by an arbitrary relation\r\n\r\n33: t-topology t-algebra t-dynamics\r\nPR #14493 Yury G. Kudryashov: feat: define topology on `DomMulAct _`\r\n\r\n34: t-topology t-algebra t-order t-measure-probability\r\nPR #14738 Yury G. Kudryashov: feat(Topology/ENNReal): add `finset_sum_iSup`\r\n\r\n35: t-topology t-algebra\r\nPR #11335 Thomas Browning: feat(Topology/Algebra/PontryaginDual): Local Compactness of the Pontryagin Dual\r\nPR #12800 Mar√≠a In√©s de Frutos-Fern√°ndez: feat(Topology/Algebra/Algebra): add ContinuousAlgHom\r\n\r\n36: t-topology t-algebraic-geometry\r\nPR #13178 FMLJohn: feat(Topology/KrullDimension.lean): Krull dimension of a topological space\r\nPR #14396 Andrew Yang: feat(Topology/LocallyClosed): Define locally closed sets\r\n\r\n37: t-topology t-analysis\r\nPR #13468 Yury G. Kudryashov: feat: generalize `CompleteSpace (ContinuousMultilinearMap _ _ _)` to TVS\r\nPR #13532 Yury G. Kudryashov: feat(UniformConvergenceTopology): prove generic `UniformOnFun.continuousOn_eval‚ÇÇ`\r\nPR #15268 Yury G. Kudryashov: chore(NormedSpace/Multilinear): drop `DecidableEq` assumptions\r\n\r\n38: t-topology t-measure-probability\r\nPR #14668 Yury G. Kudryashov: chore(AEEqOfIntegral): weaken TC assumptions in 2 lemmas\r\n\r\n39: t-topology t-order t-measure-probability\r\nPR #15016 Yury G. Kudryashov: feat(Filter): add `Filter.EventuallyEq.symmDiff`\r\n\r\n40: t-topology t-order\r\nPR #14591 kkytola: feat(Topology/Algebra/Order/LiminfLimsup): generalize map liminf and map limsup lemmas\r\nPR #14817 Yury G. Kudryashov: feat(Filter/Basic): add `EventuallyEq.congr_{left,right}`\r\nPR #15267 Yury G. Kudryashov: feat(LiminfLimsup): drop unneeded `DecidableEq` assumptions\r\n\r\n41: t-topology\r\nPR #11746 vin-gui: feat: proper group actions\r\nPR #12221 Christopher Hoskin: feat(Mathlib/Topology/Bases): subbasis closed under intersection is a basis\r\nPR #12536 Matias Heikkil√§: feat(Topology): stoneCechUnit injective for T35Space\r\nPR #12979 Filippo A. E. Nuccio: feat(Topology/UniformSpace/AbstractCompletion):add comparison lemma\r\nPR #13228 Yury G. Kudryashov: feat(Topology): restriction of a `QuotientMap`\r\nPR #13451 Yury G. Kudryashov: feat(UniformSpace/Cauchy): add lemmas about `TotallyBounded`\r\nPR #13517 Steven Clontz: feat: add perfectly normal (T_6) topological property\r\nPR #13635 Etienne: feat: Characterization of proper maps for Hausdorff and compactly generated spaces\r\nPR #13903 Dagur Asgeirsson: feat(Topology): transport the property of being extremally disconnected along a homeomorphism\r\nPR #13990 Ya√´l Dillies: feat: Locally Lipschitz functions on a set\r\nPR #14001 Andrew Yang: feat(Topology/Inseparable): Define `specializing` maps between topological spaces\r\nPR #14128 Pietro Monticone: feat(Topology/Instances/EReal): lemmas related to liminf and limsup\r\nPR #14240 Jireh Loreaux: feat: make `discrete_of_t1_of_finite` an instance and rename\r\nPR #14275 Yury G. Kudryashov: feat(LocallyConvex): add `isVonNBounded_union` etc\r\nPR #14329 Pietro Monticone: feat(Topology/Instances/EReal): add continuity of multiplication\r\nPR #14433 Yakov Pechersky: feat(MetricSpace/Ultra): IsUltrametricDist and basic facts on open/closed sets in such spaces\r\nPR #14504 Janette Set√§l√§: feat(Topology/Sequences): preservation of sequential compactness under continuous functions\r\nPR #14592 Yury G. Kudryashov: feat: add `denseRange_subtype_val`\r\nPR #14741 Yury G. Kudryashov: chore(Inseparable): add `@[fun_prop, continuity]`\r\nPR #14742 Yury G. Kudryashov: chore(UniformEmbedding): add `UniformInducing.uniformInducing_iff`\r\nPR #14787 Daniel Weber: feat(Topology/Basic): add some `AccPt` lemmas\r\nPR #14824 Hannah Scholz: feat: singletons are closed in T1 spaces\r\nPR #14834 Daniel Weber: feat: define the derived set\r\nPR #15084 Yury G. Kudryashov: chore(Topology/LocallyClosed): use `X`/`Y` instead of `Œ±`/`Œ≤`\r\nPR #15174 Etienne: feat: Convergence of coe to `OnePoint`\r\nPR #15175 grunweg: doc(Topology/PartitionOfUnity): add missing documentation\r\nPR #15176 Etienne: feat: ULift of a compact space is compact.\r\nPR #15202 Etienne: feat: The subtype coercion associated to a closed subset is a closed map\r\nPR #15216 Yury G. Kudryashov: chore(Topology/Algebra/UniformConvergence): golf\r\nPR #15323 Yury G. Kudryashov: chore(Topology/LocallyClosed): move around\r\n\r\n42: Miscellaneous\r\nPR #11243 Ya√´l Dillies: feat: Density of a finset\r\nPR #11329 Matthew Robert Ballard: perf(DirectSum.Ring): factor out data fields\r\nPR #11372 Chris Wong: feat: DFA.acceptsFrom, DFA.map, DFA.equiv\r\nPR #11891 Ruben Van de Velde: chore: move Nat.find/findGreatest into their own file\r\nPR #12456 Chris Birkbeck: Eisenstein series are bounded at infinity\r\nPR #12604 Chris Birkbeck: Eisenstein series are modular forms\r\nPR #12770 Chris Birkbeck: feat: cotangent q-expansion\r\nPR #12987 sgouezel: chore: deactivate Prop-dependent instances\r\nPR #13279 Pol'tta / Miyahara K≈ç: style(Mathlib/Tactic/*): rename wrongly capitalized filenames\r\nPR #13280 Pol'tta / Miyahara K≈ç: style(Mathlib/Tactic/Congr!): rename `Congr!.lean` to `CongrExclamation.lean` to avoid the illegal character `!`\r\nPR #13338 Ya√´l Dillies: chore(Order): More simp lemmas\r\nPR #13407 Shrys: chore: Added namespace Mathlib around Vector defs\r\nPR #13568 Ya√´l Dillies: chore(Data/Fin/Tuple/Basic): Fill in the API hole (partly)\r\nPR #13697 JonBannon: feat : define `ContinuousFunctionalCalculus` Instance for Hermitian Matrices over an RCLike Field\r\nPR #13816 Steven Clontz: chore: set default cpus to 4 for devcontainer\r\nPR #13832 Ya√´l Dillies: chore: Rename `Nat.factors` to `Nat.primeFactorsList`\r\nPR #13834 Ruben Van de Velde: chore: split some lemmas out of Topology.MetricSpace.ProperSpace\r\nPR #13858 grunweg: perf(DoldKan/EquivalencePseudoabelian): use suppress_compilation\r\nPR #13899 Ya√´l Dillies: feat: The diagonal of a finset\r\nPR #13944 Ruben Van de Velde: chore: move some lemmas to Algebra.GroupWithZero.Center\r\nPR #13957 Jakob von Raumer: feat(Data): Option.get!_some and Option.get!_none\r\nPR #13966 kkytola: feat: IsBoundedUnder lemmas for addition and Finset.sum\r\nPR #13967 Matthew Robert Ballard: chore: update `install_macos.sh` so we use official channels\r\nPR #13995 Antoine Chambert-Loir: feat(GroupTheory/GroupAction/Blocks): order iso between blocks and subgroups\r\nPR #14043 Rida Hamadani: feat(Data/ENat): `sSup_eq_zero` and `sInf_eq_zero`\r\nPR #14095 ThomasLanard: feat: Cardinal of GLn with coefficients in a finite field\r\nPR #14105 damiano: rename: `no_lost_declarations` to `declarations_diff` and `short` as default option\r\nPR #14114 Kim Morrison: chore(README): fix docs for building documentation locally\r\nPR #14117 Matthew Robert Ballard: chore: downgrade priority of `SetLike.smul` instances\r\nPR #14120 Matthew Robert Ballard: chore (LinearAlgebra.Dimension): make `instNontrivial` a local instance\r\nPR #14121 Matthew Robert Ballard: chore (Subgroup.Order): move ordered facts out of `Basic` and into `Order`\r\nPR #14122 Matthew Robert Ballard: chore (Ring.Prod): move order instances on product rings\r\nPR #14126 Matthew Robert Ballard: chore(Subring): don't import ordered ring classes for basic things\r\nPR #14129 Matthew Robert Ballard: chore (Set.Pointwise.Basic): avoid importing ordered rings\r\nPR #14163 Wang Haocheng : feat(Fintype.Basic): Add two theorems supporting Auction Theory formalizations\r\nPR #14168 Ruben Van de Velde: chore: deprecate AlgHom.map_* lemmas\r\nPR #14181 Ruben Van de Velde: chore: move two lemmas about the exponent and the rank of groups\r\nPR #14184 Stefan Kebekus: Simple, but useful formula representing a vector in an inner product space\r\nPR #14195 Peter Nelson : feat(Logic/Embedding/Set): Injections from subtypes of disjoint sets\r\nPR #14196 Peter Nelson : chore: add exception for `Data.Set.Subset` to `noshake.json`.\r\nPR #14197 Peter Nelson : feat(Data/Matroid/Closure): matroid closure\r\nPR #14199 Lorenzo Luccioli: feat(Order/Interval/Set): trivial generalization of a lemma about `UnorderedInterval`\r\nPR #14207 Chris Hughes: Remove Chris Hughes from maintainer list\r\nPR #14217 Yury G. Kudryashov: chore(Data/PNat): drop `bit*` lemmas\r\nPR #14226 Kim Morrison: chore(Algebra/Module/LinearMap): split into Basic and Defs\r\nPR #14228 Johan Commelin: chore(scripts/create-adaptations-pr.sh): more checks, more docs\r\nPR #14251 Eric Wieser: chore: add a `Repr` for `Sym2`\r\nPR #14282 Eric Wieser: feat: more lemmas about `List.dedup` and other lattice operations\r\nPR #14286 Ralf Stephan: chore(Data/Nat): split Prime.lean\r\nPR #14307 Kim Morrison: chore: bump toolchain to v4.9.0\r\nPR #14309 grhkm21: chore(RepresentationTheory): rename FdRep to FDRep\r\nPR #14311 Kim Morrison: chore: move toolchain to v4.10.0-rc1 and merge bump/v4.10.0\r\nPR #14314 Kim Morrison: chore: delete obsolete scripts\r\nPR #14316 Kim Morrison: chore: ensure all #align commands are on a single line\r\nPR #14317 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-01\r\nPR #14320 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-01\r\nPR #14321 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-01\r\nPR #14324 Pietro Monticone: chore(Data/Real/EReal): `theorem`s to `lemma`s\r\nPR #14326 Kim Morrison: chore: delay imports of Rat/Field\r\nPR #14331 Ruben Van de Velde: feat: additivize some Set.center results\r\nPR #14334 Dagur Asgeirsson: fix(Topology/Stonean): remove wrong TODO from docstring\r\nPR #14335 Matthew Robert Ballard: chore (Module.LinearMap.End): avoid ordered algebra imports\r\nPR #14336 Matthew Robert Ballard: chore (BigOperators.Finsupp): avoid importing `Order.BigOperators.Ring.Finset`\r\nPR #14338 Matthew Robert Ballard: chore (Order.OmegaCompletePartialOrder): avoid importing ordered algebra\r\nPR #14341 Matthew Robert Ballard: chore (Data.Rat.Lemmas): avoid importing `OrderedCommMonoid`\r\nPR #14346 Kim Morrison: chore: delete obsolete porting scripts\r\nPR #14347 Kim Morrison: chore: rm scripts/check_silent.sh\r\nPR #14349 damiano: chore: remove obsolete porting notes\r\nPR #14351 Matthew Robert Ballard: chore (Algebra.Order.Monoid.Unbundled): don't used bundled structured in unbundled\r\nPR #14354 grunweg: chore(FieldTheory): remove use of autoImplicit\r\nPR #14355 grunweg: chore(Mathlib/Init): remove autoImplicit\r\nPR #14357 Ralf Stephan: chore(Data/Nat): refactor import of `Nat/Prime` by `Nat/Factors`\r\nPR #14362 grunweg: chore(Data): reduce use of autoImplicit\r\nPR #14363 damiano: feat: more import diff options\r\nPR #14367 D-Thomine: chore: move iterate_prod_map to `Data.Prod.Basic`\r\nPR #14370 Matthew Robert Ballard: chore (Algebra.Order.Nonneg.Ring): split into unbundled and bundled ordered ring files\r\nPR #14371 Matthew Robert Ballard: chore (Data.Nat.Cast.Order): split into `Basic` and `Ring`\r\nPR #14380 Matthew Robert Ballard: chore (Algebra.Order.Group.Defs): split out unbundled ordered algebra results to `Algebra.Order.Group.Unbundled.Basic`\r\nPR #14383 Kim Morrison: chore: note in Mathlib/Init/* about intention to move content and delete\r\nPR #14384 damiano: chore: remove some whitespace and two other things\r\nPR #14385 damiano: chore: remove ported tactic from Mathport syntax\r\nPR #14388 damiano: fix: split `alias` in `no_lost_declarations`\r\nPR #14390 Matthew Robert Ballard: chore (Algebra.Order.Monoid.Canonical.Defs): split off `ExistsAddOfLE` and `ExistsMulOfLE`\r\nPR #14391 Jz Pan: doc: fix some author fields in references\r\nPR #14393 Matthew Robert Ballard: chore (Algebra.Order.Ring.Defs): split file and unbundle results\r\nPR #14394 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-03\r\nPR #14405 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-04\r\nPR #14407 Johan Commelin: chore(PULL_REQUEST_TEMPLATE.md): mention pull request life cycle etc\r\nPR #14410 Johan Commelin: chore(scripts/create-adaptation-pr): add ci status check\r\nPR #14415 Johan Commelin: chore(workflows/nightly_detect_failure): do not repeat bump reminder message\r\nPR #14417 Mario Carneiro: fix: handle duplicate constants in shake\r\nPR #14425 Ya√´l Dillies: chore: Golf `Finset.exists_subsuperset_card_eq`\r\nPR #14431 Eric Wieser: feat: a replacement for `Nat.leRecOn'` that works with `induction`\r\nPR #14439 ThomasLanard: chore: Split of GeneralLinearGroup\r\nPR #14440 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-05\r\nPR #14441 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-05\r\nPR #14443 Sina Hazratpour: feat: add lemma not_mem_singleton_iff\r\nPR #14445 Matthew Robert Ballard: chore (Data.Fintype.Basic): de-simp `Fintype.univ_ofSubsingleton`\r\nPR #14446 Riccardo Brasca: chore: Split `RingTheory.Trace` and `RingTheory.Norm`\r\nPR #14451 Matthew Robert Ballard: chore (Algebra.Order.Field.Defs): split off results about unbundled ordered algebra\r\nPR #14461 Matthew Robert Ballard: chore (Algebra.PUnitInstances): split file into `Algebra`, `Order`, and `Module` instance files\r\nPR #14462 Jujian Zhang: chore(TwoSidedIdeal/Basic): apply forgotten review comments\r\nPR #14463 hwatheod: fix(SetTheory/Game/Basic): Fix the definition of surreal inverse\r\nPR #14464 Kim Morrison: chore: split EuclideanDomain.Instances\r\nPR #14465 Kim Morrison: chore: postpone Field past Algebra/Defs\r\nPR #14466 Kim Morrison: chore: split Algebra/Module/Equiv\r\nPR #14468 damiano: chore: update `Finsupp.fun‚ÇÄ` comment after resolution of issue\r\nPR #14469 damiano: chore: reduce imports in `change?`\r\nPR #14470 Johan Commelin: chore(Algebra/Lie): prerequisites for Lie's theorem\r\nPR #14474 Moritz Firsching: chore: homogenize TODO format\r\nPR #14475 Moritz Firsching: refactor(.../ContinuousFunctionalCalculus/Instances): move `Unitary` to new file\r\nPR #14476 Moritz Firsching: feat: min_mul_min_le_min_mul_mul\r\nPR #14485 Ruben Van de Velde: chore: tidy various files\r\nPR #14491 damiano: chore: soften `set_option` linter message\r\nPR #14492 Ruben Van de Velde: doc: fix diagram formatting\r\nPR #14494 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-07\r\nPR #14497 Markus Himmel: fix: app unexpander for Opposite.op and pp_nodot for Opposite.unop\r\nPR #14499 adomasbaliuka: Removes non-printable characters U+200b and U+200c from docstrings\r\nPR #14505 Moritz Firsching: chore(Imo/Imo1998Q2): remove resolved porting notes\r\nPR #14511 grunweg: chore: tidy three miscellaneous porting notes\r\nPR #14513 Kim Morrison: chore: add test file to import everything\r\nPR #14516 Ruben Van de Velde: chore: tidy various files\r\nPR #14518 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-08\r\nPR #14519 Sina Hazratpour: deduplicate pullback and baseChange\r\nPR #14521 grunweg: chore(Data/Stream/Init): use `‚Ñï` instead of `Nat` consistently\r\nPR #14522 Kim Morrison: chore: removing unnecessary imports of Batteries.Logic\r\nPR #14525 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-08\r\nPR #14527 Kim Morrison: chore: remove `@[simp]` from `List.replicate_succ`\r\nPR #14529 Bhavik Mehta: chore(Data/Set): golf and add decidability of insert\r\nPR #14530 Matthew Robert Ballard: chore (Algebra.Associated): avoid importing bundled ordered algebra classes\r\nPR #14531 Matthew Robert Ballard: chore (Algebra.Order.WithTop): split into unbundled and bundled\r\nPR #14533 Filippo A. E. Nuccio: style(DedekindDomain/AdicValuation): fix some snake_case to lowerCamelCase\r\nPR #14536 Matthew Robert Ballard: chore (Data.Nat.Cast.Field): split into unbundled and bundled results\r\nPR #14537 grunweg: perf(Analysis/Convex/Segment): squeeze two slow simps\r\nPR #14541 Matthew Robert Ballard: chore(Data.NNRat.Defs): reduce imports\r\nPR #14543 grunweg: chore: remove superfluous open statements\r\nPR #14546 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-09\r\nPR #14547 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-09\r\nPR #14552 Moritz Firsching: chore(AlgebraicGeometry/GammaSpecAdjunction): remove obsolete porting notes\r\nPR #14553 Moritz Firsching: chore(Topology/ContinuousFunction/Ordered) remove porting note\r\nPR #14554 grunweg: chore: add missing spaces around = or :=\r\nPR #14555 grunweg: chore: remove trailing semicolons\r\nPR #14556 grunweg: chore: remove Data/UnionFind\r\nPR #14559 Johan Commelin: chore(PULL_REQUEST_TEMPLATE.md): add template for moves and deletions\r\nPR #14560 grunweg: chore(Control): reduce use of autoImplicit\r\nPR #14567 Matthew Robert Ballard: chore (Algebra.Basic): split results on `Algebra`'s over `Rat` to a separate file\r\nPR #14568 Ruben Van de Velde: chore: remove unused import from Data.Nat.Count\r\nPR #14572 Chris Birkbeck: Chore: Rename files with Eisenstein series stuff.\r\nPR #14573 Chris Birkbeck: Congruence subgroup namespace\r\nPR #14577 Kim Morrison: chore: bump toolchain to v4.10.0-rc2\r\nPR #14578 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-09\r\nPR #14584 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-09\r\nPR #14600 hwatheod: feat(SetTheory/Surreal/Basic): add some lemmas for Surreal.mk\r\nPR #14602 Moritz Firsching: chore(Data/List/Lex): remove attribute nolint defLemma\r\nPR #14605 Johan Commelin: chore(scripts/create-adaptation-pr.sh): do not label PR\r\nPR #14606 Ralf Stephan: doc(Nat/Nth): fix two typos\r\nPR #14607 grunweg: chore: update some style exceptions\r\nPR #14609 grunweg: chore(workflows): don't add or remove the 'awaiting-review' label\r\nPR #14610 grunweg: chore: remove one superfluous `nolint defLemma`\r\nPR #14612 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-10\r\nPR #14614 Moritz Firsching: chore: remove superfluous `intro`s\r\nPR #14615 Anne Baanen: docs(README): Rename \"Emeritus maintainers\" to \"Past maintainers\"\r\nPR #14616 Wrenna Robson: feat(`Data/Fintype/Order`): Slightly strengthen `Fin.completeLinearOrder`.\r\nPR #14617 damiano: fix: add `assumption` to autoparam `isBoundedDefault`\r\nPR #14620 grunweg: chore: remove several stray sections\r\nPR #14621 grunweg: chore: close all open sections or namespaces at the end of each file\r\nPR #14624 grunweg: chore: fix two typos\r\nPR #14625 grunweg: chore: remove porting notes 'in std'\r\nPR #14629 Kevin Buzzard: fix: remove an unused import; add a missing docstring bracket\r\nPR #14630 Ruben Van de Velde: fix: rewrite update_dependencies_zulip action\r\nPR #14631 Matthew Robert Ballard: chore (AlgebraicGeometry.PrimeSpectrum): move results not requiring Zariski topology to files in `RingTheory`\r\nPR #14632 Fr√©d√©ric Dupuis: chore(Analysis/Calculus/FDeriv/Extend): use Lean 4 naming scheme\r\nPR #14633 Eric Wieser: chore: protect `QuadraticForm.map_zero`\r\nPR #14634 Kim Morrison: chore: robustify proof in CategoryTheory.GlueData\r\nPR #14635 Kim Morrison: chore: robustify proof in CategoryTheory.Limit.VanKampen\r\nPR #14636 Kim Morrison: chore(CategoryTheory/Limits/Shapes/BinaryProducts): don't use tactics to construct data\r\nPR #14642 Pol'tta / Miyahara K≈ç: chore(Mathlib/Init/ZeroOne): rename `Mathlib.Init.ZeroOne` to `Mathlib.Algebra.Group.ZeroOne`\r\nPR #14645 damiano: chore: add source information to `maintainer merge` Zulip message\r\nPR #14651 Floris van Doorn: refactor: give `edist_dist` a default value\r\nPR #14655 Ya√´l Dillies: doc(Analysis/Convex): Update todo about extreme and exposed sets\r\nPR #14656 Emily Riehl: feat(CategoryTheory): Cat-valued functors induced by passing to Over/Under categories\r\nPR #14657 grunweg: chore: update nolints.json\r\nPR #14661 Ruben Van de Velde: chore: remove unused lemmas about bit0/1\r\nPR #14662 grunweg: style: fix some double spaces\r\nPR #14663 Bryan Gin-ge Chen: fix(maintainer_merge_*.yml): don't require \\r in maintainer merge comment\r\nPR #14664 damiano: chore: remove spaces in binders\r\nPR #14670 Ruben Van de Velde: chore: split LinearAlgebra.FiniteDimensional\r\nPR #14671 Ruben Van de Velde: fix: rewrite Int.eq_pow_of_mul_eq_pow_* lemmas in terms of Odd\r\nPR #14672 Ruben Van de Velde: chore: remove unused lemmas about bit0/1\r\nPR #14677 Ya√´l Dillies: chore: Move more lemmas to `Algebra.Group.Action.Defs`\r\nPR #14678 Ruben Van de Velde: chore: remove unused lemmas about bit0/1\r\nPR #14679 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-12\r\nPR #14681 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-12\r\nPR #14683 Fr√©d√©ric Dupuis: chore(BigOperators/Ring): generalize `Fintype.sum_mul_sum`\r\nPR #14689 Jz Pan: docs: fix references.bib\r\nPR #14692 Jz Pan: docs(Data/Finset/Basic): fix docstring referring to other files\r\nPR #14693 grunweg: chore: remove two mathport syntax stubs\r\nPR #14694 grunweg: chore: remove autoImplicit in Util\r\nPR #14695 grunweg: doc: add a couple of module docstrings\r\nPR #14703 Ruben Van de Velde: doc: fix definition names in GCDMonoid.Basic\r\nPR #14707 Ruben Van de Velde: chore: remove unused lemmas about bit0/1\r\nPR #14709 grunweg: chore(Tactic/Ring/Basic): reduce use of autoImplicit\r\nPR #14713 Bryan Gin-ge Chen: fix: don't create new branches (and PRs) in update_dependencies.yml\r\nPR #14723 Moritz Firsching: feat(Algebra/Module/Submodule/Pointwise): generalize singleton_set_smul\r\nPR #14725 grunweg: chore(Tactic/NormNum): remove autoImplicit\r\nPR #14726 grunweg: chore(Tactic): reduce use of Implicit, part 2\r\nPR #14728 grunweg: chore: remove two trivial mentions of autoImplicit\r\nPR #14729 Eric Wieser: feat: induction principle for Multiplicative\r\nPR #14743 Johan Commelin: chore(SetTheory/Lists): remove porting notes\r\nPR #14745 Johan Commelin: chore: remove bit0/bit1 and associated lemmas\r\nPR #14746 damiano: chore: separate dependent typeclass assumptions\r\nPR #14749 Alessandro Iraci: feat: Create a partition from an element of Sym\r\nPR #14750 Pol'tta / Miyahara K≈ç: chore(Mathlib/Tactic/ToAdditive/Frontend): isolate the `to_additive` attribute implementation in a new file `Tactic.ToAdditive.Frontend` (2/2)\r\nPR #14753 Pol'tta / Miyahara K≈ç: doc(Mathlib/MeasureTheory/Integral/IntervalIntegral): fix capitalization\r\nPR #14754 Johan Commelin: chore(Logic/Function/Defs): move file out of Init\r\nPR #14755 Johan Commelin: chore(Control): move files from Init/Control/ to Control/\r\nPR #14759 Johan Commelin: chore(Data/Int/Defs): clear out Init/Data/Int/Basic\r\nPR #14761 Johan Commelin: chore(Data/Nat/Notation): move Init/Data/Nat/Notation\r\nPR #14762 Johan Commelin: chore(Init/Data/Nat/Basic): drop lemmas about bit0/bit1\r\nPR #14765 Johan Commelin: chore: remove lemmas about bit0/bit1\r\nPR #14767 Xavier Roblot: chore: fix a typo in PolarCoord\r\nPR #14769 Johan Commelin: chore(Data/Bool): merge Init.Data.Bool.* into Data.Bool.Basic\r\nPR #14770 grunweg: chore(Tactic): reduce use of autoImplicit, part 3\r\nPR #14773 Kim Morrison: chore: backport adaptations for nightly-2024-07-09\r\nPR #14775 Adam Topaz: chore(Topology/Algebra/ContinuousMonoidHom): Fix typo in docstring\r\nPR #14778 Kim Morrison: chore: bump dependencies (upstream LazyList)\r\nPR #14785 Moritz Firsching: chore: remove superfluous `ge_iff_le`\r\nPR #14786 Kim Morrison: feat(CategoryTheory/Karoubi): cleanup\r\nPR #14788 Johan Commelin: chore(Init/Data/Nat/Lemmas): remove more bit01 lemmas\r\nPR #14790 Moritz Firsching: chore: unify `add_halves` and `add_halves'`\r\nPR #14791 Moritz Firsching: chore(CategoryTheory/DiscreteCategory): add deprecation alias for #14722\r\nPR #14792 Johan Commelin: chore(scripts/create-adaptation-pr.sh): auto resolve certain merge conflicts\r\nPR #14794 Johan Commelin: chore(scripts/create-adaptation-pr.sh): make script robust against changes on disk\r\nPR #14795 Johan Commelin: ci(nightly_detect_failure): update reminder message to mention script\r\nPR #14796 Ruben Van de Velde: chore: swap the direction of some ext_iff lemmas\r\nPR #14797 Fabrizio Barroero: feat(NumberTheory/SiegelsLemma): replace `Fin m` and `Fin n` with `Fintype Œ±` and `Fintype Œ≤`\r\nPR #14804 Kim Morrison: chore(AlgebraCat): remove bad instance\r\nPR #14805 grunweg: chore(Tactic): reduce autoImplicit, part 4\r\nPR #14806 Johan Commelin: chore(workflows): add missing space in message\r\nPR #14810 Kim Morrison: chore: typos in `create-adaptation-pr.sh`.\r\nPR #14811 Jz Pan: docs: fix bibitem of `Proofs from THE BOOK`\r\nPR #14813 Kim Morrison: chore: allow adaptation script to proceed if CI is still running\r\nPR #14815 Yuma Mizuno: chore(CategoryTheory/Bicategory): split the bicategorical composition\r\nPR #14816 Pol'tta / Miyahara K≈ç: chore(Mathlib/Tactic/ToAdditive/Frontend): isolate the `to_additive` attribute implementation in a new file `Tactic.ToAdditive.Frontend` (1/2)\r\nPR #14819 Johan Commelin: chore(scripts/create-adaptation-pr.sh): fix bugs\r\nPR #14821 Johan Commelin: chore(workflows/nightly_detect_failure): log messages\r\nPR #14823 Whysoserioushah: chore(LinearAlgebra/Matrix/Reindex): generalize `reindexAlgEquiv`\r\nPR #14825 Patrick Massot: feat: missing Nat.card lemmas\r\nPR #14828 grunweg: doc(Tactic): add remaining missing module docstrings\r\nPR #14830 damiano: fix: `maintainer merge` messages only once\r\nPR #14832 Samyak Dhar Tuladhar: feat: add `orthogonalComplement_eq_orthogonalComplement`\r\nPR #14833 Zheng Yuan: doc: fix module documentation for `AntivaryOn`\r\nPR #14835 D-Thomine: feat(Data.Real.ENatENNReal/EReal): add a few coe lemmas\r\nPR #14836 Yakov Pechersky: feat)List/MinMax): getD_maximum?_eq_unbot'_maximum\r\nPR #14838 Joseph Myers: feat(Order/Interval/Finset/Nat): `Icc_insert_succ_left`, `Icc_insert_succ_right`\r\nPR #14840 damiano: feat: the `minImports` linter\r\nPR #14841 Joseph Myers: feat(Archive/Imo): IMO 2024 Q1\r\nPR #14842 Joseph Myers: feat(Archive/Imo): IMO 2024 Q6\r\nPR #14843 Kim Morrison: chore(CategoryTheory/Limits/Shapes): avoid constructing data with aesop\r\nPR #14845 Kim Morrison: chore(aesop_cat): remove unused configuration\r\nPR #14847 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-17\r\nPR #14848 Ya√´l Dillies: chore: Move universally closed characterisation of proper maps\r\nPR #14849 Kim Morrison: chore: remove unused imports\r\nPR #14850 Kim Morrison: chore: replace 'import Batteries' with finer imports\r\nPR #14852 Mario Carneiro: feat: generalize Siegel's lemma to `A = 0`\r\nPR #14854 Thomas Browning: feat(SetTheory/Cardinal/Finite): More missing `Nat.card` lemmas\r\nPR #14858 Robert Maxton: feat (LinearAlgebra/FreeProduct): introduce basic structure, universal property\r\nPR #14861 Ya√´l Dillies: doc(README): Link to Gitpod\r\nPR #14862 Johan Commelin: chore(workflows/nightly_detect_failure): only compare initial parts of messages\r\nPR #14864 Filippo A. E. Nuccio: fix(RingTheory/LaurentSeries): fix two suggestions left\r\nPR #14870 Ya√´l Dillies: chore: Move `DistribMulAction` on `Submonoid` instance\r\nPR #14871 Ya√´l Dillies: chore(Algebra/GroupWithZero/Action/Opposite): Move from `GroupTheory.GroupAction.Opposite`\r\nPR #14872 Filippo A. E. Nuccio: docs(Data/BitArray): fix doc creating style exception\r\nPR #14877 Matthew Robert Ballard: chore (GroupTheory.MonoidLocalization): split file\r\nPR #14878 damiano: fix: handle nameless instances in `#min_imports in`\r\nPR #14879 Kim Morrison: chore: remove spurious indent on set_option\r\nPR #14880 Kim Morrison: chore: move attributes out of Init/Align.lean\r\nPR #14881 Matthew Robert Ballard: chore(Filter.Germ): split off bundled ordered algebra instances\r\nPR #14883 grunweg: chore: remove autoImplicit in five miscellaneous files\r\nPR #14884 grunweg: chore(Mathlib/Lean): remove use of autoImplicit\r\nPR #14887 Kim Morrison: chore: remove `#align` and `#align_import` statements\r\nPR #14892 grunweg: chore: rename checkYaml to check-yaml\r\nPR #14896 grunweg: chore: remove more easy autoImplicit\r\nPR #14899 damiano: chore: reduce imports in Mathlib.RingTheory.Polynomial.Basic\r\nPR #14900 damiano: chore: reduce imports in Mathlib.Algebra.Group.Int\r\nPR #14901 Matthew Robert Ballard: chore (test/Lint): remove `#align` test\r\nPR #14902 grunweg: chore: last refine replacements\r\nPR #14907 Johan Commelin: chore(scripts/create-adaptation-pr): do not squash merge\r\nPR #14909 damiano: chore: remove `#align`-oriented linters\r\nPR #14912 Riccardo Brasca: chore: remove `import Mathlib.Mathport.Rename`\r\nPR #14913 Ralf Stephan: chore: speed up by changing `def` to `abbrev` in `RingTheory/PowerSeries/Basic`\r\nPR #14914 grunweg: chore: remove comments mentioning #align\r\nPR #14915 grunweg: chore(lint-style): remove references to #align\r\nPR #14916 grunweg: chore(Init): remove empty files\r\nPR #14917 damiano: chore: reduce imports in Mathlib.CategoryTheory.Category.Grpd\r\nPR #14919 damiano: chore: reduce imports in several files\r\nPR #14920 Joseph Myers: feat(Archive/Imo): IMO 2024 Q2\r\nPR #14924 Yury G. Kudryashov: chore: remove comments about dubious translations\r\nPR #14930 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-20\r\nPR #14934 Yury G. Kudryashov: chore(*): use ‚äï notation for `Sum`\r\nPR #14937 Ya√´l Dillies: chore: Move `DistribMulAction` on `Opposite`, `Pi`, `Prod`, `Sum`, `Sigma`, `Units`\r\nPR #14939 grunweg: chore: adaptations for the multi-goal linter\r\nPR #14944 Ralf Stephan: chore: reduce imports in 3 files under `Data`\r\nPR #14948 Ya√´l Dillies: chore: Rename the `Fintype (alternatingGroup Œ±)` instance\r\nPR #14949 Ralf Stephan: chore: reduce imports in 6 files under `GroupTheory`\r\nPR #14953 Riccardo Brasca: chore: delete `Mathlib.Data.Nat.SqrtNormNum`\r\nPR #14956 damiano: chore: remove unnecessary imports\r\nPR #14958 Peter Nelson : chore(Data/Matroid/Closure): fix typo\r\nPR #14960 Ralf Stephan: chore: split off `Defs` and `Induction` from `Nat/Factorization/Basic`\r\nPR #14961 Peter Nelson : feat(Data/Set/Sigma): univ sigma preimage eq self\r\nPR #14962 grunweg: chore: remove empty marker files\r\nPR #14963 grunweg: chore: remove miscellaneous obsolete porting notes\r\nPR #14964 Colin Jones: feat(Order/Floor): `x - 1 / 2 < round x`\r\nPR #14968 Ruben Van de Velde: chore: tidy various files\r\nPR #14970 Joachim Breitner: refactor(Tactic/ToAdditive): avoid FindM, got removed in lean4\r\nPR #14973 Ralf Stephan: chore: reduce imports in 6 files under `GroupTheory`\r\nPR #14978 Pol'tta / Miyahara K≈ç: chore(Mathlib/Init/Data/Prod): remove `Mathlib.Init.Data.Prod`\r\nPR #14979 damiano: docs: add info about `#min_imports in`\r\nPR #14980 Pol'tta / Miyahara K≈ç: chore(Mathlib/Init/Meta/WellFoundedTactic): remove `Mathlib.Init.Meta.WellFoundedTactic`\r\nPR #14982 damiano: fix: reformulate the message when there are too many files to display\r\nPR #14984 Pol'tta / Miyahara K≈ç: chore(Mathlib/Init/Data/Ordering/*): move `Mathlib.Init.Data.Ordering` to `Mathlib.Data.Ordering`\r\nPR #14993 Kim Morrison: chore: robustifying for debug.byAsSorry\r\nPR #14995 Yury G. Kudryashov: chore(LiminfLimsup): fix namespaces\r\nPR #15002 Johan Commelin: chore(scripts/technical-debt-metrics): no longer report missing module docstrings\r\nPR #15003 Johan Commelin: chore(Lean/Meta): import Batteries.CodeAction to enable hole code action\r\nPR #15004 Ralf Stephan: chore: reduce imports in 14 files under `GroupTheory`\r\nPR #15006 Ya√´l Dillies: feat(Order/Copy): Copy Heyting algebras\r\nPR #15008 Ruben Van de Velde: chore: tidy various files\r\nPR #15011 grunweg: style: remove more trailing semicolons\r\nPR #15013 grunweg: chore: rename interval_integrable -> intervalIntegrable\r\nPR #15015 grunweg: chore(SpecialFunctions): remove many obsolete porting notes about simp\r\nPR #15025 Peter Nelson : feat(Data/Matroid/Closure): matroid closure and independence\r\nPR #15027 grunweg: chore(lint-style.sh): remove duplicate check for case clashes\r\nPR #15029 Kim Morrison: chore: normalize number of newlines before module docstring\r\nPR #15032 grunweg: chore(TensorProduct/RightExactness): move three lemmas to Algebra/Exact\r\nPR #15034 grunweg: chore(SpecialFunctions): remove more obsolete porting notes\r\nPR #15035 grunweg: chore: remove two obsolete porting notes\r\nPR #15037 grunweg: style: remove extraneous spaces around [ arguments\r\nPR #15040 Kim Morrison: chore: update Batteries and deprecate LazyList\r\nPR #15042 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-24\r\nPR #15048 Ya√´l Dillies: chore(Finset): Rename `noncommProd_map` to `map_noncommProd`\r\nPR #15052 grunweg: chore: update style exceptions\r\nPR #15054 adomasbaliuka: fix: typo in docstring of `AccPt.mono`\r\nPR #15057 Peter Nelson : fix(Data/Set/Sigma): address comments for #14961\r\nPR #15059 Matthew Robert Ballard: chore (Data.Nat.GCD.Basic): minimize imports\r\nPR #15060 Peter Nelson : feat(Data/Matroid/Map): add missing lemmas\r\nPR #15061 Peter Nelson : feat(Data/Matroid/Sum): Sums of matroids\r\nPR #15065 Matthew Robert Ballard: chore (Algebra.Order.Group.Abs): split file into unbundled and bundled material\r\nPR #15083 Matthew Robert Ballard: chore: protect `congr_arg`'s and `congr_fun`'s\r\nPR #15087 Kim Morrison: chore: fix implicitness of SheafedSpace.ext\r\nPR #15091 Kyle Miller: chore: address `elab_as_elim` workarounds\r\nPR #15100 Wojciech Nawrocki: chore: bump ProofWidgets4 to v0.0.40\r\nPR #15101 grunweg: chore: fix some non-flexible simps\r\nPR #15102 grunweg: perf(PiTensorProduct/InjectiveSeminorm): squeeze slow simp\r\nPR #15104 damiano: fix: shorten lines with 101 characters\r\nPR #15106 Ruben Van de Velde: chore: qualify uses of ext and ext_iff lemmas\r\nPR #15107 damiano: style: whitespace and long line\r\nPR #15110 Peter Nelson : feat(Data/Set/Basic, Order/RelClasses): add @[simp] to subset_refl and subset_empty_iff\r\nPR #15111 damiano: chore: long lines in tests\r\nPR #15118 Kim Morrison: chore: deprecate `sizeOf_dropSlice_lt`\r\nPR #15119 Kim Morrison: chore: robustifying for debug.byAsSorry (part 2)\r\nPR #15120 Kim Morrison: chore: robustifying for debug.byAsSorry (part 3)\r\nPR #15124 Anand Rao: fix: `aesop_graph?` macro\r\nPR #15125 Kim Morrison: chore: robustifying for debug.byAsSorry (part 4)\r\nPR #15126 Kim Morrison: chore: robustifying for debug.byAsSorry (part 5)\r\nPR #15128 grunweg: chore: remove placeholder files\r\nPR #15130 grunweg: chore: more fixes for the flexible linter\r\nPR #15133 grunweg: chore: more adaptations for debugAsSorry\r\nPR #15137 blizzard_inc: Chore: robustifying for debug.byAsSorry (part 7)\r\nPR #15138 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-25\r\nPR #15139 Kyle Miller: chore: make `#where` command commonly available again\r\nPR #15142 Kim Morrison: chore: bump nightly toolchain more often\r\nPR #15143 Kim Morrison: chore: enable workflow_dispatch for nightly_bump_toolchain\r\nPR #15144 Jireh Loreaux: chore: split `Topology.Connected.Basic`\r\nPR #15146 Jireh Loreaux: chore: move files into `Analysis.Normed.Algebra`\r\nPR #15149 Kim Morrison: chore: robustifying for debug.byAsSorry (part 8)\r\nPR #15150 Kim Morrison: chore: robustifying for debug.byAsSorry (part 9)\r\nPR #15153 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-26\r\nPR #15155 Scott Carnahan: feat (LinearAlgebra/RootSystem/RootPositive) : Root-positive bilinear forms\r\nPR #15159 Etienne: doc: Forgotten capital letter\r\nPR #15163 Jireh Loreaux: chore: move `NormedSpace.Units` into `Normed.Ring`\r\nPR #15164 blizzard_inc: chore: robustifying for debug.byAsSorry (part 10)\r\nPR #15165 Jireh Loreaux: chore: create `Analysis.CstarAlgebra` folder\r\nPR #15166 Jireh Loreaux: chore: move files into `Analysis.Normed.Lp`\r\nPR #15169 blizzard_inc: chore: robustifying for debug.byAsSorry (part 11)\r\nPR #15172 grunweg: chore: remove some obsolete porting notes mentioning noncomputable\r\nPR #15178 blizzard_inc: chore: robustifying for debug.byAsSorry (part 12)\r\nPR #15179 damiano: fix: add check for existing filepath\r\nPR #15182 Jireh Loreaux: chore: move files into new `Analysis.Normed.Operator`\r\nPR #15183 Jireh Loreaux: chore: move files into new `Analysis.Normed.Module`\r\nPR #15190 damiano: fix: re-add the `TextBased` long line linter\r\nPR #15195 damiano: docs: add module docs for `declarations_diff`\r\nPR #15196 Joachim Breitner: feat(Order/Minimal): generalize PartialOrder to Preorder where possible\r\nPR #15197 blizzard_inc: chore: robustifying for debug.byAsSorry (part 13)\r\nPR #15205 damiano: chore: replace forall intro in UnsignedHahn\r\nPR #15210 Ruben Van de Velde: chore: move Init.Order.Defs to Order.Defs\r\nPR #15211 Etienne: style: Wrong capital letter\r\nPR #15218 Kim Morrison: chore: replace zip_with -> zipWith in lemma names\r\nPR #15226 damiano: fix: the long line linter only acts on mathlib\r\nPR #15231 grunweg: chore: normalise authors line in copyright header\r\nPR #15233 Yury G. Kudryashov: chore(Combinatorics): drop some `DecidableEq` assumptions\r\nPR #15249 Kim Morrison: chore: backports for leanprover/lean4#4814 (part 3)\r\nPR #15250 damiano: CI: install elan in `lint_and_suggest`, suggest import changes\r\nPR #15255 Kim Morrison: chore: backports for leanprover/lean4#4814 (part 4)\r\nPR #15263 Kevin Buzzard: feat(Mathlib/NumberTheory/FLT/Basic): expand module docstring.\r\nPR #15266 Rida Hamadani: docs(Topology): add tag to one-point compactification\r\nPR #15272 Patrick Massot: lRevert \"Add a bot posting event reminders on Zulip\"\r\nPR #15273 Rida Hamadani: refactor(Combinatorics/SimpleGraph): rename `Connectivity.lean` to `Walk.lean`\r\nPR #15278 grunweg: chore(Algebra): remove superfluous DecidableEq hypotheses\r\nPR #15279 grunweg: chore(Combinatorics/HalesJewett): replace Fintype -> Finite\r\nPR #15281 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-30\r\nPR #15292 R√©my Degenne: feat: add `Pairwise.pairwiseDisjoint`\r\nPR #15293 Johan Commelin: chore(GroupTheory/GroupAction/Quotient): fix to_additive names\r\nPR #15298 Johan Commelin: chore(scripts/create-adaptation-pr): abort whenever command fails\r\nPR #15299 Ruben Van de Velde: chore: remove obsolete comments about @[congr]\r\nPR #15300 Emily Riehl: chore: split conj into two files to streamline imports\r\nPR #15305 grunweg: chore(HahnBanach/SeparatingDual): Finite -> Fintype\r\nPR #15306 grunweg: chore(Combinatorics): remove superfluous use of DecidableEq\r\nPR #15308 grunweg: chore: fix Lean 3 names in comments, related to presheaves\r\nPR #15309 grunweg: chore: rename is_limit -> isLimit in a local variable\r\nPR #15310 Kim Morrison: chore: backports for leanprover/lean4#4814 (part 5)\r\nPR #15317 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-30\r\nPR #15319 damiano: chore: style adjustments\r\nPR #15324 Yury G. Kudryashov: docs(MkIffOfInductiveProp): fix typos\r\nPR #15328 Ya√´l Dillies: feat: Monotonicity of multiplication by positive rationals\r\nPR #15329 Ya√´l Dillies: feat: Lemmas specialised to `piFinset fun _ : Fin n ‚Ü¶ s`\r\nPR #15332 blizzard_inc: chore: backports for leanprover/lean4#4814 (part 7)\r\nPR #15334 Matthew Robert Ballard: chore (Algebra.Order.Ring.Unbundled.Basic): inline typeclass assumptions\r\nPR #15340 Ruben Van de Velde: chore: improve some ext_iff lemmas\r\nPR #15341 Joachim Breitner: feat(ENat): lt_add_one_iff\r\nPR #15347 Joachim Breitner: feat(ENat): sSup_mem_of_Nonempty_of_lt_top\r\nPR #15352 Kim Morrison: chore: backports for leanprover/lean4#4814 (part 9)\r\nPR #15354 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-31\r\nPR #15356 damiano: fix: allow markdown in declarations_diff\r\nPR #15361 Kim Morrison: chore: bump toolchain to v4.10.0\r\nPR #15365 Kim Morrison: chore: update lean4checker version\r\nPR #15371 sgouezel: Chore: Remove some uses of `open Classical`\r\nPR #15372 leanprover-community-mathlib4-bot: chore: update Mathlib dependencies 2024-07-31\r\nPR #5549 FR: feat: new file `Data/List/Pi`\r\nPR #8612 grhkm21: feat(Data/Nat/Choose): Lucas' theorem\r\n\r\n---\r\nReports\r\n\r\n* PRs not corresponding to a commit (merged in June, closed in July?)\r\n  #13651\r\n  #14199\r\n\r\n* PRs not found by `gh` (merged in July, closed in August?)\r\n  #15313\r\n---",
              "createdAt": "2024-08-01T17:33:43Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G7JwD",
              "body": "### Month in Mathlib summary\n\n\n\nBetween 2024-07-01 and 2024-07-31 there were\n* 920 commits to `master` and\n* 919 closed PRs\n\n<details><summary>\nt-algebra t-dynamics, 2 PRs\n</summary>\n\n* #14891 Yury G. Kudryashov \n* #9726 Yury G. Kudryashov \n\n</details><details><summary>\nt-algebra t-order, 9 PRs\n</summary>\n\n* #11979 Scott Carnahan \n* #13148 Ya√´l Dillies \n* #13683 Ya√´l Dillies \n* #14292 Eric Wieser \n* #14479 Scott Carnahan \n* #14732 Scott Carnahan \n* #14807 Scott Carnahan \n* #15327 Ya√´l Dillies \n* #9904 FR \n\n</details><details><summary>\nt-algebra, 126 PRs\n</summary>\n\n* #10846 Scott Carnahan \n* #11974 Amelia Livingston \n* #12010 Amelia Livingston \n* #12434 Jz Pan \n* #12650 Christian Merten \n* #12780 Xavier Roblot \n* #12938 Christopher Hoskin \n* #12996 Scott Carnahan \n* #12998 Scott Carnahan \n* #13023 Bolton Bailey \n* #13034 Ya√´l Dillies \n* #13047 Antoine Chambert-Loir \n* #13064 Filippo A. E. Nuccio \n* #13071 Scott Carnahan \n* #13089 Christopher Hoskin \n* #13161 Ya√´l Dillies \n* #13162 Andrew Yang \n* #13210 Pol'tta / Miyahara K≈ç \n* #13235 Pol'tta / Miyahara K≈ç \n* #13294 Eric Wieser \n* #13421 Scott Carnahan \n* #13422 Scott Carnahan \n* #13430 Scott Carnahan \n* #13533 Jiang Jiedong \n* #13555 Pol'tta / Miyahara K≈ç \n* #13575 Thomas Browning \n* #13583 Joseph Myers \n* #13585 Herman Chau \n* #13630 Thomas Browning \n* #13637 Thomas Browning \n* #13651 Yury G. Kudryashov \n* #13652 Yury G. Kudryashov \n* #13902 Jujian Zhang \n* #13943 Andrew Yang \n* #14086 Christian Merten \n* #14211 Jireh Loreaux \n* #14215 Eric Wieser \n* #14225 Mar√≠a In√©s de Frutos-Fern√°ndez \n* #14232 Jiang Jiedong \n* #14234 Jujian Zhang \n* #14243 Seewoo Lee \n* #14271 Christian Merten \n* #14280 James Sundstrom \n* #14281 Seewoo Lee \n* #14285 Eric Wieser \n* #14290 Kevin Buzzard \n* #14325 Christian Merten \n* #14358 Christian Merten \n* #14366 Christian Merten \n* #14372 Andrew Yang \n* #14373 Andrew Yang \n* #14374 Andrew Yang \n* #14375 Andrew Yang \n* #14413 Jujian Zhang \n* #14418 Filippo A. E. Nuccio \n* #14422 Riccardo Brasca \n* #14452 Ralf Stephan \n* #14453 Jujian Zhang \n* #14454 Antoine Chambert-Loir \n* #14456 Jujian Zhang \n* #14473 Scott Carnahan \n* #14478 Andrew Yang \n* #14481 Ralf Stephan \n* #14512 Whysoserioushah \n* #14534 Christian Merten \n* #14551 Andrew Yang \n* #14601 Daniel Weber \n* #14611 Jz Pan \n* #14622 Pim Otte \n* #14637 Daniel Weber \n* #14639 Daniel Weber \n* #14640 Daniel Weber \n* #14641 Daniel Weber \n* #14643 Daniel Weber \n* #14659 David Kurniadi Angdinata \n* #14667 Daniel Weber \n* #14673 Ludwig Monnerjahn \n* #14674 blizzard_inc \n* #14684 David Kurniadi Angdinata \n* #14701 Daniel Weber \n* #14705 Ya√´l Dillies \n* #14706 Ya√´l Dillies \n* #14710 Daniel Weber \n* #14719 Eric Wieser \n* #14730 Daniel Weber \n* #14735 Jz Pan \n* #14751 Christian Merten \n* #14771 Yury G. Kudryashov \n* #14777 Yury G. Kudryashov \n* #14789 Thomas Browning \n* #14814 Quang Dao \n* #14826 Riccardo Brasca \n* #14829 Riccardo Brasca \n* #14831 judithludwig \n* #14851 Ya√´l Dillies \n* #14856 Thomas Browning \n* #14857 Daniel Weber \n* #14865 Antoine Chambert-Loir \n* #14875 Antoine Chambert-Loir \n* #14895 Ralf Stephan \n* #14922 Florent Schaffhauser \n* #14926 Jireh Loreaux \n* #14941 Florent Schaffhauser \n* #14945 Eric Wieser \n* #14955 Michael Stoll \n* #14965 Daniel Weber \n* #14966 Daniel Weber \n* #14997 Ya√´l Dillies \n* #14998 Ya√´l Dillies \n* #15023 judithludwig \n* #15036 Eric Wieser \n* #15039 Eric Wieser \n* #15073 Christian Merten \n* #15076 Ya√´l Dillies \n* #15134 Ya√´l Dillies \n* #15148 Jz Pan \n* #15151 Pietro Monticone \n* #15185 Jireh Loreaux \n* #15186 Jireh Loreaux \n* #15193 Jz Pan \n* #15235 Yury G. Kudryashov \n* #15236 Yury G. Kudryashov \n* #15287 Yury G. Kudryashov \n* #6595 Christopher Hoskin \n* #7569 Christopher Hoskin \n* #9334 Christopher Hoskin \n\n</details><details><summary>\nt-algebraic-geometry t-algebra, 5 PRs\n</summary>\n\n* #14377 Andrew Yang \n* #14507 Andrew Yang \n* #14550 Andrew Yang \n* #14859 Andrew Yang \n* #15108 Andrew Yang \n\n</details><details><summary>\nt-algebraic-geometry, 25 PRs\n</summary>\n\n* #13885 FMLJohn \n* #13972 Genora51 \n* #13996 Andrew Yang \n* #14231 weihong-xu \n* #14254 Jujian Zhang \n* #14297 Christian Merten \n* #14302 Christian Merten \n* #14328 Christian Merten \n* #14337 Christian Merten \n* #14392 Jo√´l Riou \n* #14429 Andrew Yang \n* #14430 Andrew Yang \n* #14549 Andrew Yang \n* #14690 Jo√´l Riou \n* #14711 Andrew Yang \n* #14748 Andrew Yang \n* #14763 Christian Merten \n* #14868 Andrew Yang \n* #14882 Andrew Yang \n* #14946 Andrew Yang \n* #14992 Andrew Yang \n* #15001 Andrew Yang \n* #15070 Christian Merten \n* #15079 Andrew Yang \n* #15080 Andrew Yang \n\n</details><details><summary>\nt-analysis t-algebra, 2 PRs\n</summary>\n\n* #14423 Yury G. Kudryashov \n* #15207 Ya√´l Dillies \n\nt-analysis t-euclidean-geometry, 1 PR\n* #14666 Ya√´l Dillies \n\n</details><details><summary>\nt-analysis t-measure-probability, 3 PRs\n</summary>\n\n* #11185 grunweg \n* #13353 David Loeffler \n* #15177 Ya√´l Dillies \n\nt-analysis t-order, 1 PR\n* #14459 Yury G. Kudryashov \n\n</details><details><summary>\nt-analysis, 34 PRs\n</summary>\n\n* #12804 Chris Birkbeck \n* #13424 Fr√©d√©ric Dupuis \n* #13676 Fr√©d√©ric Dupuis \n* #13952 Ya√´l Dillies \n* #13968 James Sundstrom \n* #13971 Geoffrey Irving \n* #14065 Fr√©d√©ric Dupuis \n* #14100 Jireh Loreaux \n* #14107 Lorenzo Luccioli \n* #14177 Fr√©d√©ric Dupuis \n* #14432 Fr√©d√©ric Dupuis \n* #14434 Yury G. Kudryashov \n* #14435 Yury G. Kudryashov \n* #14448 Fr√©d√©ric Dupuis \n* #14450 Yury G. Kudryashov \n* #14458 Christopher Hoskin \n* #14502 adomasbaliuka \n* #14545 Jireh Loreaux \n* #14570 igorkhavkine \n* #14593 adomasbaliuka \n* #14648 Anne Baanen \n* #14714 D-Thomine \n* #14737 Fr√©d√©ric Dupuis \n* #14827 Daniel Weber \n* #14918 D-Thomine \n* #15022 Ya√´l Dillies \n* #15031 grunweg \n* #15227 Yury G. Kudryashov \n* #15230 Yury G. Kudryashov \n* #15232 Yury G. Kudryashov \n* #15234 Yury G. Kudryashov \n* #15289 Yury G. Kudryashov \n* #15351 Fr√©d√©ric Dupuis \n* #7236 Vasily Nesterov \n\n</details><details><summary>\nt-category-theory t-algebra, 4 PRs\n</summary>\n\n* #14482 Jujian Zhang \n* #14520 Jo√´l Riou \n* #15058 Jo√´l Riou \n* #15297 Andrew Yang \n\n</details><details><summary>\nt-category-theory t-algebraic-geometry, 4 PRs\n</summary>\n\n* #13464 Jo√´l Riou \n* #14170 Jack McKoen \n* #14171 Jack McKoen \n* #14236 Jack McKoen \n\n</details><details><summary>\nt-category-theory t-condensed, 2 PRs\n</summary>\n\n* #13478 Dagur Asgeirsson \n* #13504 Dagur Asgeirsson \n\n</details><details><summary>\nt-category-theory t-topology t-condensed, 4 PRs\n</summary>\n\n* #14455 Dagur Asgeirsson \n* #14506 Dagur Asgeirsson \n* #14514 Dagur Asgeirsson \n* #14618 Dagur Asgeirsson \n\n</details><details><summary>\nt-category-theory t-topology, 13 PRs\n</summary>\n\n* #13333 Dagur Asgeirsson \n* #13358 Dagur Asgeirsson \n* #13507 Dagur Asgeirsson \n* #13905 Dagur Asgeirsson \n* #13907 Dagur Asgeirsson \n* #13908 Dagur Asgeirsson \n* #13909 Dagur Asgeirsson \n* #13911 Dagur Asgeirsson \n* #13912 Dagur Asgeirsson \n* #14508 Dagur Asgeirsson \n* #15201 Etienne \n* #15359 Dagur Asgeirsson \n* #15362 Dagur Asgeirsson \n\n</details><details><summary>\nt-category-theory, 72 PRs\n</summary>\n\n* #10425 Jo√´l Riou \n* #10981 Yuma Mizuno \n* #11703 Jo√´l Riou \n* #12211 Jo√´l Riou \n* #13012 Jo√´l Riou \n* #13312 Kim Morrison \n* #13313 Kim Morrison \n* #13410 Calle S√∂nne \n* #13486 Dagur Asgeirsson \n* #13639 Jo√´l Riou \n* #13742 Jo√´l Riou \n* #13840 Emily Riehl \n* #13876 Jo√´l Riou \n* #13898 Dagur Asgeirsson \n* #13926 Jo√´l Riou \n* #13947 Dagur Asgeirsson \n* #13963 Jo√´l Riou \n* #14017 Dagur Asgeirsson \n* #14028 Calle S√∂nne \n* #14084 Jo√´l Riou \n* #14087 Jo√´l Riou \n* #14098 Calle S√∂nne \n* #14153 Jo√´l Riou \n* #14187 Jo√´l Riou \n* #14192 Jo√´l Riou \n* #14256 Jo√´l Riou \n* #14258 Jo√´l Riou \n* #14261 Jo√´l Riou \n* #14274 Mario Carneiro \n* #14283 Jo√´l Riou \n* #14291 Jo√´l Riou \n* #14303 Calle S√∂nne \n* #14339 Jo√´l Riou \n* #14340 Jo√´l Riou \n* #14343 Jo√´l Riou \n* #14344 Calle S√∂nne \n* #14353 Jo√´l Riou \n* #14387 Sina Hazratpour \n* #14406 Dagur Asgeirsson \n* #14436 Jo√´l Riou \n* #14447 Kevin Buzzard \n* #14449 Dagur Asgeirsson \n* #14457 Jo√´l Riou \n* #14490 Dagur Asgeirsson \n* #14496 Jo√´l Riou \n* #14524 Calle S√∂nne \n* #14526 Calle S√∂nne \n* #14528 Jo√´l Riou \n* #14538 Jujian Zhang \n* #14548 Andrew Yang \n* #14569 Jo√´l Riou \n* #14649 Jo√´l Riou \n* #14650 Jo√´l Riou \n* #14717 Jo√´l Riou \n* #14722 Moritz Firsching \n* #14734 Jo√´l Riou \n* #14800 Jo√´l Riou \n* #14886 Yuma Mizuno \n* #14890 Jo√´l Riou \n* #14935 Jo√´l Riou \n* #14936 Jo√´l Riou \n* #14951 Jo√´l Riou \n* #14959 Jo√´l Riou \n* #14969 Jo√´l Riou \n* #14971 Jo√´l Riou \n* #14985 Calle S√∂nne \n* #15044 Jo√´l Riou \n* #15056 Andrew Yang \n* #15062 Andrew Yang \n* #15063 Andrew Yang \n* #15157 Jo√´l Riou \n* #15194 Calle S√∂nne \n\n</details><details><summary>\nt-combinatorics t-algebra, 2 PRs\n</summary>\n\n* #14000 Ya√´l Dillies \n* #14808 Scott Carnahan \n\n</details><details><summary>\nt-combinatorics, 19 PRs\n</summary>\n\n* #11667 Pim Otte \n* #12273 Peter Nelson  \n* #12346 Peter Nelson  \n* #12960 Pim Otte \n* #13329 Ya√´l Dillies \n* #13827 Ya√´l Dillies \n* #13910 Rida Hamadani \n* #14212 Eric Wieser \n* #14315 Rida Hamadani \n* #14356 grunweg \n* #14409 Iv√°n Renison \n* #14582 Rida Hamadani \n* #14623 Pim Otte \n* #14647 grunweg \n* #14977 Pim Otte \n* #15005 Ya√´l Dillies \n* #15171 Rida Hamadani \n* #15325 Ya√´l Dillies \n* #8304 Ya√´l Dillies \n\nt-differential-geometry t-topology, 1 PR\n* #13887 Junyan Xu \n\n</details><details><summary>\nt-differential-geometry, 3 PRs\n</summary>\n\n* #14801 grunweg \n* #14802 grunweg \n* #14974 grunweg \n\nt-euclidean-geometry, 1 PR\n* #14682 Ya√´l Dillies \n\n</details><details><summary>\nt-linter, 15 PRs\n</summary>\n\n* #11884 damiano \n* #13658 grunweg \n* #14272 grunweg \n* #14322 damiano \n* #14378 damiano \n* #14540 grunweg \n* #14557 damiano \n* #14558 damiano \n* #14676 grunweg \n* #14696 grunweg \n* #14724 grunweg \n* #14758 grunweg \n* #15010 damiano \n* #15081 damiano \n* #15097 damiano \n\n</details><details><summary>\nt-logic, 9 PRs\n</summary>\n\n* #14299 grunweg \n* #14323 grunweg \n* #14381 Pol'tta / Miyahara K≈ç \n* #14419 Yury G. Kudryashov \n* #14420 Yury G. Kudryashov \n* #14421 Yury G. Kudryashov \n* #14517 hwatheod \n* #15209 Aaron Anderson \n* #15275 Aaron Anderson \n\n</details><details><summary>\nt-measure-probability t-dynamics, 3 PRs\n</summary>\n\n* #14595 Yury G. Kudryashov \n* #15086 Yury G. Kudryashov \n* #15098 Yury G. Kudryashov \n\n</details><details><summary>\nt-measure-probability, 39 PRs\n</summary>\n\n* #11143 Ya√´l Dillies \n* #13871 grunweg \n* #14185 Xavier Roblot \n* #14424 Thomas Zhu \n* #14472 Moritz Firsching \n* #14487 Yury G. Kudryashov \n* #14488 Yury G. Kudryashov \n* #14489 Yury G. Kudryashov \n* #14500 Yury G. Kudryashov \n* #14574 Yury G. Kudryashov \n* #14575 Yury G. Kudryashov \n* #14576 Yury G. Kudryashov \n* #14638 Yury G. Kudryashov \n* #14646 igorkhavkine \n* #14658 Yury G. Kudryashov \n* #14680 Yury G. Kudryashov \n* #14700 Yury G. Kudryashov \n* #14736 Yury G. Kudryashov \n* #14740 Yury G. Kudryashov \n* #14772 Yury G. Kudryashov \n* #14818 Yury G. Kudryashov \n* #14822 Yury G. Kudryashov \n* #14853 igorkhavkine \n* #14933 Yury G. Kudryashov \n* #14954 igorkhavkine \n* #15021 Ya√´l Dillies \n* #15041 Yury G. Kudryashov \n* #15043 Yury G. Kudryashov \n* #15085 Yury G. Kudryashov \n* #15089 Yury G. Kudryashov \n* #15103 Ya√´l Dillies \n* #15105 Ya√´l Dillies \n* #15117 Floris van Doorn \n* #15208 Ya√´l Dillies \n* #15220 Bj√∏rn Kjos-Hanssen \n* #15320 Yury G. Kudryashov \n* #15348 Yury G. Kudryashov \n* #6642 Yury G. Kudryashov \n* #9163 igorkhavkine \n\nt-meta t-algebra, 1 PR\n* #14376 Pol'tta / Miyahara K≈ç \n\n</details><details><summary>\nt-meta t-category-theory, 3 PRs\n</summary>\n\n* #10581 Yuma Mizuno \n* #11133 Yuma Mizuno \n* #15067 Yuma Mizuno \n\n</details><details><summary>\nt-meta, 8 PRs\n</summary>\n\n* #12016 JovanGerb \n* #12525 Kyle Miller \n* #14253 Kyle Miller \n* #14437 damiano \n* #14586 Eric Wieser \n* #14628 Floris van Doorn \n* #15095 Andrew Yang \n* #15364 Floris van Doorn \n\n</details><details><summary>\nt-number-theory t-algebra, 5 PRs\n</summary>\n\n* #13939 Michael Stoll \n* #14176 Kevin Buzzard \n* #14227 Riccardo Brasca \n* #14495 David Loeffler \n* #14653 Riccardo Brasca \n\n</details><details><summary>\nt-number-theory t-analysis, 2 PRs\n</summary>\n\n* #14359 Mar√≠a In√©s de Frutos-Fern√°ndez \n* #14361 Mar√≠a In√©s de Frutos-Fern√°ndez \n\n</details><details><summary>\nt-number-theory, 5 PRs\n</summary>\n\n* #14041 MKaratarakis \n* #14589 L \n* #14597 L \n* #15223 Yury G. Kudryashov \n* #15288 Yury G. Kudryashov \n\n</details><details><summary>\nt-order, 12 PRs\n</summary>\n\n* #10560 Ya√´l Dillies \n* #12175 Christopher Hoskin \n* #13337 Ya√´l Dillies \n* #13505 Ya√´l Dillies \n* #13823 Ya√´l Dillies \n* #14004 Peter Nelson  \n* #14034 Peter Nelson  \n* #14169 Pietro Monticone \n* #14304 grunweg \n* #14467 Kevin Buzzard \n* #14564 D-Thomine \n* #14908 Anthony Bordg \n\nt-topology t-algebra t-dynamics, 1 PR\n* #14493 Yury G. Kudryashov \n\nt-topology t-algebra t-order t-measure-probability, 1 PR\n* #14738 Yury G. Kudryashov \n\n</details><details><summary>\nt-topology t-algebra, 2 PRs\n</summary>\n\n* #11335 Thomas Browning \n* #12800 Mar√≠a In√©s de Frutos-Fern√°ndez \n\n</details><details><summary>\nt-topology t-algebraic-geometry, 2 PRs\n</summary>\n\n* #13178 FMLJohn \n* #14396 Andrew Yang \n\n</details><details><summary>\nt-topology t-analysis, 3 PRs\n</summary>\n\n* #13468 Yury G. Kudryashov \n* #13532 Yury G. Kudryashov \n* #15268 Yury G. Kudryashov \n\nt-topology t-measure-probability, 1 PR\n* #14668 Yury G. Kudryashov \n\nt-topology t-order t-measure-probability, 1 PR\n* #15016 Yury G. Kudryashov \n\n</details><details><summary>\nt-topology t-order, 3 PRs\n</summary>\n\n* #14591 kkytola \n* #14817 Yury G. Kudryashov \n* #15267 Yury G. Kudryashov \n\n</details><details><summary>\nt-topology, 30 PRs\n</summary>\n\n* #11746 vin-gui \n* #12221 Christopher Hoskin \n* #12536 Matias Heikkil√§ \n* #12979 Filippo A. E. Nuccio \n* #13228 Yury G. Kudryashov \n* #13451 Yury G. Kudryashov \n* #13517 Steven Clontz \n* #13635 Etienne \n* #13903 Dagur Asgeirsson \n* #13990 Ya√´l Dillies \n* #14001 Andrew Yang \n* #14128 Pietro Monticone \n* #14240 Jireh Loreaux \n* #14275 Yury G. Kudryashov \n* #14329 Pietro Monticone \n* #14433 Yakov Pechersky \n* #14504 Janette Set√§l√§ \n* #14592 Yury G. Kudryashov \n* #14741 Yury G. Kudryashov \n* #14742 Yury G. Kudryashov \n* #14787 Daniel Weber \n* #14824 Hannah Scholz \n* #14834 Daniel Weber \n* #15084 Yury G. Kudryashov \n* #15174 Etienne \n* #15175 grunweg \n* #15176 Etienne \n* #15202 Etienne \n* #15216 Yury G. Kudryashov \n* #15323 Yury G. Kudryashov \n\n</details><details><summary>\nMiscellaneous, 440 PRs\n</summary>\n\n* #11243 Ya√´l Dillies \n* #11329 Matthew Robert Ballard \n* #11372 Chris Wong \n* #11891 Ruben Van de Velde \n* #12456 Chris Birkbeck \n* #12604 Chris Birkbeck \n* #12770 Chris Birkbeck \n* #12987 sgouezel \n* #13279 Pol'tta / Miyahara K≈ç \n* #13280 Pol'tta / Miyahara K≈ç \n* #13338 Ya√´l Dillies \n* #13407 Shrys \n* #13568 Ya√´l Dillies \n* #13697 JonBannon \n* #13816 Steven Clontz \n* #13832 Ya√´l Dillies \n* #13834 Ruben Van de Velde \n* #13858 grunweg \n* #13899 Ya√´l Dillies \n* #13944 Ruben Van de Velde \n* #13957 Jakob von Raumer \n* #13966 kkytola \n* #13967 Matthew Robert Ballard \n* #13995 Antoine Chambert-Loir \n* #14043 Rida Hamadani \n* #14095 ThomasLanard \n* #14105 damiano \n* #14114 Kim Morrison \n* #14117 Matthew Robert Ballard \n* #14120 Matthew Robert Ballard \n* #14121 Matthew Robert Ballard \n* #14122 Matthew Robert Ballard \n* #14126 Matthew Robert Ballard \n* #14129 Matthew Robert Ballard \n* #14163 Wang Haocheng  \n* #14168 Ruben Van de Velde \n* #14181 Ruben Van de Velde \n* #14184 Stefan Kebekus \n* #14195 Peter Nelson  \n* #14196 Peter Nelson  \n* #14197 Peter Nelson  \n* #14199 Lorenzo Luccioli \n* #14207 Chris Hughes \n* #14217 Yury G. Kudryashov \n* #14226 Kim Morrison \n* #14228 Johan Commelin \n* #14251 Eric Wieser \n* #14282 Eric Wieser \n* #14286 Ralf Stephan \n* #14307 Kim Morrison \n* #14309 grhkm21 \n* #14311 Kim Morrison \n* #14314 Kim Morrison \n* #14316 Kim Morrison \n* #14317 leanprover-community-mathlib4-bot \n* #14320 leanprover-community-mathlib4-bot \n* #14321 leanprover-community-mathlib4-bot \n* #14324 Pietro Monticone \n* #14326 Kim Morrison \n* #14331 Ruben Van de Velde \n* #14334 Dagur Asgeirsson \n* #14335 Matthew Robert Ballard \n* #14336 Matthew Robert Ballard \n* #14338 Matthew Robert Ballard \n* #14341 Matthew Robert Ballard \n* #14346 Kim Morrison \n* #14347 Kim Morrison \n* #14349 damiano \n* #14351 Matthew Robert Ballard \n* #14354 grunweg \n* #14355 grunweg \n* #14357 Ralf Stephan \n* #14362 grunweg \n* #14363 damiano \n* #14367 D-Thomine \n* #14370 Matthew Robert Ballard \n* #14371 Matthew Robert Ballard \n* #14380 Matthew Robert Ballard \n* #14383 Kim Morrison \n* #14384 damiano \n* #14385 damiano \n* #14388 damiano \n* #14390 Matthew Robert Ballard \n* #14391 Jz Pan \n* #14393 Matthew Robert Ballard \n* #14394 leanprover-community-mathlib4-bot \n* #14405 leanprover-community-mathlib4-bot \n* #14407 Johan Commelin \n* #14410 Johan Commelin \n* #14415 Johan Commelin \n* #14417 Mario Carneiro \n* #14425 Ya√´l Dillies \n* #14431 Eric Wieser \n* #14439 ThomasLanard \n* #14440 leanprover-community-mathlib4-bot \n* #14441 leanprover-community-mathlib4-bot \n* #14443 Sina Hazratpour \n* #14445 Matthew Robert Ballard \n* #14446 Riccardo Brasca \n* #14451 Matthew Robert Ballard \n* #14461 Matthew Robert Ballard \n* #14462 Jujian Zhang \n* #14463 hwatheod \n* #14464 Kim Morrison \n* #14465 Kim Morrison \n* #14466 Kim Morrison \n* #14468 damiano \n* #14469 damiano \n* #14470 Johan Commelin \n* #14474 Moritz Firsching \n* #14475 Moritz Firsching \n* #14476 Moritz Firsching \n* #14485 Ruben Van de Velde \n* #14491 damiano \n* #14492 Ruben Van de Velde \n* #14494 leanprover-community-mathlib4-bot \n* #14497 Markus Himmel \n* #14499 adomasbaliuka \n* #14505 Moritz Firsching \n* #14511 grunweg \n* #14513 Kim Morrison \n* #14516 Ruben Van de Velde \n* #14518 leanprover-community-mathlib4-bot \n* #14519 Sina Hazratpour \n* #14521 grunweg \n* #14522 Kim Morrison \n* #14525 leanprover-community-mathlib4-bot \n* #14527 Kim Morrison \n* #14529 Bhavik Mehta \n* #14530 Matthew Robert Ballard \n* #14531 Matthew Robert Ballard \n* #14533 Filippo A. E. Nuccio \n* #14536 Matthew Robert Ballard \n* #14537 grunweg \n* #14541 Matthew Robert Ballard \n* #14543 grunweg \n* #14546 leanprover-community-mathlib4-bot \n* #14547 leanprover-community-mathlib4-bot \n* #14552 Moritz Firsching \n* #14553 Moritz Firsching \n* #14554 grunweg \n* #14555 grunweg \n* #14556 grunweg \n* #14559 Johan Commelin \n* #14560 grunweg \n* #14567 Matthew Robert Ballard \n* #14568 Ruben Van de Velde \n* #14572 Chris Birkbeck \n* #14573 Chris Birkbeck \n* #14577 Kim Morrison \n* #14578 leanprover-community-mathlib4-bot \n* #14584 leanprover-community-mathlib4-bot \n* #14600 hwatheod \n* #14602 Moritz Firsching \n* #14605 Johan Commelin \n* #14606 Ralf Stephan \n* #14607 grunweg \n* #14609 grunweg \n* #14610 grunweg \n* #14612 leanprover-community-mathlib4-bot \n* #14614 Moritz Firsching \n* #14615 Anne Baanen \n* #14616 Wrenna Robson \n* #14617 damiano \n* #14620 grunweg \n* #14621 grunweg \n* #14624 grunweg \n* #14625 grunweg \n* #14629 Kevin Buzzard \n* #14630 Ruben Van de Velde \n* #14631 Matthew Robert Ballard \n* #14632 Fr√©d√©ric Dupuis \n* #14633 Eric Wieser \n* #14634 Kim Morrison \n* #14635 Kim Morrison \n* #14636 Kim Morrison \n* #14642 Pol'tta / Miyahara K≈ç \n* #14645 damiano \n* #14651 Floris van Doorn \n* #14655 Ya√´l Dillies \n* #14656 Emily Riehl \n* #14657 grunweg \n* #14661 Ruben Van de Velde \n* #14662 grunweg \n* #14663 Bryan Gin-ge Chen \n* #14664 damiano \n* #14670 Ruben Van de Velde \n* #14671 Ruben Van de Velde \n* #14672 Ruben Van de Velde \n* #14677 Ya√´l Dillies \n* #14678 Ruben Van de Velde \n* #14679 leanprover-community-mathlib4-bot \n* #14681 leanprover-community-mathlib4-bot \n* #14683 Fr√©d√©ric Dupuis \n* #14689 Jz Pan \n* #14692 Jz Pan \n* #14693 grunweg \n* #14694 grunweg \n* #14695 grunweg \n* #14703 Ruben Van de Velde \n* #14707 Ruben Van de Velde \n* #14709 grunweg \n* #14713 Bryan Gin-ge Chen \n* #14723 Moritz Firsching \n* #14725 grunweg \n* #14726 grunweg \n* #14728 grunweg \n* #14729 Eric Wieser \n* #14743 Johan Commelin \n* #14745 Johan Commelin \n* #14746 damiano \n* #14749 Alessandro Iraci \n* #14750 Pol'tta / Miyahara K≈ç \n* #14753 Pol'tta / Miyahara K≈ç \n* #14754 Johan Commelin \n* #14755 Johan Commelin \n* #14759 Johan Commelin \n* #14761 Johan Commelin \n* #14762 Johan Commelin \n* #14765 Johan Commelin \n* #14767 Xavier Roblot \n* #14769 Johan Commelin \n* #14770 grunweg \n* #14773 Kim Morrison \n* #14775 Adam Topaz \n* #14778 Kim Morrison \n* #14785 Moritz Firsching \n* #14786 Kim Morrison \n* #14788 Johan Commelin \n* #14790 Moritz Firsching \n* #14791 Moritz Firsching \n* #14792 Johan Commelin \n* #14794 Johan Commelin \n* #14795 Johan Commelin \n* #14796 Ruben Van de Velde \n* #14797 Fabrizio Barroero \n* #14804 Kim Morrison \n* #14805 grunweg \n* #14806 Johan Commelin \n* #14810 Kim Morrison \n* #14811 Jz Pan \n* #14813 Kim Morrison \n* #14815 Yuma Mizuno \n* #14816 Pol'tta / Miyahara K≈ç \n* #14819 Johan Commelin \n* #14821 Johan Commelin \n* #14823 Whysoserioushah \n* #14825 Patrick Massot \n* #14828 grunweg \n* #14830 damiano \n* #14832 Samyak Dhar Tuladhar \n* #14833 Zheng Yuan \n* #14835 D-Thomine \n* #14836 Yakov Pechersky \n* #14838 Joseph Myers \n* #14840 damiano \n* #14841 Joseph Myers \n* #14842 Joseph Myers \n* #14843 Kim Morrison \n* #14845 Kim Morrison \n* #14847 leanprover-community-mathlib4-bot \n* #14848 Ya√´l Dillies \n* #14849 Kim Morrison \n* #14850 Kim Morrison \n* #14852 Mario Carneiro \n* #14854 Thomas Browning \n* #14858 Robert Maxton \n* #14861 Ya√´l Dillies \n* #14862 Johan Commelin \n* #14864 Filippo A. E. Nuccio \n* #14870 Ya√´l Dillies \n* #14871 Ya√´l Dillies \n* #14872 Filippo A. E. Nuccio \n* #14877 Matthew Robert Ballard \n* #14878 damiano \n* #14879 Kim Morrison \n* #14880 Kim Morrison \n* #14881 Matthew Robert Ballard \n* #14883 grunweg \n* #14884 grunweg \n* #14887 Kim Morrison \n* #14892 grunweg \n* #14896 grunweg \n* #14899 damiano \n* #14900 damiano \n* #14901 Matthew Robert Ballard \n* #14902 grunweg \n* #14907 Johan Commelin \n* #14909 damiano \n* #14912 Riccardo Brasca \n* #14913 Ralf Stephan \n* #14914 grunweg \n* #14915 grunweg \n* #14916 grunweg \n* #14917 damiano \n* #14919 damiano \n* #14920 Joseph Myers \n* #14924 Yury G. Kudryashov \n* #14930 leanprover-community-mathlib4-bot \n* #14934 Yury G. Kudryashov \n* #14937 Ya√´l Dillies \n* #14939 grunweg \n* #14944 Ralf Stephan \n* #14948 Ya√´l Dillies \n* #14949 Ralf Stephan \n* #14953 Riccardo Brasca \n* #14956 damiano \n* #14958 Peter Nelson  \n* #14960 Ralf Stephan \n* #14961 Peter Nelson  \n* #14962 grunweg \n* #14963 grunweg \n* #14964 Colin Jones \n* #14968 Ruben Van de Velde \n* #14970 Joachim Breitner \n* #14973 Ralf Stephan \n* #14978 Pol'tta / Miyahara K≈ç \n* #14979 damiano \n* #14980 Pol'tta / Miyahara K≈ç \n* #14982 damiano \n* #14984 Pol'tta / Miyahara K≈ç \n* #14993 Kim Morrison \n* #14995 Yury G. Kudryashov \n* #15002 Johan Commelin \n* #15003 Johan Commelin \n* #15004 Ralf Stephan \n* #15006 Ya√´l Dillies \n* #15008 Ruben Van de Velde \n* #15011 grunweg \n* #15013 grunweg \n* #15015 grunweg \n* #15025 Peter Nelson  \n* #15027 grunweg \n* #15029 Kim Morrison \n* #15032 grunweg \n* #15034 grunweg \n* #15035 grunweg \n* #15037 grunweg \n* #15040 Kim Morrison \n* #15042 leanprover-community-mathlib4-bot \n* #15048 Ya√´l Dillies \n* #15052 grunweg \n* #15054 adomasbaliuka \n* #15057 Peter Nelson  \n* #15059 Matthew Robert Ballard \n* #15060 Peter Nelson  \n* #15061 Peter Nelson  \n* #15065 Matthew Robert Ballard \n* #15083 Matthew Robert Ballard \n* #15087 Kim Morrison \n* #15091 Kyle Miller \n* #15100 Wojciech Nawrocki \n* #15101 grunweg \n* #15102 grunweg \n* #15104 damiano \n* #15106 Ruben Van de Velde \n* #15107 damiano \n* #15110 Peter Nelson  \n* #15111 damiano \n* #15118 Kim Morrison \n* #15119 Kim Morrison \n* #15120 Kim Morrison \n* #15124 Anand Rao \n* #15125 Kim Morrison \n* #15126 Kim Morrison \n* #15128 grunweg \n* #15130 grunweg \n* #15133 grunweg \n* #15137 blizzard_inc \n* #15138 leanprover-community-mathlib4-bot \n* #15139 Kyle Miller \n* #15142 Kim Morrison \n* #15143 Kim Morrison \n* #15144 Jireh Loreaux \n* #15146 Jireh Loreaux \n* #15149 Kim Morrison \n* #15150 Kim Morrison \n* #15153 leanprover-community-mathlib4-bot \n* #15155 Scott Carnahan \n* #15159 Etienne \n* #15163 Jireh Loreaux \n* #15164 blizzard_inc \n* #15165 Jireh Loreaux \n* #15166 Jireh Loreaux \n* #15169 blizzard_inc \n* #15172 grunweg \n* #15178 blizzard_inc \n* #15179 damiano \n* #15182 Jireh Loreaux \n* #15183 Jireh Loreaux \n* #15190 damiano \n* #15195 damiano \n* #15196 Joachim Breitner \n* #15197 blizzard_inc \n* #15205 damiano \n* #15210 Ruben Van de Velde \n* #15211 Etienne \n* #15218 Kim Morrison \n* #15226 damiano \n* #15231 grunweg \n* #15233 Yury G. Kudryashov \n* #15249 Kim Morrison \n* #15250 damiano \n* #15255 Kim Morrison \n* #15263 Kevin Buzzard \n* #15266 Rida Hamadani \n* #15272 Patrick Massot \n* #15273 Rida Hamadani \n* #15278 grunweg \n* #15279 grunweg \n* #15281 leanprover-community-mathlib4-bot \n* #15292 R√©my Degenne \n* #15293 Johan Commelin \n* #15298 Johan Commelin \n* #15299 Ruben Van de Velde \n* #15300 Emily Riehl \n* #15305 grunweg \n* #15306 grunweg \n* #15308 grunweg \n* #15309 grunweg \n* #15310 Kim Morrison \n* #15317 leanprover-community-mathlib4-bot \n* #15319 damiano \n* #15324 Yury G. Kudryashov \n* #15328 Ya√´l Dillies \n* #15329 Ya√´l Dillies \n* #15332 blizzard_inc \n* #15334 Matthew Robert Ballard \n* #15340 Ruben Van de Velde \n* #15341 Joachim Breitner \n* #15347 Joachim Breitner \n* #15352 Kim Morrison \n* #15354 leanprover-community-mathlib4-bot \n* #15356 damiano \n* #15361 Kim Morrison \n* #15365 Kim Morrison \n* #15371 sgouezel \n* #15372 leanprover-community-mathlib4-bot \n* #5549 FR \n* #8612 grhkm21 \n\n</details>\n\n---\n\n<details><summary>Reports</summary>\n\n* PRs not corresponding to a commit (merged in June, closed in July?)\n  #13651\n  #14199\n\n* PRs not found by `gh` (merged in July, closed in August?)\n  #15313\n\n</details>\n\n---",
              "createdAt": "2024-08-01T18:01:35Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G-Vb-",
              "body": "### July in Mathlib summary\n\n\n\nBetween 2024-07-01 and 2024-07-31 there were\n* 920 commits to `master` and\n* 919 closed PRs\n\n<details><summary>\nt-algebra t-dynamics, 2 PRs\n</summary>\n\n* #14891 Yury G. Kudryashov \n* #9726 Yury G. Kudryashov \n\n</details><details><summary>\nt-algebra t-order, 9 PRs\n</summary>\n\n* #11979 Scott Carnahan \n* #13148 Ya√´l Dillies \n* #13683 Ya√´l Dillies \n* #14292 Eric Wieser \n* #14479 Scott Carnahan \n* #14732 Scott Carnahan \n* #14807 Scott Carnahan \n* #15327 Ya√´l Dillies \n* #9904 FR \n\n</details><details><summary>\nt-algebra, 126 PRs\n</summary>\n\n* #10846 Scott Carnahan \n* #11974 Amelia Livingston \n* #12010 Amelia Livingston \n* #12434 Jz Pan \n* #12650 Christian Merten \n* #12780 Xavier Roblot \n* #12938 Christopher Hoskin \n* #12996 Scott Carnahan \n* #12998 Scott Carnahan \n* #13023 Bolton Bailey \n* #13034 Ya√´l Dillies \n* #13047 Antoine Chambert-Loir \n* #13064 Filippo A. E. Nuccio \n* #13071 Scott Carnahan \n* #13089 Christopher Hoskin \n* #13161 Ya√´l Dillies \n* #13162 Andrew Yang \n* #13210 Pol'tta / Miyahara K≈ç \n* #13235 Pol'tta / Miyahara K≈ç \n* #13294 Eric Wieser \n* #13421 Scott Carnahan \n* #13422 Scott Carnahan \n* #13430 Scott Carnahan \n* #13533 Jiang Jiedong \n* #13555 Pol'tta / Miyahara K≈ç \n* #13575 Thomas Browning \n* #13583 Joseph Myers \n* #13585 Herman Chau \n* #13630 Thomas Browning \n* #13637 Thomas Browning \n* #13651 Yury G. Kudryashov \n* #13652 Yury G. Kudryashov \n* #13902 Jujian Zhang \n* #13943 Andrew Yang \n* #14086 Christian Merten \n* #14211 Jireh Loreaux \n* #14215 Eric Wieser \n* #14225 Mar√≠a In√©s de Frutos-Fern√°ndez \n* #14232 Jiang Jiedong \n* #14234 Jujian Zhang \n* #14243 Seewoo Lee \n* #14271 Christian Merten \n* #14280 James Sundstrom \n* #14281 Seewoo Lee \n* #14285 Eric Wieser \n* #14290 Kevin Buzzard \n* #14325 Christian Merten \n* #14358 Christian Merten \n* #14366 Christian Merten \n* #14372 Andrew Yang \n* #14373 Andrew Yang \n* #14374 Andrew Yang \n* #14375 Andrew Yang \n* #14413 Jujian Zhang \n* #14418 Filippo A. E. Nuccio \n* #14422 Riccardo Brasca \n* #14452 Ralf Stephan \n* #14453 Jujian Zhang \n* #14454 Antoine Chambert-Loir \n* #14456 Jujian Zhang \n* #14473 Scott Carnahan \n* #14478 Andrew Yang \n* #14481 Ralf Stephan \n* #14512 Whysoserioushah \n* #14534 Christian Merten \n* #14551 Andrew Yang \n* #14601 Daniel Weber \n* #14611 Jz Pan \n* #14622 Pim Otte \n* #14637 Daniel Weber \n* #14639 Daniel Weber \n* #14640 Daniel Weber \n* #14641 Daniel Weber \n* #14643 Daniel Weber \n* #14659 David Kurniadi Angdinata \n* #14667 Daniel Weber \n* #14673 Ludwig Monnerjahn \n* #14674 blizzard_inc \n* #14684 David Kurniadi Angdinata \n* #14701 Daniel Weber \n* #14705 Ya√´l Dillies \n* #14706 Ya√´l Dillies \n* #14710 Daniel Weber \n* #14719 Eric Wieser \n* #14730 Daniel Weber \n* #14735 Jz Pan \n* #14751 Christian Merten \n* #14771 Yury G. Kudryashov \n* #14777 Yury G. Kudryashov \n* #14789 Thomas Browning \n* #14814 Quang Dao \n* #14826 Riccardo Brasca \n* #14829 Riccardo Brasca \n* #14831 judithludwig \n* #14851 Ya√´l Dillies \n* #14856 Thomas Browning \n* #14857 Daniel Weber \n* #14865 Antoine Chambert-Loir \n* #14875 Antoine Chambert-Loir \n* #14895 Ralf Stephan \n* #14922 Florent Schaffhauser \n* #14926 Jireh Loreaux \n* #14941 Florent Schaffhauser \n* #14945 Eric Wieser \n* #14955 Michael Stoll \n* #14965 Daniel Weber \n* #14966 Daniel Weber \n* #14997 Ya√´l Dillies \n* #14998 Ya√´l Dillies \n* #15023 judithludwig \n* #15036 Eric Wieser \n* #15039 Eric Wieser \n* #15073 Christian Merten \n* #15076 Ya√´l Dillies \n* #15134 Ya√´l Dillies \n* #15148 Jz Pan \n* #15151 Pietro Monticone \n* #15185 Jireh Loreaux \n* #15186 Jireh Loreaux \n* #15193 Jz Pan \n* #15235 Yury G. Kudryashov \n* #15236 Yury G. Kudryashov \n* #15287 Yury G. Kudryashov \n* #6595 Christopher Hoskin \n* #7569 Christopher Hoskin \n* #9334 Christopher Hoskin \n\n</details><details><summary>\nt-algebraic-geometry t-algebra, 5 PRs\n</summary>\n\n* #14377 Andrew Yang \n* #14507 Andrew Yang \n* #14550 Andrew Yang \n* #14859 Andrew Yang \n* #15108 Andrew Yang \n\n</details><details><summary>\nt-algebraic-geometry, 25 PRs\n</summary>\n\n* #13885 FMLJohn \n* #13972 Genora51 \n* #13996 Andrew Yang \n* #14231 weihong-xu \n* #14254 Jujian Zhang \n* #14297 Christian Merten \n* #14302 Christian Merten \n* #14328 Christian Merten \n* #14337 Christian Merten \n* #14392 Jo√´l Riou \n* #14429 Andrew Yang \n* #14430 Andrew Yang \n* #14549 Andrew Yang \n* #14690 Jo√´l Riou \n* #14711 Andrew Yang \n* #14748 Andrew Yang \n* #14763 Christian Merten \n* #14868 Andrew Yang \n* #14882 Andrew Yang \n* #14946 Andrew Yang \n* #14992 Andrew Yang \n* #15001 Andrew Yang \n* #15070 Christian Merten \n* #15079 Andrew Yang \n* #15080 Andrew Yang \n\n</details><details><summary>\nt-analysis t-algebra, 2 PRs\n</summary>\n\n* #14423 Yury G. Kudryashov \n* #15207 Ya√´l Dillies \n\nt-analysis t-euclidean-geometry, 1 PR\n* #14666 Ya√´l Dillies \n\n</details><details><summary>\nt-analysis t-measure-probability, 3 PRs\n</summary>\n\n* #11185 grunweg \n* #13353 David Loeffler \n* #15177 Ya√´l Dillies \n\nt-analysis t-order, 1 PR\n* #14459 Yury G. Kudryashov \n\n</details><details><summary>\nt-analysis, 34 PRs\n</summary>\n\n* #12804 Chris Birkbeck \n* #13424 Fr√©d√©ric Dupuis \n* #13676 Fr√©d√©ric Dupuis \n* #13952 Ya√´l Dillies \n* #13968 James Sundstrom \n* #13971 Geoffrey Irving \n* #14065 Fr√©d√©ric Dupuis \n* #14100 Jireh Loreaux \n* #14107 Lorenzo Luccioli \n* #14177 Fr√©d√©ric Dupuis \n* #14432 Fr√©d√©ric Dupuis \n* #14434 Yury G. Kudryashov \n* #14435 Yury G. Kudryashov \n* #14448 Fr√©d√©ric Dupuis \n* #14450 Yury G. Kudryashov \n* #14458 Christopher Hoskin \n* #14502 adomasbaliuka \n* #14545 Jireh Loreaux \n* #14570 igorkhavkine \n* #14593 adomasbaliuka \n* #14648 Anne Baanen \n* #14714 D-Thomine \n* #14737 Fr√©d√©ric Dupuis \n* #14827 Daniel Weber \n* #14918 D-Thomine \n* #15022 Ya√´l Dillies \n* #15031 grunweg \n* #15227 Yury G. Kudryashov \n* #15230 Yury G. Kudryashov \n* #15232 Yury G. Kudryashov \n* #15234 Yury G. Kudryashov \n* #15289 Yury G. Kudryashov \n* #15351 Fr√©d√©ric Dupuis \n* #7236 Vasily Nesterov \n\n</details><details><summary>\nt-category-theory t-algebra, 4 PRs\n</summary>\n\n* #14482 Jujian Zhang \n* #14520 Jo√´l Riou \n* #15058 Jo√´l Riou \n* #15297 Andrew Yang \n\n</details><details><summary>\nt-category-theory t-algebraic-geometry, 4 PRs\n</summary>\n\n* #13464 Jo√´l Riou \n* #14170 Jack McKoen \n* #14171 Jack McKoen \n* #14236 Jack McKoen \n\n</details><details><summary>\nt-category-theory t-condensed, 2 PRs\n</summary>\n\n* #13478 Dagur Asgeirsson \n* #13504 Dagur Asgeirsson \n\n</details><details><summary>\nt-category-theory t-topology t-condensed, 4 PRs\n</summary>\n\n* #14455 Dagur Asgeirsson \n* #14506 Dagur Asgeirsson \n* #14514 Dagur Asgeirsson \n* #14618 Dagur Asgeirsson \n\n</details><details><summary>\nt-category-theory t-topology, 13 PRs\n</summary>\n\n* #13333 Dagur Asgeirsson \n* #13358 Dagur Asgeirsson \n* #13507 Dagur Asgeirsson \n* #13905 Dagur Asgeirsson \n* #13907 Dagur Asgeirsson \n* #13908 Dagur Asgeirsson \n* #13909 Dagur Asgeirsson \n* #13911 Dagur Asgeirsson \n* #13912 Dagur Asgeirsson \n* #14508 Dagur Asgeirsson \n* #15201 Etienne \n* #15359 Dagur Asgeirsson \n* #15362 Dagur Asgeirsson \n\n</details><details><summary>\nt-category-theory, 72 PRs\n</summary>\n\n* #10425 Jo√´l Riou \n* #10981 Yuma Mizuno \n* #11703 Jo√´l Riou \n* #12211 Jo√´l Riou \n* #13012 Jo√´l Riou \n* #13312 Kim Morrison \n* #13313 Kim Morrison \n* #13410 Calle S√∂nne \n* #13486 Dagur Asgeirsson \n* #13639 Jo√´l Riou \n* #13742 Jo√´l Riou \n* #13840 Emily Riehl \n* #13876 Jo√´l Riou \n* #13898 Dagur Asgeirsson \n* #13926 Jo√´l Riou \n* #13947 Dagur Asgeirsson \n* #13963 Jo√´l Riou \n* #14017 Dagur Asgeirsson \n* #14028 Calle S√∂nne \n* #14084 Jo√´l Riou \n* #14087 Jo√´l Riou \n* #14098 Calle S√∂nne \n* #14153 Jo√´l Riou \n* #14187 Jo√´l Riou \n* #14192 Jo√´l Riou \n* #14256 Jo√´l Riou \n* #14258 Jo√´l Riou \n* #14261 Jo√´l Riou \n* #14274 Mario Carneiro \n* #14283 Jo√´l Riou \n* #14291 Jo√´l Riou \n* #14303 Calle S√∂nne \n* #14339 Jo√´l Riou \n* #14340 Jo√´l Riou \n* #14343 Jo√´l Riou \n* #14344 Calle S√∂nne \n* #14353 Jo√´l Riou \n* #14387 Sina Hazratpour \n* #14406 Dagur Asgeirsson \n* #14436 Jo√´l Riou \n* #14447 Kevin Buzzard \n* #14449 Dagur Asgeirsson \n* #14457 Jo√´l Riou \n* #14490 Dagur Asgeirsson \n* #14496 Jo√´l Riou \n* #14524 Calle S√∂nne \n* #14526 Calle S√∂nne \n* #14528 Jo√´l Riou \n* #14538 Jujian Zhang \n* #14548 Andrew Yang \n* #14569 Jo√´l Riou \n* #14649 Jo√´l Riou \n* #14650 Jo√´l Riou \n* #14717 Jo√´l Riou \n* #14722 Moritz Firsching \n* #14734 Jo√´l Riou \n* #14800 Jo√´l Riou \n* #14886 Yuma Mizuno \n* #14890 Jo√´l Riou \n* #14935 Jo√´l Riou \n* #14936 Jo√´l Riou \n* #14951 Jo√´l Riou \n* #14959 Jo√´l Riou \n* #14969 Jo√´l Riou \n* #14971 Jo√´l Riou \n* #14985 Calle S√∂nne \n* #15044 Jo√´l Riou \n* #15056 Andrew Yang \n* #15062 Andrew Yang \n* #15063 Andrew Yang \n* #15157 Jo√´l Riou \n* #15194 Calle S√∂nne \n\n</details><details><summary>\nt-combinatorics t-algebra, 2 PRs\n</summary>\n\n* #14000 Ya√´l Dillies \n* #14808 Scott Carnahan \n\n</details><details><summary>\nt-combinatorics, 19 PRs\n</summary>\n\n* #11667 Pim Otte \n* #12273 Peter Nelson  \n* #12346 Peter Nelson  \n* #12960 Pim Otte \n* #13329 Ya√´l Dillies \n* #13827 Ya√´l Dillies \n* #13910 Rida Hamadani \n* #14212 Eric Wieser \n* #14315 Rida Hamadani \n* #14356 grunweg \n* #14409 Iv√°n Renison \n* #14582 Rida Hamadani \n* #14623 Pim Otte \n* #14647 grunweg \n* #14977 Pim Otte \n* #15005 Ya√´l Dillies \n* #15171 Rida Hamadani \n* #15325 Ya√´l Dillies \n* #8304 Ya√´l Dillies \n\nt-differential-geometry t-topology, 1 PR\n* #13887 Junyan Xu \n\n</details><details><summary>\nt-differential-geometry, 3 PRs\n</summary>\n\n* #14801 grunweg \n* #14802 grunweg \n* #14974 grunweg \n\nt-euclidean-geometry, 1 PR\n* #14682 Ya√´l Dillies \n\n</details><details><summary>\nt-linter, 15 PRs\n</summary>\n\n* #11884 damiano \n* #13658 grunweg \n* #14272 grunweg \n* #14322 damiano \n* #14378 damiano \n* #14540 grunweg \n* #14557 damiano \n* #14558 damiano \n* #14676 grunweg \n* #14696 grunweg \n* #14724 grunweg \n* #14758 grunweg \n* #15010 damiano \n* #15081 damiano \n* #15097 damiano \n\n</details><details><summary>\nt-logic, 9 PRs\n</summary>\n\n* #14299 grunweg \n* #14323 grunweg \n* #14381 Pol'tta / Miyahara K≈ç \n* #14419 Yury G. Kudryashov \n* #14420 Yury G. Kudryashov \n* #14421 Yury G. Kudryashov \n* #14517 hwatheod \n* #15209 Aaron Anderson \n* #15275 Aaron Anderson \n\n</details><details><summary>\nt-measure-probability t-dynamics, 3 PRs\n</summary>\n\n* #14595 Yury G. Kudryashov \n* #15086 Yury G. Kudryashov \n* #15098 Yury G. Kudryashov \n\n</details><details><summary>\nt-measure-probability, 39 PRs\n</summary>\n\n* #11143 Ya√´l Dillies \n* #13871 grunweg \n* #14185 Xavier Roblot \n* #14424 Thomas Zhu \n* #14472 Moritz Firsching \n* #14487 Yury G. Kudryashov \n* #14488 Yury G. Kudryashov \n* #14489 Yury G. Kudryashov \n* #14500 Yury G. Kudryashov \n* #14574 Yury G. Kudryashov \n* #14575 Yury G. Kudryashov \n* #14576 Yury G. Kudryashov \n* #14638 Yury G. Kudryashov \n* #14646 igorkhavkine \n* #14658 Yury G. Kudryashov \n* #14680 Yury G. Kudryashov \n* #14700 Yury G. Kudryashov \n* #14736 Yury G. Kudryashov \n* #14740 Yury G. Kudryashov \n* #14772 Yury G. Kudryashov \n* #14818 Yury G. Kudryashov \n* #14822 Yury G. Kudryashov \n* #14853 igorkhavkine \n* #14933 Yury G. Kudryashov \n* #14954 igorkhavkine \n* #15021 Ya√´l Dillies \n* #15041 Yury G. Kudryashov \n* #15043 Yury G. Kudryashov \n* #15085 Yury G. Kudryashov \n* #15089 Yury G. Kudryashov \n* #15103 Ya√´l Dillies \n* #15105 Ya√´l Dillies \n* #15117 Floris van Doorn \n* #15208 Ya√´l Dillies \n* #15220 Bj√∏rn Kjos-Hanssen \n* #15320 Yury G. Kudryashov \n* #15348 Yury G. Kudryashov \n* #6642 Yury G. Kudryashov \n* #9163 igorkhavkine \n\nt-meta t-algebra, 1 PR\n* #14376 Pol'tta / Miyahara K≈ç \n\n</details><details><summary>\nt-meta t-category-theory, 3 PRs\n</summary>\n\n* #10581 Yuma Mizuno \n* #11133 Yuma Mizuno \n* #15067 Yuma Mizuno \n\n</details><details><summary>\nt-meta, 8 PRs\n</summary>\n\n* #12016 JovanGerb \n* #12525 Kyle Miller \n* #14253 Kyle Miller \n* #14437 damiano \n* #14586 Eric Wieser \n* #14628 Floris van Doorn \n* #15095 Andrew Yang \n* #15364 Floris van Doorn \n\n</details><details><summary>\nt-number-theory t-algebra, 5 PRs\n</summary>\n\n* #13939 Michael Stoll \n* #14176 Kevin Buzzard \n* #14227 Riccardo Brasca \n* #14495 David Loeffler \n* #14653 Riccardo Brasca \n\n</details><details><summary>\nt-number-theory t-analysis, 2 PRs\n</summary>\n\n* #14359 Mar√≠a In√©s de Frutos-Fern√°ndez \n* #14361 Mar√≠a In√©s de Frutos-Fern√°ndez \n\n</details><details><summary>\nt-number-theory, 5 PRs\n</summary>\n\n* #14041 MKaratarakis \n* #14589 L \n* #14597 L \n* #15223 Yury G. Kudryashov \n* #15288 Yury G. Kudryashov \n\n</details><details><summary>\nt-order, 12 PRs\n</summary>\n\n* #10560 Ya√´l Dillies \n* #12175 Christopher Hoskin \n* #13337 Ya√´l Dillies \n* #13505 Ya√´l Dillies \n* #13823 Ya√´l Dillies \n* #14004 Peter Nelson  \n* #14034 Peter Nelson  \n* #14169 Pietro Monticone \n* #14304 grunweg \n* #14467 Kevin Buzzard \n* #14564 D-Thomine \n* #14908 Anthony Bordg \n\nt-topology t-algebra t-dynamics, 1 PR\n* #14493 Yury G. Kudryashov \n\nt-topology t-algebra t-order t-measure-probability, 1 PR\n* #14738 Yury G. Kudryashov \n\n</details><details><summary>\nt-topology t-algebra, 2 PRs\n</summary>\n\n* #11335 Thomas Browning \n* #12800 Mar√≠a In√©s de Frutos-Fern√°ndez \n\n</details><details><summary>\nt-topology t-algebraic-geometry, 2 PRs\n</summary>\n\n* #13178 FMLJohn \n* #14396 Andrew Yang \n\n</details><details><summary>\nt-topology t-analysis, 3 PRs\n</summary>\n\n* #13468 Yury G. Kudryashov \n* #13532 Yury G. Kudryashov \n* #15268 Yury G. Kudryashov \n\nt-topology t-measure-probability, 1 PR\n* #14668 Yury G. Kudryashov \n\nt-topology t-order t-measure-probability, 1 PR\n* #15016 Yury G. Kudryashov \n\n</details><details><summary>\nt-topology t-order, 3 PRs\n</summary>\n\n* #14591 kkytola \n* #14817 Yury G. Kudryashov \n* #15267 Yury G. Kudryashov \n\n</details><details><summary>\nt-topology, 30 PRs\n</summary>\n\n* #11746 vin-gui \n* #12221 Christopher Hoskin \n* #12536 Matias Heikkil√§ \n* #12979 Filippo A. E. Nuccio \n* #13228 Yury G. Kudryashov \n* #13451 Yury G. Kudryashov \n* #13517 Steven Clontz \n* #13635 Etienne \n* #13903 Dagur Asgeirsson \n* #13990 Ya√´l Dillies \n* #14001 Andrew Yang \n* #14128 Pietro Monticone \n* #14240 Jireh Loreaux \n* #14275 Yury G. Kudryashov \n* #14329 Pietro Monticone \n* #14433 Yakov Pechersky \n* #14504 Janette Set√§l√§ \n* #14592 Yury G. Kudryashov \n* #14741 Yury G. Kudryashov \n* #14742 Yury G. Kudryashov \n* #14787 Daniel Weber \n* #14824 Hannah Scholz \n* #14834 Daniel Weber \n* #15084 Yury G. Kudryashov \n* #15174 Etienne \n* #15175 grunweg \n* #15176 Etienne \n* #15202 Etienne \n* #15216 Yury G. Kudryashov \n* #15323 Yury G. Kudryashov \n\n</details><details><summary>\nMiscellaneous, 440 PRs\n</summary>\n\n* #11243 Ya√´l Dillies \n* #11329 Matthew Robert Ballard \n* #11372 Chris Wong \n* #11891 Ruben Van de Velde \n* #12456 Chris Birkbeck \n* #12604 Chris Birkbeck \n* #12770 Chris Birkbeck \n* #12987 sgouezel \n* #13279 Pol'tta / Miyahara K≈ç \n* #13280 Pol'tta / Miyahara K≈ç \n* #13338 Ya√´l Dillies \n* #13407 Shrys \n* #13568 Ya√´l Dillies \n* #13697 JonBannon \n* #13816 Steven Clontz \n* #13832 Ya√´l Dillies \n* #13834 Ruben Van de Velde \n* #13858 grunweg \n* #13899 Ya√´l Dillies \n* #13944 Ruben Van de Velde \n* #13957 Jakob von Raumer \n* #13966 kkytola \n* #13967 Matthew Robert Ballard \n* #13995 Antoine Chambert-Loir \n* #14043 Rida Hamadani \n* #14095 ThomasLanard \n* #14105 damiano \n* #14114 Kim Morrison \n* #14117 Matthew Robert Ballard \n* #14120 Matthew Robert Ballard \n* #14121 Matthew Robert Ballard \n* #14122 Matthew Robert Ballard \n* #14126 Matthew Robert Ballard \n* #14129 Matthew Robert Ballard \n* #14163 Wang Haocheng  \n* #14168 Ruben Van de Velde \n* #14181 Ruben Van de Velde \n* #14184 Stefan Kebekus \n* #14195 Peter Nelson  \n* #14196 Peter Nelson  \n* #14197 Peter Nelson  \n* #14199 Lorenzo Luccioli \n* #14207 Chris Hughes \n* #14217 Yury G. Kudryashov \n* #14226 Kim Morrison \n* #14228 Johan Commelin \n* #14251 Eric Wieser \n* #14282 Eric Wieser \n* #14286 Ralf Stephan \n* #14307 Kim Morrison \n* #14309 grhkm21 \n* #14311 Kim Morrison \n* #14314 Kim Morrison \n* #14316 Kim Morrison \n* #14317 leanprover-community-mathlib4-bot \n* #14320 leanprover-community-mathlib4-bot \n* #14321 leanprover-community-mathlib4-bot \n* #14324 Pietro Monticone \n* #14326 Kim Morrison \n* #14331 Ruben Van de Velde \n* #14334 Dagur Asgeirsson \n* #14335 Matthew Robert Ballard \n* #14336 Matthew Robert Ballard \n* #14338 Matthew Robert Ballard \n* #14341 Matthew Robert Ballard \n* #14346 Kim Morrison \n* #14347 Kim Morrison \n* #14349 damiano \n* #14351 Matthew Robert Ballard \n* #14354 grunweg \n* #14355 grunweg \n* #14357 Ralf Stephan \n* #14362 grunweg \n* #14363 damiano \n* #14367 D-Thomine \n* #14370 Matthew Robert Ballard \n* #14371 Matthew Robert Ballard \n* #14380 Matthew Robert Ballard \n* #14383 Kim Morrison \n* #14384 damiano \n* #14385 damiano \n* #14388 damiano \n* #14390 Matthew Robert Ballard \n* #14391 Jz Pan \n* #14393 Matthew Robert Ballard \n* #14394 leanprover-community-mathlib4-bot \n* #14405 leanprover-community-mathlib4-bot \n* #14407 Johan Commelin \n* #14410 Johan Commelin \n* #14415 Johan Commelin \n* #14417 Mario Carneiro \n* #14425 Ya√´l Dillies \n* #14431 Eric Wieser \n* #14439 ThomasLanard \n* #14440 leanprover-community-mathlib4-bot \n* #14441 leanprover-community-mathlib4-bot \n* #14443 Sina Hazratpour \n* #14445 Matthew Robert Ballard \n* #14446 Riccardo Brasca \n* #14451 Matthew Robert Ballard \n* #14461 Matthew Robert Ballard \n* #14462 Jujian Zhang \n* #14463 hwatheod \n* #14464 Kim Morrison \n* #14465 Kim Morrison \n* #14466 Kim Morrison \n* #14468 damiano \n* #14469 damiano \n* #14470 Johan Commelin \n* #14474 Moritz Firsching \n* #14475 Moritz Firsching \n* #14476 Moritz Firsching \n* #14485 Ruben Van de Velde \n* #14491 damiano \n* #14492 Ruben Van de Velde \n* #14494 leanprover-community-mathlib4-bot \n* #14497 Markus Himmel \n* #14499 adomasbaliuka \n* #14505 Moritz Firsching \n* #14511 grunweg \n* #14513 Kim Morrison \n* #14516 Ruben Van de Velde \n* #14518 leanprover-community-mathlib4-bot \n* #14519 Sina Hazratpour \n* #14521 grunweg \n* #14522 Kim Morrison \n* #14525 leanprover-community-mathlib4-bot \n* #14527 Kim Morrison \n* #14529 Bhavik Mehta \n* #14530 Matthew Robert Ballard \n* #14531 Matthew Robert Ballard \n* #14533 Filippo A. E. Nuccio \n* #14536 Matthew Robert Ballard \n* #14537 grunweg \n* #14541 Matthew Robert Ballard \n* #14543 grunweg \n* #14546 leanprover-community-mathlib4-bot \n* #14547 leanprover-community-mathlib4-bot \n* #14552 Moritz Firsching \n* #14553 Moritz Firsching \n* #14554 grunweg \n* #14555 grunweg \n* #14556 grunweg \n* #14559 Johan Commelin \n* #14560 grunweg \n* #14567 Matthew Robert Ballard \n* #14568 Ruben Van de Velde \n* #14572 Chris Birkbeck \n* #14573 Chris Birkbeck \n* #14577 Kim Morrison \n* #14578 leanprover-community-mathlib4-bot \n* #14584 leanprover-community-mathlib4-bot \n* #14600 hwatheod \n* #14602 Moritz Firsching \n* #14605 Johan Commelin \n* #14606 Ralf Stephan \n* #14607 grunweg \n* #14609 grunweg \n* #14610 grunweg \n* #14612 leanprover-community-mathlib4-bot \n* #14614 Moritz Firsching \n* #14615 Anne Baanen \n* #14616 Wrenna Robson \n* #14617 damiano \n* #14620 grunweg \n* #14621 grunweg \n* #14624 grunweg \n* #14625 grunweg \n* #14629 Kevin Buzzard \n* #14630 Ruben Van de Velde \n* #14631 Matthew Robert Ballard \n* #14632 Fr√©d√©ric Dupuis \n* #14633 Eric Wieser \n* #14634 Kim Morrison \n* #14635 Kim Morrison \n* #14636 Kim Morrison \n* #14642 Pol'tta / Miyahara K≈ç \n* #14645 damiano \n* #14651 Floris van Doorn \n* #14655 Ya√´l Dillies \n* #14656 Emily Riehl \n* #14657 grunweg \n* #14661 Ruben Van de Velde \n* #14662 grunweg \n* #14663 Bryan Gin-ge Chen \n* #14664 damiano \n* #14670 Ruben Van de Velde \n* #14671 Ruben Van de Velde \n* #14672 Ruben Van de Velde \n* #14677 Ya√´l Dillies \n* #14678 Ruben Van de Velde \n* #14679 leanprover-community-mathlib4-bot \n* #14681 leanprover-community-mathlib4-bot \n* #14683 Fr√©d√©ric Dupuis \n* #14689 Jz Pan \n* #14692 Jz Pan \n* #14693 grunweg \n* #14694 grunweg \n* #14695 grunweg \n* #14703 Ruben Van de Velde \n* #14707 Ruben Van de Velde \n* #14709 grunweg \n* #14713 Bryan Gin-ge Chen \n* #14723 Moritz Firsching \n* #14725 grunweg \n* #14726 grunweg \n* #14728 grunweg \n* #14729 Eric Wieser \n* #14743 Johan Commelin \n* #14745 Johan Commelin \n* #14746 damiano \n* #14749 Alessandro Iraci \n* #14750 Pol'tta / Miyahara K≈ç \n* #14753 Pol'tta / Miyahara K≈ç \n* #14754 Johan Commelin \n* #14755 Johan Commelin \n* #14759 Johan Commelin \n* #14761 Johan Commelin \n* #14762 Johan Commelin \n* #14765 Johan Commelin \n* #14767 Xavier Roblot \n* #14769 Johan Commelin \n* #14770 grunweg \n* #14773 Kim Morrison \n* #14775 Adam Topaz \n* #14778 Kim Morrison \n* #14785 Moritz Firsching \n* #14786 Kim Morrison \n* #14788 Johan Commelin \n* #14790 Moritz Firsching \n* #14791 Moritz Firsching \n* #14792 Johan Commelin \n* #14794 Johan Commelin \n* #14795 Johan Commelin \n* #14796 Ruben Van de Velde \n* #14797 Fabrizio Barroero \n* #14804 Kim Morrison \n* #14805 grunweg \n* #14806 Johan Commelin \n* #14810 Kim Morrison \n* #14811 Jz Pan \n* #14813 Kim Morrison \n* #14815 Yuma Mizuno \n* #14816 Pol'tta / Miyahara K≈ç \n* #14819 Johan Commelin \n* #14821 Johan Commelin \n* #14823 Whysoserioushah \n* #14825 Patrick Massot \n* #14828 grunweg \n* #14830 damiano \n* #14832 Samyak Dhar Tuladhar \n* #14833 Zheng Yuan \n* #14835 D-Thomine \n* #14836 Yakov Pechersky \n* #14838 Joseph Myers \n* #14840 damiano \n* #14841 Joseph Myers \n* #14842 Joseph Myers \n* #14843 Kim Morrison \n* #14845 Kim Morrison \n* #14847 leanprover-community-mathlib4-bot \n* #14848 Ya√´l Dillies \n* #14849 Kim Morrison \n* #14850 Kim Morrison \n* #14852 Mario Carneiro \n* #14854 Thomas Browning \n* #14858 Robert Maxton \n* #14861 Ya√´l Dillies \n* #14862 Johan Commelin \n* #14864 Filippo A. E. Nuccio \n* #14870 Ya√´l Dillies \n* #14871 Ya√´l Dillies \n* #14872 Filippo A. E. Nuccio \n* #14877 Matthew Robert Ballard \n* #14878 damiano \n* #14879 Kim Morrison \n* #14880 Kim Morrison \n* #14881 Matthew Robert Ballard \n* #14883 grunweg \n* #14884 grunweg \n* #14887 Kim Morrison \n* #14892 grunweg \n* #14896 grunweg \n* #14899 damiano \n* #14900 damiano \n* #14901 Matthew Robert Ballard \n* #14902 grunweg \n* #14907 Johan Commelin \n* #14909 damiano \n* #14912 Riccardo Brasca \n* #14913 Ralf Stephan \n* #14914 grunweg \n* #14915 grunweg \n* #14916 grunweg \n* #14917 damiano \n* #14919 damiano \n* #14920 Joseph Myers \n* #14924 Yury G. Kudryashov \n* #14930 leanprover-community-mathlib4-bot \n* #14934 Yury G. Kudryashov \n* #14937 Ya√´l Dillies \n* #14939 grunweg \n* #14944 Ralf Stephan \n* #14948 Ya√´l Dillies \n* #14949 Ralf Stephan \n* #14953 Riccardo Brasca \n* #14956 damiano \n* #14958 Peter Nelson  \n* #14960 Ralf Stephan \n* #14961 Peter Nelson  \n* #14962 grunweg \n* #14963 grunweg \n* #14964 Colin Jones \n* #14968 Ruben Van de Velde \n* #14970 Joachim Breitner \n* #14973 Ralf Stephan \n* #14978 Pol'tta / Miyahara K≈ç \n* #14979 damiano \n* #14980 Pol'tta / Miyahara K≈ç \n* #14982 damiano \n* #14984 Pol'tta / Miyahara K≈ç \n* #14993 Kim Morrison \n* #14995 Yury G. Kudryashov \n* #15002 Johan Commelin \n* #15003 Johan Commelin \n* #15004 Ralf Stephan \n* #15006 Ya√´l Dillies \n* #15008 Ruben Van de Velde \n* #15011 grunweg \n* #15013 grunweg \n* #15015 grunweg \n* #15025 Peter Nelson  \n* #15027 grunweg \n* #15029 Kim Morrison \n* #15032 grunweg \n* #15034 grunweg \n* #15035 grunweg \n* #15037 grunweg \n* #15040 Kim Morrison \n* #15042 leanprover-community-mathlib4-bot \n* #15048 Ya√´l Dillies \n* #15052 grunweg \n* #15054 adomasbaliuka \n* #15057 Peter Nelson  \n* #15059 Matthew Robert Ballard \n* #15060 Peter Nelson  \n* #15061 Peter Nelson  \n* #15065 Matthew Robert Ballard \n* #15083 Matthew Robert Ballard \n* #15087 Kim Morrison \n* #15091 Kyle Miller \n* #15100 Wojciech Nawrocki \n* #15101 grunweg \n* #15102 grunweg \n* #15104 damiano \n* #15106 Ruben Van de Velde \n* #15107 damiano \n* #15110 Peter Nelson  \n* #15111 damiano \n* #15118 Kim Morrison \n* #15119 Kim Morrison \n* #15120 Kim Morrison \n* #15124 Anand Rao \n* #15125 Kim Morrison \n* #15126 Kim Morrison \n* #15128 grunweg \n* #15130 grunweg \n* #15133 grunweg \n* #15137 blizzard_inc \n* #15138 leanprover-community-mathlib4-bot \n* #15139 Kyle Miller \n* #15142 Kim Morrison \n* #15143 Kim Morrison \n* #15144 Jireh Loreaux \n* #15146 Jireh Loreaux \n* #15149 Kim Morrison \n* #15150 Kim Morrison \n* #15153 leanprover-community-mathlib4-bot \n* #15155 Scott Carnahan \n* #15159 Etienne \n* #15163 Jireh Loreaux \n* #15164 blizzard_inc \n* #15165 Jireh Loreaux \n* #15166 Jireh Loreaux \n* #15169 blizzard_inc \n* #15172 grunweg \n* #15178 blizzard_inc \n* #15179 damiano \n* #15182 Jireh Loreaux \n* #15183 Jireh Loreaux \n* #15190 damiano \n* #15195 damiano \n* #15196 Joachim Breitner \n* #15197 blizzard_inc \n* #15205 damiano \n* #15210 Ruben Van de Velde \n* #15211 Etienne \n* #15218 Kim Morrison \n* #15226 damiano \n* #15231 grunweg \n* #15233 Yury G. Kudryashov \n* #15249 Kim Morrison \n* #15250 damiano \n* #15255 Kim Morrison \n* #15263 Kevin Buzzard \n* #15266 Rida Hamadani \n* #15272 Patrick Massot \n* #15273 Rida Hamadani \n* #15278 grunweg \n* #15279 grunweg \n* #15281 leanprover-community-mathlib4-bot \n* #15292 R√©my Degenne \n* #15293 Johan Commelin \n* #15298 Johan Commelin \n* #15299 Ruben Van de Velde \n* #15300 Emily Riehl \n* #15305 grunweg \n* #15306 grunweg \n* #15308 grunweg \n* #15309 grunweg \n* #15310 Kim Morrison \n* #15317 leanprover-community-mathlib4-bot \n* #15319 damiano \n* #15324 Yury G. Kudryashov \n* #15328 Ya√´l Dillies \n* #15329 Ya√´l Dillies \n* #15332 blizzard_inc \n* #15334 Matthew Robert Ballard \n* #15340 Ruben Van de Velde \n* #15341 Joachim Breitner \n* #15347 Joachim Breitner \n* #15352 Kim Morrison \n* #15354 leanprover-community-mathlib4-bot \n* #15356 damiano \n* #15361 Kim Morrison \n* #15365 Kim Morrison \n* #15371 sgouezel \n* #15372 leanprover-community-mathlib4-bot \n* #5549 FR \n* #8612 grhkm21 \n\n</details>\n\n---\n\n<details><summary>Reports</summary>\n\n* PRs not corresponding to a commit (merged in June, closed in July?)\n  #13651\n  #14199\n\n* PRs not found by `gh` (merged in July, closed in August?)\n  #15313\n\n</details>\n\n---",
              "createdAt": "2024-08-02T04:03:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6G-nlW",
              "body": "any comment",
              "createdAt": "2024-08-02T05:04:28Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dUd3w",
              "body": "Bot, give me a report!",
              "createdAt": "2025-02-06T10:14:01Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-07-31T07:22:17Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": ".github/workflows/monthly_pr_report.yaml",
              "additions": 51,
              "deletions": 0
            },
            {
              "path": "scripts/find_labels.sh",
              "additions": 102,
              "deletions": 0
            }
          ]
        },
        "headRefName": "adomani/yd_find_label",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c529Mz2",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            }
          ]
        },
        "number": 15355,
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6D9hD0",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-08-01T20:56:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6D9lzG",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-08-01T21:01:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6D9onj",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-08-01T21:04:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6D_WCM",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-08-02T02:53:45Z"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LTIw",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211150348/job/28251968291"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LTDQ",
                "name": "Blog draft",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211150343/job/28251968269"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LSqg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211150339/job/28251968170"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LStQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211150340/job/28251968181"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LPsA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149982/job/28251967408"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LQDg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149984/job/28251967502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LT-Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211150345/job/28251968505"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LPIQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149982/job/28251967265"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LO9g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149984/job/28251967222"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LTXQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211150345/job/28251968349"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LOZg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149982/job/28251967078"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LOYA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149984/job/28251967072"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LQQQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149982/job/28251967553"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LPgg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149984/job/28251967362"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LQ0g",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149982/job/28251967698"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_bR9Q",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10211149984/job/28252230133"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LmtQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28251973301"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGk_LoJA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15355&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: MiM PR report",
        "updatedAt": "2025-02-06T10:14:02Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
      }
    }
  }
}
