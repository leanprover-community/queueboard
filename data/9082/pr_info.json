{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 200,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Timeroot"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`List.destutter` behaves nicely when the condition is a _cotransitive_ relation, and even better when it's a _coequivalence_ relation. This proves that behavior.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\nPart of #9052.",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5vFNyF",
              "body": "Alright, I dropped the \"Coequivalence\" and \"Cotransitive\" stuff; now everything uses `compl`. I added an instance for `NEq` to get the right stuff going. Also adding the `destutter_map_inj` for injective maps.",
              "createdAt": "2023-12-20T00:04:37Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5vFdYw",
              "body": "I removed the dependence on #9081 since it's not using any of that code now.",
              "createdAt": "2023-12-20T01:31:06Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5xLTdL",
              "body": "I don't have time to review this any further but I was globally happy with it during my last review. So whoever takes over reviewing should only look for local issues.",
              "createdAt": "2024-01-18T16:13:50Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zEbSI",
              "body": "@urkud other stuff this needs?",
              "createdAt": "2024-02-06T18:38:08Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5_K6s_",
              "body": "@YaelDillies do you know who else could review this? Other PRs are still blocked by it and it's been several months.",
              "createdAt": "2024-05-27T14:11:36Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QgqGl",
              "body": "I'm sorry for the delay. I'm going to merge `master` and fix compile now, then review it tonight or tomorrow.",
              "createdAt": "2024-10-20T03:02:38Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QhhlA",
              "body": "Wow sorry, this completely fell off my radar. I guess I will wait for Yury to merge master, but yes we should get that in!",
              "createdAt": "2024-10-20T07:49:49Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S6q5V",
              "body": "Lightly bumping this @urkud :) If you don't have time, I can try to find time to update to master, but it won't be for a bit",
              "createdAt": "2024-11-08T14:06:45Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S8GLb",
              "body": "### PR summary [cbd79155e4](https://github.com/leanprover-community/mathlib4/pull/9082/commits/cbd79155e4f2b3b2955ff70a113fe455e81d6e7f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Chain.length_le_length_destutter`\n`+ Ne.instIsEquiv_compl`\n`+ Sublist.length_destutter'_mono`\n`+ getD_replicate`\n`+ getD_reverse`\n`+ le_length_destutter'_cons`\n`+ length_destutter'_congr`\n`+ length_destutter'_cotrans_ge`\n`+ length_destutter_cons_ge_length_destutter`\n`+ length_destutter_maximal_chain_neg_trans`\n`+ length_destutter_ne_cons_ge_length_destutter`\n`+ map_destutter`\n`+ map_destutter_ne`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-11-08T16:35:05Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TA4TU",
              "body": "I'm sorry for the delay. I failed to finish it before traveling, then forgot to come back. I'm going to merge my local changes with @YaelDillies 's fixes today. I cherry-picked a couple of lemmas that are ready to get merged to a new PR.",
              "createdAt": "2024-11-09T22:23:47Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TBU8r",
              "body": "Asked a question about `List.destutter'` on Zulip: https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/List.2Edestutter'",
              "createdAt": "2024-11-10T05:52:54Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ViTs2",
              "body": "Is this good to merge now?",
              "createdAt": "2024-11-30T02:45:19Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ViUzu",
              "body": "Oh, I see the Zulip thread left this unresolved. I guess I'll wait for that then",
              "createdAt": "2024-11-30T03:01:21Z",
              "author": {
                "login": "Timeroot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "16268beebc5b14596f62a02fae2f60e52e53ad08",
                "additions": 234,
                "deletions": 1,
                "committedDate": "2024-11-08T16:31:30Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "726340e71586c8d5d2d6f334f8dca9939172078f",
                "additions": 62,
                "deletions": 46,
                "committedDate": "2024-11-08T16:33:32Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3a5b6c111597c448a8d8b48f1b5601dd83cbbe5d",
                "additions": 20,
                "deletions": 16,
                "committedDate": "2024-11-08T16:33:33Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b3e66dfc3701ed906c8dcb66d4bd8837b43e3899",
                "additions": 12,
                "deletions": 12,
                "committedDate": "2024-11-08T16:33:33Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7badce947886737a3c26ae0539b632f19e57cad7",
                "additions": 6,
                "deletions": 11,
                "committedDate": "2024-11-08T16:33:33Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f037d0a6e3da8e17af48168c3f2f9ea190c372c5",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2024-11-08T16:33:33Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e92cb2507898a4c73355eb2b4721e72f0da17fab",
                "additions": 44,
                "deletions": 66,
                "committedDate": "2024-11-08T16:33:53Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "de9a42b82c561fc7d705dc33828259f439587f16",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2024-11-08T16:33:53Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "alex.meiburg@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c617bb5730ff393027c1d490e5e9f6e93a2ff179",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-11-08T16:34:06Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocvwQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918172/job/32724430785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoc2NQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918726/job/32724432437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoc1SQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918717/job/32724432201"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocvyg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918186/job/32724430794"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocyLw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918211/job/32724431407"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoc4rA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918711/job/32724433068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoczyw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918186/job/32724431819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocwNw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918211/job/32724430903"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoc3Dg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918711/job/32724432654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocz2Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918211/job/32724431833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocx4w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918186/job/32724431331"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoc1vg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918186/job/32724432318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoxpIQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11745918211/job/32724773153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoeQ7A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32724455660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnocmNA",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnoewAA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9082&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4fe3ef079980e7d5e782e715d28414cc19eddabb",
                "additions": 4,
                "deletions": 12,
                "committedDate": "2024-11-08T17:21:19Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqI_A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746612232/job/32726747388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqJVg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746612246/job/32726747478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqD0Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611584/job/32726746065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqF-Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611591/job/32726746617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqJKg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746612237/job/32726747434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqGPg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611584/job/32726746686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqEgQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611591/job/32726746241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqKzA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746612237/job/32726747852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqDZQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611591/job/32726745957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqE5w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611584/job/32726746343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqqHeQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611584/job/32726747001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnsAPmA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11746611591/job/32728158104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqq_JA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32726761252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnqr4yA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9082&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "05086e8e4811ef1be7213a7310e572f4568c901b",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2024-11-09T21:40:32Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvPSw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649149/job/32759336779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvPeA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649153/job/32759336824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvOUw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649024/job/32759336531"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvOwg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649025/job/32759336642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvPTQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649152/job/32759336781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvOyw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649024/job/32759336651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvOVA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649025/job/32759336532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvPhw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649152/job/32759336839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvOjQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649024/job/32759336589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvOjg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649025/job/32759336590"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvO-A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649024/job/32759336696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoKBzlA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11759649025/job/32759640980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvdxA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32759340484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoJvr5g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9082&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "cbd79155e4f2b3b2955ff70a113fe455e81d6e7f",
                "additions": 18659,
                "deletions": 9471,
                "committedDate": "2024-11-12T10:27:51Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2k5SEg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838089/job/33727336978"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2kzeew",
                        "name": "Cross off linked issues",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094799145/job/33727241851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2k5SZg",
                        "name": "Cross off linked issues",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838084/job/33727337062"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk7BCA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374705/job/32854950152"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2k5SDg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838092/job/33727336974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk7A0A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374714/job/32854950096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk678w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854948851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk69NA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32854949172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk7CeQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374761/job/32854950521"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2k5SVQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838085/job/33727337045"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk6-xw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854949575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk68Dg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32854948878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk7BGg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374761/job/32854950170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2k5SAw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838085/job/33727336963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk69Og",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854949178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk6-dg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32854949494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk7AWQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854949977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpm35kw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32856996243"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2k5hQg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33727340866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpk8jeg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9082&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-12-15T15:45:09Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/List/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/Destutter.lean",
              "additions": 185,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/List/GetD.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Basic.lean",
              "additions": 4,
              "deletions": 0
            }
          ]
        },
        "headRefName": "destutter_coequiv",
        "headRefOid": "cbd79155e4f2b3b2955ff70a113fe455e81d6e7f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5iH3Nm",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5rg2Y8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-01-04T09:17:26Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 9082,
        "potentialMergeCommit": {
          "oid": "3ec9386bb1ef86baa67078a7377af447acb82280"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM3OTg0ODUx",
                "login": "ericrbg"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5qbS0q",
              "body": "I've added the \"proper\" depending relation - the bot should now do a little bit of work for you!\r\n\r\nA few comments, I think the rest of the docstrings should be edited in similar ways too.\r\n\r\nThanks for all this! Contributing to Mathlib for the first time is hard and long sometimes, but we really appreciate it :)\r\n\r\ncc @YaelDillies so you can see where `IsCoequiv` is used",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-12-17T22:49:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qdbuW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-18T08:18:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qtSih",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-20T06:44:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qtUtD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-20T06:53:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qtVcQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-20T06:56:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qtVhR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-20T06:57:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rBPwA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2023-12-23T20:54:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rBP1M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2023-12-23T20:56:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rFUu0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-26T19:40:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rR5a8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-01T19:10:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rV6Ps",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-01-02T19:28:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rW3sl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-02T22:12:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rYPlA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-01-03T08:33:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5reQeY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-03T21:28:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5reRJT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-03T21:31:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5reRbZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-03T21:32:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5reSpb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-03T21:37:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5reUom",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-03T21:45:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5reVl6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-03T21:48:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rg2Y8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-01-04T09:17:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5t9GPa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-01-25T21:43:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5t9H9H",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-01-25T21:48:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5uRASk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-01-29T23:17:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VMVgm",
                    "body": "```suggestion\r\n/-- `destutter'` always has length at least 1. -/\r\n```\r\nand similar through the file",
                    "createdAt": "2023-12-17T22:44:45Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VMVh8",
                    "body": "```suggestion\r\ntheorem length_destutter'_pos : 0 < (destutter' R a l).length := by\r\n```",
                    "createdAt": "2023-12-17T22:45:01Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VMVmq",
                    "body": "```suggestion\r\n/-- For a relation-preserving map, `destutter'` commutes with `map`. -/\r\n```\r\n\r\n@YaelDillies, should there be a version for `RelHom`?",
                    "createdAt": "2023-12-17T22:45:50Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5VNsYW",
                    "body": "Probably not. We should just state this for injective maps because I doubt we care about any other relation than `≠`.",
                    "createdAt": "2023-12-18T08:18:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VMVsi",
                    "body": "This is great! I think the docstring is the wrong place for it - I'd sprinkle it in through the proof.",
                    "createdAt": "2023-12-17T22:47:29Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VX0-W",
                    "body": "```suggestion\r\ntheorem map_destutter_ne {f : α → β} (h : Function.Injective f) [DecidableEq α] [DecidableEq β] :\r\n```\r\nAlso feel free to `open Function` at the top to be able to write\r\n```suggestion\r\ntheorem map_destutter_ne {f : α → β} (h : Injective f) [DecidableEq α] [DecidableEq β] :\r\n```",
                    "createdAt": "2023-12-20T06:44:37Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VX2W8",
                    "body": "```suggestion\r\ntheorem length_destutter' [IsEquiv α Rᶜ] (hab : ¬R a b) :\r\n```",
                    "createdAt": "2023-12-20T06:53:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VX23l",
                    "body": "```suggestion\r\ntheorem le_length_destutter' [IsEquiv α Rᶜ] :\r\n    (List.destutter' R b l).length ≤ (List.destutter' R a (b :: l)).length := by\r\n```",
                    "createdAt": "2023-12-20T06:56:52Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Vkxq2",
                    "body": "Swapped this and similar inequalities",
                    "createdAt": "2023-12-23T20:54:22Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VX26b",
                    "body": "```suggestion\r\n    by_cases hac : R a c\r\n```\r\nand swap the two branches",
                    "createdAt": "2023-12-20T06:57:13Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Vkxzc",
                    "body": "This actually doesn't easily work. Using the `Rᶜ a c` is a deliberate choice because it helps the typeclass inference realize that we're talking about `Rᶜ` instead of just `R`, and lets it find the relevant `trans Rᶜ`. With `by_cases hac : R a c`, the `neg` branch gets `¬R a c` which doesn't work with the typeclass inference like `Rᶜ a c` does. Of course you can get around this but it adds several lines of noise. (Maybe there's a super-easy transparent way that I'm missing.)",
                    "createdAt": "2023-12-23T20:56:47Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5VoJ60",
                    "body": "You can always do\r\n```\r\nobtain hac | hac : R a c ∨ Rᶜ a c := em _\r\n```",
                    "createdAt": "2023-12-26T19:40:13Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5VxoMt",
                    "body": "Alrighty, changed this",
                    "createdAt": "2024-01-01T19:10:15Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V0NsH",
                    "body": "Why not just\r\n```suggestion\r\n    · have hbc : ¬Rᶜ b c := mt (_root_.trans hab) (not_not.2 hac)\r\n      simp [destutter', if_pos hac, if_pos (not_not.1 hbc)]\r\n    · have hbc : ¬R b c := trans (symm hab) hac\r\n```",
                    "createdAt": "2024-01-02T19:28:57Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V00Lh",
                    "body": "Done, also dropped an extra couple `Classical.`s",
                    "createdAt": "2024-01-02T22:12:58Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V1xzz",
                    "body": "```suggestion\r\ntheorem Sublist.of_cons_of_ne {a b} (h₁ : a ≠ b) (h₂ : a :: l₁ <+ b :: l₂) : a :: l₁ <+ l₂ := by\r\n```",
                    "createdAt": "2024-01-03T07:57:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V1yVF",
                    "body": "```suggestion\r\ntheorem getD_replicate {y i n} (h : i < n) :\r\n```",
                    "createdAt": "2024-01-03T08:01:08Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V1yfE",
                    "body": "```suggestion\r\ntheorem destutter'_ne_nil : destutter' R a l ≠ [] = by\r\n```\r\nis the more canonical spelling",
                    "createdAt": "2024-01-03T08:02:16Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V48us",
                    "body": "Alright! So it turns out `destutter'_ne_nil` already exists so I just changed my one usage,\r\n`exact length_destutter'_pos _ _`\r\ninto\r\n`List.length_pos_of_ne_nil (destutter'_ne_nil _ _)`",
                    "createdAt": "2024-01-03T21:48:52Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V1ynZ",
                    "body": "```suggestion\r\ntheorem map_destutter (f : α → β) (h : ∀ a b, R a b ↔ R₂ (f a) (f b)) :\r\n```",
                    "createdAt": "2024-01-03T08:03:12Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V1yy2",
                    "body": "```suggestion\r\n  map_destutter l _ f fun _ _ ↦ h.ne_iff.symm\r\n```",
                    "createdAt": "2024-01-03T08:04:08Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V12xs",
                    "body": "Just FYI your `destutter'` won't turn into a link in the docs unless you \"fully qualify\" the name:\r\n```suggestion\r\n/-- `List.destutter'` on a relation like `≠`, whose negation is an equivalence, gives the same\r\nlength if the first elements are not related. -/\r\n```\r\nAlso, docstrings end with `-/`, not `--/`. Be careful! Else you'll end up with docstrings with a trailing `-`.",
                    "createdAt": "2024-01-03T08:24:18Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V13Bh",
                    "body": "```suggestion\r\n    (destutter' R a l).length = (destutter' R b l).length := by\r\n```\r\nor\r\n```suggestion\r\n    (l.destutter' R a).length = (l.destutter' R b).length := by\r\n```",
                    "createdAt": "2024-01-03T08:25:39Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V13HH",
                    "body": "```suggestion\r\ntheorem length_destutter'_congr [IsEquiv α Rᶜ] (hab : ¬R a b) :\r\n```\r\nsounds more accurate",
                    "createdAt": "2024-01-03T08:26:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V13gU",
                    "body": "Does this used twice not imply ` length_destutter'` straightforwardly?",
                    "createdAt": "2024-01-03T08:28:16Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V44FA",
                    "body": "It is, good point. Changed",
                    "createdAt": "2024-01-03T21:28:36Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V13iO",
                    "body": "```suggestion\r\ntheorem length_destutter_ne_cons_ge_length_destutter [DecidableEq α] :\r\n```",
                    "createdAt": "2024-01-03T08:28:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V132w",
                    "body": "Can you generalise that to\r\n```suggestion\r\ntheorem Suffix.length_destutter'_mono [IsEquiv α Rᶜ] (h : a :: l₁ <:+ b :: l₂) :\r\n    (List.destutter' R a l₁).length ≤ (List.destutter' R b l₂).length := by\r\n```",
                    "createdAt": "2024-01-03T08:30:17Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V44tO",
                    "body": "I think that's a correct statement as written, but it would probably just be an induction with `le_length_destutter'` as the inductive step. I don't really know anything about `Suffix` and I'm not super motivated to dive into that atm, so I hope it's alright I skip this one.",
                    "createdAt": "2024-01-03T21:31:15Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V67oc",
                    "body": "Mind leaving \r\n```suggestion\r\n/-\r\nTODO: Replace this lemma by the more general version:\r\ntheorem Sublist.length_destutter'_mono [IsEquiv α Rᶜ] (h : a :: l₁ <+ b :: l₂) :\r\n    (List.destutter' R a l₁).length ≤ (List.destutter' R b l₂).length\r\n-/\r\ntheorem le_length_destutter' [IsEquiv α Rᶜ] :\r\n    (List.destutter' R b l).length ≤ (List.destutter' R a (b :: l)).length := by\r\n```",
                    "createdAt": "2024-01-04T09:17:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V14CF",
                    "body": "This is a completely unguessable name. Maybe\r\n```suggestion\r\ntheorem Chain.length_le_length_destutter [IsEquiv α Rᶜ] (h₁ : l₂ <+ l) (h₂ : l₂.Chain' R) :\r\n    l₂.length ≤ (l.destutter R).length := by\r\n```",
                    "createdAt": "2024-01-03T08:31:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V449v",
                    "body": "Thanks. I have just barely enough intuition to guess names sometimes myself. I recognized this name was unguessable, but had no idea how to name it myself. :)",
                    "createdAt": "2024-01-03T21:32:17Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V14Ec",
                    "body": "```suggestion\r\nAuthors: Leonardo de Moura\r\n```",
                    "createdAt": "2024-01-03T08:31:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V14Tw",
                    "body": "Is this not already inferred?",
                    "createdAt": "2024-01-03T08:32:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V46DU",
                    "body": "Oh. I guess it is. I was struggling to get things with complements to work, and it seemed like this was necessary at the time ... but running it now, it doesn't seem to be. Will cut it out.",
                    "createdAt": "2024-01-03T21:37:06Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V14Ue",
                    "body": "```suggestion\r\ninstance Ne.instIsEquiv_compl : IsEquiv α (· ≠ ·)ᶜ := by\r\n```",
                    "createdAt": "2024-01-03T08:32:53Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5V14Z2",
                    "body": "Something like\r\n```suggestion\r\n  convert eq_isEquiv α; simp\r\n```",
                    "createdAt": "2024-01-03T08:33:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5V470t",
                    "body": "Turns out `simp [compl]` works.",
                    "createdAt": "2024-01-03T21:45:00Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5XcIgc",
                    "body": "We have `getD_eq_get`",
                    "createdAt": "2024-01-25T21:43:08Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Xo9H3",
                    "body": "done",
                    "createdAt": "2024-01-29T23:17:34Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5XcJmA",
                    "body": "```suggestion\r\ntheorem le_length_destutter'_cons [IsEquiv α Rᶜ] :\r\n```",
                    "createdAt": "2024-01-25T21:48:04Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2ODczMw==",
              "login": "Timeroot"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjM3OTg0ODUx",
              "login": "ericrbg"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2k5SEg",
                "name": "post-or-update-summary-comment",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838089/job/33727336978"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2kzeew",
                "name": "Cross off linked issues",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094799145/job/33727241851"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2k5SZg",
                "name": "Cross off linked issues",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838084/job/33727337062"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk7BCA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374705/job/32854950152"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2k5SDg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838092/job/33727336974"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk7A0A",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374714/job/32854950096"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk678w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854948851"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk69NA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32854949172"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk7CeQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374761/job/32854950521"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2k5SVQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838085/job/33727337045"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk6-xw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854949575"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk68Dg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32854948878"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk7BGg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374761/job/32854950170"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2k5SAw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12094838085/job/33727336963"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk69Og",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854949178"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk6-dg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32854949494"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk7AWQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374199/job/32854949977"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpm35kw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11795374196/job/32856996243"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH2k5hQg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33727340866"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpk8jeg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9082&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: `List.destutter` on cotransitive relations.",
        "updatedAt": "2024-11-30T08:10:31Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/9082",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAKfNdcR",
              "createdAt": "2023-12-15T15:45:47Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c551Dn4zwAAAAKfNfmu",
              "createdAt": "2023-12-15T15:46:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5P515O",
              "createdAt": "2023-12-15T16:12:27Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5iIAMf",
                "title": "feat: `Polynomial.coeffList`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/9085"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5P52l1",
              "createdAt": "2023-12-15T16:25:08Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5iBbUG",
                "title": "Lemmas for Descartes' Rule of Signs. Notably `coeffList` and `IsCoequiv` as new defs.",
                "url": "https://github.com/leanprover-community/mathlib4/pull/9052"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAKftuGw",
              "createdAt": "2023-12-17T22:46:58Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qbS0q",
              "createdAt": "2023-12-17T22:44:44Z",
              "body": "I've added the \"proper\" depending relation - the bot should now do a little bit of work for you!\r\n\r\nA few comments, I think the rest of the docstrings should be edited in similar ways too.\r\n\r\nThanks for all this! Contributing to Mathlib for the first time is hard and long sometimes, but we really appreciate it :)\r\n\r\ncc @YaelDillies so you can see where `IsCoequiv` is used",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAKftvlX",
              "createdAt": "2023-12-17T22:49:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vFNyF",
              "createdAt": "2023-12-20T00:04:37Z",
              "body": "Alright, I dropped the \"Coequivalence\" and \"Cotransitive\" stuff; now everything uses `compl`. I added an instance for `NEq` to get the right stuff going. Also adding the `destutter_map_inj` for injective maps.",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c551Dn4zwAAAAKhUONO",
              "createdAt": "2023-12-20T01:30:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAKhUONU",
              "createdAt": "2023-12-20T01:30:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vFdYw",
              "createdAt": "2023-12-20T01:31:06Z",
              "body": "I removed the dependence on #9081 since it's not using any of that code now.",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c551Dn4zwAAAAKhUdFr",
              "createdAt": "2023-12-20T01:41:17Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qtSih",
              "createdAt": "2023-12-20T06:44:37Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qtUtD",
              "createdAt": "2023-12-20T06:53:44Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qtVcQ",
              "createdAt": "2023-12-20T06:56:52Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qtVhR",
              "createdAt": "2023-12-20T06:57:13Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5rV6Ps",
              "createdAt": "2024-01-02T19:28:56Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5rYPlA",
              "createdAt": "2024-01-03T07:57:25Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c551Dn4zwAAAAKu_c8L",
              "createdAt": "2024-01-18T14:15:32Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5xLTdL",
              "createdAt": "2024-01-18T16:13:50Z",
              "body": "I don't have time to review this any further but I was globally happy with it during my last review. So whoever takes over reviewing should only look for local issues.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c551Dn4zwAAAAKvFREQ",
              "createdAt": "2024-01-18T16:13:59Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5QctY4",
              "createdAt": "2024-01-23T15:20:30Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5iH2qD",
                "title": "IsCotrans and IsCoequiv relations",
                "url": "https://github.com/leanprover-community/mathlib4/pull/9081"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5t9GPa",
              "createdAt": "2024-01-25T21:43:08Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5t9H9H",
              "createdAt": "2024-01-25T21:48:04Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zEbSI",
              "createdAt": "2024-02-06T18:38:08Z",
              "body": "@urkud other stuff this needs?",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAK_Fyiy",
              "createdAt": "2024-02-14T01:49:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c551Dn4zwAAAALh2VP5",
              "createdAt": "2024-04-05T20:37:18Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c551Dn4zwAAAALh2Vyh",
              "createdAt": "2024-04-05T20:37:37Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM3OTg0ODUx",
                "login": "ericrbg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5_K6s_",
              "createdAt": "2024-05-27T14:11:36Z",
              "body": "@YaelDillies do you know who else could review this? Other PRs are still blocked by it and it's been several months.",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c551Dn4zwAAAAMhHjxl",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAM7Ksnv",
              "createdAt": "2024-08-14T10:01:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QgqGl",
              "createdAt": "2024-10-20T03:02:38Z",
              "body": "I'm sorry for the delay. I'm going to merge `master` and fix compile now, then review it tonight or tomorrow.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QhhlA",
              "createdAt": "2024-10-20T07:49:49Z",
              "body": "Wow sorry, this completely fell off my radar. I guess I will wait for Yury to merge master, but yes we should get that in!",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S6q5V",
              "createdAt": "2024-11-08T14:06:45Z",
              "body": "Lightly bumping this @urkud :) If you don't have time, I can try to find time to update to master, but it won't be for a bit",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c551Dn4zwAAAAOLJwah",
              "createdAt": "2024-11-08T16:34:16Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S8GLb",
              "createdAt": "2024-11-08T16:35:05Z",
              "body": "### PR summary [cbd79155e4](https://github.com/leanprover-community/mathlib4/pull/9082/commits/cbd79155e4f2b3b2955ff70a113fe455e81d6e7f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Chain.length_le_length_destutter`\n`+ Ne.instIsEquiv_compl`\n`+ Sublist.length_destutter'_mono`\n`+ getD_replicate`\n`+ getD_reverse`\n`+ le_length_destutter'_cons`\n`+ length_destutter'_congr`\n`+ length_destutter'_cotrans_ge`\n`+ length_destutter_cons_ge_length_destutter`\n`+ length_destutter_maximal_chain_neg_trans`\n`+ length_destutter_ne_cons_ge_length_destutter`\n`+ map_destutter`\n`+ map_destutter_ne`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c551Dn4zwAAAAOLJ2yW",
              "createdAt": "2024-11-08T16:35:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5jvxiv",
              "createdAt": "2024-11-09T22:21:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6BaeqF",
                "title": "[Merged by Bors] - feat(List/Basic): add `ext_getElem!`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18802"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TA4TU",
              "createdAt": "2024-11-09T22:23:47Z",
              "body": "I'm sorry for the delay. I failed to finish it before traveling, then forgot to come back. I'm going to merge my local changes with @YaelDillies 's fixes today. I cherry-picked a couple of lemmas that are ready to get merged to a new PR.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TBU8r",
              "createdAt": "2024-11-10T05:52:54Z",
              "body": "Asked a question about `List.destutter'` on Zulip: https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/List.2Edestutter'",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c551Dn4zwAAAAOMsZKe",
              "createdAt": "2024-11-11T07:27:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c551Dn4zwAAAAONtYJe",
              "createdAt": "2024-11-12T10:37:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ViTs2",
              "createdAt": "2024-11-30T02:45:19Z",
              "body": "Is this good to merge now?",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ViUzu",
              "createdAt": "2024-11-30T03:01:21Z",
              "body": "Oh, I see the Zulip thread left this unresolved. I guess I'll wait for that then",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c551Dn4zwAAAAOataEd",
              "createdAt": "2024-11-30T08:04:47Z"
            },
            {
              "__typename": "ReopenedEvent",
              "id": "REE_lADOFcwZ1c551Dn4zwAAAAOatcxv",
              "createdAt": "2024-11-30T08:10:30Z"
            }
          ]
        }
      }
    }
  }
}
