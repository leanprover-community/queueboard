{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 2462,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alreadydone"
        },
        "baseRefName": "master",
        "body": "The formula $[n]P = (\\phi_n(x,y) : \\omega_n(x,y) : \\psi_n(x,y))$ in Jacobian coordinates for $P=(x,y)$ a nonsingular point on a Weierstrass/elliptic curve. \r\n\r\n---\r\n\r\n- [x] depends on: #12883 \r\n- [x] depends on: #13399 \r\n- [ ] depends on: #13057 \r\n- [ ] depends on: #13155 \r\n- [x] depends on: #13845\r\n- [x] depends on: #13846\r\n- [ ] depends on: #13847\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 10,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6A-STi",
              "body": "### PR summary [3d6da3dc77](https://github.com/leanprover-community/mathlib4/pull/13782/commits/3d6da3dc779ad9a87bb94300bdc06f793e122d4e)\n\n#### Import changes\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.NumberTheory.EllipticDivisibilitySequence | 519 | 1066 | +547 (+105.39%) |\n| Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Basic | 1008 | 1322 | +314 (+31.15%) |\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Affine.point`\n`+ C_Ψ₂Sq`\n`+ C_Ψ₃_eq`\n`+ Coeff`\n`+ EllSequence.map_compl`\n`+ EllSequence.map_compl'`\n`+ Equation.map`\n`+ EvenRec`\n`+ Field.two_ne_zero`\n`+ HaveSameParity₄`\n`+ IsDivSequence.map`\n`+ IsDivSequence.normEDS`\n`+ IsEllDivSequence.eq_normEDS`\n`+ IsEllDivSequence.map`\n`+ IsEllDivSequence.normEDS`\n`+ IsEllSequence.eq_normEDS_of_dvd`\n`+ IsEllSequence.ext`\n`+ IsEllSequence.isDivSequence_of_dvd`\n`+ IsEllSequence.isEllDivSequence_of_dvd`\n`+ IsEllSequence.map`\n`+ IsEllSequence.mul_compl_eq_apply_mul_of_mem_nonZeroDivisors`\n`+ IsEllSequence.normEDS`\n`+ Jacobian.point`\n`+ OddRec`\n`+ Param`\n`+ Poly.two_ne_zero`\n`+ Rel₃`\n`+ Rel₄OfValid`\n`+ StrictAnti₄`\n`+ Y_sub_negPolynomial`\n`+ Y_sub_polynomialY`\n`+ _root_.IsEllSequence`\n`+ _root_.IsEllSequence.of_oddRec_evenRec`\n`+ abs`\n`+ addMulSub`\n`+ addMulSub_abs₀`\n`+ addMulSub_abs₁`\n`+ addMulSub_even`\n`+ addMulSub_mem_nonZeroDivisors`\n`+ addMulSub_neg₀`\n`+ addMulSub_neg₁`\n`+ addMulSub_odd`\n`+ addMulSub_same`\n`+ addMulSub_sq_mul_rel₄_eq₉`\n`+ addMulSub_swap`\n`+ addMulSub_three_one`\n`+ addMulSub_transf`\n`+ addMulSub_two_zero`\n`+ addMulSub₄`\n`+ addMulSub₄_mul_addMulSub₄`\n`+ addXYZ_neg`\n`+ addXYZ_self`\n`+ addXYZ_smulEval`\n`+ addXYZ_smulEval₁`\n`+ addXYZ_smulField`\n`+ addXYZ_smulField₁`\n`+ addXYZ_smulRing`\n`+ addXYZ_smulRing₁`\n`+ addX_eq_subX_sub`\n`+ addX_neg`\n`+ addX_self`\n`+ addX_smul_one_smul_one`\n`+ addY_neg`\n`+ addY_self`\n`+ addY_smul_one_smul_one`\n`+ addY_sub_negY`\n`+ addZ_neg`\n`+ addZ_self`\n`+ addZ_smulPoly`\n`+ add_point_of_ne`\n`+ add_point_of_point_eq`\n`+ agrees`\n`+ algebraMap_comp_smulRing`\n`+ algebraMap_field_eq_comp`\n`+ algebraMap_field_injective`\n`+ algebraMap_injective`\n`+ algebraMap_injective'`\n`+ algebraMap_ring_eq_comp`\n`+ avg₄`\n`+ avg₄_add_avg₄`\n`+ baseChange_polynomialX_eval_eval`\n`+ baseChange_polynomialY_eval_eval`\n`+ baseChange_polynomial_eval_eval`\n`+ baseChange_preΨ`\n`+ baseChange_preΨ'`\n`+ baseChange_preΨ₄`\n`+ baseChange_Φ`\n`+ baseChange_Ψ`\n`+ baseChange_ΨSq`\n`+ baseChange_Ψ₂Sq`\n`+ baseChange_Ψ₃`\n`+ baseChange_φ`\n`+ baseChange_ψ`\n`+ baseChange_ψ₂`\n`+ cMin`\n`+ coe_algebraMap_eq_CC`\n`+ coe_evalEvalRingHom`\n`+ comp_fin3`\n`+ compl`\n`+ compl'`\n`+ complEDS`\n`+ complEDS_eq_aeval`\n`+ compl_neg`\n`+ compl_ofNat`\n`+ compl₂EDS`\n`+ compl₂EDSAux`\n`+ compl₂EDSAux_mul_b`\n`+ compl₂EDSAux_neg`\n`+ compl₂EDSAux_neg_one`\n`+ compl₂EDSAux_neg_two`\n`+ compl₂EDSAux_one`\n`+ compl₂EDSAux_two`\n`+ compl₂EDSAux_zero`\n`+ compl₂EDS_eq_aeval`\n`+ compl₂EDS_eq_redInvarNum_sub`\n`+ compl₂EDS_mul_b`\n`+ compl₂EDS_neg`\n`+ compl₂EDS_one`\n`+ compl₂EDS_two`\n`+ compl₂EDS_two_three_two`\n`+ compl₂EDS_zero`\n`+ curve`\n`+ curveField_eq`\n`+ curveRing_map_ringEval`\n`+ cusp`\n`+ cusp_equation_one_one`\n`+ cusp_preΨ₄`\n`+ cusp_Ψ₃`\n`+ cusp_ψ₂`\n`+ cyclic_sum_Y_mul_X_sub_X`\n`+ dMin`\n`+ dMin_le`\n`+ dMin_lt_cMin`\n`+ dMin_nonneg`\n`+ dblXYZ_smulEval`\n`+ dblXYZ_smulField`\n`+ dblXYZ_smulRing`\n`+ dblZ_smulPoly`\n`+ equation_point`\n`+ equiv_iff_eq_of_Z_eq`\n`+ equiv_iff_eq_of_Z_eq'`\n`+ evalEval_preΨ₄`\n`+ evalEval_Ψ₃`\n`+ evalEval_φ`\n`+ evalEval_ψ`\n`+ evalEval_ψ₂`\n`+ evalEval_ω`\n`+ eval_C_X_comp_eval₂_map_C_X`\n`+ eval_C_X_eval₂_map_C_X`\n`+ eval₂RingHom_eval₂RingHom`\n`+ eval₂_eval₂RingHom_apply`\n`+ evenRec`\n`+ even_sum`\n`+ fromAffine_ne_zero`\n`+ instance : AddGroup (curve⟮Universal.Field⟯) := inferInstance -- Lean needs a reminder at add_zsmul`\n`+ instance : CommRing Poly := Polynomial.commRing /- why is this not automatic ... -/`\n`+ invarDenom`\n`+ invarDenom_eq_redInvarDenom_mul`\n`+ invarDenom_normEDS_two`\n`+ invarNum`\n`+ invarNum_eq_redInvarNum_mul`\n`+ invarNum_normEDS`\n`+ invarNum_normEDS_two`\n`+ invar_normEDS`\n`+ invar_of_net`\n`+ invar₂_normEDS`\n`+ isEllSequence_ψ`\n`+ isEllSequence_ψᵤ`\n`+ map`\n`+ map_addMulSub`\n`+ map_addX`\n`+ map_addXYZ`\n`+ map_addY`\n`+ map_addZ`\n`+ map_complEDS`\n`+ map_compl₂EDS`\n`+ map_compl₂EDSAux`\n`+ map_dblU`\n`+ map_dblX`\n`+ map_dblXYZ`\n`+ map_dblY`\n`+ map_dblZ`\n`+ map_injective`\n`+ map_invarDenom`\n`+ map_invarNum`\n`+ map_mk`\n`+ map_neg`\n`+ map_negAddY`\n`+ map_negDblY`\n`+ map_negY`\n`+ map_net`\n`+ map_normEDS`\n`+ map_polynomial`\n`+ map_polynomialX`\n`+ map_polynomialX_eval_eval`\n`+ map_polynomialY`\n`+ map_polynomialY_eval_eval`\n`+ map_polynomialZ`\n`+ map_polynomial_eval`\n`+ map_polynomial_evalEval`\n`+ map_polynomial_eval_eval`\n`+ map_preNormEDS`\n`+ map_preNormEDS'`\n`+ map_preΨ`\n`+ map_preΨ'`\n`+ map_preΨ₄`\n`+ map_redInvarDenom`\n`+ map_redInvarNum`\n`+ map_rel₄`\n`+ map_specialize`\n`+ map_Φ`\n`+ map_Ψ`\n`+ map_ΨSq`\n`+ map_Ψ₂Sq`\n`+ map_Ψ₃`\n`+ map_φ`\n`+ map_ψ`\n`+ map_ψ₂`\n`+ map_ω`\n`+ neg`\n`+ negAddY_neg`\n`+ negAddY_self`\n`+ negOnePow_cMin`\n`+ negOnePow_cMin_eq_dMin`\n`+ negOnePow_dMin`\n`+ net_add_sub_iff`\n`+ net_eq_rel₄`\n`+ net_normEDS`\n`+ net_ψᵤ`\n`+ nonsingular_iff_of_Z_ne_zero`\n`+ nonsingular_smulField`\n`+ nonsingular_smulX_smulY`\n`+ normEDS_def`\n`+ normEDS_dvd_two_mul`\n`+ normEDS_eq_aeval`\n`+ normEDS_mul_complEDS`\n`+ normEDS_mul_complEDS_div`\n`+ normEDS_mul_compl₂EDS`\n`+ normEDS_six_eq_mul`\n`+ normEDS_two_three_two`\n`+ oddRec`\n`+ pderiv_map`\n`+ perm`\n`+ point_point`\n`+ pointedCurve`\n`+ pointedCurve_a₁`\n`+ pointedCurve_a₂`\n`+ pointedCurve_a₃`\n`+ pointedCurve_a₄`\n`+ pointedCurve_a₆`\n`+ polyEval`\n`+ polyEval_apply`\n`+ polyEval_comp_eq_specialize`\n`+ polyEval_cusp_φ`\n`+ polyEval_cusp_ψ`\n`+ polyEval_cusp_ψc`\n`+ polyEval_cusp_ω`\n`+ polyToField`\n`+ polyToField_apply`\n`+ polyToField_polynomial`\n`+ polyToField_φ_ne_zero`\n`+ polyToField_ψ₂Sq`\n`+ preΨ₄_add_Ψ₂Sq_sq`\n`+ preΨ₄_add_ψ₂_pow_four`\n`+ redInvarDenom`\n`+ redInvarDenom_one`\n`+ redInvarDenom_two`\n`+ redInvarDenom_zero`\n`+ redInvarNum`\n`+ redInvar_normEDS`\n`+ relFin4`\n`+ relFin4_perm`\n`+ relFin4_perm'`\n`+ rel₃_iff_evenRec`\n`+ rel₃_iff_oddRec`\n`+ rel₃_iff₄`\n`+ rel₄_abs`\n`+ rel₄_eq_net`\n`+ rel₄_fix₁_of_fix₂`\n`+ rel₄_iff_evenRec`\n`+ rel₄_normEDS`\n`+ rel₄_of_anti_oddRec_evenRec`\n`+ rel₄_of_fix₂`\n`+ rel₄_of_min₂`\n`+ rel₄_of_oddRec_evenRec`\n`+ rel₄_same₀₁`\n`+ rel₄_same₁₂`\n`+ rel₄_same₂₃`\n`+ rel₄_swap₀₁`\n`+ rel₄_swap₁₂`\n`+ rel₄_swap₂₃`\n`+ rel₄_transf`\n`+ rel₆`\n`+ rel₆_eq₁₀`\n`+ rel₆_eq₃`\n`+ rel₆_eq₃'`\n`+ ringEval`\n`+ ringEval_comp_eq_specialize`\n`+ ringEval_comp_mk`\n`+ ringEval_comp_smulRing`\n`+ ringEval_mk`\n`+ ringEval_ψ`\n`+ same₀₃`\n`+ six_le_of_strictAnti₄`\n`+ slopeOne`\n`+ slopeOne_eq_neg_div`\n`+ smulField_neg`\n`+ smulField_zero`\n`+ smulPoly_neg`\n`+ smulPoly_zero`\n`+ smulRing_neg`\n`+ smulX`\n`+ smulX_add`\n`+ smulX_eq`\n`+ smulX_eq_smulX_iff`\n`+ smulX_ne_smulX`\n`+ smulX_ne_zero`\n`+ smulX_neg`\n`+ smulX_one`\n`+ smulX_sub_smulX`\n`+ smulX_sub_sub_smulX_add`\n`+ smulX_two`\n`+ smulX_zero`\n`+ smulY`\n`+ smulY_add_sub_negY`\n`+ smulY_neg`\n`+ smulY_one`\n`+ smulY_one_ne_negY`\n`+ smulY_one_sub_negY`\n`+ smulY_sub_negY`\n`+ smulY_zero`\n`+ some_eq_some_iff`\n`+ some_ne_zero`\n`+ specialize`\n`+ strictAnti₄_transf`\n`+ sub_add_neg_sub_mul_eq_zero`\n`+ transf`\n`+ two_mul_ω`\n`+ two_zsmul_point`\n`+ universalNormEDS`\n`+ universalNormEDS_mem_nonZeroDivisors`\n`+ universalNormEDS_ne_zero`\n`+ zero`\n`+ zero'`\n`+ zsmul_eq_smulEval`\n`+ zsmul_point_eq_smulField`\n`+ zsmul_point_eq_smulX_smulY`\n`+ zsmul_point_ne`\n`+ Δ_curve_ne_zero`\n`+ φ_mul_ψ`\n`+ ψc`\n`+ ψc_neg`\n`+ ψc_spec`\n`+ ψᵤ_eq_normEDS`\n`+ ψᵤ_ne_zero`\n`+ ψ₂_sq`\n`+ ω`\n`+ ω_neg`\n`+ ω_neg_eq_neg_negY`\n`+ ω_one`\n`+ ω_spec`\n`+ ω_zero`\n`++ invar`\n`++ map_smul`\n`++ net`\n`++ rel₄`\n`++ zsmul_point_ne_zero`\n`- C_Ψ₂Sq_eq`\n`- IsEllSequence`\n`- baseChange_eval_polynomial`\n`- baseChange_eval_polynomialX`\n`- baseChange_eval_polynomialY`\n`- instIsDomainCoordinateRing_of_Field`\n`- map_eval_polynomial`\n`- map_eval_polynomialX`\n`- map_eval_polynomialY`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-12T20:07:21Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6A-XM-",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#12883~~\n* ~~leanprover-community/mathlib4#13399~~\n* leanprover-community/mathlib4#13057\n* leanprover-community/mathlib4#13155\n* ~~leanprover-community/mathlib4#13845~~\n* ~~leanprover-community/mathlib4#13846~~\n* leanprover-community/mathlib4#13847\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-06-12T20:20:58Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-06-12T18:51:02Z",
        "deletions": 232,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/PDeriv.lean",
              "additions": 7,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Bivariate.lean",
              "additions": 73,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean",
              "additions": 102,
              "deletions": 59
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/DivisionPolynomial/Basic.lean",
              "additions": 214,
              "deletions": 29
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/DivisionPolynomial/ZSMul.lean",
              "additions": 553,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/Group.lean",
              "additions": 159,
              "deletions": 118
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/Jacobian.lean",
              "additions": 120,
              "deletions": 8
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/Universal.lean",
              "additions": 198,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/EllipticDivisibilitySequence.lean",
              "additions": 1033,
              "deletions": 18
            }
          ]
        },
        "headRefName": "DivisionPolynomial_smul",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5yRoGX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
              "color": "33DBEC",
              "name": "t-number-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
              "color": "33DBEC",
              "name": "t-algebraic-geometry"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "number": 13782,
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5-MeYL",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-13T23:59:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A-S85",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2024-07-08T16:19:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6A-981",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-07-08T17:47:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KREbZ",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-09-21T12:41:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KRrhx",
              "state": "COMMENTED",
              "author": {
                "login": "Multramate"
              },
              "submittedAt": "2024-09-21T18:56:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KR09y",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-09-21T23:55:19Z"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfG1Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534788/job/26268387029"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfHMA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534792/job/26268387120"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfGMg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534735/job/26268386866"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfG-A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534736/job/26268387064"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfHYQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534791/job/26268387169"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfG_g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534735/job/26268387070"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfGLg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534736/job/26268386862"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfHJQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534791/job/26268387109"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfGvg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534735/job/26268387006"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfGtw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534736/job/26268386999"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfHVQ",
                "name": "summarize_declarations",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534735/job/26268387157"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfGeA",
                "name": "summarize_declarations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534736/job/26268386936"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfGdg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534735/job/26268386934"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfHNw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534736/job/26268387127"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfHng",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534735/job/26268387230"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHboCcA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9529534736/job/26268533360"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfKiQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/26268387977"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGHbfftA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=13782&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(EllipticCurve): ZSMul formula in terms of division polynomials",
        "updatedAt": "2024-09-21T23:55:19Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/13782"
      }
    }
  }
}
