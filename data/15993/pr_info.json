{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 366,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We don't add deprecated aliases because definitions only gained a namespace and the presence of both namespaced and unnamespaced declarations would confuse Lean. Furthermore, `_root_.IsInducing`, `_root_.IsEmbedding`,  etc... only existed for a short while.\r\n\r\nMoves:\r\n* `IsInducing` → `Topology.IsInducing`\r\n* `IsEmbedding` → `Topology.IsEmbedding`\r\n* `IsOpenEmbedding` → `Topology.IsOpenEmbedding`\r\n* `IsClosedEmbedding` → `Topology.IsClosedEmbedding`\r\n* `IsQuotientMap` → `Topology.IsQuotientMap`\r\n* `IsClosedEmbedding.LindelofSpace` → `Topology.IsClosedEmbedding.LindelofSpace`\r\n* `IsClosedEmbedding.compactSpace` → `Topology.IsClosedEmbedding.compactSpace`\r\n* `IsClosedEmbedding.inl` → `Topology.IsClosedEmbedding.inl`\r\n* `IsClosedEmbedding.inr` → `Topology.IsClosedEmbedding.inr`\r\n* `IsClosedEmbedding.isCompact_preimage` → `Topology.IsClosedEmbedding.isCompact_preimage`\r\n* `IsClosedEmbedding.isLindelof_preimage` → `Topology.IsClosedEmbedding.isLindelof_preimage`\r\n* `IsClosedEmbedding.isProperMap` → `Topology.IsClosedEmbedding.isProperMap`\r\n* `IsClosedEmbedding.locallyCompactSpace` → `Topology.IsClosedEmbedding.locallyCompactSpace`\r\n* `IsClosedEmbedding.measurableEmbedding` → `Topology.IsClosedEmbedding.measurableEmbedding`\r\n* `IsClosedEmbedding.nonLindelofSpace` → `Topology.IsClosedEmbedding.nonLindelofSpace`\r\n* `IsClosedEmbedding.noncompactSpace` → `Topology.IsClosedEmbedding.noncompactSpace`\r\n* `IsClosedEmbedding.normalSpace` → `Topology.IsClosedEmbedding.normalSpace`\r\n* `IsClosedEmbedding.paracompactSpace` → `Topology.IsClosedEmbedding.paracompactSpace`\r\n* `IsClosedEmbedding.preimage_closedPoints` → `Topology.IsClosedEmbedding.preimage_closedPoints`\r\n* `IsClosedEmbedding.quasiSober` → `Topology.IsClosedEmbedding.quasiSober`\r\n* `IsClosedEmbedding.restrictPreimage` → `Topology.IsClosedEmbedding.restrictPreimage`\r\n* `IsClosedEmbedding.sigmaCompactSpace` → `Topology.IsClosedEmbedding.sigmaCompactSpace`\r\n* `IsClosedEmbedding.sigmaMk` → `Topology.IsClosedEmbedding.sigmaMk`\r\n* `IsClosedEmbedding.subtypeVal` → `Topology.IsClosedEmbedding.subtypeVal`\r\n* `IsClosedEmbedding.t4Space` → `Topology.IsClosedEmbedding.t4Space`\r\n* `IsClosedEmbedding.tendsto_coLindelof` → `Topology.IsClosedEmbedding.tendsto_coLindelof`\r\n* `IsClosedEmbedding.tendsto_cocompact` → `Topology.IsClosedEmbedding.tendsto_cocompact`\r\n* `IsClosedEmbedding.uliftDown` → `Topology.IsClosedEmbedding.uliftDown`\r\n* `IsClosedEmbedding.weaklyLocallyCompactSpace` → `Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\r\n* `IsEmbedding.codRestrict` → `Topology.IsEmbedding.codRestrict`\r\n* `IsEmbedding.comapMetricSpace` → `Topology.IsEmbedding.comapMetricSpace`\r\n* `IsEmbedding.comapUniformSpace` → `Topology.IsEmbedding.comapUniformSpace`\r\n* `IsEmbedding.completelyNormalSpace` → `Topology.IsEmbedding.completelyNormalSpace`\r\n* `IsEmbedding.continuousOn_iff` → `Topology.IsEmbedding.continuousOn_iff`\r\n* `IsEmbedding.inclusion` → `Topology.IsEmbedding.inclusion`\r\n* `IsEmbedding.inl` → `Topology.IsEmbedding.inl`\r\n* `IsEmbedding.inr` → `Topology.IsEmbedding.inr`\r\n* `IsEmbedding.isCompact_iff` → `Topology.IsEmbedding.isCompact_iff`\r\n* `IsEmbedding.isLindelof_iff` → `Topology.IsEmbedding.isLindelof_iff`\r\n* `IsEmbedding.isLocallyClosed_iff` → `Topology.IsEmbedding.isLocallyClosed_iff`\r\n* `IsEmbedding.isSigmaCompact_iff` → `Topology.IsEmbedding.isSigmaCompact_iff`\r\n* `IsEmbedding.isTotallyDisconnected` → `Topology.IsEmbedding.isTotallyDisconnected`\r\n* `IsEmbedding.isTotallyDisconnected_image` → `Topology.IsEmbedding.isTotallyDisconnected_image`\r\n* `IsEmbedding.isTotallyDisconnected_range` → `Topology.IsEmbedding.isTotallyDisconnected_range`\r\n* `IsEmbedding.map_nhdsWithin_eq` → `Topology.IsEmbedding.map_nhdsWithin_eq`\r\n* `IsEmbedding.measurableEmbedding` → `Topology.IsEmbedding.measurableEmbedding`\r\n* `IsEmbedding.prodMap` → `Topology.IsEmbedding.prodMap`\r\n* `IsEmbedding.restrictPreimage` → `Topology.IsEmbedding.restrictPreimage`\r\n* `IsEmbedding.secondCountableTopology` → `Topology.IsEmbedding.secondCountableTopology`\r\n* `IsEmbedding.separableSpace` → `Topology.IsEmbedding.separableSpace`\r\n* `IsEmbedding.sigmaMk` → `Topology.IsEmbedding.sigmaMk`\r\n* `IsEmbedding.subtypeVal` → `Topology.IsEmbedding.subtypeVal`\r\n* `IsEmbedding.t0Space` → `Topology.IsEmbedding.t0Space`\r\n* `IsEmbedding.t1Space` → `Topology.IsEmbedding.t1Space`\r\n* `IsEmbedding.t25Space` → `Topology.IsEmbedding.t25Space`\r\n* `IsEmbedding.t2Space` → `Topology.IsEmbedding.t2Space`\r\n* `IsEmbedding.t3Space` → `Topology.IsEmbedding.t3Space`\r\n* `IsEmbedding.t5Space` → `Topology.IsEmbedding.t5Space`\r\n* `IsEmbedding.toPullbackDiag` → `Topology.IsEmbedding.toPullbackDiag`\r\n* `IsEmbedding.to_isometry` → `Topology.IsEmbedding.to_isometry`\r\n* `IsEmbedding.uliftDown` → `Topology.IsEmbedding.uliftDown`\r\n* `IsInducing.alexandrovDiscrete` → `Topology.IsInducing.alexandrovDiscrete`\r\n* `IsInducing.codRestrict` → `Topology.IsInducing.codRestrict`\r\n* `IsInducing.comapPseudoMetricSpace` → `Topology.IsInducing.comapPseudoMetricSpace`\r\n* `IsInducing.continuousConstSMul` → `Topology.IsInducing.continuousConstSMul`\r\n* `IsInducing.continuousInv` → `Topology.IsInducing.continuousInv`\r\n* `IsInducing.continuousMul` → `Topology.IsInducing.continuousMul`\r\n* `IsInducing.continuousOn_iff` → `Topology.IsInducing.continuousOn_iff`\r\n* `IsInducing.continuousSMul` → `Topology.IsInducing.continuousSMul`\r\n* `IsInducing.continuousWithinAt_iff` → `Topology.IsInducing.continuousWithinAt_iff`\r\n* `IsInducing.frechetUrysohnSpace` → `Topology.IsInducing.frechetUrysohnSpace`\r\n* `IsInducing.generalizingMap` → `Topology.IsInducing.generalizingMap`\r\n* `IsInducing.hasProd_iff` → `Topology.IsInducing.hasProd_iff`\r\n* `IsInducing.injective` → `Topology.IsInducing.injective`\r\n* `IsInducing.inseparable_iff` → `Topology.IsInducing.inseparable_iff`\r\n* `IsInducing.isClosedMap` → `Topology.IsInducing.isClosedMap`\r\n* `IsInducing.isCompact_iff` → `Topology.IsInducing.isCompact_iff`\r\n* `IsInducing.isCompact_preimage` → `Topology.IsInducing.isCompact_preimage`\r\n* `IsInducing.isCompact_preimage'` → `Topology.IsInducing.isCompact_preimage'`\r\n* `IsInducing.isCompact_preimage_iff` → `Topology.IsInducing.isCompact_preimage_iff`\r\n* `IsInducing.isEmbedding` → `Topology.IsInducing.isEmbedding`\r\n* `IsInducing.isLindelof_iff` → `Topology.IsInducing.isLindelof_iff`\r\n* `IsInducing.isLindelof_preimage` → `Topology.IsInducing.isLindelof_preimage`\r\n* `IsInducing.isLocallyClosed_iff` → `Topology.IsInducing.isLocallyClosed_iff`\r\n* `IsInducing.isOpenMap` → `Topology.IsInducing.isOpenMap`\r\n* `IsInducing.isPathConnected_iff` → `Topology.IsInducing.isPathConnected_iff`\r\n* `IsInducing.isPreconnected_image` → `Topology.IsInducing.isPreconnected_image`\r\n* `IsInducing.isSigmaCompact_iff` → `Topology.IsInducing.isSigmaCompact_iff`\r\n* `IsInducing.joinedIn_image` → `Topology.IsInducing.joinedIn_image`\r\n* `IsInducing.locallyCompactSpace` → `Topology.IsInducing.locallyCompactSpace`\r\n* `IsInducing.multipliable_iff_tprod_comp_mem_range` → `Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\r\n* `IsInducing.of_codRestrict` → `Topology.IsInducing.of_codRestrict`\r\n* `IsInducing.prodMap` → `Topology.IsInducing.prodMap`\r\n* `IsInducing.r0Space` → `Topology.IsInducing.r0Space`\r\n* `IsInducing.r1Space` → `Topology.IsInducing.r1Space`\r\n* `IsInducing.regularSpace` → `Topology.IsInducing.regularSpace`\r\n* `IsInducing.restrictPreimage` → `Topology.IsInducing.restrictPreimage`\r\n* `IsInducing.secondCountableTopology` → `Topology.IsInducing.secondCountableTopology`\r\n* `IsInducing.specializes_iff` → `Topology.IsInducing.specializes_iff`\r\n* `IsInducing.specializingMap` → `Topology.IsInducing.specializingMap`\r\n* `IsInducing.subtypeVal` → `Topology.IsInducing.subtypeVal`\r\n* `IsInducing.topologicalGroup` → `Topology.IsInducing.topologicalGroup`\r\n* `IsInducing.withSeminorms` → `Topology.IsInducing.withSeminorms`\r\n* `IsOpenEmbedding.coborder_preimage` → `Topology.IsOpenEmbedding.coborder_preimage`\r\n* `IsOpenEmbedding.compatiblePreserving` → `Topology.IsOpenEmbedding.compatiblePreserving`\r\n* `IsOpenEmbedding.functor_isContinuous` → `Topology.IsOpenEmbedding.functor_isContinuous`\r\n* `IsOpenEmbedding.functor_obj_injective` → `Topology.IsOpenEmbedding.functor_obj_injective`\r\n* `IsOpenEmbedding.inl` → `Topology.IsOpenEmbedding.inl`\r\n* `IsOpenEmbedding.inr` → `Topology.IsOpenEmbedding.inr`\r\n* `IsOpenEmbedding.isLocalHomeomorph` → `Topology.IsOpenEmbedding.isLocalHomeomorph`\r\n* `IsOpenEmbedding.isQuasiSeparated_iff` → `Topology.IsOpenEmbedding.isQuasiSeparated_iff`\r\n* `IsOpenEmbedding.locPathConnectedSpace` → `Topology.IsOpenEmbedding.locPathConnectedSpace`\r\n* `IsOpenEmbedding.locallyCompactSpace` → `Topology.IsOpenEmbedding.locallyCompactSpace`\r\n* `IsOpenEmbedding.locallyConnectedSpace` → `Topology.IsOpenEmbedding.locallyConnectedSpace`\r\n* `IsOpenEmbedding.map_nhdsWithin_preimage_eq` → `Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\r\n* `IsOpenEmbedding.measurableEmbedding` → `Topology.IsOpenEmbedding.measurableEmbedding`\r\n* `IsOpenEmbedding.preimage_closedPoints` → `Topology.IsOpenEmbedding.preimage_closedPoints`\r\n* `IsOpenEmbedding.prodMap` → `Topology.IsOpenEmbedding.prodMap`\r\n* `IsOpenEmbedding.quasiSober` → `Topology.IsOpenEmbedding.quasiSober`\r\n* `IsOpenEmbedding.restrictPreimage` → `Topology.IsOpenEmbedding.restrictPreimage`\r\n* `IsOpenEmbedding.sigmaMk` → `Topology.IsOpenEmbedding.sigmaMk`\r\n* `IsOpenEmbedding.singleton_smoothManifoldWithCorners` → `Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\r\n* `IsQuotientMap.continuousOn_isOpen_iff` → `Topology.IsQuotientMap.continuousOn_isOpen_iff`\r\n* `IsQuotientMap.continuous_lift_prod_left` → `Topology.IsQuotientMap.continuous_lift_prod_left`\r\n* `IsQuotientMap.continuous_lift_prod_right` → `Topology.IsQuotientMap.continuous_lift_prod_right`\r\n* `IsQuotientMap.image_connectedComponent` → `Topology.IsQuotientMap.image_connectedComponent`\r\n* `IsQuotientMap.isClopen_preimage` → `Topology.IsQuotientMap.isClopen_preimage`\r\n* `IsQuotientMap.preimage_connectedComponent` → `Topology.IsQuotientMap.preimage_connectedComponent`\r\n* `IsQuotientMap.restrictPreimage_isOpen` → `Topology.IsQuotientMap.restrictPreimage_isOpen`\r\n* `IsQuotientMap.sequentialSpace` → `Topology.IsQuotientMap.sequentialSpace`\r\n* `isEmbedding_sigmaMap` → `Topology.isEmbedding_sigmaMap`\r\n* `isInducing_const_prod` → `+ Topology.isInducing_const_prod`\r\n* `isInducing_prod_const` → `+ Topology.isInducing_prod_const`\r\n* `isInducing_sigmaMap` → `+ Topology.isInducing_sigmaMap`\r\n* `isOpenEmbedding_sigmaMap` → `+ Topology.isOpenEmbedding_sigmaMap`\r\n* `IsClosedEmbedding.integral_map` → `+ Topology.IsClosedEmbedding.integral_map`\r\n* `IsClosedEmbedding.polishSpace` → `Topology.IsClosedEmbedding.polishSpace`\r\n* `IsClosedEmbedding.setIntegral_map` → `Topology.IsClosedEmbedding.setIntegral_map`\r\n* `IsEmbedding.aestronglyMeasurable_comp_iff` → `Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\r\n* `IsEmbedding.firstCountableTopology` → `Topology.IsEmbedding.firstCountableTopology`\r\n* `IsEmbedding.metrizableSpace` → `Topology.IsEmbedding.metrizableSpace`\r\n* `IsEmbedding.toHomeomorph_of_surjective` → `Topology.IsEmbedding.toHomeomorph_of_surjective`\r\n* `IsInducing.firstCountableTopology` → `Topology.IsInducing.firstCountableTopology`\r\n* `IsInducing.noetherianSpace` → `Topology.IsInducing.noetherianSpace`\r\n* `IsInducing.pseudoMetrizableSpace` → `Topology.IsInducing.pseudoMetrizableSpace`\r\n* `IsQuotientMap.secondCountableTopology` → `Topology.IsQuotientMap.secondCountableTopology`\r\n* `IsQuotientMap.separableSpace` → `Topology.IsQuotientMap`\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #16087\r\n- [x] depends on: #17208\r\n- [x] depends on: #17247\r\n- [x] depends on: #17295\r\n- [x] depends on: #17398\r\n- [x] depends on: #17898\r\n- [x] depends on: #17937\r\n- [x] depends on: #18062\r\n- [x] depends on: #18133\r\n- [x] depends on: #18330\r\n- [x] depends on: #18398\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 154,
        "closed": true,
        "closedAt": "2024-11-11T19:13:49Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6I_GFp",
              "body": "### PR summary [648e2527c8](https://github.com/leanprover-community/mathlib4/pull/15993/commits/648e2527c8281daa75c3e7ae632e22d9839e7b57)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Topology.IsClosedEmbedding.LindelofSpace`\n`+ Topology.IsClosedEmbedding.compactSpace`\n`+ Topology.IsClosedEmbedding.inl`\n`+ Topology.IsClosedEmbedding.inr`\n`+ Topology.IsClosedEmbedding.isCompact_preimage`\n`+ Topology.IsClosedEmbedding.isLindelof_preimage`\n`+ Topology.IsClosedEmbedding.isProperMap`\n`+ Topology.IsClosedEmbedding.locallyCompactSpace`\n`+ Topology.IsClosedEmbedding.measurableEmbedding`\n`+ Topology.IsClosedEmbedding.nonLindelofSpace`\n`+ Topology.IsClosedEmbedding.noncompactSpace`\n`+ Topology.IsClosedEmbedding.normalSpace`\n`+ Topology.IsClosedEmbedding.paracompactSpace`\n`+ Topology.IsClosedEmbedding.preimage_closedPoints`\n`+ Topology.IsClosedEmbedding.quasiSober`\n`+ Topology.IsClosedEmbedding.restrictPreimage`\n`+ Topology.IsClosedEmbedding.sigmaCompactSpace`\n`+ Topology.IsClosedEmbedding.sigmaMk`\n`+ Topology.IsClosedEmbedding.subtypeVal`\n`+ Topology.IsClosedEmbedding.t4Space`\n`+ Topology.IsClosedEmbedding.tendsto_coLindelof`\n`+ Topology.IsClosedEmbedding.tendsto_cocompact`\n`+ Topology.IsClosedEmbedding.uliftDown`\n`+ Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\n`+ Topology.IsEmbedding.codRestrict`\n`+ Topology.IsEmbedding.comapMetricSpace`\n`+ Topology.IsEmbedding.comapUniformSpace`\n`+ Topology.IsEmbedding.completelyNormalSpace`\n`+ Topology.IsEmbedding.continuousOn_iff`\n`+ Topology.IsEmbedding.inclusion`\n`+ Topology.IsEmbedding.inl`\n`+ Topology.IsEmbedding.inr`\n`+ Topology.IsEmbedding.isCompact_iff`\n`+ Topology.IsEmbedding.isLindelof_iff`\n`+ Topology.IsEmbedding.isLocallyClosed_iff`\n`+ Topology.IsEmbedding.isSigmaCompact_iff`\n`+ Topology.IsEmbedding.isTotallyDisconnected`\n`+ Topology.IsEmbedding.isTotallyDisconnected_image`\n`+ Topology.IsEmbedding.isTotallyDisconnected_range`\n`+ Topology.IsEmbedding.map_nhdsWithin_eq`\n`+ Topology.IsEmbedding.measurableEmbedding`\n`+ Topology.IsEmbedding.prodMap`\n`+ Topology.IsEmbedding.restrictPreimage`\n`+ Topology.IsEmbedding.secondCountableTopology`\n`+ Topology.IsEmbedding.separableSpace`\n`+ Topology.IsEmbedding.sigmaMk`\n`+ Topology.IsEmbedding.subtypeVal`\n`+ Topology.IsEmbedding.t0Space`\n`+ Topology.IsEmbedding.t1Space`\n`+ Topology.IsEmbedding.t25Space`\n`+ Topology.IsEmbedding.t2Space`\n`+ Topology.IsEmbedding.t3Space`\n`+ Topology.IsEmbedding.t5Space`\n`+ Topology.IsEmbedding.toPullbackDiag`\n`+ Topology.IsEmbedding.to_isometry`\n`+ Topology.IsEmbedding.uliftDown`\n`+ Topology.IsInducing.alexandrovDiscrete`\n`+ Topology.IsInducing.codRestrict`\n`+ Topology.IsInducing.comapPseudoMetricSpace`\n`+ Topology.IsInducing.continuousConstSMul`\n`+ Topology.IsInducing.continuousInv`\n`+ Topology.IsInducing.continuousMul`\n`+ Topology.IsInducing.continuousOn_iff`\n`+ Topology.IsInducing.continuousSMul`\n`+ Topology.IsInducing.continuousWithinAt_iff`\n`+ Topology.IsInducing.frechetUrysohnSpace`\n`+ Topology.IsInducing.generalizingMap`\n`+ Topology.IsInducing.hasProd_iff`\n`+ Topology.IsInducing.injective`\n`+ Topology.IsInducing.inseparable_iff`\n`+ Topology.IsInducing.isClosedMap`\n`+ Topology.IsInducing.isCompact_iff`\n`+ Topology.IsInducing.isCompact_preimage`\n`+ Topology.IsInducing.isCompact_preimage'`\n`+ Topology.IsInducing.isCompact_preimage_iff`\n`+ Topology.IsInducing.isEmbedding`\n`+ Topology.IsInducing.isLindelof_iff`\n`+ Topology.IsInducing.isLindelof_preimage`\n`+ Topology.IsInducing.isLocallyClosed_iff`\n`+ Topology.IsInducing.isOpenMap`\n`+ Topology.IsInducing.isPathConnected_iff`\n`+ Topology.IsInducing.isPreconnected_image`\n`+ Topology.IsInducing.isSigmaCompact_iff`\n`+ Topology.IsInducing.joinedIn_image`\n`+ Topology.IsInducing.locallyCompactSpace`\n`+ Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\n`+ Topology.IsInducing.of_codRestrict`\n`+ Topology.IsInducing.prodMap`\n`+ Topology.IsInducing.r0Space`\n`+ Topology.IsInducing.r1Space`\n`+ Topology.IsInducing.regularSpace`\n`+ Topology.IsInducing.restrictPreimage`\n`+ Topology.IsInducing.secondCountableTopology`\n`+ Topology.IsInducing.specializes_iff`\n`+ Topology.IsInducing.specializingMap`\n`+ Topology.IsInducing.subtypeVal`\n`+ Topology.IsInducing.topologicalGroup`\n`+ Topology.IsInducing.withSeminorms`\n`+ Topology.IsOpenEmbedding.coborder_preimage`\n`+ Topology.IsOpenEmbedding.compatiblePreserving`\n`+ Topology.IsOpenEmbedding.functor_isContinuous`\n`+ Topology.IsOpenEmbedding.functor_obj_injective`\n`+ Topology.IsOpenEmbedding.inl`\n`+ Topology.IsOpenEmbedding.inr`\n`+ Topology.IsOpenEmbedding.isLocalHomeomorph`\n`+ Topology.IsOpenEmbedding.isQuasiSeparated_iff`\n`+ Topology.IsOpenEmbedding.locPathConnectedSpace`\n`+ Topology.IsOpenEmbedding.locallyCompactSpace`\n`+ Topology.IsOpenEmbedding.locallyConnectedSpace`\n`+ Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ Topology.IsOpenEmbedding.measurableEmbedding`\n`+ Topology.IsOpenEmbedding.preimage_closedPoints`\n`+ Topology.IsOpenEmbedding.prodMap`\n`+ Topology.IsOpenEmbedding.quasiSober`\n`+ Topology.IsOpenEmbedding.restrictPreimage`\n`+ Topology.IsOpenEmbedding.sigmaMk`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Topology.IsQuotientMap.continuousOn_isOpen_iff`\n`+ Topology.IsQuotientMap.continuous_lift_prod_left`\n`+ Topology.IsQuotientMap.continuous_lift_prod_right`\n`+ Topology.IsQuotientMap.image_connectedComponent`\n`+ Topology.IsQuotientMap.isClopen_preimage`\n`+ Topology.IsQuotientMap.preimage_connectedComponent`\n`+ Topology.IsQuotientMap.restrictPreimage_isOpen`\n`+ Topology.IsQuotientMap.sequentialSpace`\n`+ Topology.isEmbedding_sigmaMap`\n`+ Topology.isInducing_const_prod`\n`+ Topology.isInducing_prod_const`\n`+ Topology.isInducing_sigmaMap`\n`+ Topology.isOpenEmbedding_sigmaMap`\n`+ _root_.Topology.IsClosedEmbedding.integral_map`\n`+ _root_.Topology.IsClosedEmbedding.polishSpace`\n`+ _root_.Topology.IsClosedEmbedding.setIntegral_map`\n`+ _root_.Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\n`+ _root_.Topology.IsEmbedding.firstCountableTopology`\n`+ _root_.Topology.IsEmbedding.metrizableSpace`\n`+ _root_.Topology.IsEmbedding.toHomeomorph_of_surjective`\n`+ _root_.Topology.IsInducing.firstCountableTopology`\n`+ _root_.Topology.IsInducing.noetherianSpace`\n`+ _root_.Topology.IsInducing.pseudoMetrizableSpace`\n`+ _root_.Topology.IsQuotientMap.secondCountableTopology`\n`+ _root_.Topology.IsQuotientMap.separableSpace`\n`- IsClosedEmbedding.LindelofSpace`\n`- IsClosedEmbedding.compactSpace`\n`- IsClosedEmbedding.inl`\n`- IsClosedEmbedding.inr`\n`- IsClosedEmbedding.isCompact_preimage`\n`- IsClosedEmbedding.isLindelof_preimage`\n`- IsClosedEmbedding.isProperMap`\n`- IsClosedEmbedding.locallyCompactSpace`\n`- IsClosedEmbedding.measurableEmbedding`\n`- IsClosedEmbedding.nonLindelofSpace`\n`- IsClosedEmbedding.noncompactSpace`\n`- IsClosedEmbedding.normalSpace`\n`- IsClosedEmbedding.paracompactSpace`\n`- IsClosedEmbedding.preimage_closedPoints`\n`- IsClosedEmbedding.quasiSober`\n`- IsClosedEmbedding.restrictPreimage`\n`- IsClosedEmbedding.sigmaCompactSpace`\n`- IsClosedEmbedding.sigmaMk`\n`- IsClosedEmbedding.subtypeVal`\n`- IsClosedEmbedding.t4Space`\n`- IsClosedEmbedding.tendsto_coLindelof`\n`- IsClosedEmbedding.tendsto_cocompact`\n`- IsClosedEmbedding.uliftDown`\n`- IsClosedEmbedding.weaklyLocallyCompactSpace`\n`- IsEmbedding.codRestrict`\n`- IsEmbedding.comapMetricSpace`\n`- IsEmbedding.comapUniformSpace`\n`- IsEmbedding.completelyNormalSpace`\n`- IsEmbedding.continuousOn_iff`\n`- IsEmbedding.inclusion`\n`- IsEmbedding.inl`\n`- IsEmbedding.inr`\n`- IsEmbedding.isCompact_iff`\n`- IsEmbedding.isLindelof_iff`\n`- IsEmbedding.isLocallyClosed_iff`\n`- IsEmbedding.isSigmaCompact_iff`\n`- IsEmbedding.isTotallyDisconnected`\n`- IsEmbedding.isTotallyDisconnected_image`\n`- IsEmbedding.isTotallyDisconnected_range`\n`- IsEmbedding.map_nhdsWithin_eq`\n`- IsEmbedding.measurableEmbedding`\n`- IsEmbedding.prodMap`\n`- IsEmbedding.restrictPreimage`\n`- IsEmbedding.secondCountableTopology`\n`- IsEmbedding.separableSpace`\n`- IsEmbedding.sigmaMk`\n`- IsEmbedding.subtypeVal`\n`- IsEmbedding.t0Space`\n`- IsEmbedding.t1Space`\n`- IsEmbedding.t25Space`\n`- IsEmbedding.t2Space`\n`- IsEmbedding.t3Space`\n`- IsEmbedding.t5Space`\n`- IsEmbedding.toPullbackDiag`\n`- IsEmbedding.to_isometry`\n`- IsEmbedding.uliftDown`\n`- IsInducing.alexandrovDiscrete`\n`- IsInducing.codRestrict`\n`- IsInducing.comapPseudoMetricSpace`\n`- IsInducing.continuousConstSMul`\n`- IsInducing.continuousInv`\n`- IsInducing.continuousMul`\n`- IsInducing.continuousOn_iff`\n`- IsInducing.continuousSMul`\n`- IsInducing.continuousWithinAt_iff`\n`- IsInducing.frechetUrysohnSpace`\n`- IsInducing.generalizingMap`\n`- IsInducing.hasProd_iff`\n`- IsInducing.injective`\n`- IsInducing.inseparable_iff`\n`- IsInducing.isClosedMap`\n`- IsInducing.isCompact_iff`\n`- IsInducing.isCompact_preimage`\n`- IsInducing.isCompact_preimage'`\n`- IsInducing.isCompact_preimage_iff`\n`- IsInducing.isEmbedding`\n`- IsInducing.isLindelof_iff`\n`- IsInducing.isLindelof_preimage`\n`- IsInducing.isLocallyClosed_iff`\n`- IsInducing.isOpenMap`\n`- IsInducing.isPathConnected_iff`\n`- IsInducing.isPreconnected_image`\n`- IsInducing.isSigmaCompact_iff`\n`- IsInducing.joinedIn_image`\n`- IsInducing.locallyCompactSpace`\n`- IsInducing.multipliable_iff_tprod_comp_mem_range`\n`- IsInducing.of_codRestrict`\n`- IsInducing.prodMap`\n`- IsInducing.r0Space`\n`- IsInducing.r1Space`\n`- IsInducing.regularSpace`\n`- IsInducing.restrictPreimage`\n`- IsInducing.secondCountableTopology`\n`- IsInducing.specializes_iff`\n`- IsInducing.specializingMap`\n`- IsInducing.subtypeVal`\n`- IsInducing.topologicalGroup`\n`- IsInducing.withSeminorms`\n`- IsOpenEmbedding.coborder_preimage`\n`- IsOpenEmbedding.compatiblePreserving`\n`- IsOpenEmbedding.functor_isContinuous`\n`- IsOpenEmbedding.functor_obj_injective`\n`- IsOpenEmbedding.inl`\n`- IsOpenEmbedding.inr`\n`- IsOpenEmbedding.isLocalHomeomorph`\n`- IsOpenEmbedding.isQuasiSeparated_iff`\n`- IsOpenEmbedding.locPathConnectedSpace`\n`- IsOpenEmbedding.locallyCompactSpace`\n`- IsOpenEmbedding.locallyConnectedSpace`\n`- IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`- IsOpenEmbedding.measurableEmbedding`\n`- IsOpenEmbedding.preimage_closedPoints`\n`- IsOpenEmbedding.prodMap`\n`- IsOpenEmbedding.quasiSober`\n`- IsOpenEmbedding.restrictPreimage`\n`- IsOpenEmbedding.sigmaMk`\n`- IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- IsQuotientMap.continuousOn_isOpen_iff`\n`- IsQuotientMap.continuous_lift_prod_left`\n`- IsQuotientMap.continuous_lift_prod_right`\n`- IsQuotientMap.image_connectedComponent`\n`- IsQuotientMap.isClopen_preimage`\n`- IsQuotientMap.preimage_connectedComponent`\n`- IsQuotientMap.restrictPreimage_isOpen`\n`- IsQuotientMap.sequentialSpace`\n`- _root_.IsClosedEmbedding.integral_map`\n`- _root_.IsClosedEmbedding.polishSpace`\n`- _root_.IsClosedEmbedding.setIntegral_map`\n`- _root_.IsEmbedding.aestronglyMeasurable_comp_iff`\n`- _root_.IsEmbedding.firstCountableTopology`\n`- _root_.IsEmbedding.metrizableSpace`\n`- _root_.IsEmbedding.toHomeomorph_of_surjective`\n`- _root_.IsInducing.firstCountableTopology`\n`- _root_.IsInducing.noetherianSpace`\n`- _root_.IsInducing.pseudoMetrizableSpace`\n`- _root_.IsQuotientMap.secondCountableTopology`\n`- _root_.IsQuotientMap.separableSpace`\n`- isEmbedding_sigmaMap`\n`- isInducing_const_prod`\n`- isInducing_prod_const`\n`- isInducing_sigmaMap`\n`- isOpenEmbedding_sigmaMap`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-20T08:11:09Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SkusX",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16087~~\n* ~~leanprover-community/mathlib4#17208~~\n* ~~leanprover-community/mathlib4#17247~~\n* ~~leanprover-community/mathlib4#17295~~\n* ~~leanprover-community/mathlib4#17398~~\n* ~~leanprover-community/mathlib4#17898~~\n* ~~leanprover-community/mathlib4#17937~~\n* ~~leanprover-community/mathlib4#18062~~\n* ~~leanprover-community/mathlib4#18133~~\n* ~~leanprover-community/mathlib4#18330~~\n* ~~leanprover-community/mathlib4#18398~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-11-06T09:23:57Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIssL",
              "body": "Please add `Moves` section to the commit message, at least with all the definitions you move. Explain that we don't add deprecated aliases, because definitions `_root_.IsInducing` etc existed for a short period of time and adding aliases would create conflicts.",
              "createdAt": "2024-11-11T16:08:48Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TJk5-",
              "body": "Thanks! :tada:\r\nbors merge",
              "createdAt": "2024-11-11T18:09:16Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TJxlp",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11784198308/job/32822888582)",
              "createdAt": "2024-11-11T18:41:20Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TJ6wM",
              "body": "As this PR is labelled `auto-merge-after-CI`, we are now sending it to bors:\n\nbors merge",
              "createdAt": "2024-11-11T19:06:13Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TJ9aZ",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11784666221/job/32824319787)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11784666221/job/32824319585)",
              "createdAt": "2024-11-11T19:13:49Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8362ae07a717f397c80b597252916b65b4448d99",
                "additions": 362,
                "deletions": 375,
                "committedDate": "2024-11-11T18:45:48Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "648e2527c8281daa75c3e7ae632e22d9839e7b57",
                "additions": 4,
                "deletions": 1,
                "committedDate": "2024-11-11T18:48:42Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCx4w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443332/job/32823620067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCySQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443333/job/32823620169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCr6A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823618536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCs1Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32823618773"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCyqg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443330/job/32823620266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCsqQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823618729"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCtew",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32823618939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCxvw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443330/job/32823620031"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCtaA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823618920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCsCg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32823618570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHCuMA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823619120"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHsCYQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32824296033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHDY-g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32823630074"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHpHECFQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHkiwJ6A",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/7317",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-20T08:10:29Z",
        "deletions": 376,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Ring/WithAbs.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Gluing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/Preimmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/TensorProduct.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Properties.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Integral.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Restrict.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unique.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unital.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Calculus/LineDeriv/IntegrationByParts.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/ReImTopology.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Metric.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Topology.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Convex/Intrinsic.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Convolution.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WeakOperatorTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WithSeminorms.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Spectrum.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/BallSphere.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/LinearIsometry.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/NormedSpace.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Exp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/ENNRealLogExp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Extensive.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Topology.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Condensed/TopComparison.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/ChartedSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/SmoothManifoldWithCorners.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/WhitneyEmbedding.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/LocallyRingedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace/Gluing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/SheafedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/Stalks.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/HermitianFunctionalCalculus.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean",
              "additions": 5,
              "deletions": 6
            },
            {
              "path": "Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Bochner.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/IntegralEqImproper.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/FiniteMeasure.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Modular.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/AlexandrovDiscrete.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Algebra.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ConstMulAction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ContinuousMonoidHom.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Quotient.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Basic.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Alternating/Topology.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/FiniteDimension.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Multilinear/Topology.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/StrongTopology.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/UniformConvergence.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Monoid.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/MulAction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Nonarchimedean/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Ring/Ideal.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/SeparationQuotient/Section.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/StarSubalgebra.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Bases.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/Category/CompHausLike/EffectiveEpi.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/CompHausLike/Limits.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/LightProfinite/Sequence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/Profinite/Nobeling.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/Stonean/Limits.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Basic.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/EffectiveEpi.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Cofiltered.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Products.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Pullbacks.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/OpenNhds.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Opens.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Clopen.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/CompactOpen.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Compactness/Compact.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Topology/Compactness/Lindelof.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Topology/Compactness/LocallyCompact.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Compactness/Paracompact.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Compactness/SigmaCompact.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Connected/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Connected/Clopen.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Connected/LocallyConnected.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Connected/PathConnected.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Connected/TotallyDisconnected.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Constructions.lean",
              "additions": 29,
              "deletions": 31
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Basic.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ContinuousMapZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Sigma.lean",
              "additions": 1,
              "deletions": 2
            }
          ]
        },
        "headRefName": "topology_inducing",
        "headRefOid": "648e2527c8281daa75c3e7ae632e22d9839e7b57",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c540qc3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABWsHQeA",
              "color": "bfdadc",
              "name": "auto-merge-after-CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Qseor",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-11-11T15:33:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-21T20:51:03Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15993,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-21T20:51:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GOgwb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-21T21:10:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qseor",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-11-11T15:33:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QswnU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-11T16:02:46Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5m3Lbv",
                    "body": "Why do you move a file in the same PR?",
                    "createdAt": "2024-08-21T20:51:03Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5m3P14",
                    "body": "Oh I guess that should be a preliminary PR\n\nI just wanted the file name to match the predicate name",
                    "createdAt": "2024-08-21T21:10:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tfBW9",
                    "body": "right?\r\n```suggestion\r\nvariable {z w : ℍ} {r : ℝ}\r\n```",
                    "createdAt": "2024-11-11T15:27:45Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tfCom",
                    "body": "Do we now need another `alias` for `IsClosedEmbedding.measurableEmbedding` → `Topology.IsClosedEmbedding.measurableEmbedding`? And similarly everywhere else. Or do you claim that the renames are close enough together in time that we only need the one already present?",
                    "createdAt": "2024-11-11T15:31:40Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tfMaw",
                    "body": "It is really really timetaking to write deprecated aliases manually and in that case the renames were indeed pretty close in time, so I'm of the opinion to stick to whatever `scripts/add_deprecations.sh` generated",
                    "createdAt": "2024-11-11T16:02:46Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCx4w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443332/job/32823620067"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCySQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443333/job/32823620169"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCr6A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823618536"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCs1Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32823618773"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCyqg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443330/job/32823620266"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCsqQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823618729"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCtew",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32823618939"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCxvw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784443330/job/32823620031"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCtaA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823618920"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCsCg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32823618570"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHCuMA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442845/job/32823619120"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHsCYQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11784442843/job/32824296033"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHDY-g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32823630074"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHpHECFQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHkiwJ6A",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/7317",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore(Topology): Namespace `Inducing`, `Embedding`...",
        "updatedAt": "2024-11-11T19:13:52Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15993",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAM-8v06",
              "createdAt": "2024-08-20T08:10:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAM-8v1E",
              "createdAt": "2024-08-20T08:10:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I_GFp",
              "createdAt": "2024-08-20T08:11:09Z",
              "body": "### PR summary [648e2527c8](https://github.com/leanprover-community/mathlib4/pull/15993/commits/648e2527c8281daa75c3e7ae632e22d9839e7b57)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Topology.IsClosedEmbedding.LindelofSpace`\n`+ Topology.IsClosedEmbedding.compactSpace`\n`+ Topology.IsClosedEmbedding.inl`\n`+ Topology.IsClosedEmbedding.inr`\n`+ Topology.IsClosedEmbedding.isCompact_preimage`\n`+ Topology.IsClosedEmbedding.isLindelof_preimage`\n`+ Topology.IsClosedEmbedding.isProperMap`\n`+ Topology.IsClosedEmbedding.locallyCompactSpace`\n`+ Topology.IsClosedEmbedding.measurableEmbedding`\n`+ Topology.IsClosedEmbedding.nonLindelofSpace`\n`+ Topology.IsClosedEmbedding.noncompactSpace`\n`+ Topology.IsClosedEmbedding.normalSpace`\n`+ Topology.IsClosedEmbedding.paracompactSpace`\n`+ Topology.IsClosedEmbedding.preimage_closedPoints`\n`+ Topology.IsClosedEmbedding.quasiSober`\n`+ Topology.IsClosedEmbedding.restrictPreimage`\n`+ Topology.IsClosedEmbedding.sigmaCompactSpace`\n`+ Topology.IsClosedEmbedding.sigmaMk`\n`+ Topology.IsClosedEmbedding.subtypeVal`\n`+ Topology.IsClosedEmbedding.t4Space`\n`+ Topology.IsClosedEmbedding.tendsto_coLindelof`\n`+ Topology.IsClosedEmbedding.tendsto_cocompact`\n`+ Topology.IsClosedEmbedding.uliftDown`\n`+ Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\n`+ Topology.IsEmbedding.codRestrict`\n`+ Topology.IsEmbedding.comapMetricSpace`\n`+ Topology.IsEmbedding.comapUniformSpace`\n`+ Topology.IsEmbedding.completelyNormalSpace`\n`+ Topology.IsEmbedding.continuousOn_iff`\n`+ Topology.IsEmbedding.inclusion`\n`+ Topology.IsEmbedding.inl`\n`+ Topology.IsEmbedding.inr`\n`+ Topology.IsEmbedding.isCompact_iff`\n`+ Topology.IsEmbedding.isLindelof_iff`\n`+ Topology.IsEmbedding.isLocallyClosed_iff`\n`+ Topology.IsEmbedding.isSigmaCompact_iff`\n`+ Topology.IsEmbedding.isTotallyDisconnected`\n`+ Topology.IsEmbedding.isTotallyDisconnected_image`\n`+ Topology.IsEmbedding.isTotallyDisconnected_range`\n`+ Topology.IsEmbedding.map_nhdsWithin_eq`\n`+ Topology.IsEmbedding.measurableEmbedding`\n`+ Topology.IsEmbedding.prodMap`\n`+ Topology.IsEmbedding.restrictPreimage`\n`+ Topology.IsEmbedding.secondCountableTopology`\n`+ Topology.IsEmbedding.separableSpace`\n`+ Topology.IsEmbedding.sigmaMk`\n`+ Topology.IsEmbedding.subtypeVal`\n`+ Topology.IsEmbedding.t0Space`\n`+ Topology.IsEmbedding.t1Space`\n`+ Topology.IsEmbedding.t25Space`\n`+ Topology.IsEmbedding.t2Space`\n`+ Topology.IsEmbedding.t3Space`\n`+ Topology.IsEmbedding.t5Space`\n`+ Topology.IsEmbedding.toPullbackDiag`\n`+ Topology.IsEmbedding.to_isometry`\n`+ Topology.IsEmbedding.uliftDown`\n`+ Topology.IsInducing.alexandrovDiscrete`\n`+ Topology.IsInducing.codRestrict`\n`+ Topology.IsInducing.comapPseudoMetricSpace`\n`+ Topology.IsInducing.continuousConstSMul`\n`+ Topology.IsInducing.continuousInv`\n`+ Topology.IsInducing.continuousMul`\n`+ Topology.IsInducing.continuousOn_iff`\n`+ Topology.IsInducing.continuousSMul`\n`+ Topology.IsInducing.continuousWithinAt_iff`\n`+ Topology.IsInducing.frechetUrysohnSpace`\n`+ Topology.IsInducing.generalizingMap`\n`+ Topology.IsInducing.hasProd_iff`\n`+ Topology.IsInducing.injective`\n`+ Topology.IsInducing.inseparable_iff`\n`+ Topology.IsInducing.isClosedMap`\n`+ Topology.IsInducing.isCompact_iff`\n`+ Topology.IsInducing.isCompact_preimage`\n`+ Topology.IsInducing.isCompact_preimage'`\n`+ Topology.IsInducing.isCompact_preimage_iff`\n`+ Topology.IsInducing.isEmbedding`\n`+ Topology.IsInducing.isLindelof_iff`\n`+ Topology.IsInducing.isLindelof_preimage`\n`+ Topology.IsInducing.isLocallyClosed_iff`\n`+ Topology.IsInducing.isOpenMap`\n`+ Topology.IsInducing.isPathConnected_iff`\n`+ Topology.IsInducing.isPreconnected_image`\n`+ Topology.IsInducing.isSigmaCompact_iff`\n`+ Topology.IsInducing.joinedIn_image`\n`+ Topology.IsInducing.locallyCompactSpace`\n`+ Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\n`+ Topology.IsInducing.of_codRestrict`\n`+ Topology.IsInducing.prodMap`\n`+ Topology.IsInducing.r0Space`\n`+ Topology.IsInducing.r1Space`\n`+ Topology.IsInducing.regularSpace`\n`+ Topology.IsInducing.restrictPreimage`\n`+ Topology.IsInducing.secondCountableTopology`\n`+ Topology.IsInducing.specializes_iff`\n`+ Topology.IsInducing.specializingMap`\n`+ Topology.IsInducing.subtypeVal`\n`+ Topology.IsInducing.topologicalGroup`\n`+ Topology.IsInducing.withSeminorms`\n`+ Topology.IsOpenEmbedding.coborder_preimage`\n`+ Topology.IsOpenEmbedding.compatiblePreserving`\n`+ Topology.IsOpenEmbedding.functor_isContinuous`\n`+ Topology.IsOpenEmbedding.functor_obj_injective`\n`+ Topology.IsOpenEmbedding.inl`\n`+ Topology.IsOpenEmbedding.inr`\n`+ Topology.IsOpenEmbedding.isLocalHomeomorph`\n`+ Topology.IsOpenEmbedding.isQuasiSeparated_iff`\n`+ Topology.IsOpenEmbedding.locPathConnectedSpace`\n`+ Topology.IsOpenEmbedding.locallyCompactSpace`\n`+ Topology.IsOpenEmbedding.locallyConnectedSpace`\n`+ Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ Topology.IsOpenEmbedding.measurableEmbedding`\n`+ Topology.IsOpenEmbedding.preimage_closedPoints`\n`+ Topology.IsOpenEmbedding.prodMap`\n`+ Topology.IsOpenEmbedding.quasiSober`\n`+ Topology.IsOpenEmbedding.restrictPreimage`\n`+ Topology.IsOpenEmbedding.sigmaMk`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Topology.IsQuotientMap.continuousOn_isOpen_iff`\n`+ Topology.IsQuotientMap.continuous_lift_prod_left`\n`+ Topology.IsQuotientMap.continuous_lift_prod_right`\n`+ Topology.IsQuotientMap.image_connectedComponent`\n`+ Topology.IsQuotientMap.isClopen_preimage`\n`+ Topology.IsQuotientMap.preimage_connectedComponent`\n`+ Topology.IsQuotientMap.restrictPreimage_isOpen`\n`+ Topology.IsQuotientMap.sequentialSpace`\n`+ Topology.isEmbedding_sigmaMap`\n`+ Topology.isInducing_const_prod`\n`+ Topology.isInducing_prod_const`\n`+ Topology.isInducing_sigmaMap`\n`+ Topology.isOpenEmbedding_sigmaMap`\n`+ _root_.Topology.IsClosedEmbedding.integral_map`\n`+ _root_.Topology.IsClosedEmbedding.polishSpace`\n`+ _root_.Topology.IsClosedEmbedding.setIntegral_map`\n`+ _root_.Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\n`+ _root_.Topology.IsEmbedding.firstCountableTopology`\n`+ _root_.Topology.IsEmbedding.metrizableSpace`\n`+ _root_.Topology.IsEmbedding.toHomeomorph_of_surjective`\n`+ _root_.Topology.IsInducing.firstCountableTopology`\n`+ _root_.Topology.IsInducing.noetherianSpace`\n`+ _root_.Topology.IsInducing.pseudoMetrizableSpace`\n`+ _root_.Topology.IsQuotientMap.secondCountableTopology`\n`+ _root_.Topology.IsQuotientMap.separableSpace`\n`- IsClosedEmbedding.LindelofSpace`\n`- IsClosedEmbedding.compactSpace`\n`- IsClosedEmbedding.inl`\n`- IsClosedEmbedding.inr`\n`- IsClosedEmbedding.isCompact_preimage`\n`- IsClosedEmbedding.isLindelof_preimage`\n`- IsClosedEmbedding.isProperMap`\n`- IsClosedEmbedding.locallyCompactSpace`\n`- IsClosedEmbedding.measurableEmbedding`\n`- IsClosedEmbedding.nonLindelofSpace`\n`- IsClosedEmbedding.noncompactSpace`\n`- IsClosedEmbedding.normalSpace`\n`- IsClosedEmbedding.paracompactSpace`\n`- IsClosedEmbedding.preimage_closedPoints`\n`- IsClosedEmbedding.quasiSober`\n`- IsClosedEmbedding.restrictPreimage`\n`- IsClosedEmbedding.sigmaCompactSpace`\n`- IsClosedEmbedding.sigmaMk`\n`- IsClosedEmbedding.subtypeVal`\n`- IsClosedEmbedding.t4Space`\n`- IsClosedEmbedding.tendsto_coLindelof`\n`- IsClosedEmbedding.tendsto_cocompact`\n`- IsClosedEmbedding.uliftDown`\n`- IsClosedEmbedding.weaklyLocallyCompactSpace`\n`- IsEmbedding.codRestrict`\n`- IsEmbedding.comapMetricSpace`\n`- IsEmbedding.comapUniformSpace`\n`- IsEmbedding.completelyNormalSpace`\n`- IsEmbedding.continuousOn_iff`\n`- IsEmbedding.inclusion`\n`- IsEmbedding.inl`\n`- IsEmbedding.inr`\n`- IsEmbedding.isCompact_iff`\n`- IsEmbedding.isLindelof_iff`\n`- IsEmbedding.isLocallyClosed_iff`\n`- IsEmbedding.isSigmaCompact_iff`\n`- IsEmbedding.isTotallyDisconnected`\n`- IsEmbedding.isTotallyDisconnected_image`\n`- IsEmbedding.isTotallyDisconnected_range`\n`- IsEmbedding.map_nhdsWithin_eq`\n`- IsEmbedding.measurableEmbedding`\n`- IsEmbedding.prodMap`\n`- IsEmbedding.restrictPreimage`\n`- IsEmbedding.secondCountableTopology`\n`- IsEmbedding.separableSpace`\n`- IsEmbedding.sigmaMk`\n`- IsEmbedding.subtypeVal`\n`- IsEmbedding.t0Space`\n`- IsEmbedding.t1Space`\n`- IsEmbedding.t25Space`\n`- IsEmbedding.t2Space`\n`- IsEmbedding.t3Space`\n`- IsEmbedding.t5Space`\n`- IsEmbedding.toPullbackDiag`\n`- IsEmbedding.to_isometry`\n`- IsEmbedding.uliftDown`\n`- IsInducing.alexandrovDiscrete`\n`- IsInducing.codRestrict`\n`- IsInducing.comapPseudoMetricSpace`\n`- IsInducing.continuousConstSMul`\n`- IsInducing.continuousInv`\n`- IsInducing.continuousMul`\n`- IsInducing.continuousOn_iff`\n`- IsInducing.continuousSMul`\n`- IsInducing.continuousWithinAt_iff`\n`- IsInducing.frechetUrysohnSpace`\n`- IsInducing.generalizingMap`\n`- IsInducing.hasProd_iff`\n`- IsInducing.injective`\n`- IsInducing.inseparable_iff`\n`- IsInducing.isClosedMap`\n`- IsInducing.isCompact_iff`\n`- IsInducing.isCompact_preimage`\n`- IsInducing.isCompact_preimage'`\n`- IsInducing.isCompact_preimage_iff`\n`- IsInducing.isEmbedding`\n`- IsInducing.isLindelof_iff`\n`- IsInducing.isLindelof_preimage`\n`- IsInducing.isLocallyClosed_iff`\n`- IsInducing.isOpenMap`\n`- IsInducing.isPathConnected_iff`\n`- IsInducing.isPreconnected_image`\n`- IsInducing.isSigmaCompact_iff`\n`- IsInducing.joinedIn_image`\n`- IsInducing.locallyCompactSpace`\n`- IsInducing.multipliable_iff_tprod_comp_mem_range`\n`- IsInducing.of_codRestrict`\n`- IsInducing.prodMap`\n`- IsInducing.r0Space`\n`- IsInducing.r1Space`\n`- IsInducing.regularSpace`\n`- IsInducing.restrictPreimage`\n`- IsInducing.secondCountableTopology`\n`- IsInducing.specializes_iff`\n`- IsInducing.specializingMap`\n`- IsInducing.subtypeVal`\n`- IsInducing.topologicalGroup`\n`- IsInducing.withSeminorms`\n`- IsOpenEmbedding.coborder_preimage`\n`- IsOpenEmbedding.compatiblePreserving`\n`- IsOpenEmbedding.functor_isContinuous`\n`- IsOpenEmbedding.functor_obj_injective`\n`- IsOpenEmbedding.inl`\n`- IsOpenEmbedding.inr`\n`- IsOpenEmbedding.isLocalHomeomorph`\n`- IsOpenEmbedding.isQuasiSeparated_iff`\n`- IsOpenEmbedding.locPathConnectedSpace`\n`- IsOpenEmbedding.locallyCompactSpace`\n`- IsOpenEmbedding.locallyConnectedSpace`\n`- IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`- IsOpenEmbedding.measurableEmbedding`\n`- IsOpenEmbedding.preimage_closedPoints`\n`- IsOpenEmbedding.prodMap`\n`- IsOpenEmbedding.quasiSober`\n`- IsOpenEmbedding.restrictPreimage`\n`- IsOpenEmbedding.sigmaMk`\n`- IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- IsQuotientMap.continuousOn_isOpen_iff`\n`- IsQuotientMap.continuous_lift_prod_left`\n`- IsQuotientMap.continuous_lift_prod_right`\n`- IsQuotientMap.image_connectedComponent`\n`- IsQuotientMap.isClopen_preimage`\n`- IsQuotientMap.preimage_connectedComponent`\n`- IsQuotientMap.restrictPreimage_isOpen`\n`- IsQuotientMap.sequentialSpace`\n`- _root_.IsClosedEmbedding.integral_map`\n`- _root_.IsClosedEmbedding.polishSpace`\n`- _root_.IsClosedEmbedding.setIntegral_map`\n`- _root_.IsEmbedding.aestronglyMeasurable_comp_iff`\n`- _root_.IsEmbedding.firstCountableTopology`\n`- _root_.IsEmbedding.metrizableSpace`\n`- _root_.IsEmbedding.toHomeomorph_of_surjective`\n`- _root_.IsInducing.firstCountableTopology`\n`- _root_.IsInducing.noetherianSpace`\n`- _root_.IsInducing.pseudoMetrizableSpace`\n`- _root_.IsQuotientMap.secondCountableTopology`\n`- _root_.IsQuotientMap.separableSpace`\n`- isEmbedding_sigmaMap`\n`- isInducing_const_prod`\n`- isInducing_prod_const`\n`- isInducing_sigmaMap`\n`- isOpenEmbedding_sigmaMap`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "createdAt": "2024-08-21T20:51:03Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANBrCEa",
              "createdAt": "2024-08-23T02:32:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANB5Y8r",
              "createdAt": "2024-08-23T09:10:45Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANB52XV",
              "createdAt": "2024-08-23T09:21:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANB58Bt",
              "createdAt": "2024-08-23T09:22:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANHR_Qh",
              "createdAt": "2024-08-30T12:53:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANUDPzA",
              "createdAt": "2024-09-17T17:47:14Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANVlmE5",
              "createdAt": "2024-09-19T09:24:52Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANVo1OL",
              "createdAt": "2024-09-19T10:24:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANWGWsH",
              "createdAt": "2024-09-19T19:13:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANW6inq",
              "createdAt": "2024-09-20T17:00:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANW6xF9",
              "createdAt": "2024-09-20T17:05:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANYtgPr",
              "createdAt": "2024-09-24T01:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANY-db5",
              "createdAt": "2024-09-24T08:47:09Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANY_li6",
              "createdAt": "2024-09-24T09:06:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANZarhb",
              "createdAt": "2024-09-24T16:55:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANaK1Uj",
              "createdAt": "2024-09-25T11:43:07Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANaLIPo",
              "createdAt": "2024-09-25T11:48:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANcTM2P",
              "createdAt": "2024-09-27T16:10:04Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANcx5Eg",
              "createdAt": "2024-09-28T16:43:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZU_o-",
              "createdAt": "2024-09-28T21:04:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c58_Ij6",
                "title": "[Merged by Bors] - chore: Rename `DenseInducing` to `IsDenseInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17208"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZYGjv",
              "createdAt": "2024-09-29T07:32:13Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59BPPr",
                "title": "[Merged by Bors] - chore: Rename `DenseEmbedding` to `IsDenseEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17247"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANc9br6",
              "createdAt": "2024-09-29T07:47:28Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANc9evg",
              "createdAt": "2024-09-29T07:53:07Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANc9qD7",
              "createdAt": "2024-09-29T08:14:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANdBfOP",
              "createdAt": "2024-09-29T15:32:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANdvs8e",
              "createdAt": "2024-09-30T14:44:12Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZppQn",
              "createdAt": "2024-09-30T14:51:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59Id7b",
                "title": "[Merged by Bors] - chore: Rename `UniformEmbedding` to `IsUniformEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17295"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANdwZVs",
              "createdAt": "2024-09-30T14:55:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANdyDZj",
              "createdAt": "2024-09-30T15:22:41Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANdy4OM",
              "createdAt": "2024-09-30T15:35:19Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANgsxuL",
              "createdAt": "2024-10-03T16:33:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANg594s",
              "createdAt": "2024-10-03T21:47:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANhIBAV",
              "createdAt": "2024-10-04T07:08:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANhILuO",
              "createdAt": "2024-10-04T07:12:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5awnP8",
              "createdAt": "2024-10-04T07:12:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59lVXO",
                "title": "[Merged by Bors] - chore: Rename `UniformInducing` to `IsUniformInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17398"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANhV7_Z",
              "createdAt": "2024-10-04T11:47:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANiBZz6",
              "createdAt": "2024-10-06T02:20:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANjz01h",
              "createdAt": "2024-10-08T16:02:22Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANjz6eZ",
              "createdAt": "2024-10-08T16:04:03Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANj1ddw",
              "createdAt": "2024-10-08T16:31:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANkFJgK",
              "createdAt": "2024-10-08T23:40:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANnWhec",
              "createdAt": "2024-10-13T07:23:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANnWmKd",
              "createdAt": "2024-10-13T07:34:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANnpJmr",
              "createdAt": "2024-10-14T02:49:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANr8oLH",
              "createdAt": "2024-10-17T09:30:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANr-qi8",
              "createdAt": "2024-10-17T10:06:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANsAbQQ",
              "createdAt": "2024-10-17T10:41:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANtFXqA",
              "createdAt": "2024-10-18T08:28:51Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANtFq_q",
              "createdAt": "2024-10-18T08:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eHllT",
              "createdAt": "2024-10-18T08:43:18Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_EnFF",
                "title": "[Merged by Bors] - chore: Rename `OpenEmbedding` to `IsOpenEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17898"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANtG2sx",
              "createdAt": "2024-10-18T08:49:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANtPCpt",
              "createdAt": "2024-10-18T10:28:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANt2iXr",
              "createdAt": "2024-10-18T22:04:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eWftn",
              "createdAt": "2024-10-19T07:22:37Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_Kect",
                "title": "[Merged by Bors] - chore: Rename `ClosedEmbedding` to `IsClosedEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17937"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANt9HpA",
              "createdAt": "2024-10-19T07:32:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANt9YyW",
              "createdAt": "2024-10-19T07:54:39Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANt9ZC_",
              "createdAt": "2024-10-19T07:55:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANvROZl",
              "createdAt": "2024-10-20T14:22:24Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANvRRAx",
              "createdAt": "2024-10-20T14:26:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANvfTy9",
              "createdAt": "2024-10-20T21:26:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANvfaaH",
              "createdAt": "2024-10-20T21:40:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANwPdvz",
              "createdAt": "2024-10-21T16:33:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANxNccZ",
              "createdAt": "2024-10-22T12:24:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANxglV_",
              "createdAt": "2024-10-22T16:54:48Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANxhbvT",
              "createdAt": "2024-10-22T17:10:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANxz9UP",
              "createdAt": "2024-10-22T23:18:30Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANx--nJ",
              "createdAt": "2024-10-23T03:23:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANyAp58",
              "createdAt": "2024-10-23T03:46:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANyWV-8",
              "createdAt": "2024-10-23T07:34:22Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANyWZyS",
              "createdAt": "2024-10-23T07:35:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANzeYOd",
              "createdAt": "2024-10-23T16:04:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN1UJAU",
              "createdAt": "2024-10-24T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN5YN83",
              "createdAt": "2024-10-27T09:17:36Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN5Yhyn",
              "createdAt": "2024-10-27T09:23:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN6D1ol",
              "createdAt": "2024-10-27T21:42:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN7SFIO",
              "createdAt": "2024-10-28T09:35:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN7SPZX",
              "createdAt": "2024-10-28T09:36:40Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN7UJ8M",
              "createdAt": "2024-10-28T09:55:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN7eCLR",
              "createdAt": "2024-10-28T11:25:27Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN7gTmQ",
              "createdAt": "2024-10-28T11:48:01Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN7kzUh",
              "createdAt": "2024-10-28T12:31:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN8QcmV",
              "createdAt": "2024-10-28T21:11:44Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN8RSzB",
              "createdAt": "2024-10-28T21:29:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN9TXrR",
              "createdAt": "2024-10-29T15:47:58Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN9UQlk",
              "createdAt": "2024-10-29T16:00:52Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5g_Djv",
              "createdAt": "2024-10-29T16:10:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6ARJJk",
                "title": "[Merged by Bors] - chore(Topology): miscellaneous renames",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18398"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN9VraH",
              "createdAt": "2024-10-29T16:24:08Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN9mnnn",
              "createdAt": "2024-10-29T22:52:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAOFGwq0",
              "createdAt": "2024-11-05T11:11:55Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAOFIDQZ",
              "createdAt": "2024-11-05T11:38:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAOFSbTt",
              "createdAt": "2024-11-05T14:40:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAOGpBu8",
              "createdAt": "2024-11-06T09:13:45Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAOGqGdv",
              "createdAt": "2024-11-06T09:23:55Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6SkusX",
              "createdAt": "2024-11-06T09:23:57Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16087~~\n* ~~leanprover-community/mathlib4#17208~~\n* ~~leanprover-community/mathlib4#17247~~\n* ~~leanprover-community/mathlib4#17295~~\n* ~~leanprover-community/mathlib4#17398~~\n* ~~leanprover-community/mathlib4#17898~~\n* ~~leanprover-community/mathlib4#17937~~\n* ~~leanprover-community/mathlib4#18062~~\n* ~~leanprover-community/mathlib4#18133~~\n* ~~leanprover-community/mathlib4#18330~~\n* ~~leanprover-community/mathlib4#18398~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAOGsUjG",
              "createdAt": "2024-11-06T09:44:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Qseor",
              "createdAt": "2024-11-11T15:27:45Z",
              "body": "",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAONFzrE",
              "createdAt": "2024-11-11T15:33:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAONHVMj",
              "createdAt": "2024-11-11T16:03:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIssL",
              "createdAt": "2024-11-11T16:08:48Z",
              "body": "Please add `Moves` section to the commit message, at least with all the definitions you move. Explain that we don't add deprecated aliases, because definitions `_root_.IsInducing` etc existed for a short period of time and adding aliases would create conflicts.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TJk5-",
              "createdAt": "2024-11-11T18:09:16Z",
              "body": "Thanks! :tada:\r\nbors merge",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAONM24b",
              "createdAt": "2024-11-11T18:09:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TJxlp",
              "createdAt": "2024-11-11T18:41:20Z",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11784198308/job/32822888582)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAONOXDX",
              "createdAt": "2024-11-11T18:48:51Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAONOYEF",
              "createdAt": "2024-11-11T18:49:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABWsHQeA",
                "name": "auto-merge-after-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TJ6wM",
              "createdAt": "2024-11-11T19:06:13Z",
              "body": "As this PR is labelled `auto-merge-after-CI`, we are now sending it to bors:\n\nbors merge",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TJ9aZ",
              "createdAt": "2024-11-11T19:13:49Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11784666221/job/32824319787)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11784666221/job/32824319585)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6ThXjxzwAAAAONPQK7",
              "createdAt": "2024-11-11T19:13:50Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6ThXjxzwAAAAONPQQv",
              "createdAt": "2024-11-11T19:13:52Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
