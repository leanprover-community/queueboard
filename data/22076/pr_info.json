{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 75,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6fDvLD",
              "body": "### PR summary [45978c1d9d](https://github.com/leanprover-community/mathlib4/pull/22076/commits/45978c1d9d81ee81be26c646c0d5a61661abc06b)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ delabFinsetFilter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-19T12:47:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fIo5S",
              "body": "This is nice, but I wonder if we can make it slightly nicer. Currently, this occurs:\r\n```\r\nimport Mathlib\r\n\r\nvariable {α : Type*} [Fintype α] {p : α → Prop} {s : Finset α} {a : α}\r\n    [DecidablePred p] [DecidableEq α]\r\n\r\n#check ({x | p x} : Finset α) -- works\r\n#check ({x ∈ s | p x}) -- works\r\n#check ({x ≠ a | p x} : Finset α) -- {x ∈ {a}ᶜ | p x} : Finset α\r\n#check ({x ∉ s | p x}) -- {x ∈ sᶜ | p x} : Finset α\r\n```\r\nI understand what's going on ((3) and (4) are special cases of (2), and the logic for (2) dictates the resulting syntax). However, I wonder if you could add some additional logic / matching to handle those special cases (when `s := {a}ᶜ` or when `s := sᶜ`).\r\n\r\nDo so wouldn't make it round trip, but it would at least mean the delaborator is providing syntax for the nicest notation in each case.",
              "createdAt": "2025-02-19T21:51:24Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fg09T",
              "body": "I can't get it to work. Here's my best attempt (put it at the end of `Data.Finset.BooleanAlgebra`). Somehow `trySynthInstance q(DecidableEq $α)` fails even though `DecidableEq α` is in context.\r\n\r\n```\r\nnamespace Mathlib.Meta\r\nopen Lean Elab Term Meta Batteries.ExtendedBinder Parser.Term PrettyPrinter.Delaborator SubExpr Qq\r\n\r\n/-- Delaborator for `Finset.filter`. The `pp.funBinderTypes` option controls whether\r\nto show the domain type when the filter is over `Finset.univ`. -/\r\n@[app_delab Finset.filter] def delabFinsetFilter : Delab :=\r\n  whenPPOption getPPNotation do\r\n  let ppDomain ← getPPOption getPPFunBinderTypes\r\n  let #[_, p, _, s] := (← getExpr).getAppArgs | failure\r\n  guard p.isLambda\r\n  let i ← withNaryArg 1 <| withBindingBodyUnusedName fun i => pure (⟨i⟩ : Ident)\r\n  let p ← withNaryArg 1 <| withBindingBody i.getId do\r\n    let p ← delab\r\n    return p\r\n  let ⟨.succ u, ~q(Finset $α), s⟩ ← inferTypeQ s | failure\r\n  logInfo \"hi\"\r\n  match s with\r\n  | ~q(@Finset.univ _ $inst) =>\r\n    if ppDomain then\r\n      let ty ← withNaryArg 0 delab\r\n      `({$i:ident : $ty | $p})\r\n    else\r\n      `({$i:ident | $p})\r\n  | s =>\r\n    match ← trySynthInstanceQ q(DecidableEq $α), ← trySynthInstanceQ q(Fintype $α) with\r\n    | .some _, .some _ =>\r\n      match s with\r\n      | ~q({$a}ᶜ) =>\r\n        let a ← withNaryArg 3 <| withNaryArg 2 <| withNaryArg 3 delab\r\n        `({$i:ident ≠ $a | $p})\r\n      | ~q($s) =>\r\n        let t ← withNaryArg 3 <| withNaryArg 2 delab\r\n        `({$i:ident ∉ $t | $p})\r\n      | _ =>\r\n        let t ← withNaryArg 3 delab\r\n        `({$i:ident ∈ $t | $p})\r\n    | _, _ =>\r\n      let t ← withNaryArg 3 delab\r\n      `({$i:ident ∈ $t | $p})\r\n\r\nend Mathlib.Meta\r\n```\r\n\r\n",
              "createdAt": "2025-02-22T12:42:49Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a9335839f18e537ae18e3fdb46a9ef47cd651802",
                "additions": 60,
                "deletions": 3,
                "committedDate": "2025-02-19T12:43:44Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTCATA",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412855099/job/37466701900"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTCAXg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412855103/job/37466701918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTCBvw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412855099/job/37466702271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTCCJg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412855103/job/37466702374"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTHQIg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412855099/job/37466787874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTCD1Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412855103/job/37466702805"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "33dfca92d3072724dd5747270f9140ae1a508814",
                "additions": 0,
                "deletions": 38,
                "committedDate": "2025-02-19T12:44:57Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTGQrA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412877407/job/37466771628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTGOsg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412877407/job/37466771122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTGSbQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412877407/job/37466772077"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c19a274a790dfb19ff00f5f62207b6fd1d8392c2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-02-19T12:45:13Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTUkFw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412951652/job/37467005975"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTUkMw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412951682/job/37467006003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTHP4g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412882663/job/37466787810"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTZfBA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412978320/job/37467086596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTMK0Q",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412908019/job/37466868433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTMK2Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412907997/job/37466868441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTZgLA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412978310/job/37467086892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTMKww",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412907994/job/37466868419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTZe7g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412978317/job/37467086574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTHTnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412882649/job/37466788767"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTMK0g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412908001/job/37466868434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTHVCw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412882649/job/37466789131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTHNQQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412882663/job/37466787137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTMMhQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412908001/job/37466868869"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTt8fA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412882649/job/37467421820"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTHRwQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13412882663/job/37466788289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTNdZA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37466889572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTO1CQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22076&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "92d4a40747fd2d536f23dceb3f2dd27f9d7d8eeb",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2025-02-19T12:55:02Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuy0S0Q",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13423047966/job/37500031697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuy0chA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13423048673/job/37500034180"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqT5w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068409/job/37467362279"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuy0msg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13423049366/job/37500036786"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxAr_fA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13473005083/job/37648793468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD63YUg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908711491/job/38917757010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTsljw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413080973/job/37467399567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD6zp2w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908693931/job/38917695963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqVdw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068818/job/37467362679"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTslhg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413080970/job/37467399558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD6zr2w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908693927/job/38917696475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqVIg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068817/job/37467362594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTslbg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413080952/job/37467399534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJD6zofQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13908693939/job/38917695613"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTt-sg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068401/job/37467422386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqVDg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068819/job/37467362574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqSNg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068409/job/37467361846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTuAHQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068401/job/37467422749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqWnA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068819/job/37467362972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTqVVQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068409/job/37467362645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuWFuOw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413068401/job/37469908539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTrTYg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37467378530"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTsNGg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22076&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "45978c1d9d81ee81be26c646c0d5a61661abc06b",
                "additions": 53,
                "deletions": 6,
                "committedDate": "2025-03-18T11:51:03Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAMyQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489528/job/38958795977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiW1kg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922600020/job/38959166866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAOMA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489947/job/38958796336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAOYQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489952/job/38958796385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAMJg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489531/job/38958795814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAQrQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489962/job/38958796973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiALIg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489528/job/38958795554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAK6w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489531/job/38958795499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAPUg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489962/job/38958796626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiAOPw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489528/job/38958796351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEkOz6w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489531/job/38961132523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiBTOw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38958814011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJEiB-GQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22076&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-19T12:46:41Z",
        "deletions": 9,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Expect.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Finset/Defs.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Fintype/Defs.lean",
              "additions": 29,
              "deletions": 3
            },
            {
              "path": "MathlibTest/Delab/FinsetBuilder.lean",
              "additions": 40,
              "deletions": 0
            }
          ]
        },
        "headRefName": "delab_finset_filter",
        "headRefOid": "45978c1d9d81ee81be26c646c0d5a61661abc06b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LvomO",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6gcdeh",
              "body": "Maybe you could also add Jireh's examples as tests somewhere? Here they are again (I had to add two instances, not sure if that's just because of missing imports in my example file):\r\n\r\n```lean\r\nvariable {α : Type*} [Fintype α] {p : α → Prop} {s : Finset α} {a : α}\r\n    [DecidablePred p] [DecidableEq α] [Singleton α (Finset α)] [HasCompl (Finset α)]\r\n\r\n/-- info: {x | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x | p x} : Finset α)\r\n\r\n/-- info: {x ∈ s | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ∈ s | p x})\r\n\r\n/-- info: {x ≠ a | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ≠ a | p x} : Finset α) -- {x ∈ {a}ᶜ | p x} : Finset α\r\n\r\n/-- info: {x ∉ s | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ∉ s | p x})\r\n\r\n/-- info: {x : α | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x | p x} : Finset α)\r\n\r\n/-- info: {x ∈ s | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ∈ s | p x})\r\n\r\n/-- info: {x ≠ a | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ≠ a | p x} : Finset α)\r\n\r\n/-- info: {x ∉ s | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ∉ s | p x})\r\n```",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2025-03-17T19:59:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ckDEY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-02-19T12:50:30Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22076,
        "potentialMergeCommit": {
          "oid": "4a93950dd75337df6d046da82e49f80ed1adb5eb"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ckDEY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-02-19T12:50:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ckGQB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-19T12:55:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6gcdeh",
              "body": "Maybe you could also add Jireh's examples as tests somewhere? Here they are again (I had to add two instances, not sure if that's just because of missing imports in my example file):\r\n\r\n```lean\r\nvariable {α : Type*} [Fintype α] {p : α → Prop} {s : Finset α} {a : α}\r\n    [DecidablePred p] [DecidableEq α] [Singleton α (Finset α)] [HasCompl (Finset α)]\r\n\r\n/-- info: {x | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x | p x} : Finset α)\r\n\r\n/-- info: {x ∈ s | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ∈ s | p x})\r\n\r\n/-- info: {x ≠ a | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ≠ a | p x} : Finset α) -- {x ∈ {a}ᶜ | p x} : Finset α\r\n\r\n/-- info: {x ∉ s | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ∉ s | p x})\r\n\r\n/-- info: {x : α | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x | p x} : Finset α)\r\n\r\n/-- info: {x ∈ s | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ∈ s | p x})\r\n\r\n/-- info: {x ≠ a | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ≠ a | p x} : Finset α)\r\n\r\n/-- info: {x ∉ s | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ∉ s | p x})\r\n```",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2025-03-17T19:59:19Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c507ARP",
                    "body": "I'd say that this should be controlled by the funBinderTypes option, since that's the one which controls the same without this delaborator. ",
                    "createdAt": "2025-02-19T12:50:30Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c507CLd",
                    "body": "Yeah I think you're right. I'm also modifying the existing delaborators for `Finset.sum`/`Finset.prod` to use it",
                    "createdAt": "2025-02-19T12:55:46Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53Lg92",
                    "body": "```suggestion\r\n  -- check if `t` is of the form `s₀ᶜ`, in which case we display `x ∉ s₀` instead\r\n  else if t.isAppOfArity ``HasCompl.compl 3 then\r\n    let #[_, _, s₀] := t.getAppArgs | failure\r\n    -- if `s₀` is a singleton, we can even use the notation `x ≠ a`\r\n    if s₀.isAppOfArity ``Singleton.singleton 4 then\r\n      let t ← withNaryArg 3 <| withNaryArg 2 <| withNaryArg 3 delab\r\n      `({$i:ident ≠ $t | $p})\r\n    else\r\n      let t ← withNaryArg 3 <| withNaryArg 2 delab\r\n      `({$i:ident ∉ $t | $p})\r\n  else\r\n    let t ← withNaryArg 3 delab\r\n    `({$i:ident ∈ $t | $p})\r\n```\r\n\r\nI think this does what Jireh suggested :)",
                    "createdAt": "2025-03-17T19:48:51Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53LhFj",
                    "body": "```suggestion\r\n  let p ← withNaryArg 1 <| withBindingBody i.getId delab\r\n```",
                    "createdAt": "2025-03-17T19:49:16Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53Lhq2",
                    "body": "```suggestion\r\n  let i ← withNaryArg 1 <| withBindingBodyUnusedName (pure ⟨·⟩)\r\n```\r\n(personal preference, optional!)",
                    "createdAt": "2025-03-17T19:51:18Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53LiWu",
                    "body": "```suggestion\r\n    if (← getPPOption getPPFunBinderTypes) then\r\n```\r\nor moving the `let ppDomain` here:\r\n```suggestion\r\n    let ppDomain ← getPPOption getPPFunBinderTypes\r\n    if ppDomain then\r\n```\r\n",
                    "createdAt": "2025-03-17T19:53:38Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAMyQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489528/job/38958795977"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiW1kg",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922600020/job/38959166866"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAOMA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489947/job/38958796336"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAOYQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489952/job/38958796385"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAMJg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489531/job/38958795814"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAQrQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489962/job/38958796973"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiALIg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489528/job/38958795554"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAK6w",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489531/job/38958795499"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAPUg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489962/job/38958796626"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiAOPw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489528/job/38958796351"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEkOz6w",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13922489531/job/38961132523"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiBTOw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38958814011"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJEiB-GQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22076&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: delaborator for finset builder notation",
        "updatedAt": "2025-03-18T11:57:48Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22076",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a9335839f18e537ae18e3fdb46a9ef47cd651802"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "33dfca92d3072724dd5747270f9140ae1a508814"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c19a274a790dfb19ff00f5f62207b6fd1d8392c2"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qqYBgzwAAAAPPbzj8",
              "createdAt": "2025-02-19T12:46:41Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fDvLD",
              "createdAt": "2025-02-19T12:47:38Z",
              "body": "### PR summary [45978c1d9d](https://github.com/leanprover-community/mathlib4/pull/22076/commits/45978c1d9d81ee81be26c646c0d5a61661abc06b)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ delabFinsetFilter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqYBgzwAAAAPPb23K",
              "createdAt": "2025-02-19T12:47:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qqYBgzwAAAAPPb7rX",
              "createdAt": "2025-02-19T12:49:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqYBgzwAAAAPPb7rh",
              "createdAt": "2025-02-19T12:49:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ckDEY",
              "createdAt": "2025-02-19T12:50:29Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "92d4a40747fd2d536f23dceb3f2dd27f9d7d8eeb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fIo5S",
              "createdAt": "2025-02-19T21:51:24Z",
              "body": "This is nice, but I wonder if we can make it slightly nicer. Currently, this occurs:\r\n```\r\nimport Mathlib\r\n\r\nvariable {α : Type*} [Fintype α] {p : α → Prop} {s : Finset α} {a : α}\r\n    [DecidablePred p] [DecidableEq α]\r\n\r\n#check ({x | p x} : Finset α) -- works\r\n#check ({x ∈ s | p x}) -- works\r\n#check ({x ≠ a | p x} : Finset α) -- {x ∈ {a}ᶜ | p x} : Finset α\r\n#check ({x ∉ s | p x}) -- {x ∈ sᶜ | p x} : Finset α\r\n```\r\nI understand what's going on ((3) and (4) are special cases of (2), and the logic for (2) dictates the resulting syntax). However, I wonder if you could add some additional logic / matching to handle those special cases (when `s := {a}ᶜ` or when `s := sᶜ`).\r\n\r\nDo so wouldn't make it round trip, but it would at least mean the delaborator is providing syntax for the nicest notation in each case.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqYBgzwAAAAPP3Qk5",
              "createdAt": "2025-02-19T21:51:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABWsHQeA",
                "name": "auto-merge-after-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qqYBgzwAAAAPP3Qr2",
              "createdAt": "2025-02-19T21:51:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABWsHQeA",
                "name": "auto-merge-after-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqYBgzwAAAAPP3Q1Y",
              "createdAt": "2025-02-19T21:51:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fg09T",
              "createdAt": "2025-02-22T12:42:49Z",
              "body": "I can't get it to work. Here's my best attempt (put it at the end of `Data.Finset.BooleanAlgebra`). Somehow `trySynthInstance q(DecidableEq $α)` fails even though `DecidableEq α` is in context.\r\n\r\n```\r\nnamespace Mathlib.Meta\r\nopen Lean Elab Term Meta Batteries.ExtendedBinder Parser.Term PrettyPrinter.Delaborator SubExpr Qq\r\n\r\n/-- Delaborator for `Finset.filter`. The `pp.funBinderTypes` option controls whether\r\nto show the domain type when the filter is over `Finset.univ`. -/\r\n@[app_delab Finset.filter] def delabFinsetFilter : Delab :=\r\n  whenPPOption getPPNotation do\r\n  let ppDomain ← getPPOption getPPFunBinderTypes\r\n  let #[_, p, _, s] := (← getExpr).getAppArgs | failure\r\n  guard p.isLambda\r\n  let i ← withNaryArg 1 <| withBindingBodyUnusedName fun i => pure (⟨i⟩ : Ident)\r\n  let p ← withNaryArg 1 <| withBindingBody i.getId do\r\n    let p ← delab\r\n    return p\r\n  let ⟨.succ u, ~q(Finset $α), s⟩ ← inferTypeQ s | failure\r\n  logInfo \"hi\"\r\n  match s with\r\n  | ~q(@Finset.univ _ $inst) =>\r\n    if ppDomain then\r\n      let ty ← withNaryArg 0 delab\r\n      `({$i:ident : $ty | $p})\r\n    else\r\n      `({$i:ident | $p})\r\n  | s =>\r\n    match ← trySynthInstanceQ q(DecidableEq $α), ← trySynthInstanceQ q(Fintype $α) with\r\n    | .some _, .some _ =>\r\n      match s with\r\n      | ~q({$a}ᶜ) =>\r\n        let a ← withNaryArg 3 <| withNaryArg 2 <| withNaryArg 3 delab\r\n        `({$i:ident ≠ $a | $p})\r\n      | ~q($s) =>\r\n        let t ← withNaryArg 3 <| withNaryArg 2 delab\r\n        `({$i:ident ∉ $t | $p})\r\n      | _ =>\r\n        let t ← withNaryArg 3 delab\r\n        `({$i:ident ∈ $t | $p})\r\n    | _, _ =>\r\n      let t ← withNaryArg 3 delab\r\n      `({$i:ident ∈ $t | $p})\r\n\r\nend Mathlib.Meta\r\n```\r\n\r\n",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qqYBgzwAAAAPSRWkr",
              "createdAt": "2025-02-22T12:43:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6gcdeh",
              "createdAt": "2025-03-17T19:48:51Z",
              "body": "Maybe you could also add Jireh's examples as tests somewhere? Here they are again (I had to add two instances, not sure if that's just because of missing imports in my example file):\r\n\r\n```lean\r\nvariable {α : Type*} [Fintype α] {p : α → Prop} {s : Finset α} {a : α}\r\n    [DecidablePred p] [DecidableEq α] [Singleton α (Finset α)] [HasCompl (Finset α)]\r\n\r\n/-- info: {x | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x | p x} : Finset α)\r\n\r\n/-- info: {x ∈ s | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ∈ s | p x})\r\n\r\n/-- info: {x ≠ a | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ≠ a | p x} : Finset α) -- {x ∈ {a}ᶜ | p x} : Finset α\r\n\r\n/-- info: {x ∉ s | p x} : Finset α -/\r\n#guard_msgs in\r\n#check ({x ∉ s | p x})\r\n\r\n/-- info: {x : α | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x | p x} : Finset α)\r\n\r\n/-- info: {x ∈ s | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ∈ s | p x})\r\n\r\n/-- info: {x ≠ a | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ≠ a | p x} : Finset α)\r\n\r\n/-- info: {x ∉ s | p x} : Finset α -/\r\n#guard_msgs in\r\nset_option pp.funBinderTypes true in\r\n#check ({x ∉ s | p x})\r\n```",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6qqYBgzwAAAAPqK1Nx",
              "createdAt": "2025-03-17T19:59:28Z",
              "assignee": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqYBgzwAAAAPqK4uv",
              "createdAt": "2025-03-17T20:00:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "45978c1d9d81ee81be26c646c0d5a61661abc06b"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qqYBgzwAAAAPrPzis",
              "createdAt": "2025-03-18T11:57:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            }
          ]
        }
      }
    }
  }
}
