{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 250,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "101damnations"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Some tweaks and reorganising of this file, to bring it in line with the corresponding group homology file.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6eEs0h",
              "body": "### PR summary [9451186a3e](https://github.com/leanprover-community/mathlib4/pull/21739/commits/9451186a3ef19aef8487edee540f940ff8d03f2e)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ H0ι`\n`+ H1LequivOfIsTrivial_H1π_apply_apply`\n`+ H1LequivOfIsTrivial_comp_H1π`\n`+ H1π`\n`+ H1π_eq_zero_iff`\n`+ H2π`\n`+ H2π_eq_zero_iff`\n`+ dOne_apply_mem_twoCocycles`\n`+ dZero_apply_mem_oneCocycles`\n`+ dZero_eq_zero_iff`\n`+ inhomogeneousCochains.d_comp_d`\n`+ instance : Mono (H0ι A) := by`\n`+ isMulOneCoboundary_of_mem_oneCoboundaries`\n`+ isMulOneCocycle_of_mem_oneCocycles`\n`+ isMulTwoCoboundary_of_mem_twoCoboundaries`\n`+ isMulTwoCocycle_of_mem_twoCocycles`\n`+ isOneCoboundary_of_mem_oneCoboundaries`\n`+ isOneCocycle_of_mem_oneCocycles`\n`+ isTwoCoboundary_of_mem_twoCoboundaries`\n`+ isTwoCocycle_of_mem_twoCocycles`\n`+ isoOneCocycles_inv_comp_iCocycles`\n`+ isoTwoCocycles_inv_comp_iCocycles`\n`+ isoZeroCocycles_hom_comp_ι`\n`+ isoZeroCocycles_inv_comp_iCocycles`\n`+ mem_oneCocycles_of_mem_oneCoboundaries`\n`+ mem_twoCocycles_of_mem_twoCoboundaries`\n`+ oneCoboundariesToOneCocycles`\n`+ oneCoboundariesToOneCocycles_apply`\n`+ oneCoboundaries_le_oneCocycles`\n`+ oneCocycles.dOne_apply`\n`+ twoCoboundariesToTwoCocycles`\n`+ twoCoboundariesToTwoCocycles_apply`\n`+ twoCoboundaries_le_twoCocycles`\n`+ twoCocycles.dOne_apply`\n`- H1LequivOfIsTrivial_H1_π_apply_apply`\n`- H1LequivOfIsTrivial_comp_H1_π`\n`- H1_π`\n`- H2_π`\n`- instance : Mono (shortComplexH0 A).f := by`\n`- isMulOneCoboundary_of_oneCoboundaries`\n`- isMulOneCocycle_of_oneCocycles`\n`- isMulTwoCoboundary_of_twoCoboundaries`\n`- isMulTwoCocycle_of_twoCocycles`\n`- isOneCoboundary_of_oneCoboundaries`\n`- isOneCocycle_of_oneCocycles`\n`- isTwoCoboundary_of_twoCoboundaries`\n`- isTwoCocycle_of_twoCocycles`\n`- isoZeroCocycles_hom_comp_subtype`\n`- mem_oneCoboundaries_iff`\n`- mem_range_of_mem_oneCoboundaries`\n`- mem_range_of_mem_twoCoboundaries`\n`- mem_twoCoboundaries_iff`\n`- oneCoboundariesOfEq`\n`- oneCoboundariesOfEq_apply`\n`- oneCoboundariesOfMemRange`\n`- oneCoboundaries_of_mem_range_apply`\n`- twoCoboundariesOfEq`\n`- twoCoboundariesOfEq_apply`\n`- twoCoboundariesOfMemRange`\n`- twoCoboundariesOfMemRange_apply`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (2.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|1339|-2|erw|\n\nCurrent commit [9451186a3e](https://github.com/leanprover-community/mathlib4/commit/9451186a3ef19aef8487edee540f940ff8d03f2e)\nReference commit [0715c2be41](https://github.com/leanprover-community/mathlib4/commit/0715c2be41770a385d61ce5dd613a21723edb8d8)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-11T20:47:14Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9451186a3ef19aef8487edee540f940ff8d03f2e",
                "additions": 250,
                "deletions": 207,
                "committedDate": "2025-02-11T20:43:05Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJSTRw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141306/job/37053829959"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJbXIA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185527/job/37053978400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJbXwg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185517/job/37053978562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJbXbA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185537/job/37053978476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJSSAw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141316/job/37053829635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJbYtQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185520/job/37053978805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJSTEA",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141316/job/37053829904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJSR4Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141306/job/37053829601"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJbXZA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185520/job/37053978468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJSUSw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141306/job/37053830219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJbuAQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37053984257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIoJdBwg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21739&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-11T20:46:16Z",
        "deletions": 207,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Basic.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Hilbert90.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean",
              "additions": 242,
              "deletions": 204
            }
          ]
        },
        "headRefName": "gpcohlowdeg2",
        "headRefOid": "9451186a3ef19aef8487edee540f940ff8d03f2e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6K3Jjt",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21739,
        "potentialMergeCommit": {
          "oid": "9dbeaae615a81bf8b3eba78fbcc99fcab261deb9"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQwNzQ1MTA0",
              "login": "101damnations"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJSTRw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141306/job/37053829959"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJbXIA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185527/job/37053978400"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJbXwg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185517/job/37053978562"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJbXbA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185537/job/37053978476"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJSSAw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141316/job/37053829635"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJbYtQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185520/job/37053978805"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJSTEA",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141316/job/37053829904"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJSR4Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141306/job/37053829601"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJbXZA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272185520/job/37053978468"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJSUSw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13272141306/job/37053830219"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJbuAQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37053984257"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIoJdBwg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21739&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(RepresentationTheory/GroupCohomology/LowDegree): various tweaks",
        "updatedAt": "2025-02-11T20:47:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21739",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9451186a3ef19aef8487edee540f940ff8d03f2e"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6pqcFozwAAAAPJ1hTb",
              "createdAt": "2025-02-11T20:47:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6eEs0h",
              "createdAt": "2025-02-11T20:47:14Z",
              "body": "### PR summary [9451186a3e](https://github.com/leanprover-community/mathlib4/pull/21739/commits/9451186a3ef19aef8487edee540f940ff8d03f2e)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ H0ι`\n`+ H1LequivOfIsTrivial_H1π_apply_apply`\n`+ H1LequivOfIsTrivial_comp_H1π`\n`+ H1π`\n`+ H1π_eq_zero_iff`\n`+ H2π`\n`+ H2π_eq_zero_iff`\n`+ dOne_apply_mem_twoCocycles`\n`+ dZero_apply_mem_oneCocycles`\n`+ dZero_eq_zero_iff`\n`+ inhomogeneousCochains.d_comp_d`\n`+ instance : Mono (H0ι A) := by`\n`+ isMulOneCoboundary_of_mem_oneCoboundaries`\n`+ isMulOneCocycle_of_mem_oneCocycles`\n`+ isMulTwoCoboundary_of_mem_twoCoboundaries`\n`+ isMulTwoCocycle_of_mem_twoCocycles`\n`+ isOneCoboundary_of_mem_oneCoboundaries`\n`+ isOneCocycle_of_mem_oneCocycles`\n`+ isTwoCoboundary_of_mem_twoCoboundaries`\n`+ isTwoCocycle_of_mem_twoCocycles`\n`+ isoOneCocycles_inv_comp_iCocycles`\n`+ isoTwoCocycles_inv_comp_iCocycles`\n`+ isoZeroCocycles_hom_comp_ι`\n`+ isoZeroCocycles_inv_comp_iCocycles`\n`+ mem_oneCocycles_of_mem_oneCoboundaries`\n`+ mem_twoCocycles_of_mem_twoCoboundaries`\n`+ oneCoboundariesToOneCocycles`\n`+ oneCoboundariesToOneCocycles_apply`\n`+ oneCoboundaries_le_oneCocycles`\n`+ oneCocycles.dOne_apply`\n`+ twoCoboundariesToTwoCocycles`\n`+ twoCoboundariesToTwoCocycles_apply`\n`+ twoCoboundaries_le_twoCocycles`\n`+ twoCocycles.dOne_apply`\n`- H1LequivOfIsTrivial_H1_π_apply_apply`\n`- H1LequivOfIsTrivial_comp_H1_π`\n`- H1_π`\n`- H2_π`\n`- instance : Mono (shortComplexH0 A).f := by`\n`- isMulOneCoboundary_of_oneCoboundaries`\n`- isMulOneCocycle_of_oneCocycles`\n`- isMulTwoCoboundary_of_twoCoboundaries`\n`- isMulTwoCocycle_of_twoCocycles`\n`- isOneCoboundary_of_oneCoboundaries`\n`- isOneCocycle_of_oneCocycles`\n`- isTwoCoboundary_of_twoCoboundaries`\n`- isTwoCocycle_of_twoCocycles`\n`- isoZeroCocycles_hom_comp_subtype`\n`- mem_oneCoboundaries_iff`\n`- mem_range_of_mem_oneCoboundaries`\n`- mem_range_of_mem_twoCoboundaries`\n`- mem_twoCoboundaries_iff`\n`- oneCoboundariesOfEq`\n`- oneCoboundariesOfEq_apply`\n`- oneCoboundariesOfMemRange`\n`- oneCoboundaries_of_mem_range_apply`\n`- twoCoboundariesOfEq`\n`- twoCoboundariesOfEq_apply`\n`- twoCoboundariesOfMemRange`\n`- twoCoboundariesOfMemRange_apply`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (2.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|1339|-2|erw|\n\nCurrent commit [9451186a3e](https://github.com/leanprover-community/mathlib4/commit/9451186a3ef19aef8487edee540f940ff8d03f2e)\nReference commit [0715c2be41](https://github.com/leanprover-community/mathlib4/commit/0715c2be41770a385d61ce5dd613a21723edb8d8)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        }
      }
    }
  }
}
