{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 42,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alreadydone"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6aCeOM",
              "body": "### PR summary [cb2a813e68](https://github.com/leanprover-community/mathlib4/pull/20646/commits/cb2a813e689b9ff5d236572b55e20498b5ef05cc)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Logic.Function.Basic | 67 | 68 | +1 (+1.49%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>232 files</summary> `Mathlib.Algebra.Group.Units.Defs` `Mathlib.CategoryTheory.Category.ULift` `Mathlib.Data.Countable.Defs` `Mathlib.CategoryTheory.Monad.Algebra` `Mathlib.CategoryTheory.Thin` `Mathlib.Algebra.Group.Commute.Hom` `Mathlib.Tactic.FunProp` `Mathlib.Logic.UnivLE` `Mathlib.Tactic.Widget.StringDiagram` `Mathlib.Combinatorics.Quiver.Basic` `Mathlib.Tactic.CategoryTheory.BicategoryCoherence` `Mathlib.Order.RelIso.Basic` `Mathlib.CategoryTheory.Groupoid` `Mathlib.Combinatorics.Quiver.Cast` `Mathlib.Combinatorics.Quiver.Prefunctor` `Mathlib.Tactic.Widget.CongrM` `Mathlib.Combinatorics.Quiver.Path` `Mathlib.Data.FunLike.Equiv` `Mathlib.CategoryTheory.Limits.Cones` `Mathlib.CategoryTheory.Bicategory.Strict` `Mathlib.Deprecated.Equiv` `Mathlib.Data.Finite.Defs` `Mathlib.Order.RelIso.Group` `Mathlib.Logic.Equiv.Functor` `Mathlib.CategoryTheory.EpiMono` `Mathlib.CategoryTheory.Bicategory.Functor.LocallyDiscrete` `Mathlib.CategoryTheory.PUnit` `Mathlib.Tactic.CategoryTheory.Elementwise` `Mathlib.Tactic.IrreducibleDef` `Mathlib.CategoryTheory.Balanced` `Mathlib.CategoryTheory.Limits.IsLimit` `Mathlib.Data.Sum.Basic` `Mathlib.Tactic.CategoryTheory.Bicategory.Datatypes` `Mathlib.Logic.Equiv.Pairwise` `Mathlib.CategoryTheory.FiberedCategory.Fiber` `Mathlib.Tactic.FunProp.Elab` `Mathlib.CategoryTheory.Elementwise` `Mathlib.CategoryTheory.Equivalence` `Mathlib.Data.FunLike.Embedding` `Mathlib.Combinatorics.Quiver.ConnectedComponent` `Mathlib.CategoryTheory.Yoneda` `Mathlib.Combinatorics.Quiver.Subquiver` `Mathlib.CategoryTheory.Quotient` `Mathlib.CategoryTheory.Bicategory.Coherence` `Mathlib.Logic.Relation` `Mathlib.Combinatorics.Quiver.Symmetric` `Mathlib.CategoryTheory.Functor.Basic` `Mathlib.CategoryTheory.Category.Cat` `Mathlib.Combinatorics.Quiver.Push` `Mathlib.CategoryTheory.FullSubcategory` `Mathlib.CategoryTheory.Category.Quiv` `Mathlib.CategoryTheory.CodiscreteCategory` `Mathlib.CategoryTheory.Sigma.Basic` `Mathlib.CategoryTheory.Whiskering` `Mathlib.CategoryTheory.Adjunction.Opposites` `Mathlib.CategoryTheory.Retract` `Mathlib.CategoryTheory.Adjunction.Restrict` `Mathlib.CategoryTheory.Monoidal.CoherenceLemmas` `Mathlib.Algebra.Group.Hom.CompTypeclasses` `Mathlib.CategoryTheory.UnivLE` `Mathlib.CategoryTheory.FiberedCategory.Cocartesian` `Mathlib.CategoryTheory.Functor.FullyFaithful` `Mathlib.CategoryTheory.ClosedUnderIsomorphisms` `Mathlib.Data.Opposite` `Mathlib.CategoryTheory.Products.Unitor` `Mathlib.CategoryTheory.Functor.Hom` `Mathlib.Tactic.CategoryTheory.Monoidal.Normalize` `Mathlib.CategoryTheory.Monad.Types` `Mathlib.CategoryTheory.Bicategory.Functor.Oplax` `Mathlib.CategoryTheory.Category.Basic` `Mathlib.CategoryTheory.FiberedCategory.Fibered` `Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Oplax` `Mathlib.Logic.Small.Defs` `Mathlib.CategoryTheory.Iso` `Mathlib.Tactic.FunProp.Theorems` `Mathlib.Order.ULift` `Mathlib.CategoryTheory.Functor.EpiMono` `Mathlib.Logic.Equiv.Option` `Mathlib.CategoryTheory.EqToHom` `Mathlib.CategoryTheory.Monad.Basic` `Mathlib.CategoryTheory.Monoidal.Category` `Mathlib.Order.SetNotation` `Mathlib.CategoryTheory.CatCommSq` `Mathlib.Logic.Unique` `Mathlib.Lean.Meta.RefinedDiscrTree.Lookup` `Mathlib.Data.ULift` `Mathlib.Control.Monad.Basic` `Mathlib.CategoryTheory.Square` `Mathlib.Data.List.Count` `Mathlib.Logic.Embedding.Basic` `Mathlib.Data.Erased` `Mathlib.Data.Matrix.DMatrix` `Mathlib.Logic.Function.Basic` `Mathlib.Tactic.Choose` `Mathlib.CategoryTheory.Functor.Const` `Mathlib.Algebra.Order.ZeroLEOne` `Mathlib.Algebra.Homology.ComplexShape` `Mathlib.Tactic.CategoryTheory.Bicategory.Basic` `Mathlib.CategoryTheory.Sums.Associator` `Mathlib.Control.ULiftable` `Mathlib.Logic.Equiv.Basic` `Mathlib.Data.Sigma.Basic` `Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Strong` `Mathlib.Control.Monad.Writer` `Mathlib.Tactic.CategoryTheory.Coherence.Basic` `Mathlib.CategoryTheory.IsomorphismClasses` `Mathlib.Lean.Meta.RefinedDiscrTree.Pi` `Mathlib.Data.MLList.Split` `Mathlib.CategoryTheory.Bicategory.Functor.Pseudofunctor` `Mathlib.CategoryTheory.ConcreteCategory.Basic` `Mathlib.Logic.Pairwise` `Mathlib.Tactic.Common` `Mathlib.CategoryTheory.Groupoid.FreeGroupoid` `Mathlib.Data.Option.Basic` `Mathlib.CategoryTheory.Bicategory.Functor.Lax` `Mathlib.CategoryTheory.Category.KleisliCat` `Mathlib.Data.Set.Operations` `Mathlib.Logic.IsEmpty` `Mathlib.CategoryTheory.Monoidal.Opposite` `Mathlib.Control.Bifunctor` `Mathlib.Data.FunLike.Basic` `Mathlib.CategoryTheory.NatIso` `Mathlib.Data.Subtype` `Mathlib.Tactic.CongrExclamation` `Mathlib.CategoryTheory.Functor.Category` `Mathlib.Tactic.CategoryTheory.Slice` `Mathlib.Combinatorics.Quiver.SingleObj` `Mathlib.CategoryTheory.Category.Cat.AsSmall` `Mathlib.CategoryTheory.Bicategory.LocallyDiscrete` `Mathlib.Tactic.ProxyType` `Mathlib.Tactic.Convert` `Mathlib.CategoryTheory.Groupoid.Basic` `Mathlib.Tactic.FunProp.Attr` `Mathlib.Logic.Lemmas` `Mathlib.Data.Set.Notation` `Mathlib.Data.List.GetD` `Mathlib.Data.List.Pairwise` `Mathlib.CategoryTheory.Adjunction.Basic` `Mathlib.Control.Bitraversable.Lemmas` `Mathlib.Algebra.CharZero.Defs` `Mathlib.CategoryTheory.Products.Bifunctor` `Mathlib.Logic.Function.Iterate` `Mathlib.Tactic.FunProp.FunctionData` `Mathlib.CategoryTheory.Bicategory.End` `Mathlib.Order.RelClasses` `Mathlib.Tactic.Widget.CommDiag` `Mathlib.CategoryTheory.ConcreteCategory.BundledHom` `Mathlib.CategoryTheory.Bicategory.Functor.Prelax` `Mathlib.CategoryTheory.Category.Pointed` `Mathlib.Control.Bitraversable.Basic` `Mathlib.Order.Basic` `Mathlib.Tactic.ContinuousFunctionalCalculus` `Mathlib.Tactic.CategoryTheory.Bicategory.Normalize` `Mathlib.Topology.ContinuousMap.Defs` `Mathlib.CategoryTheory.Products.Associator` `Mathlib.CategoryTheory.DiscreteCategory` `Mathlib.Tactic.FunProp.Types` `Mathlib.CategoryTheory.Types` `Mathlib.Lean.Meta.CongrTheorems` `Mathlib.Algebra.Quotient` `Mathlib.Control.EquivFunctor` `Mathlib.Algebra.Order.Sum` `Mathlib.CategoryTheory.PEmpty` `Mathlib.CategoryTheory.Core` `Mathlib.Lean.Expr.ExtraRecognizers` `Mathlib.CategoryTheory.Functor.Currying` `Mathlib.CategoryTheory.Functor.Functorial` `Mathlib.CategoryTheory.Category.Bipointed` `Mathlib.Data.Set.Opposite` `Mathlib.Lean.Meta.RefinedDiscrTree.Encode` `Mathlib.Tactic.CategoryTheory.ToApp` `Mathlib.CategoryTheory.Functor.Trifunctor` `Mathlib.Tactic.CategoryTheory.MonoidalComp` `Mathlib.Logic.Equiv.Defs` `Mathlib.Tactic.CategoryTheory.Bicategory.PureCoherence` `Mathlib.CategoryTheory.Comma.Basic` `Mathlib.Tactic.CategoryTheory.Monoidal.Basic` `Mathlib.CategoryTheory.Sums.Basic` `Mathlib.Tactic.CategoryTheory.Monoidal.Datatypes` `Mathlib.CategoryTheory.Bicategory.Free` `Mathlib.Data.Sigma.Lex` `Mathlib.CategoryTheory.NatTrans` `Mathlib.CategoryTheory.Functor.CurryingThree` `Mathlib.CategoryTheory.Pi.Basic` `Mathlib.CategoryTheory.FiberedCategory.Cartesian` `Mathlib.CategoryTheory.ConcreteCategory.ReflectsIso` `Mathlib.CategoryTheory.Functor.ReflectsIso` `Mathlib.Data.Prod.Basic` `Mathlib.CategoryTheory.Limits.Shapes.StrongEpi` `Mathlib.CategoryTheory.LiftingProperties.Basic` `Mathlib.Deprecated.RelClasses` `Mathlib.CategoryTheory.Groupoid.Discrete` `Mathlib.CategoryTheory.Products.Basic` `Mathlib.Tactic.FunProp.Core` `Mathlib.CategoryTheory.Bicategory.Grothendieck` `Mathlib.Algebra.Group.Nat.Units` `Mathlib.Tactic.FunProp.Mor` `Mathlib.Data.Quot` `Mathlib.Control.Bitraversable.Instances` `Mathlib.Tactic.ProdAssoc` `Mathlib.CategoryTheory.EssentialImage` `Mathlib.Algebra.Group.Ext` `Mathlib.Algebra.Group.Pi.Basic` `Mathlib.CategoryTheory.LiftingProperties.Adjunction` `Mathlib.CategoryTheory.Bicategory.Modification.Oplax` `Mathlib.Data.Vector.Defs` `Mathlib.Control.Traversable.Equiv` `Mathlib.CategoryTheory.FiberedCategory.HomLift` `Mathlib.CategoryTheory.Comma.Arrow` `Mathlib.CategoryTheory.CommSq` `Mathlib.CategoryTheory.Bicategory.Basic` `Mathlib.CategoryTheory.FiberedCategory.BasedCategory` `Mathlib.Lean.Meta.RefinedDiscrTree` `Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax` `Mathlib.Tactic.TermCongr` `Mathlib.CategoryTheory.Bicategory.Adjunction` `Mathlib.CategoryTheory.ConcreteCategory.UnbundledHom` `Mathlib.CategoryTheory.HomCongr` `Mathlib.Logic.Function.Conjugate` `Mathlib.Algebra.Group.Hom.Defs` `Mathlib.CategoryTheory.Opposites` `Mathlib.Combinatorics.Quiver.Covering` `Mathlib.CategoryTheory.Monad.Kleisli` `Mathlib.Control.Monad.Cont` `Mathlib.Tactic.CategoryTheory.BicategoricalComp` `Mathlib.Tactic.CongrM` `Mathlib.AlgebraicTopology.DoldKan.Compatibility` `Mathlib.Topology.Defs.Basic` `Mathlib.Tactic.CategoryTheory.Monoidal.PureCoherence` `Mathlib.CategoryTheory.Adjunction.Whiskering` `Mathlib.CategoryTheory.PathCategory.Basic` `Mathlib.Tactic.CategoryTheory.Reassoc`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ injective_comp_left_iff`\n`+ injective_comp_right_iff_surjective`\n`+ surjective_comp_left_iff`\n`+ surjective_comp_right_iff_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2025-01-10T21:40:12Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "cb2a813e689b9ff5d236572b55e20498b5ef05cc",
                "additions": 42,
                "deletions": 20,
                "committedDate": "2025-01-10T21:36:06Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQT5l0A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598091/job/35454346704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUAbww",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635526/job/35454458819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUAb5Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635532/job/35454458853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUAbzw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635518/job/35454458831"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQT5llw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598090/job/35454346647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUAcGQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635523/job/35454458905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQT5kyw",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598090/job/35454346443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQT5kzg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598091/job/35454346446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUAdHg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635523/job/35454459166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQT5mlg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598091/job/35454346902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUAycg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35454464626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQUBgjw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20646&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-10T21:39:18Z",
        "deletions": 20,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Set/Image.lean",
              "additions": 7,
              "deletions": 17
            },
            {
              "path": "Mathlib/Logic/Function/Basic.lean",
              "additions": 35,
              "deletions": 3
            }
          ]
        },
        "headRefName": "injective_surjective_comp",
        "headRefOid": "cb2a813e689b9ff5d236572b55e20498b5ef05cc",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6HY4s1",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": []
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20646,
        "potentialMergeCommit": {
          "oid": "94dfc4d8f057c219f416d641f175dbcb69b14954"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQT5l0A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598091/job/35454346704"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUAbww",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635526/job/35454458819"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUAb5Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635532/job/35454458853"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUAbzw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635518/job/35454458831"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQT5llw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598090/job/35454346647"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUAcGQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635523/job/35454458905"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQT5kyw",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598090/job/35454346443"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQT5kzg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598091/job/35454346446"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUAdHg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717635523/job/35454459166"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQT5mlg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12717598091/job/35454346902"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUAycg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35454464626"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQUBgjw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20646&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Function/Basic): iff lemmas for injectivity/surjectivity of composition",
        "updatedAt": "2025-01-10T21:40:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20646",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5xxG4d",
              "createdAt": "2025-01-10T21:39:56Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6HH8Cc",
                "title": "feat: commutative semirings satisfy rank condition",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20584"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aCeOM",
              "createdAt": "2025-01-10T21:40:12Z",
              "body": "### PR summary [cb2a813e68](https://github.com/leanprover-community/mathlib4/pull/20646/commits/cb2a813e689b9ff5d236572b55e20498b5ef05cc)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Logic.Function.Basic | 67 | 68 | +1 (+1.49%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>232 files</summary> `Mathlib.Algebra.Group.Units.Defs` `Mathlib.CategoryTheory.Category.ULift` `Mathlib.Data.Countable.Defs` `Mathlib.CategoryTheory.Monad.Algebra` `Mathlib.CategoryTheory.Thin` `Mathlib.Algebra.Group.Commute.Hom` `Mathlib.Tactic.FunProp` `Mathlib.Logic.UnivLE` `Mathlib.Tactic.Widget.StringDiagram` `Mathlib.Combinatorics.Quiver.Basic` `Mathlib.Tactic.CategoryTheory.BicategoryCoherence` `Mathlib.Order.RelIso.Basic` `Mathlib.CategoryTheory.Groupoid` `Mathlib.Combinatorics.Quiver.Cast` `Mathlib.Combinatorics.Quiver.Prefunctor` `Mathlib.Tactic.Widget.CongrM` `Mathlib.Combinatorics.Quiver.Path` `Mathlib.Data.FunLike.Equiv` `Mathlib.CategoryTheory.Limits.Cones` `Mathlib.CategoryTheory.Bicategory.Strict` `Mathlib.Deprecated.Equiv` `Mathlib.Data.Finite.Defs` `Mathlib.Order.RelIso.Group` `Mathlib.Logic.Equiv.Functor` `Mathlib.CategoryTheory.EpiMono` `Mathlib.CategoryTheory.Bicategory.Functor.LocallyDiscrete` `Mathlib.CategoryTheory.PUnit` `Mathlib.Tactic.CategoryTheory.Elementwise` `Mathlib.Tactic.IrreducibleDef` `Mathlib.CategoryTheory.Balanced` `Mathlib.CategoryTheory.Limits.IsLimit` `Mathlib.Data.Sum.Basic` `Mathlib.Tactic.CategoryTheory.Bicategory.Datatypes` `Mathlib.Logic.Equiv.Pairwise` `Mathlib.CategoryTheory.FiberedCategory.Fiber` `Mathlib.Tactic.FunProp.Elab` `Mathlib.CategoryTheory.Elementwise` `Mathlib.CategoryTheory.Equivalence` `Mathlib.Data.FunLike.Embedding` `Mathlib.Combinatorics.Quiver.ConnectedComponent` `Mathlib.CategoryTheory.Yoneda` `Mathlib.Combinatorics.Quiver.Subquiver` `Mathlib.CategoryTheory.Quotient` `Mathlib.CategoryTheory.Bicategory.Coherence` `Mathlib.Logic.Relation` `Mathlib.Combinatorics.Quiver.Symmetric` `Mathlib.CategoryTheory.Functor.Basic` `Mathlib.CategoryTheory.Category.Cat` `Mathlib.Combinatorics.Quiver.Push` `Mathlib.CategoryTheory.FullSubcategory` `Mathlib.CategoryTheory.Category.Quiv` `Mathlib.CategoryTheory.CodiscreteCategory` `Mathlib.CategoryTheory.Sigma.Basic` `Mathlib.CategoryTheory.Whiskering` `Mathlib.CategoryTheory.Adjunction.Opposites` `Mathlib.CategoryTheory.Retract` `Mathlib.CategoryTheory.Adjunction.Restrict` `Mathlib.CategoryTheory.Monoidal.CoherenceLemmas` `Mathlib.Algebra.Group.Hom.CompTypeclasses` `Mathlib.CategoryTheory.UnivLE` `Mathlib.CategoryTheory.FiberedCategory.Cocartesian` `Mathlib.CategoryTheory.Functor.FullyFaithful` `Mathlib.CategoryTheory.ClosedUnderIsomorphisms` `Mathlib.Data.Opposite` `Mathlib.CategoryTheory.Products.Unitor` `Mathlib.CategoryTheory.Functor.Hom` `Mathlib.Tactic.CategoryTheory.Monoidal.Normalize` `Mathlib.CategoryTheory.Monad.Types` `Mathlib.CategoryTheory.Bicategory.Functor.Oplax` `Mathlib.CategoryTheory.Category.Basic` `Mathlib.CategoryTheory.FiberedCategory.Fibered` `Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Oplax` `Mathlib.Logic.Small.Defs` `Mathlib.CategoryTheory.Iso` `Mathlib.Tactic.FunProp.Theorems` `Mathlib.Order.ULift` `Mathlib.CategoryTheory.Functor.EpiMono` `Mathlib.Logic.Equiv.Option` `Mathlib.CategoryTheory.EqToHom` `Mathlib.CategoryTheory.Monad.Basic` `Mathlib.CategoryTheory.Monoidal.Category` `Mathlib.Order.SetNotation` `Mathlib.CategoryTheory.CatCommSq` `Mathlib.Logic.Unique` `Mathlib.Lean.Meta.RefinedDiscrTree.Lookup` `Mathlib.Data.ULift` `Mathlib.Control.Monad.Basic` `Mathlib.CategoryTheory.Square` `Mathlib.Data.List.Count` `Mathlib.Logic.Embedding.Basic` `Mathlib.Data.Erased` `Mathlib.Data.Matrix.DMatrix` `Mathlib.Logic.Function.Basic` `Mathlib.Tactic.Choose` `Mathlib.CategoryTheory.Functor.Const` `Mathlib.Algebra.Order.ZeroLEOne` `Mathlib.Algebra.Homology.ComplexShape` `Mathlib.Tactic.CategoryTheory.Bicategory.Basic` `Mathlib.CategoryTheory.Sums.Associator` `Mathlib.Control.ULiftable` `Mathlib.Logic.Equiv.Basic` `Mathlib.Data.Sigma.Basic` `Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Strong` `Mathlib.Control.Monad.Writer` `Mathlib.Tactic.CategoryTheory.Coherence.Basic` `Mathlib.CategoryTheory.IsomorphismClasses` `Mathlib.Lean.Meta.RefinedDiscrTree.Pi` `Mathlib.Data.MLList.Split` `Mathlib.CategoryTheory.Bicategory.Functor.Pseudofunctor` `Mathlib.CategoryTheory.ConcreteCategory.Basic` `Mathlib.Logic.Pairwise` `Mathlib.Tactic.Common` `Mathlib.CategoryTheory.Groupoid.FreeGroupoid` `Mathlib.Data.Option.Basic` `Mathlib.CategoryTheory.Bicategory.Functor.Lax` `Mathlib.CategoryTheory.Category.KleisliCat` `Mathlib.Data.Set.Operations` `Mathlib.Logic.IsEmpty` `Mathlib.CategoryTheory.Monoidal.Opposite` `Mathlib.Control.Bifunctor` `Mathlib.Data.FunLike.Basic` `Mathlib.CategoryTheory.NatIso` `Mathlib.Data.Subtype` `Mathlib.Tactic.CongrExclamation` `Mathlib.CategoryTheory.Functor.Category` `Mathlib.Tactic.CategoryTheory.Slice` `Mathlib.Combinatorics.Quiver.SingleObj` `Mathlib.CategoryTheory.Category.Cat.AsSmall` `Mathlib.CategoryTheory.Bicategory.LocallyDiscrete` `Mathlib.Tactic.ProxyType` `Mathlib.Tactic.Convert` `Mathlib.CategoryTheory.Groupoid.Basic` `Mathlib.Tactic.FunProp.Attr` `Mathlib.Logic.Lemmas` `Mathlib.Data.Set.Notation` `Mathlib.Data.List.GetD` `Mathlib.Data.List.Pairwise` `Mathlib.CategoryTheory.Adjunction.Basic` `Mathlib.Control.Bitraversable.Lemmas` `Mathlib.Algebra.CharZero.Defs` `Mathlib.CategoryTheory.Products.Bifunctor` `Mathlib.Logic.Function.Iterate` `Mathlib.Tactic.FunProp.FunctionData` `Mathlib.CategoryTheory.Bicategory.End` `Mathlib.Order.RelClasses` `Mathlib.Tactic.Widget.CommDiag` `Mathlib.CategoryTheory.ConcreteCategory.BundledHom` `Mathlib.CategoryTheory.Bicategory.Functor.Prelax` `Mathlib.CategoryTheory.Category.Pointed` `Mathlib.Control.Bitraversable.Basic` `Mathlib.Order.Basic` `Mathlib.Tactic.ContinuousFunctionalCalculus` `Mathlib.Tactic.CategoryTheory.Bicategory.Normalize` `Mathlib.Topology.ContinuousMap.Defs` `Mathlib.CategoryTheory.Products.Associator` `Mathlib.CategoryTheory.DiscreteCategory` `Mathlib.Tactic.FunProp.Types` `Mathlib.CategoryTheory.Types` `Mathlib.Lean.Meta.CongrTheorems` `Mathlib.Algebra.Quotient` `Mathlib.Control.EquivFunctor` `Mathlib.Algebra.Order.Sum` `Mathlib.CategoryTheory.PEmpty` `Mathlib.CategoryTheory.Core` `Mathlib.Lean.Expr.ExtraRecognizers` `Mathlib.CategoryTheory.Functor.Currying` `Mathlib.CategoryTheory.Functor.Functorial` `Mathlib.CategoryTheory.Category.Bipointed` `Mathlib.Data.Set.Opposite` `Mathlib.Lean.Meta.RefinedDiscrTree.Encode` `Mathlib.Tactic.CategoryTheory.ToApp` `Mathlib.CategoryTheory.Functor.Trifunctor` `Mathlib.Tactic.CategoryTheory.MonoidalComp` `Mathlib.Logic.Equiv.Defs` `Mathlib.Tactic.CategoryTheory.Bicategory.PureCoherence` `Mathlib.CategoryTheory.Comma.Basic` `Mathlib.Tactic.CategoryTheory.Monoidal.Basic` `Mathlib.CategoryTheory.Sums.Basic` `Mathlib.Tactic.CategoryTheory.Monoidal.Datatypes` `Mathlib.CategoryTheory.Bicategory.Free` `Mathlib.Data.Sigma.Lex` `Mathlib.CategoryTheory.NatTrans` `Mathlib.CategoryTheory.Functor.CurryingThree` `Mathlib.CategoryTheory.Pi.Basic` `Mathlib.CategoryTheory.FiberedCategory.Cartesian` `Mathlib.CategoryTheory.ConcreteCategory.ReflectsIso` `Mathlib.CategoryTheory.Functor.ReflectsIso` `Mathlib.Data.Prod.Basic` `Mathlib.CategoryTheory.Limits.Shapes.StrongEpi` `Mathlib.CategoryTheory.LiftingProperties.Basic` `Mathlib.Deprecated.RelClasses` `Mathlib.CategoryTheory.Groupoid.Discrete` `Mathlib.CategoryTheory.Products.Basic` `Mathlib.Tactic.FunProp.Core` `Mathlib.CategoryTheory.Bicategory.Grothendieck` `Mathlib.Algebra.Group.Nat.Units` `Mathlib.Tactic.FunProp.Mor` `Mathlib.Data.Quot` `Mathlib.Control.Bitraversable.Instances` `Mathlib.Tactic.ProdAssoc` `Mathlib.CategoryTheory.EssentialImage` `Mathlib.Algebra.Group.Ext` `Mathlib.Algebra.Group.Pi.Basic` `Mathlib.CategoryTheory.LiftingProperties.Adjunction` `Mathlib.CategoryTheory.Bicategory.Modification.Oplax` `Mathlib.Data.Vector.Defs` `Mathlib.Control.Traversable.Equiv` `Mathlib.CategoryTheory.FiberedCategory.HomLift` `Mathlib.CategoryTheory.Comma.Arrow` `Mathlib.CategoryTheory.CommSq` `Mathlib.CategoryTheory.Bicategory.Basic` `Mathlib.CategoryTheory.FiberedCategory.BasedCategory` `Mathlib.Lean.Meta.RefinedDiscrTree` `Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax` `Mathlib.Tactic.TermCongr` `Mathlib.CategoryTheory.Bicategory.Adjunction` `Mathlib.CategoryTheory.ConcreteCategory.UnbundledHom` `Mathlib.CategoryTheory.HomCongr` `Mathlib.Logic.Function.Conjugate` `Mathlib.Algebra.Group.Hom.Defs` `Mathlib.CategoryTheory.Opposites` `Mathlib.Combinatorics.Quiver.Covering` `Mathlib.CategoryTheory.Monad.Kleisli` `Mathlib.Control.Monad.Cont` `Mathlib.Tactic.CategoryTheory.BicategoricalComp` `Mathlib.Tactic.CongrM` `Mathlib.AlgebraicTopology.DoldKan.Compatibility` `Mathlib.Topology.Defs.Basic` `Mathlib.Tactic.CategoryTheory.Monoidal.PureCoherence` `Mathlib.CategoryTheory.Adjunction.Whiskering` `Mathlib.CategoryTheory.PathCategory.Basic` `Mathlib.Tactic.CategoryTheory.Reassoc`</details>|1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ injective_comp_left_iff`\n`+ injective_comp_right_iff_surjective`\n`+ surjective_comp_left_iff`\n`+ surjective_comp_right_iff_injective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        }
      }
    }
  }
}
