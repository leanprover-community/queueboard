{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 124,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY1MDgwMTQ0",
              "login": "faenuccio"
            }
          ]
        },
        "author": {
          "login": "Julian"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Refs: leanprover/vscode-lean4#523\r\n\r\n\r\n---\r\n\r\nI've only made use of the notation in the file in places that were already within the namespace, but happy to make further changes if preferred.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2024-10-10T07:55:22Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6LZ3tN",
              "body": "### PR summary [27c38d0421](https://github.com/leanprover-community/mathlib4/pull/16639/commits/27c38d04212cc5d84c19988c30b026507f31e178)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance : Algebra (RatFunc F) F‚∏®X‚∏©`\n`+ instance : Coe R‚ü¶X‚üß R‚∏®X‚∏©`\n`+ instance : IsScalarTower F[X] (RatFunc F) F‚∏®X‚∏©`\n`+ instance : Valued K‚∏®X‚∏© ‚Ñ§‚Çò‚ÇÄ := Valued.mk' (PowerSeries.idealX K).valuation`\n`+ instance [CommSemiring R] : Algebra R‚ü¶X‚üß R‚∏®X‚∏© := (HahnSeries.ofPowerSeries ‚Ñ§ R).toAlgebra`\n`+ instance {K : Type*} [Field K] : IsFractionRing K‚ü¶X‚üß K‚∏®X‚∏©`\n`+--+ coe_C`\n`+--+ coe_neg`\n`+--+ coe_smul`\n`+--+ coe_sub`\n`- instance : Algebra (RatFunc F) (LaurentSeries F)`\n`- instance : Coe (PowerSeries R) (LaurentSeries R)`\n`- instance : IsScalarTower F[X] (RatFunc F) (LaurentSeries F)`\n`- instance : Valued (LaurentSeries K) ‚Ñ§‚Çò‚ÇÄ := Valued.mk' (PowerSeries.idealX K).valuation`\n`- instance [CommSemiring R] : Algebra (PowerSeries R) (LaurentSeries R)`\n`- instance {K : Type*} [Field K] : IsFractionRing (PowerSeries K) (LaurentSeries K)`\n`-+-+ coe_X`\n`-+-+ coe_add`\n`-+-+ coe_mul`\n`-+-+ coe_one`\n`-+-+ coe_pow`\n`-+-+ coe_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-09T18:31:46Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6La3sK",
              "body": "I certainly like the look of this. The notation is standard, even to the extent that the brackets are written close together in LaTeX. Happy to hear another opinion but LGTM.",
              "createdAt": "2024-09-09T20:57:59Z",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MKXpN",
              "body": "This is something that we discussed with @mariainesdff and we ended up wondering if this notation should be used for Laurent Series as `HahnSeries` of for the $$X$$-adic completion of $$K(X)$$. We prove they are isomorphic (the PR process is ongoing) but ultimately it is not clear to us what will be \"the prototypical gadget\" to play with, that will then most deserve a dedicated notation.",
              "createdAt": "2024-09-15T10:37:18Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MQRIM",
              "body": "I don't know enough to have any opinion clearly so I'm happy to close if that's recommended!",
              "createdAt": "2024-09-16T14:22:58Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OQb9D",
              "body": "After thinking carefully for a while, I am also in favour of the changes proposed by this PR. @Julian if you can update it, I will be happy to have a final look and suggest that it be merged.",
              "createdAt": "2024-10-01T18:20:10Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OQfEd",
              "body": "@faenuccio I don't think there seem to be any merge conflicts -- are you asking me to rebase it anyways? (Happy to do whatever is helpful).\r\n\r\nAlso could you perhaps say anything about what changed your mind, just curious to learn!",
              "createdAt": "2024-10-01T18:27:23Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OQksB",
              "body": "> @faenuccio I don't think there seem to be any merge conflicts -- are you asking me to rebase it anyways? (Happy to do whatever is helpful).\r\n\r\nA couple of more PR included Laurent Series (in particular #16865, that is being merged) and it would be worthwhile to recheck for occurrences of LaurentSeries * in Mathlib to replace them with your notation.\r\n\r\n> Also could you perhaps say anything about what changed your mind, just curious to learn!\r\n\r\nAh sure, thanks for asking. Mainly three points:\r\n\r\n1. Although it is true that power series are the completion of rational functions almost over \"any\" ring, the way these completions are constructed can be very different. So it makes perfect sense to have a basic set-up that works in the greatest generality and then, in special cases (like over fields) to state some isomorphisms; but then what really deserves a notation is the basic set-up, that is the most general;\r\n\r\n1. The \"explicit\" definition with coefficients and bounded-below non-zero terms is most likely the one that one uses when considering terms of Laurent series, and having a notation that allows for writing down quickly \"let f be a Laurent Series\" is very useful; when stating abstract theorems, one is more likely to see the appearance of the type rather than the terms themselves, and having the full name in these cases seems OK;\r\n\r\n1. It is very consistent with the rest of the library: we have a notation `K[X]` for polynomials seen as `AddMonoidAlgebra R ‚Ñï` and this is very close to `HahnSeries R ‚Ñ§`.\r\n\r\nI am sorry if these motivations were already perfectly clear in your mind, it just took me a while to convince myself üò¢ \r\n",
              "createdAt": "2024-10-01T18:40:24Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OQmD-",
              "body": "> A couple of more PR included Laurent Series (in particular https://github.com/leanprover-community/mathlib4/pull/16865, that is being merged) and it would be worthwhile to recheck for occurrences of LaurentSeries * in Mathlib to replace them with your notation.\r\n\r\nAha! OK, happy to. Will ping you when I've done so (after your PR is merged).\r\n\r\n> I am sorry if these motivations were already perfectly clear in your mind, it just took me a while to convince myself üò¢\r\n\r\nNothing is very clear in my mind :D, though thankfully I at least understood some of what you said! Thank you for elaborating!",
              "createdAt": "2024-10-01T18:43:38Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PC66H",
              "body": "OK this is ready for review I believe @faenuccio.",
              "createdAt": "2024-10-08T13:50:24Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PEIme",
              "body": "Thanks, having a look!\r\n",
              "createdAt": "2024-10-08T15:52:48Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGJl2",
              "body": "Thanks for the review! That section (from line 278 till 413) is not in the `LaurentSeries` namespace, it's in the `RatFunc` one, so the notation doesn't work in it, which was why I didn't make the change there -- obviously I can do it in the docstring anyways if that's preferred?\r\n\r\nOr is there a way to be able to use it in the Lean code too? If I `open LaurentSeries` that will open everything, no, not just enable the notation?\r\n\r\nI'll have a look for the rational function notation.",
              "createdAt": "2024-10-08T20:23:59Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGTEP",
              "body": "Thanks for that tip, I'm sure I've seen it before and forgot what it does. It seems to work perfectly.\r\n\r\nI've made the changes, and also made the changes to use the *PowerSeries* notation in the file -- I'm still looking for the notation for rational functions, I don't see it immediately yet.\r\n\r\nRight now the only places without the notation then are in the module docstring -- let me know if I should change it there too but I followed what the PowerSeries module did (which is to use it in the docstring).",
              "createdAt": "2024-10-08T20:47:33Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGpna",
              "body": "> Thanks for that tip, I'm sure I've seen it before and forgot what it does. It seems to work perfectly.\r\n> \r\n> I've made the changes, and also made the changes to use the _PowerSeries_ notation in the file -- I'm still looking for the notation for rational functions, I don't see it immediately yet.\r\n> \r\n> Right now the only places without the notation then are in the module docstring -- let me know if I should change it there too but I followed what the PowerSeries module did (which is to use it in the docstring).\r\n\r\nConcerning `RatFun` you're right, there is nothing. Forget about it - I am sorry. As for docstring, I would suggest that both in the module docstring (at the top) and in declarations docstring, you first use the full name, then you show what the notation is, and from that point on, you only use the notation. As several docstrings are duplicated in the module and along the files, this applies to both situations.",
              "createdAt": "2024-10-08T21:51:23Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGt_I",
              "body": "> Concerning RatFun you're right, there is nothing.\r\n\r\nThere is one place that uses the notation in a docstring, that place is [here](https://github.com/leanprover-community/Mathlib4/blob/e17ccbe934727256f1af113191d343496ff7f70c/Mathlib/FieldTheory/RatFunc/Defs.lean#L59) (but yeah it seems not to exist, maybe due to those old Zulip threads about how safe it was to have notation with single parentheses? I can't find them via Zulip search).\r\n\r\nI am happy to make the docstring notation change of course -- but do you want me to make it to the PowerSeries file as well in this same PR? It too doesn't mention the notation in the docstring. Or should I do that in a follow-up?",
              "createdAt": "2024-10-08T22:06:09Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGuiG",
              "body": "There are a bunch of places in the PowerSeries files that don't use the PowerSeries notation. To me it seems best to do it in a follow up along with fixing those. I'll proceed under that assumption unless you tell me otherwise!",
              "createdAt": "2024-10-08T22:07:57Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PIYVh",
              "body": "> There are a bunch of places in the PowerSeries files that don't use the PowerSeries notation. To me it seems best to do it in a follow up along with fixing those. I'll proceed under that assumption unless you tell me otherwise!\r\n\r\nBoth are OK, so go ahead as you see fit. Final question before sending this PR to merge: have you checked that `LaurentSeries *` does not appear anywhere else in the library?",
              "createdAt": "2024-10-09T05:20:03Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PNI-B",
              "body": "OK I've added the notation to the module docstring and type docstring as you suggested, so I think this is ready now!\r\n\r\n> have you checked that LaurentSeries * does not appear anywhere else in the library?\r\n\r\nYes! At least via a grep, this is all of them.",
              "createdAt": "2024-10-09T14:59:43Z",
              "author": {
                "login": "Julian"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PNQnn",
              "body": "Awesome, thanks so much for your work!",
              "createdAt": "2024-10-09T15:11:37Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PNQqw",
              "body": "maintainer merge",
              "createdAt": "2024-10-09T15:11:41Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PNQ3S",
              "body": "üöÄ Pull request has been placed on the maintainer queue by faenuccio.",
              "createdAt": "2024-10-09T15:12:00Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PTyar",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2024-10-10T07:45:44Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PT3Pb",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11269667127/job/31338736606)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11269667127/job/31338736812)",
              "createdAt": "2024-10-10T07:55:21Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "fe559e22b1045d468e382c0ad84e3ab41856f39b",
                "additions": 72,
                "deletions": 63,
                "committedDate": "2024-10-08T13:48:45Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyA_0w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243048057/job/31258066899"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyjj5w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243231420/job/31258633191"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyA-Lw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243048062/job/31258066479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyjjvw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243231421/job/31258633151"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyA-vw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243048061/job/31258066623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyjj3A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243231414/job/31258633180"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8jxQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904342/job/31238071237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8qtw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904756/job/31238073015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8rjg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904772/job/31238073230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8m0w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904344/job/31238072019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8lOA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904346/job/31238071608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8rAw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904766/job/31238073091"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyA-fA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243048057/job/31258066556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRyjlPg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243231420/job/31258633534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8ohg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904344/job/31238072454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8oew",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904346/job/31238072443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8sog",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904766/job/31238073506"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8k2A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904344/job/31238071512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8m0Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904346/job/31238072017"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe8qYA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904344/job/31238072928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRfegow",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11236904346/job/31238627491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe9ELw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31238079535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRe-kug",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "71a731fad37f719a7d28eb531cad1d325e091ecb",
                "additions": 29,
                "deletions": 27,
                "committedDate": "2024-10-08T20:34:17Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8PSg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243355355/job/31259037514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8PaA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243355359/job/31259037544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8K8Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354897/job/31259036401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8KiQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354890/job/31259036297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8QjA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243355367/job/31259037836"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8Mwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354897/job/31259036866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8MOA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354890/job/31259036728"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8Phg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243355367/job/31259037574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8LWw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354890/job/31259036507"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8Lzw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354897/job/31259036623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzVLYw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354890/job/31259446115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8N1A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243354897/job/31259037140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy8hlA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31259042196"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRy95RQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e17ccbe934727256f1af113191d343496ff7f70c",
                "additions": 28,
                "deletions": 30,
                "committedDate": "2024-10-08T20:44:39Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQfcg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455539/job/31259369330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQgtg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455590/job/31259369654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQaOQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455095/job/31259367993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQbJw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455099/job/31259368231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQgow",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455528/job/31259369635"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQbMQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455095/job/31259368241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQcBw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455099/job/31259368455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQfpQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455528/job/31259369381"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQcGw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455095/job/31259368475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQaRw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455099/job/31259368007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQdQg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455095/job/31259368770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzpVJg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11243455099/job/31259776294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzQv4w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31259373539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRzR4Wg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8f9922c26454caa5474534e332cc3dff95dc0ca9",
                "additions": 7,
                "deletions": 5,
                "committedDate": "2024-10-09T14:49:24Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbxB2w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257490668/job/31301845467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbxBBQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257490672/job/31301845253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw2-Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489777/job/31301842681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw29g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489821/job/31301842678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbxBFw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257490655/job/31301845271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw4gw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489777/job/31301843075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw5tw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489821/job/31301843383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbxDWg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257490655/job/31301845850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw6QA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489777/job/31301843520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw4QA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489821/job/31301843008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbw7-A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489777/job/31301843960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScRomA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257489821/job/31302379672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbxfOw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31301852987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSbyRaQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5a6809f59abfdb775edf3a82e2519bfdd941d36f",
                "additions": 7,
                "deletions": 1,
                "committedDate": "2024-10-09T14:59:04Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScULVQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257656279/job/31302421333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUMfw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257656282/job/31302421631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUB2g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655662/job/31302418906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUC3g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655668/job/31302419166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUNDw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257656290/job/31302421775"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUDUA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655662/job/31302419280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUBmA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655668/job/31302418840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScULcQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257656290/job/31302421361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUECg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655668/job/31302419466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUE1w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655662/job/31302419671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScaQrA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655668/job/31302521004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUGZQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257655662/job/31302420069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScUngA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31302428544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScV_6Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "27c38d04212cc5d84c19988c30b026507f31e178",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-10-09T15:00:43Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZpag",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682760/job/31302510954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZn2Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682737/job/31302510553"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZhTw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302508879"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZkLA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31302509612"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZmIA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682725/job/31302510112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZk7w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302509807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZnpg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31302510502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZpYA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682725/job/31302510944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZjAA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302509312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZl7g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31302510062"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZnjw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302510479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSdDbtw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31303195575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScaEZA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31302517860"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHScZrOQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHbNjqJg",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6322",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-09T18:31:05Z",
        "deletions": 107,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/RingTheory/LaurentSeries.lean",
              "additions": 124,
              "deletions": 107
            }
          ]
        },
        "headRefName": "laurent-notation",
        "headRefOid": "27c38d04212cc5d84c19988c30b026507f31e178",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5642-I",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6MZYP_",
              "body": "> Thanks for the review! That section (from line 278 till 413) is not in the `LaurentSeries` namespace, it's in the `RatFunc` one, so the notation doesn't work in it, which was why I didn't make the change there -- obviously I can do it in the docstring anyways if that's preferred?\n> \n> Or is there a way to be able to use it in the Lean code too? If I `open LaurentSeries` that will open everything, no, not just enable the notation?\n> \n> I'll have a look for the rational function notation. \n\nIn order to only open notation you can write\n```\nopen scoped LaurentSeries\n```\n(for instance right after the `namespace RatFunc ` on line 280). This will allow the `scoped` (sic!) notation to fire, without carrying over all results in the namespace.",
              "state": "COMMENTED",
              "author": {
                "login": "faenuccio"
              },
              "submittedAt": "2024-10-08T20:28:23Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16639,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6MZS9n",
              "body": "Thanks! I think that you can also replace the notation in the docstring (see line 282, for instance, in the dostring of `def coeAlgHom` (it also seems to me that there is a repetition three lines below). Also line 293 does not have this notation, can you check again the document? BTW, I think (please check) that we also have `R(T)` for rational functions, and it would be worth it to enforce also that notation in this file.",
              "state": "COMMENTED",
              "author": {
                "login": "faenuccio"
              },
              "submittedAt": "2024-10-08T20:16:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MZYP_",
              "body": "> Thanks for the review! That section (from line 278 till 413) is not in the `LaurentSeries` namespace, it's in the `RatFunc` one, so the notation doesn't work in it, which was why I didn't make the change there -- obviously I can do it in the docstring anyways if that's preferred?\n> \n> Or is there a way to be able to use it in the Lean code too? If I `open LaurentSeries` that will open everything, no, not just enable the notation?\n> \n> I'll have a look for the rational function notation. \n\nIn order to only open notation you can write\n```\nopen scoped LaurentSeries\n```\n(for instance right after the `namespace RatFunc ` on line 280). This will allow the `scoped` (sic!) notation to fire, without carrying over all results in the namespace.",
              "state": "COMMENTED",
              "author": {
                "login": "faenuccio"
              },
              "submittedAt": "2024-10-08T20:28:23Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMyOTgyMg==",
              "login": "Julian"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjY1MDgwMTQ0",
              "login": "faenuccio"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZpag",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682760/job/31302510954"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZn2Q",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682737/job/31302510553"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZhTw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302508879"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZkLA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31302509612"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZmIA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682725/job/31302510112"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZk7w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302509807"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZnpg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31302510502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZpYA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682725/job/31302510944"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZjAA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302509312"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZl7g",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31302510062"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZnjw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682284/job/31302510479"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSdDbtw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11257682481/job/31303195575"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScaEZA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31302517860"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHScZrOQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16639&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHbNjqJg",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6322",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(RingTheory/LaurentSeries): add notation",
        "updatedAt": "2024-10-10T07:55:25Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16639",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LZ3tN",
              "createdAt": "2024-09-09T18:31:46Z",
              "body": "### PR summary [27c38d0421](https://github.com/leanprover-community/mathlib4/pull/16639/commits/27c38d04212cc5d84c19988c30b026507f31e178)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance : Algebra (RatFunc F) F‚∏®X‚∏©`\n`+ instance : Coe R‚ü¶X‚üß R‚∏®X‚∏©`\n`+ instance : IsScalarTower F[X] (RatFunc F) F‚∏®X‚∏©`\n`+ instance : Valued K‚∏®X‚∏© ‚Ñ§‚Çò‚ÇÄ := Valued.mk' (PowerSeries.idealX K).valuation`\n`+ instance [CommSemiring R] : Algebra R‚ü¶X‚üß R‚∏®X‚∏© := (HahnSeries.ofPowerSeries ‚Ñ§ R).toAlgebra`\n`+ instance {K : Type*} [Field K] : IsFractionRing K‚ü¶X‚üß K‚∏®X‚∏©`\n`+--+ coe_C`\n`+--+ coe_neg`\n`+--+ coe_smul`\n`+--+ coe_sub`\n`- instance : Algebra (RatFunc F) (LaurentSeries F)`\n`- instance : Coe (PowerSeries R) (LaurentSeries R)`\n`- instance : IsScalarTower F[X] (RatFunc F) (LaurentSeries F)`\n`- instance : Valued (LaurentSeries K) ‚Ñ§‚Çò‚ÇÄ := Valued.mk' (PowerSeries.idealX K).valuation`\n`- instance [CommSemiring R] : Algebra (PowerSeries R) (LaurentSeries R)`\n`- instance {K : Type*} [Field K] : IsFractionRing (PowerSeries K) (LaurentSeries K)`\n`-+-+ coe_X`\n`-+-+ coe_add`\n`-+-+ coe_mul`\n`-+-+ coe_one`\n`-+-+ coe_pow`\n`-+-+ coe_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6La3sK",
              "createdAt": "2024-09-09T20:57:59Z",
              "body": "I certainly like the look of this. The notation is standard, even to the extent that the brackets are written close together in LaTeX. Happy to hear another opinion but LGTM.",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6V4mjdzwAAAANOYSXw",
              "createdAt": "2024-09-10T14:18:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MKXpN",
              "createdAt": "2024-09-15T10:37:18Z",
              "body": "This is something that we discussed with @mariainesdff and we ended up wondering if this notation should be used for Laurent Series as `HahnSeries` of for the $$X$$-adic completion of $$K(X)$$. We prove they are isomorphic (the PR process is ongoing) but ultimately it is not clear to us what will be \"the prototypical gadget\" to play with, that will then most deserve a dedicated notation.",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MQRIM",
              "createdAt": "2024-09-16T14:22:58Z",
              "body": "I don't know enough to have any opinion clearly so I'm happy to close if that's recommended!",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OQb9D",
              "createdAt": "2024-10-01T18:20:10Z",
              "body": "After thinking carefully for a while, I am also in favour of the changes proposed by this PR. @Julian if you can update it, I will be happy to have a final look and suggest that it be merged.",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OQfEd",
              "createdAt": "2024-10-01T18:27:23Z",
              "body": "@faenuccio I don't think there seem to be any merge conflicts -- are you asking me to rebase it anyways? (Happy to do whatever is helpful).\r\n\r\nAlso could you perhaps say anything about what changed your mind, just curious to learn!",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OQksB",
              "createdAt": "2024-10-01T18:40:24Z",
              "body": "> @faenuccio I don't think there seem to be any merge conflicts -- are you asking me to rebase it anyways? (Happy to do whatever is helpful).\r\n\r\nA couple of more PR included Laurent Series (in particular #16865, that is being merged) and it would be worthwhile to recheck for occurrences of LaurentSeries * in Mathlib to replace them with your notation.\r\n\r\n> Also could you perhaps say anything about what changed your mind, just curious to learn!\r\n\r\nAh sure, thanks for asking. Mainly three points:\r\n\r\n1. Although it is true that power series are the completion of rational functions almost over \"any\" ring, the way these completions are constructed can be very different. So it makes perfect sense to have a basic set-up that works in the greatest generality and then, in special cases (like over fields) to state some isomorphisms; but then what really deserves a notation is the basic set-up, that is the most general;\r\n\r\n1. The \"explicit\" definition with coefficients and bounded-below non-zero terms is most likely the one that one uses when considering terms of Laurent series, and having a notation that allows for writing down quickly \"let f be a Laurent Series\" is very useful; when stating abstract theorems, one is more likely to see the appearance of the type rather than the terms themselves, and having the full name in these cases seems OK;\r\n\r\n1. It is very consistent with the rest of the library: we have a notation `K[X]` for polynomials seen as `AddMonoidAlgebra R ‚Ñï` and this is very close to `HahnSeries R ‚Ñ§`.\r\n\r\nI am sorry if these motivations were already perfectly clear in your mind, it just took me a while to convince myself üò¢ \r\n",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OQmD-",
              "createdAt": "2024-10-01T18:43:38Z",
              "body": "> A couple of more PR included Laurent Series (in particular https://github.com/leanprover-community/mathlib4/pull/16865, that is being merged) and it would be worthwhile to recheck for occurrences of LaurentSeries * in Mathlib to replace them with your notation.\r\n\r\nAha! OK, happy to. Will ping you when I've done so (after your PR is merged).\r\n\r\n> I am sorry if these motivations were already perfectly clear in your mind, it just took me a while to convince myself üò¢\r\n\r\nNothing is very clear in my mind :D, though thankfully I at least understood some of what you said! Thank you for elaborating!",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6V4mjdzwAAAANjrn2v",
              "createdAt": "2024-10-08T13:49:53Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PC66H",
              "createdAt": "2024-10-08T13:50:24Z",
              "body": "OK this is ready for review I believe @faenuccio.",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6V4mjdzwAAAANjrrfS",
              "createdAt": "2024-10-08T13:50:44Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY1MDgwMTQ0",
                "login": "faenuccio"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6V4mjdzwAAAANjzSvr",
              "createdAt": "2024-10-08T15:52:33Z",
              "assignee": {
                "id": "MDQ6VXNlcjY1MDgwMTQ0",
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PEIme",
              "createdAt": "2024-10-08T15:52:48Z",
              "body": "Thanks, having a look!\r\n",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MZS9n",
              "createdAt": "2024-10-08T20:16:15Z",
              "body": "Thanks! I think that you can also replace the notation in the docstring (see line 282, for instance, in the dostring of `def coeAlgHom` (it also seems to me that there is a repetition three lines below). Also line 293 does not have this notation, can you check again the document? BTW, I think (please check) that we also have `R(T)` for rational functions, and it would be worth it to enforce also that notation in this file.",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGJl2",
              "createdAt": "2024-10-08T20:23:59Z",
              "body": "Thanks for the review! That section (from line 278 till 413) is not in the `LaurentSeries` namespace, it's in the `RatFunc` one, so the notation doesn't work in it, which was why I didn't make the change there -- obviously I can do it in the docstring anyways if that's preferred?\r\n\r\nOr is there a way to be able to use it in the Lean code too? If I `open LaurentSeries` that will open everything, no, not just enable the notation?\r\n\r\nI'll have a look for the rational function notation.",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MZYP_",
              "createdAt": "2024-10-08T20:28:23Z",
              "body": "> Thanks for the review! That section (from line 278 till 413) is not in the `LaurentSeries` namespace, it's in the `RatFunc` one, so the notation doesn't work in it, which was why I didn't make the change there -- obviously I can do it in the docstring anyways if that's preferred?\n> \n> Or is there a way to be able to use it in the Lean code too? If I `open LaurentSeries` that will open everything, no, not just enable the notation?\n> \n> I'll have a look for the rational function notation. \n\nIn order to only open notation you can write\n```\nopen scoped LaurentSeries\n```\n(for instance right after the `namespace RatFunc ` on line 280). This will allow the `scoped` (sic!) notation to fire, without carrying over all results in the namespace.",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGTEP",
              "createdAt": "2024-10-08T20:47:33Z",
              "body": "Thanks for that tip, I'm sure I've seen it before and forgot what it does. It seems to work perfectly.\r\n\r\nI've made the changes, and also made the changes to use the *PowerSeries* notation in the file -- I'm still looking for the notation for rational functions, I don't see it immediately yet.\r\n\r\nRight now the only places without the notation then are in the module docstring -- let me know if I should change it there too but I followed what the PowerSeries module did (which is to use it in the docstring).",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGpna",
              "createdAt": "2024-10-08T21:51:23Z",
              "body": "> Thanks for that tip, I'm sure I've seen it before and forgot what it does. It seems to work perfectly.\r\n> \r\n> I've made the changes, and also made the changes to use the _PowerSeries_ notation in the file -- I'm still looking for the notation for rational functions, I don't see it immediately yet.\r\n> \r\n> Right now the only places without the notation then are in the module docstring -- let me know if I should change it there too but I followed what the PowerSeries module did (which is to use it in the docstring).\r\n\r\nConcerning `RatFun` you're right, there is nothing. Forget about it - I am sorry. As for docstring, I would suggest that both in the module docstring (at the top) and in declarations docstring, you first use the full name, then you show what the notation is, and from that point on, you only use the notation. As several docstrings are duplicated in the module and along the files, this applies to both situations.",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGt_I",
              "createdAt": "2024-10-08T22:06:09Z",
              "body": "> Concerning RatFun you're right, there is nothing.\r\n\r\nThere is one place that uses the notation in a docstring, that place is [here](https://github.com/leanprover-community/Mathlib4/blob/e17ccbe934727256f1af113191d343496ff7f70c/Mathlib/FieldTheory/RatFunc/Defs.lean#L59) (but yeah it seems not to exist, maybe due to those old Zulip threads about how safe it was to have notation with single parentheses? I can't find them via Zulip search).\r\n\r\nI am happy to make the docstring notation change of course -- but do you want me to make it to the PowerSeries file as well in this same PR? It too doesn't mention the notation in the docstring. Or should I do that in a follow-up?",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGuiG",
              "createdAt": "2024-10-08T22:07:57Z",
              "body": "There are a bunch of places in the PowerSeries files that don't use the PowerSeries notation. To me it seems best to do it in a follow up along with fixing those. I'll proceed under that assumption unless you tell me otherwise!",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PIYVh",
              "createdAt": "2024-10-09T05:20:03Z",
              "body": "> There are a bunch of places in the PowerSeries files that don't use the PowerSeries notation. To me it seems best to do it in a follow up along with fixing those. I'll proceed under that assumption unless you tell me otherwise!\r\n\r\nBoth are OK, so go ahead as you see fit. Final question before sending this PR to merge: have you checked that `LaurentSeries *` does not appear anywhere else in the library?",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6V4mjdzwAAAANktHkI",
              "createdAt": "2024-10-09T14:49:30Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PNI-B",
              "createdAt": "2024-10-09T14:59:43Z",
              "body": "OK I've added the notation to the module docstring and type docstring as you suggested, so I think this is ready now!\r\n\r\n> have you checked that LaurentSeries * does not appear anywhere else in the library?\r\n\r\nYes! At least via a grep, this is all of them.",
              "author": {
                "login": "Julian"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PNQnn",
              "createdAt": "2024-10-09T15:11:37Z",
              "body": "Awesome, thanks so much for your work!",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PNQqw",
              "createdAt": "2024-10-09T15:11:41Z",
              "body": "maintainer merge",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PNQ3S",
              "createdAt": "2024-10-09T15:12:00Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by faenuccio.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6V4mjdzwAAAANkungX",
              "createdAt": "2024-10-09T15:12:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PTyar",
              "createdAt": "2024-10-10T07:45:44Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6V4mjdzwAAAANlZJRv",
              "createdAt": "2024-10-10T07:45:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PT3Pb",
              "createdAt": "2024-10-10T07:55:21Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11269667127/job/31338736606)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11269667127/job/31338736812)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6V4mjdzwAAAANlZ633",
              "createdAt": "2024-10-10T07:55:22Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6V4mjdzwAAAANlZ7Fk",
              "createdAt": "2024-10-10T07:55:25Z"
            }
          ]
        }
      }
    }
  }
}
