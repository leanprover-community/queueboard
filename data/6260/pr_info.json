{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 113,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR defines\r\n\r\n1. the `supDegree` of an `AddMonoidAlgebra`, graded by a `SemilatticeSup`;\r\n1. the `infDegree` of an `AddMonoidAlgebra`, graded by a `SemilatticeInf`;\r\n1. ~~the `maxDegree` of an `AddMonoidAlgebra`, graded by a `LinearOrder` with a bottom element;~~\r\n1. ~~the `minDegree` of an `AddMonoidAlgebra`, graded by a `LinearOrder` with a top element.~~\r\n\r\nIt also proves that under addition and multiplication in the `AddMonoidAlgebra`, each degree behaves as expected.\r\n\r\nThe lemmas are there simply to give a sample usage of the new definition.\r\n\r\nThe [corresponding `mathlib3` PR](https://github.com/leanprover-community/mathlib/pull/15296) was `not-too-late` and closed unmerged.\r\n\r\n---\r\n\r\nPlease, let me know which of these definitions seems more useful, or whether you think that different assumptions would be better.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-08-14T06:35:53Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5j5mpS",
              "body": "LGTM. Please merge after processing the comment by Eric.\r\n\r\nbors d+",
              "createdAt": "2023-08-12T18:29:01Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j5mpV",
              "body": ":v: adomani can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-12T18:29:02Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j5sN7",
              "body": "Johan, thank you very much for the review!\r\n\r\nI am going to wait to merge, to give @eric-wieser and @alreadydone a chance to give comments.\r\n\r\nThe suggestion that Eric gave required some extra tweaking.  The more general definition of `max/minDegree` absorbed the older notions of `sup/infDegree`, so I removed the less general version.  That version is still available via, e.g., `f.supDegree ((↑) : A → WithBot A)`.\r\n\r\nI went for a conservative approach: introduce only the most general definition that was proposed and not the more specialized one.  I think that allowing the degree to take place in an order that is not necessarily the grading type of the AddMonoidAlgebra will be useful: for instance, it may be useful to work with the `Nat`-grading of `MvPolynomials` and not be stuck with working necessarily with the full `sigma --> Nat`.",
              "createdAt": "2023-08-12T19:30:47Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j8JZ0",
              "body": "bors r+",
              "createdAt": "2023-08-14T05:39:35Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j8UvA",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5852272549/job/15864239415)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5852272549/job/15864239332)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5852272549/job/15864239135)",
              "createdAt": "2023-08-14T06:35:52Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kGDgX",
              "body": "Hi @adomani, I've been working on the fundamental theorem of symmetric polynomials in the past 2 days, which is now sorry free (so @negiizhao's Lindemann-Weierstrass proof only needs your [is_domain add_monoid_algebra](https://github.com/leanprover-community/mathlib/pull/16157) to work).\r\n\r\nTo complete the proof I developed [substantial API](https://github.com/leanprover-community/mathlib4/pull/6593/files#diff-8f6be6b9e4c1799d4b5dac48c8acbc44c62c3601177fd57bbe16defb9d50e11d) (line 70-283, `section maxDegree`) for `maxDegree` taken values in `Lex (Finsupp σ ℕ)` which is a linear order when `σ` is given one; note the absence of `WithBot`, so it's more like `natDegree` rather than `Polynomial.degree`. Even though it's a linear order, I've defined it using `Finset.sup` like you did in this PR., which is more convenient than `Finset.max` (values in `WithBot`) and `Finset.max'` (requires `Nonempty` and therefore `if then else` in definition). If you have further work in this direction, we should discuss and collaborate on a PR introducing the API including `maxDegree`, `leadingCoeff` and `Monic`.",
              "createdAt": "2023-08-15T17:10:10Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kJmCm",
              "body": "Dear @alreadydone, I am very happy that \"`degree`s\" related to the ones in this PR are useful!  As you saw, I ended up only merging one version.\r\n\r\nI also think that the specialized ones are great as local definitions, as in the case of your `maxDegree`, with a view to finding a good generalization.  Also, I view the difference between `degree` and `natDegree` as an inconvenience of formalization.  There should really be only one notion and enough automation to deal with `WithBot` invisibly in the background.  I know that this is not the case right now, but I find that the duplication of all the lemmas (or snaking around the available ones) not really ideal!\r\n\r\nFinally, I was not planning to port the no-zero divisor instances soon: I am currently using my lean time to learn some meta-programming.  I would be very happy to see it in mathlib4, but honestly, it is not one of my priorities right now.\r\n\r\nSorry if I am making your progress harder!  Feel free to press me, in case you really want me to port the [`is_domain add_monoid_algebra](https://github.com/leanprover-community/mathlib/pull/16157) PR -- I'll try to be as responsive as I can! :smile: ",
              "createdAt": "2023-08-16T09:05:57Z",
              "author": {
                "login": "adomani"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7c7dd243e9911f57b349f1a0b204ace91a427808",
                "additions": 154,
                "deletions": 1,
                "committedDate": "2023-07-30T23:17:38Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d0a7b525a6c2faa9ec40985d957e092ebd9db44",
                "additions": 11,
                "deletions": 8,
                "committedDate": "2023-07-31T03:09:44Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c91d50c022245dd003e9c2c668db0f26ee6ef260",
                "additions": 29,
                "deletions": 22,
                "committedDate": "2023-07-31T03:25:30Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "89738198505442b01e39a07db55f8707c72a0693",
                "additions": 61,
                "deletions": 55,
                "committedDate": "2023-07-31T03:33:57Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a37e67bdf56d85beb24f4ad4ec6f6a8f2d31bab7",
                "additions": 27205,
                "deletions": 17210,
                "committedDate": "2023-08-12T18:35:56Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ef62d848eadd9a0927523a3d1ee7d116a9b2009f",
                "additions": 55,
                "deletions": 106,
                "committedDate": "2023-08-12T19:24:16Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-31T03:27:10Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/Degree.lean",
              "additions": 113,
              "deletions": 1
            }
          ]
        },
        "headRefName": "forward_port_15296",
        "headRefOid": "ef62d848eadd9a0927523a3d1ee7d116a9b2009f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WwOgQ",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5covh-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-31T08:06:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d5aph",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-12T18:28:34Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6260,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5couR5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-31T08:03:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5covh-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-31T08:06:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cqFAZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-07-31T11:13:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d5aph",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-12T18:28:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MOt73",
                    "body": "Is there a reason not to generalize this to\r\n```suggestion\r\nvariable [AddZeroClass A] [SemilatticeInf T] [OrderTop T] (D : A → T)\r\n```",
                    "createdAt": "2023-07-31T08:03:19Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MOu0E",
                    "body": "Ah, I found https://github.com/leanprover-community/mathlib/pull/15296#issuecomment-1185746141:\r\n\r\n> I'm not against generality; in fact, I just found one use case in mathlib where `B` is not a linear_order: [mv_polynomial.degrees](https://leanprover-community.github.io/mathlib_docs/data/mv_polynomial/variables.html#mv_polynomial.degrees), so I'm in favor of keeping the smilattice_inf versions (`D` is still a homomorphism though.)\r\n> \r\n> I do think the current lemmas would be more convenient to use if specialized to the linear_order case. If they're gonna be used in 3 situations that all have `B` being linear_order then we should probably do the specialization here instead at each of the 3 situations. Maybe we should reserve `max_degree` and `min_degree` for the linear_order case, and rename them to `sup_degree` and `inf_degree` in the semilattice_sup/inf case. The linear_order version would be stated using `[linear_ordered_add_comm_monoid B]` and `D : A →+ B`, which would be more convenient to use, as the D0, Dm hypotheses cannot be supplied by typeclass inference.\r\n> \r\n> There are also many lemmas that hold for linear_order but not general semilattice_inf; [polynomial.degree_add_eq_left_of_degree_lt](https://leanprover-community.github.io/mathlib_docs/data/polynomial/degree/definitions.html#polynomial.degree_add_eq_left_of_degree_lt) (consider p = xy^2-yx^2 and q = yx^2), and ~[polynomial.degree_mul'](https://leanprover-community.github.io/mathlib_docs/data/polynomial/degree/definitions.html#polynomial.degree_mul') (leading_coeff only really makes sense in linear_order case)~ (sorry, can't really state it this way unless D is injective; would need to use [graded_ring.proj](https://leanprover-community.github.io/mathlib_docs/ring_theory/graded_algebra/basic.html#graded_ring.proj)/decompose).\r\n\r\n",
                    "createdAt": "2023-07-31T08:06:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MPkZ_",
                    "body": "I am in favour of switching back to `SemilatticeInf`, but am not opposed to leaving it as is, given the controversial nature of the assumption!\r\n\r\nIn other situations, I remember regretting not having made a possible generalisation.  I think that I never regretted generalising too much!",
                    "createdAt": "2023-07-31T11:13:28Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCOM8",
                    "body": "Ok, let's switch back to the general version.",
                    "createdAt": "2023-08-12T18:28:34Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: add definitions of degrees of AddMonoidAlgebras",
        "updatedAt": "2023-08-16T09:07:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6260",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7c7dd243e9911f57b349f1a0b204ace91a427808"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4d0a7b525a6c2faa9ec40985d957e092ebd9db44"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c91d50c022245dd003e9c2c668db0f26ee6ef260"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "89738198505442b01e39a07db55f8707c72a0693"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s-iA4zwAAAAJRml-n",
              "createdAt": "2023-07-31T04:09:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s-iA4zwAAAAJRml-s",
              "createdAt": "2023-07-31T04:09:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5couR5",
              "createdAt": "2023-07-31T08:03:18Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5mpS",
              "createdAt": "2023-08-12T18:29:01Z",
              "body": "LGTM. Please merge after processing the comment by Eric.\r\n\r\nbors d+",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5mpV",
              "createdAt": "2023-08-12T18:29:02Z",
              "body": ":v: adomani can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s-iA4zwAAAAJYrlVZ",
              "createdAt": "2023-08-12T18:29:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s-iA4zwAAAAJYrlVi",
              "createdAt": "2023-08-12T18:29:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a37e67bdf56d85beb24f4ad4ec6f6a8f2d31bab7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef62d848eadd9a0927523a3d1ee7d116a9b2009f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5sN7",
              "createdAt": "2023-08-12T19:30:47Z",
              "body": "Johan, thank you very much for the review!\r\n\r\nI am going to wait to merge, to give @eric-wieser and @alreadydone a chance to give comments.\r\n\r\nThe suggestion that Eric gave required some extra tweaking.  The more general definition of `max/minDegree` absorbed the older notions of `sup/infDegree`, so I removed the less general version.  That version is still available via, e.g., `f.supDegree ((↑) : A → WithBot A)`.\r\n\r\nI went for a conservative approach: introduce only the most general definition that was proposed and not the more specialized one.  I think that allowing the degree to take place in an order that is not necessarily the grading type of the AddMonoidAlgebra will be useful: for instance, it may be useful to work with the `Nat`-grading of `MvPolynomials` and not be stuck with working necessarily with the full `sigma --> Nat`.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j8JZ0",
              "createdAt": "2023-08-14T05:39:35Z",
              "body": "bors r+",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j8UvA",
              "createdAt": "2023-08-14T06:35:52Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5852272549/job/15864239415)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5852272549/job/15864239332)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5852272549/job/15864239135)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5s-iA4zwAAAAJY-AyJ",
              "createdAt": "2023-08-14T06:35:53Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5s-iA4zwAAAAJY-A6a",
              "createdAt": "2023-08-14T06:35:57Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kGDgX",
              "createdAt": "2023-08-15T17:10:10Z",
              "body": "Hi @adomani, I've been working on the fundamental theorem of symmetric polynomials in the past 2 days, which is now sorry free (so @negiizhao's Lindemann-Weierstrass proof only needs your [is_domain add_monoid_algebra](https://github.com/leanprover-community/mathlib/pull/16157) to work).\r\n\r\nTo complete the proof I developed [substantial API](https://github.com/leanprover-community/mathlib4/pull/6593/files#diff-8f6be6b9e4c1799d4b5dac48c8acbc44c62c3601177fd57bbe16defb9d50e11d) (line 70-283, `section maxDegree`) for `maxDegree` taken values in `Lex (Finsupp σ ℕ)` which is a linear order when `σ` is given one; note the absence of `WithBot`, so it's more like `natDegree` rather than `Polynomial.degree`. Even though it's a linear order, I've defined it using `Finset.sup` like you did in this PR., which is more convenient than `Finset.max` (values in `WithBot`) and `Finset.max'` (requires `Nonempty` and therefore `if then else` in definition). If you have further work in this direction, we should discuss and collaborate on a PR introducing the API including `maxDegree`, `leadingCoeff` and `Monic`.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N-hPF",
              "createdAt": "2023-08-15T23:09:26Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5X_SVb",
                "title": "[Merged by Bors] - feat(MvPolynomial/Symmetric): the fundamental theorem",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6593"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kJmCm",
              "createdAt": "2023-08-16T09:05:57Z",
              "body": "Dear @alreadydone, I am very happy that \"`degree`s\" related to the ones in this PR are useful!  As you saw, I ended up only merging one version.\r\n\r\nI also think that the specialized ones are great as local definitions, as in the case of your `maxDegree`, with a view to finding a good generalization.  Also, I view the difference between `degree` and `natDegree` as an inconvenience of formalization.  There should really be only one notion and enough automation to deal with `WithBot` invisibly in the background.  I know that this is not the case right now, but I find that the duplication of all the lemmas (or snaking around the available ones) not really ideal!\r\n\r\nFinally, I was not planning to port the no-zero divisor instances soon: I am currently using my lean time to learn some meta-programming.  I would be very happy to see it in mathlib4, but honestly, it is not one of my priorities right now.\r\n\r\nSorry if I am making your progress harder!  Feel free to press me, in case you really want me to port the [`is_domain add_monoid_algebra](https://github.com/leanprover-community/mathlib/pull/16157) PR -- I'll try to be as responsive as I can! :smile: ",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ObfjQ",
              "createdAt": "2023-09-15T04:43:12Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5aZoKX",
                "title": "[Merged by Bors] - feat: more API for AddMonoidAlgebra.supDegree / leadingCoeff / Monic",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7173"
              }
            }
          ]
        }
      }
    }
  }
}
