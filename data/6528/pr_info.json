{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 655,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Autoimplicits are [highly controversial](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/.60autoImplicit.20true.60.20is.20evil/near/355142480) and also [defeat the performance-improving work](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/autoimplicit.20and.20Type*/near/383878932) in #6474.\r\n\r\nThe intent of this PR is to make `autoImplicit` opt-in on a per-file basis, by disabling it in the lakefile and enabling it again with `set_option autoImplicit true` in the few files that rely on it.\r\n\r\nThat also keeps this PR small, as opposed to attempting to \"fix\" files to not need it any more.\r\n\r\nI claim that many of the uses of `autoImplicit` in these files are accidental; situations such as:\r\n\r\n* Assuming `variables` are in scope, but pasting the lemma in the wrong section\r\n* Pasting in a lemma from a scratch file without checking to see if the variable names are consistent with the rest of the file\r\n* Making a copy-paste error between lemmas and forgetting to add an explicit arguments.\r\n\r\nHaving `set_option autoImplicit false` as the default prevents these types of mistake being made in the 90% of files where `autoImplicit`s are not used at all, and causes them to be caught by CI during review.\r\n\r\nI think there were various points during the port where we encouraged porters to delete the `universes u v` lines; I think having autoparams for universe variables only would cover a lot of the cases we actually use them, while avoiding any real shortcomings.\r\n\r\n[A Zulip poll](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/mathlib4.3A.20autoImplicit.20false.20by.20default.3F/near/384265143) (after combining overlapping votes accordingly) was in favor of this change with `5:5:18` as the `no:dontcare:yes` vote ratio.\r\n\r\nWhile this PR was being reviewed, a handful of files gained some more likely-accidental autoImplicits. In these places, `set_option autoImplicit true` has been placed locally within a section, rather than at the top of the file.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 331,
        "closed": true,
        "closedAt": "2023-08-14T17:03:46Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5j5DHS",
              "body": "Can you make one with it completely turned off to benchmark?",
              "createdAt": "2023-08-12T12:51:48Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j5DXf",
              "body": "That's a lot more work (and a lot more controversial). I assume you already realize, but I would expect the performance effect of the PR in its current form to be completely neutral. The goal for now is to limit the scope for accidental introduction of autoimplicits.",
              "createdAt": "2023-08-12T12:54:54Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j5DeO",
              "body": "Yes. I would expect nothing to change performance wise here. My point is that if autoimplicit itself is not performance neutral then that will need to be considered in whatever decision is reached. ",
              "createdAt": "2023-08-12T12:57:43Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j-mkf",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2023-08-14T13:50:54Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j-4G6",
              "body": "bors r-\r\n\r\nLooks like a fix is needed first",
              "createdAt": "2023-08-14T14:28:03Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j-4Hw",
              "body": "Canceled.",
              "createdAt": "2023-08-14T14:28:04Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_E0L",
              "body": "bors p=10",
              "createdAt": "2023-08-14T14:52:30Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_O4_",
              "body": "bors merge p=10",
              "createdAt": "2023-08-14T15:11:03Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_QMJ",
              "body": "Canceled.",
              "createdAt": "2023-08-14T15:14:13Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_U1l",
              "body": "bors merge",
              "createdAt": "2023-08-14T15:25:06Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_WFX",
              "body": "Canceled.",
              "createdAt": "2023-08-14T15:26:58Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_ZKm",
              "body": "bors merge\r\n\r\n(Another set of PRs got merged and made this rot again. Apologies for hogging the queue, but if I don't the finish line will constantly be one step away)",
              "createdAt": "2023-08-14T15:31:23Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_fg5",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5857635287/job/15879913950)",
              "createdAt": "2023-08-14T15:46:41Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_g8U",
              "body": "bors merge",
              "createdAt": "2023-08-14T15:49:07Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_w_G",
              "body": "Build failed:\n  * Build",
              "createdAt": "2023-08-14T16:26:33Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_xiW",
              "body": "bors merge",
              "createdAt": "2023-08-14T16:28:09Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_yq2",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5858187477/job/15881639854)",
              "createdAt": "2023-08-14T16:31:19Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_3EO",
              "body": "bors merge\r\n\r\nThis finally passes locally; the previous bors commands were just to ensure that another batch didn't force another 2 hour build/fix-iteration cycle on me.",
              "createdAt": "2023-08-14T16:43:01Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j_-_l",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5858329219/job/15882055456)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5858329219/job/15882055592)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5858329219/job/15882054951)",
              "createdAt": "2023-08-14T17:03:45Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2adbfab68248345e22a45da9f914fbd30f2b94dc",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2023-08-11T15:53:05Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5b8623b3acc4f8d2de3bee79462cead1a3071227",
                "additions": 630,
                "deletions": 3,
                "committedDate": "2023-08-12T09:18:15Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4e288dffe2d6ff6589a16875829b5cb4d6a8137d",
                "additions": 2422,
                "deletions": 922,
                "committedDate": "2023-08-14T13:27:36Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "abd85dbd490f2e8b0c51418577d0a8eb40caa735",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2023-08-14T15:14:04Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2ca022b8f54adcb7af3a012adea781a4f61995de",
                "additions": 1059,
                "deletions": 159,
                "committedDate": "2023-08-14T15:25:31Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7f3957ed509ceb4568dd584c1e3eeb4c8212cf7a",
                "additions": 14,
                "deletions": 0,
                "committedDate": "2023-08-14T16:35:22Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-11T15:53:40Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Cache/IO.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Cache/Requests.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/AddTorsor.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Algebra/Equiv.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Algebra/Hom.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/GroupCat/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/GroupWithZeroCat.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Free.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Projective.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/MonCat/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/Ring/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/CharZero/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Field/MinimalAxioms.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Field/Opposite.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/MinimalAxioms.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Semiconj.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Hom/GroupAction.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Hom/NonUnitalAlg.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/DifferentialObject.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/HomotopyCategory.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/ImageToKernel.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/LeftHomology.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/RightHomology.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Invertible.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Hom.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Lattice.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Torsion.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/NeZero.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Opposites.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/AbsoluteValue.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Archimedean.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Group/Bounds.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Invertible.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Canonical/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/TypeTags.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Units.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Pi.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Sub/Prod.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/PUnitInstances.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/MinimalAxioms.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/RingQuot.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplicialObject.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplicialSet.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Calculus/Deriv/Star.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Calculus/FDeriv/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Complex/CauchyIntegral.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Convex/Gauge.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Convex/StrictConvexSpace.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/lpSpace.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Seminorm.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/SmoothTransition.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Bicategory/NaturalTransformation.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/ConnectedComponents.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/EqToHom.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/GradedObject.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Presheaf.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Biproducts.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Products.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Types.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Coherent.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Coverage.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/EffectiveEpimorphic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/UnivLE.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Yoneda.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/Partition.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/SingleObj.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Connectivity.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Connectivity/Subgraph.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Prod.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Subgraph.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/NFA.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Control/Monad/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Control/Monad/Writer.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Control/Random.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Array/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/BinaryHeap.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Bool/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/ByteArray.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Equiv/Functor.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Fin/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Finset/Lattice.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Finsupp/Encodable.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/HashMap.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Int/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Int/GCD.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/IsROrC/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/Card.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/Count.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/Lemmas.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/MinMax.lean",
              "additions": 2,
              "deletions": 0
            }
          ]
        },
        "headRefName": "no-more-autoImplicit",
        "headRefOid": "7f3957ed509ceb4568dd584c1e3eeb4c8212cf7a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5XvVXA",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
              "color": "e2af78",
              "name": "RFC"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6528,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "ChrisHughes24"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix: disable autoImplicit globally",
        "updatedAt": "2023-08-14T17:03:52Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6528",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2adbfab68248345e22a45da9f914fbd30f2b94dc"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uF_2_zwAAAAJYTTh2",
              "createdAt": "2023-08-11T15:53:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uF_2_zwAAAAJYTTh6",
              "createdAt": "2023-08-11T15:53:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5b8623b3acc4f8d2de3bee79462cead1a3071227"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJYl08t",
              "createdAt": "2023-08-12T09:18:50Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uF_2_zwAAAAJYl1Vq",
              "createdAt": "2023-08-12T09:19:57Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uF_2_zwAAAAJYl1Vt",
              "createdAt": "2023-08-12T09:19:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c5uF_2_zwAAAAJYl1XA",
              "createdAt": "2023-08-12T09:20:00Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5DHS",
              "createdAt": "2023-08-12T12:51:48Z",
              "body": "Can you make one with it completely turned off to benchmark?",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5DXf",
              "createdAt": "2023-08-12T12:54:54Z",
              "body": "That's a lot more work (and a lot more controversial). I assume you already realize, but I would expect the performance effect of the PR in its current form to be completely neutral. The goal for now is to limit the scope for accidental introduction of autoimplicits.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5DeO",
              "createdAt": "2023-08-12T12:57:43Z",
              "body": "Yes. I would expect nothing to change performance wise here. My point is that if autoimplicit itself is not performance neutral then that will need to be considered in whatever decision is reached. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4e288dffe2d6ff6589a16875829b5cb4d6a8137d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j-mkf",
              "createdAt": "2023-08-14T13:50:54Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uF_2_zwAAAAJZOsFw",
              "createdAt": "2023-08-14T13:51:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uF_2_zwAAAAJZOsIJ",
              "createdAt": "2023-08-14T13:51:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j-4G6",
              "createdAt": "2023-08-14T14:28:03Z",
              "body": "bors r-\r\n\r\nLooks like a fix is needed first",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j-4Hw",
              "createdAt": "2023-08-14T14:28:04Z",
              "body": "Canceled.",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZQ9_j",
              "createdAt": "2023-08-14T14:34:26Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZRDSI",
              "createdAt": "2023-08-14T14:35:55Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZRXcL",
              "createdAt": "2023-08-14T14:42:28Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_E0L",
              "createdAt": "2023-08-14T14:52:30Z",
              "body": "bors p=10",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_O4_",
              "createdAt": "2023-08-14T15:11:03Z",
              "body": "bors merge p=10",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "abd85dbd490f2e8b0c51418577d0a8eb40caa735"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZS2WM",
              "createdAt": "2023-08-14T15:14:11Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_QMJ",
              "createdAt": "2023-08-14T15:14:13Z",
              "body": "Canceled.",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_U1l",
              "createdAt": "2023-08-14T15:25:06Z",
              "body": "bors merge",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2ca022b8f54adcb7af3a012adea781a4f61995de"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_WFX",
              "createdAt": "2023-08-14T15:26:58Z",
              "body": "Canceled.",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZToaS",
              "createdAt": "2023-08-14T15:30:34Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_ZKm",
              "createdAt": "2023-08-14T15:31:23Z",
              "body": "bors merge\r\n\r\n(Another set of PRs got merged and made this rot again. Apologies for hogging the queue, but if I don't the finish line will constantly be one step away)",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_fg5",
              "createdAt": "2023-08-14T15:46:41Z",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5857635287/job/15879913950)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZUcSg",
              "createdAt": "2023-08-14T15:49:01Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_g8U",
              "createdAt": "2023-08-14T15:49:07Z",
              "body": "bors merge",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_w_G",
              "createdAt": "2023-08-14T16:26:33Z",
              "body": "Build failed:\n  * Build",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZWCO1",
              "createdAt": "2023-08-14T16:27:01Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_xiW",
              "createdAt": "2023-08-14T16:28:09Z",
              "body": "bors merge",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_yq2",
              "createdAt": "2023-08-14T16:31:19Z",
              "body": "Build failed:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5858187477/job/15881639854)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7f3957ed509ceb4568dd584c1e3eeb4c8212cf7a"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uF_2_zwAAAAJZWWG4",
              "createdAt": "2023-08-14T16:36:05Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_3EO",
              "createdAt": "2023-08-14T16:43:01Z",
              "body": "bors merge\r\n\r\nThis finally passes locally; the previous bors commands were just to ensure that another batch didn't force another 2 hour build/fix-iteration cycle on me.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j_-_l",
              "createdAt": "2023-08-14T17:03:45Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5858329219/job/15882055456)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5858329219/job/15882055592)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5858329219/job/15882054951)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uF_2_zwAAAAJZXSxH",
              "createdAt": "2023-08-14T17:03:46Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uF_2_zwAAAAJZXS9A",
              "createdAt": "2023-08-14T17:03:52Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
