{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 38,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "djvelleman"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Allow the use of pattern matching in set-builder notation.  For example, `{ (m, n) : â„• Ã— â„• | m * n = 12 }` denotes the set of all ordered pairs of natural numbers whose product is 12.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-12-07T00:32:54Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5t4fhd",
              "body": "Note that `priority` was set to `low-1` to avoid conflicts with other set-builder notation.  If `priority` were `low`, then the following set-builder notation would become ambiguous: `{ n + 1 | n < 3 }`.  It could mean either `{x : Nat | match x with | n + 1 => n < 3}` or `{x : Nat | âˆƒ n < 3, n + 1 = x}`.\r\n\r\nAlso, note that the pattern must be matched by all objects of the relevant type.  Notation like `{ n + 1 : Nat | Nat.Prime n }` will generate an error, because `0` doesn't match the pattern `n + 1`.",
              "createdAt": "2023-12-06T19:05:01Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4rN6",
              "body": "Do you think it's worth supporting `{ n + 1 : Nat | Nat.Prime n }` eventually? What would almost work is expanding this as `{x : Nat | match x with | n + 1 => Nat.prime n | _ => False}`, but the `match` statement complains about irrelevant cases at the moment, so, while it would work here, this would cause things like `{(x, y) : Nat | x < y}` to fail.\r\n\r\nIf so, I can eventually write a Lean RFC for the missing feature.",
              "createdAt": "2023-12-06T19:39:52Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4t1W",
              "body": "Yes, I tried exactly the same change (adding `_ => False`) and discovered that it fixed `{ n + 1 | Nat.Prime n }`, but caused problems for the Cartesian product case because Lean complained about a redundant alternative.  I did wonder why Lean is bothered by a redundant alternative.  Can't it just ignore it (perhaps giving a warning)?\r\n\r\nI think the Cartesian product case is probably the most important one, but perhaps the other is worth considering.",
              "createdAt": "2023-12-06T19:47:39Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4v_Z",
              "body": "Should the previous macro (the one about extended binders) also be given a name?  I don't really know how these things work.  Does the text between `/--` and `-/` get displayed in a pop-up when the user hovers over the notation?",
              "createdAt": "2023-12-06T19:53:56Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4w5z",
              "body": "I think the idea is that generally unused cases in a `match` are a programming error. I've certainly caught would-be bugs because of this feature while programming.\r\n\r\nFor metaprogramming/macro purposes though, it's nice being able to robustly have fall-through `_` cases. When you do `match` on `Syntax`, there's actually special support for this to suppress the error. If we copy that to the general `match` elaborator, then we could expand it as for example\r\n```\r\n{x : Nat | match x with | n + 1 => Nat.prime n | _ => no_error_if_unused% False}\r\n```",
              "createdAt": "2023-12-06T19:56:42Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4xdT",
              "body": "> Should the previous macro (the one about extended binders) also be given a name? I don't really know how these things work. Does the text between `/--` and `-/` get displayed in a pop-up when the user hovers over the notation?\r\n\r\nI suggested adding a name just so you could use `inherit_doc` to copy the docstring from one macro to another. If we're not doing that, I think there's no need to add a name.\r\n\r\nYes, the docstring text appears to users in a popup when they hover over notation.",
              "createdAt": "2023-12-06T19:58:24Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4z1R",
              "body": "OK, I pushed a change adding to the docstring.  I haven't added anything to the docstring for the extended binder macro, because I can't think of an example of set-builder notation with pattern matching that could be mistakenly interpreted as extended binders.  (If we find a way to add `_ => False`, then `{ n + 1 | n < 3 }` would be an example.)\r\n\r\nThis is my first PR, so I hope I'm doing things right.",
              "createdAt": "2023-12-06T20:05:23Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t40dF",
              "body": "Oh, I see that I had some lines that were too long.  Fixed.",
              "createdAt": "2023-12-06T20:07:21Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4-3G",
              "body": "> This is my first PR, so I hope I'm doing things right.\r\n\r\nWell, so far it seems as if you've done a number of PRs already ðŸ˜ƒ\r\n\r\nI think this is a nice feature to include. I do have the small reservation that I worry that having `match` in terms might lead to confusions or other obstructions when proving things, but I'm hoping that in the usual case (tuples) it will be totally seamless.\r\n\r\nIn particular, `match` generates a fresh auxiliary matcher declaration every time it's used, and there's a possibility that we can't write general lemmas involving this notation because of this. However, I did check that tuple lemmas are OK.\r\n```\r\nlemma mem_setof_tuple {Î± Î² : Type*} (p : Î± â†’ Î² â†’ Prop) (q : Î± Ã— Î²) :\r\n    q âˆˆ {(x, y) | p x y} â†” p q.1 q.2 := Iff.rfl\r\n\r\nexample : (1,2) âˆˆ {(x,y) : Nat Ã— Nat | x < y} := by\r\n  -- both simp and rw do something:\r\n  --simp only [mem_setof_tuple]\r\n  --rw [mem_setof_tuple]\r\n``` \r\n(Actually, `simp` is perfectly happy to prove this `example` all on its own without the helper lemma, which is great.)",
              "createdAt": "2023-12-06T20:38:37Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4_v9",
              "body": "I think it's in a good state for merging now. I'll delegate it to you so that you can go ahead and merge it once CI passes. Bors should explain what you need to do by writing a comment after mine, but if you need any help don't hesitate to reach out.\r\n\r\nbors d+",
              "createdAt": "2023-12-06T20:41:25Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t4_w3",
              "body": ":v: djvelleman can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-12-06T20:41:28Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5CqU",
              "body": "I've actually been using these macros for quite a while in *How To Prove It with Lean*, and haven't had any problems.  If you're curious, you can see what I've been doing here:  https://djvelleman.github.io/HTPIwL/Chap4.html.  You'll see that I quoted Definition 4.2.3 from *How To Prove It* (where relations are treated as sets of ordered pairs), and then translated all parts of that definition into Lean, using pattern-matching.  (HTPIwL is written in a somewhat nonstandard dialect of Lean--I use a small subset of Lean's tactics, together with some tactics I wrote to make things match up better with HTPI.)\r\n\r\nThanks for all your help Kyle!",
              "createdAt": "2023-12-06T20:50:33Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5C3Y",
              "body": "bors r+",
              "createdAt": "2023-12-06T20:51:12Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5G9F",
              "body": "(It won't hurt anything if you did since bors is careful, and I anticipate bors to succeed, but I think you might have jumped the gun with `bors r+`. Usually I wait to see that the CI passes completely -- every test gets a green checkmark -- before passing it on to bors. What bors is for is to take multiple approved PRs, combine them into a single batch, and then verify that mathlib still builds. This batching is to deal with the fact that if we were to run these tests on each merged PR serially we might get long delays when lots of PRs are merged. If any one PR causes bors to fail, then bors will start omitting PRs to try to figure out which PRs fail on their own. Again, I don't expect your PR to cause the batch to fail so it should be nothing to worry about. But if it does, it happens all the time and we don't really worry about it.)",
              "createdAt": "2023-12-06T21:03:28Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5IlA",
              "body": "Sorry about that.  When bors said \"djvelleman can now approve this pull request,\" I thought that meant I should go ahead and do it.  Then after I did, I realized that perhaps I was supposed to wait until CI finished.  I'll do it right next time.",
              "createdAt": "2023-12-06T21:08:36Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5XLE",
              "body": "Canceled.",
              "createdAt": "2023-12-06T21:56:30Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5YoS",
              "body": "Well, you were right Kyle, I should have waited.  It complained that I didn't have a docstring for the new unexpander.  I added one (does it look OK?), and it looks like the checks have started again automatically.  If it completes successfully, do I do bors r+ again?",
              "createdAt": "2023-12-06T22:01:18Z",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t5yeR",
              "body": "bors r+",
              "createdAt": "2023-12-06T23:42:49Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5t6EeQ",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7121673562/job/19391343152)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7121673562/job/19391342766)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7121673562/job/19391343031)",
              "createdAt": "2023-12-07T00:32:54Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f0fc60a188dccfe0d5405112e0afb2a289227ab5",
                "additions": 28,
                "deletions": 0,
                "committedDate": "2023-12-06T18:40:53Z",
                "author": {
                  "name": "djvelleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2RByw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119351694/job/19384254923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2RAkg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119351685/job/19384254610"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg1CV3Q",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118942116/job/19382965725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg1CV6g",
                        "name": "label-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118942110/job/19382965738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rTSw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828538/job/19382588235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rRLw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828545/job/19382587695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg1CV4A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118942113/job/19382965728"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2RAhQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119351694/job/19384254597"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rSKQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828538/job/19382587945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rQPA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828545/job/19382587452"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg1CWzg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118942113/job/19382965966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rRJw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828538/job/19382587687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rSLw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828545/job/19382587951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rQAw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828538/job/19382587395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rT4g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828545/job/19382588386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rS_Q",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828545/job/19382588157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rUWg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828538/job/19382588506"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2Yq9w",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828545/job/19384380151"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg0rVXw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7118828538/job/19382588767"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ae1d35a736c102c63d8803b459dcea2e95dc9187",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-12-06T19:37:02Z",
                "author": {
                  "name": "Dan Velleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YQwQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389780/job/19384373441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YQyQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389756/job/19384373449"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YQhw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389747/job/19384373383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YR9A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389777/job/19384373748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YVGA",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389747/job/19384374552"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YUgA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389756/job/19384374400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YQhA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389777/job/19384373380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YSMw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389756/job/19384373811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YTOA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389747/job/19384374072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YTXQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389756/job/19384374109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YUFA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389747/job/19384374292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YSIg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389747/job/19384373794"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YVjw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389756/job/19384374671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3Gbfw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389747/job/19385129855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg2YWtw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119389756/job/19384374967"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "83c0143fe5297ec5a2fdb9151b41ede5461c2d26",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-12-06T20:01:37Z",
                "author": {
                  "name": "djvelleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FYVw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612921/job/19385112663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FSXg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612409/job/19385111134"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FUVA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612407/job/19385111636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FZIQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612906/job/19385112865"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FTLw",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612407/job/19385111343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FUrw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612409/job/19385111727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FYFQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612906/job/19385112597"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FTgw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612409/job/19385111427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FVZQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612407/job/19385111909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FW2Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612409/job/19385112281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FR8A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612407/job/19385111024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FWaw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612407/job/19385112171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FV4g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612409/job/19385112034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3RDUg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612407/job/19385303890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3FYSw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119612409/job/19385112651"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1db4d8261ec104fb5c8ac8ceb2b2441761a48922",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-12-06T20:06:51Z",
                "author": {
                  "name": "djvelleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QyTg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673451/job/19385299534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QstA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673022/job/19385298100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QvHg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673027/job/19385298718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QyCA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673442/job/19385299464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3Qt6g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673022/job/19385298410"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3Qs5Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673027/job/19385298149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QzDQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673442/job/19385299725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3Qu_g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673022/job/19385298686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QwGg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673027/job/19385298970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QwFA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673022/job/19385298964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QxMA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673027/job/19385299248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QuJQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673027/job/19385298469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3QxYQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673022/job/19385299297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3baNg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673027/job/19385473590"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3Qyvw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119673022/job/19385299647"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b7583e0999521f21bb15b715a54bdbb63e0d3ff7",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-12-06T20:12:15Z",
                "author": {
                  "name": "djvelleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg30WlA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119862473/job/19385882260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg30WXQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119862466/job/19385882205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bNwA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728604/job/19385470400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bMYw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728279/job/19385470051"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bM0g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728284/job/19385470162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bO2Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728603/job/19385470681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg30Xxw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119862473/job/19385882567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bOlQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728279/job/19385470613"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bOig",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728284/job/19385470602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bNrg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728603/job/19385470382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bLCw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728279/job/19385469707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bNnQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728284/job/19385470365"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bNQw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728279/job/19385470275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bK2w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728284/job/19385469659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bMGQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728284/job/19385469977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bPbw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728279/job/19385470831"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BuMA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728284/job/19386101296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg3bQMw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119728279/job/19385471027"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "930bf4b37b643be2c0ab63419a2010b9011e95dd",
                "additions": 7,
                "deletions": 4,
                "committedDate": "2023-12-06T20:32:29Z",
                "author": {
                  "name": "djvelleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4HdiQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119964685/job/19386195337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4Hdlw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119964686/job/19386195351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BhNw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119932215/job/19386097975"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BbuA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931732/job/19386096568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BeaA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931737/job/19386097256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BhZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119932214/job/19386098021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4HehQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119964685/job/19386195589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BfkA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931732/job/19386097552"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BfMA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931737/job/19386097456"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BiRw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119932214/job/19386098247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4Bdqg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931732/job/19386097066"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BbvA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931737/job/19386096572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BeuQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931732/job/19386097337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BctQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931737/job/19386096821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4BdnQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931737/job/19386097053"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4Bcog",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931732/job/19386096802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg4Bg3A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931732/job/19386097884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Q8xA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7119931737/job/19388447940"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6d71e0a4c4876607d8689b0cf27a10b8593557ad",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-12-06T21:56:24Z",
                "author": {
                  "name": "djvelleman",
                  "email": "110697570+djvelleman@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZsSQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727924/job/19388591177"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZqXQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388590685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Zraw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388590955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZsJQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727914/job/19388591141"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZrIQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388590881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Zqsg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388590770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Zszw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727914/job/19388591311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Zstw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591287"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZsDQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388591117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZteQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Zp6A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388590568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6Zr5g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591078"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZsyQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388591305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg6ZuaA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591720"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEg8VzVA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19390624596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFX0-aFw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8850"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-12-06T18:53:28Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Init/Set.lean",
              "additions": 38,
              "deletions": 0
            }
          ]
        },
        "headRefName": "djvelleman-pr",
        "headRefOid": "6d71e0a4c4876607d8689b0cf27a10b8593557ad",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5hVtTP",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5paghS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-12-06T20:25:27Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8850,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5paMOR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-12-06T19:33:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5paghS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-12-06T20:25:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5pakd1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "djvelleman"
              },
              "submittedAt": "2023-12-06T20:35:41Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UgzzN",
                    "body": "I'm not sure what to use as the name exactly, but let's make sure both macros a same docstring using the following sort of modification, which is important for mouse-over information.\r\n```suggestion\r\nmacro (name := macroPattSetBuilder) (priority := low-1) \"{\" pat:term \" : \" t:term \" | \" p:term \"}\" : term =>\r\n  `({ x : $t | match x with | $pat => $p })\r\n\r\n@[inherit_doc macroPattSetBuilder]\r\nmacro (priority := low-1) \"{\" pat:term \" | \" p:term \"}\" : term =>\r\n  `({ x | match x with | $pat => $p })\r\n```\r\n\r\nI think it would be beneficial to mention in the docstring that if you don't include the type ascription then you might get the other interpretation (the one in the previous `extBinders` macro), along with an example of the ambiguity. It'd also be nice if that docstring could mention the same thing, to help direct people to this pattern matching one if that's what they actually wanted.",
                    "createdAt": "2023-12-06T19:33:19Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UhAeE",
                    "body": "When these docstrings appear, a TeX-like paragraphing system is used, so the first line gets flowed into the next. You'd need a period at the end of that first line.\r\n\r\nThat said, I think a nice convention is for notations to give the general syntax right up front. Here's a suggestion for the format, but feel free to edit it!\r\n```suggestion\r\n/--\r\n* `{ pat : X | p }` is notation for pattern matching in set-builder notation,\r\n  where `pat` is a pattern that is matched by all objects of type `X`\r\n  and `p` is a proposition that can refer to variables in the pattern.\r\n  It is the set of all elements in `X` which, when matched with the pattern `pat`,\r\n  make `p` come out true.\r\n\r\n* `{ pat | p }` is the same, but in the case when the type `X` can be inferred.\r\n```\r\n\r\nI think the rest of the docstring looks good.",
                    "createdAt": "2023-12-06T20:25:27Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UhDAH",
                    "body": "I made a small change (\"objects of type `X`\" rather than \"elements in `X`\").  (I know many people think of types as being essentially the same as sets, but I find it helpful to keep the ideas separate.  I thought it might be better to reserve the word \"element\" for sets.)\r\n\r\nWhen I wrote the docstring, I didn't realize that I was writing a docstring--I thought I was just writing a comment for anyone who looked at the file.  Thanks for explaining how docstrings work.",
                    "createdAt": "2023-12-06T20:35:41Z",
                    "author": {
                      "login": "djvelleman"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOBpkcYg",
              "login": "djvelleman"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZsSQ",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727924/job/19388591177"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZqXQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388590685"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6Zraw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388590955"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZsJQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727914/job/19388591141"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZrIQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388590881"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6Zqsg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388590770"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6Zszw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727914/job/19388591311"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6Zstw",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591287"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZsDQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388591117"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZteQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591481"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6Zp6A",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388590568"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6Zr5g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591078"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZsyQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19388591305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg6ZuaA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727659/job/19388591720"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEg8VzVA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7120727661/job/19390624596"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFX0-aFw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8850"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: allow pattern matching in set-builder notation",
        "updatedAt": "2024-03-25T19:56:57Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8850",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f0fc60a188dccfe0d5405112e0afb2a289227ab5"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c548woyzwAAAAKZ7gk9",
              "createdAt": "2023-12-06T18:53:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c548woyzwAAAAKZ7glO",
              "createdAt": "2023-12-06T18:53:29Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4fhd",
              "createdAt": "2023-12-06T19:05:01Z",
              "body": "Note that `priority` was set to `low-1` to avoid conflicts with other set-builder notation.  If `priority` were `low`, then the following set-builder notation would become ambiguous: `{ n + 1 | n < 3 }`.  It could mean either `{x : Nat | match x with | n + 1 => n < 3}` or `{x : Nat | âˆƒ n < 3, n + 1 = x}`.\r\n\r\nAlso, note that the pattern must be matched by all objects of the relevant type.  Notation like `{ n + 1 : Nat | Nat.Prime n }` will generate an error, because `0` doesn't match the pattern `n + 1`.",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5paMOR",
              "createdAt": "2023-12-06T19:33:19Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ae1d35a736c102c63d8803b459dcea2e95dc9187"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4rN6",
              "createdAt": "2023-12-06T19:39:52Z",
              "body": "Do you think it's worth supporting `{ n + 1 : Nat | Nat.Prime n }` eventually? What would almost work is expanding this as `{x : Nat | match x with | n + 1 => Nat.prime n | _ => False}`, but the `match` statement complains about irrelevant cases at the moment, so, while it would work here, this would cause things like `{(x, y) : Nat | x < y}` to fail.\r\n\r\nIf so, I can eventually write a Lean RFC for the missing feature.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4t1W",
              "createdAt": "2023-12-06T19:47:39Z",
              "body": "Yes, I tried exactly the same change (adding `_ => False`) and discovered that it fixed `{ n + 1 | Nat.Prime n }`, but caused problems for the Cartesian product case because Lean complained about a redundant alternative.  I did wonder why Lean is bothered by a redundant alternative.  Can't it just ignore it (perhaps giving a warning)?\r\n\r\nI think the Cartesian product case is probably the most important one, but perhaps the other is worth considering.",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4v_Z",
              "createdAt": "2023-12-06T19:53:56Z",
              "body": "Should the previous macro (the one about extended binders) also be given a name?  I don't really know how these things work.  Does the text between `/--` and `-/` get displayed in a pop-up when the user hovers over the notation?",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4w5z",
              "createdAt": "2023-12-06T19:56:42Z",
              "body": "I think the idea is that generally unused cases in a `match` are a programming error. I've certainly caught would-be bugs because of this feature while programming.\r\n\r\nFor metaprogramming/macro purposes though, it's nice being able to robustly have fall-through `_` cases. When you do `match` on `Syntax`, there's actually special support for this to suppress the error. If we copy that to the general `match` elaborator, then we could expand it as for example\r\n```\r\n{x : Nat | match x with | n + 1 => Nat.prime n | _ => no_error_if_unused% False}\r\n```",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4xdT",
              "createdAt": "2023-12-06T19:58:24Z",
              "body": "> Should the previous macro (the one about extended binders) also be given a name? I don't really know how these things work. Does the text between `/--` and `-/` get displayed in a pop-up when the user hovers over the notation?\r\n\r\nI suggested adding a name just so you could use `inherit_doc` to copy the docstring from one macro to another. If we're not doing that, I think there's no need to add a name.\r\n\r\nYes, the docstring text appears to users in a popup when they hover over notation.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "83c0143fe5297ec5a2fdb9151b41ede5461c2d26"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4z1R",
              "createdAt": "2023-12-06T20:05:23Z",
              "body": "OK, I pushed a change adding to the docstring.  I haven't added anything to the docstring for the extended binder macro, because I can't think of an example of set-builder notation with pattern matching that could be mistakenly interpreted as extended binders.  (If we find a way to add `_ => False`, then `{ n + 1 | n < 3 }` would be an example.)\r\n\r\nThis is my first PR, so I hope I'm doing things right.",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1db4d8261ec104fb5c8ac8ceb2b2441761a48922"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t40dF",
              "createdAt": "2023-12-06T20:07:21Z",
              "body": "Oh, I see that I had some lines that were too long.  Fixed.",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b7583e0999521f21bb15b715a54bdbb63e0d3ff7"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5paghS",
              "createdAt": "2023-12-06T20:25:27Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "930bf4b37b643be2c0ab63419a2010b9011e95dd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4-3G",
              "createdAt": "2023-12-06T20:38:37Z",
              "body": "> This is my first PR, so I hope I'm doing things right.\r\n\r\nWell, so far it seems as if you've done a number of PRs already ðŸ˜ƒ\r\n\r\nI think this is a nice feature to include. I do have the small reservation that I worry that having `match` in terms might lead to confusions or other obstructions when proving things, but I'm hoping that in the usual case (tuples) it will be totally seamless.\r\n\r\nIn particular, `match` generates a fresh auxiliary matcher declaration every time it's used, and there's a possibility that we can't write general lemmas involving this notation because of this. However, I did check that tuple lemmas are OK.\r\n```\r\nlemma mem_setof_tuple {Î± Î² : Type*} (p : Î± â†’ Î² â†’ Prop) (q : Î± Ã— Î²) :\r\n    q âˆˆ {(x, y) | p x y} â†” p q.1 q.2 := Iff.rfl\r\n\r\nexample : (1,2) âˆˆ {(x,y) : Nat Ã— Nat | x < y} := by\r\n  -- both simp and rw do something:\r\n  --simp only [mem_setof_tuple]\r\n  --rw [mem_setof_tuple]\r\n``` \r\n(Actually, `simp` is perfectly happy to prove this `example` all on its own without the helper lemma, which is great.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4_v9",
              "createdAt": "2023-12-06T20:41:25Z",
              "body": "I think it's in a good state for merging now. I'll delegate it to you so that you can go ahead and merge it once CI passes. Bors should explain what you need to do by writing a comment after mine, but if you need any help don't hesitate to reach out.\r\n\r\nbors d+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t4_w3",
              "createdAt": "2023-12-06T20:41:28Z",
              "body": ":v: djvelleman can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c548woyzwAAAAKZ_MIY",
              "createdAt": "2023-12-06T20:41:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c548woyzwAAAAKZ_MKm",
              "createdAt": "2023-12-06T20:41:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5CqU",
              "createdAt": "2023-12-06T20:50:33Z",
              "body": "I've actually been using these macros for quite a while in *How To Prove It with Lean*, and haven't had any problems.  If you're curious, you can see what I've been doing here:  https://djvelleman.github.io/HTPIwL/Chap4.html.  You'll see that I quoted Definition 4.2.3 from *How To Prove It* (where relations are treated as sets of ordered pairs), and then translated all parts of that definition into Lean, using pattern-matching.  (HTPIwL is written in a somewhat nonstandard dialect of Lean--I use a small subset of Lean's tactics, together with some tactics I wrote to make things match up better with HTPI.)\r\n\r\nThanks for all your help Kyle!",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5C3Y",
              "createdAt": "2023-12-06T20:51:12Z",
              "body": "bors r+",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5G9F",
              "createdAt": "2023-12-06T21:03:28Z",
              "body": "(It won't hurt anything if you did since bors is careful, and I anticipate bors to succeed, but I think you might have jumped the gun with `bors r+`. Usually I wait to see that the CI passes completely -- every test gets a green checkmark -- before passing it on to bors. What bors is for is to take multiple approved PRs, combine them into a single batch, and then verify that mathlib still builds. This batching is to deal with the fact that if we were to run these tests on each merged PR serially we might get long delays when lots of PRs are merged. If any one PR causes bors to fail, then bors will start omitting PRs to try to figure out which PRs fail on their own. Again, I don't expect your PR to cause the batch to fail so it should be nothing to worry about. But if it does, it happens all the time and we don't really worry about it.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5IlA",
              "createdAt": "2023-12-06T21:08:36Z",
              "body": "Sorry about that.  When bors said \"djvelleman can now approve this pull request,\" I thought that meant I should go ahead and do it.  Then after I did, I realized that perhaps I was supposed to wait until CI finished.  I'll do it right next time.",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6d71e0a4c4876607d8689b0cf27a10b8593557ad"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5XLE",
              "createdAt": "2023-12-06T21:56:30Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5YoS",
              "createdAt": "2023-12-06T22:01:18Z",
              "body": "Well, you were right Kyle, I should have waited.  It complained that I didn't have a docstring for the new unexpander.  I added one (does it look OK?), and it looks like the checks have started again automatically.  If it completes successfully, do I do bors r+ again?",
              "author": {
                "login": "djvelleman"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t5yeR",
              "createdAt": "2023-12-06T23:42:49Z",
              "body": "bors r+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c548woyzwAAAAKaEgUP",
              "createdAt": "2023-12-06T23:43:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5t6EeQ",
              "createdAt": "2023-12-07T00:32:54Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7121673562/job/19391343152)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7121673562/job/19391342766)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7121673562/job/19391343031)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c548woyzwAAAAKaFqMx",
              "createdAt": "2023-12-07T00:32:55Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c548woyzwAAAAKaFqR1",
              "createdAt": "2023-12-07T00:32:58Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c548woyzwAAAALZkAXQ",
              "createdAt": "2024-03-25T19:56:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UM9HN",
              "createdAt": "2024-07-31T19:46:45Z",
              "source": {
                "id": "I_kwDOFcwZ1c5XWxZf",
                "title": "Set theory notation",
                "url": "https://github.com/leanprover-community/mathlib4/issues/754"
              }
            }
          ]
        }
      }
    }
  }
}
