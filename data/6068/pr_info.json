{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We already did this in mathlib3.\r\n\r\nThis forward-ports https://github.com/leanprover-community/mathlib/pull/9478, which was created a few days after this file was ported in #52.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-07-24T14:02:05Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5iKLjP",
              "body": "Is there a way to make this do the stronger thing of not running until ci actually passes? ",
              "createdAt": "2023-07-23T13:04:37Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKNK7",
              "body": "Not as far as I know. Either way, I think there's benefit to merging this PR as is; it means that it's not possible to merge something without CI unless you consciously remove a label. @kbuzzard did so accidentally earlier today.",
              "createdAt": "2023-07-23T13:36:13Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKSYB",
              "body": "But if people never add the label in the first place we still have an issue is my point. Perhaps we need an action to automatically add the label if bors cannot be conditional on ci passing itself.",
              "createdAt": "2023-07-23T15:02:43Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKTbg",
              "body": "Looking at the bors reference https://bors.tech/documentation/ the `pr_status` config option sounds like it might do the right thing. I'm on a plane so I can't check the bors source right now to confirm but if that option does allow us to actually wait for status checks rather than a label (which can be misapplied) that sounds a far better but equally simple fix than what you propose here",
              "createdAt": "2023-07-23T15:22:17Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKUIi",
              "body": "https://github.com/bors-ng/bors-ng/blob/390d99890d16a9fa34691728812d0052e99131f4/lib/worker/batcher.ex#L972\n\nLooks like it does do the right thing, waiting on any statuses mentioned there to be not in process or unset, and erroring if they fail.",
              "createdAt": "2023-07-23T15:34:54Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKmMd",
              "body": "Sometimes we want to override that deliberately though, which I assume that does not let us do? I still think the approach we had in mathlib 3 and that this PR enables, while not perfect, is better than what we have now.",
              "createdAt": "2023-07-23T19:50:08Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKp1A",
              "body": "I don't know why we would want to override it? Just to get something into master <=1hr faster? I assume priorities would still be helpful in such a situation, or at worst pushing directly to master if something that the maintainers truly wanted in master instantly came up?\nWe can put it to a vote on zulip perhaps, I'd say enforcing this rule is an improvement over the old behaviour, as tags are basically just human curated at the end of the day.",
              "createdAt": "2023-07-23T21:09:29Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iNfMI",
              "body": "> I don't know why we would want to override it? Just to get something into master <=1hr faster? \r\n\r\nYes: for instance if a PR is green but someone requests a typo fix in documentation, there's little point in waiting for a CI run. It would of course be better if the CI run could also be cancelled to save resources.",
              "createdAt": "2023-07-24T11:08:05Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iNhuW",
              "body": "`pr_status` has been [discussed before on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/bors.20and.20pr_status/near/268977363), but didn't work in https://github.com/leanprover-community/mathlib/pull/11609.\r\n\r\nI worked out why this option is missing from mathlib4; it was added in mathlib3 a day or two after the mathlib4 repo was set up, so I've labelled this with `mathlib-pair` as this is a forward-port!",
              "createdAt": "2023-07-24T11:15:35Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iNyQr",
              "body": "bors merge",
              "createdAt": "2023-07-24T12:06:05Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iOjG-",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289209655)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210115)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210352)",
              "createdAt": "2023-07-24T14:02:04Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "165ac235c61dbfcbe94174755551a12274fc1b27",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-23T09:45:52Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-23T09:46:00Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "bors.toml",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "eric-wieser-patch-1",
        "headRefOid": "165ac235c61dbfcbe94174755551a12274fc1b27",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WKWC0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
              "color": "acff3f",
              "name": "easy"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABJ_5Nfw",
              "color": "D4C5F9",
              "name": "mathlib3-pair"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
              "color": "006b75",
              "name": "CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6068,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - ci: do not let bors run if the awaiting-CI label is present",
        "updatedAt": "2023-07-24T14:02:17Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6068",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "165ac235c61dbfcbe94174755551a12274fc1b27"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sTi63zwAAAAJNoxUc",
              "createdAt": "2023-07-23T09:46:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
                "name": "CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sTi63zwAAAAJNo5Mi",
              "createdAt": "2023-07-23T10:09:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sTi63zwAAAAJNo5Mk",
              "createdAt": "2023-07-23T10:09:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKLjP",
              "createdAt": "2023-07-23T13:04:37Z",
              "body": "Is there a way to make this do the stronger thing of not running until ci actually passes? ",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKNK7",
              "createdAt": "2023-07-23T13:36:13Z",
              "body": "Not as far as I know. Either way, I think there's benefit to merging this PR as is; it means that it's not possible to merge something without CI unless you consciously remove a label. @kbuzzard did so accidentally earlier today.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKSYB",
              "createdAt": "2023-07-23T15:02:43Z",
              "body": "But if people never add the label in the first place we still have an issue is my point. Perhaps we need an action to automatically add the label if bors cannot be conditional on ci passing itself.",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKTbg",
              "createdAt": "2023-07-23T15:22:17Z",
              "body": "Looking at the bors reference https://bors.tech/documentation/ the `pr_status` config option sounds like it might do the right thing. I'm on a plane so I can't check the bors source right now to confirm but if that option does allow us to actually wait for status checks rather than a label (which can be misapplied) that sounds a far better but equally simple fix than what you propose here",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKUIi",
              "createdAt": "2023-07-23T15:34:54Z",
              "body": "https://github.com/bors-ng/bors-ng/blob/390d99890d16a9fa34691728812d0052e99131f4/lib/worker/batcher.ex#L972\n\nLooks like it does do the right thing, waiting on any statuses mentioned there to be not in process or unset, and erroring if they fail.",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKmMd",
              "createdAt": "2023-07-23T19:50:08Z",
              "body": "Sometimes we want to override that deliberately though, which I assume that does not let us do? I still think the approach we had in mathlib 3 and that this PR enables, while not perfect, is better than what we have now.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKp1A",
              "createdAt": "2023-07-23T21:09:29Z",
              "body": "I don't know why we would want to override it? Just to get something into master <=1hr faster? I assume priorities would still be helpful in such a situation, or at worst pushing directly to master if something that the maintainers truly wanted in master instantly came up?\nWe can put it to a vote on zulip perhaps, I'd say enforcing this rule is an improvement over the old behaviour, as tags are basically just human curated at the end of the day.",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iNfMI",
              "createdAt": "2023-07-24T11:08:05Z",
              "body": "> I don't know why we would want to override it? Just to get something into master <=1hr faster? \r\n\r\nYes: for instance if a PR is green but someone requests a typo fix in documentation, there's little point in waiting for a CI run. It would of course be better if the CI run could also be cancelled to save resources.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sTi63zwAAAAJOBS7b",
              "createdAt": "2023-07-24T11:10:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJ_5Nfw",
                "name": "mathlib3-pair"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iNhuW",
              "createdAt": "2023-07-24T11:15:35Z",
              "body": "`pr_status` has been [discussed before on Zulip](https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/bors.20and.20pr_status/near/268977363), but didn't work in https://github.com/leanprover-community/mathlib/pull/11609.\r\n\r\nI worked out why this option is missing from mathlib4; it was added in mathlib3 a day or two after the mathlib4 repo was set up, so I've labelled this with `mathlib-pair` as this is a forward-port!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iNyQr",
              "createdAt": "2023-07-24T12:06:05Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sTi63zwAAAAJODRCb",
              "createdAt": "2023-07-24T12:06:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sTi63zwAAAAJODREW",
              "createdAt": "2023-07-24T12:06:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iOjG-",
              "createdAt": "2023-07-24T14:02:04Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289209655)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210115)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5644763269/job/15289210352)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sTi63zwAAAAJOIGBc",
              "createdAt": "2023-07-24T14:02:06Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sTi63zwAAAAJOIGox",
              "createdAt": "2023-07-24T14:02:17Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
