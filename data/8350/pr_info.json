{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 38,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "dupuisf"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR adds an induction principle that says that if a proposition `P` is true on `[x₀, r * x₀)` and if `P` for `[x₀, r^n * x₀)` implies `P` for `[r^n * x₀, r^(n+1) * x₀)`, then `P` is true for all `x ≥ x₀`.\r\n\r\nIt also adds a few missing lemmas about `logb`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-11-14T01:31:45Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5rzPz_",
              "body": ":v: dupuisf can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-13T17:04:40Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r2Of9",
              "body": "bors r+",
              "createdAt": "2023-11-14T01:03:30Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r2TlI",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6857793267/job/18647506550)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6857793267/job/18647506721)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6857793267/job/18647506888)",
              "createdAt": "2023-11-14T01:31:44Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8e1fe329ccb7ab893e3377eefa95c2fe8e33d86c",
                "additions": 73,
                "deletions": 0,
                "committedDate": "2023-11-11T16:46:15Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5edbfc244df184240807943144b3519ec03da653",
                "additions": 7,
                "deletions": 2,
                "committedDate": "2023-11-12T01:13:26Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "760aa73bc702a109969cfb23d248293728df6948",
                "additions": 14,
                "deletions": 52,
                "committedDate": "2023-11-12T01:17:44Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "53298cc61926694e919b8f7e022d9ded41c97cfa",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-11-13T19:18:26Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "31101893+dupuisf@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "196a0a1b07f554f5ee43ccdd3b7ecc3aace6e066",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-13T19:18:32Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "31101893+dupuisf@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2c4ca076b728e8d579e65d223e9bf16168e02ff2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-14T00:27:43Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-11T16:59:12Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/Base.lean",
              "additions": 38,
              "deletions": 0
            }
          ]
        },
        "headRefName": "dupuisf/logb_lemmas",
        "headRefOid": "2c4ca076b728e8d579e65d223e9bf16168e02ff2",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fN20A",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nFhVL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-14T11:09:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4xe3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-12T01:42:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m_AWa",
              "body": "bors d+",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-13T17:04:38Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8350,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5m4ol6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-11T20:31:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4pPU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-11T20:54:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4pi1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-11T21:04:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4w8s",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2023-11-12T01:12:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4w_X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2023-11-12T01:15:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m4xe3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-12T01:42:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m5UtI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-12T18:17:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m50v3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2023-11-13T01:40:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m_AWa",
              "body": "bors d+",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-13T17:04:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nFhVL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-14T11:09:28Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3gUl",
                    "body": "The assumption `h₁` isn't required here ",
                    "createdAt": "2023-11-11T20:30:17Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3gU5",
                    "body": "I think this can be strengthened to `0 < b` and `b != 1`?",
                    "createdAt": "2023-11-11T20:30:32Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3nyU",
                    "body": "Indeed; I added this stronger version as a separate lemma, since proving `1 < b` is probably what we want to do most of the time.",
                    "createdAt": "2023-11-12T01:12:50Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3g_r",
                    "body": "```suggestion\r\n/-- Induction principle for intervals of real numbers: if a proposition `P` is true\r\non `[x₀, r * x₀)` and if `P` for `[x₀, r^n * x₀)` implies `P` for `[r^n * x₀, r^(n+1) * x₀)`,\r\nthen `P` is true for all `x ≥ x₀`. -/\r\nlemma Real.induction_Ico_mul {P : ℝ → Prop} (x₀ r : ℝ) (hr : 1 < r) (hx₀ : 0 < x₀)\r\n    (base : ∀ x ∈ Set.Ico x₀ (r * x₀), P x)\r\n    (step : ∀ n : ℕ, n ≥ 1 → (∀ z ∈ Set.Ico x₀ (r ^ n * x₀), P z) →\r\n      (∀ z ∈ Set.Ico (r ^ n * x₀) (r ^ (n+1) * x₀), P z)) :\r\n    ∀ x ≥ x₀, P x := by\r\n  suffices : ∀ n : ℕ, ∀ x ∈ Set.Ico x₀ (r ^ (n + 1) * x₀), P x\r\n  · intro x hx\r\n    have hx' : 0 < x / x₀ := div_pos (hx₀.trans_le hx) hx₀\r\n    refine this ⌊logb r (x / x₀)⌋₊ x ?_\r\n    rw [mem_Ico, ←div_lt_iff hx₀, ←logb_lt_iff_lt_rpow hr hx']\r\n    exact ⟨hx, Nat.lt_floor_add_one _⟩\r\n  intro n\r\n  induction n\r\n  case zero => simpa using base\r\n  case succ n ih =>\r\n    specialize step (n + 1) (by simp)\r\n    simp only [Nat.cast_add_one] at step ⊢\r\n    exact fun x hx => (Ico_subset_Ico_union_Ico hx).elim (ih x) (step ih _)\r\n```\r\nYou can simplify this proof quite a bit!",
                    "createdAt": "2023-11-11T20:54:35Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3hTa",
                    "body": "If you'd like you can also make it even shorter and more in term mode. But this one is optional:\r\n```\r\n  have ind : ∀ n : ℕ, ∀ x ∈ Set.Ico x₀ (r ^ (n + 1) * x₀), P x :=\r\n    Nat.rec (fun x hx => base x <| by simpa using hx) fun n ih x hx =>\r\n      (Ico_subset_Ico_union_Ico hx).elim (ih x)\r\n        fun hx' => step (n + 1) (by simp) (by simpa using ih) _ (by simpa using hx')\r\n  fun x hx =>\r\n    ind ⌊logb r (x / x₀)⌋₊ x <| mem_Ico.2 <|\r\n      have hx' : 0 < x / x₀ := div_pos (hx₀.trans_le hx) hx₀\r\n      ⟨hx, (div_lt_iff hx₀).1 <| (logb_lt_iff_lt_rpow hr hx').1 <| Nat.lt_floor_add_one _⟩\r\n```",
                    "createdAt": "2023-11-11T21:04:53Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3n0U",
                    "body": "Very nice, thanks!!",
                    "createdAt": "2023-11-12T01:15:41Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S3oYO",
                    "body": "The additive version can be generalized to the following:\r\n```\r\nimport Mathlib.Algebra.Order.Archimedean\r\n\r\nlemma induction_Ico_add_nsmul {α} [LinearOrderedAddCommGroup α] [Archimedean α]\r\n    {P : α → Prop} (x₀ r : α) (hr : 0 < r)\r\n    (base : ∀ x ∈ Set.Ico x₀ (x₀ + r), P x)\r\n    (step : ∀ n ≥ 1, (∀ z ∈ Set.Ico x₀ (x₀ + n • r), P z) →\r\n      (∀ z ∈ Set.Ico (x₀ + n • r) (x₀ + (n+1) • r), P z)) :\r\n    ∀ x ≥ x₀, P x := by\r\n  sorry\r\n```\r\nthough trying to transfer that result may lead to a longer proof.",
                    "createdAt": "2023-11-12T01:42:01Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4LSC",
                    "body": "Yeah, and I think this doesn't need anything about logs for its proof. So while this might be valuable, I don't think it needs to be part of this PR.",
                    "createdAt": "2023-11-12T18:17:56Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S4iGf",
                    "body": "Right -- I'd rather avoid adding it to this PR, this is already a rabbit hole I went down in order to generalize lemmas in another PR.",
                    "createdAt": "2023-11-13T01:40:59Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S7z6P",
                    "body": "```suggestion\r\nlemma logb_self_eq_one' : logb b b = 1 ↔ b ≠ 0 ∧ b ≠ 1 ∧ b ≠ -1 :=\r\n  Iff.trans ⟨fun h h' => by simp [logb, h'] at h, div_self⟩ log_ne_zero\r\n```\r\nOops, I didn't realise it actually generalises more than I thought!",
                    "createdAt": "2023-11-13T17:04:20Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S7z_Z",
                    "body": "```suggestion\r\n   div_self (log_pos hb).ne'\r\n```\r\nslight golf if you'd like",
                    "createdAt": "2023-11-13T17:04:34Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S_qEX",
                    "body": "Ideally this would be \r\n```suggestion\r\n    ∀ x (h : x ≥ x₀), P x h\r\n```\r\nso that this would work with `induction`",
                    "createdAt": "2023-11-14T11:09:28Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMxMTAxODkz",
              "login": "dupuisf"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: add induction principle for intervals",
        "updatedAt": "2023-11-14T11:09:28Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8350",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e1fe329ccb7ab893e3377eefa95c2fe8e33d86c"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jlndzwAAAAKLpUXN",
              "createdAt": "2023-11-11T16:59:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jlndzwAAAAKLpUXP",
              "createdAt": "2023-11-11T16:59:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52jlndzwAAAAKLpZ_5",
              "createdAt": "2023-11-11T17:14:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m4ol6",
              "createdAt": "2023-11-11T20:30:17Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m4pPU",
              "createdAt": "2023-11-11T20:54:35Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5edbfc244df184240807943144b3519ec03da653"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "760aa73bc702a109969cfb23d248293728df6948"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m4xe3",
              "createdAt": "2023-11-12T01:42:00Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m_AWa",
              "createdAt": "2023-11-13T17:04:20Z",
              "body": "bors d+",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzPz_",
              "createdAt": "2023-11-13T17:04:40Z",
              "body": ":v: dupuisf can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jlndzwAAAAKMV5BL",
              "createdAt": "2023-11-13T17:04:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52jlndzwAAAAKMV5Dm",
              "createdAt": "2023-11-13T17:04:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "53298cc61926694e919b8f7e022d9ded41c97cfa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "196a0a1b07f554f5ee43ccdd3b7ecc3aace6e066"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2c4ca076b728e8d579e65d223e9bf16168e02ff2"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r2Of9",
              "createdAt": "2023-11-14T01:03:30Z",
              "body": "bors r+",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52jlndzwAAAAKMlsp2",
              "createdAt": "2023-11-14T01:03:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r2TlI",
              "createdAt": "2023-11-14T01:31:44Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6857793267/job/18647506550)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6857793267/job/18647506721)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6857793267/job/18647506888)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52jlndzwAAAAKMmS3f",
              "createdAt": "2023-11-14T01:31:45Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52jlndzwAAAAKMmS7O",
              "createdAt": "2023-11-14T01:31:48Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nFhVL",
              "createdAt": "2023-11-14T11:09:27Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
