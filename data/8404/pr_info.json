{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 527,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We still have the `exact_mod_cast` tactic, used in a few places, which somehow (?) works a little bit harder to prevent the expected type influencing the elaboration of the term. I would like to get to the bottom of this, and it will be easier once the only usages of `exact_mod_cast` are the ones that don't work using the term elaborator by itself.",
        "changedFiles": 170,
        "closed": true,
        "closedAt": "2023-11-19T21:13:34Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5sW7C8",
              "body": "Based on the PR description I was worried this was a large-scale change just for debugging, but it definitely looks like an improvement. I like the idea that in general `exact_foo ...` could become `exact foo ...`, but I guess one reservation is that, once we actually have tactic documentation, term elaborators might be a bit less discoverable.\r\n\r\nbors r+",
              "createdAt": "2023-11-19T19:07:37Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sXBMT",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6922634596/job/18829589967)",
              "createdAt": "2023-11-19T20:49:40Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sXCk9",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6922874992/job/18830108227)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6922874992/job/18830108280)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6922874992/job/18830108322)",
              "createdAt": "2023-11-19T21:13:32Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "51d3490446ef57a64768acfe7b399ef56bb47d3e",
                "additions": 527,
                "deletions": 534,
                "committedDate": "2023-11-14T06:00:58Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8cd7503d40c133586780b75093778ce207ae66eb",
                "additions": 9091,
                "deletions": 6052,
                "committedDate": "2023-11-19T04:06:12Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbymg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247867/job/18820297370"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbxRg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297030"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbxag",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297066"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbygg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247865/job/18820297346"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbyGQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbx1g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbyyg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247865/job/18820297418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbx2A",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbxnQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbxjQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbyWQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbyaw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbyFw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYcbytQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYc_UFg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820879382"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-14T06:01:39Z",
        "deletions": 533,
        "files": {
          "nodes": [
            {
              "path": "Archive/Imo/Imo1981Q3.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Archive/Imo/Imo1988Q6.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Archive/Imo/Imo2013Q5.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Archive/Sensitivity.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Wiedijk100Theorems/AbelRuffini.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Wiedijk100Theorems/Partition.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Archive/Wiedijk100Theorems/SumOfPrimeReciprocalsDiverges.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/CharP/CharAndCard.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/CharP/Invertible.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/CharZero/Lemmas.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/ContinuedFractions/Computation/ApproximationCorollaries.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/ContinuedFractions/Computation/Approximations.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/GeomSum.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/LinearRecurrence.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Injective.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Lattice.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Archimedean.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/CompleteField.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Algebra/Order/Field/Power.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Floor.lean",
              "additions": 18,
              "deletions": 18
            },
            {
              "path": "Mathlib/Algebra/Periodic.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Analytic/Basic.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Analysis/Calculus/ContDiff/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/SpecificFunctions/Pow.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Distribution/SchwartzSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/GramSchmidtOrtho.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/OfNorm.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/Spectrum.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/l2Space.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/MeanInequalities.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/MeanInequalitiesPow.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/PiLp.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Pointwise.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/ProdLp.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Spectrum.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Bernstein.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/CompareExp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Complex/Arg.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Exp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Exponential.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Integrals.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/Asymptotics.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/Complex.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/Continuity.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/Real.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Angle.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/ArctanDeriv.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Chebyshev.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Complex.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Series.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/SpecificLimits/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Combinatorics/Additive/Behrend.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Combinatorics/Additive/PluenneckeRuzsa.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Combinatorics/Catalan.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Density.lean",
              "additions": 14,
              "deletions": 14
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Regularity/Bound.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Regularity/Chunk.lean",
              "additions": 16,
              "deletions": 16
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Regularity/Increment.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Regularity/Lemma.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Complex/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/Complex/Exponential.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/Finset/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finsupp/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finsupp/Defs.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Int/Cast/Lemmas.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Int/Log.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Data/Nat/Choose/Bounds.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Nat/Multiplicity.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/Squarefree.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Polynomial/Degree/CardPowDegree.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Polynomial/RingDivision.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Rat/Floor.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Data/Rat/Lemmas.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Rat/Order.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Real/ENNReal.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Real/Irrational.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Real/NNReal.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Real/Pi/Bounds.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/ZMod/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/FieldTheory/Finite/Basic.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Geometry/Euclidean/MongePoint.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/GroupTheory/Divisible.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/FreeAbelianGroupFinsupp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/SpecificGroups/Cyclic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/InformationTheory/Hamming.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/FiniteDimensional.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Finrank.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/LinearPMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Covering/BesicovitchVectorSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/L1Space.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSpace.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "mod_cast",
        "headRefOid": "8cd7503d40c133586780b75093778ce207ae66eb",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fX8bF",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8404,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbymg",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247867/job/18820297370"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbxRg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297030"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbxag",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297066"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbygg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247865/job/18820297346"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbyGQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297241"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbx1g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297174"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbyyg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247865/job/18820297418"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbx2A",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297176"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbxnQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297117"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbxjQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbyWQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbyaw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297323"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbyFw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820297239"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYcbytQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247742/job/18820297397"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEYc_UFg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6918247743/job/18820879382"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore: replace `exact_mod_cast` tactic with `mod_cast` elaborator where possible",
        "updatedAt": "2023-11-19T21:13:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8404",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "51d3490446ef57a64768acfe7b399ef56bb47d3e"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52vDz9zwAAAAKMrPfo",
              "createdAt": "2023-11-14T06:01:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52vDz9zwAAAAKMrPfu",
              "createdAt": "2023-11-14T06:01:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PWv_m",
              "createdAt": "2023-11-14T06:02:06Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5eqUo3",
                "title": "chore: adaptations upstreaming norm_cast",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8222"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52vDz9zwAAAAKMs7BX",
              "createdAt": "2023-11-14T07:10:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52vDz9zwAAAAKPFyZ9",
              "createdAt": "2023-11-17T07:36:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8cd7503d40c133586780b75093778ce207ae66eb"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52vDz9zwAAAAKP1Ev4",
              "createdAt": "2023-11-19T04:08:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sW7C8",
              "createdAt": "2023-11-19T19:07:37Z",
              "body": "Based on the PR description I was worried this was a large-scale change just for debugging, but it definitely looks like an improvement. I like the idea that in general `exact_foo ...` could become `exact foo ...`, but I guess one reservation is that, once we actually have tactic documentation, term elaborators might be a bit less discoverable.\r\n\r\nbors r+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52vDz9zwAAAAKP6f0g",
              "createdAt": "2023-11-19T19:07:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52vDz9zwAAAAKP6f00",
              "createdAt": "2023-11-19T19:07:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sXBMT",
              "createdAt": "2023-11-19T20:49:40Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6922634596/job/18829589967)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sXCk9",
              "createdAt": "2023-11-19T21:13:32Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6922874992/job/18830108227)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6922874992/job/18830108280)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6922874992/job/18830108322)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52vDz9zwAAAAKP7Qy1",
              "createdAt": "2023-11-19T21:13:34Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52vDz9zwAAAAKP7Q0V",
              "createdAt": "2023-11-19T21:13:38Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
