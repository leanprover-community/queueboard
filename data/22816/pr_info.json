{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 139,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "peabrainiac"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR defines `Sheaf.Γ : Sheaf J A ⥤ A` as the functor taking each sheaf to the limit of its underlying presheaf whenever possible, i.e. whenever `A` has sufficiently large limits, and shows that this agrees with several other common definitions when they are defined, like evaluation of sheaves on a terminal object. See [Zulip](https://leanprover.zulipchat.com/#narrow/channel/116395-maths/topic/global.20sections.20functor) for the discussion that lead to this approach.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\nMy goal with this PR is to work towards the cohesive structure of sheaves on cohesive sites; I have already defined local sites [here](https://github.com/peabrainiac/lean-orbifolds/blob/main/Orbifolds/ForMathlib/LocalSite.lean) as a stepping stone and will PR them too shortly.\r\n\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6hsVdX",
              "body": "### PR summary [89823c7120](https://github.com/leanprover-community/mathlib4/pull/22816/commits/89823c71202a098e9365868c1b67431b918f4cfd)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Limits.FunctorCategory.Shapes.Products | 423 | 426 | +3 (+0.71%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Limits.FunctorCategory.Shapes.Products`|3|\n| `Mathlib.CategoryTheory.Sites.GlobalSections` (new file)|963|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ HasGlobalSectionsFunctor`\n`+ Sheaf.Γ`\n`+ Sheaf.ΓNatIsoCoyoneda`\n`+ Sheaf.ΓNatIsoLim`\n`+ Sheaf.ΓNatIsoSectionsFunctor`\n`+ Sheaf.ΓNatIsoSheafSections`\n`+ constantSheafΓAdj`\n`+ hasGlobalSectionsFunctor_of_hasLimitsOfShape`\n`+ hasGlobalSectionsFunctor_of_hasTerminal`\n`+ instance [HasGlobalSectionsFunctor J A] : (Γ J A).IsRightAdjoint := by`\n`+ limNatIsoSectionsFunctor`\n`+ sectionsFunctorNatIsoCoyoneda`\n`+ sheafSectionsNatIsoEvaluation`\n`+ terminalObjIso`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-11T05:58:02Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6hscra",
              "body": "The main thing I am unsure about here is where to place the prerequisite lemmas that do not involve `Sheaf.Γ` already; for `limNatIsoSectionsFunctor ` and `sheafSectionsNatIsoEvaluation` I think I have found good homes, and `terminalObjIso` could be placed in `Limits.FunctorCategory.Shapes.Products` too with only a minor increase in imports, but for `sectionsFunctorNatIsoCoyoneda` I have not been able to find a good home other than the global sections file itself. I suppose we could just leave it there, but maybe someone else has a better idea.",
              "createdAt": "2025-03-11T06:10:41Z",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6iV2iJ",
              "body": "Thanks for your review and explanation of why this extra generality is actually important / useful. I've rewritten this in terms of `HasGlobalSectionsFunctor` now like you suggested, and also added `Sheaf.ΓNatIsoLim` to show that this is equivalent to the previous definition when `A` has the right limits. I didn't go through the route via `Sheaf.ΓHomEquiv` that you outlined yet, but can also try implementing that tomorrow (I just wanted to get this refactor pushed first).\r\n\r\nOne slightly annoying thing I noticed is that with this new definition, `Sheaf.Γ` now requires `HasWeakSheafify`, which [`instHasSheafifyOfHasFiniteLimits`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Sites/LeftExact.html#CategoryTheory.instHasSheafifyOfHasFiniteLimits) only seems to provide for `Type max u v` but not higher universe levels like `Type max u v w`; at least I couldn't get it to work with the latter, and so had to remove `w` from the last few lemmas in the file. In the cases I am most interested in `u` and `v` are both 0, so this is quite a loss of generality. This does seem more like an issue with the instance than a mathematical issue to me though, so hopefully it can be resolved with another PR.",
              "createdAt": "2025-03-14T05:40:50Z",
              "author": {
                "login": "peabrainiac"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f3229648b682acebf935f3195e5cf8adca11a751",
                "additions": 121,
                "deletions": 0,
                "committedDate": "2025-03-10T20:34:49Z",
                "author": {
                  "name": "Ben Eltschig",
                  "email": "b.eltschig@protonmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1472e95f07aaabc26c21ae9ab6ea92624254c6bc",
                "additions": 25,
                "deletions": 29,
                "committedDate": "2025-03-11T05:10:09Z",
                "author": {
                  "name": "Ben Eltschig",
                  "email": "b.eltschig@protonmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SpgRw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781361271/job/38540042311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SFL9Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781142573/job/38539447285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-b_v0Q",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13784683173/job/38549843921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-TP4nQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781589075/job/38540671133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-ZYp_g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13783808218/job/38547106302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-b2FTg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13784633934/job/38549685582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJADJvvw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13818555652/job/38658011071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SpgeA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781361320/job/38540042360"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SpgQA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781361316/job/38540042304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-TP32w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781589080/job/38540670939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-ZYqJw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13783808229/job/38547106343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-b2Ftg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13784633950/job/38549685686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJADJxFw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13818555587/job/38658011415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SpgHQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781361322/job/38540042269"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-TP3_A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781589077/job/38540670972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-ZYqDQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13783808228/job/38547106317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-b2FUw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13784633937/job/38549685587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJADJxlA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13818555595/job/38658011540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SFLkw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781142575/job/38539447187"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SpgxQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781361318/job/38540042437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SFKuw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781142573/job/38539446971"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SFKuQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781142575/job/38539446969"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SphYg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781361318/job/38540042594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SFMuQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781142573/job/38539447481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SkpFw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13781142575/job/38539962647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SpvNw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38540046135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI-SqXZA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22816&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e758a71728556bcd43b957808254482be9dad327",
                "additions": 53,
                "deletions": 32,
                "committedDate": "2025-03-14T05:00:17Z",
                "author": {
                  "name": "Ben Eltschig",
                  "email": "b.eltschig@protonmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBguVMA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850209120/job/38756128048"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBguVBw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850209122/job/38756128007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBguV6g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850209120/job/38756128234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBguVog",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850209122/job/38756128162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBguWoA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850209120/job/38756128416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBg-Z9A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850209122/job/38756391412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBgva4g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22816&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "bb45c91058ea0f8ff015aea82886f08e7702a0db",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2025-03-14T05:09:06Z",
                "author": {
                  "name": "Ben Eltschig",
                  "email": "b.eltschig@protonmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "89823c71202a098e9365868c1b67431b918f4cfd",
                "additions": 14067,
                "deletions": 7952,
                "committedDate": "2025-03-14T05:14:31Z",
                "author": {
                  "name": "Ben Eltschig",
                  "email": "b.eltschig@protonmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHQJw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367524/job/38756536359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBh5mwA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850701074/job/38757361344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJCR12sA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13866871894/job/38807631536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHROA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367622/job/38756536632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBh5mWA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850701047/job/38757361240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJCR12UQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13866871889/job/38807631441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHRLg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367612/job/38756536622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBh5mWQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850701041/job/38757361241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJCR12Qg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13866871898/job/38807631426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHQSQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367525/job/38756536393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHRdQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367631/job/38756536693"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHQtw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367524/job/38756536503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHQyA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367525/job/38756536520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHSHA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367631/job/38756536860"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHRvQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367524/job/38756536765"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhjOww",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367525/job/38756994755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhHczg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38756539598"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJBhIHLg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22816&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-11T05:56:54Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/FunctorCategory/Shapes/Products.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Types.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/GlobalSections.lean",
              "additions": 116,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Sheaf.lean",
              "additions": 6,
              "deletions": 0
            }
          ]
        },
        "headRefName": "sites-globalSections",
        "headRefOid": "89823c71202a098e9365868c1b67431b918f4cfd",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6OGKOI",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6gKRzP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2025-03-14T23:15:41Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22816,
        "potentialMergeCommit": {
          "oid": "6a7e4dfc4f22614f7e0a8a1e681883358348b036"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6fUjpv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "peabrainiac"
              },
              "submittedAt": "2025-03-11T06:14:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fWSlB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2025-03-11T08:44:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fW7CB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2025-03-11T09:28:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ftSJF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2025-03-12T18:12:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6gACi4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "peabrainiac"
              },
              "submittedAt": "2025-03-14T05:46:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6gKRzP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2025-03-14T23:15:41Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52ha97",
                    "body": "Oh, also this seems like just a general lemma about `Functor.flip` - do we want that in its general form? Or do we maybe even have it already, and I just couldn't find it?",
                    "createdAt": "2025-03-11T06:14:26Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52iUEr",
                    "body": "This should be first stated as an equivalence of types for each sheaf (with more general universes, the LHS and RHS will be in different universes), followed by a naturality lemma, and then it can be stated as a natural isomorphism when the universes match.",
                    "createdAt": "2025-03-11T08:44:37Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5255H9",
                    "body": "> This should be first stated as an equivalence of types for each sheaf (with more general universes, the LHS and RHS will be in different universes), followed by a naturality lemma, and then it can be stated as a natural isomorphism when the universes match.\r\n\r\nI'm unsure about what exactly you're suggesting - should all the natural isomorphisms here be stated in terms of isomorphisms/equivalences first, or is there some special reason to do it specifically with this one? I would have thought that isomorphisms involving `Γ` are particularly bad candidates for a more step-by-step API like this, since `Γ` is now defined simply as a right-adjoint and not really constructed anyways.",
                    "createdAt": "2025-03-14T05:46:23Z",
                    "author": {
                      "login": "peabrainiac"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52_uDB",
                    "body": "I am referring only to natural \"isomorphisms\" between functors to types, where the target types may live in different universes, which happens here when universes are left completely general.",
                    "createdAt": "2025-03-14T23:15:41Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52ioyF",
                    "body": "Unfortunately, I doubt that the interesting cases in algebraic geometry where there is a global section functor but no terminal object are covered by these assumptions. Sites in algebraic geometry tend to be large, and we may have a small family of objects which cover the terminal object even though we may not have limits indexed by `Cᵒᵖ`. It means that we would probably have to refactor this definition in the future. This is part of the reason why I had suggested another design where we define the global sections by taking a right adjoint of the constant sheaf functor. I have just drafted the following (which also takes advantage of the already known results about the constant sheaf functor, see the file `Sites.ConstantSheaf`), and it does not seem to be difficult to obtain the same results which you obtained with the other definition:\r\n\r\n```lean\r\nvariable [HasWeakSheafify J A]\r\n\r\nabbrev HasGlobalSectionsFunctor := (constantSheaf J A).IsLeftAdjoint\r\n\r\ninstance hasGlobalSectionsFunctor_of_hasTerminal [HasTerminal C] :\r\n    HasGlobalSectionsFunctor J A :=\r\n  ⟨_, ⟨constantSheafAdj J A terminalIsTerminal⟩⟩\r\n\r\nsection\r\n\r\nvariable [HasGlobalSectionsFunctor J A]\r\n\r\nnoncomputable def Sheaf.Γ : Sheaf J A ⥤ A :=\r\n  (constantSheaf J A).rightAdjoint\r\n\r\n/-- The constant sheaf functor is left-adjoint to the global sections functor when both exist. -/\r\nnoncomputable def constantSheafΓAdj :\r\n    constantSheaf J A ⊣ Γ J A :=\r\n  Adjunction.ofIsLeftAdjoint (constantSheaf J A)\r\n\r\ninstance : (constantSheaf J A).IsLeftAdjoint :=\r\n  ⟨Γ J A, ⟨constantSheafΓAdj J A⟩⟩\r\n\r\ninstance : (Γ J A).IsRightAdjoint :=\r\n  ⟨constantSheaf J A, ⟨constantSheafΓAdj J A⟩⟩\r\n\r\nvariable {J A}\r\n\r\nnoncomputable def Sheaf.ΓHomEquiv {X : A} {F : Sheaf J A} :\r\n    ((Functor.const _).obj X ⟶ F.val) ≃ (X ⟶ (Γ J A).obj F) :=\r\n  ((sheafificationAdjunction J A).homEquiv _ _).symm.trans\r\n    ((constantSheafΓAdj J A).homEquiv _ _)\r\n\r\n@[simps pt]\r\nnoncomputable def Sheaf.coneΓ (F : Sheaf J A) : Cone F.val where\r\n  pt := (Γ J A).obj F\r\n  π := ΓHomEquiv.symm (𝟙 _)\r\n\r\ndef Sheaf.isLimitConeΓ (F : Sheaf J A) : IsLimit F.coneΓ := by\r\n  -- should be easy from `ΓHomEquiv` and a few naturality lemmas\r\n  sorry\r\n\r\nnoncomputable def Sheaf.Γres (F : Sheaf J A) (U : Cᵒᵖ) :\r\n  (Γ J A).obj F ⟶ F.val.obj U := F.coneΓ.π.app U\r\n\r\n@[reassoc (attr := simp)]\r\nlemma Sheaf.Γres_map (F : Sheaf J A) {V U : Cᵒᵖ} (f : U ⟶ V) :\r\n    F.Γres U ≫ F.val.map f = F.Γres V :=\r\n  F.coneΓ.w f\r\n\r\n@[simp]\r\nlemma Sheaf.coneΓ_π_app (F : Sheaf J A) (U : Cᵒᵖ) : F.coneΓ.π.app U = F.Γres U := rfl\r\n\r\nnoncomputable def Sheaf.ΓNatIsoSheafSections {T : C}\r\n    (hT : IsTerminal T) : Γ J A ≅ (sheafSections J A).obj (op T) :=\r\n  Adjunction.rightAdjointUniq (constantSheafΓAdj J A) (constantSheafAdj J A hT)\r\n\r\nend\r\n```",
                    "createdAt": "2025-03-11T09:28:40Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52vEgj",
                    "body": "```suggestion\r\n@[simps!]\r\ndef sheafSectionsNatIsoEvaluation {X : C} :\r\n    (sheafSections J A).obj (op X) ≅ sheafToPresheaf J A ⋙ (evaluation _ _).obj (op X) :=\r\n  NatIso.ofComponents (fun _ ↦ Iso.refl _)\r\n```",
                    "createdAt": "2025-03-12T18:12:54Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQzODEyOTUz",
              "login": "peabrainiac"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHQJw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367524/job/38756536359"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBh5mwA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850701074/job/38757361344"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCR12sA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13866871894/job/38807631536"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHROA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367622/job/38756536632"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBh5mWA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850701047/job/38757361240"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCR12UQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13866871889/job/38807631441"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHRLg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367612/job/38756536622"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBh5mWQ",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850701041/job/38757361241"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJCR12Qg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13866871898/job/38807631426"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHQSQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367525/job/38756536393"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHRdQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367631/job/38756536693"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHQtw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367524/job/38756536503"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHQyA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367525/job/38756536520"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHSHA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367631/job/38756536860"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHRvQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367524/job/38756536765"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhjOww",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13850367525/job/38756994755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhHczg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38756539598"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJBhIHLg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22816&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Sites): global sections functor on sheaves",
        "updatedAt": "2025-03-14T23:15:41Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22816",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f3229648b682acebf935f3195e5cf8adca11a751"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1472e95f07aaabc26c21ae9ab6ea92624254c6bc"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6tZ1vzzwAAAAPhm0sh",
              "createdAt": "2025-03-11T05:56:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6hsVdX",
              "createdAt": "2025-03-11T05:58:02Z",
              "body": "### PR summary [89823c7120](https://github.com/leanprover-community/mathlib4/pull/22816/commits/89823c71202a098e9365868c1b67431b918f4cfd)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Limits.FunctorCategory.Shapes.Products | 423 | 426 | +3 (+0.71%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Limits.FunctorCategory.Shapes.Products`|3|\n| `Mathlib.CategoryTheory.Sites.GlobalSections` (new file)|963|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ HasGlobalSectionsFunctor`\n`+ Sheaf.Γ`\n`+ Sheaf.ΓNatIsoCoyoneda`\n`+ Sheaf.ΓNatIsoLim`\n`+ Sheaf.ΓNatIsoSectionsFunctor`\n`+ Sheaf.ΓNatIsoSheafSections`\n`+ constantSheafΓAdj`\n`+ hasGlobalSectionsFunctor_of_hasLimitsOfShape`\n`+ hasGlobalSectionsFunctor_of_hasTerminal`\n`+ instance [HasGlobalSectionsFunctor J A] : (Γ J A).IsRightAdjoint := by`\n`+ limNatIsoSectionsFunctor`\n`+ sectionsFunctorNatIsoCoyoneda`\n`+ sheafSectionsNatIsoEvaluation`\n`+ terminalObjIso`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6hscra",
              "createdAt": "2025-03-11T06:10:41Z",
              "body": "The main thing I am unsure about here is where to place the prerequisite lemmas that do not involve `Sheaf.Γ` already; for `limNatIsoSectionsFunctor ` and `sheafSectionsNatIsoEvaluation` I think I have found good homes, and `terminalObjIso` could be placed in `Limits.FunctorCategory.Shapes.Products` too with only a minor increase in imports, but for `sectionsFunctorNatIsoCoyoneda` I have not been able to find a good home other than the global sections file itself. I suppose we could just leave it there, but maybe someone else has a better idea.",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fUjpv",
              "createdAt": "2025-03-11T06:14:26Z",
              "body": "",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6AfGXB",
              "createdAt": "2025-03-11T06:28:36Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6OGXV3",
                "title": "feat(CategoryTheory/Sites): local sites ",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22817"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fWSlB",
              "createdAt": "2025-03-11T08:44:37Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fW7CB",
              "createdAt": "2025-03-11T09:28:40Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6tZ1vzzwAAAAPiC5Ua",
              "createdAt": "2025-03-11T09:31:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ftSJF",
              "createdAt": "2025-03-12T18:12:54Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6tZ1vzzwAAAAPmLs73",
              "createdAt": "2025-03-13T17:43:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e758a71728556bcd43b957808254482be9dad327"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bb45c91058ea0f8ff015aea82886f08e7702a0db"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "89823c71202a098e9365868c1b67431b918f4cfd"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6tZ1vzzwAAAAPmxj8f",
              "createdAt": "2025-03-14T05:15:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6iV2iJ",
              "createdAt": "2025-03-14T05:40:50Z",
              "body": "Thanks for your review and explanation of why this extra generality is actually important / useful. I've rewritten this in terms of `HasGlobalSectionsFunctor` now like you suggested, and also added `Sheaf.ΓNatIsoLim` to show that this is equivalent to the previous definition when `A` has the right limits. I didn't go through the route via `Sheaf.ΓHomEquiv` that you outlined yet, but can also try implementing that tomorrow (I just wanted to get this refactor pushed first).\r\n\r\nOne slightly annoying thing I noticed is that with this new definition, `Sheaf.Γ` now requires `HasWeakSheafify`, which [`instHasSheafifyOfHasFiniteLimits`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Sites/LeftExact.html#CategoryTheory.instHasSheafifyOfHasFiniteLimits) only seems to provide for `Type max u v` but not higher universe levels like `Type max u v w`; at least I couldn't get it to work with the latter, and so had to remove `w` from the last few lemmas in the file. In the cases I am most interested in `u` and `v` are both 0, so this is quite a loss of generality. This does seem more like an issue with the instance than a mathematical issue to me though, so hopefully it can be resolved with another PR.",
              "author": {
                "login": "peabrainiac"
              }
            }
          ]
        }
      }
    }
  }
}
