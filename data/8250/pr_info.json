{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 189,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kmill"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "If the goal is `False`, `extract_goal` would delete all hypotheses and leave an impossible goal. Now in this case `extract_goal` has the behavior of `extract_goal*`. (Suggested by Bhavik Mehta.)\r\n\r\nAlso changes the `extract_goal` syntax to\r\n```\r\n\"extract_goal\" (\"*\" <|> ident*) (\"using\" ident)?\r\n```\r\nThe \"using\" clause replaces the autogenerated name for the extracted theorem/def. The `extract_goal` tactic has the same behavior as before, `extract_goal *` extracts the entire local context like before, and `extract_goal a b c ...` removes everything from the local context except for fvars `a`, `b`, `c`, ... and their (and the goal's) dependencies. This last form does not automatically include prop variables that depend on preserved fvars, unlike `extract_goal`, which does. The thought is that including prop variables is useful in the default case, but if you are configuring which variables to take you can always take them manually.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-12-08T02:46:49Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5uDjYd",
              "body": "bors merge",
              "createdAt": "2023-12-08T01:40:08Z",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5uDual",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7136265335/job/19434454881)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7136265335/job/19434455067)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7136265335/job/19434454787)",
              "createdAt": "2023-12-08T02:46:48Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ef2bf8b62463254e1e48044ce9d3895379a37cf2",
                "additions": 30,
                "deletions": 2,
                "committedDate": "2023-11-07T19:18:50Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a39e7ffdd4f215029f376c459240605b137dc7d9",
                "additions": 204,
                "deletions": 43,
                "committedDate": "2023-11-08T17:52:50Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b10c07fba0ba79764b1704a469bf64ee60a2bcea",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-08T19:14:40Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYsDZBA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6925667388/job/18836674820"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYsDYYw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6925667387/job/18836674659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYsDYdg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6925667388/job/18836674678"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e3f18793b993203b8552862078de6652d7926b31",
                "additions": 55895,
                "deletions": 31983,
                "committedDate": "2023-12-07T17:56:01Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "39a16e27fce60d89e996e21605fb7beec56da17a",
                "additions": 4,
                "deletions": 81,
                "committedDate": "2023-12-07T18:02:55Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaf2ew",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132191087/job/19422246523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaf2UQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132191091/job/19422246481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacknw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173502/job/19422192799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhachNQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173128/job/19422191925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacmbQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173132/job/19422193261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaclrA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173500/job/19422193068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaf4KQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132191087/job/19422246953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacm9A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173128/job/19422193396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacgvg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173132/job/19422191806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhackPA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173500/job/19422192700"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacifQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173128/job/19422192253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaciPA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173132/job/19422192188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaclQA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173128/job/19422192960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacjlA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173132/job/19422192532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacj2g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173128/job/19422192602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhaclEw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173132/job/19422192915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhacocA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173128/job/19422193776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhcxMxw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7132173132/job/19424627911"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c72a23a483682bd9a75675efb9cade1640265b62",
                "additions": 26,
                "deletions": 0,
                "committedDate": "2023-12-08T00:13:27Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWHrw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569722/job/19432572847"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWGuA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569482/job/19432572600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWFsg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569476/job/19432572338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWIzw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569736/job/19432573135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWJeQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569482/job/19432573305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWIiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569476/job/19432573067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWH7g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569736/job/19432572910"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWHpw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569482/job/19432572839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWGfg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569476/job/19432572542"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWFnA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569482/job/19432572316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWHbg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569476/job/19432572782"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWJXQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569476/job/19432573277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWIlw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569482/job/19432573079"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkdHDw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569476/job/19432687375"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkWKcQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135569482/job/19432573553"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8dc669bf8f5604e3998cd6cb7b81e836954ac9f2",
                "additions": 16,
                "deletions": 3,
                "committedDate": "2023-12-08T00:17:23Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcaoQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135605185/job/19432676001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcYCA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcYKA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcbfQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135605190/job/19432676221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcajg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcZng",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675742"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcamA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135605190/job/19432675992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcZqQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675753"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcY6g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcY5g",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcacA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcbmA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432676248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkcbbQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432676205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhkccew",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432676475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEhl4UFg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19434181654"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-07T19:20:08Z",
        "deletions": 38,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/ExtractGoal.lean",
              "additions": 65,
              "deletions": 38
            },
            {
              "path": "test/ExtractGoal.lean",
              "additions": 124,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kmill_extract_goal_false",
        "headRefOid": "8dc669bf8f5604e3998cd6cb7b81e836954ac9f2",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5e2C4f",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7mTAET",
              "color": "DA6D43",
              "name": "modifies-tactic-syntax"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ml0eC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-08T20:11:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlRno",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-11-08T18:45:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mcUX0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-07T20:44:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mb27Q",
              "body": "Looks good to me, thanks!",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-11-07T19:43:12Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8250,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "b-mehta"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mb27Q",
              "body": "Looks good to me, thanks!",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-11-07T19:43:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mb33X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-11-07T19:43:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mb46i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-11-07T19:46:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mcUX0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-07T20:44:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlAJE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-08T18:02:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlA8Y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-08T18:04:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlDuP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-08T18:10:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlRno",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-11-08T18:45:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlUzG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-08T18:53:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlYH8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-08T19:05:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mlaHz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-08T19:06:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mldSn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-08T19:14:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mld09",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-08T19:15:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ml0eC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2023-11-08T20:11:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5npl4Y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-20T04:49:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5pi87f",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-12-07T18:04:27Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SlIdM",
                    "body": "```suggestion\r\n/--\r\ninfo: theorem extracted_1 (h : 1 = 2) : False := sorry\r\n-/\r\n#guard_msgs in\r\nexample (h : 1 = 2) : False := by\r\n  extract_goal\r\n  cases h\r\n```\r\nTo avoid a `sorry`!",
                    "createdAt": "2023-11-07T19:41:04Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrCdh",
                    "body": "I'd figured that if you're doing `extract_goal` you might not know how to prove it yet :smile: I'll mark this as resolved, but if you'd prefer `cases h` feel free to unresolve.",
                    "createdAt": "2023-11-08T18:02:38Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SlIuo",
                    "body": "Would there be some difference to using\r\n```lean\r\nif ← Meta.isDefEq (← g.getType') (.const ``False []) then\r\n```\r\ninstead?",
                    "createdAt": "2023-11-07T19:42:12Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrC8O",
                    "body": "I wanted to see `False` in the goal directly, not after unfolding, since that's a strong indicator that this is a contradiction proof. One reason not to unfold is that the goal might include variables that disappear from it after unfolding.\r\n\r\nI had considered doing ```(← whnfR (← g.getType)).isConstOf ``False```, which is more-or-less equivalent to doing `isDefEq`, and that's why I decided not to.",
                    "createdAt": "2023-11-08T18:04:36Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SlJD0",
                    "body": "Isn't this a convoluted way of doing\r\n```\r\nif full?.isNone && !((← g.getType >>= instantiateMVars).consumeMData.isConstOf ``False) then\r\n      g ← g.cleanup",
                    "createdAt": "2023-11-07T19:43:37Z",
                    "author": {
                      "login": "PatrickMassot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SlJvr",
                    "body": "Or even better:\r\n```\r\nunless full?.isSome || (← g.getType >>= instantiateMVars).consumeMData.isConstOf ``False do\r\n      g ← g.cleanup\r\n```\r\nalthough it would be nice to make sure this short-circuits when `full?.isSome` and there is a trap here if I remember correctly.",
                    "createdAt": "2023-11-07T19:46:29Z",
                    "author": {
                      "login": "PatrickMassot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SlbJj",
                    "body": "I think to avoid the trap you need `... <||> do ...`, and forgetting the `do` springs the trap.",
                    "createdAt": "2023-11-07T20:44:47Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrEk0",
                    "body": "Maybe it'll make you question my tastes, but, believe it or not, I considered all three of these options and settled on using a `mut` variable. I'd thought that maybe there might be other forms we'd want to match on eventually and this structure is easier to read than an `||` chain.\r\n\r\nAnyway, now the convolution is gone so we don't need to worry about it anymore :smile:",
                    "createdAt": "2023-11-08T18:10:15Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrNcm",
                    "body": "I don't mind the convoluted way, I mostly wanted to check I wasn't missing a learning opportunity.",
                    "createdAt": "2023-11-08T18:45:31Z",
                    "author": {
                      "login": "PatrickMassot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrPcL",
                    "body": "I probably should have just done the `if ... &&` or the `unless ... ||` from the beginning -- the likelihood of needing to match anything else is really low. (Btw, I'd decided that the \"`do` trap\" was ok here because instantiating mvars and doing `isConstOf` is inexpensive. If it were more expensive, I'd do `... <||> do ...`.)",
                    "createdAt": "2023-11-08T18:53:37Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrRsx",
                    "body": "```suggestion\r\n  A variable is *relevant* if (1) it occurs in the target type, (2) there is a relevant variable\r\n```",
                    "createdAt": "2023-11-08T19:02:07Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrSIB",
                    "body": "```suggestion\r\n-- Clears `i` since neither `n` nor the goal depend on it.\r\n```",
                    "createdAt": "2023-11-08T19:03:52Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrS3_",
                    "body": "Or some equivalent: the current phrasing confused me.",
                    "createdAt": "2023-11-08T19:06:26Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrVjs",
                    "body": "Thanks, added \"since\". (The rule I know is that \"neither\" is always singular in formal writing, so I left \"depends\".)",
                    "createdAt": "2023-11-08T19:15:37Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrSRs",
                    "body": "I'm not entirely sure what (3) means here... Is there a test case that checks for it?",
                    "createdAt": "2023-11-08T19:04:31Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SrVKo",
                    "body": "This is documenting the current behavior, since it comes from how the `cleanup` function works. Check out the difference between the first two tests. When you provide variables to `extract_goals` it turns off this third relevancy condition, and so `h₀` is no longer included.",
                    "createdAt": "2023-11-08T19:14:20Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Srjn7",
                    "body": "Ah okay, that makes sense.",
                    "createdAt": "2023-11-08T20:11:46Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TXdui",
                    "body": "I've submitted a PR to change core so that `cleanup` has the same options as `cleanupExcept`: https://github.com/leanprover/lean4/pull/2919\r\n\r\nI don't think this PR should be held up waiting for a core change. It's just worth knowing that this CleanupExcept module is going to be removable if that core change is accepted.",
                    "createdAt": "2023-11-20T04:49:05Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UmolN",
                    "body": "It's been long enough that the PR to core went through and that Mathlib has access to this function, so I removed CleanupExcept and upgraded.",
                    "createdAt": "2023-12-07T18:04:26Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjE0MDYwODgz",
              "login": "PatrickMassot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcaoQ",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135605185/job/19432676001"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcYCA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675336"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcYKA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675368"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcbfQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135605190/job/19432676221"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcajg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcZng",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675742"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcamA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135605190/job/19432675992"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcZqQ",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675753"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcY6g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675562"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcY5g",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432675558"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcacA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432675952"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcbmA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432676248"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkcbbQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19432676205"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhkccew",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604845/job/19432676475"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEhl4UFg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7135604846/job/19434181654"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: have `extract_goal` give full context when it detects a contradiction proof",
        "updatedAt": "2023-12-08T02:46:52Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8250",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef2bf8b62463254e1e48044ce9d3895379a37cf2"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52I-AvzwAAAAKJK46X",
              "createdAt": "2023-11-07T19:20:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52I-AvzwAAAAKJK46a",
              "createdAt": "2023-11-07T19:20:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mb27Q",
              "createdAt": "2023-11-07T19:41:03Z",
              "body": "Looks good to me, thanks!",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mb33X",
              "createdAt": "2023-11-07T19:43:36Z",
              "body": "",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a39e7ffdd4f215029f376c459240605b137dc7d9"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52I-AvzwAAAAKJ76Mv",
              "createdAt": "2023-11-08T17:53:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7mTAET",
                "name": "modifies-tactic-syntax"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mlYH8",
              "createdAt": "2023-11-08T19:02:07Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b10c07fba0ba79764b1704a469bf64ee60a2bcea"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5npl4Y",
              "createdAt": "2023-11-20T04:49:05Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e3f18793b993203b8552862078de6652d7926b31"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "39a16e27fce60d89e996e21605fb7beec56da17a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c72a23a483682bd9a75675efb9cade1640265b62"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8dc669bf8f5604e3998cd6cb7b81e836954ac9f2"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5uDjYd",
              "createdAt": "2023-12-08T01:40:08Z",
              "body": "bors merge",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52I-AvzwAAAAKa5EzK",
              "createdAt": "2023-12-08T01:40:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52I-AvzwAAAAKa5E0a",
              "createdAt": "2023-12-08T01:40:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5uDual",
              "createdAt": "2023-12-08T02:46:48Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7136265335/job/19434454881)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7136265335/job/19434455067)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7136265335/job/19434454787)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52I-AvzwAAAAKa6NxZ",
              "createdAt": "2023-12-08T02:46:49Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52I-AvzwAAAAKa6Nzz",
              "createdAt": "2023-12-08T02:46:52Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
