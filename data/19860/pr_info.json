{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 104,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Make `simps` generate `coe_concreteHom` rather than`concreteHom_apply`.\n\nFrom FLT\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> Mathlib.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\nIn fact, I would love to have both the `coe_` and `_apply` projections simultaneously and also to not have to specify ` simps (config := .asFn))` every single time we want to generate the `coe_` projection, but `simps ` seems to not be able to do that? cc @fpvandoorn\nI must say, after four years of working on mathlib, I still don't understand how one is supposed to use `simps`.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 8,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6W39SH",
              "body": "### PR summary [a4334e6f92](https://github.com/leanprover-community/mathlib4/pull/19860/commits/a4334e6f925d51d4d50736676800a8e0e3e62153)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ coeToMulHom`\n`+ coeToOneHom`\n`+ coe_toMulHom`\n`+ coe_toOneHom`\n`+++ Simps.coe`\n`+++ coe_mk`\n`+++ ext`\n`+++ mk_coe`\n`+++ toFun_eq_coe`\n`- MonoidHom.coeToMulHom`\n`- MonoidHom.coeToOneHom`\n`- MonoidHom.coe_comp`\n`- MonoidHom.coe_copy`\n`- MonoidHom.coe_mk`\n`- MonoidHom.ext`\n`- MonoidHom.mk_coe`\n`- MonoidHom.toFun_eq_coe`\n`- MonoidHom.toMulHom_coe`\n`- MonoidHom.toOneHom_coe`\n`- MulHom.coe_comp`\n`- MulHom.coe_copy`\n`- MulHom.coe_mk`\n`- MulHom.ext`\n`- MulHom.mk_coe`\n`- MulHom.toFun_eq_coe`\n`- OneHom.coe_comp`\n`- OneHom.coe_copy`\n`- OneHom.coe_mk`\n`- OneHom.ext`\n`- OneHom.mk_coe`\n`- OneHom.toFun_eq_coe`\n`-+-+ coe_inclusion`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-12-10T11:04:06Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6XLwv1",
              "body": "Yes, the state of `simps` is not ideal. I don't have time to develop it further, but there are some unintuitive behaviors and useful missing features. \r\nYou cannot specify configuration options in `initialize_simps_projections`, although this has been requested before. I added #19895 as a tracking issue.\r\n\r\nYou can do what you want in a verbose way:\r\n```lean\r\n-- the `-apply` means that `simps` doesn't generate this lemma by default\r\ninitialize_simps_projections OneHom (toFun → coe, as_prefix coe, toFun → apply, -apply)\r\n\r\n\r\n-- the second `simps` call generates the `apply` lemma anyway\r\n@[simps -fullyApplied, simps apply]\r\ndef something : OneHom _ _\r\n```\r\nOnce #19895 is implemented you could enable both by default (this will generate `2^n` lemmas if you have `n` nested `OneHom`s in your conclusion).",
              "createdAt": "2024-12-11T16:16:05Z",
              "author": {
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a4334e6f925d51d4d50736676800a8e0e3e62153",
                "additions": 104,
                "deletions": 125,
                "committedDate": "2025-01-25T13:30:49Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tK-g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396198/job/36165077754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tKKw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396154/job/36165077547"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tLmQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396364/job/36165077913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tLtg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396374/job/36165077942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tKvA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396158/job/36165077692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tLuw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396373/job/36165077947"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tKYg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396158/job/36165077602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tKgg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396198/job/36165077634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tMFw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396373/job/36165078039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tLXw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396198/job/36165077855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa51g-A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396158/job/36165214456"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tbrA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36165082028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa5tnqg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19860&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-10T11:03:09Z",
        "deletions": 125,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Multiset/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Hom/Defs.lean",
              "additions": 90,
              "deletions": 103
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Defs.lean",
              "additions": 6,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Operations.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/WithOne/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/WithZero.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/End.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/NoncommCoprod.lean",
              "additions": 2,
              "deletions": 5
            }
          ]
        },
        "headRefName": "simps_monoid_hom",
        "headRefOid": "a4334e6f925d51d4d50736676800a8e0e3e62153",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6EsDOt",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
              "color": "E96E5B",
              "name": "awaiting-CI"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19860,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "b-mehta"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tK-g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396198/job/36165077754"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tKKw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396154/job/36165077547"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tLmQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396364/job/36165077913"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tLtg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396374/job/36165077942"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tKvA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396158/job/36165077692"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tLuw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396373/job/36165077947"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tKYg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396158/job/36165077602"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tKgg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396198/job/36165077634"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tMFw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396373/job/36165078039"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tLXw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396198/job/36165077855"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa51g-A",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965396158/job/36165214456"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tbrA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36165082028"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa5tnqg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19860&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor: review the `simps` projections of `OneHom`, `MulHom`, `MonoidHom`",
        "updatedAt": "2025-02-01T08:43:41Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19860",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6itVV_zwAAAAOhxmoA",
              "createdAt": "2024-12-10T11:03:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6itVV_zwAAAAOhxmoL",
              "createdAt": "2024-12-10T11:03:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6W39SH",
              "createdAt": "2024-12-10T11:04:06Z",
              "body": "### PR summary [a4334e6f92](https://github.com/leanprover-community/mathlib4/pull/19860/commits/a4334e6f925d51d4d50736676800a8e0e3e62153)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ coeToMulHom`\n`+ coeToOneHom`\n`+ coe_toMulHom`\n`+ coe_toOneHom`\n`+++ Simps.coe`\n`+++ coe_mk`\n`+++ ext`\n`+++ mk_coe`\n`+++ toFun_eq_coe`\n`- MonoidHom.coeToMulHom`\n`- MonoidHom.coeToOneHom`\n`- MonoidHom.coe_comp`\n`- MonoidHom.coe_copy`\n`- MonoidHom.coe_mk`\n`- MonoidHom.ext`\n`- MonoidHom.mk_coe`\n`- MonoidHom.toFun_eq_coe`\n`- MonoidHom.toMulHom_coe`\n`- MonoidHom.toOneHom_coe`\n`- MulHom.coe_comp`\n`- MulHom.coe_copy`\n`- MulHom.coe_mk`\n`- MulHom.ext`\n`- MulHom.mk_coe`\n`- MulHom.toFun_eq_coe`\n`- OneHom.coe_comp`\n`- OneHom.coe_copy`\n`- OneHom.coe_mk`\n`- OneHom.ext`\n`- OneHom.mk_coe`\n`- OneHom.toFun_eq_coe`\n`-+-+ coe_inclusion`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6XLwv1",
              "createdAt": "2024-12-11T16:16:05Z",
              "body": "Yes, the state of `simps` is not ideal. I don't have time to develop it further, but there are some unintuitive behaviors and useful missing features. \r\nYou cannot specify configuration options in `initialize_simps_projections`, although this has been requested before. I added #19895 as a tracking issue.\r\n\r\nYou can do what you want in a verbose way:\r\n```lean\r\n-- the `-apply` means that `simps` doesn't generate this lemma by default\r\ninitialize_simps_projections OneHom (toFun → coe, as_prefix coe, toFun → apply, -apply)\r\n\r\n\r\n-- the second `simps` call generates the `apply` lemma anyway\r\n@[simps -fullyApplied, simps apply]\r\ndef something : OneHom _ _\r\n```\r\nOnce #19895 is implemented you could enable both by default (this will generate `2^n` lemmas if you have `n` nested `OneHom`s in your conclusion).",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5tnsWN",
              "createdAt": "2024-12-18T20:27:41Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Fk9XY",
                "title": "Allow for Config attributes to be set directly",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20029"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6itVV_zwAAAAOztyue",
              "createdAt": "2025-01-13T06:40:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a4334e6f925d51d4d50736676800a8e0e3e62153"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6itVV_zwAAAAO9sWaB",
              "createdAt": "2025-01-25T13:31:03Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6itVV_zwAAAAO9sWs0",
              "createdAt": "2025-01-25T13:31:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6itVV_zwAAAAPClnfH",
              "createdAt": "2025-02-01T08:43:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
