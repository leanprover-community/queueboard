{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 242,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY1MDgwMTQ0",
              "login": "faenuccio"
            }
          ]
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n- [x] depends on: #13153\r\n- [x] depends on: #13725\r\n- [x] depends on: #13726\r\n- [x] depends on: #13727\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2024-07-05T09:16:40Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6AnMWL",
              "body": "### PR summary [d46b761352](https://github.com/leanprover-community/mathlib4/pull/13683/commits/d46b761352b69a5e786af1366dc34dbe363566ed)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Order.Antidiag.Pi | 546 | 753 | +207 (+37.91%) |\n| Mathlib.Algebra.Order.Antidiag.Finsupp | 683 | 781 | +98 (+14.35%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>15 files</summary> `Mathlib.NumberTheory.LSeries.HurwitzZetaValues` `Mathlib.RingTheory.PowerSeries.WellKnown` `Mathlib.RingTheory.LaurentSeries` `Mathlib.RingTheory.PowerSeries.Derivative` `Mathlib.RingTheory.MvPowerSeries.Inverse` `Mathlib.RingTheory.HahnSeries.PowerSeries` `Mathlib.NumberTheory.ZetaValues` `Mathlib.NumberTheory.BernoulliPolynomials` `Mathlib.RingTheory.PowerSeries.Order` `Mathlib.NumberTheory.Bernoulli` `Mathlib.RingTheory.MvPowerSeries.Trunc` `Mathlib.RingTheory.MvPowerSeries.Basic` `Mathlib.RingTheory.PowerSeries.Trunc` `Mathlib.RingTheory.PowerSeries.Basic` `Mathlib.RingTheory.PowerSeries.Inverse`</details>|1|\n| `Mathlib.Algebra.Order.Antidiag.Finsupp`|98|\n| `Mathlib.Algebra.Order.Antidiag.Pi`|207|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ coe_onFinset`\n`+ finsetCongr_piAntidiag_eq_antidiag`\n`+ map_nsmul_piAntidiag`\n`+ map_nsmul_piAntidiag_univ`\n`+ mem_piAntidiag`\n`+ nsmul_piAntidiag`\n`+ nsmul_piAntidiag_univ`\n`+ pairwiseDisjoint_piAntidiag_map_addRightEmbedding`\n`+ piAntidiag`\n`+ piAntidiag_cons`\n`+ piAntidiag_empty`\n`+ piAntidiag_empty_of_ne_zero`\n`+ piAntidiag_empty_zero`\n`+ piAntidiag_insert`\n`+ piAntidiag_univ_fin_eq_antidiagonalTuple`\n`+ piAntidiag_zero`\n`- finAntidiagonal₀`\n`- mem_finAntidiagonal₀`\n`- mem_finAntidiagonal₀'`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-06-10T08:57:55Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6CpBrq",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#13153~~\n* ~~leanprover-community/mathlib4#13725~~\n* ~~leanprover-community/mathlib4#13726~~\n* ~~leanprover-community/mathlib4#13727~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-06-26T14:02:37Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dv5aK",
              "body": "Thanks, LGTM!",
              "createdAt": "2024-07-05T07:46:20Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dv5cR",
              "body": "maintainer merge",
              "createdAt": "2024-07-05T07:46:26Z",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Dv5g-",
              "body": "🚀 Pull request has been placed on the maintainer queue by faenuccio.",
              "createdAt": "2024-07-05T07:46:38Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DwK7u",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2024-07-05T08:33:50Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6DwcEk",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9805490157/job/27075252307)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9805490157/job/27075252870)",
              "createdAt": "2024-07-05T09:16:39Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "35461e62a4eea12505eee73261fba6edf411ba66",
                "additions": 225,
                "deletions": 159,
                "committedDate": "2024-07-04T19:57:30Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d46b761352b69a5e786af1366dc34dbe363566ed",
                "additions": 33,
                "deletions": 14,
                "committedDate": "2024-07-04T20:37:25Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTeiRrA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806019011/job/27076891052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOux0A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671222/job/27060318672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuxqg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671221/job/27060318634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuwNA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuwCA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318216"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuxvw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671220/job/27060318655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuwww",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuw-Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuyJA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671220/job/27060318756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuvmQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuwhg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuxMQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuvqA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318120"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOuxpA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTPk5kw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27061205395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOu__A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27060322300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGTOvkcQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=13683&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAG_2zeEQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4139",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-06-10T08:57:21Z",
        "deletions": 157,
        "files": {
          "nodes": [
            {
              "path": "Archive/Wiedijk100Theorems/Partition.lean",
              "additions": 7,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Order/Antidiag/Finsupp.lean",
              "additions": 61,
              "deletions": 144
            },
            {
              "path": "Mathlib/Algebra/Order/Antidiag/Pi.lean",
              "additions": 172,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Finsupp/Defs.lean",
              "additions": 2,
              "deletions": 0
            }
          ]
        },
        "headRefName": "pi_antidiag",
        "headRefOid": "d46b761352b69a5e786af1366dc34dbe363566ed",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5x8ftG",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6AO2pn",
              "body": "Thanks!",
              "state": "COMMENTED",
              "author": {
                "login": "faenuccio"
              },
              "submittedAt": "2024-07-01T13:49:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c59mHdy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-10T08:57:54Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 13683,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c59mHdy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-10T08:57:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6AO2pn",
              "body": "Thanks!",
              "state": "COMMENTED",
              "author": {
                "login": "faenuccio"
              },
              "submittedAt": "2024-07-01T13:49:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Atrwr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-04T20:06:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Atskt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-04T20:11:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6AttBn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-04T20:14:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6AttNY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-04T20:15:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Attqn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-04T20:18:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Atwei",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-04T20:36:32Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hU5fr",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    simpa [← mul_sum, hn] using hf\n```\n",
                    "createdAt": "2024-06-10T08:57:54Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hU5ft",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  rw [← Nat.sum_div hfdvd, hfsum, Nat.mul_div_cancel_left _ hn.bot_lt]\n```\n",
                    "createdAt": "2024-06-10T08:57:54Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAYb1",
                    "body": "\n```suggestion\n      exact fun hi _ ↦ ha.2 i hi\n```",
                    "createdAt": "2024-07-01T13:20:04Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAY3d",
                    "body": "provides... \"the definition and the main properties of\", or something like this? Also, can you point to the main declarations of the file?",
                    "createdAt": "2024-07-01T13:21:26Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAZLq",
                    "body": "Can we add a link to the file where the `HasAntidiagonal` class is defined?",
                    "createdAt": "2024-07-01T13:22:27Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAZXA",
                    "body": "\n```suggestion\n/-- The finset of functions `ι →₀ μ` with support contained in `s` and sum equal to `n`. -/\n```",
                    "createdAt": "2024-07-01T13:22:57Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAawu",
                    "body": "\n```suggestion\n  ext f; simp [finsuppAntidiag, ← DFunLike.coe_fn_eq (g := f), eq_comm]\n```\nOr is a precise reason to explicitely remove `mem_piAntidiag`?",
                    "createdAt": "2024-07-01T13:26:35Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jTbpI",
                    "body": "Oh, it's not needed anymore. Well spotted",
                    "createdAt": "2024-07-04T20:06:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAb35",
                    "body": "\n```suggestion\n  eq_empty_of_forall_not_mem (by simp [@eq_comm _ 0, hn.symm])\n```",
                    "createdAt": "2024-07-01T13:28:52Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAc_S",
                    "body": "As in the other file, can you point to the main results, or main API things that a user might want to use when stumbling upon this file? And add a link to the definition of the `HasAntidiagonal` class?",
                    "createdAt": "2024-07-01T13:31:37Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAd8o",
                    "body": "\n```suggestion\nchoosing an identification `s ≃ Fin s.card` and proving that the end result does not depend on that\n```\nAlso, can you say which is this result, and add to it (below) a bit of doc along the lines \"this lemma/thm proves that ...\"? ",
                    "createdAt": "2024-07-01T13:33:58Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAfFn",
                    "body": "\n```suggestion\n  eq_empty_of_forall_not_mem (by simp [@eq_comm _ 0, hn.symm])\n```",
                    "createdAt": "2024-07-01T13:37:04Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAgEP",
                    "body": "I am not sure what to suggest about the \"of_ne_zero\" vs \"ne_zero\", but I observe that in the previous lemma there is no `of` and here yes; I believe they should be uniform.",
                    "createdAt": "2024-07-01T13:39:57Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jTcKD",
                    "body": "That \"discrepancy\" is perfectly in line with the naming convention:\r\n* In `piAntidiag_empty_zero : piAntidiag (∅ : Finset ι) (0 : μ) = {0}`, the `0` appears in the LHS, hence there is no `of`\r\n* In `piAntidiag_empty_of_ne_zero (hn : n ≠ 0) : piAntidiag (∅ : Finset ι) n = ∅`, the `n ≠ 0` appears in an hypothesis, hence there is a `of`.",
                    "createdAt": "2024-07-04T20:11:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAgYD",
                    "body": "Is there any of all these lemma that might/should be marked `aesop`?",
                    "createdAt": "2024-07-01T13:40:41Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jTcbP",
                    "body": "Highly unclear to me. I would rather not for now, out of lack of application (and since adding aesop rules incurs a cost on every future aesop call). We can easily change our mind in a later PR",
                    "createdAt": "2024-07-04T20:14:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAgmT",
                    "body": "`equiv` or `eq`?",
                    "createdAt": "2024-07-01T13:41:16Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jTciK",
                    "body": "I did want to go with `equiv`, but you're right it's a terrible name",
                    "createdAt": "2024-07-04T20:15:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAhVU",
                    "body": "See my comment above to see if we need something like `of_zero`.",
                    "createdAt": "2024-07-01T13:43:26Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jTesR",
                    "body": "Same reply as above",
                    "createdAt": "2024-07-04T20:36:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAhlX",
                    "body": "A bit of doc fot this notation, so users see what it means?",
                    "createdAt": "2024-07-01T13:44:10Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5jAjCF",
                    "body": "I do not understand how Lean can see that `univ` is the `univ` of `Fintype k`, but it does! Do you have an explanation (and perhaps one that can be put in a bit of doc for other future users)?",
                    "createdAt": "2024-07-01T13:48:23Z",
                    "author": {
                      "login": "faenuccio"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5jTc08",
                    "body": "Oh that's simple: We have `Finset.Nat.antidiagonalTuple (k : ℕ) (n : ℕ) : Finset (Fin k → ℕ)`, so the RHS here has type `Finset (Fin k → ℕ)` and Lean easily unifies that with `Finset (α → ℕ)`.",
                    "createdAt": "2024-07-04T20:18:04Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjY1MDgwMTQ0",
              "login": "faenuccio"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTeiRrA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9806019011/job/27076891052"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOux0A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671222/job/27060318672"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuxqg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671221/job/27060318634"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuwNA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318260"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuwCA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318216"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuxvw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671220/job/27060318655"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuwww",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318403"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuw-Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318457"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuyJA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799671220/job/27060318756"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuvmQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318105"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuwhg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318342"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuxMQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318513"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuvqA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27060318120"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOuxpA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670998/job/27060318628"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTPk5kw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9799670999/job/27061205395"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOu__A",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27060322300"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGTOvkcQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=13683&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAG_2zeEQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4139",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Antidiagonal as a `Finset (ι → μ)`",
        "updatedAt": "2024-07-05T09:16:45Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/13683",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMMr5ke",
              "createdAt": "2024-06-10T08:57:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMMr5kr",
              "createdAt": "2024-06-10T08:57:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMMr5k3",
              "createdAt": "2024-06-10T08:57:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c59mHdy",
              "createdAt": "2024-06-10T08:57:54Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AnMWL",
              "createdAt": "2024-06-10T08:57:55Z",
              "body": "### PR summary [d46b761352](https://github.com/leanprover-community/mathlib4/pull/13683/commits/d46b761352b69a5e786af1366dc34dbe363566ed)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Order.Antidiag.Pi | 546 | 753 | +207 (+37.91%) |\n| Mathlib.Algebra.Order.Antidiag.Finsupp | 683 | 781 | +98 (+14.35%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>15 files</summary> `Mathlib.NumberTheory.LSeries.HurwitzZetaValues` `Mathlib.RingTheory.PowerSeries.WellKnown` `Mathlib.RingTheory.LaurentSeries` `Mathlib.RingTheory.PowerSeries.Derivative` `Mathlib.RingTheory.MvPowerSeries.Inverse` `Mathlib.RingTheory.HahnSeries.PowerSeries` `Mathlib.NumberTheory.ZetaValues` `Mathlib.NumberTheory.BernoulliPolynomials` `Mathlib.RingTheory.PowerSeries.Order` `Mathlib.NumberTheory.Bernoulli` `Mathlib.RingTheory.MvPowerSeries.Trunc` `Mathlib.RingTheory.MvPowerSeries.Basic` `Mathlib.RingTheory.PowerSeries.Trunc` `Mathlib.RingTheory.PowerSeries.Basic` `Mathlib.RingTheory.PowerSeries.Inverse`</details>|1|\n| `Mathlib.Algebra.Order.Antidiag.Finsupp`|98|\n| `Mathlib.Algebra.Order.Antidiag.Pi`|207|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ coe_onFinset`\n`+ finsetCongr_piAntidiag_eq_antidiag`\n`+ map_nsmul_piAntidiag`\n`+ map_nsmul_piAntidiag_univ`\n`+ mem_piAntidiag`\n`+ nsmul_piAntidiag`\n`+ nsmul_piAntidiag_univ`\n`+ pairwiseDisjoint_piAntidiag_map_addRightEmbedding`\n`+ piAntidiag`\n`+ piAntidiag_cons`\n`+ piAntidiag_empty`\n`+ piAntidiag_empty_of_ne_zero`\n`+ piAntidiag_empty_zero`\n`+ piAntidiag_insert`\n`+ piAntidiag_univ_fin_eq_antidiagonalTuple`\n`+ piAntidiag_zero`\n`- finAntidiagonal₀`\n`- mem_finAntidiagonal₀`\n`- mem_finAntidiagonal₀'`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/no_lost_declarations.sh short <optional_commit>\n\n## more verbose report:\n./scripts/no_lost_declarations.sh <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5TPDwy",
              "createdAt": "2024-06-11T09:42:14Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5wZPG6",
                "title": "[Merged by Bors] - feat(Algebra): auxiliary results for proofs about elliptic divisibility sequences",
                "url": "https://github.com/leanprover-community/mathlib4/pull/13153"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5TPgnd",
              "createdAt": "2024-06-11T15:29:11Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5yINRy",
                "title": "[Merged by Bors] - chore: Move antidiagonal material",
                "url": "https://github.com/leanprover-community/mathlib4/pull/13727"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMN9uUR",
              "createdAt": "2024-06-11T15:31:50Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMN-DRO",
              "createdAt": "2024-06-11T15:38:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6LrBl5zwAAAAMOCOVS",
              "createdAt": "2024-06-11T17:08:51Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMOCOVe",
              "createdAt": "2024-06-11T17:08:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMOD09g",
              "createdAt": "2024-06-11T17:48:33Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMOFWM3",
              "createdAt": "2024-06-11T18:26:32Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMOfASt",
              "createdAt": "2024-06-12T08:21:27Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMQ4L1Y",
              "createdAt": "2024-06-15T09:08:08Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMRaXRt",
              "createdAt": "2024-06-16T21:07:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMRwWNl",
              "createdAt": "2024-06-17T09:33:09Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6LrBl5zwAAAAMRwaKA",
              "createdAt": "2024-06-17T09:34:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6LrBl5zwAAAAMYsRI8",
              "createdAt": "2024-06-26T14:02:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6CpBrq",
              "createdAt": "2024-06-26T14:02:37Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#13153~~\n* ~~leanprover-community/mathlib4#13725~~\n* ~~leanprover-community/mathlib4#13726~~\n* ~~leanprover-community/mathlib4#13727~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMaZdri",
              "createdAt": "2024-06-28T07:33:57Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6AO2pn",
              "createdAt": "2024-07-01T13:20:04Z",
              "body": "Thanks!",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5TneSh",
              "createdAt": "2024-07-01T14:35:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5xj6T1",
                "title": "[Merged by Bors] - feat (RingTheory/Valuation) : add lemmas about valuations and notations for valued",
                "url": "https://github.com/leanprover-community/mathlib4/pull/13533"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6LrBl5zwAAAAMcA-_h",
              "createdAt": "2024-07-01T18:09:34Z",
              "assignee": {
                "id": "MDQ6VXNlcjY1MDgwMTQ0",
                "login": "faenuccio"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6LrBl5zwAAAAMcA_Nn",
              "createdAt": "2024-07-01T18:09:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMcA_la",
              "createdAt": "2024-07-01T18:09:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6LrBl5zwAAAAMenC51",
              "createdAt": "2024-07-04T20:37:33Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6LrBl5zwAAAAMen7HJ",
              "createdAt": "2024-07-04T21:29:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMen7HO",
              "createdAt": "2024-07-04T21:29:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dv5aK",
              "createdAt": "2024-07-05T07:46:20Z",
              "body": "Thanks, LGTM!",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dv5cR",
              "createdAt": "2024-07-05T07:46:26Z",
              "body": "maintainer merge",
              "author": {
                "login": "faenuccio"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Dv5g-",
              "createdAt": "2024-07-05T07:46:38Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by faenuccio.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMe2_-l",
              "createdAt": "2024-07-05T07:46:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6LrBl5zwAAAAMe3hGS",
              "createdAt": "2024-07-05T07:58:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DwK7u",
              "createdAt": "2024-07-05T08:33:50Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6LrBl5zwAAAAMe5ANL",
              "createdAt": "2024-07-05T08:34:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6DwcEk",
              "createdAt": "2024-07-05T09:16:39Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9805490157/job/27075252307)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9805490157/job/27075252870)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6LrBl5zwAAAAMe64ie",
              "createdAt": "2024-07-05T09:16:41Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6LrBl5zwAAAAMe64uC",
              "createdAt": "2024-07-05T09:16:45Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UOlh1",
              "createdAt": "2024-08-01T17:33:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c529Mz2",
                "title": "feat: MiM PR report",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
              }
            }
          ]
        }
      }
    }
  }
}
