{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 185,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "acmepjz"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Main changes\r\n\r\n- Add `IsSepClosed` and basic properties.\r\n- Add `IsSepClosure` and basic properties.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-14T14:18:24Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jK0Xl",
              "body": "This PR is already nearly 200 lines long -- don't add any more stuff to it! It looks ready to go to me; do future work in a different PR.",
              "createdAt": "2023-08-03T11:03:06Z",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jK87a",
              "body": "Sure, let me clean it up later today.",
              "createdAt": "2023-08-03T11:29:34Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j5zWv",
              "body": "Build failed (retrying...):\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5843394520/job/15845507328)",
              "createdAt": "2023-08-12T20:56:20Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j55AK",
              "body": "Build failed (retrying...):\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5843676149/job/15846037841)",
              "createdAt": "2023-08-12T22:07:55Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j55CI",
              "body": "Build failed:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5843679796/job/15846043480)",
              "createdAt": "2023-08-12T22:08:35Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j-BDo",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2023-08-14T12:08:38Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5j-zH5",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5855987662/job/15874820675)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5855987662/job/15874820271)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5855987662/job/15874820473)",
              "createdAt": "2023-08-14T14:18:22Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "fa407fb30dead4551308efe30863b0ee62082f76",
                "additions": 174,
                "deletions": 0,
                "committedDate": "2023-08-01T11:42:52Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c81d5ea0f27e3e33c333850c4e6699aea1b602a2",
                "additions": 10,
                "deletions": 11,
                "committedDate": "2023-08-01T22:29:06Z",
                "author": {
                  "name": "Jz Pan",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "691b35cfd0e6e41b579b0a7454062eb23968c211",
                "additions": 22,
                "deletions": 3,
                "committedDate": "2023-08-01T23:24:18Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bb1d9b2335b9266010e3144450227d49d1ae7cc5",
                "additions": 40,
                "deletions": 49,
                "committedDate": "2023-08-03T20:16:06Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "55b11cc1bf3b2b85742e4f5eed2c7dc4e89949bb",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-08-03T20:22:10Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "64b80b59b95bda5e8eb04387f29ec1b0a24de0e0",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-12T20:38:56Z",
                "author": {
                  "name": "Johan Commelin",
                  "email": "johan@commelin.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4475ef62e75ef9e5955ea79f084057b796ba7e6a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-13T05:44:58Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-01T11:45:59Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/FieldTheory/IsSepClosed.lean",
              "additions": 184,
              "deletions": 0
            }
          ]
        },
        "headRefName": "acmepjz_sep_closed",
        "headRefOid": "4475ef62e75ef9e5955ea79f084057b796ba7e6a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5W5lbp",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5d5tim",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-12T20:39:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c1wSD",
              "body": "This looks great to me! Thank you very much! I've left a few comments.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-08-01T19:29:13Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6285,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5c1wSD",
              "body": "This looks great to me! Thank you very much! I've left a few comments.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-08-01T19:29:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c3DEz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2023-08-01T22:43:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d5tQW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-12T20:38:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d5tim",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-08-12T20:39:08Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWqP1",
                    "body": "My instinct is that we should stick to the standard syntax and just have copyright 2023 Jz Pan. Kenny did lots of great things for mathlib but he did not write this code -- you did! Even if you were inspired by him, it's your code. Several of my early PRs were like this too; it's a great way to start learning how to become a good Lean coder.",
                    "createdAt": "2023-08-01T18:37:44Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWskj",
                    "body": "I think it should be clarified here in the docstring that `K` is still a field (given that you are allowing `R` to be a commutative ring). Maybe \"This means that `K` is a field, the map from...\"?\r\n\r\nMathematical question: if K is a field, separable over a commutative ring R, and if the map from R to K is injective, then is R also necessarily a field?",
                    "createdAt": "2023-08-01T18:46:23Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MXdls",
                    "body": "I think the concept \"separable over a commutative ring R\" itself is quite dangerous. In mathlib4 the definition of `IsSeparable R K` require that all element of `K` is integral over `R`. So I think your mathematical question should be true (by considering `Frac(R)` in `K`).\r\n\r\nHowever there are another definition of separable algebra https://en.wikipedia.org/wiki/Separable_algebra which claims to be the generalization of separable field extension. Using this definition I think `Q` is a separable `Z` algebra, while it's not integral over `Z`. So maybe we should stick on fields when talking about separable extension.",
                    "createdAt": "2023-08-01T22:43:12Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWtl2",
                    "body": "Why not add some `## TODO`s here? What else needs doing? Separable elements in an algebraic closure form a separable closure, for example. Existence of separable closure of a field? Proof that `IsSepClosure`  and `IsAlgClosure` are the same thing if `R` is a field of char 0? Other examples you can think of? ",
                    "createdAt": "2023-08-01T18:50:45Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWybx",
                    "body": "```suggestion\r\n/-- Every separable polynomial splits in the field extension `f : k →+* K` if `K` is\r\nseparably closed.\r\n\r\nSee also `IsSepClosed.splits_domain` for the case where `k` is separably closed.\r\n-/\r\ntheorem IsSepClosed.splits_codomain {k K : Type _} [Field k] [Field K] [IsSepClosed K]  {f : k →+* K}\r\n    (p : k[X]) (h : p.Separable) : p.Splits f := by\r\n```\r\n(see below for explanation)",
                    "createdAt": "2023-08-01T19:05:34Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWytH",
                    "body": "```suggestion\r\n/-- Every separable polynomial splits in the field extension `f : k →+* K` if `k` is\r\n```",
                    "createdAt": "2023-08-01T19:06:59Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWy2F",
                    "body": "I personally find reading these two lemmas quite confusing because of the change in the type of `f`. In the first lemma you have `f : K →+* k` and in the second you have `f : k →+* K`. I think that nowadays in mathlib it's traditional to have one \"style\" for notation throughout a file (e.g. \"K is always bigger than k\") and then to stick to this style throughout the file. Otherwise the file can become quite confusing to read. I've suggested a change to the first lemma which I think sticks to this style.",
                    "createdAt": "2023-08-01T19:07:43Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWzNp",
                    "body": "```suggestion\r\n    exact (WithBot.coe_lt_coe.2 hn').ne'\r\n```\r\nYou can use Lean's dot notation here.",
                    "createdAt": "2023-08-01T19:09:34Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWzg7",
                    "body": "```suggestion\r\n    simpa [eval_C, eval_X, eval_pow, eval_sub, IsRoot.def, sub_eq_zero] using hz\r\n```\r\nIf `simp` gets you to a point where the answer is `exact`, then `simpa` can often be used instead.",
                    "createdAt": "2023-08-01T19:11:03Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MW00B",
                    "body": "```suggestion\r\n    fun x => @IsSepClosed.splits_codomain _ _ _ _ (IsSepClosure.sep_closed R) _ _ (by\r\n```\r\nIf you make my suggestion earlier then this implicit argument needs to be moved to a slightly different place.",
                    "createdAt": "2023-08-01T19:17:18Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MW2AV",
                    "body": "```suggestion\r\n  refine ⟨fun p hsep ↦ Or.inr ?_⟩\r\n```\r\nWe can just intro them both at once.",
                    "createdAt": "2023-08-01T19:23:03Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MW2s7",
                    "body": "```suggestion\r\n  refine fun x => ⟨-(minpoly k x).coeff 0, ?_⟩\r\n```\r\nMy instinct is to avoid the primed tactics where possible; really I think they were only there to make the port easier (`refine'` is Lean 3 `refine`).",
                    "createdAt": "2023-08-01T19:26:15Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCbcd",
                    "body": "```suggestion\r\n- If `k` is a perfect field, then its separable closure coincides with its algebraic closure.\r\n```",
                    "createdAt": "2023-08-12T20:36:28Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NCbeO",
                    "body": "```suggestion\r\n- Using the above result, construct a separable closure as a subfield of an algebraic closure.\r\n```",
                    "createdAt": "2023-08-12T20:37:11Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMzOTc3Nzk=",
              "login": "acmepjz"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Mathlib/FieldTheory/IsSepClosed) separably closed field and separable closure - basic definition",
        "updatedAt": "2023-08-14T14:18:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6285",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fa407fb30dead4551308efe30863b0ee62082f76"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c1wSD",
              "createdAt": "2023-08-01T18:37:44Z",
              "body": "This looks great to me! Thank you very much! I've left a few comments.",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c81d5ea0f27e3e33c333850c4e6699aea1b602a2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "691b35cfd0e6e41b579b0a7454062eb23968c211"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jK0Xl",
              "createdAt": "2023-08-03T11:03:06Z",
              "body": "This PR is already nearly 200 lines long -- don't add any more stuff to it! It looks ready to go to me; do future work in a different PR.",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jK87a",
              "createdAt": "2023-08-03T11:29:34Z",
              "body": "Sure, let me clean it up later today.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bb1d9b2335b9266010e3144450227d49d1ae7cc5"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c5tJDS2zwAAAAJUN4uI",
              "createdAt": "2023-08-03T20:20:11Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "55b11cc1bf3b2b85742e4f5eed2c7dc4e89949bb"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tJDS2zwAAAAJU_jQl",
              "createdAt": "2023-08-05T18:30:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tJDS2zwAAAAJVBZ5N",
              "createdAt": "2023-08-06T01:27:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d5tQW",
              "createdAt": "2023-08-12T20:36:28Z",
              "body": "",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "64b80b59b95bda5e8eb04387f29ec1b0a24de0e0"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d5tim",
              "createdAt": "2023-08-12T20:39:08Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tJDS2zwAAAAJYsv1G",
              "createdAt": "2023-08-12T20:39:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tJDS2zwAAAAJYsv1S",
              "createdAt": "2023-08-12T20:39:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j5zWv",
              "createdAt": "2023-08-12T20:56:20Z",
              "body": "Build failed (retrying...):\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5843394520/job/15845507328)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j55AK",
              "createdAt": "2023-08-12T22:07:55Z",
              "body": "Build failed (retrying...):\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5843676149/job/15846037841)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j55CI",
              "createdAt": "2023-08-12T22:08:35Z",
              "body": "Build failed:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5843679796/job/15846043480)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4475ef62e75ef9e5955ea79f084057b796ba7e6a"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j-BDo",
              "createdAt": "2023-08-14T12:08:38Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5j-zH5",
              "createdAt": "2023-08-14T14:18:22Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5855987662/job/15874820675)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5855987662/job/15874820271)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5855987662/job/15874820473)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5tJDS2zwAAAAJZQF7r",
              "createdAt": "2023-08-14T14:18:24Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5tJDS2zwAAAAJZQG-4",
              "createdAt": "2023-08-14T14:18:38Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
