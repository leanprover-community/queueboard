{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 178,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mattrobball"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We rename `algebraNat` to `Nat.instAlgebraOfSemiring` and `algebraInt` to `Int.instAlgebraOfRing` to be consistent with existing naming conventions. We also scope them to avoid typeclass search tripping over them unnecessarily.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\nMoves:\r\n- algebraNat -> Nat.instAlgebraOfSemiring\r\n- algebraInt -> Int.instAlgebraOfRing\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 80,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6FuA_1",
              "body": "!bench",
              "createdAt": "2024-07-22T17:09:46Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FuBTr",
              "body": "### PR summary [9ac210925d](https://github.com/leanprover-community/mathlib4/pull/15024/commits/9ac210925d7dd17bce7a13ef30a185ff158a3a3c)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`- instance (priority := 99) algebraInt : Algebra ℤ R`\n`- instance (priority := 99) algebraNat : Algebra ℕ R`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>",
              "createdAt": "2024-07-22T17:10:26Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FuLuU",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/73888ee8-01d2-444a-9c7c-3ffd9af8e19b) for commit b9f970937b7b1769286e0f7e14d621aac6882cc7.\nThere were [no significant changes](http://speed.lean-fro.org/mathlib4/compare/a4a7e589-145a-4a1d-ac65-a295b4fe7c95/to/73888ee8-01d2-444a-9c7c-3ffd9af8e19b) against commit 5eea94dacbf2df97513cbacc6af669f4358b43ea.",
              "createdAt": "2024-07-22T17:36:39Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Fvfnd",
              "body": "I don't think these should be scoped. I also thing `Semiring.toNatAlgebra` might be a better name.",
              "createdAt": "2024-07-22T21:09:45Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FvpRe",
              "body": "We've already seen situations where  a search for `instClassExtendsSMul'` goes through intermediate chaining instances. With `Nat` or `Int` in scope, they get caught up. I think we need some mechanism to limit their scopes. \r\n\r\nI have a separate experiment where I used imports to do this. The advantage of this is specificity. \r\n\r\nDo we have much in the `Semiring/Ring` namespace?",
              "createdAt": "2024-07-22T21:38:45Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Fv2C7",
              "body": "`AddCommMonoid.natModule` is precedent for putting things in the `Semiring` namespace here. I'd argue that we should have a `to` prefix rather than `inst`, since this could be implemented as inheritance.",
              "createdAt": "2024-07-22T22:23:30Z",
              "author": {
                "login": "eric-wieser"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "b9f970937b7b1769286e0f7e14d621aac6882cc7",
                "additions": 172,
                "deletions": 24,
                "committedDate": "2024-07-22T17:00:26Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdsGyJw",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045279952/job/27762209319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdsGyGw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045279955/job/27762209307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdsGyVw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045279962/job/27762209367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_mog",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242927/job/27762091682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_mnQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242926/job/27762091677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_qcw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242927/job/27762092659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdsGzeQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045279952/job/27762209657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_p6A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242926/job/27762092520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_pNg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242927/job/27762092342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_nrQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242926/job/27762091949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_owg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242926/job/27762092226"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_nuQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242927/job/27762091961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdr_riw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242927/job/27762092939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtno0Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045242926/job/27763796177"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdsHMtA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27762216116"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdsILkw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15024&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1282b96a46d91b24e84e0b3ab57dc2fab77c3110",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2024-07-22T17:51:01Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz4Mg",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846967/job/27763996722"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz46Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846974/job/27763996905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz4Pw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846969/job/27763996735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz3Lg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846709/job/27763996462"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz1vA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846708/job/27763996092"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz4Xw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846709/job/27763996767"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz5lw",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846967/job/27763997079"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz2xw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846708/job/27763996359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz5cw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846709/job/27763997043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz3-g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846708/job/27763996666"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz5SA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846708/job/27763997000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz1vQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846709/job/27763996093"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdtz6lQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846709/job/27763997333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGduQZEA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10045846708/job/27764463888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdt0PRQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27764002629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdt1MqA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15024&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9ac210925d7dd17bce7a13ef30a185ff158a3a3c",
                "additions": 134,
                "deletions": 132,
                "committedDate": "2024-07-22T22:07:52Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y-rQ",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091683/job/27774467757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y9qw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091710/job/27774467499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y8-Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091689/job/27774467321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y7zQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774467021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y9Yg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774467426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y-4A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774467808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y9dQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091683/job/27774467445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y8dw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774467191"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y9hA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774467460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y7sA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774466992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y6yw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774466763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3y60w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774466771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3zAAA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774468096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd5CuNw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27775774263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd3zbxQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27774475205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGd30Fgg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15024&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-22T17:09:40Z",
        "deletions": 27,
        "files": {
          "nodes": [
            {
              "path": "Archive/Wiedijk100Theorems/AbelRuffini.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Counterexamples/Pseudoelement.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Algebra/Basic.lean",
              "additions": 6,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Algebra/Hom.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/Unitization.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Injective.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/FreeAlgebra.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Bimodule.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Zlattice/Basic.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/Counit.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/Supported.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Polynomial/AlgebraMap.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Polynomial/DenomsClearable.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Polynomial/UnitTrinomial.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/RingQuot.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Metric.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Topology.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Matrix/Kronecker.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Real/Irrational.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/IsAlgClosed/Classification.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/CliffordAlgebra/Basic.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/FreeModule/IdealQuotient.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/FreeProduct/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Adjugate.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/QuadraticForm/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorAlgebra/Basic.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/ClassNumber/AdmissibleCardPowDegree.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/ClassNumber/Finite.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Basic.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Discriminant.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Rat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/FLT/Three.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/LegendreSymbol/QuadraticChar/GaussSum.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/Liouville/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/Liouville/LiouvilleNumber.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/Modular.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/Identities.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/JacobiTheta/OneVariable.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/SlashActions.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/MulChar/Lemmas.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/ClassNumber.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Discriminant.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Embeddings.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/FractionalIdeal.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Norm.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Units/DirichletTheorem.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Maschke.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/FG.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/AlgebraTower.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Discriminant.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal/Norm.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Norm.lean",
              "additions": 8,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/IntegralClosure/IsIntegralClosure/Basic.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Localization/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Localization/FractionRing.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Cyclotomic/Expand.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Cyclotomic/Roots.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/GaussLemma.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Hermite/Gaussian.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Pochhammer.lean",
              "additions": 6,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/RootsOfUnity/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/RootsOfUnity/Minpoly.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/TensorProduct/Basic.lean",
              "additions": 7,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Trace/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/Defs.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/Frobenius.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/InitTail.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/IsPoly.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/MulP.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/StructurePolynomial.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/WittVector/Verschiebung.lean",
              "additions": 2,
              "deletions": 0
            }
          ]
        },
        "headRefName": "mrb/scope_universal_algebra_insts",
        "headRefOid": "9ac210925d7dd17bce7a13ef30a185ff158a3a3c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c52Hg8j",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "name": "merge-conflict"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15024,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y-rQ",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091683/job/27774467757"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y9qw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091710/job/27774467499"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y8-Q",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091689/job/27774467321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y7zQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774467021"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y9Yg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774467426"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y-4A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774467808"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y9dQ",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091683/job/27774467445"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y8dw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774467191"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y9hA",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774467460"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y7sA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774466992"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y6yw",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27774466763"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3y60w",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774466771"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3zAAA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091450/job/27774468096"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd5CuNw",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10049091447/job/27775774263"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd3zbxQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27774475205"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGd30Fgg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15024&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(Algebra.Basic): scope and rename universal `Nat`-algebra and `Int`-algebra instances",
        "updatedAt": "2024-07-31T08:13:54Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15024",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FuA_1",
              "createdAt": "2024-07-22T17:09:46Z",
              "body": "!bench",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FuBTr",
              "createdAt": "2024-07-22T17:10:26Z",
              "body": "### PR summary [9ac210925d](https://github.com/leanprover-community/mathlib4/pull/15024/commits/9ac210925d7dd17bce7a13ef30a185ff158a3a3c)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`- instance (priority := 99) algebraInt : Algebra ℤ R`\n`- instance (priority := 99) algebraNat : Algebra ℕ R`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FuLuU",
              "createdAt": "2024-07-22T17:36:39Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/73888ee8-01d2-444a-9c7c-3ffd9af8e19b) for commit b9f970937b7b1769286e0f7e14d621aac6882cc7.\nThere were [no significant changes](http://speed.lean-fro.org/mathlib4/compare/a4a7e589-145a-4a1d-ac65-a295b4fe7c95/to/73888ee8-01d2-444a-9c7c-3ffd9af8e19b) against commit 5eea94dacbf2df97513cbacc6af669f4358b43ea.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Fvfnd",
              "createdAt": "2024-07-22T21:09:45Z",
              "body": "I don't think these should be scoped. I also thing `Semiring.toNatAlgebra` might be a better name.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FvpRe",
              "createdAt": "2024-07-22T21:38:45Z",
              "body": "We've already seen situations where  a search for `instClassExtendsSMul'` goes through intermediate chaining instances. With `Nat` or `Int` in scope, they get caught up. I think we need some mechanism to limit their scopes. \r\n\r\nI have a separate experiment where I used imports to do this. The advantage of this is specificity. \r\n\r\nDo we have much in the `Semiring/Ring` namespace?",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Fv2C7",
              "createdAt": "2024-07-22T22:23:30Z",
              "body": "`AddCommMonoid.natModule` is precedent for putting things in the `Semiring` namespace here. I'd argue that we should have a `to` prefix rather than `inst`, since this could be implemented as inheritance.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QcXf0zwAAAAMuwtFW",
              "createdAt": "2024-07-27T19:36:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
