{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 200,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alreadydone"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "4 files have major changes:\r\n\r\n[Algebra/CovariantAndContravariant.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-764d54e9aec88678ce0ea3815466659fa7157fd2eedcc0ff412e1dd0d29dd1e1)\r\n+ Add new theorem `contravariant_le_iff_contravariant_lt_and_eq`.\r\n+ Add `covariantClass_le_of_lt` generalizing and replacing `Mul.to_covariantClass_left/right` in Algebra/Order/Monoid/Defs.lean\r\n+ Replace `CommSemigroup` by `IsSymmOp N N mu` and replace `CancelSemigroup` by `IsMulCancel`, removing superfluous associativity assumption.\r\n+ new theorems `covariant_lt_of_covariant_le_of_contravariant_eq` and `contravariant_le_of_contravariant_eq_and_lt` that could replace eight instances when appropriate refactoring is in place.\r\n+ Golfs\r\n+ Fix changed names in other files.\r\n\r\n[Algebra/Order/Monoid/Lemmas.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-c2487d6e6723908a2b225ada734c34973df02568470b006d117f1d5dc02279f9)\r\n+ Generalize `mul_eq_mul_iff_eq_and_eq` and remove the less general `Left/Right.mul_eq_mul_iff_eq_and_eq`.\r\n+ Move `mul_le_mul_iff_of_ge`.\r\n+ Introduce the more general Left/Right versions of `min_le_max_of_mul_le_mul`.\r\n+ Move `min_lt_max_of_mul_lt_mul` here from [Algebra/GroupPower/Order.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-85059824b1e928b1e837ac778960d991bfe9d6cb1809f5c4fdc4151432967790).\r\n+ Replace `CommSemigroup` by `IsSymmOp`.\r\n\r\n[Algebra/Order/Monoid/Basic.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-d69116bc1a74c9c0fa2567f6b46ba380d7d96f5463378477fe6165a612286bae)\r\n+ Remove `eq_and_eq_of_le_of_le_of_mul_le` as it's just one direction of `mul_le_mul_iff_of_ge` but with more assumptions.\r\n\r\n[Algebra/Order/Ring/Lemmas.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-84a9a84aac2261f2bf7bb093c52ff380fa59f0cc849c9d8a935e38625b870d42)\r\n+ Generalize two versions of `mul_eq_mul_iff_eq_and_eq_of_pos`\r\n+ Golfs\r\n\r\nChanges to [Algebra/Group/UniqueProds.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-ebdf20b185bac5adc5a22ffdf53e7dfa74bb23fb34dfa47a761bb9dfa66c9fc1) and [Algebra/MonoidAlgebra/NoZeroDivisors.lean](https://github.com/leanprover-community/mathlib4/pull/6677/files#diff-01c7904bf1227e1223f180ad94ac7d7633b93d65e529385deb6d10dd7655b5e0) are in declarations that will be removed by #6723.\r\n\r\n---\r\n\r\nThis stemmed from the issue #6646, but it was later discovered that loopy instances can slow down instance search significantly, so this PR now only generalize existing instances without adding any.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 13,
        "closed": true,
        "closedAt": "2023-09-14T11:42:41Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5k99u2",
              "body": "Regarding IsSymmOp: it works because there are instances [CommSemigroup.to_isCommutative](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Group/Defs.html#CommSemigroup.to_isCommutative) and [isSymmOp_of_isCommutative](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Init/Algebra/Classes.html#isSymmOp_of_isCommutative). Because of the latter instance, I opted for IsSymmOp instead of IsCommutative to make the co(ntra)variance instances maximally applicable. In fact, IsSymmOp is more general as it takes an operation of signature `α → α → β` while IsCommutative takes `α → α → α`, but Co(ntra)variantClasses (which takes `α → β → β`) forces `α = β` so we don't actually gain extra generality by using IsSymmOp.",
              "createdAt": "2023-08-25T21:41:30Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lDHbh",
              "body": "Would you separating this PR into:\r\n* a PR that just generalises the lemmas without using mixin typeclasses in new ways\r\n* a PR that introduces the new uses of mixin typeclasses",
              "createdAt": "2023-08-28T09:03:13Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lPAIV",
              "body": "By \"using mixin typeclasses in new ways\" I assume you mean these three segments:\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-84a9a84aac2261f2bf7bb093c52ff380fa59f0cc849c9d8a935e38625b870d42L1025-R1040\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-c2487d6e6723908a2b225ada734c34973df02568470b006d117f1d5dc02279f9L1613-R1668\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-764d54e9aec88678ce0ea3815466659fa7157fd2eedcc0ff412e1dd0d29dd1e1L358-R386\r\n\r\nor would you include this as well?\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-764d54e9aec88678ce0ea3815466659fa7157fd2eedcc0ff412e1dd0d29dd1e1L315-R323\r\nCertainly after such changes Lean would need to find both the `Mul`/`Add` instance and the `IsSymmOp` instance separately rather than a single `CommSemigroup` instance.\r\n\r\nI can certainly separate the changes but what would be the point? Do you want to benchmark both changes separately?",
              "createdAt": "2023-08-30T03:26:42Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lTQZc",
              "body": "I would include all four segments, yes. The point is that the other generalisations are noncontroversial, while the ones which involve breaking up big typeclasses into a bunch of mixins are less clearly an improvement  (you may remember that the introduction of `ZeroLEOne` has led to countlessly many elaboration issues).",
              "createdAt": "2023-08-30T17:05:05Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mPzIM",
              "body": "!bench",
              "createdAt": "2023-09-12T10:10:45Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mQEGp",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/e80d5056-ccf1-43f3-8e0a-85a150347d41) for commit 6bceebdee36ed64a8d72fe5123be38d8469eb185.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/5619f0de-5d7c-4988-a65d-2264c38d5383/to/e80d5056-ccf1-43f3-8e0a-85a150347d41) against commit 8283eb95d1d5e3cf4aef18d45b6b5bacc2f4092d:\n```diff\n  Benchmark                                    Metric         Change\n  ==================================================================\n+ ~Mathlib.Algebra.CovariantAndContravariant   instructions   -20.9%\n+ ~Mathlib.Algebra.Order.Group.Abs             instructions    -5.2%\n+ ~Mathlib.Algebra.Order.Group.Bounds          instructions   -12.8%\n+ ~Mathlib.Algebra.Order.Monoid.Basic          instructions    -9.3%\n+ ~Mathlib.Algebra.Order.Monoid.Defs           instructions    -5.1%\n+ ~Mathlib.Algebra.Order.Ring.Defs             instructions    -7.6%\n- ~Mathlib.Data.Fin.Basic                      instructions    15.7%\n+ ~Mathlib.Data.PNat.Find                      instructions    -7.7%\n```",
              "createdAt": "2023-09-12T10:46:13Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mQVcU",
              "body": "I agree with @YaelDillies that it would be nice if this PR can be split. Do you think that's possible?",
              "createdAt": "2023-09-12T11:36:59Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mSjPa",
              "body": "For now I reverted those instances that were changed to use the mixin, but not the theorems, as they're less likely to slow things down.",
              "createdAt": "2023-09-12T17:24:16Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mTEUv",
              "body": "!bench",
              "createdAt": "2023-09-12T19:09:48Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mTZaT",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/a9c3132e-3096-4e92-8efe-22919c72058f) for commit d339565711fe76c37d0bdc2b3206f8f3e042185a.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/a06558a3-29fa-4299-a3b9-9bb8924b25b9/to/a9c3132e-3096-4e92-8efe-22919c72058f) against commit 02719d54c67186cad556eb021344cc389221a83f:\n```diff\n  Benchmark                                    Metric         Change\n  ==================================================================\n+ ~Mathlib.Algebra.CovariantAndContravariant   instructions   -12.7%\n+ ~Mathlib.Algebra.Order.Monoid.Basic          instructions    -9.8%\n```",
              "createdAt": "2023-09-12T20:14:16Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mcYtG",
              "body": "Benchmark is all green and given the thumb up, I assume that @YaelDillies is happy with the current state. Does it mean we can merge this now?",
              "createdAt": "2023-09-14T03:40:24Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mdFv2",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2023-09-14T07:22:15Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mekyk",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6184027774/job/16786918827)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6184027774/job/16786919063)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6184027774/job/16786918606)",
              "createdAt": "2023-09-14T11:42:39Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d423ccfb2419ea4bc70da9e02659eaa979bafa7a",
                "additions": 175,
                "deletions": 213,
                "committedDate": "2023-08-19T03:53:23Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6ce0705b50b9604e66612feed131127e4ca15fab",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-08-20T05:17:29Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6f9954121bd0274411de266ade8a0508032ea5f6",
                "additions": 26,
                "deletions": 30,
                "committedDate": "2023-08-23T08:20:50Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2ff21146c632893b05347d5c9683befeff638144",
                "additions": 5695,
                "deletions": 3983,
                "committedDate": "2023-08-23T08:23:40Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "178ca52e2292587ecd0844374c8654ffbfc32c7e",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-23T08:26:01Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f7ead9fc33820fc2ed8d0fb5bcd416508666c773",
                "additions": 5695,
                "deletions": 3983,
                "committedDate": "2023-08-23T08:26:03Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "52ef8874d16469fc7a6e896b31818143fd80b941",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-23T08:29:04Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "811b06e6f08d6a75cc9dfa91b4908d1c5428c425",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-23T08:58:25Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f0a329c96cd45ac78c8cd94ae554f51e89eba150",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-23T08:58:30Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0657dae48f003ec62d1639b224594d182895e83f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-23T09:09:45Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5d9bcce115944cf531cebec136a9a3e325037b7b",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-24T04:10:38Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9183d3012e0dddd03ceea1e10509f9cae8140aba",
                "additions": 3,
                "deletions": 14,
                "committedDate": "2023-08-24T04:14:49Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a3284892681784f3faa24839ed90d8ffbd220f04",
                "additions": 8,
                "deletions": 2,
                "committedDate": "2023-08-24T14:45:24Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "db4431dbb78984a514b72ab44acd3274bcc26070",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-08-24T15:57:28Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "defe8ecf4f66d4c304f178ddeccb1c4a59c787ef",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-08-24T17:15:14Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b37307e4f65655e0c47265e56b9834b8bb3651b7",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-24T18:01:00Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "37c7d93fcb330b1d8aa15504be38f719e0d37172",
                "additions": 5,
                "deletions": 4,
                "committedDate": "2023-08-24T18:59:26Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1cc1242e3d0ca10a8ac8fad89f45b4db3dcbdd46",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2023-08-24T19:26:23Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6bceebdee36ed64a8d72fe5123be38d8469eb185",
                "additions": 5,
                "deletions": 4,
                "committedDate": "2023-08-24T19:26:49Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "330d0ef7c0d5e51f88131ff99090c484e358c1de",
                "additions": 26431,
                "deletions": 10352,
                "committedDate": "2023-09-12T16:30:51Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9e3e8921a507f53b144cd92bc355aece3d4ff830",
                "additions": 14,
                "deletions": 12,
                "committedDate": "2023-09-12T17:00:27Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4df920d85b6e01220a21ce185ed60ff0d2c626f5",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-09-12T17:12:32Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9e6dca5723dd9a77d2d5405b8c43ca65df9cc5e9",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-12T17:28:49Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d339565711fe76c37d0bdc2b3206f8f3e042185a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-12T17:36:42Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-19T03:54:35Z",
        "deletions": 247,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/CovariantAndContravariant.lean",
              "additions": 72,
              "deletions": 73
            },
            {
              "path": "Mathlib/Algebra/Group/UniqueProds.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/GroupPower/Order.lean",
              "additions": 3,
              "deletions": 14
            },
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/NoZeroDivisors.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Basic.lean",
              "additions": 0,
              "deletions": 13
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Cancel/Defs.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Defs.lean",
              "additions": 5,
              "deletions": 23
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Lemmas.lean",
              "additions": 75,
              "deletions": 78
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Lemmas.lean",
              "additions": 33,
              "deletions": 33
            },
            {
              "path": "Mathlib/Algebra/Order/Sub/Defs.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/DFinsupp/Lex.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finsupp/Lex.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Polynomial/Degree/Definitions.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "Co(ntra)variant",
        "headRefOid": "d339565711fe76c37d0bdc2b3206f8f3e042185a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YSwQO",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fD6mw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-08-25T05:07:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g7_x9",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-14T08:39:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g7ULm",
              "body": "I much prefer this diff. Thanks!\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-14T07:22:03Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6677,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fCKfD",
              "body": "LGTM!\r\n\r\nI like the suggested changes/refactors!\r\n\r\n* I am surprised to see how having `and` assumptions/conclusions works so smoothly.\r\n* I like the move towards \"generic\" operations, rather than have to duplicate code and support only `Add` and `Mul`.  I have a vague recollection that Lean3 had difficulty with this.\r\n* Another difficulty that I remember with Lean3 was the `IsSymmOp`, but the fact that the PR builds is a good sign!  (Or maybe `is_comm` was deprecated in Lean3?)\r\n* The (longer term) proposal to redefine `Cancel` in favour of `Contravariance` also seems a good idea and might unify some proofs.\r\n\r\nAh, one more comment: in Lean3, I remember that using `swap` in `Co(ntra)variantClass`es worked better than `flip`, but then `flip` was good for proofs.  Again, maybe this is a longer term suggestion, but we could try to verify if we can now uniformize to just `swap`/just `flip`.\r\n",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-08-25T03:56:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fDvSG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-25T04:23:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fDvhW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-25T04:24:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fDwXP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-25T04:27:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fD6mw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-08-25T05:07:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g7ULm",
              "body": "I much prefer this diff. Thanks!\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-09-14T07:22:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5g7_x9",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-14T08:39:17Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nxh8y",
                    "body": "```suggestion\n  let _ := covariantClass_le_of_lt M M (· * ·)\n```\nAny reason to prefer `haveI` over `let`?  Honestly, I don't either, but I think someone mentioned that `let` is the preferred spelling for instances now.  🤷",
                    "createdAt": "2023-08-24T20:25:34Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NyoTW",
                    "body": "I'm not in favor of the underscore, but if it's the convention then so be it!",
                    "createdAt": "2023-08-25T04:24:39Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NyoxX",
                    "body": "Actually, since `haveI` was already in the original code let me not change it; we could do a global find-and-replace sometime.",
                    "createdAt": "2023-08-25T04:27:15Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nyu5c",
                    "body": "I'm happy to leave as is.  [This comment on Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/.E2.9C.94.20OfNat.2C.20Subtypes.20issues.20for.20ConvexCone.2EPointed/near/379317740) mentions the `haveI` vs `let` question.  Still, I am not sure whether the reason for preferring `let` is simply \"because now it works\".",
                    "createdAt": "2023-08-25T05:07:49Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NxmmG",
                    "body": "I remember a recent thread where Sebastian was asking about issues with TC loops.  He might have been interested specifically in bugs, and the performance hit might be one.\n\nIf you can't find the thread on Zulip, I'll look for it when I am at a computer.",
                    "createdAt": "2023-08-24T20:46:21Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NyoIH",
                    "body": "I've reported the covariantClass_le_of_lt problem on Zulip [in this thread](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/type.20class.20inference.20looping/near/387182915) which Sebastian is in. ",
                    "createdAt": "2023-08-25T04:23:25Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore(Co(ntra)variantClass): generalize and remove duplicates",
        "updatedAt": "2023-09-14T11:42:56Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6677",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d423ccfb2419ea4bc70da9e02659eaa979bafa7a"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJcGesL",
              "createdAt": "2023-08-19T03:54:35Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJcGesN",
              "createdAt": "2023-08-19T03:54:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJcGesP",
              "createdAt": "2023-08-19T03:54:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OB4fP",
              "createdAt": "2023-08-19T04:11:55Z",
              "source": {
                "id": "I_kwDOFcwZ1c5uos3g",
                "title": "Make use of loopy instances for implications between Co(ntra)variantClasses",
                "url": "https://github.com/leanprover-community/mathlib4/issues/6646"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6ce0705b50b9604e66612feed131127e4ca15fab"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJd6aPD",
              "createdAt": "2023-08-23T05:07:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6f9954121bd0274411de266ade8a0508032ea5f6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2ff21146c632893b05347d5c9683befeff638144"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJeAaRD",
              "createdAt": "2023-08-23T08:23:55Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJeAaRL",
              "createdAt": "2023-08-23T08:23:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJeAaRi",
              "createdAt": "2023-08-23T08:23:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c5ut89szwAAAAJeAay6",
              "createdAt": "2023-08-23T08:24:06Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "178ca52e2292587ecd0844374c8654ffbfc32c7e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f7ead9fc33820fc2ed8d0fb5bcd416508666c773"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "52ef8874d16469fc7a6e896b31818143fd80b941"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "811b06e6f08d6a75cc9dfa91b4908d1c5428c425"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f0a329c96cd45ac78c8cd94ae554f51e89eba150"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0657dae48f003ec62d1639b224594d182895e83f"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJeMBqE",
              "createdAt": "2023-08-23T13:22:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJeMBqP",
              "createdAt": "2023-08-23T13:22:30Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5d9bcce115944cf531cebec136a9a3e325037b7b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9183d3012e0dddd03ceea1e10509f9cae8140aba"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJekqDs",
              "createdAt": "2023-08-24T04:16:06Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJekqDu",
              "createdAt": "2023-08-24T04:16:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a3284892681784f3faa24839ed90d8ffbd220f04"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db4431dbb78984a514b72ab44acd3274bcc26070"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "defe8ecf4f66d4c304f178ddeccb1c4a59c787ef"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b37307e4f65655e0c47265e56b9834b8bb3651b7"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJfDjlN",
              "createdAt": "2023-08-24T18:25:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJfD5vn",
              "createdAt": "2023-08-24T18:34:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJfD5vs",
              "createdAt": "2023-08-24T18:34:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "37c7d93fcb330b1d8aa15504be38f719e0d37172"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1cc1242e3d0ca10a8ac8fad89f45b4db3dcbdd46"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6bceebdee36ed64a8d72fe5123be38d8469eb185"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5ut89szwAAAAJfFrR1",
              "createdAt": "2023-08-24T19:28:56Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5NDY3NzQ1",
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fCKfD",
              "createdAt": "2023-08-24T20:25:34Z",
              "body": "LGTM!\r\n\r\nI like the suggested changes/refactors!\r\n\r\n* I am surprised to see how having `and` assumptions/conclusions works so smoothly.\r\n* I like the move towards \"generic\" operations, rather than have to duplicate code and support only `Add` and `Mul`.  I have a vague recollection that Lean3 had difficulty with this.\r\n* Another difficulty that I remember with Lean3 was the `IsSymmOp`, but the fact that the PR builds is a good sign!  (Or maybe `is_comm` was deprecated in Lean3?)\r\n* The (longer term) proposal to redefine `Cancel` in favour of `Contravariance` also seems a good idea and might unify some proofs.\r\n\r\nAh, one more comment: in Lean3, I remember that using `swap` in `Co(ntra)variantClass`es worked better than `flip`, but then `flip` was good for proofs.  Again, maybe this is a longer term suggestion, but we could try to verify if we can now uniformize to just `swap`/just `flip`.\r\n",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k99u2",
              "createdAt": "2023-08-25T21:41:30Z",
              "body": "Regarding IsSymmOp: it works because there are instances [CommSemigroup.to_isCommutative](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Group/Defs.html#CommSemigroup.to_isCommutative) and [isSymmOp_of_isCommutative](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Init/Algebra/Classes.html#isSymmOp_of_isCommutative). Because of the latter instance, I opted for IsSymmOp instead of IsCommutative to make the co(ntra)variance instances maximally applicable. In fact, IsSymmOp is more general as it takes an operation of signature `α → α → β` while IsCommutative takes `α → α → α`, but Co(ntra)variantClasses (which takes `α → β → β`) forces `α = β` so we don't actually gain extra generality by using IsSymmOp.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lDHbh",
              "createdAt": "2023-08-28T09:03:13Z",
              "body": "Would you separating this PR into:\r\n* a PR that just generalises the lemmas without using mixin typeclasses in new ways\r\n* a PR that introduces the new uses of mixin typeclasses",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lPAIV",
              "createdAt": "2023-08-30T03:26:42Z",
              "body": "By \"using mixin typeclasses in new ways\" I assume you mean these three segments:\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-84a9a84aac2261f2bf7bb093c52ff380fa59f0cc849c9d8a935e38625b870d42L1025-R1040\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-c2487d6e6723908a2b225ada734c34973df02568470b006d117f1d5dc02279f9L1613-R1668\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-764d54e9aec88678ce0ea3815466659fa7157fd2eedcc0ff412e1dd0d29dd1e1L358-R386\r\n\r\nor would you include this as well?\r\nhttps://github.com/leanprover-community/mathlib4/pull/6677/files#diff-764d54e9aec88678ce0ea3815466659fa7157fd2eedcc0ff412e1dd0d29dd1e1L315-R323\r\nCertainly after such changes Lean would need to find both the `Mul`/`Add` instance and the `IsSymmOp` instance separately rather than a single `CommSemigroup` instance.\r\n\r\nI can certainly separate the changes but what would be the point? Do you want to benchmark both changes separately?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lTQZc",
              "createdAt": "2023-08-30T17:05:05Z",
              "body": "I would include all four segments, yes. The point is that the other generalisations are noncontroversial, while the ones which involve breaking up big typeclasses into a bunch of mixins are less clearly an improvement  (you may remember that the introduction of `ZeroLEOne` has led to countlessly many elaboration issues).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mPzIM",
              "createdAt": "2023-09-12T10:10:45Z",
              "body": "!bench",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mQEGp",
              "createdAt": "2023-09-12T10:46:13Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/e80d5056-ccf1-43f3-8e0a-85a150347d41) for commit 6bceebdee36ed64a8d72fe5123be38d8469eb185.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/5619f0de-5d7c-4988-a65d-2264c38d5383/to/e80d5056-ccf1-43f3-8e0a-85a150347d41) against commit 8283eb95d1d5e3cf4aef18d45b6b5bacc2f4092d:\n```diff\n  Benchmark                                    Metric         Change\n  ==================================================================\n+ ~Mathlib.Algebra.CovariantAndContravariant   instructions   -20.9%\n+ ~Mathlib.Algebra.Order.Group.Abs             instructions    -5.2%\n+ ~Mathlib.Algebra.Order.Group.Bounds          instructions   -12.8%\n+ ~Mathlib.Algebra.Order.Monoid.Basic          instructions    -9.3%\n+ ~Mathlib.Algebra.Order.Monoid.Defs           instructions    -5.1%\n+ ~Mathlib.Algebra.Order.Ring.Defs             instructions    -7.6%\n- ~Mathlib.Data.Fin.Basic                      instructions    15.7%\n+ ~Mathlib.Data.PNat.Find                      instructions    -7.7%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mQVcU",
              "createdAt": "2023-09-12T11:36:59Z",
              "body": "I agree with @YaelDillies that it would be nice if this PR can be split. Do you think that's possible?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "330d0ef7c0d5e51f88131ff99090c484e358c1de"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9e3e8921a507f53b144cd92bc355aece3d4ff830"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4df920d85b6e01220a21ce185ed60ff0d2c626f5"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mSjPa",
              "createdAt": "2023-09-12T17:24:16Z",
              "body": "For now I reverted those instances that were changed to use the mixin, but not the theorems, as they're less likely to slow things down.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9e6dca5723dd9a77d2d5405b8c43ca65df9cc5e9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d339565711fe76c37d0bdc2b3206f8f3e042185a"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mTEUv",
              "createdAt": "2023-09-12T19:09:48Z",
              "body": "!bench",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mTZaT",
              "createdAt": "2023-09-12T20:14:16Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/a9c3132e-3096-4e92-8efe-22919c72058f) for commit d339565711fe76c37d0bdc2b3206f8f3e042185a.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/a06558a3-29fa-4299-a3b9-9bb8924b25b9/to/a9c3132e-3096-4e92-8efe-22919c72058f) against commit 02719d54c67186cad556eb021344cc389221a83f:\n```diff\n  Benchmark                                    Metric         Change\n  ==================================================================\n+ ~Mathlib.Algebra.CovariantAndContravariant   instructions   -12.7%\n+ ~Mathlib.Algebra.Order.Monoid.Basic          instructions    -9.8%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mcYtG",
              "createdAt": "2023-09-14T03:40:24Z",
              "body": "Benchmark is all green and given the thumb up, I assume that @YaelDillies is happy with the current state. Does it mean we can merge this now?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g7ULm",
              "createdAt": "2023-09-14T07:22:04Z",
              "body": "I much prefer this diff. Thanks!\r\n\r\nmaintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mdFv2",
              "createdAt": "2023-09-14T07:22:15Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5g7_x9",
              "createdAt": "2023-09-14T08:39:17Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ut89szwAAAAJqDXMp",
              "createdAt": "2023-09-14T08:39:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ut89szwAAAAJqDXPp",
              "createdAt": "2023-09-14T08:39:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Oanqz",
              "createdAt": "2023-09-14T10:55:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Yl1Dk",
                "title": "[Merged by Bors] - feat(UniqueProds): subsingleton and MulOpposite lemmas",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6755"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mekyk",
              "createdAt": "2023-09-14T11:42:39Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6184027774/job/16786918827)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6184027774/job/16786919063)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6184027774/job/16786918606)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5ut89szwAAAAJqLDLO",
              "createdAt": "2023-09-14T11:42:41Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5ut89szwAAAAJqLDuG",
              "createdAt": "2023-09-14T11:42:56Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
