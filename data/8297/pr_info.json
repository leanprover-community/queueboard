{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 16,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The new precedences match `coeNotation` in core:\r\n```lean\r\nsyntax:1024 (name := coeNotation) \"↑\" term:1024 : term\r\n```\r\n\r\nThey also match the precedence in Lean 3.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 7,
        "closed": true,
        "closedAt": "2023-11-09T20:27:18Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5riOVg",
              "body": "Should these precedences match core? I have never written `(⇑ f) x`, and also almost never written the same thing without parentheses, because you can just leave off the `⇑`. So the only case where you want to write `⇑` and there is a difference in behavior, the new behavior results in more parentheses... Same for `CoeSort`.",
              "createdAt": "2023-11-09T16:15:32Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5riaji",
              "body": "It looks like @semorrison picked the precedence in https://github.com/leanprover-community/mathlib4/commit/4ae6234f47e033cd6e02ceeb15158d39ee4bd302#diff-636d261ac5965ad7cb2737fa2e78728ffd4201fa881999003c4dae5a8dcaea39. Pinging @digama0, who suggested the precedence change in the first place.",
              "createdAt": "2023-11-09T16:44:42Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rikJt",
              "body": "Discussion is also here: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Bringing.20back.20.E2.87.91, in particular I wrote\r\n> I also don't care too much in [#8297](https://github.com/leanprover-community/mathlib4/pull/8297), and would definitely not block it, but when looking at the changes I was wondering whether it was actually a regression.\r\nIt's counterintuitive that ↑ and ⇑ have different precedences, and maybe that weighs stronger than a few extra parentheses.",
              "createdAt": "2023-11-09T17:08:07Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rjY4e",
              "body": "bors merge",
              "createdAt": "2023-11-09T19:09:23Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rkHzy",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6816343249/job/18537443514)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6816343249/job/18537443720)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6816343249/job/18537443232)",
              "createdAt": "2023-11-09T20:27:17Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7d5c9913712cb3277ea1ea3ba374a7b68fd24d3f",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-11-09T13:16:44Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2665f0be3b189ba9297105592de65d7823a8d6b4",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-09T13:18:56Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "565f392a243b4e7a7e730f9aa0fc4014fdec27cd",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-11-09T14:01:52Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d2068df1e0e66a9891c32e0a1374b172c59460c8",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-09T14:19:37Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e9d4bd87c4fe73fd459dc8ab3f106014403aec64",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-09T14:22:40Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9d599240f68b71dada4f48583705d0d3bd4f7ff7",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-09T15:40:46Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f704b5c087ae16003bdcd142e4afdff3fc94eabd",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-09T16:17:11Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-09T13:17:57Z",
        "deletions": 17,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/DFinsupp/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/Ray.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/MeasurableSpace/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Hom/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Tactic/Coe.lean",
              "additions": 3,
              "deletions": 4
            }
          ]
        },
        "headRefName": "eric-wieser/fix-coe-precedence",
        "headRefOid": "f704b5c087ae16003bdcd142e4afdff3fc94eabd",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fCKJl",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8297,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix: correct precedence for coercion arrows",
        "updatedAt": "2023-11-09T20:27:21Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8297",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7d5c9913712cb3277ea1ea3ba374a7b68fd24d3f"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52WfXwzwAAAAKKeO0V",
              "createdAt": "2023-11-09T13:17:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52WfXwzwAAAAKKeQ1t",
              "createdAt": "2023-11-09T13:18:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2665f0be3b189ba9297105592de65d7823a8d6b4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "565f392a243b4e7a7e730f9aa0fc4014fdec27cd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d2068df1e0e66a9891c32e0a1374b172c59460c8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e9d4bd87c4fe73fd459dc8ab3f106014403aec64"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9d599240f68b71dada4f48583705d0d3bd4f7ff7"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5riOVg",
              "createdAt": "2023-11-09T16:15:32Z",
              "body": "Should these precedences match core? I have never written `(⇑ f) x`, and also almost never written the same thing without parentheses, because you can just leave off the `⇑`. So the only case where you want to write `⇑` and there is a difference in behavior, the new behavior results in more parentheses... Same for `CoeSort`.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f704b5c087ae16003bdcd142e4afdff3fc94eabd"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52WfXwzwAAAAKKnAVf",
              "createdAt": "2023-11-09T16:26:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5riaji",
              "createdAt": "2023-11-09T16:44:42Z",
              "body": "It looks like @semorrison picked the precedence in https://github.com/leanprover-community/mathlib4/commit/4ae6234f47e033cd6e02ceeb15158d39ee4bd302#diff-636d261ac5965ad7cb2737fa2e78728ffd4201fa881999003c4dae5a8dcaea39. Pinging @digama0, who suggested the precedence change in the first place.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOH5Wj9M5PS3DU",
              "createdAt": "2023-11-09T16:59:53Z",
              "source": {
                "id": "PR_kwDOH5Wj9M5e9G9e",
                "title": "feat: Upstream the coercion arrows from mathlib, and use them in the coe delaborator",
                "url": "https://github.com/leanprover-community/batteries/pull/354"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rikJt",
              "createdAt": "2023-11-09T17:08:07Z",
              "body": "Discussion is also here: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Bringing.20back.20.E2.87.91, in particular I wrote\r\n> I also don't care too much in [#8297](https://github.com/leanprover-community/mathlib4/pull/8297), and would definitely not block it, but when looking at the changes I was wondering whether it was actually a regression.\r\nIt's counterintuitive that ↑ and ⇑ have different precedences, and maybe that weighs stronger than a few extra parentheses.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rjY4e",
              "createdAt": "2023-11-09T19:09:23Z",
              "body": "bors merge",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52WfXwzwAAAAKKtHAS",
              "createdAt": "2023-11-09T19:09:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52WfXwzwAAAAKKtHC4",
              "createdAt": "2023-11-09T19:09:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rkHzy",
              "createdAt": "2023-11-09T20:27:17Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6816343249/job/18537443514)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6816343249/job/18537443720)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6816343249/job/18537443232)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52WfXwzwAAAAKKvrhU",
              "createdAt": "2023-11-09T20:27:18Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52WfXwzwAAAAKKvroj",
              "createdAt": "2023-11-09T20:27:21Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
