{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 3645,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "101damnations"
        },
        "baseRefName": "master",
        "body": "Given a commutative ring `k` and a group `G`, this file shows that a short exact sequence of\r\n`k`-linear `G`-representations `0 ‚ü∂ X‚ÇÅ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÉ ‚ü∂ 0` induces a short exact sequence of\r\ncomplexes of inhomogeneous chains `0 ‚ü∂ C(X‚ÇÅ) ‚ü∂ C(X‚ÇÇ) ‚ü∂ C(X‚ÇÉ) ‚ü∂ 0`, where `H‚Çô(C(X·µ¢))`\r\nis the `n`th group homology of `X·µ¢`.\r\nThis allows us to specialize API about long exact sequences to group homology; in this PR we focus on degrees `n = 0, 1, 2`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [ ] depends on: #21652 \r\n- [ ] depends on: #21732 \r\n- [ ] depends on: #21733 \r\n- [ ] depends on: #21735 \r\n- [ ] depends on: #21736 \r\n- [ ] depends on: #21738 \r\n- [ ] depends on: #21740 \r\n- [ ] depends on: #21752 \r\n- [ ] depends on: #21754 \r\n- [ ] depends on: #21755 \r\n- [ ] depends on: #21757 \r\n- [ ] depends on: #21759 \r\n- [ ] depends on: #21763 \r\n- [ ] depends on: #21764 \r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 36,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6eGemk",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#21652~~\n* leanprover-community/mathlib4#21732\n* leanprover-community/mathlib4#21733\n* leanprover-community/mathlib4#21735\n* leanprover-community/mathlib4#21736\n* leanprover-community/mathlib4#21738\n* leanprover-community/mathlib4#21740\n* leanprover-community/mathlib4#21752\n* leanprover-community/mathlib4#21754\n* leanprover-community/mathlib4#21755\n* leanprover-community/mathlib4#21757\n* leanprover-community/mathlib4#21759\n* leanprover-community/mathlib4#21763\n* leanprover-community/mathlib4#21764\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-02-12T02:23:26Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6eG1Bg",
              "body": "### PR summary [35cd1d3a4e](https://github.com/leanprover-community/mathlib4/pull/21766/commits/35cd1d3a4e2d3aec3f6c6de58c091fae2c72c943)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.RepresentationTheory.GroupCohomology.Basic | 1607 | 0 | -1607 (-100.00%) |\n| Mathlib.RepresentationTheory.GroupCohomology.Resolution | 1606 | 0 | -1606 (-100.00%) |\n| Mathlib.CategoryTheory.Action.Monoidal | 1010 | 1030 | +20 (+1.98%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.RepresentationTheory.GroupCohomology.Hilbert90`|-1807|\n| `Mathlib.RepresentationTheory.GroupCohomology.LowDegree`|-1802|\n| `Mathlib.RepresentationTheory.GroupCohomology.Basic`|-1607|\n| `Mathlib.RepresentationTheory.GroupCohomology.Resolution`|-1606|\n|<details><summary>3 files</summary> `Mathlib.RepresentationTheory.Character` `Mathlib.RepresentationTheory.FDRep` `Mathlib.RepresentationTheory.Invariants`</details>|2|\n| `Mathlib.RepresentationTheory.Rep`|7|\n| `Mathlib.CategoryTheory.Action.Monoidal`|20|\n| `Mathlib.RepresentationTheory.Coinvariants` (new file)|1523|\n| `Mathlib.RepresentationTheory.Homological.Resolution` (new file)|1604|\n| `Mathlib.RepresentationTheory.Homological.GroupCohomology.Basic` (new file)|1605|\n| `Mathlib.RepresentationTheory.Homological.GroupHomology.Basic` (new file)|1606|\n| `Mathlib.RepresentationTheory.Homological.GroupCohomology.LowDegree`|1801|\n| `Mathlib.RepresentationTheory.Homological.GroupHomology.LowDegree` (new file)|1805|\n| `Mathlib.RepresentationTheory.Homological.GroupCohomology.Hilbert90` `Mathlib.RepresentationTheory.Homological.GroupHomology.Functoriality` (new file)|1806|\n| `Mathlib.RepresentationTheory.Homological.GroupHomology.LongExactSequence` (new file)|1808|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ H0`\n`+ H0LequivOfIsTrivial`\n`+ H0LequivOfIsTrivial_mk`\n`+ H0LequivOfIsTrivial_symm_apply`\n`+ H0LequivOfIsTrivial_symm_eq_œÄ`\n`+ H0Map`\n`+ H0Map_comp`\n`+ H0Map_eq_coinvariantsFunctor_map`\n`+ H0Map_id`\n`+ H0ShortComplex‚ÇÅ`\n`+ H0ShortComplex‚ÇÅ_exact`\n`+ H0ShortComplex‚ÇÇ`\n`+ H0ShortComplex‚ÇÇ_exact`\n`+ H0œÄ`\n`+ H0œÄ_comp_H0Map`\n`+ H0œÄ_eq_iff`\n`+ H0œÄ_eq_zero_iff`\n`+ H1`\n`+ H1Map`\n`+ H1Map_comp`\n`+ H1Map_id`\n`+ H1Map_id_comp`\n`+ H1ShortComplex‚ÇÅ`\n`+ H1ShortComplex‚ÇÅ_exact`\n`+ H1ShortComplex‚ÇÇ`\n`+ H1ShortComplex‚ÇÇ_exact`\n`+ H1ShortComplex‚ÇÉ`\n`+ H1ShortComplex‚ÇÉ_exact`\n`+ H1œÄ`\n`+ H1œÄ_comp_H1Map`\n`+ H1œÄ_eq_iff`\n`+ H1œÄ_eq_zero_iff`\n`+ H2`\n`+ H2Map`\n`+ H2Map_comp`\n`+ H2Map_id`\n`+ H2Map_id_comp`\n`+ H2ShortComplex‚ÇÉ`\n`+ H2ShortComplex‚ÇÉ_exact`\n`+ H2œÄ`\n`+ H2œÄ_comp_H2Map`\n`+ H2œÄ_eq_iff`\n`+ H2œÄ_eq_zero_iff`\n`+ IsOneBoundary`\n`+ IsOneCycle`\n`+ IsTwoBoundary`\n`+ IsTwoCycle`\n`+ IsZeroBoundary`\n`+ Rep.standardComplex`\n`+ Tor`\n`+ apply_bijective`\n`+ augmentationSubmodule`\n`+ augmentationSubmoduleOfIsZeroBoundary`\n`+ augmentationSubmodule_eq_bot_of_isTrivial`\n`+ barComplex`\n`+ barResolution`\n`+ barResolution.extIso`\n`+ chainsFunctor`\n`+ chainsMap`\n`+ chainsMap_comp`\n`+ chainsMap_f_0_comp_zeroChainsLequiv`\n`+ chainsMap_f_1_comp_oneChainsLequiv`\n`+ chainsMap_f_2_comp_twoChainsLequiv`\n`+ chainsMap_f_3_comp_threeChainsLequiv`\n`+ chainsMap_f_map_epi`\n`+ chainsMap_f_map_mono`\n`+ chainsMap_f_single`\n`+ chainsMap_id`\n`+ chainsMap_id_comp`\n`+ chainsMap_id_f_eq_mapRange`\n`+ chainsMap_id_f_map_epi`\n`+ chainsMap_id_f_map_mono`\n`+ chainsMap_zero`\n`+ coe_linearization_obj`\n`+ coe_linearization_obj_œÅ`\n`+ coe_res_obj_œÅ`\n`+ coinvariants`\n`+ coinvariantsAdjunction`\n`+ coinvariantsFinsuppLEquiv`\n`+ coinvariantsFunctor`\n`+ coinvariantsLift_comp_mkQ`\n`+ coinvariantsLift_mk`\n`+ coinvariantsMap`\n`+ coinvariantsMap_comp`\n`+ coinvariantsMap_comp_mkQ`\n`+ coinvariantsMap_id`\n`+ coinvariantsMap_mk`\n`+ coinvariantsMkQ`\n`+ coinvariantsTensor`\n`+ coinvariantsTensorBarResolution`\n`+ coinvariantsTensorFreeLEquiv`\n`+ coinvariantsTensorFreeToFinsupp`\n`+ coinvariantsTensorFreeToFinsupp_mk_tmul_single`\n`+ coinvariantsToFinsupp`\n`+ coinvariantsToFinsupp_mk_single`\n`+ coinvariantsTprodLeftRegularLEquiv`\n`+ coinvariants_mk_inv_tmul`\n`+ coinvariants_mk_tmul_inv`\n`+ comp_contractNth`\n`+ cycles`\n`+ cyclesMap`\n`+ cyclesMap_comp_isoOneCycles_hom`\n`+ cyclesMap_comp_isoTwoCycles_hom`\n`+ cyclesMap_id_comp`\n`+ dOne`\n`+ dOne_apply_mem_oneCycles`\n`+ dOne_comp_dTwo`\n`+ dOne_comp_eq`\n`+ dOne_single`\n`+ dOne_single_inv_mul_œÅ_add_single`\n`+ dOne_single_inv_self_œÅ_sub_self_inv`\n`+ dOne_single_one_fst`\n`+ dOne_single_one_snd`\n`+ dOne_single_self_inv_œÅ_sub_inv_self`\n`+ dOne_single_œÅ_add_single_inv_mul`\n`+ dTwo`\n`+ dTwo_apply_mem_twoCycles`\n`+ dTwo_comp_eq`\n`+ dTwo_single`\n`+ dTwo_single_one_fst`\n`+ dTwo_single_one_snd`\n`+ dTwo_single_one_thd`\n`+ dZero`\n`+ dZeroArrowIso`\n`+ dZero_comp_dOne`\n`+ dZero_comp_eq`\n`+ dZero_eq_zero_of_isTrivial`\n`+ dZero_single`\n`+ dZero_single_inv`\n`+ dZero_single_one`\n`+ d_comp_diagonalSuccIsoFree_inv_eq`\n`+ d_def`\n`+ diagonalOneIsoLeftRegular`\n`+ diagonalSuccIsoFree`\n`+ diagonalSuccIsoFree_hom_hom_single`\n`+ diagonalSuccIsoFree_inv_hom_single`\n`+ diagonalSuccIsoFree_inv_hom_single_single`\n`+ diagonalSuccIsoTensorDiagonal`\n`+ diagonalSuccIsoTensorTrivial_hom_hom`\n`+ diagonalSuccIsoTensorTrivial_hom_hom_single`\n`+ diagonalSuccIsoTensorTrivial_inv_hom`\n`+ diagonalSuccIsoTensorTrivial_inv_hom_single_left`\n`+ diagonalSuccIsoTensorTrivial_inv_hom_single_right`\n`+ diagonalSuccIsoTensorTrivial_inv_hom_single_single`\n`+ diagonal_succ_projective`\n`+ epi_H0Map_of_epi`\n`+ epi_iff_surjective`\n`+ epi_Œ¥‚ÇÄ_of_isZero`\n`+ epi_Œ¥‚ÇÅ_of_isZero`\n`+ fOne`\n`+ fThree`\n`+ fTwo`\n`+ finsuppLEquivFreeAsModule`\n`+ finsuppProdLEquiv_single`\n`+ finsuppProdLEquiv_symm_single_single`\n`+ finsuppTensorLeft`\n`+ finsuppTensorRight`\n`+ finsuppToCoinvariants`\n`+ finsuppToCoinvariantsTensorFree`\n`+ finsuppToCoinvariantsTensorFree_single`\n`+ finsuppToCoinvariants_single_mk`\n`+ finsupp_single`\n`+ freeAsModuleBasis`\n`+ freeLift`\n`+ freeLiftLEquiv`\n`+ freeLift_hom_single_single`\n`+ free_asModule_free`\n`+ free_ext`\n`+ free_projective`\n`+ free_single_single`\n`+ functor`\n`+ groupHomology`\n`+ groupHomologyIsoTor`\n`+ groupHomologyœÄ`\n`+ groupHomologyœÄ_comp_isoH0_hom`\n`+ groupHomologyœÄ_comp_isoH1_hom`\n`+ groupHomologyœÄ_comp_isoH2_hom`\n`+ iCycles`\n`+ inhomogeneousChains`\n`+ inhomogeneousChains.d_comp_d`\n`+ inhomogeneousChains.d_def`\n`+ inhomogeneousChainsIso`\n`+ inhomogeneousCochains.d_comp_d`\n`+ instance (A : Rep k G) : ((coinvariantsTensor k G).obj A).Additive := by`\n`+ instance (X : ModuleCat k) : ((trivialFunctor G).obj X).œÅ.IsTrivial`\n`+ instance (k G : Type*) [CommRing k] [Monoid G] (Œ± : Type*) :`\n`+ instance (n : ‚Ñï) : (functor k G n).PreservesZeroMorphisms`\n`+ instance : (chainsFunctor k G).PreservesZeroMorphisms`\n`+ instance : (coinvariantsFunctor k G).Additive`\n`+ instance : (coinvariantsFunctor k G).PreservesZeroMorphisms`\n`+ instance : (invariantsFunctor k G).Additive`\n`+ instance : (invariantsFunctor k G).PreservesZeroMorphisms`\n`+ instance : Epi (H0œÄ A) := by`\n`+ instance : FiberFunctor (Action.forget FintypeCat G)`\n`+ instance : FiberFunctor (forget‚ÇÇ (Action FintypeCat G) FintypeCat)`\n`+ instance : GaloisCategory (Action FintypeCat G)`\n`+ instance : IsTrivial (trivial k G V)`\n`+ instance : Limits.PreservesColimits (coinvariantsFunctor k G)`\n`+ instance : Limits.PreservesLimits (invariantsFunctor k G)`\n`+ instance : PreGaloisCategory (Action FintypeCat G)`\n`+ instance : PreservesFiniteLimits (forget (Action FintypeCat G)) := by`\n`+ instance [LeftRigidCategory V] : LeftRigidCategory (SingleObj H ‚•§ V) := by`\n`+ instance [RightRigidCategory V] : RightRigidCategory (SingleObj H ‚•§ V) := by`\n`+ instance [RigidCategory V] : RigidCategory (SingleObj H ‚•§ V) := by`\n`+ instance {G : Type u} [Monoid G] (X : Action FintypeCat G) : MulAction G X.V`\n`+ instance {X Y : Action FintypeCat G} (f : X ‚ü∂ Y) :`\n`+ inv_self_apply`\n`+ invariantsAdjunction`\n`+ invariantsFunctor`\n`+ isOneBoundary_iff`\n`+ isOneBoundary_of_mem_oneBoundaries`\n`+ isOneCycle_of_mem_oneCycles`\n`+ isTrivial_apply`\n`+ isTrivial_def`\n`+ isTwoBoundary_iff`\n`+ isTwoBoundary_of_mem_twoBoundaries`\n`+ isTwoCycle_of_mem_twoCycles`\n`+ isZeroBoundary_iff`\n`+ isZeroBoundary_of_mem_augmentationSubmodule`\n`+ isZero_Tor_succ_of_projective`\n`+ isZero_groupCohomology_succ_of_subsingleton`\n`+ isZero_groupHomology_succ_of_subsingleton`\n`+ isoH0`\n`+ isoH0ShortComplex‚ÇÅ`\n`+ isoH0ShortComplex‚ÇÇ`\n`+ isoH1`\n`+ isoH1ShortComplex‚ÇÅ`\n`+ isoH1ShortComplex‚ÇÇ`\n`+ isoH1ShortComplex‚ÇÉ`\n`+ isoH2`\n`+ isoH2ShortComplex‚ÇÉ`\n`+ isoOneCycles`\n`+ isoOneCycles_hom_comp_subtype`\n`+ isoOneCycles_inv_apply_eq_cyclesMk`\n`+ isoOneCycles_inv_comp_iCycles`\n`+ isoStandardComplex`\n`+ isoTwoCycles`\n`+ isoTwoCycles_hom_comp_subtype`\n`+ isoTwoCycles_inv_apply_eq_cyclesMk`\n`+ isoTwoCycles_inv_comp_iCycles`\n`+ isoZeroCycles`\n`+ isoZeroCycles_inv_apply_eq_cyclesMk`\n`+ isoZeroCycles_inv_comp_iCycles`\n`+ isoZeroOpcycles`\n`+ ker_mapRange`\n`+ leftRegularHomEquiv_symm_hom_single`\n`+ leftRegularHom_hom_single`\n`+ leftRegularTensorTrivialIsoFree`\n`+ leftRegularTensorTrivialIsoFree_hom_hom_single_tmul_single`\n`+ leftRegularTensorTrivialIsoFree_inv_hom_single_single`\n`+ leftRegular_projective`\n`+ lsingle_comp_chainsMap_f`\n`+ map`\n`+ mapCyclesIso_trans_forget‚ÇÇ_moduleCatCyclesIso`\n`+ mapDomain_surjective`\n`+ mapOneCycles`\n`+ mapOneCycles_comp_subtype`\n`+ mapShortComplexH1`\n`+ mapShortComplexH1_comp`\n`+ mapShortComplexH1_id`\n`+ mapShortComplexH1_id_comp`\n`+ mapShortComplexH1_zero`\n`+ mapShortComplexH2`\n`+ mapShortComplexH2_comp`\n`+ mapShortComplexH2_id`\n`+ mapShortComplexH2_id_comp`\n`+ mapShortComplexH2_zero`\n`+ mapShortComplex‚ÇÅ`\n`+ mapShortComplex‚ÇÅ_exact`\n`+ mapShortComplex‚ÇÇ`\n`+ mapShortComplex‚ÇÇ_exact`\n`+ mapShortComplex‚ÇÉ`\n`+ mapShortComplex‚ÇÉ_exact`\n`+ mapTwoCycles`\n`+ mapTwoCycles_comp_subtype`\n`+ map_chainsFunctor_shortExact`\n`+ map_comp_isoH0_hom`\n`+ map_comp_isoH1_hom`\n`+ map_comp_isoH2_hom`\n`+ map_id_comp`\n`+ mem_augmentationSubmodule_of_eq`\n`+ mem_oneCycles_iff`\n`+ mem_oneCycles_of_mem_oneBoundaries`\n`+ mem_submodule_iff`\n`+ mem_twoCycles_iff`\n`+ mem_twoCycles_of_mem_twoBoundaries`\n`+ mkQ_comp_dZero`\n`+ moduleCatCyclesIso_inv_apply`\n`+ mono_iff_injective`\n`+ ofCoinvariantsTprodLeftRegular`\n`+ ofCoinvariantsTprodLeftRegular_mk_tmul_single`\n`+ ofMulActionSubsingletonIsoTrivial`\n`+ oneBoundaries`\n`+ oneBoundariesOfIsOneBoundary`\n`+ oneBoundariesToOneCycles`\n`+ oneBoundariesToOneCycles_apply`\n`+ oneBoundaries_le_oneCycles`\n`+ oneChainsLequiv`\n`+ oneChainsToAugmentationSubmodule`\n`+ oneCycles`\n`+ oneCyclesLequivOfIsTrivial`\n`+ oneCyclesOfIsOneCycle`\n`+ oneCycles_eq_top_of_isTrivial`\n`+ pOpcycles_comp_opcyclesIso_hom`\n`+ partialProd_contractNth`\n`+ range_dZero_eq_augmentationSubmodule`\n`+ range_mapRange_linearMap`\n`+ self_inv_apply`\n`+ shortComplexH0`\n`+ shortComplexH0_exact`\n`+ shortComplexH1`\n`+ shortComplexH1Iso`\n`+ shortComplexH2`\n`+ shortComplexH2Iso`\n`+ single_inv_œÅ_self_add_single_mem_oneBoundaries`\n`+ single_isOneCycle_iff`\n`+ single_isOneCycle_of_mem_fixedPoints`\n`+ single_isTwoCycle_iff`\n`+ single_isTwoCycle_iff_inv`\n`+ single_mem_oneCycles_iff`\n`+ single_mem_oneCycles_of_mem_invariants`\n`+ single_mem_twoCycles_iff`\n`+ single_mem_twoCycles_iff_inv`\n`+ single_one_fst_sub_single_one_fst_mem_twoBoundaries`\n`+ single_one_fst_sub_single_one_snd_mem_twoBoundaries`\n`+ single_one_mem_oneBoundaries`\n`+ single_one_snd_sub_single_one_fst_mem_twoBoundaries`\n`+ single_one_snd_sub_single_one_snd_mem_twoBoundaries`\n`+ single_œÅ_self_add_single_inv_mem_oneBoundaries`\n`+ standardResolution`\n`+ standardResolution.extIso`\n`+ submodule`\n`+ tensorObj_def`\n`+ tensorUnit_def`\n`+ tensor_œÅ`\n`+ threeChainsLequiv`\n`+ toCycles`\n`+ toCycles_comp_isoOneCycles_hom`\n`+ toCycles_comp_isoTwoCycles_hom`\n`+ trivialFunctor`\n`+ trivial_apply`\n`+ trivial_projective_of_subsingleton`\n`+ twoBoundaries`\n`+ twoBoundariesOfIsTwoBoundary`\n`+ twoBoundariesToTwoCycles`\n`+ twoBoundariesToTwoCycles_apply`\n`+ twoBoundaries_le_twoCycles`\n`+ twoChainsLequiv`\n`+ twoCycles`\n`+ twoCyclesOfIsTwoCycle`\n`+ zeroChainsLequiv`\n`+ Œ¥`\n`+ Œ¥_apply`\n`+ Œ¥_apply_aux`\n`+ Œ¥‚ÇÄ`\n`+ Œ¥‚ÇÄ_apply`\n`+ Œ¥‚ÇÅ`\n`+ Œ¥‚ÇÅ_apply`\n`+ Œ¥‚ÇÅ_apply_aux`\n`++ coinvariantsLift`\n`++ d_single`\n`++ diagonalSuccIsoTensorTrivial`\n`++ epi_Œ¥`\n`++ finsupp`\n`++ free`\n`++ isIso_Œ¥`\n`++ mono_Œ¥`\n`++ Œ¥Iso`\n`+++- d`\n`+++-- diagonal`\n`+++-- leftRegular`\n`+-+- trivial`\n`- actionDiagonalSucc`\n`- actionDiagonalSucc_hom_apply`\n`- actionDiagonalSucc_inv_apply`\n`- apply_eq_self`\n`- diagonalHomEquiv`\n`- diagonalHomEquiv_apply`\n`- diagonalHomEquiv_symm_apply`\n`- diagonalHomEquiv_symm_partialProd_succ`\n`- diagonalSucc_hom_single`\n`- diagonalSucc_inv_single_left`\n`- diagonalSucc_inv_single_right`\n`- diagonalSucc_inv_single_single`\n`- groupCohomology.extIso`\n`- groupCohomology.projectiveResolution`\n`- groupCohomology.resolution`\n`- instance : FiberFunctor (Action.forget FintypeCat (MonCat.of G))`\n`- instance : FiberFunctor (forget‚ÇÇ (Action FintypeCat (MonCat.of G)) FintypeCat)`\n`- instance : GaloisCategory (Action FintypeCat (MonCat.of G))`\n`- instance : IsTrivial (trivial k (G := G) (V := V))`\n`- instance : PreGaloisCategory (Action FintypeCat (MonCat.of G))`\n`- instance : PreservesFiniteLimits (forget (Action FintypeCat (MonCat.of G))) := by`\n`- instance [LeftRigidCategory V] : LeftRigidCategory (SingleObj (H : MonCat.{u}) ‚•§ V) := by`\n`- instance [RightRigidCategory V] : RightRigidCategory (SingleObj (H : MonCat.{u}) ‚•§ V) := by`\n`- instance [RigidCategory V] : RigidCategory (SingleObj (H : MonCat.{u}) ‚•§ V) := by`\n`- instance {G : MonCat.{u}} (X : Action FintypeCat G) : MulAction G X.V := Action.instMulAction X`\n`- instance {G : Type u} [Group G] (X : Action FintypeCat (MonCat.of G)) : MulAction G X.V`\n`- instance {X Y : Action FintypeCat (MonCat.of G)} (f : X ‚ü∂ Y) :`\n`- leftRegularHomEquiv_symm_single`\n`- leftRegularHom_apply`\n`- linearYonedaObjResolution`\n`- linearYonedaObjResolution_d_apply`\n`- linearization_of`\n`- ofMulActionBasis`\n`- ofMulActionBasisAux`\n`- ofMulAction_free`\n`- of_œÅ_apply`\n`-++ d_eq`\n`-- diagonalSucc`\n`--+ trivial_def`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (19.46, 0.02)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|3594|-18|porting notes|\n|1321|-20|erw|\n\nCurrent commit [35cd1d3a4e](https://github.com/leanprover-community/mathlib4/commit/35cd1d3a4e2d3aec3f6c6de58c091fae2c72c943)\nReference commit [1c5e1606e6](https://github.com/leanprover-community/mathlib4/commit/1c5e1606e6c91adeae43d9d5897c8ef108e9dcc4)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-12T03:44:03Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2025-02-12T02:22:14Z",
        "deletions": 1178,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 9,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Fin.lean",
              "additions": 24,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/ConcreteCategory.lean",
              "additions": 14,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Homology/HomologySequence.lean",
              "additions": 16,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/ModuleCat.lean",
              "additions": 16,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/SnakeLemma.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Basic.lean",
              "additions": 39,
              "deletions": 42
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Concrete.lean",
              "additions": 24,
              "deletions": 11
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Continuous.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Limits.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Monoidal.lean",
              "additions": 82,
              "deletions": 60
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Action.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/EssSurj.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Examples.lean",
              "additions": 18,
              "deletions": 18
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Full.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Types/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Fin/Tuple/Basic.lean",
              "additions": 9,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Finsupp/Basic.lean",
              "additions": 7,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp/Defs.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp/Pi.lean",
              "additions": 37,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Basic.lean",
              "additions": 105,
              "deletions": 8
            },
            {
              "path": "Mathlib/RepresentationTheory/Character.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RepresentationTheory/Coinvariants.lean",
              "additions": 341,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/FDRep.lean",
              "additions": 9,
              "deletions": 10
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Basic.lean",
              "additions": 0,
              "deletions": 256
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean",
              "additions": 0,
              "deletions": 630
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupCohomology/Basic.lean",
              "additions": 182,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupCohomology/Hilbert90.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupCohomology/LowDegree.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/Basic.lean",
              "additions": 221,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/Functoriality.lean",
              "additions": 460,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean",
              "additions": 301,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/LowDegree.lean",
              "additions": 916,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Homological/Resolution.lean",
              "additions": 389,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Invariants.lean",
              "additions": 47,
              "deletions": 8
            },
            {
              "path": "Mathlib/RepresentationTheory/Rep.lean",
              "additions": 326,
              "deletions": 104
            }
          ]
        },
        "headRefName": "gphomles2",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6K4_Kf",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            }
          ]
        },
        "number": 21766,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCmTQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787064/job/37120681549"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCr5A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787617/job/37120682980"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCrxg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787608/job/37120682950"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCmYw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787067/job/37120681571"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCskQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787613/job/37120683153"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCoAg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787064/job/37120681986"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCnjg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787067/job/37120681870"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCr2g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787613/job/37120682970"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJCpFw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787064/job/37120682263"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpLOCnQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13293787067/job/37122966173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJDAgg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37120688258"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIpJEvdg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21766&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(RepresentationTheory/Homological/GroupHomology/LongExactSequence): specialise LES API to low degree group homology",
        "updatedAt": "2025-02-25T21:02:48Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21766"
      }
    }
  }
}
