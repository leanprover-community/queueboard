{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 101,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "digama0"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This is a (relatively low-effort) implementation of `ring` on `PNat` which works by using a typeclass to lift expressions to `Nat`, where the more usual methods apply. It is written in a generic style so it can be extended with typeclasses for other types, which extends the applicability to any type which has an injective map to a commutative semiring.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": true,
        "closedAt": "2023-10-26T04:14:35Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5lAOgu",
              "body": "Also, the doc-blame linter will complain here once you merge/rebase.",
              "createdAt": "2023-08-27T03:18:34Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mzTLb",
              "body": "Is there any way to measure whether this makes `ring` slower in the traditional cases?",
              "createdAt": "2023-09-19T02:05:04Z",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mz_XK",
              "body": "I suppose that we can\r\n\r\n!bench",
              "createdAt": "2023-09-19T06:31:30Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5m5GPm",
              "body": "> Is there any way to measure whether this makes `ring` slower in the traditional cases?\r\n\r\nI don't think there is any chance of this (other than the general vagaries of code being placed in different places since stuff around it changed), because the new code only runs in response to a typeclass inference failure which would have caused `ring` to fail previously.",
              "createdAt": "2023-09-19T18:06:25Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qHazh",
              "body": "bors merge",
              "createdAt": "2023-10-26T02:44:09Z",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qHo44",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6648945848/job/18066723555)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6648945848/job/18066723121)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6648945848/job/18066723242)",
              "createdAt": "2023-10-26T04:14:33Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e770e811b7de954d5f5cfc02179e1ac0c3cb7501",
                "additions": 87,
                "deletions": 10,
                "committedDate": "2023-08-14T01:36:30Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a328a9963ac216d4d6bdd12a8035a4ba73a4f332",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-14T01:55:41Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dee193db400a55ca6d5597c3a0aca5c20f199c87",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-27T03:15:50Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dd52d59ece7e1f30af56cda03d9680ab8a254100",
                "additions": 16750,
                "deletions": 7491,
                "committedDate": "2023-08-27T03:47:35Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fc73e220f14c0488fc5d4a8c8c02bf6d797d6389",
                "additions": 20,
                "deletions": 8,
                "committedDate": "2023-08-27T07:56:32Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4b7b3718f092f254002fc79c90a9207effdff533",
                "additions": 71365,
                "deletions": 31478,
                "committedDate": "2023-10-25T01:27:02Z",
                "author": {
                  "name": "Rob Lewis",
                  "email": "Rob.y.lewis@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-14T01:39:45Z",
        "deletions": 10,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Ring.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Ring/Basic.lean",
              "additions": 55,
              "deletions": 10
            },
            {
              "path": "Mathlib/Tactic/Ring/PNat.lean",
              "additions": 41,
              "deletions": 0
            },
            {
              "path": "test/ring.lean",
              "additions": 2,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ring_pnat",
        "headRefOid": "4b7b3718f092f254002fc79c90a9207effdff533",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5X1URj",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fMU4l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-27T03:17:48Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6570,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fMU4l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-08-27T03:17:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fMVOL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "digama0"
              },
              "submittedAt": "2023-08-27T03:45:18Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5N4QS2",
                    "body": "Could we have a doc-string? At least telling me what `CS` stands for. :-)",
                    "createdAt": "2023-08-27T03:17:48Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5N4QvS",
                    "body": "it's supposed to mean commutative semiring, although as you can see the class itself doesn't depend on it. I don't really have good naming suggestions here...",
                    "createdAt": "2023-08-27T03:45:18Z",
                    "author": {
                      "login": "digama0"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjE0MDYwODgz",
              "login": "PatrickMassot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQ5Njc0Njk=",
              "login": "robertylewis"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: `ring` for `PNat`",
        "updatedAt": "2023-10-26T04:14:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6570",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e770e811b7de954d5f5cfc02179e1ac0c3cb7501"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uMz66zwAAAAJY48-D",
              "createdAt": "2023-08-14T01:54:17Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a328a9963ac216d4d6bdd12a8035a4ba73a4f332"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5uMz66zwAAAAJY4-VN",
              "createdAt": "2023-08-14T01:55:47Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uMz66zwAAAAJgB7CD",
              "createdAt": "2023-08-27T03:15:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uMz66zwAAAAJgB7CE",
              "createdAt": "2023-08-27T03:15:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dee193db400a55ca6d5597c3a0aca5c20f199c87"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uMz66zwAAAAJgB7Nj",
              "createdAt": "2023-08-27T03:16:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uMz66zwAAAAJgB7Nl",
              "createdAt": "2023-08-27T03:16:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fMU4l",
              "createdAt": "2023-08-27T03:17:48Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lAOgu",
              "createdAt": "2023-08-27T03:18:34Z",
              "body": "Also, the doc-blame linter will complain here once you merge/rebase.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uMz66zwAAAAJgB_jR",
              "createdAt": "2023-08-27T03:39:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dd52d59ece7e1f30af56cda03d9680ab8a254100"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fc73e220f14c0488fc5d4a8c8c02bf6d797d6389"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uMz66zwAAAAJn_EsK",
              "createdAt": "2023-09-11T13:47:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mzTLb",
              "createdAt": "2023-09-19T02:05:04Z",
              "body": "Is there any way to measure whether this makes `ring` slower in the traditional cases?",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mz_XK",
              "createdAt": "2023-09-19T06:31:30Z",
              "body": "I suppose that we can\r\n\r\n!bench",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m5GPm",
              "createdAt": "2023-09-19T18:06:25Z",
              "body": "> Is there any way to measure whether this makes `ring` slower in the traditional cases?\r\n\r\nI don't think there is any chance of this (other than the general vagaries of code being placed in different places since stuff around it changed), because the new code only runs in response to a typeclass inference failure which would have caused `ring` to fail previously.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4b7b3718f092f254002fc79c90a9207effdff533"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qHazh",
              "createdAt": "2023-10-26T02:44:09Z",
              "body": "bors merge",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uMz66zwAAAAKCMKFn",
              "createdAt": "2023-10-26T02:44:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uMz66zwAAAAKCMKG_",
              "createdAt": "2023-10-26T02:44:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qHo44",
              "createdAt": "2023-10-26T04:14:33Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6648945848/job/18066723555)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6648945848/job/18066723121)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6648945848/job/18066723242)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uMz66zwAAAAKCNubx",
              "createdAt": "2023-10-26T04:14:35Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uMz66zwAAAAKCNufL",
              "createdAt": "2023-10-26T04:14:38Z"
            }
          ]
        }
      }
    }
  }
}
