{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 19,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "pitmonticone"
        },
        "autoMergeRequest": null,
        "baseRefName": "CatHasColimits",
        "body": "",
        "changedFiles": 6,
        "closed": true,
        "closedAt": "2024-09-04T23:58:39Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6K5c-t",
              "body": "### PR summary [087bdf1439](https://github.com/leanprover-community/mathlib4/pull/16492/commits/087bdf14398c552aca9928915b3658cc29bc6b05)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.AlgebraicTopology.SimplicialSet | 779 | 785 | +6 (+0.77%) |\n| Mathlib.AlgebraicTopology.Nerve | 784 | 790 | +6 (+0.77%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>6 files</summary> `Mathlib.RepresentationTheory.GroupCohomology.Hilbert90` `Mathlib.RepresentationTheory.GroupCohomology.Resolution` `Mathlib.AlgebraicTopology.SingularSet` `Mathlib.RepresentationTheory.GroupCohomology.Basic` `Mathlib.RepresentationTheory.GroupCohomology.LowDegree` `Mathlib.AlgebraicTopology.ExtraDegeneracy`</details>|3|\n| `Mathlib.AlgebraicTopology.SimplicialSet.Monoidal` `Mathlib.AlgebraicTopology.SimplicialCategory.Basic`|5|\n|<details><summary>4 files</summary> `Mathlib.AlgebraicTopology.SimplicialSet` `Mathlib.AlgebraicTopology.Quasicategory` `Mathlib.AlgebraicTopology.Nerve` `Mathlib.AlgebraicTopology.KanComplex`</details>|6|\n| `Mathlib.Combinatorics.Quiver.ReflQuiver`|354|\n| `Mathlib.CategoryTheory.Category.Cat.ReflQuiv`|355|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CompClosure.congruence`\n`+ Fin.hom_succ`\n`+ Fin.le_succ`\n`+ FreeRefl`\n`+ FreeRefl.lift_unique'`\n`+ FreeRefl.quotientFunctor`\n`+ FreeReflRel`\n`+ Functor.toReflPrefunctor`\n`+ Functor.toReflPrefunctor_toPrefunctor`\n`+ Hom.ext`\n`+ ReflPrefunctor`\n`+ ReflQuiv`\n`+ ReflQuiver`\n`+ ReflQuiver.id_eq_id`\n`+ Truncated.uliftFunctor`\n`+ adj`\n`+ adj.counit.app`\n`+ adj.counit.component_eq`\n`+ adj.counit.component_eq'`\n`+ adj.unit.app`\n`+ adj.unit.component_eq`\n`+ ar`\n`+ ar'`\n`+ ar'succ`\n`+ catToReflQuiver`\n`+ category`\n`+ comp`\n`+ comp_assoc`\n`+ comp_eqToHom_heq`\n`+ comp_eqToHom_heq_iff`\n`+ comp_id`\n`+ congr_map`\n`+ conj_eqToHom_iff_heq'`\n`+ const_fac_thru_zero`\n`+ cosk2Iso`\n`+ cosk2NatIso.component`\n`+ cosk2NatTrans`\n`+ cosk2RightExtension.component.hom.iso`\n`+ cosk2RightExtension.hom`\n`+ cosk2RightExtension.hom_isIso`\n`+ coskAdj`\n`+ coskAdj.reflective`\n`+ coskeleton.faithful`\n`+ coskeleton.full`\n`+ coskeleton.fullyFaithful`\n`+ coskeleton_reflective`\n`+ discreteReflQuiver`\n`+ eqToHom_comp_heq`\n`+ eqToHom_comp_heq_iff`\n`+ eq_const_of_zero`\n`+ eq_const_of_zero'`\n`+ eq_const_to_zero`\n`+ eq_of_one_to_one`\n`+ eq_of_one_to_two`\n`+ ext`\n`+ fact.map.arr`\n`+ fact.obj.arr`\n`+ forget`\n`+ forget.Faithful`\n`+ forgetToQuiv`\n`+ forgetToQuiv.Faithful`\n`+ forgetToQuiv_faithful`\n`+ forget_faithful`\n`+ forget_forgetToQuiv`\n`+ freeRefl`\n`+ freeReflNatTrans`\n`+ freeRefl_naturality`\n`+ heq_comp`\n`+ heq_comp_eqToHom_iff`\n`+ heq_eqToHom_comp_iff`\n`+ id`\n`+ id_comp`\n`+ instance (V : Type*) [ReflQuiver V] : Inhabited (ReflPrefunctor V V)`\n`+ instance (V) [ReflQuiver V] : Category (FreeRefl V)`\n`+ instance (n : ℕ) : (inclusion : Truncated n ⥤ _).op.FullyFaithful`\n`+ instance : CoeSort ReflQuiv (Type u) where coe := Bundled.α`\n`+ instance : Inhabited ReflQuiv := ⟨ReflQuiv.of (Discrete default)⟩`\n`+ isPointwiseRightKanExtension`\n`+ isPointwiseRightKanExtension.isUniversal`\n`+ isPointwiseRightKanExtensionAt`\n`+ isRightKanExtension`\n`+ mkOfLe`\n`+ mkOfLeComp`\n`+ mkOfSucc`\n`+ mk_map`\n`+ mk_obj`\n`+ nerveFunctor₂`\n`+ nerveRightExtension`\n`+ nerveRightExtension.coneAt`\n`+ nerve₂`\n`+ nerve₂RestrictedIso`\n`+ nerve₂_restrictedNerve`\n`+ of`\n`+ of_val`\n`+ of_α`\n`+ opposite`\n`+ pt`\n`+ pt'`\n`+ ran.lift`\n`+ ran.lift'`\n`+ ran.lift.eq`\n`+ ran.lift.eq₂`\n`+ ran.lift.map`\n`+ skAdj`\n`+ skAdj.coreflective`\n`+ skeleton.faithful`\n`+ skeleton.full`\n`+ skeleton.fullyFaithful`\n`+ skeleton_reflective`\n`+ str'`\n`+ strArr.homEv`\n`+ strArr.homEv.map`\n`+ strArr.homEvSucc`\n`+ toFunctor`\n`+ toQuiv`\n`+ Δ.ι`\n`++ truncation`\n`+++ comp_eq_comp`\n`+++ id_eq_id`\n`-- sk`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-04T23:26:28Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0122ead8e45545751f57e6a538f17b9f6b8d1a5c",
                "additions": 6,
                "deletions": 15,
                "committedDate": "2024-09-04T23:23:59Z",
                "author": {
                  "name": "Pietro Monticone",
                  "email": "38562595+pitmonticone@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF9yw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020790/job/29698915787"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF-gg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020782/job/29698915970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF8_Q",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020782/job/29698915581"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF_6w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020790/job/29698916331"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF_SA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020790/job/29698916168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF9zw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020782/job/29698915791"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF_NQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020782/job/29698916149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jF-hQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020790/job/29698915973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jG1Pw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020782/job/29698929983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGArg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711020790/job/29698916526"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b099f1265b151c440c1c35ad02d67d12a0d2613f",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-09-04T23:24:01Z",
                "author": {
                  "name": "Pietro Monticone",
                  "email": "38562595+pitmonticone@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "58a41ca1a0d7d1d55c79b09fcdb1f430efb2ec67",
                "additions": 2,
                "deletions": 7,
                "committedDate": "2024-09-04T23:24:03Z",
                "author": {
                  "name": "Pietro Monticone",
                  "email": "38562595+pitmonticone@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fecca4a2fb65ea9cfb3faeb54d429904361f56da",
                "additions": 7,
                "deletions": 10,
                "committedDate": "2024-09-04T23:24:06Z",
                "author": {
                  "name": "Pietro Monticone",
                  "email": "38562595+pitmonticone@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "611a56b0cf74ebdd0f505bd4eae8b2a9a12ef0ed",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-09-04T23:24:07Z",
                "author": {
                  "name": "Pietro Monticone",
                  "email": "38562595+pitmonticone@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "087bdf14398c552aca9928915b3658cc29bc6b05",
                "additions": 0,
                "deletions": 3,
                "committedDate": "2024-09-04T23:24:09Z",
                "author": {
                  "name": "Pietro Monticone",
                  "email": "38562595+pitmonticone@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jIv2A",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037814/job/29698961368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6j6MAg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711319605/job/29699771394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jIvqQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037812/job/29698961321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jIv3g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037813/job/29698961374"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGPLQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGPwQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGRHQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jIwnw",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037814/job/29698961567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGQyA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920648"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGQhg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGQQg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920514"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGPEA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGP6w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jGRww",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920899"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jtY2A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29699561688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jI68Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29698964209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG6jJqkA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16492&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-04T23:25:42Z",
        "deletions": 38,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicTopology/Nerve.lean",
              "additions": 6,
              "deletions": 15
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplicialSet.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Cat/ReflQuiv.lean",
              "additions": 2,
              "deletions": 7
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Quiv.lean",
              "additions": 7,
              "deletions": 10
            },
            {
              "path": "Mathlib/CategoryTheory/EqToHom.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/ReflQuiver.lean",
              "additions": 0,
              "deletions": 3
            }
          ]
        },
        "headRefName": "pitmonticone/CatHasColimits",
        "headRefOid": "087bdf14398c552aca9928915b3658cc29bc6b05",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c56dL4g",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": []
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": {
          "oid": "55cc6f91d80a4d7404d9a91671b2d08395acbda4"
        },
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": "2024-09-04T23:58:39Z",
        "mergedBy": {
          "login": "pitmonticone"
        },
        "milestone": null,
        "number": 16492,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE5NTE3NDgz",
                "login": "emilyriehl"
              }
            }
          ]
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM4NTYyNTk1",
              "login": "pitmonticone"
            }
          ]
        },
        "state": "MERGED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jIv2A",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037814/job/29698961368"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6j6MAg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711319605/job/29699771394"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jIvqQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037812/job/29698961321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jIv3g",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037813/job/29698961374"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGPLQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920237"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGPwQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920385"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGRHQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920733"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jIwnw",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711037814/job/29698961567"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGQyA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920648"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGQhg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920582"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGQQg",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920514"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGPEA",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29698920208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGP6w",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920427"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jGRww",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022240/job/29698920899"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jtY2A",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10711022238/job/29699561688"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jI68Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29698964209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG6jJqkA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16492&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor (CatHasColimits): golf and format",
        "updatedAt": "2024-09-04T23:58:41Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16492",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6VZbVVzwAAAANKuxcN",
              "createdAt": "2024-09-04T23:25:55Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6VZbVVzwAAAANKuxfj",
              "createdAt": "2024-09-04T23:25:58Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE5NTE3NDgz",
                "login": "emilyriehl"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6K5c-t",
              "createdAt": "2024-09-04T23:26:28Z",
              "body": "### PR summary [087bdf1439](https://github.com/leanprover-community/mathlib4/pull/16492/commits/087bdf14398c552aca9928915b3658cc29bc6b05)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.AlgebraicTopology.SimplicialSet | 779 | 785 | +6 (+0.77%) |\n| Mathlib.AlgebraicTopology.Nerve | 784 | 790 | +6 (+0.77%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>6 files</summary> `Mathlib.RepresentationTheory.GroupCohomology.Hilbert90` `Mathlib.RepresentationTheory.GroupCohomology.Resolution` `Mathlib.AlgebraicTopology.SingularSet` `Mathlib.RepresentationTheory.GroupCohomology.Basic` `Mathlib.RepresentationTheory.GroupCohomology.LowDegree` `Mathlib.AlgebraicTopology.ExtraDegeneracy`</details>|3|\n| `Mathlib.AlgebraicTopology.SimplicialSet.Monoidal` `Mathlib.AlgebraicTopology.SimplicialCategory.Basic`|5|\n|<details><summary>4 files</summary> `Mathlib.AlgebraicTopology.SimplicialSet` `Mathlib.AlgebraicTopology.Quasicategory` `Mathlib.AlgebraicTopology.Nerve` `Mathlib.AlgebraicTopology.KanComplex`</details>|6|\n| `Mathlib.Combinatorics.Quiver.ReflQuiver`|354|\n| `Mathlib.CategoryTheory.Category.Cat.ReflQuiv`|355|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CompClosure.congruence`\n`+ Fin.hom_succ`\n`+ Fin.le_succ`\n`+ FreeRefl`\n`+ FreeRefl.lift_unique'`\n`+ FreeRefl.quotientFunctor`\n`+ FreeReflRel`\n`+ Functor.toReflPrefunctor`\n`+ Functor.toReflPrefunctor_toPrefunctor`\n`+ Hom.ext`\n`+ ReflPrefunctor`\n`+ ReflQuiv`\n`+ ReflQuiver`\n`+ ReflQuiver.id_eq_id`\n`+ Truncated.uliftFunctor`\n`+ adj`\n`+ adj.counit.app`\n`+ adj.counit.component_eq`\n`+ adj.counit.component_eq'`\n`+ adj.unit.app`\n`+ adj.unit.component_eq`\n`+ ar`\n`+ ar'`\n`+ ar'succ`\n`+ catToReflQuiver`\n`+ category`\n`+ comp`\n`+ comp_assoc`\n`+ comp_eqToHom_heq`\n`+ comp_eqToHom_heq_iff`\n`+ comp_id`\n`+ congr_map`\n`+ conj_eqToHom_iff_heq'`\n`+ const_fac_thru_zero`\n`+ cosk2Iso`\n`+ cosk2NatIso.component`\n`+ cosk2NatTrans`\n`+ cosk2RightExtension.component.hom.iso`\n`+ cosk2RightExtension.hom`\n`+ cosk2RightExtension.hom_isIso`\n`+ coskAdj`\n`+ coskAdj.reflective`\n`+ coskeleton.faithful`\n`+ coskeleton.full`\n`+ coskeleton.fullyFaithful`\n`+ coskeleton_reflective`\n`+ discreteReflQuiver`\n`+ eqToHom_comp_heq`\n`+ eqToHom_comp_heq_iff`\n`+ eq_const_of_zero`\n`+ eq_const_of_zero'`\n`+ eq_const_to_zero`\n`+ eq_of_one_to_one`\n`+ eq_of_one_to_two`\n`+ ext`\n`+ fact.map.arr`\n`+ fact.obj.arr`\n`+ forget`\n`+ forget.Faithful`\n`+ forgetToQuiv`\n`+ forgetToQuiv.Faithful`\n`+ forgetToQuiv_faithful`\n`+ forget_faithful`\n`+ forget_forgetToQuiv`\n`+ freeRefl`\n`+ freeReflNatTrans`\n`+ freeRefl_naturality`\n`+ heq_comp`\n`+ heq_comp_eqToHom_iff`\n`+ heq_eqToHom_comp_iff`\n`+ id`\n`+ id_comp`\n`+ instance (V : Type*) [ReflQuiver V] : Inhabited (ReflPrefunctor V V)`\n`+ instance (V) [ReflQuiver V] : Category (FreeRefl V)`\n`+ instance (n : ℕ) : (inclusion : Truncated n ⥤ _).op.FullyFaithful`\n`+ instance : CoeSort ReflQuiv (Type u) where coe := Bundled.α`\n`+ instance : Inhabited ReflQuiv := ⟨ReflQuiv.of (Discrete default)⟩`\n`+ isPointwiseRightKanExtension`\n`+ isPointwiseRightKanExtension.isUniversal`\n`+ isPointwiseRightKanExtensionAt`\n`+ isRightKanExtension`\n`+ mkOfLe`\n`+ mkOfLeComp`\n`+ mkOfSucc`\n`+ mk_map`\n`+ mk_obj`\n`+ nerveFunctor₂`\n`+ nerveRightExtension`\n`+ nerveRightExtension.coneAt`\n`+ nerve₂`\n`+ nerve₂RestrictedIso`\n`+ nerve₂_restrictedNerve`\n`+ of`\n`+ of_val`\n`+ of_α`\n`+ opposite`\n`+ pt`\n`+ pt'`\n`+ ran.lift`\n`+ ran.lift'`\n`+ ran.lift.eq`\n`+ ran.lift.eq₂`\n`+ ran.lift.map`\n`+ skAdj`\n`+ skAdj.coreflective`\n`+ skeleton.faithful`\n`+ skeleton.full`\n`+ skeleton.fullyFaithful`\n`+ skeleton_reflective`\n`+ str'`\n`+ strArr.homEv`\n`+ strArr.homEv.map`\n`+ strArr.homEvSucc`\n`+ toFunctor`\n`+ toQuiv`\n`+ Δ.ι`\n`++ truncation`\n`+++ comp_eq_comp`\n`+++ id_eq_id`\n`-- sk`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "MergedEvent",
              "id": "ME_lADOFcwZ1c6VZbVVzwAAAANKvdDt",
              "createdAt": "2024-09-04T23:58:39Z",
              "mergeRefName": "CatHasColimits"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6VZbVVzwAAAANKvdD8",
              "createdAt": "2024-09-04T23:58:39Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6VZbVVzwAAAANKvdGC",
              "createdAt": "2024-09-04T23:58:41Z"
            }
          ]
        }
      }
    }
  }
}
