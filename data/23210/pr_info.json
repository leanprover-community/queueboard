{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 314,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "dupuisf"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR defines positive maps and shows that a positive map between non-unital C*-algebras is continuous.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6jnEe3",
              "body": "### PR summary [8b97a917c1](https://github.com/leanprover-community/mathlib4/pull/23210/commits/8b97a917c197c4140afea40232c96816773d1e82)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.Module.LinearMap.PositiveLinearMap` (new file)|498|\n| `Mathlib.Analysis.CStarAlgebra.PositiveLinearMap` (new file)|2396|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ PositiveLinearMap`\n`+ PositiveLinearMapClass`\n`+ _root_.LinearMapClass.map_smul_of_tower`\n`+ apply_le_of_isSelfAdjoint`\n`+ exists_norm_apply_le`\n`+ exists_norm_apply_le_of_isSelfAdjoint`\n`+ exists_norm_apply_le_of_nonneg`\n`+ imaginaryPart.norm_le`\n`+ instance : ContinuousLinearMapClass (A₁ →P[ℂ] A₂) ℂ A₁ A₂`\n`+ instance : FunLike (E₁ →P[R] E₂) E₁ E₂`\n`+ instance : PositiveLinearMapClass (E₁ →P[R] E₂) R E₁ E₂`\n`+ isSelfAdjoint`\n`+ map_isSelfAdjoint`\n`+ map_nonneg`\n`+ map_smul_of_tower`\n`+ mk₀`\n`+ norm_apply_le_of_nonneg`\n`+ realPart.norm_le`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-22T02:59:22Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6j_mxh",
              "body": "The reduction from the arbitrary case to the nonnegative case was annoying, so I decided we should have another lemma. It's this:\r\n```lean\r\nlemma Complex.I_pow_three : I ^ 3 = -I := by\r\n  rw [pow_succ, I_sq, neg_one_mul]\r\n\r\nlemma Complex.I_pow_eq_pow_mod (n : ℕ) : I ^ n = I ^ (n % 4) := by\r\n  conv_lhs => rw [← Nat.div_add_mod n 4]\r\n  simp [pow_add, pow_mul, I_pow_four]\r\n\r\nopen Complex in\r\nlemma CStarAlgebra.exists_sum_four_nonneg {A : Type*} [NonUnitalCStarAlgebra A] [PartialOrder A]\r\n    [StarOrderedRing A] (a : A) :\r\n    ∃ x : Fin 4 → A, (∀ i, 0 ≤ x i) ∧ (∀ i, ‖x i‖ ≤ ‖a‖) ∧ a = ∑ i : Fin 4, I ^ (i : ℕ) • x i := by\r\n  use ![(realPart a)⁺, (imaginaryPart a)⁺, (realPart a)⁻, (imaginaryPart a)⁻]\r\n  rw [← and_assoc, ← forall_and]\r\n  constructor\r\n  · intro i\r\n    fin_cases i\r\n    all_goals\r\n      constructor\r\n      · simp\r\n        cfc_tac\r\n    · exact CStarAlgebra.norm_posPart_le _ |>.trans <| realPart.norm_le a\r\n    · exact CStarAlgebra.norm_posPart_le _ |>.trans <| imaginaryPart.norm_le a\r\n    · exact CStarAlgebra.norm_negPart_le _ |>.trans <| realPart.norm_le a\r\n    · exact CStarAlgebra.norm_negPart_le _ |>.trans <| imaginaryPart.norm_le a\r\n  · nth_rw 1 [← CStarAlgebra.linear_combination_nonneg a]\r\n    simp [Fin.sum_univ_four, sub_eq_add_neg]\r\n    rw [add_add_add_comm]\r\n    have : ((3 : Fin 4) : ℕ) = 3 := rfl -- ugh, seriously, why can't `norm_num` do this?\r\n    match_scalars\r\n    all_goals simp [this, I_pow_three]\r\n```\r\nWith this lemma, the `suffices` block can be reduced to:\r\n```lean\r\n  suffices h_nonneg : ∃ C : ℝ≥0, ∀ a, 0 ≤ a → ‖f a‖ ≤ C * ‖a‖ by\r\n    obtain ⟨C, hmain⟩ := h_nonneg\r\n    refine ⟨4 * C, fun x ↦ ?_⟩\r\n    obtain ⟨y, hy_nonneg, hy_norm, hy⟩ := CStarAlgebra.exists_sum_four_nonneg x\r\n    conv_lhs => rw [hy]\r\n    simp only [map_sum, map_smul, NNReal.coe_add]\r\n    apply norm_sum_le _ _ |>.trans\r\n    simp only [norm_smul, norm_pow, norm_I, one_pow, one_mul]\r\n    apply Finset.sum_le_sum (g := fun _ ↦ C * ‖x‖) (fun i _ ↦ ?_) |>.trans <| by simp [mul_assoc]\r\n    apply hmain _ (hy_nonneg i) |>.trans\r\n    simp only\r\n    gcongr\r\n    exact hy_norm i\r\n```\r\nOf course, if you prefer you can do it in a `calc` block for readability, but this isn't so bad. ",
              "createdAt": "2025-03-25T13:59:01Z",
              "author": {
                "login": "j-loreaux"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "485ffd3af5072c33add29a48ed83289ce1229cc7",
                "additions": 319,
                "deletions": 0,
                "committedDate": "2025-03-22T02:45:55Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXkm_w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004431247/job/39216293631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXknDg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004431253/job/39216293646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXknbw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004431253/job/39216293743"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXknYw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004431247/job/39216293731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXnPOw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004431253/job/39216336699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXkoAQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004431247/job/39216293889"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "28b02a5ed7561d1493f8440b4d4fe0ced2e455e9",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2025-03-22T02:48:00Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx1oA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004523038/job/39216510368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXnBHA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004447832/job/39216333084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXykAA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004528434/job/39216522240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx1nw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004523055/job/39216510367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx19Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004523062/job/39216510453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXyj6g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004528431/job/39216522218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx1lg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004523060/job/39216510358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXykRQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004528433/job/39216522309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXnQBg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004447826/job/39216336902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx2JA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004523057/job/39216510500"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXnQaA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004447826/job/39216337000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXnAog",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004447832/job/39216332962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx1lQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004523057/job/39216510357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXnBeA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004447832/job/39216333176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYPU2Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004447826/job/39216993497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXx-Dg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39216512526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIXyYGw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23210&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d2275421856684bc07a4f82b91fc920c1fc33105",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2025-03-22T03:37:48Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiNPg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837129/job/39217302846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiOEA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837301/job/39217303056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiPSQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837455/job/39217303369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiNSg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837133/job/39217302858"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiOcA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837312/job/39217303152"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiN6Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837129/job/39217303017"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiN3g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837133/job/39217303006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiO9g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837312/job/39217303286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiOwg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837129/job/39217303234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYrtdw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14004837133/job/39217458551"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYiYAg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39217305602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIYip0w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23210&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9ea738d7822bec1b6fa07f7d5644c05429987812",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2025-03-22T15:17:17Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCRTQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874292/job/39228313933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKLWTaw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14049715101/job/39337694059"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKLVp8Q",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14049710904/job/39337683441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCShA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874470/job/39228314244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKLVqTw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14049710903/job/39337683535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCShg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874471/job/39228314246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCRiA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874297/job/39228313992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCRng",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874292/job/39228314014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCRRg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874297/job/39228313926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCSBA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874292/job/39228314116"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjKWHw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14009874297/job/39228446239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCXnA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39228315548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJIjCzdg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23210&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6934e4cbb78521f85518e7f8a2b930564fbf56dd",
                "additions": 6,
                "deletions": 19,
                "committedDate": "2025-03-26T02:26:09Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "31101893+dupuisf@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDl1A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141612/job/39413933524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDk8w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141752/job/39413933299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDlKQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141749/job/39413933353"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDl9Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141607/job/39413933557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDkzQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141612/job/39413933261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDlBw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141607/job/39413933319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUDmuA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141612/job/39413933752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUacqw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074141607/job/39414308011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLUD0Fw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39413937175"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ab63787e30d9308d467ca45c3898d749bed43bef",
                "additions": 23,
                "deletions": 15,
                "committedDate": "2025-03-26T03:07:58Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVn5A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619361/job/39415277540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVp2A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619764/job/39415278040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVpnQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619755/job/39415277981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVnkQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619364/job/39415277457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVm0A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619361/job/39415277264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVmwA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619364/job/39415277248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVVosg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619361/job/39415277746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVnW8Q",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074619364/job/39415568113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLVV5DQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39415281933"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8b97a917c197c4140afea40232c96816773d1e82",
                "additions": 19,
                "deletions": 17,
                "committedDate": "2025-03-26T03:32:15Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFKaw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901987/job/39416056427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFMQQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074902336/job/39416056897"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFMZg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074902332/job/39416056934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFKFQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901990/job/39416056341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFK-w",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901990/job/39416056571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFLLg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901987/job/39416056622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFMAQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901987/job/39416056833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLWFZ1A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39416060372"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-22T02:58:23Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/Defs.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/PositiveLinearMap.lean",
              "additions": 86,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Star/SelfAdjoint.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/PositiveLinearMap.lean",
              "additions": 199,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Complex/Basic.lean",
              "additions": 19,
              "deletions": 0
            }
          ]
        },
        "headRefName": "dupuisf/positivelinearmap_def",
        "headRefOid": "8b97a917c197c4140afea40232c96816773d1e82",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Ps6ub",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6hnMEf",
              "body": "This isn't my favorite proof, but I'm not going to hold up the PR because of it. The issue is that it's a one-off. It doesn't provide any reusable pieces.\r\n\r\nI would have preferred to see the linear functional version first, and then Jordan decomposition of hermitian functionals, and finally a proof of this that uses those things. However, I understand that's a large undertaking, which is why I won't hold up the PR.",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2025-03-25T01:39:47Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23210,
        "potentialMergeCommit": {
          "oid": "14e4209109c1a4c7dd99e8bb72d5ecb3ea8cd3f9"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6hZUtZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2025-03-22T02:59:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hnMEf",
              "body": "This isn't my favorite proof, but I'm not going to hold up the PR because of it. The issue is that it's a one-off. It doesn't provide any reusable pieces.\r\n\r\nI would have preferred to see the linear functional version first, and then Jordan decomposition of hermitian functionals, and finally a proof of this that uses those things. However, I understand that's a large undertaking, which is why I won't hold up the PR.",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2025-03-25T01:39:47Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53uUDC",
                    "body": "I am open to better suggestions regarding which file this lemma and the next should go.",
                    "createdAt": "2025-03-22T02:59:05Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c532niA",
                    "body": "I would probably start a new file: `Analysis.Complex.Module`",
                    "createdAt": "2025-03-24T19:29:00Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c532b_o",
                    "body": "I'm not sure if this is the correct place. Should it not be `Algebra.Order.Module.PositiveLinearMap`? :shrug:",
                    "createdAt": "2025-03-24T18:54:28Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c532dJC",
                    "body": "I know that positive linear maps can be continuous, but it's not always true (for C⋆-algebras sure, but that wouldn't even apply to `ℝ`-valued linear functionals). So perhaps `→ₚ` is better notation for the not-explicitly-continuous version?",
                    "createdAt": "2025-03-24T18:58:05Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c532j-t",
                    "body": "You're using `Semiring R` and `OrderedAddCommGrup E₁`, which is a bit of an antipattern. You could generalize to `OrderedAddCommMonoid` everywhere except `mk₀` I think, and there I think you could use [ExistsAddOfLE](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Order/Monoid/Unbundled/ExistsOfLE.html#ExistsAddOfLE)",
                    "createdAt": "2025-03-24T19:17:50Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c532yAI",
                    "body": ":golf: not necessary if you don't think it's better.\r\n```suggestion\r\n  rw [← inv_mul_cancel_left₀ two_ne_zero ‖x‖, ← AddSubgroup.norm_coe, realPart_apply_coe,\r\n    norm_smul, norm_inv, Real.norm_ofNat]\r\n  gcongr\r\n  exact norm_add_le _ _ |>.trans <| by simp [two_mul]\r\n```",
                    "createdAt": "2025-03-24T20:02:28Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c532zcy",
                    "body": "```suggestion\r\n  calc ‖imaginaryPart x‖ = ‖realPart (Complex.I • (-x))‖ := by simp\r\n    _ ≤ ‖x‖ := by simpa [norm_smul] using realPart.norm_le (Complex.I • (-x))\r\n```",
                    "createdAt": "2025-03-24T20:07:21Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c533kYd",
                    "body": "If we're going to keep this, it needs to be protected, and it can be marked `safe` I think (or do you have a counterexample?). However, there are other C⋆-algebra related objects that satisfy `OrderHomClass` (unital and non-unital star algebra homomorphisms), so why don't we just put the attribute on that? One argument against putting it on the generic lemma: it might be challenging for TC synthesis; I'm not sure.\r\n```suggestion\r\n-- We add the more specific lemma here purely for the aesop tag.\r\n@[aesop safe apply (rule_sets := [CStarAlgebra])]\r\nprotected lemma map_nonneg (f : E₁ →P[R] E₂) {x : E₁} (hx : 0 ≤ x) : 0 ≤ f x :=\r\n  map_nonneg f hx\r\n```",
                    "createdAt": "2025-03-24T23:27:01Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c533lTI",
                    "body": "I think we can make this `safe`, no? But actually, as with `map_nonneg`, I instead suggest that you make an instance of `StarHomClass`. Then `IsSelfAdjoint.map` will work.",
                    "createdAt": "2025-03-24T23:31:56Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5337Eh",
                    "body": "There's no need for the selfadjoint case, or even the nonnegative one. You can just clean it up a bit and inline everything with a `suffices`.\r\n\r\nNote that this includes clean-up of both proofs. In the general case, you can go straight to a linear combination of four nonnegative elements with `CStarAlgebra.linear_combination_nonneg`. And in the nonnegative proof, it's easier to restate a secondary existential and then apply the `choose` tactic. I've tried to use automation where possible to simplify and unify the arguments.\r\n```suggestion\r\n    obtain ⟨C, hmain⟩ := h_nonneg\r\n    refine ⟨(C + C) + (C + C), fun x ↦ ?_⟩\r\n    conv_lhs => rw [← CStarAlgebra.linear_combination_nonneg x]\r\n    set x₁ := (realPart x : A₁)⁺\r\n    set x₂ := (realPart x : A₁)⁻\r\n    set x₃ := (imaginaryPart x : A₁)⁺\r\n    set x₄ := (imaginaryPart x : A₁)⁻\r\n    simp only [map_add, map_sub, map_smul, NNReal.coe_add, add_mul]\r\n    calc\r\n      ‖f x₁ - f x₂ + (I • f x₃ - I • f x₄)‖ ≤\r\n          C * ‖x₁‖ + C * ‖x₂‖ + (C * ‖x₃‖ + C * ‖x₄‖) := by\r\n        apply norm_add_le _ _ |>.trans\r\n        gcongr\r\n        all_goals\r\n          apply norm_sub_le _ _ |>.trans\r\n          try simp only [norm_smul, norm_I, one_mul]\r\n          gcongr\r\n          all_goals exact hmain _ (by cfc_tac)\r\n      _ ≤ C * ‖x‖ + C * ‖x‖ + (C * ‖x‖ + C * ‖x‖) := by\r\n        gcongr\r\n        · exact CStarAlgebra.norm_posPart_le _ |>.trans <| realPart.norm_le x\r\n        · exact CStarAlgebra.norm_negPart_le _ |>.trans <| realPart.norm_le x\r\n        · exact CStarAlgebra.norm_posPart_le _ |>.trans <| imaginaryPart.norm_le x\r\n        · exact CStarAlgebra.norm_negPart_le _ |>.trans <| imaginaryPart.norm_le x\r\n  -- Let's proceed by contradiction\r\n  by_contra! hcontra\r\n  -- Given `n : ℕ`, we can always choose a positive element of norm one with `2 ^ (2 * n) < ‖f x‖`\r\n  have (n : ℕ) : ∃ x, 0 ≤ x ∧ ‖x‖ = 1 ∧ 2 ^ (2 * n) < ‖f x‖ := by\r\n    obtain ⟨hx₁, hx₂⟩ := Classical.choose_spec (hcontra (2 ^ (2 * n)))\r\n    set x := Classical.choose (hcontra (2 ^ (2 * n)))\r\n    have hx := (eq_zero_or_norm_pos x).resolve_left (fun hx ↦ by simp_all)\r\n    refine ⟨‖x‖⁻¹ • x, smul_nonneg (by positivity) hx₁, ?_, ?_⟩\r\n    · simp [norm_smul, inv_mul_cancel₀ hx.ne']\r\n    · simpa [norm_smul] using (lt_inv_mul_iff₀' hx).mpr hx₂\r\n  -- Let `x n` be a sequence of nonnegative elements such that `‖x n‖ = 1` and `‖f (x n)‖ ≥ 4 ^ n`.\r\n  choose x hx using this\r\n  simp only [forall_and] at hx\r\n  obtain ⟨hx_nonneg, hx_norm, hx⟩ := hx\r\n  -- `∑ n, 2 ^ (-n) • x n` converges\r\n  have x_summable : Summable fun n : ℕ => (2 : ℝ) ^ (-(n : ℤ)) • x n := by\r\n    refine Summable.of_norm ?_\r\n    have : (2 : ℝ)⁻¹ < 1 := by norm_num\r\n    simp [norm_smul, hx_norm, ← inv_pow, this]\r\n  -- There is some `n` such that `‖f (∑' m, 2 ^ (-m) • x m)‖ < 2 ^ n`\r\n  obtain ⟨n, hn⟩ : ∃ n : ℕ, ‖f (∑' (n : ℕ), (2 : ℝ) ^ (-(n : ℤ)) • x n)‖ < (2 : ℝ) ^ n :=\r\n    tendsto_pow_atTop_atTop_of_one_lt (show (1 : ℝ) < 2 by norm_num) |>.eventually_gt_atTop _\r\n      |>.exists\r\n  -- But `2 ^ n ≤ ‖f (2 ^ (-n) • x n)‖ ≤ ‖f (∑' m, 2 ^ (-m) • x m)‖`, which is a contradiction.\r\n  apply hn.not_le\r\n  trans ‖f ((2 : ℝ) ^ (-n : ℤ) • x n)‖\r\n  · have := hx n |>.le\r\n    rw [pow_mul', sq] at this\r\n    simpa [norm_smul] using (le_inv_mul_iff₀' (show 0 < (2 : ℝ) ^ n by positivity)).mpr this\r\n  · have (m : ℕ) : 0 ≤ ((2 : ℝ) ^ (-(m : ℤ)) • x m) := smul_nonneg (by positivity) (hx_nonneg m)\r\n    refine CStarAlgebra.norm_le_norm_of_nonneg_of_le (f.map_nonneg (this n)) ?_\r\n    gcongr\r\n    exact le_tsum x_summable n fun m _ ↦ this m\r\n```",
                    "createdAt": "2025-03-25T01:34:53Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMxMTAxODkz",
              "login": "dupuisf"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFKaw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901987/job/39416056427"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFMQQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074902336/job/39416056897"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFMZg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074902332/job/39416056934"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFKFQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901990/job/39416056341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFK-w",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901990/job/39416056571"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFLLg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901987/job/39416056622"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFMAQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14074901987/job/39416056833"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJLWFZ1A",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39416060372"
              }
            ]
          }
        },
        "title": "feat(CStarAlgebra): define positive maps and show their continuity",
        "updatedAt": "2025-03-26T03:33:26Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23210",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "485ffd3af5072c33add29a48ed83289ce1229cc7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "28b02a5ed7561d1493f8440b4d4fe0ced2e455e9"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vPBO9zwAAAAPxlxPe",
              "createdAt": "2025-03-22T02:58:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hZUtZ",
              "createdAt": "2025-03-22T02:59:05Z",
              "body": "",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6jnEe3",
              "createdAt": "2025-03-22T02:59:22Z",
              "body": "### PR summary [8b97a917c1](https://github.com/leanprover-community/mathlib4/pull/23210/commits/8b97a917c197c4140afea40232c96816773d1e82)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.Module.LinearMap.PositiveLinearMap` (new file)|498|\n| `Mathlib.Analysis.CStarAlgebra.PositiveLinearMap` (new file)|2396|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ PositiveLinearMap`\n`+ PositiveLinearMapClass`\n`+ _root_.LinearMapClass.map_smul_of_tower`\n`+ apply_le_of_isSelfAdjoint`\n`+ exists_norm_apply_le`\n`+ exists_norm_apply_le_of_isSelfAdjoint`\n`+ exists_norm_apply_le_of_nonneg`\n`+ imaginaryPart.norm_le`\n`+ instance : ContinuousLinearMapClass (A₁ →P[ℂ] A₂) ℂ A₁ A₂`\n`+ instance : FunLike (E₁ →P[R] E₂) E₁ E₂`\n`+ instance : PositiveLinearMapClass (E₁ →P[R] E₂) R E₁ E₂`\n`+ isSelfAdjoint`\n`+ map_isSelfAdjoint`\n`+ map_nonneg`\n`+ map_smul_of_tower`\n`+ mk₀`\n`+ norm_apply_le_of_nonneg`\n`+ realPart.norm_le`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vPBO9zwAAAAPxlyIc",
              "createdAt": "2025-03-22T02:59:27Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d2275421856684bc07a4f82b91fc920c1fc33105"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9ea738d7822bec1b6fa07f7d5644c05429987812"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hnMEf",
              "createdAt": "2025-03-24T18:54:28Z",
              "body": "This isn't my favorite proof, but I'm not going to hold up the PR because of it. The issue is that it's a one-off. It doesn't provide any reusable pieces.\r\n\r\nI would have preferred to see the linear functional version first, and then Jordan decomposition of hermitian functionals, and finally a proof of this that uses those things. However, I understand that's a large undertaking, which is why I won't hold up the PR.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vPBO9zwAAAAPzOmSw",
              "createdAt": "2025-03-25T01:40:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6j_mxh",
              "createdAt": "2025-03-25T13:59:01Z",
              "body": "The reduction from the arbitrary case to the nonnegative case was annoying, so I decided we should have another lemma. It's this:\r\n```lean\r\nlemma Complex.I_pow_three : I ^ 3 = -I := by\r\n  rw [pow_succ, I_sq, neg_one_mul]\r\n\r\nlemma Complex.I_pow_eq_pow_mod (n : ℕ) : I ^ n = I ^ (n % 4) := by\r\n  conv_lhs => rw [← Nat.div_add_mod n 4]\r\n  simp [pow_add, pow_mul, I_pow_four]\r\n\r\nopen Complex in\r\nlemma CStarAlgebra.exists_sum_four_nonneg {A : Type*} [NonUnitalCStarAlgebra A] [PartialOrder A]\r\n    [StarOrderedRing A] (a : A) :\r\n    ∃ x : Fin 4 → A, (∀ i, 0 ≤ x i) ∧ (∀ i, ‖x i‖ ≤ ‖a‖) ∧ a = ∑ i : Fin 4, I ^ (i : ℕ) • x i := by\r\n  use ![(realPart a)⁺, (imaginaryPart a)⁺, (realPart a)⁻, (imaginaryPart a)⁻]\r\n  rw [← and_assoc, ← forall_and]\r\n  constructor\r\n  · intro i\r\n    fin_cases i\r\n    all_goals\r\n      constructor\r\n      · simp\r\n        cfc_tac\r\n    · exact CStarAlgebra.norm_posPart_le _ |>.trans <| realPart.norm_le a\r\n    · exact CStarAlgebra.norm_posPart_le _ |>.trans <| imaginaryPart.norm_le a\r\n    · exact CStarAlgebra.norm_negPart_le _ |>.trans <| realPart.norm_le a\r\n    · exact CStarAlgebra.norm_negPart_le _ |>.trans <| imaginaryPart.norm_le a\r\n  · nth_rw 1 [← CStarAlgebra.linear_combination_nonneg a]\r\n    simp [Fin.sum_univ_four, sub_eq_add_neg]\r\n    rw [add_add_add_comm]\r\n    have : ((3 : Fin 4) : ℕ) = 3 := rfl -- ugh, seriously, why can't `norm_num` do this?\r\n    match_scalars\r\n    all_goals simp [this, I_pow_three]\r\n```\r\nWith this lemma, the `suffices` block can be reduced to:\r\n```lean\r\n  suffices h_nonneg : ∃ C : ℝ≥0, ∀ a, 0 ≤ a → ‖f a‖ ≤ C * ‖a‖ by\r\n    obtain ⟨C, hmain⟩ := h_nonneg\r\n    refine ⟨4 * C, fun x ↦ ?_⟩\r\n    obtain ⟨y, hy_nonneg, hy_norm, hy⟩ := CStarAlgebra.exists_sum_four_nonneg x\r\n    conv_lhs => rw [hy]\r\n    simp only [map_sum, map_smul, NNReal.coe_add]\r\n    apply norm_sum_le _ _ |>.trans\r\n    simp only [norm_smul, norm_pow, norm_I, one_pow, one_mul]\r\n    apply Finset.sum_le_sum (g := fun _ ↦ C * ‖x‖) (fun i _ ↦ ?_) |>.trans <| by simp [mul_assoc]\r\n    apply hmain _ (hy_nonneg i) |>.trans\r\n    simp only\r\n    gcongr\r\n    exact hy_norm i\r\n```\r\nOf course, if you prefer you can do it in a `calc` block for readability, but this isn't so bad. ",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6934e4cbb78521f85518e7f8a2b930564fbf56dd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ab63787e30d9308d467ca45c3898d749bed43bef"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8b97a917c197c4140afea40232c96816773d1e82"
              }
            }
          ]
        }
      }
    }
  }
}
