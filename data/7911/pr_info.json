{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 344,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alreadydone"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "A function from a topological space `X` to a type `Y` is a separated map if any two distinct points in `X` with the same image in `Y` can be separated by open neighborhoods. A constant function is a separated map if and only if `X` is a `T2Space`.\r\n\r\nA function from a topological space `X` is locally injective if every point of `X` has a neighborhood on which `f` is injective. A constant function is locally injective if and only if `X` is discrete.\r\n\r\nGiven `f : X → Y` one can form the pullback $X \\times_Y X$; the diagonal map $\\Delta: X \\to X \\times_Y X$ is always an embedding. It is a closed embedding iff `f` is a separated map, iff the equal locus of any two continuous maps equalized by `f` is closed. It is an open embedding iff `f` is locally injective, iff any such equal locus is open. Therefore, if `f` is a locally injective separated map (e.g. a covering map), the equal locus of two continuous maps equalized by `f` is clopen, so if the two maps agree on a point, then they agree on the whole connected component. This is crucial to showing the uniqueness of path lifting and the uniqueness and continuity of homotopy lifting for covering spaces.\r\n\r\nThe analogue of separated maps and locally injective maps in algebraic geometry are separated morphisms and unramified morphisms, respectively.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-11-03T11:58:55Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5qDkYR",
              "body": "The proof that coverings are separated is a bit complicated because two facts are missing:\r\n- being separated is local on the base\r\n- a trivial covering is separated\r\n- itself because fiber products of separated maps are separated.\r\nPlaying with “local on the base ” might be inconvenient, though, because it may require some coercion, but that may be worth being tried.\r\n(This is how this stuff is treated in Bourbaki.)",
              "createdAt": "2023-10-25T13:49:13Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qEvdL",
              "body": "Is 10 lines long? :) And I'm not sure how to interpret \"being separated is local on the base\" since I don't assume the base space has a topology in `IsSaparatedMap`. Why does Bourbaki need to assume a topology?",
              "createdAt": "2023-10-25T16:18:19Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qNVej",
              "body": "Currently the proof is very straightforward from the definition, which is the existence of local trivializations `U ≃ₜ V × F` around any point `e : E`. If another point `e'` projects to the same point in `V`, then `e` and `e'` must correspond to different points in the fiber `F`, and the preimage of these two points of `F` in `U` gives disjoint open neighborhoods of `e` and `e'`.\r\n\r\nMaybe with another definition of covering maps Bourbaki's proof would be easier, but it certainly doesn't look like the case here ...",
              "createdAt": "2023-10-26T20:54:09Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q0EJc",
              "body": "I'm going to merge this as is. When there is more API of the kind that ACL is talking about, then we can consider golfing the proof.\r\n\r\nbors merge",
              "createdAt": "2023-11-03T08:22:42Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q0Zvz",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6742974270/job/18330009054)",
              "createdAt": "2023-11-03T09:34:41Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q1Ic9",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6744198203/job/18333553444)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6744198203/job/18333553070)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6744198203/job/18333553235)",
              "createdAt": "2023-11-03T11:58:54Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "aa5dbe0bfc3e23e0369b8237ebfbc6f9d2e66391",
                "additions": 335,
                "deletions": 6,
                "committedDate": "2023-10-25T03:41:04Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "807527f85c1e39c8d79edfcd46b9b905f21b74bb",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-10-25T03:48:54Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3b46e01bec77ccc8d422fe7355bdd93553177faf",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-25T04:01:35Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "85f0212fed3cf89242457b3a6a0ca96f1290c8af",
                "additions": 7,
                "deletions": 1,
                "committedDate": "2023-10-25T04:55:03Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1df1c3a022f3452109e0010f92f359c654ee9cae",
                "additions": 49,
                "deletions": 1,
                "committedDate": "2023-10-25T07:17:42Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4f172d58b4bd77da83677ba0b570f6c72e05e11e",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-10-26T15:13:36Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8b5aa6905f188339b17f90f02888f9d9e80ad6de",
                "additions": 1,
                "deletions": 49,
                "committedDate": "2023-10-26T15:14:37Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "539661334bd8a5058d3df6f6cb2dae2ce1ef0c5b",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-26T16:23:31Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "be3fb2e59eb35aabfe5e24ab041f139d4f80d32d",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-26T17:58:36Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-25T03:42:15Z",
        "deletions": 8,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Prod.lean",
              "additions": 83,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Covering.lean",
              "additions": 36,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/IsLocallyHomeomorph.lean",
              "additions": 6,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/SeparatedMap.lean",
              "additions": 218,
              "deletions": 0
            }
          ]
        },
        "headRefName": "SeparatedMap",
        "headRefOid": "be3fb2e59eb35aabfe5e24ab041f139d4f80d32d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5dtDu2",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7911,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQ4MTczNDg=",
              "login": "AntoineChambert-Loir"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: separated and locally injective maps",
        "updatedAt": "2023-11-03T11:59:00Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7911",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "aa5dbe0bfc3e23e0369b8237ebfbc6f9d2e66391"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c502mhFzwAAAAKBc70j",
              "createdAt": "2023-10-25T03:42:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c502mhFzwAAAAKBc70k",
              "createdAt": "2023-10-25T03:42:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "807527f85c1e39c8d79edfcd46b9b905f21b74bb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3b46e01bec77ccc8d422fe7355bdd93553177faf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "85f0212fed3cf89242457b3a6a0ca96f1290c8af"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1df1c3a022f3452109e0010f92f359c654ee9cae"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qDkYR",
              "createdAt": "2023-10-25T13:49:13Z",
              "body": "The proof that coverings are separated is a bit complicated because two facts are missing:\r\n- being separated is local on the base\r\n- a trivial covering is separated\r\n- itself because fiber products of separated maps are separated.\r\nPlaying with “local on the base ” might be inconvenient, though, because it may require some coercion, but that may be worth being tried.\r\n(This is how this stuff is treated in Bourbaki.)",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qEvdL",
              "createdAt": "2023-10-25T16:18:19Z",
              "body": "Is 10 lines long? :) And I'm not sure how to interpret \"being separated is local on the base\" since I don't assume the base space has a topology in `IsSaparatedMap`. Why does Bourbaki need to assume a topology?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4f172d58b4bd77da83677ba0b570f6c72e05e11e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8b5aa6905f188339b17f90f02888f9d9e80ad6de"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "539661334bd8a5058d3df6f6cb2dae2ce1ef0c5b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "be3fb2e59eb35aabfe5e24ab041f139d4f80d32d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qNVej",
              "createdAt": "2023-10-26T20:54:09Z",
              "body": "Currently the proof is very straightforward from the definition, which is the existence of local trivializations `U ≃ₜ V × F` around any point `e : E`. If another point `e'` projects to the same point in `V`, then `e` and `e'` must correspond to different points in the fiber `F`, and the preimage of these two points of `F` in `U` gives disjoint open neighborhoods of `e` and `e'`.\r\n\r\nMaybe with another definition of covering maps Bourbaki's proof would be easier, but it certainly doesn't look like the case here ...",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q0EJc",
              "createdAt": "2023-11-03T08:22:42Z",
              "body": "I'm going to merge this as is. When there is more API of the kind that ACL is talking about, then we can consider golfing the proof.\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c502mhFzwAAAAKG3dTV",
              "createdAt": "2023-11-03T08:22:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c502mhFzwAAAAKG3dUw",
              "createdAt": "2023-11-03T08:22:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q0Zvz",
              "createdAt": "2023-11-03T09:34:41Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6742974270/job/18330009054)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q1Ic9",
              "createdAt": "2023-11-03T11:58:54Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6744198203/job/18333553444)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6744198203/job/18333553070)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6744198203/job/18333553235)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c502mhFzwAAAAKHAaWq",
              "createdAt": "2023-11-03T11:58:55Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c502mhFzwAAAAKHAaic",
              "createdAt": "2023-11-03T11:59:00Z"
            }
          ]
        }
      }
    }
  }
}
