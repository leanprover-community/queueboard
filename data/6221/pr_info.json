{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 670,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR ports the whole `compute_degree` tactic from mathlib3.\r\n\r\nThe tactic makes progress on goals of the form\r\n*  `natDegree f ≤ d`,\r\n*  `degree f ≤ d`,\r\n*  `natDegree f = d`,\r\n*  `degree f = d`,\r\n*  `coeff f n = r`.\r\n\r\nThe variant `compute_degree!` applies `norm_num` and `assumption` to all left-over goals.\r\n\r\nFor instance, here is a valid computation of the degree of the 105-th cyclotomic polynomial:\r\n```lean\r\nexample : natDegree\r\n    (1 + X + X ^ 2 - X ^ 5 - X ^ 6 - 2 * X ^ 7 - X ^ 8 - X ^ 9 + X ^ 12 + X ^ 13 + X ^ 14 +\r\n        X ^ 15 + X ^ 16 + X ^ 17 - X ^ 20 - X ^ 22 - X ^ 24 - X ^ 26 - X ^ 28 + X ^ 31 + X ^ 32 +\r\n        X ^ 33 + X ^ 34 + X ^ 35 + X ^ 36 - X ^ 39 - X ^ 40 - 2 * X ^ 41 - X ^ 42 - X ^ 43 +\r\n        X ^ 46 + X ^ 47 + X ^ 48 : ℤ[X]) = 48 := by\r\n  compute_degree!\r\n```\r\n(Lean takes approximately 3s on my computer to prove the computation above.)\r\n\r\nAffected files:\r\n```\r\nMathlib/Lean/Expr/Basic.lean\r\nMathlib/Tactic/ComputeDegree.lean\r\ntest/ComputeDegree.lean\r\n```\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #6220 for some basic lemmas\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-09-02T13:20:22Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ju-SD",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#6220~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-08-10T13:47:04Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ljFMW",
              "body": "Kyle, thank you so much for taking the time to review the PR!\n\nI've looked through your suggestions and I find them all great!  I hope to have time later today to sit at a computer and implement them.",
              "createdAt": "2023-09-02T04:46:31Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ljhle",
              "body": "I think this is in a good state now, and the user interface seems well-specified enough (with internals solid enough) that I'm happy to merge it. One thing we might want in the future is to have `compute_degree` be changed into a collection of `norm_num` extensions, with `compute_degree` in particular applying to the goals laid out in the docstring. One might even have `compute_degree` be a version of `norm_num` specialized to *just* `degree`/`natDegree`/`coeff` expressions and inequality goals involving them, letting it automatically compute degrees.\r\n\r\nAnyway, the perfect is the enemy of the good, so\r\n\r\nbors r+",
              "createdAt": "2023-09-02T11:47:34Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ljmvr",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6058211233/job/16440149487)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6058211233/job/16440149382)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6058211233/job/16440149429)",
              "createdAt": "2023-09-02T13:20:21Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "93eca5d3ce20d09a169fe467d23595cfdc7f7028",
                "additions": 904,
                "deletions": 9,
                "committedDate": "2023-08-10T14:19:13Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "affded00737239fcec7344745fdbcd7e9c7f6913",
                "additions": 0,
                "deletions": 239,
                "committedDate": "2023-08-10T14:19:13Z",
                "author": {
                  "name": "damiano",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5fc9871243e8dc659e55235f3740d598e0a4e4f6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "damiano",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "27528e6184f9402542eeb2763da60bb0058b4cc0",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "damiano",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b52bfd7edfea08da57de6b7368dce1ff43cf16f4",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bd2477757d2bb10fdd86a468fa597a79bcb8b84f",
                "additions": 107,
                "deletions": 97,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7fa4c0d22c167fc256dc53e160de3c1f6e680e47",
                "additions": 48,
                "deletions": 48,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c3d44f51cb7a1fd7529b665a74cb3d907fd4c8f9",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6abeb5f37c5a444cd79be52ffa65323372f1930d",
                "additions": 11,
                "deletions": 5,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "01d7d88f88f88273f85aed2bf731a9ff18b05209",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "72d950d0314e75d951b04f770974e6f9f58c3a7c",
                "additions": 92,
                "deletions": 54,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8470949b2cd60dd5aa7b20d836618bb21ac9ad9b",
                "additions": 18,
                "deletions": 0,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9432f6652699b23ebe8c71d7b74aa673060bb53b",
                "additions": 28,
                "deletions": 21,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "051da37f15158ff5425ab3c578f726767d58b195",
                "additions": 13,
                "deletions": 1,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "90836bc149fee1a1240b71d8760ded7e2b8f907c",
                "additions": 18,
                "deletions": 4,
                "committedDate": "2023-08-10T14:19:14Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6e67c7af9c2e1ede46e061f000a9185636bfd0d5",
                "additions": 23,
                "deletions": 0,
                "committedDate": "2023-08-10T14:20:32Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ab9e72e2b9ff9f69ddc10d675975efaeeeb5fc8a",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b9864edb0fd7def5a3e23bd83d6da55a01c2c58e",
                "additions": 0,
                "deletions": 24,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8a481725e40b4d45fe11f97a18f798c1a7a627c6",
                "additions": 6,
                "deletions": 2,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "93fb672f1ae1193a2f385b553b525d5499904532",
                "additions": 2,
                "deletions": 6,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4fd756e8563b2e4141b589b62a90852a46c224ec",
                "additions": 5,
                "deletions": 6,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0c01b449a0c7bd1adf13e58ea5f27d9d97031564",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cfcd5ceaaff8c935516f3783f80e6186ca4ff951",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6218e91bbc432c6e59886cea49eaba7f5c40d719",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8c914f4d9aeb67e9aa87151e04bb975dd2086a5a",
                "additions": 18,
                "deletions": 12,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bb7df9d2344ed70caf6372d975f216748aa777c4",
                "additions": 6,
                "deletions": 5,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c761bd00082b5cf6ac3705e3c9268b986eb47a70",
                "additions": 15,
                "deletions": 15,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "667d8e62792395b4f5770762548c6ce175a7991d",
                "additions": 48,
                "deletions": 46,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1b7be8df28725e3a5c2a19806445bcb404c13a74",
                "additions": 12,
                "deletions": 3,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e0e116c6799de2ee36b84d178d10710c272a893e",
                "additions": 0,
                "deletions": 28,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d690d2559ffeb0f7a3ff48cbe8bb1dc484bfe4aa",
                "additions": 9,
                "deletions": 4,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "69d0ed8475e31086054a54b9989d3fa271915362",
                "additions": 78,
                "deletions": 94,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bc42b0f6271238fc953820f2548d7559b7d44fc5",
                "additions": 5,
                "deletions": 6,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "damiano",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7043919d5fac18a315c2090a3f9593bc503d4c10",
                "additions": 19,
                "deletions": 19,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "00ba15783b73986b1a8b20141930c10aae545265",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f13720bf4541fbe7bd12f278ce9933c23993aabe",
                "additions": 14,
                "deletions": 6,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "56b17a0a8f5874111e8b8c222e924d88688ecb09",
                "additions": 13,
                "deletions": 10,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0f371d35ba23286e7a777521dcdd912bf55018ba",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2c49ec78791524c9029311ef6bd1d6650f0d0503",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e7f8613e995e22feaed43347259f392a663d7e5a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2d968a61ab5daaab0284a7acc5ab8a17b395dd03",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bbe8cfc895be3f40bcdcf6332003e1debeb5600c",
                "additions": 3,
                "deletions": 25,
                "committedDate": "2023-08-10T14:21:35Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a66f2ca28432ef3e2782d88556cabcbdc712a62f",
                "additions": 1,
                "deletions": 70,
                "committedDate": "2023-08-10T14:35:48Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0795ff0a50664e63e8cb9ca617fa381ae2a24049",
                "additions": 143,
                "deletions": 0,
                "committedDate": "2023-08-10T19:52:17Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "88ef77e7d32079c2b9b15cf3577b45036503463d",
                "additions": 11660,
                "deletions": 11065,
                "committedDate": "2023-08-11T13:08:22Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e15a63c70cf3346bd609d3abfeb71750d91f4692",
                "additions": 1404,
                "deletions": 455,
                "committedDate": "2023-08-13T05:55:26Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b88e9e814312d10d16d35291fb8f816b569b7b23",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-13T05:57:36Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "152f18a9c778cfd3ad59f36a88445c3fdf5f34e3",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-13T06:02:46Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b885049b20b9176a28d200cb619a6d4c3f6fa6e1",
                "additions": 5964,
                "deletions": 1236,
                "committedDate": "2023-08-15T05:52:18Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2db2210d7093314c5986f7500fcf40756f8fd274",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-08-15T05:54:21Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c687172bca0ed5483745cf3b66715ff615fd4e0a",
                "additions": 14444,
                "deletions": 7113,
                "committedDate": "2023-08-31T10:06:27Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "578f0b9250a771387ce796a82bbf0a009b3f68f3",
                "additions": 1082,
                "deletions": 870,
                "committedDate": "2023-08-31T10:08:46Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9fce11357930e189e32dae13bc669618de84a6e8",
                "additions": 970,
                "deletions": 232,
                "committedDate": "2023-09-02T09:14:20Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c3fbc103883feb677b2961457eca0cf0f71d60ba",
                "additions": 111,
                "deletions": 115,
                "committedDate": "2023-09-02T09:31:36Z",
                "author": {
                  "name": "damiano",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9d662a48b88d2cb0588cc5160f1f134a8df1d6e5",
                "additions": 145,
                "deletions": 133,
                "committedDate": "2023-09-02T09:31:55Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8066f3b3976c78e1d065684a94655bbea365b53d",
                "additions": 5,
                "deletions": 13,
                "committedDate": "2023-09-02T09:32:59Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d8cfc97cac745f57397c08cb33b1957db4c467e",
                "additions": 11,
                "deletions": 7,
                "committedDate": "2023-09-02T09:42:34Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-28T16:49:43Z",
        "deletions": 8,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Lean/Expr/Basic.lean",
              "additions": 11,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ComputeDegree.lean",
              "additions": 437,
              "deletions": 8
            },
            {
              "path": "test/ComputeDegree.lean",
              "additions": 222,
              "deletions": 0
            }
          ]
        },
        "headRefName": "adomani_compute_degree",
        "headRefOid": "4d8cfc97cac745f57397c08cb33b1957db4c467e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WrBQo",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7mTAET",
              "color": "DA6D43",
              "name": "modifies-tactic-syntax"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fxvhE",
              "body": "Thanks for writing this tactic. There are some things I'd like to see changed before it is merged, and I've tested all these suggestions locally.",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-01T14:39:48Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6221,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fxvhE",
              "body": "Thanks for writing this tactic. There are some things I'd like to see changed before it is merged, and I've tested all these suggestions locally.",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-01T14:39:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f2ME5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-09-02T09:34:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5f2M4H",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-09-02T09:42:58Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OQner",
                    "body": "Let's move this to `Mathlib.Lean.Expr.Basic`. Perhaps create a section called \"recognizers\"?\r\n\r\n(One thing you should be able to do to save a few characters is ````let (type, _, lhs, rhs) ← p.app4? ``LE.le````, but this isn't so important.)",
                    "createdAt": "2023-09-01T12:42:33Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OTu0s",
                    "body": "This was the only remaining move: done now!",
                    "createdAt": "2023-09-02T09:42:58Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OQqsR",
                    "body": "The body of this function should be indented. If you wrap it in `Id.run do`, then you can make use of early return to make it a bit easier to read. For example:\r\n```lean\r\ndef twoHeadsArgs (e : Expr) : Name × Name × Name × List Bool := Id.run do\r\n  let (eq_or_le, lhs, rhs) := match e.getAppFnArgs with\r\n    | (na@``Eq, #[_, lhs, rhs])       => (na, lhs, rhs)\r\n    | (na@``LE.le, #[_, _, lhs, rhs]) => (na, lhs, rhs)\r\n    | (na, _) => (na, default)\r\n  unless eq_or_le ∈ [``Eq, ``LE.le] do\r\n    return (.anonymous, eq_or_le, lhs.getAppFn.constName, [])\r\n  let (ndeg_or_deg_or_coeff, pol, and?) := match lhs.getAppFnArgs with\r\n    | (na@``Polynomial.natDegree, #[_, _, pol]) => (na, pol, [rhs])\r\n    | (na@``Polynomial.degree, #[_, _, pol])    => (na, pol, [rhs])\r\n    | (na@``Polynomial.coeff, #[_, _, pol, c])  => (na, pol, [rhs, c])\r\n    | (na@_, _) => (na, default)\r\n  if pol == default then\r\n    return (ndeg_or_deg_or_coeff, .anonymous, pol.getAppFn.constName, [])\r\n  let head := match pol.numeral? with\r\n    -- can I avoid the tri-splitting `n = 0`, `n = 1`, and generic `n`?\r\n    | some 0 => `zero\r\n    | some 1 => `one\r\n    | some _ => `many\r\n    | none => match pol.getAppFnArgs with\r\n      | (``FunLike.coe, #[_, _, _, _, polFun, _]) => match polFun.getAppFnArgs with\r\n        | (na@``Polynomial.monomial, _) => na\r\n        | (na@``Polynomial.C, _) => na\r\n        | _ => `error\r\n      | (na, _) => na\r\n  (ndeg_or_deg_or_coeff, eq_or_le, head, and?.map isMVar)\r\n```\r\n(Note: I used `getAppFn.constName` instead of `getAppFnArgs.1`.)\r\n\r\nThe way default values are used and having `zero`/`one`/`many` be special names are a bit sketchy. Suggestions will be in another comment.\r\n\r\nHmm, actually `lhs.getAppFnArgs.1` and `pol.getAppFnArgs.1` are pretty sketchy since `lhs` and `pol` are not anything meaningful in these cases.\r\n",
                    "createdAt": "2023-09-01T12:55:13Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORCbu",
                    "body": "Here's how I'd suggest organizing this function:\r\n```lean\r\n/-- `twoHeadsArgs e` takes an `Expr`ession `e` as input and recurses into `e` to make sure\r\nthe `e` looks like `lhs ≤ rhs` or `lhs = rhs` and that `lhs` is one of\r\n`natDegree f, degree f, coeff f d`.\r\nIt returns\r\n* the function being applied on the LHS (`natDegree`, `degree`, or `coeff`),\r\n  or else `.anonymous` if it's none of these.\r\n* the name of the relation (`Eq` or `LE.le`), or else `.anonymous` if it's none of these.\r\n* either\r\n  * `.inl zero`, `.inl one`, or `.inl many` if the polynomial in a numeral\r\n  * or `.inr` of the the head symbol of `f`\r\n  * or `.inl .anonymous` if inapplicable\r\n* if it exists, whether the `rhs` is a metavariable\r\n* if the LHS is `coeff f d`, whether `d` is a metavariable\r\n\r\nThis is all the data needed to figure out whether `compute_degree` can make progress on `e`\r\nand, if so, which lemma it should apply.\r\n\r\nSample outputs:\r\n* `natDegree (f + g) ≤ d => (natDegree, LE.le, HAdd.hAdd, d.isMVar, none)` (similarly for `=`);\r\n* `degree (f * g) = d => (degree, Eq, HMul.hMul, d.isMVar, none)` (similarly for `≤`);\r\n* `coeff (1 : ℕ[X]) c = x => (coeff, Eq, one, x.isMVar, c.isMVar)` (no `≤` option!).\r\n-/\r\ndef twoHeadsArgs (e : Expr) : Name × Name × Sum Name Name × List Bool := Id.run do\r\n  let (eq_or_le, lhs, rhs) ← match e.getAppFnArgs with\r\n    | (na@``Eq, #[_, lhs, rhs])       => pure (na, lhs, rhs)\r\n    | (na@``LE.le, #[_, _, lhs, rhs]) => pure (na, lhs, rhs)\r\n    | _ => return (.anonymous, .anonymous, .inl .anonymous, [])\r\n  let (ndeg_or_deg_or_coeff, pol, and?) ← match lhs.getAppFnArgs with\r\n    | (na@``Polynomial.natDegree, #[_, _, pol]) => (na, pol, [rhs.isMVar])\r\n    | (na@``Polynomial.degree, #[_, _, pol])    => (na, pol, [rhs.isMVar])\r\n    | (na@``Polynomial.coeff, #[_, _, pol, c])  => (na, pol, [rhs.isMVar, c.isMVar])\r\n    | _ => return (.anonymous, eq_or_le, .inl .anonymous, [])\r\n  let head := match pol.numeral? with\r\n    -- can I avoid the tri-splitting `n = 0`, `n = 1`, and generic `n`?\r\n    | some 0 => .inl `zero\r\n    | some 1 => .inl `one\r\n    | some _ => .inl `many\r\n    | none => match pol.getAppFnArgs with\r\n      | (``FunLike.coe, #[_, _, _, _, polFun, _]) =>\r\n        let na := polFun.getAppFn.constName\r\n        if na ∈ [``Polynomial.monomial, ``Polynomial.C] then\r\n          .inr na\r\n        else\r\n          .inl .anonymous\r\n      | (na, _) => .inr na\r\n  (ndeg_or_deg_or_coeff, eq_or_le, head, and?)\r\n```",
                    "createdAt": "2023-09-01T14:18:42Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OTuOa",
                    "body": "Very nice!  I like `Id.run do` and `Sum Name Name`!",
                    "createdAt": "2023-09-02T09:34:24Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORCuN",
                    "body": "Indentation:\r\n```suggestion\r\ndef getCongrLemma (twoH : Name × Name × List Bool) (debug : Bool := false) : Name :=\r\n  let nam := match twoH with\r\n    | (_,           ``LE.le, [rhs]) => if rhs then ``id else ``le_trans\r\n    | (``natDegree, ``Eq, [rhs])    => if rhs then ``id else ``natDegree_eq_of_le_of_coeff_ne_zero'\r\n    | (``degree,    ``Eq, [rhs])    => if rhs then ``id else ``degree_eq_of_le_of_coeff_ne_zero'\r\n    | (``coeff,     ``Eq, [rhs, c]) =>\r\n      match rhs, c with\r\n      | false, false => ``coeff_congr\r\n      | false, true  => ``Eq.trans\r\n      | true, false  => ``coeff_congr_lhs\r\n      | true, true   => ``id\r\n    | _ => ``id\r\n  if debug then\r\n    let natr := if nam.getString == `trans then nam else nam.getString\r\n    dbg_trace f!\"congr lemma: '{natr}'\"\r\n    nam\r\n  else\r\n    nam\r\n```",
                    "createdAt": "2023-09-01T14:19:41Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORDE1",
                    "body": "To make it accept the changes made to `twoHeadArgs`, and some changes to improve robustness.\r\n```suggestion\r\ndef dispatchLemma\r\n    (twoH : Name × Name × Sum Name Name × List Bool) (debug : Bool := false) : Name :=\r\n  match twoH with\r\n    | (.anonymous, _, _) => ``id -- `twoH` gave default value, so we do nothing\r\n    | (_, .anonymous, _) => ``id -- `twoH` gave default value, so we do nothing\r\n    | (na1, na2, head, bools) =>\r\n      let msg := f!\"\\ndispatchLemma:\\n  {head}\"\r\n      -- if there is some non-metavariable on the way, we \"congr\" it away\r\n      if false ∈ bools then getCongrLemma (na1, na2, bools) debug\r\n      else\r\n      -- otherwise, we select either the first, second or third element of the triple in `nas` below\r\n      let π (natDegLE : Name) (degLE : Name) (coeff : Name) : Name := Id.run do\r\n        let lem := match na1, na2 with\r\n          | ``natDegree, ``LE.le => natDegLE\r\n          | ``degree, ``LE.le => degLE\r\n          | ``coeff, ``Eq => coeff\r\n          | _, ``LE.le => ``le_rfl\r\n          | _, _ => ``rfl\r\n        if debug then\r\n          dbg_trace f!\"{lem.getString}\\n{msg}\"\r\n        lem\r\n      match head with\r\n        | .inl `zero => π ``natDegree_zero_le ``degree_zero_le ``coeff_zero\r\n        | .inl `one => π ``natDegree_one_le ``degree_one_le ``coeff_one\r\n        | .inl `many => π ``natDegree_nat_cast_le ``degree_nat_cast_le ``coeff_nat_cast_ite\r\n        | .inl .anonymous => π ``le_rfl ``le_rfl ``rfl\r\n        | .inr ``HAdd.hAdd =>\r\n          π ``natDegree_add_le_of_le ``degree_add_le_of_le ``coeff_add_of_eq\r\n        | .inr ``HSub.hSub =>\r\n          π ``natDegree_sub_le_of_le ``degree_sub_le_of_le ``coeff_sub_of_eq\r\n        | .inr ``HMul.hMul =>\r\n          π ``natDegree_mul_le_of_le ``degree_mul_le_of_le ``coeff_mul_add_of_le_natDegree_of_eq_ite\r\n        | .inr ``HPow.hPow =>\r\n          π ``natDegree_pow_le_of_le ``degree_pow_le_of_le ``coeff_pow_of_natDegree_le_of_eq_ite'\r\n        | .inr ``Neg.neg =>\r\n          π ``natDegree_neg_le_of_le ``degree_neg_le_of_le ``coeff_neg\r\n        | .inr ``Polynomial.X =>\r\n          π ``natDegree_X_le ``degree_X_le ``coeff_X\r\n        | .inr ``Nat.cast =>\r\n          π ``natDegree_nat_cast_le ``degree_nat_cast_le ``coeff_nat_cast_ite\r\n        | .inr ``NatCast.natCast =>\r\n          π ``natDegree_nat_cast_le ``degree_nat_cast_le ``coeff_nat_cast_ite\r\n        | .inr ``Int.cast =>\r\n          π ``natDegree_int_cast_le ``degree_int_cast_le ``coeff_int_cast_ite\r\n        | .inr ``IntCast.intCast =>\r\n          π ``natDegree_int_cast_le ``degree_int_cast_le ``coeff_int_cast_ite\r\n        | .inr ``Polynomial.monomial =>\r\n          π ``natDegree_monomial_le ``degree_monomial_le ``coeff_monomial\r\n        | .inr ``Polynomial.C =>\r\n          π ``natDegree_C_le ``degree_C_le ``coeff_C\r\n        | _ => π ``le_rfl ``le_rfl ``rfl\r\n```",
                    "createdAt": "2023-09-01T14:20:58Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORDNt",
                    "body": "Need to make sure to instantiate metavariables:\r\n```suggestion\r\n  let (yesMV, noMV) := ← mvs.partitionM fun mv =>\r\n                          return hasExprMVar (← instantiateMVars (← mv.getDecl).type)\r\n```",
                    "createdAt": "2023-09-01T14:21:28Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORDV8",
                    "body": "Indentation:\r\n```suggestion\r\ndef splitApply (mvs static : List MVarId) : MetaM ((List MVarId) × (List MVarId)) := do\r\n  let (can_progress, curr_static) := ← mvs.partitionM fun mv => do\r\n    return dispatchLemma (twoHeadsArgs (← mv.getType'')) != ``id\r\n  let progress := ← can_progress.mapM fun mv => do\r\n    let lem := dispatchLemma <| twoHeadsArgs (← mv.getType'')\r\n    mv.applyConst <| lem\r\n  return (progress.join, static ++ curr_static)\r\n```",
                    "createdAt": "2023-09-01T14:21:58Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORD_z",
                    "body": "Let's not use a debug flag. Instead let's us the standard interface of a trace option.\r\n```suggestion\r\nsyntax (name := computeDegree) \"compute_degree\" \"!\"? : tactic\r\n\r\ninitialize registerTraceClass `Tactic.compute_degree\r\n```",
                    "createdAt": "2023-09-01T14:24:22Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORHz0",
                    "body": "1. This removes the debug flag and switches to using `trace[Tactic.compute_degree]`\r\n2. This switches to `let goal ← getMainGoal` notation in a few places instead of `let goal := ← getMainGoal`\r\n3. The two error cases in the `match` seemed backwards. I also removed mentioning the head symbol since a user can see it from the goal state easily enough (and it's wrong to mention `.anonymous` if there's no head symbol). Note the `{\"\"}` trick for continuing an `m!` string.\r\n4. The `while` can use `!=`\r\n5. There was a missing `withMainContext` around the whole `do` expression, which is needed for `getType''`\r\n6. The tag-based goal matching when assembling the miscomputed degree error message wasn't robust, so I changed it to something that is guaranteed to work.\r\n```suggestion\r\nelab_rules : tactic | `(tactic| compute_degree $[!%$bang]?) => focus <| withMainContext do\r\n  let goal ← getMainGoal\r\n  let gt ← goal.getType''\r\n  let deg? := match gt.eq? with\r\n    | some (_, _, rhs) => some rhs\r\n    | _ => none\r\n  let twoH := twoHeadsArgs gt\r\n  match twoH with\r\n    | (_, .anonymous, _) => throwError\r\n        (m!\"'compute_degree' inapplicable. The goal{indentD gt}\\nis expected to be '≤' or '='.\")\r\n    | (.anonymous, _, _) => throwError\r\n        (m!\"'compute_degree' inapplicable. The LHS must be an application of {\r\n          \"\"}'natDegree', 'degree', or 'coeff'.\")\r\n    | _ =>\r\n      let lem := dispatchLemma twoH\r\n      trace[Tactic.compute_degree] f!\"'compute_degree' first applies lemma '{lem.getString}'\"\r\n      let mut (gls, static) := (← goal.applyConst lem, [])\r\n      while gls != [] do (gls, static) ← splitApply gls static\r\n      let rfled ← try_rfl static\r\n      setGoals rfled\r\n      --  simplify the left-hand sides, since this is where the degree computations leave\r\n      --  expressions such as `max (0 * 1) (max (1 + 0 + 3 * 4) (7 * 0))`\r\n      evalTactic\r\n        (← `(tactic| try any_goals conv_lhs => (simp only [Nat.cast_withBot]; norm_num)))\r\n      if bang.isSome then\r\n        let mut false_goals : Array MVarId := #[]\r\n        let mut new_goals : Array MVarId := #[]\r\n        for g in ← getGoals do\r\n          let gs' ← run g do evalTactic (← `(tactic| try (any_goals norm_num <;> try assumption)))\r\n          new_goals := new_goals ++ gs'.toArray\r\n          if ← gs'.anyM fun g' => g'.withContext do return (← g'.getType'').isConstOf ``False then\r\n            false_goals := false_goals.push g\r\n        setGoals new_goals.toList\r\n        if let some deg := deg? then\r\n          let errors := miscomputedDegree? deg (← false_goals.mapM (MVarId.getType'' ·)).toList\r\n          unless errors.isEmpty do\r\n            throwError Lean.MessageData.joinSep\r\n              (m!\"The given degree is '{deg}'.  However,\\n\" :: errors) \"\\n\"\r\n```",
                    "createdAt": "2023-09-01T14:31:23Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORIdF",
                    "body": "Somehow this gets reordered with the changes\r\n```suggestion\r\n* the coefficient of degree 0 may be zero\r\n* there is at least one term of naïve degree 2\r\n* there may be a term of naïve degree 2\r\n```",
                    "createdAt": "2023-09-01T14:32:20Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORIoY",
                    "body": "Generally tactics don't insert all these extra newlines, which is why I removed them.\r\n```suggestion\r\nerror: 'compute_degree' inapplicable. The goal\r\n  natDegree X ≠ 0\r\nis expected to be '≤' or '='.\r\n```",
                    "createdAt": "2023-09-01T14:32:58Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ORI5c",
                    "body": "```suggestion\r\nerror: 'compute_degree' inapplicable. The LHS must be an application of 'natDegree', 'degree', or 'coeff'.\r\n```",
                    "createdAt": "2023-09-01T14:33:53Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: tactic `compute_degree`",
        "updatedAt": "2023-09-02T13:20:26Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6221",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NudGH",
              "createdAt": "2023-07-28T16:53:26Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Wq82l",
                "title": "[Merged by Bors] - feat: simple lemmas about polynomials and their degrees",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6220"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NudRw",
              "createdAt": "2023-07-28T16:57:03Z",
              "source": {
                "id": "I_kwDOFcwZ1c5SLg7U",
                "title": "tactic porting tracking issue",
                "url": "https://github.com/leanprover-community/mathlib4/issues/430"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NudXl",
              "createdAt": "2023-07-28T16:58:41Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Ve9BQ",
                "title": "feat: Add tactic `compute_degree_le`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5882"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Nudhj",
              "createdAt": "2023-07-28T17:01:21Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5V6Ex2",
                "title": "feat: a minimalistic port of `compute_degree_le`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6007"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s4f1NzwAAAAJRFZf9",
              "createdAt": "2023-07-28T17:02:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NufrZ",
              "createdAt": "2023-07-28T17:33:43Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WrP1z",
                "title": "[Merged by Bors] - chore: golf using `compute_degree`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6222"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s4f1NzwAAAAJRMo8r",
              "createdAt": "2023-07-28T21:01:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s4f1NzwAAAAJRMo8y",
              "createdAt": "2023-07-28T21:01:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7mTAET",
                "name": "modifies-tactic-syntax"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s4f1NzwAAAAJRMo84",
              "createdAt": "2023-07-28T21:01:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s4f1NzwAAAAJXmxdF",
              "createdAt": "2023-08-10T13:47:02Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ju-SD",
              "createdAt": "2023-08-10T13:47:04Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#6220~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s4f1NzwAAAAJXnorO",
              "createdAt": "2023-08-10T14:05:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "93eca5d3ce20d09a169fe467d23595cfdc7f7028"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "affded00737239fcec7344745fdbcd7e9c7f6913"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5fc9871243e8dc659e55235f3740d598e0a4e4f6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "27528e6184f9402542eeb2763da60bb0058b4cc0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b52bfd7edfea08da57de6b7368dce1ff43cf16f4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bd2477757d2bb10fdd86a468fa597a79bcb8b84f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7fa4c0d22c167fc256dc53e160de3c1f6e680e47"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c3d44f51cb7a1fd7529b665a74cb3d907fd4c8f9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6abeb5f37c5a444cd79be52ffa65323372f1930d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "01d7d88f88f88273f85aed2bf731a9ff18b05209"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "72d950d0314e75d951b04f770974e6f9f58c3a7c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8470949b2cd60dd5aa7b20d836618bb21ac9ad9b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9432f6652699b23ebe8c71d7b74aa673060bb53b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "051da37f15158ff5425ab3c578f726767d58b195"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "90836bc149fee1a1240b71d8760ded7e2b8f907c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6e67c7af9c2e1ede46e061f000a9185636bfd0d5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ab9e72e2b9ff9f69ddc10d675975efaeeeb5fc8a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b9864edb0fd7def5a3e23bd83d6da55a01c2c58e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8a481725e40b4d45fe11f97a18f798c1a7a627c6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "93fb672f1ae1193a2f385b553b525d5499904532"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4fd756e8563b2e4141b589b62a90852a46c224ec"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0c01b449a0c7bd1adf13e58ea5f27d9d97031564"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cfcd5ceaaff8c935516f3783f80e6186ca4ff951"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6218e91bbc432c6e59886cea49eaba7f5c40d719"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8c914f4d9aeb67e9aa87151e04bb975dd2086a5a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bb7df9d2344ed70caf6372d975f216748aa777c4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c761bd00082b5cf6ac3705e3c9268b986eb47a70"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "667d8e62792395b4f5770762548c6ce175a7991d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1b7be8df28725e3a5c2a19806445bcb404c13a74"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e0e116c6799de2ee36b84d178d10710c272a893e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d690d2559ffeb0f7a3ff48cbe8bb1dc484bfe4aa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "69d0ed8475e31086054a54b9989d3fa271915362"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bc42b0f6271238fc953820f2548d7559b7d44fc5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7043919d5fac18a315c2090a3f9593bc503d4c10"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00ba15783b73986b1a8b20141930c10aae545265"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f13720bf4541fbe7bd12f278ce9933c23993aabe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "56b17a0a8f5874111e8b8c222e924d88688ecb09"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0f371d35ba23286e7a777521dcdd912bf55018ba"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2c49ec78791524c9029311ef6bd1d6650f0d0503"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e7f8613e995e22feaed43347259f392a663d7e5a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2d968a61ab5daaab0284a7acc5ab8a17b395dd03"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bbe8cfc895be3f40bcdcf6332003e1debeb5600c"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5s4f1NzwAAAAJXo7Ug",
              "createdAt": "2023-08-10T14:34:04Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s4f1NzwAAAAJXo8oT",
              "createdAt": "2023-08-10T14:34:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a66f2ca28432ef3e2782d88556cabcbdc712a62f"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5s4f1NzwAAAAJXpAu_",
              "createdAt": "2023-08-10T14:35:58Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0795ff0a50664e63e8cb9ca617fa381ae2a24049"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "88ef77e7d32079c2b9b15cf3577b45036503463d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e15a63c70cf3346bd609d3abfeb71750d91f4692"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b88e9e814312d10d16d35291fb8f816b569b7b23"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "152f18a9c778cfd3ad59f36a88445c3fdf5f34e3"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b885049b20b9176a28d200cb619a6d4c3f6fa6e1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2db2210d7093314c5986f7500fcf40756f8fd274"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c687172bca0ed5483745cf3b66715ff615fd4e0a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "578f0b9250a771387ce796a82bbf0a009b3f68f3"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fxvhE",
              "createdAt": "2023-09-01T12:42:33Z",
              "body": "Thanks for writing this tactic. There are some things I'd like to see changed before it is merged, and I've tested all these suggestions locally.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ljFMW",
              "createdAt": "2023-09-02T04:46:31Z",
              "body": "Kyle, thank you so much for taking the time to review the PR!\n\nI've looked through your suggestions and I find them all great!  I hope to have time later today to sit at a computer and implement them.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9fce11357930e189e32dae13bc669618de84a6e8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c3fbc103883feb677b2961457eca0cf0f71d60ba"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9d662a48b88d2cb0588cc5160f1f134a8df1d6e5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8066f3b3976c78e1d065684a94655bbea365b53d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4d8cfc97cac745f57397c08cb33b1957db4c467e"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ljhle",
              "createdAt": "2023-09-02T11:47:34Z",
              "body": "I think this is in a good state now, and the user interface seems well-specified enough (with internals solid enough) that I'm happy to merge it. One thing we might want in the future is to have `compute_degree` be changed into a collection of `norm_num` extensions, with `compute_degree` in particular applying to the goals laid out in the docstring. One might even have `compute_degree` be a version of `norm_num` specialized to *just* `degree`/`natDegree`/`coeff` expressions and inequality goals involving them, letting it automatically compute degrees.\r\n\r\nAnyway, the perfect is the enemy of the good, so\r\n\r\nbors r+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s4f1NzwAAAAJjxyLG",
              "createdAt": "2023-09-02T11:47:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s4f1NzwAAAAJjxyLX",
              "createdAt": "2023-09-02T11:47:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ljmvr",
              "createdAt": "2023-09-02T13:20:21Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6058211233/job/16440149487)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6058211233/job/16440149382)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6058211233/job/16440149429)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5s4f1NzwAAAAJjyb6k",
              "createdAt": "2023-09-02T13:20:22Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5s4f1NzwAAAAJjyb8C",
              "createdAt": "2023-09-02T13:20:26Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
