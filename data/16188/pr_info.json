{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 2,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Parcly-Taxel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Surprisingly no adaptations were needed anywhere.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 62,
        "closed": true,
        "closedAt": "2024-08-27T19:57:10Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6J3Yvk",
              "body": "### PR summary [a95daed0da](https://github.com/leanprover-community/mathlib4/pull/16188/commits/a95daed0da19be51d67931ddb4cf4a28627eeb46)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-08-27T16:16:50Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a95daed0da19be51d67931ddb4cf4a28627eeb46",
                "additions": 2,
                "deletions": 87,
                "committedDate": "2024-08-27T16:11:13Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1AWDHQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10583903553/job/29326934813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1AWC9g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10583903555/job/29326934774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06Ixhw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931113/job/29320425863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06Ixyw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931121/job/29320425931"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058mYw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320226403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058kww",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320225987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06IzRw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931116/job/29320426311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1AWEQg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10583903553/job/29326935106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058k2A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320226008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058nRg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320226630"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06Ixnw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931116/job/29320425887"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058nxw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320226759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058l5A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320226276"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058pCA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320227080"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058oiQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320226953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG058qXQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320227421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06WIcg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320644722"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06JTBA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29320434436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG06KiPQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16188&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-27T16:16:08Z",
        "deletions": 87,
        "files": {
          "nodes": [
            {
              "path": "test/CategoryTheory/Elementwise.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/Change.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/Continuity.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/DefEqTransformations.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/DeriveFintype.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/ExtractGoal.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/FBinop.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/GCongr/mod.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/GeneralizeProofs.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/HigherOrder.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/InstanceTransparency.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/LibrarySearch/basic.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/LiftLets.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/LintStyle.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "test/MfldSetTac.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/NthRewrite.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/Recall.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/RewriteSearch/Basic.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/RewriteSearch/Polynomial.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/Simps.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/Tauto.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/TermCongr.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/TermCongr2.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/Use.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/Variable.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/apply_fun.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/apply_rules.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/apply_with.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/borelize.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/byContra.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/cases.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/casesm.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/choose.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/congr.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/congrm.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/convert.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/globalAttributeIn.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "test/irreducibleDef.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/linarith.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/linear_combination'.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "test/linear_combination.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "test/nomatch.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/nontriviality.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/norm_cast.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/norm_num.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/notation3.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/positivity.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/propose.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/push_neg.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/rewrites.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/ring.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/rsuffices.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/says.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/set_like.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/simp_intro.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/solve_by_elim/basic.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "test/spread.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/symm.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/tfae.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/toAdditive.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/toAdditiveIrredDef.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "test/trans.lean",
              "additions": 0,
              "deletions": 1
            }
          ]
        },
        "headRefName": "autoimplicit-tests",
        "headRefOid": "a95daed0da19be51d67931ddb4cf4a28627eeb46",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c55mUYs",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
              "color": "0EFB96",
              "name": "tech debt"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6G9KjC",
              "body": "If I remember correctly, mathlib's build flags don't take effect in `tests`: in other words, is `autoImplicit true` (the default from core) implicitly active in these files? Put differently, does everything still work if you change this to set_option autoImplicit false instead?",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-08-27T18:36:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16188,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6G9KjC",
              "body": "If I remember correctly, mathlib's build flags don't take effect in `tests`: in other words, is `autoImplicit true` (the default from core) implicitly active in these files? Put differently, does everything still work if you change this to set_option autoImplicit false instead?",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-08-27T18:36:28Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nUMjk",
                    "body": "I agree that changing to a different option is a good idea; I'm not too psyched about this one.\r\nAt the end of the day, I don't feel strongly about *which* new option you choose.",
                    "createdAt": "2024-08-27T18:35:21Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1AWDHQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10583903553/job/29326934813"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1AWC9g",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10583903555/job/29326934774"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06Ixhw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931113/job/29320425863"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06Ixyw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931121/job/29320425931"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058mYw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320226403"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058kww",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320225987"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06IzRw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931116/job/29320426311"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1AWEQg",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10583903553/job/29326935106"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058k2A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320226008"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058nRg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320226630"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06Ixnw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581931116/job/29320425887"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058nxw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320226759"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058l5A",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320226276"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058pCA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320227080"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058oiQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320226953"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG058qXQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871510/job/29320227421"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06WIcg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10581871501/job/29320644722"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06JTBA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29320434436"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG06KiPQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16188&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore: purge `autoImplicit` from tests",
        "updatedAt": "2024-08-27T19:57:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16188",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6UZ8vazwAAAANEWkbL",
              "createdAt": "2024-08-27T16:16:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
                "name": "tech debt"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6UZ8vazwAAAANEWkbZ",
              "createdAt": "2024-08-27T16:16:09Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwMTA1MDE2",
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6J3Yvk",
              "createdAt": "2024-08-27T16:16:50Z",
              "body": "### PR summary [a95daed0da](https://github.com/leanprover-community/mathlib4/pull/16188/commits/a95daed0da19be51d67931ddb4cf4a28627eeb46)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6G9KjC",
              "createdAt": "2024-08-27T18:35:20Z",
              "body": "If I remember correctly, mathlib's build flags don't take effect in `tests`: in other words, is `autoImplicit true` (the default from core) implicitly active in these files? Put differently, does everything still work if you change this to set_option autoImplicit false instead?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6UZ8vazwAAAANEcu1F",
              "createdAt": "2024-08-27T18:36:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6UZ8vazwAAAANEf-ZN",
              "createdAt": "2024-08-27T19:57:10Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6UZ8vazwAAAANEf-gr",
              "createdAt": "2024-08-27T19:57:13Z"
            }
          ]
        }
      }
    }
  }
}
