{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 58,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This made them not actually work as a `simp` lemma.\r\n\r\nAlso extracts a common result that can be used to prove `single_add` for `DFinsupp` and `Finsupp`, and a new `Finsupp.single_mul` lemma.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-11-13T18:56:13Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ryi0R",
              "body": ":v: eric-wieser can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-13T15:44:20Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rzADT",
              "body": "I ended up with a small bit of scope creep when responding to review comments; mind taking another look @ocfnash?",
              "createdAt": "2023-11-13T16:42:22Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rzVgG",
              "body": "Looks great, thanks!\r\n\r\nbors merge",
              "createdAt": "2023-11-13T17:15:08Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rzVh3",
              "body": ":-1: Rejected by label",
              "createdAt": "2023-11-13T17:15:12Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rzWH9",
              "body": "bors is just being very conservative (it's passed everything except for lean4checker)\r\n\r\nbors d+",
              "createdAt": "2023-11-13T17:16:49Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rzWJg",
              "body": ":v: eric-wieser can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-13T17:16:52Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rzdsS",
              "body": "bors merge",
              "createdAt": "2023-11-13T17:36:23Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r0F_z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6853844781/job/18635553261)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6853844781/job/18635553441)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6853844781/job/18635553853)",
              "createdAt": "2023-11-13T18:56:12Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r26Mi",
              "body": "> Thanks for doing this. I'm surprised this wasn't caught by a linter (variable used in proof, not used in statement).\r\n\r\nWhat linter could possibly catch this? Certainly statements could require additional structure to hold, for example `m + m = 0` for all `m` in an `AddCommGroup M` if it's equipped with a `Module (ZMod 2) M` structure. For the same reason, your lemmas may well require a R-Lie module structure on each `L i`!",
              "createdAt": "2023-11-14T05:07:23Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r3bwp",
              "body": "The simp linter should have caught that the simp lemma can't actually be proved with simp (and after #7905 it does)",
              "createdAt": "2023-11-14T07:49:32Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r340S",
              "body": "You are both absolutely right, thanks @eric-wieser and @alreadydone !",
              "createdAt": "2023-11-14T09:11:10Z",
              "author": {
                "login": "ocfnash"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ebeb37a2cc4a9986e7824dcf0f04959b3b6920e8",
                "additions": 27,
                "deletions": 31,
                "committedDate": "2023-11-13T14:56:35Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dc5155f065e43c4b6cb3030477a3ab4bf6f26178",
                "additions": 18,
                "deletions": 12,
                "committedDate": "2023-11-13T15:15:15Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f8a2d5c5dbe23e0728b703b16f304be220a4dbb3",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-13T15:18:08Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "21c5e87351227fc952d6482d280ee4806a1870c3",
                "additions": 15,
                "deletions": 17,
                "committedDate": "2023-11-13T16:13:32Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "41e691051712876d81d07f5f22bcd5c5c217f221",
                "additions": 21,
                "deletions": 11,
                "committedDate": "2023-11-13T16:19:06Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-13T14:59:31Z",
        "deletions": 48,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Lie/DirectSum.lean",
              "additions": 28,
              "deletions": 39
            },
            {
              "path": "Mathlib/Data/DFinsupp/Basic.lean",
              "additions": 16,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/Finsupp/Defs.lean",
              "additions": 10,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Finsupp/Pointwise.lean",
              "additions": 4,
              "deletions": 0
            }
          ]
        },
        "headRefName": "eric-wieser/lie-direct_sum",
        "headRefOid": "41e691051712876d81d07f5f22bcd5c5c217f221",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fT0Nt",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5m-RT-",
              "body": "Thanks for doing this. I'm surprised this wasn't caught by a linter (variable used in proof, not used in statement).\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-13T15:44:18Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8388,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5m-RT-",
              "body": "Thanks for doing this. I'm surprised this wasn't caught by a linter (variable used in proof, not used in statement).\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-11-13T15:44:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m-mbR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-13T16:19:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5m-nDH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-13T16:20:33Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S7WSz",
                    "body": "This is a weird lemma (written by my less-experienced self, no doubt). Shouldn't it say:\r\n```suggestion\r\ntheorem lie_of_same [DecidableEq ι] {i : ι} (x y : L i) :\r\n    ⁅of L i x, of L i y⁆ = of L i ⁅x, y⁆ :=\r\n```",
                    "createdAt": "2023-11-13T15:41:21Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S7jd2",
                    "body": "Done",
                    "createdAt": "2023-11-13T16:19:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S7W4I",
                    "body": "Shouldn't this be called:\r\n```suggestion\r\ntheorem zipWith_single_single (f : ∀ i, β₁ i → β₂ i → β i) (hf : ∀ i, f i 0 0 = 0)\r\n```",
                    "createdAt": "2023-11-13T15:43:03Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5S7j3K",
                    "body": "I wasn't really sure, but changed now.",
                    "createdAt": "2023-11-13T16:20:33Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix(Mathlib/Algebra/Lie/DirectSum): remove unused `R` argument from lemmas",
        "updatedAt": "2023-11-14T09:11:11Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8388",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ebeb37a2cc4a9986e7824dcf0f04959b3b6920e8"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52qcmizwAAAAKMP0NJ",
              "createdAt": "2023-11-13T14:59:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52qcmizwAAAAKMP0NW",
              "createdAt": "2023-11-13T14:59:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c52qcmizwAAAAKMP0N3",
              "createdAt": "2023-11-13T14:59:31Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjc3MzQzNjQ=",
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dc5155f065e43c4b6cb3030477a3ab4bf6f26178"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f8a2d5c5dbe23e0728b703b16f304be220a4dbb3"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PV4pC",
              "createdAt": "2023-11-13T15:20:51Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5emYv1",
                "title": "perf (FunLike.Basic): beta reduce CoeFun.coe ",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8185"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5m-RT-",
              "createdAt": "2023-11-13T15:41:21Z",
              "body": "Thanks for doing this. I'm surprised this wasn't caught by a linter (variable used in proof, not used in statement).\r\n\r\nbors d+",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ryi0R",
              "createdAt": "2023-11-13T15:44:20Z",
              "body": ":v: eric-wieser can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52qcmizwAAAAKMSDdp",
              "createdAt": "2023-11-13T15:44:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52qcmizwAAAAKMSDgy",
              "createdAt": "2023-11-13T15:44:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "21c5e87351227fc952d6482d280ee4806a1870c3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "41e691051712876d81d07f5f22bcd5c5c217f221"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52qcmizwAAAAKMT0dO",
              "createdAt": "2023-11-13T16:20:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzADT",
              "createdAt": "2023-11-13T16:42:22Z",
              "body": "I ended up with a small bit of scope creep when responding to review comments; mind taking another look @ocfnash?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzVgG",
              "createdAt": "2023-11-13T17:15:08Z",
              "body": "Looks great, thanks!\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzVh3",
              "createdAt": "2023-11-13T17:15:12Z",
              "body": ":-1: Rejected by label",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52qcmizwAAAAKMWWvY",
              "createdAt": "2023-11-13T17:15:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52qcmizwAAAAKMWYZ3",
              "createdAt": "2023-11-13T17:15:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzWH9",
              "createdAt": "2023-11-13T17:16:49Z",
              "body": "bors is just being very conservative (it's passed everything except for lean4checker)\r\n\r\nbors d+",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzWJg",
              "createdAt": "2023-11-13T17:16:52Z",
              "body": ":v: eric-wieser can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rzdsS",
              "createdAt": "2023-11-13T17:36:23Z",
              "body": "bors merge",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r0F_z",
              "createdAt": "2023-11-13T18:56:12Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6853844781/job/18635553261)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6853844781/job/18635553441)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6853844781/job/18635553853)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52qcmizwAAAAKMaqVx",
              "createdAt": "2023-11-13T18:56:13Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52qcmizwAAAAKMaqej",
              "createdAt": "2023-11-13T18:56:17Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r26Mi",
              "createdAt": "2023-11-14T05:07:23Z",
              "body": "> Thanks for doing this. I'm surprised this wasn't caught by a linter (variable used in proof, not used in statement).\r\n\r\nWhat linter could possibly catch this? Certainly statements could require additional structure to hold, for example `m + m = 0` for all `m` in an `AddCommGroup M` if it's equipped with a `Module (ZMod 2) M` structure. For the same reason, your lemmas may well require a R-Lie module structure on each `L i`!",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r3bwp",
              "createdAt": "2023-11-14T07:49:32Z",
              "body": "The simp linter should have caught that the simp lemma can't actually be proved with simp (and after #7905 it does)",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r340S",
              "createdAt": "2023-11-14T09:11:10Z",
              "body": "You are both absolutely right, thanks @eric-wieser and @alreadydone !",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5xNZgy",
              "createdAt": "2025-01-09T00:20:36Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6HI-5p",
                "title": "[Merged by Bors] - chore(Algebra/Lie/DirectSum): shorten proof of lieAlgebraOf.map_lie'",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20592"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
