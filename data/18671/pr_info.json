{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 2,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2024-11-05T20:18:28Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Sgyy7",
              "body": "### PR summary [56303b3e72](https://github.com/leanprover-community/mathlib4/pull/18671/commits/56303b3e72f40b348b988de29f50be62a601cafe)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-11-05T20:14:29Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Sg0vD",
              "body": "Test concluded unsuccessfully.",
              "createdAt": "2024-11-05T20:18:28Z",
              "author": {
                "login": "adomani"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "56303b3e72f40b348b988de29f50be62a601cafe",
                "additions": 2,
                "deletions": 301,
                "committedDate": "2024-11-05T20:12:45Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbFcA",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805080/job/32559777136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbC4Q",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805075/job/32559776481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbErQ",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805076/job/32559776941"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLnskQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691871844/job/32559983761"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbCqg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805071/job/32559776426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbC1w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805069/job/32559776471"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLZ8mQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559758489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLZ8Ng",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798357/job/32559758390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbC_Q",
                        "name": "check workflows generated by build.in.yml",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805076/job/32559776509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLZ9UQ",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798357/job/32559758673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLZ-Iw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559758883"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbD8w",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805080/job/32559776755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLZ_GQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559759129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLaAgw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559759491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbp5g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32559786470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLbl5Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18671&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlLb0Zg",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32559789158"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-05T20:13:41Z",
        "deletions": 301,
        "files": {
          "nodes": [
            {
              "path": ".github/workflows/build.yml",
              "additions": 2,
              "deletions": 301
            }
          ]
        },
        "headRefName": "test/install_column",
        "headRefOid": "56303b3e72f40b348b988de29f50be62a601cafe",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6A-Yb9",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
              "color": "006b75",
              "name": "CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6QCmgM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-11-05T20:14:06Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 18671,
        "potentialMergeCommit": {
          "oid": "775ef48487c86f9e75b2829e496834908fe0b60d"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6QCmgM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-11-05T20:14:06Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tEsRc",
                    "body": "**[mk_build_yml.sh]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n      - uses: actions/checkout@v4\n\n      # Run the case checker action\n      - name: Check Case Sensitivity\n        uses: credfeto/action-case-checker@v1.3.0\n\n      - name: Look for ignored files\n        uses: credfeto/action-no-ignored-files@v1.2.0\n\n      - name: \"Check for Lean files with the executable bit set\"\n```\n\n<!-- __reviewdog__:ChAxZmUxZGE5N2VlZjFjN2Q1Eg9ta19idWlsZF95bWwuc2g= -->\n",
                    "createdAt": "2024-11-05T20:14:06Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tEsRi",
                    "body": "**[mk_build_yml.sh]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n          executable_files=\"$(find . -name '*.lean' -type f \\( -perm -u=x -o -perm -g=x -o -perm -o=x \\))\"\n          if [[ -n \"$executable_files\" ]]\n          then\n            echo \"ERROR: The following Lean files have the executable bit set.\"\n            echo \"$executable_files\"\n            exit 1\n          fi\n\n      - name: install Python\n        if: ${{ 'ubuntu-latest' == 'ubuntu-latest' }}\n        uses: actions/setup-python@v5\n        with:\n          python-version: 3.8\n\n      - name: install elan\n        run: |\n          set -o pipefail\n          curl -sSfL https://github.com/leanprover/elan/releases/download/v3.1.1/elan-x86_64-unknown-linux-gnu.tar.gz | tar xz\n          ./elan-init -y --default-toolchain none\n          echo \"$HOME/.elan/bin\" >> \"${GITHUB_PATH}\"\n\n      - name: \"run style linters\"\n        run: |\n          lake exe lint-style\n\n      - name: Install bibtool\n        if: ${{ 'ubuntu-latest' == 'ubuntu-latest' }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y bibtool\n\n      - name: lint references.bib\n        run: |\n          ./scripts/lint-bib.sh\n\n  build:\n    if: github.repository == 'leanprover-community/mathlib4'\n    name: Build\n    runs-on: pr\n    steps:\n      - name: cleanup\n        run: |\n          find . -name . -o -prune -exec rm -rf -- {} +\n          # Delete all but the 5 most recent toolchains.\n          # Make sure to delete both the `~/.elan/toolchains/X` directory and the `~/.elan/update-hashes/X` file.\n          # Skip symbolic links (`-type d`), the current directory (`! -name .`), and `nightly` and `stable`.\n          if cd ~/.elan/toolchains && find . -maxdepth 1 -type d ! -name . -print0 | xargs -0 ls -1td | grep -v 'nightly$' | grep -v 'stable$' | tail -n +6 | xargs -I {} sh -c 'echo {} && rm -rf \"{}\" && rm \"../update-hashes/{}\"'; then\n              : # Do nothing on success\n          else\n              : # Do nothing on failure, but suppress errors\n          fi\n\n      # The Hoskinson runners may not have jq installed, so do that now.\n      - name: 'Setup jq'\n        uses: dcarbone/install-jq-action@v2.1.0\n\n      - name: install elan\n        run: |\n          set -o pipefail\n          curl -sSfL https://github.com/leanprover/elan/releases/download/v3.1.1/elan-x86_64-unknown-linux-gnu.tar.gz | tar xz\n          ./elan-init -y --default-toolchain none\n          echo \"$HOME/.elan/bin\" >> \"${GITHUB_PATH}\"\n\n      - uses: actions/checkout@v4\n\n      - name: If using a lean-pr-release toolchain, uninstall\n        run: |\n          if [[ $(cat lean-toolchain) =~ ^leanprover/lean4-pr-releases:pr-release-[0-9]+$ ]]; then\n            printf 'Uninstalling transient toolchain %s\\n' \"$(cat lean-toolchain)\"\n            elan toolchain uninstall \"$(cat lean-toolchain)\"\n          fi\n\n      - name: print lean and lake versions\n        run: |\n          lean --version\n          lake --version\n\n      - name: build cache\n        run: |\n          lake build cache\n\n      - name: prune ProofWidgets .lake\n        run: |\n          # The ProofWidgets release contains not just the `.js` (which we need in order to build)\n          # but also `.oleans`, which may have been built with the wrong toolchain.\n          # This removes them.\n          # See discussion at https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/nightly-testing/near/411225235\n          rm -rf .lake/packages/proofwidgets/.lake/build/lib\n          rm -rf .lake/packages/proofwidgets/.lake/build/ir\n\n      - name: get cache\n        id: get\n        run: |\n          rm -rf .lake/build/lib/Mathlib/\n          # Fail quickly if the cache is completely cold, by checking for Mathlib.Init\n          lake exe cache get #Mathlib.Init\n          #lake build --no-build Mathlib.Init && lake exe cache get || echo \"No cache for 'Mathlib.Init' available\"\n\n      - name: update {Mathlib, Tactic, Counterexamples, Archive}.lean\n        id: mk_all\n        run: |\n\n          if ! lake exe mk_all --check\n          then\n            echo \"Not all lean files are in the import all files\"\n            echo \"mk_all=false\" >> \"${GITHUB_OUTPUT}\"\n          else\n            echo \"mk_all=true\" >> \"${GITHUB_OUTPUT}\"\n          fi\n\n      - name: build mathlib\n        id: build\n        uses: liskin/gh-problem-matcher-wrap@v3\n        with:\n          linters: gcc\n          run: |\n            bash -o pipefail -c \"env LEAN_ABORT_ON_PANIC=1 lake build --wfail -KCI\"\n\n      - name: upload cache\n        # We only upload the cache if the build started (whether succeeding, failing, or cancelled)\n        # but not if any earlier step failed or was cancelled.\n        # See discussion at https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Some.20files.20not.20found.20in.20the.20cache/near/407183836\n        if: ${{ always() && steps.get.outcome == 'success' }}\n        run: |\n          # TODO: this is not doing anything currently, and needs to be integrated with put-unpacked\n          # lake exe cache commit || true\n          # run this in CI if it gets an incorrect lake hash for existing cache files somehow\n          # lake exe cache put!\n          # do not try to upload files just downloaded\n          lake exe cache put-unpacked\n        env:\n          MATHLIB_CACHE_SAS: ${{ secrets.MATHLIB_CACHE_SAS }}\n          MATHLIB_CACHE_S3_TOKEN: ${{ secrets.MATHLIB_CACHE_S3_TOKEN }}\n\n      - name: check the cache\n        run: |\n          # Because the `lean-pr-testing-NNNN` branches use toolchains that are \"updated in place\"\n          # the cache mechanism is unreliable, so we don't test it if we are on such a branch.\n          if [[ ! $(cat lean-toolchain) =~ ^leanprover/lean4-pr-releases:pr-release-[0-9]+$ ]]; then\n            lake exe cache clean!\n            rm -rf .lake/build/lib/Mathlib\n            lake exe cache get || (sleep 1; lake exe cache get)\n            lake build --no-build\n          fi\n\n      - name: build archive\n        id: archive\n        run: |\n          # Note: we should not be including `Archive` and `Counterexamples` in the cache.\n          # We do this for now for the sake of not rebuilding them in every CI run\n          # even when they are not touched.\n          # Since `Archive` and `Counterexamples` files have very simple dependencies,\n          # it should be possible to determine whether they need to be built without actually\n          # storing and transferring oleans over the network.\n          # Hopefully a future re-implementation of `cache` will obviate the present need for this hack.\n          lake exe cache get Archive.lean\n          bash -o pipefail -c \"env LEAN_ABORT_ON_PANIC=1 lake build Archive\"\n          lake exe cache put Archive.lean\n        env:\n          MATHLIB_CACHE_SAS: ${{ secrets.MATHLIB_CACHE_SAS }}\n          MATHLIB_CACHE_S3_TOKEN: ${{ secrets.MATHLIB_CACHE_S3_TOKEN }}\n\n      - name: build counterexamples\n        id: counterexamples\n        run: |\n          lake exe cache get Counterexamples.lean\n          bash -o pipefail -c \"env LEAN_ABORT_ON_PANIC=1 lake build Counterexamples\"\n          lake exe cache put Counterexamples.lean\n        env:\n          MATHLIB_CACHE_SAS: ${{ secrets.MATHLIB_CACHE_SAS }}\n          MATHLIB_CACHE_S3_TOKEN: ${{ secrets.MATHLIB_CACHE_S3_TOKEN }}\n\n      - name: Check {Mathlib, Tactic, Counterexamples, Archive}.lean\n        run: |\n          if [ ${{ steps.mk_all.outputs.mk_all }} == \"false\" ]\n          then\n            echo \"Please run 'lake exe mk_all' to regenerate the import all files\"\n            exit 1\n          fi\n\n      - name: check for noisy stdout lines\n        id: noisy\n        run: |\n          buildMsgs=\"$(\n            ##  we exploit `lake`s replay feature: since the cache is present, running\n            ##  `lake build` will reproduce all the outputs without having to recompute\n            lake build Mathlib Archive Counterexamples |\n            ##  we filter out the output lines that begin with `‚úî [xx/yy]`, where xx, yy\n            ##  are either numbers or ?, and the \"Build completed successfully.\" message.\n            ##  We keep the rest, which are actual outputs of the files\n            awk '!($0 ~ \"^\\\\s*‚úî \\\\[[?0-9]*/[?0-9]*\\\\]\" || $0 == \"Build completed successfully.\"){ print $0 }')\"\n          if [ -n \"${buildMsgs}\" ]\n          then\n            printf $'%s\\n' \"${buildMsgs}\"\n            exit 1\n          fi\n\n      - name: check declarations in db files\n        run: |\n          python3 scripts/yaml_check.py docs/100.yaml docs/overview.yaml docs/undergrad.yaml\n          lake exe check-yaml\n\n      - name: verify `lake exe graph` works\n        run: |\n          lake exe graph\n          rm import_graph.dot\n\n      - name: build everything\n        # make sure everything is available for test/import_all.lean\n        run: |\n          lake build Batteries Qq Aesop ProofWidgets Plausible\n\n      - name: test mathlib\n        id: test\n        uses: liskin/gh-problem-matcher-wrap@v3\n        with:\n          linters: gcc\n          run:\n            lake test\n\n      - name: check for unused imports\n        id: shake\n        uses: liskin/gh-problem-matcher-wrap@v3\n        with:\n          linters: gcc\n          run: env LEAN_ABORT_ON_PANIC=1 lake exe shake --gh-style\n\n      - name: lint mathlib\n        if: ${{ always() && steps.build.outcome == 'success' || steps.build.outcome == 'failure' }}\n        id: lint\n        uses: liskin/gh-problem-matcher-wrap@v3\n        with:\n          linters: gcc\n          run: env LEAN_ABORT_ON_PANIC=1 lake exe runLinter Mathlib\n\n      # We no longer run `lean4checker` in regular CI, as it is quite expensive for little benefit.\n      # Instead we run it in a cron job on master: see `lean4checker.yml`.\n      # Output is posted to the zulip topic\n      # https://leanprover.zulipchat.com/#narrow/stream/345428-mathlib-reviewers/topic/lean4checker\n\n      - name: Post comments for lean-pr-testing-NNNN and batteries-pr-testing-NNNN branches\n        if: always()\n        env:\n          TOKEN: ${{ secrets.LEAN_PR_TESTING }}\n          GITHUB_CONTEXT: ${{ toJson(github) }}\n          WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n          BUILD_OUTCOME: ${{ steps.build.outcome }}\n          NOISY_OUTCOME: ${{ steps.noisy.outcome }}\n          ARCHIVE_OUTCOME: ${{ steps.archive.outcome }}\n          COUNTEREXAMPLES_OUTCOME: ${{ steps.counterexamples.outcome }}\n          LINT_OUTCOME: ${{ steps.lint.outcome }}\n          TEST_OUTCOME: ${{ steps.test.outcome }}\n        run: |\n          scripts/lean-pr-testing-comments.sh lean\n          scripts/lean-pr-testing-comments.sh batteries\n\n  final:\n    name: Post-CI job\n    if: github.repository == 'leanprover-community/mathlib4'\n    needs: [style_lint, build]\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - id: PR\n        uses: 8BitJonny/gh-get-current-pr@3.0.0\n        # TODO: this may not work properly if the same commit is pushed to multiple branches:\n        # https://github.com/8BitJonny/gh-get-current-pr/issues/8\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          # Only return if PR is still open\n          filterOutClosed: true\n\n      - id: remove_labels\n        name: Remove \"awaiting-CI\"\n        # we use curl rather than octokit/request-action so that the job won't fail\n        # (and send an annoying email) if the labels don't exist\n        run: |\n          curl --request DELETE \\\n            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.PR.outputs.number }}/labels/awaiting-CI \\\n            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'\n\n      - if: contains(steps.PR.outputs.pr_labels, 'auto-merge-after-CI')\n        name: If `auto-merge-after-CI` is present, add a `bors merge` comment.\n        uses: GrantBirki/comment@v2\n        with:\n          token: ${{ secrets.AUTO_MERGE_TOKEN }}\n          issue-number: ${{ steps.PR.outputs.number }}\n          body: |\n            As this PR is labelled `auto-merge-after-CI`, we are now sending it to bors:\n\n            bors merge\n```\n\n<!-- __reviewdog__:ChA4MDdmMjY5MzM2NDlkZTQ4Eg9ta19idWlsZF95bWwuc2g= -->\n",
                    "createdAt": "2024-11-05T20:14:06Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbFcA",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805080/job/32559777136"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbC4Q",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805075/job/32559776481"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbErQ",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805076/job/32559776941"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLnskQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691871844/job/32559983761"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbCqg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805071/job/32559776426"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbC1w",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805069/job/32559776471"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLZ8mQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559758489"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLZ8Ng",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798357/job/32559758390"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbC_Q",
                "name": "check workflows generated by build.in.yml",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805076/job/32559776509"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLZ9UQ",
                "name": "Lint style",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798357/job/32559758673"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLZ-Iw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559758883"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbD8w",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691805080/job/32559776755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLZ_GQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559759129"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLaAgw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11691798355/job/32559759491"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbp5g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32559786470"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLbl5Q",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18671&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlLb0Zg",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32559789158"
              }
            ]
          }
        },
        "title": "test: install command",
        "updatedAt": "2024-11-05T20:18:28Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/18671",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6dI-HuzwAAAAOFmz2f",
              "createdAt": "2024-11-05T20:13:54Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QCmgM",
              "createdAt": "2024-11-05T20:14:06Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Sgyy7",
              "createdAt": "2024-11-05T20:14:29Z",
              "body": "### PR summary [56303b3e72](https://github.com/leanprover-community/mathlib4/pull/18671/commits/56303b3e72f40b348b988de29f50be62a601cafe)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6dI-HuzwAAAAOFm4G6",
              "createdAt": "2024-11-05T20:14:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
                "name": "CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Sg0vD",
              "createdAt": "2024-11-05T20:18:28Z",
              "body": "Test concluded unsuccessfully.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6dI-HuzwAAAAOFnHWK",
              "createdAt": "2024-11-05T20:18:28Z"
            }
          ]
        }
      }
    }
  }
}
