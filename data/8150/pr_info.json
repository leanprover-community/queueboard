{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 22,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "iwilare"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Equivalence between the opposite of a product of categories and the product of the opposites.\r\n\r\n---\r\n\r\nThis equivalence was missing, I thought it would be a good idea to add it to `Product` rather than `Opposites` to avoid possible dependency cycles...\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-11-08T03:09:45Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5rWC61",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6792986512/job/18467114075)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6792986512/job/18467114264)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6792986512/job/18467114352)",
              "createdAt": "2023-11-08T03:09:43Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f6327aca3362ea8fdf70be78f6b79e14ce94d532",
                "additions": 22,
                "deletions": 0,
                "committedDate": "2023-11-03T11:24:53Z",
                "author": {
                  "name": "iwilare",
                  "email": "iwilare@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "645c28143fe078c3aa31b28ec2bf1fdc28af5d5e",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-11-06T21:58:33Z",
                "author": {
                  "name": "iwilare",
                  "email": "iwilare@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-03T11:27:06Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Products/Basic.lean",
              "additions": 22,
              "deletions": 0
            }
          ]
        },
        "headRefName": "iwilare/prod_op",
        "headRefOid": "645c28143fe078c3aa31b28ec2bf1fdc28af5d5e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5ehobj",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5meHkO",
              "body": "bors merge\r\n\r\nThanks!",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T01:48:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mW7l0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-11-07T09:59:11Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8150,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mFIch",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-11-03T13:06:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mTaX-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "iwilare"
              },
              "submittedAt": "2023-11-06T22:04:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mTai8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "iwilare"
              },
              "submittedAt": "2023-11-06T22:04:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mTa0Z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "iwilare"
              },
              "submittedAt": "2023-11-06T22:05:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mW7l0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2023-11-07T09:59:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5meHkO",
              "body": "bors merge\r\n\r\nThanks!",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T01:48:13Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWjvE",
                    "body": "```suggestion\r\n    { obj := λ ⟨X,Y⟩ => op ⟨X.unop, Y.unop⟩,\r\n      map := λ ⟨f,g⟩ => op ⟨f.unop, g.unop⟩ }\r\n```",
                    "createdAt": "2023-11-03T12:55:40Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWlkw",
                    "body": "```suggestion\r\n  functor_unitIso_comp := fun ⟨X, Y⟩ => by\r\n    dsimp\r\n    ext <;> simpa using Category.id_comp _\r\n```\r\nSince the transition to Lean4, `fun` is usually preferred to `λ`. In my suggestion, nonterminal simps are removed.",
                    "createdAt": "2023-11-03T13:03:29Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sf1-d",
                    "body": "How come `simp` doesn't close the goal directly and we need to use `id_comp` manually?\r\n",
                    "createdAt": "2023-11-06T22:04:04Z",
                    "author": {
                      "login": "iwilare"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sf2Cs",
                    "body": "Also, what is it that allows matching `⟨X, Y⟩` directly rather than first unpacking the `Opposite` structure? Is it a general feature since `Opposite` has only one field?",
                    "createdAt": "2023-11-06T22:04:21Z",
                    "author": {
                      "login": "iwilare"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SiFX7",
                    "body": "I am not so sure about the pattern matching, but for `id_comp`, it might be that the source or target of the identity of some object `Z` is definitionally equal to `Z` but not syntactically just `Z`. In some cases, applying simp lemmas on the involved objects first makes it so that `id_comp` would apply, but I cannot really why it does not seem to work here.",
                    "createdAt": "2023-11-07T09:59:11Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWmL_",
                    "body": "```suggestion\r\n  unitIso := Iso.refl _\r\n  counitIso := Iso.refl _\r\n```\r\nEven though `aesop(_cat)` can do some magic, we should refrain from creating data from these tactics!",
                    "createdAt": "2023-11-03T13:05:55Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SWmXW",
                    "body": "I would suggest using the name `prodOpEquivalence` instead.",
                    "createdAt": "2023-11-03T13:06:42Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sf2Rc",
                    "body": "Right, the definition above uses `Equiv` so maybe it is best to pick `prodOpEquiv`.",
                    "createdAt": "2023-11-06T22:05:11Z",
                    "author": {
                      "login": "iwilare"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg0NzIxNjU=",
              "login": "iwilare"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(CategoryTheory/Products): opposite of product of categories",
        "updatedAt": "2023-11-08T03:09:48Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8150",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f6327aca3362ea8fdf70be78f6b79e14ce94d532"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51xxFMzwAAAAKG_MIn",
              "createdAt": "2023-11-03T11:27:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51xxFMzwAAAAKG_MI1",
              "createdAt": "2023-11-03T11:27:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mFIch",
              "createdAt": "2023-11-03T12:55:40Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51xxFMzwAAAAKHDs6E",
              "createdAt": "2023-11-03T13:07:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51xxFMzwAAAAKHDs6q",
              "createdAt": "2023-11-03T13:07:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "645c28143fe078c3aa31b28ec2bf1fdc28af5d5e"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51xxFMzwAAAAKIeWP4",
              "createdAt": "2023-11-06T22:50:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51xxFMzwAAAAKIeWP_",
              "createdAt": "2023-11-06T22:50:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PPDl3",
              "createdAt": "2023-11-06T22:51:34Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ecQRy",
                "title": "feat(CategoryTheory): add dinatural transformations",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8118"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5meHkO",
              "createdAt": "2023-11-08T01:48:13Z",
              "body": "bors merge\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c51xxFMzwAAAAKJXKqu",
              "createdAt": "2023-11-08T01:48:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c51xxFMzwAAAAKJXKr_",
              "createdAt": "2023-11-08T01:48:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rWC61",
              "createdAt": "2023-11-08T03:09:43Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6792986512/job/18467114075)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6792986512/job/18467114264)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6792986512/job/18467114352)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c51xxFMzwAAAAKJY6Y7",
              "createdAt": "2023-11-08T03:09:45Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c51xxFMzwAAAAKJY6c3",
              "createdAt": "2023-11-08T03:09:48Z"
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
