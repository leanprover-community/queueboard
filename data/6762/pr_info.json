{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 21,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Parcly-Taxel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Complete.20multipartite.20graphs/near/386500598\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-25T15:49:24Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5k7u9q",
              "body": "Thanks\r\n\r\nbors d+",
              "createdAt": "2023-08-25T13:41:00Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k7u-R",
              "body": ":v: Parcly-Taxel can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-25T13:41:01Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k7z53",
              "body": "bors merge",
              "createdAt": "2023-08-25T13:56:07Z",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k8dTK",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5977241887/job/16216785048)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5977241887/job/16216784153)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5977241887/job/16216784568)",
              "createdAt": "2023-08-25T15:49:21Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lC1fZ",
              "body": "Sorry, could we define complete multipartite graphs via setoids rather?",
              "createdAt": "2023-08-28T08:13:45Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "21c0f9a8c146813cc64618821cf1a66c6dd42320",
                "additions": 11,
                "deletions": 7,
                "committedDate": "2023-08-24T01:43:33Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f28c0ab6b95681e4679e0207a4c101125359a97b",
                "additions": 4,
                "deletions": 8,
                "committedDate": "2023-08-24T02:03:54Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c40b9b28d59154d0507df8babe4c79a53737867e",
                "additions": 19,
                "deletions": 11,
                "committedDate": "2023-08-24T05:03:14Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ae42823a1475d8da80ce4d3e88628b9ebfa367c5",
                "additions": 812,
                "deletions": 88,
                "committedDate": "2023-08-25T00:23:29Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f0a492ef854de7765d26b5f79573f2d34bff4000",
                "additions": 9,
                "deletions": 11,
                "committedDate": "2023-08-25T13:27:14Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-24T01:44:41Z",
        "deletions": 15,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Basic.lean",
              "additions": 10,
              "deletions": 13
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Clique.lean",
              "additions": 11,
              "deletions": 2
            }
          ]
        },
        "headRefName": "K_abc",
        "headRefOid": "f0a492ef854de7765d26b5f79573f2d34bff4000",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YpVQe",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
              "color": "33dbec",
              "name": "t-combinatorics"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fHG_h",
              "body": "Thanks for getting around to this TODO",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-08-25T13:14:33Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6762,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fHG_h",
              "body": "Thanks for getting around to this TODO",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-08-25T13:14:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fHPE1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-25T13:27:39Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5N0nav",
                    "body": "Here's a more conceptual proof:\r\n```suggestion\r\ntheorem cliqueFree_completeMultipartiteGraph {ι : Type*} [Fintype ι] (V : ι → Type*) :\r\n    (completeMultipartiteGraph V).CliqueFree (Fintype.card ι + 1) := by\r\n  rw [cliqueFree_iff, isEmpty_iff]\r\n  intro f\r\n  obtain ⟨v, w, hn, he⟩ := exists_ne_map_eq_of_card_lt (Sigma.fst ∘ f) (by simp)\r\n  rw [← top_adj, ← f.map_adj_iff, comap_Adj, top_adj] at hn\r\n  exact absurd he hn\r\n```\r\nThe key fact in the theorem is that if there were a clique you'd have a graph embedding from a complete graph that's \"too big\", and then using the pigeonhole principle you can find some vertices that are adjacent that shouldn't be.\r\n\r\nI'd prefer if we adjust the statement slightly, making it be more like the preceding theorem:\r\n```lean\r\n/-- A complete `r`-partite graph has no `n`-cliques for `r < n`. -/\r\ntheorem cliqueFree_completeMultipartiteGraph {ι : Type*} [Fintype ι] (V : ι → Type*)\r\n    (hc : card ι < n) : (completeMultipartiteGraph V).CliqueFree n := by\r\n  rw [cliqueFree_iff, isEmpty_iff]\r\n  intro f\r\n  obtain ⟨v, w, hn, he⟩ := exists_ne_map_eq_of_card_lt (Sigma.fst ∘ f) (by simp [hc])\r\n  rw [← top_adj, ← f.map_adj_iff, comap_Adj, top_adj] at hn\r\n  exact absurd he hn\r\n```",
                    "createdAt": "2023-08-25T13:08:11Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5N0s14",
                    "body": "Both done.",
                    "createdAt": "2023-08-25T13:27:38Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5N0pBf",
                    "body": "This last sentence is true, and I see you're going for parallelism with the `completeBipartiteGraph` docstring, but it's not very helpful to know immediately (it could be a nice theorem over in the file on graph colorings though -- given a graph coloring, you can create a multipartite graph out of the color classification function, then identify the original graph as a subgraph of the `completeMultipartiteGraph`. Not in this PR though.)\r\n\r\nThis would be very helpful to the reader:\r\n```suggestion\r\nTwo vertices are adjacent if and only if their indices are not equal. -/\r\n```",
                    "createdAt": "2023-08-25T13:14:04Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: complete multipartite graphs",
        "updatedAt": "2023-08-28T08:13:45Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6762",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "21c0f9a8c146813cc64618821cf1a66c6dd42320"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vHfyOzwAAAAJeh-6C",
              "createdAt": "2023-08-24T01:44:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vHfyOzwAAAAJeh-6F",
              "createdAt": "2023-08-24T01:44:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vHfyOzwAAAAJeh-6H",
              "createdAt": "2023-08-24T01:44:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
                "name": "t-combinatorics"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f28c0ab6b95681e4679e0207a4c101125359a97b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c40b9b28d59154d0507df8babe4c79a53737867e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ae42823a1475d8da80ce4d3e88628b9ebfa367c5"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fHG_h",
              "createdAt": "2023-08-25T13:08:11Z",
              "body": "Thanks for getting around to this TODO",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f0a492ef854de7765d26b5f79573f2d34bff4000"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k7u9q",
              "createdAt": "2023-08-25T13:41:00Z",
              "body": "Thanks\r\n\r\nbors d+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k7u-R",
              "createdAt": "2023-08-25T13:41:01Z",
              "body": ":v: Parcly-Taxel can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5vHfyOzwAAAAJfkDFD",
              "createdAt": "2023-08-25T13:41:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5vHfyOzwAAAAJfkDHe",
              "createdAt": "2023-08-25T13:41:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k7z53",
              "createdAt": "2023-08-25T13:56:07Z",
              "body": "bors merge",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k8dTK",
              "createdAt": "2023-08-25T15:49:21Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5977241887/job/16216785048)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5977241887/job/16216784153)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5977241887/job/16216784568)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5vHfyOzwAAAAJfo3ry",
              "createdAt": "2023-08-25T15:49:24Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5vHfyOzwAAAAJfo35y",
              "createdAt": "2023-08-25T15:49:31Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lC1fZ",
              "createdAt": "2023-08-28T08:13:45Z",
              "body": "Sorry, could we define complete multipartite graphs via setoids rather?",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        }
      }
    }
  }
}
