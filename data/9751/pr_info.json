{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 122,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "digama0"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "- [X] depends on: #9830\r\n- [X] depends on: #9772\r\n- [X] depends on: #9996\r\n\r\nThis checks files for unused imports. The output here is piped through `gh-problem-matcher-wrap` so that it will show up as annotations.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 40,
        "closed": true,
        "closedAt": "2024-02-02T18:24:45Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5xrqQx",
              "body": "I think we need more straightforwardly human readable output. e.g.\r\n```\r\n./././Mathlib/GroupTheory/Subgroup/ZPowers.lean:\r\n  remove #[Mathlib.Algebra.GroupPower.Lemmas]\r\n  fix Mathlib.Algebra.GroupPower.Lemmas: #[Mathlib.Analysis.SpecificLimits.Basic, Mathlib.Data.Complex.Exponential]\r\n```\r\nshould become:\r\n````\r\nIn the file Mathlib/GroupTheory/Subgroup/ZPowers.lean, we can remove:\r\n```\r\nimport Mathlib.Algebra.GroupPower.Lemmas\r\n```\r\nafter which we'll add that import back into the following files:\r\n* Mathlib/Analysis/SpecificLimits/Basic.lean\r\n* Mathlib/Data/Complex/Exponential.lean\r\n````\r\n",
              "createdAt": "2024-01-24T03:01:52Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5xsALD",
              "body": "I was hoping people would be using the github annotations, which are a bit more user friendly. The CLI output is more optimized for batch usage, where that kind of verbosity is a bit overwhelming if there are 30-100 of them. You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.",
              "createdAt": "2024-01-24T04:33:10Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5xzZ9v",
              "body": "> You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.\r\n\r\nCan we turn this into clickable suggestions like we have for some style linters? Or it will fail because github won't accept suggestions to the lines that aren't touched by the PR?",
              "createdAt": "2024-01-25T03:53:25Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5x3rBn",
              "body": "> You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.\r\n\r\nThat's definitely not something a user newly encountering `shake` is going to know, or teachable to the average mathematician. Before we encourage everyone to use this tool, we should make sure it doesn't raise further questions. Especially the output of `--fix` appearing to be in the imperative mood and the meaning of \"fix\" in the output looks confusing, and should be easy to fix. I've opened #9996 with my proposal.",
              "createdAt": "2024-01-25T15:17:50Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yFEc8",
              "body": "What does `--gh-style` do and where can I see the output it generates?",
              "createdAt": "2024-01-29T04:15:28Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yFKHN",
              "body": "`--gh-style` produces additional output from `shake` (which you can see in the build logs), these are lines that look like `file:line:col: warning: ...` and shake does not normally produce them. The purpose is that this particular error format is understood by `gh-problem-matcher-wrap`, and it uses them to produce annotations that appear on the PR itself next to other lint warnings. Just look for the comments about ``unused import (use `lake exe shake --fix` to fix this...`` in https://github.com/leanprover-community/mathlib4/pull/9751/files, and the annotations also appear on the [build summary page](https://github.com/leanprover-community/mathlib4/actions/runs/7632749681) and are highlighted in yellow in the [build log itself](https://github.com/leanprover-community/mathlib4/actions/runs/7632749681/job/20793578644?pr=9751#step:22:10).",
              "createdAt": "2024-01-29T04:47:33Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yMvXl",
              "body": "> I was hoping people would be using the github annotations, which are a bit more user friendly. The CLI output is more optimized for batch usage, where that kind of verbosity is a bit overwhelming if there are 30-100 of them. You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.\r\n\r\nI think we either need to have human readable output, or entirely suppress the non human readable output from the CI logs when you click on a red X! How is a new contributor meant to know they are meant to ignore this output?",
              "createdAt": "2024-01-30T02:18:59Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yNiCm",
              "body": "Does #9996 address your concerns? (The output is of course human readable and useful, so I definitely would not want to suppress it, it's just not exactly intended to be a tutorial about itself. Most other CI logs are at a similar level of verbosity.)",
              "createdAt": "2024-01-30T06:16:27Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ysLZD",
              "body": "This disables batching for this PR, so that it doesn't race with other PRs:\r\n\r\nbors single on",
              "createdAt": "2024-02-02T16:10:34Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ysPlw",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#9830~~\n* ~~leanprover-community/mathlib4#9772~~\n* ~~leanprover-community/mathlib4#9996~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-02-02T16:21:08Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yshhR",
              "body": "Thanks :tada: \r\n\r\nIf CI passes, please remove the label `awaiting-CI` and merge this yourself, by adding a comment `bors r+`.\r\n\r\nbors d+",
              "createdAt": "2024-02-02T16:58:14Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yshik",
              "body": ":v: digama0 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-02-02T16:58:16Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ys8JC",
              "body": "bors r+",
              "createdAt": "2024-02-02T17:38:16Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ytMyz",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7759531483/job/21163760601)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7759531483/job/21163759742)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7759531483/job/21163760396)",
              "createdAt": "2024-02-02T18:24:44Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6350c076b8fcda6914f96858468a83d7d1ed7e85",
                "additions": 86,
                "deletions": 42,
                "committedDate": "2024-02-02T14:35:35Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1419555e79f7014d0229440988982ae94125c1cd",
                "additions": 36,
                "deletions": 17,
                "committedDate": "2024-02-02T16:03:56Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7YyZ7Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7760007508/job/21165283821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEAYw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758474168/job/21160329315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UD8Ig",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160328226"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UD9lw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160328599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEAtA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758474170/job/21160329396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UD-9w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160328951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEBkw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160329619"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEByg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758474170/job/21160329674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UD9kg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160328594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UD_Bg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160328966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEBtg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160329654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEALw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160329263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEAVQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160329301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UD8lQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160328341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UEClQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160329877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7Wrtsw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21163077043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE7UFkFg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9751"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGXJRd3A",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1377",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-01-15T02:59:54Z",
        "deletions": 59,
        "files": {
          "nodes": [
            {
              "path": ".github/workflows/bors.yml",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": ".github/workflows/build.yml",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": ".github/workflows/build.yml.in",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": ".github/workflows/build_fork.yml",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/AddConstMap/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Power.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/Pointwise.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Floor.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/Divisibility/Lemmas.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Complex/LocallyUniformLimit.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Braided.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Center.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/BitVec/Defs.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/BitVec/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Complex/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/ENNReal/Operations.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Int/Parity.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/MvPolynomial/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Option/Defs.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Ordmap/Ordset.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Polynomial/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Rat/NNRat/BigOperators.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/EckmannHilton.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/OrderOfElement.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Span.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/FLT/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/RelIso/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/RelSeries.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/WithBot.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Nilpotent.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/SetTheory/Game/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Abel.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Field.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/MetricSpace/IsometricSMul.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Util/DischargerAsTactic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Shake/Main.lean",
              "additions": 58,
              "deletions": 22
            },
            {
              "path": "scripts/noshake.json",
              "additions": 4,
              "deletions": 0
            }
          ]
        },
        "headRefName": "shake_ci",
        "headRefOid": "1419555e79f7014d0229440988982ae94125c1cd",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5kC5YL",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
              "color": "006b75",
              "name": "CI"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 9751,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7YyZ7Q",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7760007508/job/21165283821"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEAYw",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758474168/job/21160329315"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UD8Ig",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160328226"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UD9lw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160328599"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEAtA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758474170/job/21160329396"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UD-9w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160328951"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEBkw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160329619"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEByg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758474170/job/21160329674"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UD9kg",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160328594"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UD_Bg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160328966"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEBtg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160329654"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEALw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160329263"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEAVQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160329301"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UD8lQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21160328341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UEClQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473870/job/21160329877"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7Wrtsw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7758473872/job/21163077043"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE7UFkFg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9751"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGXJRd3A",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1377",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: add `lake exe shake` to CI",
        "updatedAt": "2024-02-02T18:24:49Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/9751",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAKsdGyH",
              "createdAt": "2024-01-15T03:25:32Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAKsdNed",
              "createdAt": "2024-01-15T03:31:47Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58C-8izwAAAAKsfXTk",
              "createdAt": "2024-01-15T05:34:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58C-8izwAAAAKsfXlU",
              "createdAt": "2024-01-15T05:34:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABPZacNQ",
                "name": "CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58C-8izwAAAAKxQiWk",
              "createdAt": "2024-01-23T01:30:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAKx30vW",
              "createdAt": "2024-01-23T18:02:31Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58C-8izwAAAAKx3_3G",
              "createdAt": "2024-01-23T18:06:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAKx4Gdq",
              "createdAt": "2024-01-23T18:08:13Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAKx9kHm",
              "createdAt": "2024-01-23T20:14:42Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAKyCSDp",
              "createdAt": "2024-01-23T22:39:45Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5xrqQx",
              "createdAt": "2024-01-24T03:01:52Z",
              "body": "I think we need more straightforwardly human readable output. e.g.\r\n```\r\n./././Mathlib/GroupTheory/Subgroup/ZPowers.lean:\r\n  remove #[Mathlib.Algebra.GroupPower.Lemmas]\r\n  fix Mathlib.Algebra.GroupPower.Lemmas: #[Mathlib.Analysis.SpecificLimits.Basic, Mathlib.Data.Complex.Exponential]\r\n```\r\nshould become:\r\n````\r\nIn the file Mathlib/GroupTheory/Subgroup/ZPowers.lean, we can remove:\r\n```\r\nimport Mathlib.Algebra.GroupPower.Lemmas\r\n```\r\nafter which we'll add that import back into the following files:\r\n* Mathlib/Analysis/SpecificLimits/Basic.lean\r\n* Mathlib/Data/Complex/Exponential.lean\r\n````\r\n",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5xsALD",
              "createdAt": "2024-01-24T04:33:10Z",
              "body": "I was hoping people would be using the github annotations, which are a bit more user friendly. The CLI output is more optimized for batch usage, where that kind of verbosity is a bit overwhelming if there are 30-100 of them. You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5xzZ9v",
              "createdAt": "2024-01-25T03:53:25Z",
              "body": "> You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.\r\n\r\nCan we turn this into clickable suggestions like we have for some style linters? Or it will fail because github won't accept suggestions to the lines that aren't touched by the PR?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5x3rBn",
              "createdAt": "2024-01-25T15:17:50Z",
              "body": "> You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.\r\n\r\nThat's definitely not something a user newly encountering `shake` is going to know, or teachable to the average mathematician. Before we encourage everyone to use this tool, we should make sure it doesn't raise further questions. Especially the output of `--fix` appearing to be in the imperative mood and the meaning of \"fix\" in the output looks confusing, and should be easy to fix. I've opened #9996 with my proposal.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Qf1rI",
              "createdAt": "2024-01-25T16:13:02Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5lE8Ak",
                "title": "[Merged by Bors] - feat(Shake): output clarifications",
                "url": "https://github.com/leanprover-community/mathlib4/pull/9996"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yFEc8",
              "createdAt": "2024-01-29T04:15:28Z",
              "body": "What does `--gh-style` do and where can I see the output it generates?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yFKHN",
              "createdAt": "2024-01-29T04:47:33Z",
              "body": "`--gh-style` produces additional output from `shake` (which you can see in the build logs), these are lines that look like `file:line:col: warning: ...` and shake does not normally produce them. The purpose is that this particular error format is understood by `gh-problem-matcher-wrap`, and it uses them to produce annotations that appear on the PR itself next to other lint warnings. Just look for the comments about ``unused import (use `lake exe shake --fix` to fix this...`` in https://github.com/leanprover-community/mathlib4/pull/9751/files, and the annotations also appear on the [build summary page](https://github.com/leanprover-community/mathlib4/actions/runs/7632749681) and are highlighted in yellow in the [build log itself](https://github.com/leanprover-community/mathlib4/actions/runs/7632749681/job/20793578644?pr=9751#step:22:10).",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yMvXl",
              "createdAt": "2024-01-30T02:18:59Z",
              "body": "> I was hoping people would be using the github annotations, which are a bit more user friendly. The CLI output is more optimized for batch usage, where that kind of verbosity is a bit overwhelming if there are 30-100 of them. You can also just ignore the CLI output entirely and use `lake exe shake --fix > /dev/null || git diff HEAD` instead.\r\n\r\nI think we either need to have human readable output, or entirely suppress the non human readable output from the CI logs when you click on a red X! How is a new contributor meant to know they are meant to ignore this output?",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yNiCm",
              "createdAt": "2024-01-30T06:16:27Z",
              "body": "Does #9996 address your concerns? (The output is of course human readable and useful, so I definitely would not want to suppress it, it's just not exactly intended to be a tutorial about itself. Most other CI logs are at a similar level of verbosity.)",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58C-8izwAAAAK4eLAM",
              "createdAt": "2024-02-02T14:23:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAK4fsUB",
              "createdAt": "2024-02-02T14:57:23Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58C-8izwAAAAK4gDSV",
              "createdAt": "2024-02-02T15:05:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c58C-8izwAAAAK4i2kC",
              "createdAt": "2024-02-02T16:04:41Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ysLZD",
              "createdAt": "2024-02-02T16:10:34Z",
              "body": "This disables batching for this PR, so that it doesn't race with other PRs:\r\n\r\nbors single on",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ysPlw",
              "createdAt": "2024-02-02T16:21:08Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#9830~~\n* ~~leanprover-community/mathlib4#9772~~\n* ~~leanprover-community/mathlib4#9996~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yshhR",
              "createdAt": "2024-02-02T16:58:14Z",
              "body": "Thanks :tada: \r\n\r\nIf CI passes, please remove the label `awaiting-CI` and merge this yourself, by adding a comment `bors r+`.\r\n\r\nbors d+",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yshik",
              "createdAt": "2024-02-02T16:58:16Z",
              "body": ":v: digama0 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58C-8izwAAAAK4lIEB",
              "createdAt": "2024-02-02T16:58:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c58C-8izwAAAAK4lIHM",
              "createdAt": "2024-02-02T16:58:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ys8JC",
              "createdAt": "2024-02-02T17:38:16Z",
              "body": "bors r+",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c58C-8izwAAAAK4nSlS",
              "createdAt": "2024-02-02T17:38:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ytMyz",
              "createdAt": "2024-02-02T18:24:44Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7759531483/job/21163760601)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7759531483/job/21163759742)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7759531483/job/21163760396)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c58C-8izwAAAAK4o_2z",
              "createdAt": "2024-02-02T18:24:46Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c58C-8izwAAAAK4o_9i",
              "createdAt": "2024-02-02T18:24:49Z"
            }
          ]
        }
      }
    }
  }
}
