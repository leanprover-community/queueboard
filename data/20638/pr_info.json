{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 440,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "jcommelin"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> List.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 149,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Z9TYH",
              "body": "### PR summary [d3ef88443e](https://github.com/leanprover-community/mathlib4/pull/20638/commits/d3ef88443edff4cabcd265807f415c643f103236)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ OrderedSetLike`\n`+ instance (G : Type*) [CommGroup G] : OrderedSetLike (GroupCone G) G := SetLike.toOrderedSetLike`\n`+ instance (R : Type*) [Ring R] : OrderedSetLike (RingCone R) R := SetLike.toOrderedSetLike`\n`+ instance (t : RootedTree) : OrderedSetLike (SubRootedTree t) t := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (AffineSubspace k P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (BooleanSubalgebra Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ClopenUpperSet Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Clopens Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ClosedSubgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Closeds Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (CompactOpens Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Compacts Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (CompleteSublattice Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ConvexBody V) V := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ConvexCone ùïú E) E := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Flag Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (FractionalIdeal S P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (G.ComponentCompl K) V := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (HomogeneousIdeal ùíú) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Ideal P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (IntermediateField K L) L := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Interval Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (IrreducibleCloseds Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (L.DefinableSet A Œ±) (Œ± ‚Üí M) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (L.ElementarySubstructure M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (L.Substructure M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (LieSubalgebra R L) L := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (LieSubmodule R L M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (LowerSet Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalStarSubalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalStarSubsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalSubalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalSubring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalSubsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonemptyCompacts Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonemptyInterval Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (OpenNhdsOf x) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (OpenNormalSubgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (OpenSubgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Opens Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (PFilter P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (PositiveCompacts Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ProperCone ùïú E) E := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (StarSubalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (StarSubsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (SubMulAction R M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (SubObj X) X := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subfield K) K := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subgroupoid C) (Œ£ c d : C, c ‚ü∂ d) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Sublattice Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Submodule R M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Submonoid M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subsemigroup M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subspace K V) (‚Ñô K V) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Sylow p G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Sym2 Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (T.CompleteType Œ±) (L[[Œ±]].Sentence) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (TwoSidedIdeal R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ValuationSubring K) K := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (VonNeumannAlgebra H) (H ‚ÜíL[‚ÑÇ] H) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike G.ConnectedComponent V := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike YoungDiagram (‚Ñï √ó ‚Ñï) := SetLike.toOrderedSetLike`\n`+ instance : SetLike A B`\n`+ instance [DecidableEq X] : OrderedSetLike (DecSubObj X) X := SetLike.toOrderedSetLike`\n`+ toOrderedSetLike`\n`- instance (priority := 100) instPartialOrder : PartialOrder A`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (1.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4801|-1|porting notes|\n\nCurrent commit [d3ef88443e](https://github.com/leanprover-community/mathlib4/commit/d3ef88443edff4cabcd265807f415c643f103236)\nReference commit [973fc78afb](https://github.com/leanprover-community/mathlib4/commit/973fc78afb24119af738f370764bf7820a4e86a8)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2025-01-10T15:38:35Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d3ef88443edff4cabcd265807f415c643f103236",
                "additions": 440,
                "deletions": 244,
                "committedDate": "2025-01-10T15:36:44Z",
                "author": {
                  "name": "Johan Commelin",
                  "email": "johan@commelin.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ8yKOw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12736848300/job/35497216571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRSBTLA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12745466537/job/35519484716"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpWMw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542132/job/35438351923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ8yKTg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12736848301/job/35497216590"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRSBRxw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12745466534/job/35519484359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpYug",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542535/job/35438352570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpYGg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542534/job/35438352410"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ8yKCQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12736848309/job/35497216521"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRSBRzg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12745466533/job/35519484366"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpYFA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542529/job/35438352404"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpUjg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542134/job/35438351502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpZYg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542532/job/35438352738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpV0A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542134/job/35438351824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpUlw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542132/job/35438351511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpagw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542532/job/35438353027"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEpXcA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542132/job/35438352240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQGbStQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542134/job/35440218805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQEqCYw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35438363235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQErTlg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20638&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-10T15:37:41Z",
        "deletions": 244,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/NonUnitalSubalgebra.lean",
              "additions": 8,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/Basic.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Field/Subfield/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Field/Subfield/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Defs.lean",
              "additions": 40,
              "deletions": 16
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Lattice.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Pointwise.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Membership.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Pointwise.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Lie/Engel.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Lie/LieTheorem.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Lie/Subalgebra.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Lie/Submodule.lean",
              "additions": 12,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/Module/FinitePresentation.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Module/LocalizedModule/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Equiv.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Map.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Pointwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Range.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/RestrictScalars.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/ZLattice/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/Ideal.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Group/Cone.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Cone.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Pointwise/Stabilizer.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/CoeffMem.lean",
              "additions": 8,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Ring/Subring/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Subring/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/Subsemiring/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Subsemiring/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Star/NonUnitalSubalgebra.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Star/NonUnitalSubsemiring.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Star/Subalgebra.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Star/Subsemiring.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Cover/Open.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/QuasiCompact.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/AlgebraicGeometry/ProjectiveSpectrum/Topology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Restrict.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Sites/SmallAffineZariski.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/SpreadingOut.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/StructureSheaf.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/TangentCone.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Body.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Cone/Basic.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Cone/Extension.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Cone/Proper.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/MeanErgodic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/Projection.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/VonNeumannAlgebra/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Ends/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Path.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/Young/YoungDiagram.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/SetLike/Basic.lean",
              "additions": 37,
              "deletions": 12
            },
            {
              "path": "Mathlib/Data/Sym/Sym2.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/ZMod/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Dynamics/Ergodic/Action/OfMinimal.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/Extension.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/FieldTheory/Finite/Polynomial.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/FieldTheory/IntermediateField/Basic.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/Minpoly/MinpolyDiv.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/NormalClosure.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/ChartedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/GroupAction/Defs.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/GroupAction/SubMulAction.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/GroupTheory/Nilpotent.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/SpecificGroups/ZGroup.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Sylow.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Torsion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/AffineSpace/AffineSubspace.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/AffineSpace/Restrict.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Basis/VectorSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp/Span.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp/Supported.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Pi.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/LinearAlgebra/Prod.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/LinearAlgebra/Projectivization/Subspace.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Quotient/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Finite/CanonicalBilinear.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Span/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/LinearAlgebra/Span/Defs.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Group/GeometryOfNumbers.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/ModelTheory/Definability.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/ModelTheory/ElementarySubstructures.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/ModelTheory/FinitelyGenerated.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/ModelTheory/Substructures.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/ModelTheory/Types.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Embeddings.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/FractionalIdeal.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/RamificationInertia/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/BooleanSubalgebra.lean",
              "additions": 3,
              "deletions": 1
            }
          ]
        },
        "headRefName": "jmc-setlike-partial-order",
        "headRefOid": "d3ef88443edff4cabcd265807f415c643f103236",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6HWMO3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": []
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6XuWwS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "artie2000"
              },
              "submittedAt": "2025-01-12T20:29:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6XxO2i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-01-13T10:40:31Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20638,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6XuWwS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "artie2000"
              },
              "submittedAt": "2025-01-12T20:29:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6XxO2i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-01-13T10:40:31Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_uBo",
                    "body": "```suggestion\r\n  __ := ‚ÄπSetLike A B‚Ä∫\r\n```",
                    "createdAt": "2025-01-12T20:18:10Z",
                    "author": {
                      "login": "artie2000"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_uGD",
                    "body": "docstring idea: \"Construct a partial order on `A` from the ordering by inclusion on `Set B`\"",
                    "createdAt": "2025-01-12T20:19:40Z",
                    "author": {
                      "login": "artie2000"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yBdxN",
                    "body": "Should these renames get deprecated aliases? They seem to be used a lot.",
                    "createdAt": "2025-01-13T10:40:30Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjE3OTUwOTkz",
              "login": "artie2000"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQ8yKOw",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12736848300/job/35497216571"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRSBTLA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12745466537/job/35519484716"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpWMw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542132/job/35438351923"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQ8yKTg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12736848301/job/35497216590"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRSBRxw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12745466534/job/35519484359"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpYug",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542535/job/35438352570"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpYGg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542534/job/35438352410"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQ8yKCQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12736848309/job/35497216521"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRSBRzg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12745466533/job/35519484366"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpYFA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542529/job/35438352404"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpUjg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542134/job/35438351502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpZYg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542532/job/35438352738"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpV0A",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542134/job/35438351824"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpUlw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542132/job/35438351511"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpagw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542532/job/35438353027"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEpXcA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542132/job/35438352240"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQGbStQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12712542134/job/35440218805"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQEqCYw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35438363235"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQErTlg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20638&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(SetLike): introduce OrderedSetLike and remove SetLike.instPartialOrder",
        "updatedAt": "2025-01-13T10:40:31Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20638",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Z9TYH",
              "createdAt": "2025-01-10T15:38:35Z",
              "body": "### PR summary [d3ef88443e](https://github.com/leanprover-community/mathlib4/pull/20638/commits/d3ef88443edff4cabcd265807f415c643f103236)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ OrderedSetLike`\n`+ instance (G : Type*) [CommGroup G] : OrderedSetLike (GroupCone G) G := SetLike.toOrderedSetLike`\n`+ instance (R : Type*) [Ring R] : OrderedSetLike (RingCone R) R := SetLike.toOrderedSetLike`\n`+ instance (t : RootedTree) : OrderedSetLike (SubRootedTree t) t := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (AffineSubspace k P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (BooleanSubalgebra Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ClopenUpperSet Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Clopens Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ClosedSubgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Closeds Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (CompactOpens Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Compacts Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (CompleteSublattice Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ConvexBody V) V := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ConvexCone ùïú E) E := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Flag Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (FractionalIdeal S P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (G.ComponentCompl K) V := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (HomogeneousIdeal ùíú) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Ideal P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (IntermediateField K L) L := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Interval Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (IrreducibleCloseds Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (L.DefinableSet A Œ±) (Œ± ‚Üí M) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (L.ElementarySubstructure M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (L.Substructure M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (LieSubalgebra R L) L := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (LieSubmodule R L M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (LowerSet Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalStarSubalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalStarSubsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalSubalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalSubring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonUnitalSubsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonemptyCompacts Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (NonemptyInterval Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (OpenNhdsOf x) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (OpenNormalSubgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (OpenSubgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Opens Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (PFilter P) P := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (PositiveCompacts Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ProperCone ùïú E) E := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (StarSubalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (StarSubsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (SubMulAction R M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (SubObj X) X := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subalgebra R A) A := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subfield K) K := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subgroup G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subgroupoid C) (Œ£ c d : C, c ‚ü∂ d) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Sublattice Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Submodule R M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Submonoid M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subsemigroup M) M := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subsemiring R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Subspace K V) (‚Ñô K V) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Sylow p G) G := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (Sym2 Œ±) Œ± := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (T.CompleteType Œ±) (L[[Œ±]].Sentence) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (TwoSidedIdeal R) R := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (ValuationSubring K) K := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike (VonNeumannAlgebra H) (H ‚ÜíL[‚ÑÇ] H) := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike G.ConnectedComponent V := SetLike.toOrderedSetLike`\n`+ instance : OrderedSetLike YoungDiagram (‚Ñï √ó ‚Ñï) := SetLike.toOrderedSetLike`\n`+ instance : SetLike A B`\n`+ instance [DecidableEq X] : OrderedSetLike (DecSubObj X) X := SetLike.toOrderedSetLike`\n`+ toOrderedSetLike`\n`- instance (priority := 100) instPartialOrder : PartialOrder A`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (1.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4801|-1|porting notes|\n\nCurrent commit [d3ef88443e](https://github.com/leanprover-community/mathlib4/commit/d3ef88443edff4cabcd265807f415c643f103236)\nReference commit [973fc78afb](https://github.com/leanprover-community/mathlib4/commit/973fc78afb24119af738f370764bf7820a4e86a8)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5xtK6G",
              "createdAt": "2025-01-10T16:13:23Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Gwoho",
                "title": "feat(GroupTheory/MaximalSubgroups): define maximal subgroups",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20499"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5x5pd5",
              "createdAt": "2025-01-12T02:39:07Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6HRUR9",
                "title": "refactor: Abstract out the substructure lattice construction",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20621"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6XuWwS",
              "createdAt": "2025-01-12T20:18:10Z",
              "body": "",
              "author": {
                "login": "artie2000"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6XxO2i",
              "createdAt": "2025-01-13T10:40:30Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        }
      }
    }
  }
}
