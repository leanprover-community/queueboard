{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 60,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "bsubercaseaux"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR adds some basic lemmas about metric aspects of box products. In particular, it adds:\r\na lemma stating that `(G □ H).edist x y = G.edist x.1 y.1 + H.edist x.2 y.2`, and a couple of auxiliary facts to prove it.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6kf8jz",
              "body": "### PR summary [9d2630c108](https://github.com/leanprover-community/mathlib4/pull/23385/commits/9d2630c108f8005d67a00f48c530d1bde8b6310c)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +12.21% | `Mathlib.Combinatorics.SimpleGraph.Prod` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Combinatorics.SimpleGraph.Prod | 606 | 680 | +74 (+12.21%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Combinatorics.SimpleGraph.ConcreteColorings`|1|\n| `Mathlib.Combinatorics.SimpleGraph.Circulant`|50|\n| `Mathlib.Combinatorics.SimpleGraph.Hasse`|51|\n| `Mathlib.Combinatorics.SimpleGraph.Prod`|74|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ boxProd_edist`\n`+ boxProd_len_eq_sum_projections`\n`+ boxProd_reachable`\n`+ edist_boxProd_eq_top`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-27T23:48:46Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "17ac147af9366485ab1299136c372858c00cd8d0",
                "additions": 63,
                "deletions": 0,
                "committedDate": "2025-03-28T00:01:54Z",
                "author": {
                  "name": "Bernardo Subercaseaux",
                  "email": "bernardosubercaseaux@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbNPnA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983158/job/39555649436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbc0zg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14119111398/job/39555904718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbnY9A",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14119170504/job/39556077812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbGVdg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983702/job/39555536246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbc1OA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14119111393/job/39555904824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbnZyA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14119170488/job/39556078024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbGVfA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983713/job/39555536252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbRIEQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983160/job/39555713041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbNREg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983158/job/39555649810"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbRHjw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983160/job/39555712911"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbNR6Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983158/job/39555650025"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbkhbA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14118983160/job/39556030828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNbNTZw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39555650407"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "936ca3647701a534b31e387478c3e1e5b49774e1",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2025-03-28T02:56:51Z",
                "author": {
                  "name": "Bernardo Subercaseaux",
                  "email": "bernardosubercaseaux@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNga-fQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007482/job/39561117309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOg7HVw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143847096/job/39628752727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgbtgQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121012202/job/39561129345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgcK8w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121014867/job/39561136883"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgciNA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121016805/job/39561142836"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgdcUg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121022090/job/39561157714"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOgxaFw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143778376/job/39628593687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOg52FA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143837592/job/39628731924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOg65CA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143845605/job/39628749064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOjHsTQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144911858/job/39631055949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgbArw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007929/job/39561117871"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgbtYg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121012198/job/39561129314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgcK-w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121014875/job/39561136891"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgciTg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121016812/job/39561142862"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgdcVg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121022096/job/39561157718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOgxaBA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143778378/job/39628593668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOg52ZQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143837597/job/39628732005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOg65jQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14143845594/job/39628749197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOjHsOg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144911863/job/39631055930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgbA4g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007926/job/39561117922"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNga9Vg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007491/job/39561117014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNga9iQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007482/job/39561117065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNga-Fw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007491/job/39561117207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNga_Tw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007482/job/39561117519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgqdYA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14121007491/job/39561370976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNgbS4A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39561122528"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9d2630c108f8005d67a00f48c530d1bde8b6310c",
                "additions": 10,
                "deletions": 13,
                "committedDate": "2025-03-29T15:04:58Z",
                "author": {
                  "name": "Bernardo Subercaseaux",
                  "email": "bernardosubercaseaux@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm8zXw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796186/job/39635071839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm859A",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797314/job/39635073524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm9SwA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146800177/job/39635079872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm9tfw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146802576/job/39635086719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm-08A",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146810955/job/39635105008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm_bdw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146815250/job/39635114871"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOnCMpg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146834994/job/39635160230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOnFxSQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146862662/job/39635218761"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm83sA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797006/job/39635072944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm86GQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797321/job/39635073561"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm9S4g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146800175/job/39635079906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm9uAQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146802623/job/39635086849"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm-0xg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146810959/job/39635104966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm_bRw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146815249/job/39635114823"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOnCMjA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146834995/job/39635160204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOnFxbg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146862663/job/39635218798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm83-A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797004/job/39635073016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm8yXg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796189/job/39635071582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm8yeQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796186/job/39635071609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm8zJw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796189/job/39635071783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm80ug",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796186/job/39635072186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOnGiWQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796189/job/39635231321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOm9KDQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39635077645"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-27T23:47:42Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Prod.lean",
              "additions": 60,
              "deletions": 0
            }
          ]
        },
        "headRefName": "graph_prods",
        "headRefOid": "9d2630c108f8005d67a00f48c530d1bde8b6310c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Qezb9",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
              "color": "33dbec",
              "name": "t-combinatorics"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ij-dR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-29T10:49:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ij30W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-29T08:18:48Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23385,
        "potentialMergeCommit": {
          "oid": "3b06f7ab240b94b73de4bb698c87ede959ada4eb"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": [
                {
                  "login": "eric-wieser"
                }
              ]
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjExNTg5MTg=",
                "login": "arienmalec"
              }
            },
            {
              "requestedReviewer": {
                "id": "U_kgDOBlmvUA",
                "login": "Rida-Hamadani"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6iXKjM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-28T00:12:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iXKyg",
              "body": "Thanks, this looks like some useful API; I'll leave reviewing the proofs (as opposed to the statements) to someone more familiar with the area.",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-28T00:16:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iXsxa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-28T02:57:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iXs0u",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-28T02:57:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iXs4M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-28T02:57:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iXs-8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-28T02:58:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ij3f7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-29T08:09:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ij3gY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-29T08:17:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ij30W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-29T08:18:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ij-dR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-29T10:49:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikMbJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:05:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikMbr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:05:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikMeB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:05:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikMrD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:06:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikMso",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:06:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikNdy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:09:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ikN-_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-29T15:13:00Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54RFRh",
                    "body": "I'd be tempted to make this import in the other direction, but perhaps @kmill has stronger opinions",
                    "createdAt": "2025-03-28T00:12:13Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54Yu-Y",
                    "body": "I think this local straightening of the import graph is bad, but easier to work against once we have enough material in a given folder to decide what the \"primitives\" of that folder are, and what's derived. Therefore I am happy to leave this as is for now",
                    "createdAt": "2025-03-29T08:09:16Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54RFca",
                    "body": "I think `reachable` should be spelt in full here, to match `degree` rather than `deg` etc.",
                    "createdAt": "2025-03-28T00:13:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54Rcdu",
                    "body": "agree! updated",
                    "createdAt": "2025-03-28T02:57:53Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54RFfM",
                    "body": "```suggestion\r\nlemma boxProd_edist_eq_top (x y : α × β) :\r\n```",
                    "createdAt": "2025-03-28T00:13:48Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54Rcbg",
                    "body": "Goot catch, updated!",
                    "createdAt": "2025-03-28T02:57:38Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54RFkO",
                    "body": "```suggestion\r\n@[simp]\r\nlemma boxProd_edist (x y : α × β) :\r\n```\r\nseems fairly reasonable here.",
                    "createdAt": "2025-03-28T00:14:33Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54RcZM",
                    "body": "Added! that makes sense to me!",
                    "createdAt": "2025-03-28T02:57:23Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54RFxx",
                    "body": "Maybe\r\n```suggestion\r\nlemma Walk.length_boxProd {a₁ a₂ : α} {b₁ b₂ : β} [DecidableEq α] [DecidableEq β]\r\n```\r\nbut maybe wait for another reviewer's input on this one.",
                    "createdAt": "2025-03-28T00:16:05Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54Rchl",
                    "body": "Sounds reasonable to me! will wait for another reviewer :) Thanks for your careful review!",
                    "createdAt": "2025-03-28T02:58:23Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54YvTs",
                    "body": "I would possibly turn this lemma around and call it `Walk.length_ofBoxProdLeft_add_length_ofBoxProdRight`",
                    "createdAt": "2025-03-29T08:18:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZCG2",
                    "body": "you mean to state it as `w.ofBoxProdLeft.length + w.ofBoxProdRight.length = w.length`?  If so, what is the rationale? At least to me it feels more natural to think of it as \"the length of a walk in the product is the sum of the length of its projections\", rather than \"the sum of the lengths of the projections of a walk equal the length of that walk\", but I'm thinking from a pen-and-paper perspective rather than from which direction would be more commonly used...",
                    "createdAt": "2025-03-29T15:12:59Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Yu-t",
                    "body": "```suggestion\r\nlemma boxProd_reachable {x y : α × β} :\r\n```\r\nsince it's an iff. Same below",
                    "createdAt": "2025-03-29T08:09:29Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZBGb",
                    "body": "Done, I see why that's better!",
                    "createdAt": "2025-03-29T15:05:05Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YvDV",
                    "body": "```suggestion\r\nlemma edist_boxProd_eq_top (x y : α × β) :\r\n    (G □ H).edist x y = ⊤ ↔ G.edist x.1 y.1 = ⊤ ∨ H.edist x.2 y.2 = ⊤ := by\r\n```\r\nSame below. Also this lemma can be proved by simp below `boxProd_edist`, right?",
                    "createdAt": "2025-03-29T08:11:09Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0sN",
                    "body": "I think a lot of the existing lemmas in this file are misnamed; perhaps it makes sense for you to make a deprecation PR to fix them first, @YaelDillies?",
                    "createdAt": "2025-03-29T10:49:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZB-F",
                    "body": " Changed the name! and yes, I think given `boxProd_edist` this is just a `simp`.  Given I use this in the proof of `boxProd_edist`, is the suggestion to remove it and just \"inline\" this lemma there?",
                    "createdAt": "2025-03-29T15:09:42Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YvD7",
                    "body": "nit:\r\n```suggestion\r\n  | .nil => simp [Walk.length, Walk.ofBoxProdLeft, Walk.ofBoxProdRight]\r\n  | .cons x w' => next c =>\r\n```",
                    "createdAt": "2025-03-29T08:11:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZBG2",
                    "body": "Done!",
                    "createdAt": "2025-03-29T15:05:17Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YvLC",
                    "body": "We usually do backwards reasoning to avoid having to restate intermediate steps. Eg here this would look like\r\n```suggestion\r\n    refine le_antisymm ?_ ?_\r\n    ·  calc (G □ H).edist x y ≤ w_app.length := by exact edist_le _\r\n          _ = wG.length + wH.length := by exact_mod_cast w_len\r\n          _ = G.edist x.1 y.1 + H.edist x.2 y.2 := by simp only [hwG, hwH]\r\n    · have ⟨w, hw⟩ :=  exists_walk_of_edist_ne_top h\r\n      rw [← hw, boxProd_len_eq_sum_projections]\r\n      apply add_le_add (edist_le (Walk.ofBoxProdLeft w)) (edist_le (Walk.ofBoxProdRight w))\r\n```",
                    "createdAt": "2025-03-29T08:15:17Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZBHu",
                    "body": "I see, that's nice! adopted this.",
                    "createdAt": "2025-03-29T15:05:40Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YvMX",
                    "body": "Dot notation is your friend. Use dot notation\r\n```suggestion\r\n      apply add_le_add (edist_le w.ofBoxProdLeft) (edist_le w.ofBoxProdRight)\r\n```",
                    "createdAt": "2025-03-29T08:15:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZBXO",
                    "body": "Done!",
                    "createdAt": "2025-03-29T15:06:58Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YvQb",
                    "body": "You seem to be using `apply` even when `exact` would work. `exact` is generally sturdier than `apply` (eg it elaborates the term you give it using the goal, rather than `apply` which elaborates it with no expected term), so you should try using it wherever `apply` would leave no goal\r\n```suggestion\r\n      exact add_le_add (edist_le (Walk.ofBoxProdLeft w)) (edist_le (Walk.ofBoxProdRight w))\r\n    exact le_antisymm le ge\r\n```",
                    "createdAt": "2025-03-29T08:17:33Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54ZBUp",
                    "body": "That makes sense, I hadn't really learned the difference yet.",
                    "createdAt": "2025-03-29T15:06:31Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE2NzQ4ODY1",
              "login": "bsubercaseaux"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm8zXw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796186/job/39635071839"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm859A",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797314/job/39635073524"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm9SwA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146800177/job/39635079872"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm9tfw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146802576/job/39635086719"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm-08A",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146810955/job/39635105008"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm_bdw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146815250/job/39635114871"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOnCMpg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146834994/job/39635160230"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOnFxSQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146862662/job/39635218761"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm83sA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797006/job/39635072944"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm86GQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797321/job/39635073561"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm9S4g",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146800175/job/39635079906"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm9uAQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146802623/job/39635086849"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm-0xg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146810959/job/39635104966"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm_bRw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146815249/job/39635114823"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOnCMjA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146834995/job/39635160204"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOnFxbg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146862663/job/39635218798"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm83-A",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146797004/job/39635073016"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm8yXg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796189/job/39635071582"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm8yeQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796186/job/39635071609"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm8zJw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796189/job/39635071783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm80ug",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796186/job/39635072186"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOnGiWQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14146796189/job/39635231321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOm9KDQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39635077645"
              }
            ]
          }
        },
        "title": "feat(Combinatorics/SimpleGraph/Prod): add edist lemmas about graph box product",
        "updatedAt": "2025-03-29T15:13:00Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23385",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6wHN5FzwAAAAP2sR5L",
              "createdAt": "2025-03-27T23:47:42Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6wHN5FzwAAAAP2sR5M",
              "createdAt": "2025-03-27T23:47:42Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjExNTg5MTg=",
                "login": "arienmalec"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6wHN5FzwAAAAP2sR5S",
              "createdAt": "2025-03-27T23:47:42Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6wHN5FzwAAAAP2sR5W",
              "createdAt": "2025-03-27T23:47:42Z",
              "requestedReviewer": {
                "id": "U_kgDOBlmvUA",
                "login": "Rida-Hamadani"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6wHN5FzwAAAAP2sSUU",
              "createdAt": "2025-03-27T23:47:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6wHN5FzwAAAAP2sTbc",
              "createdAt": "2025-03-27T23:48:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kf8jz",
              "createdAt": "2025-03-27T23:48:46Z",
              "body": "### PR summary [9d2630c108](https://github.com/leanprover-community/mathlib4/pull/23385/commits/9d2630c108f8005d67a00f48c530d1bde8b6310c)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +12.21% | `Mathlib.Combinatorics.SimpleGraph.Prod` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Combinatorics.SimpleGraph.Prod | 606 | 680 | +74 (+12.21%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Combinatorics.SimpleGraph.ConcreteColorings`|1|\n| `Mathlib.Combinatorics.SimpleGraph.Circulant`|50|\n| `Mathlib.Combinatorics.SimpleGraph.Hasse`|51|\n| `Mathlib.Combinatorics.SimpleGraph.Prod`|74|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ boxProd_edist`\n`+ boxProd_len_eq_sum_projections`\n`+ boxProd_reachable`\n`+ edist_boxProd_eq_top`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6wHN5FzwAAAAP2sTv7",
              "createdAt": "2025-03-27T23:48:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
                "name": "t-combinatorics"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "17ac147af9366485ab1299136c372858c00cd8d0"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6wHN5FzwAAAAP2spyt",
              "createdAt": "2025-03-28T00:02:13Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6iXKjM",
              "createdAt": "2025-03-28T00:12:13Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6iXKyg",
              "createdAt": "2025-03-28T00:13:27Z",
              "body": "Thanks, this looks like some useful API; I'll leave reviewing the proofs (as opposed to the statements) to someone more familiar with the area.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "936ca3647701a534b31e387478c3e1e5b49774e1"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ij3gY",
              "createdAt": "2025-03-29T08:09:29Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6wHN5FzwAAAAP30Bd_",
              "createdAt": "2025-03-29T08:18:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9d2630c108f8005d67a00f48c530d1bde8b6310c"
              }
            }
          ]
        }
      }
    }
  }
}
