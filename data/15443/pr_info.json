{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 200,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Prove the Marcinkiewicz-Zygmund inequality.\r\n\r\nThe Marcinkiewicz-Zygmund inequality states that, if `X‚ÇÅ, ... X‚Çê ‚àà L^p` are independent random\r\nvariables of mean zero valued in some inner product space, then the `L^p`-norm of `X‚ÇÅ + ... + X‚Çê` is\r\nat most `C‚Çö` times the `L^(p/2)`-norm of `|X‚ÇÅ|¬≤ + ... + |X‚Çê|¬≤`, where `C‚Çö` is a constant depending on\r\n`p` alone.\r\n\r\nFrom LeanAPAP\r\n\r\nCo-authored-by: Bhavik Mehta <bhavikmehta8@gmail.com>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #15832\r\n- [ ] depends on: #21033\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6HBzp4",
              "body": "### PR summary [bae38f92fe](https://github.com/leanprover-community/mathlib4/pull/15443/commits/bae38f92fe3d0a15a11e7c76c379dcca38ae7d80)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Probability.MarcinkiewiczZygmund` (new file)|1996|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ marcinkiewiczZygmundConst`\n`+ marcinkiewiczZygmundSymmConst`\n`+ marcinkiewicz_zygmund`\n`+ marcinkiewicz_zygmund_symmetric`\n`+ mem‚Ñíp_prod_range`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-08-02T13:22:46Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IpPY0",
              "body": "Does this work for Euclidean space, by expressing the norm-square of a vector as the sum of the squares of its components?  You do this for the real+complex decomposition of a complex number, but I don't immediately see anything special to two summands.  (Of course, the constants would be adjusted.)\r\n\r\nIf that works, then you can extend to a finite-dimensional inner product space by using `stdOrthonormalBasis`.",
              "createdAt": "2024-08-16T00:35:00Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6IwVPs",
              "body": "I asked the people around me (Bhavik, Thomas Bloom, my PhD advisor), and we all agree that your generalisation should work, but also that we have no use for it. I am therefore leaving a TODO.",
              "createdAt": "2024-08-16T22:05:27Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JFZ2l",
              "body": "I pushed a cheap generalization to inner product spaces (cheap because I kept the dimension restriction, so your original proof goes through without change).  OK?",
              "createdAt": "2024-08-20T22:54:01Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JGekS",
              "body": "... at which point I figured I might as well do the general case.  Are you willing to keep it part of the PR?",
              "createdAt": "2024-08-21T02:03:22Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JLBFc",
              "body": "Ahah, that's great! I was not willing to generalise because I have so many other things to push from APAP, but if you have already done it I won't complain üòÖ Thanks a lot!",
              "createdAt": "2024-08-21T07:44:33Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JmKy1",
              "body": "I have decided to move the new file to a new folder `Analysis.Discrete` because I have more discrete analysis in the making and Marcinkiewicz-Zygmund (at least the version here) is usually classified as a discrete analysis result.",
              "createdAt": "2024-08-24T18:23:11Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Y7e9h",
              "body": "Thank you Heather and S√©bastien for the reviews. I have decided that the current proof was too ugly and specific to be worth spending more time on, so I have started formalising the general random variable version.\r\n\r\nAlong the way, I've made another big change: Instead of generalising to inner product spaces by taking a basis (bootstrapping), I rewrote the entire proof to handle products of inner products rather than products. This makes the proof a bit more complicated in places, but overall seems to work nicer AND gives a constant that does not depend on the dimension of the space.\r\n\r\nThere are still a few sorries left (10 at the time of writing), but none of them should be particularly challenging.\r\n\r\nPS: The lemmas Heather wrote disappeared from this PR because I don't need them anymore and I have PRed them separately.",
              "createdAt": "2024-12-30T17:13:25Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6by-Dr",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#15832~~\n* ~~leanprover-community/mathlib4#21033~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-01-25T07:49:22Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "eec30f6370d47369019e263addc1875192bdc253",
                "additions": 191,
                "deletions": 0,
                "committedDate": "2024-12-30T17:02:22Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaLrDw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549679796/job/34991172367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaVRZw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549740043/job/34991329639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJbh7FQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12550204817/job/34992585493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaLNtw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549676886/job/34991164855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaVR1w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549740052/job/34991329751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJbh7Rg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12550204824/job/34992585542"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI7mQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663735/job/34991127449"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaVR2Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549740045/job/34991329753"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJbh7ZA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12550204829/job/34992585572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI7uA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663734/job/34991127480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI4Rw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663350/job/34991126599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI5FQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663349/job/34991126805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI8fw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663731/job/34991127679"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI5lw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663350/job/34991126935"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI5pQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663349/job/34991126949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI7tw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663731/job/34991127479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI4ew",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663349/job/34991126651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI49Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663350/job/34991126773"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaI6Lg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663350/job/34991127086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaa8og",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12549663349/job/34991422626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaJbEg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34991135506"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIJaKD0A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15443&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fc56324f2eab2479ab8c5291d47f056b2a9528d7",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2025-01-21T16:15:07Z",
                "author": {
                  "name": "Kexing Ying",
                  "email": "kexing.ying@epfl.ch"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "128d52c91616945d2fcab7cbad770aab174600f4",
                "additions": 48610,
                "deletions": 26955,
                "committedDate": "2025-01-21T16:15:43Z",
                "author": {
                  "name": "Kexing Ying",
                  "email": "kexing.ying@epfl.ch"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZqRw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163957/job/35942459975"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZbxA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163088/job/35942456260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZbXg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163089/job/35942456158"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZpcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163965/job/35942459763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZbzg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163119/job/35942456270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZn2Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163965/job/35942459353"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZn1Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163957/job/35942459349"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZdrA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163119/job/35942456748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZsUw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163957/job/35942460499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlxoow",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12891163965/job/35942852771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlZ20Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35942463185"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXlbixw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15443&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "bae38f92fe3d0a15a11e7c76c379dcca38ae7d80",
                "additions": 14,
                "deletions": 2,
                "committedDate": "2025-01-22T12:44:01Z",
                "author": {
                  "name": "Kexing Ying",
                  "email": "kexing.ying@epfl.ch"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIapdwtw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958190058/job/36148048055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa1Ml3w",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12963125997/job/36160349663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoCVA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478131/job/35994075732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoI-g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908479027/job/35994077434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoIdQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478998/job/35994077301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWn_ww",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478138/job/35994075075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoKIw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908479006/job/35994077731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoBAQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478138/job/35994075393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoAaA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478131/job/35994075240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoIeQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908479006/job/35994077305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWoDxw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478131/job/35994076103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYW8qFQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478138/job/35994413589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWohlQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35994083733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIYWp8xw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15443&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-02T13:21:08Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Probability/MarcinkiewiczZygmund.lean",
              "additions": 199,
              "deletions": 0
            }
          ]
        },
        "headRefName": "marcinkiewicz_zygmund",
        "headRefOid": "bae38f92fe3d0a15a11e7c76c379dcca38ae7d80",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c53QZe1",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HvKCV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2024-09-03T12:25:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WjPsr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-12-30T17:20:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NSCW9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2024-10-15T19:00:05Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15443,
        "potentialMergeCommit": {
          "oid": "9a5278727ffb48426583ecb2662488e05d852afc"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6FS1-H",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-13T18:42:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FS8U6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-08-13T19:01:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FY8Jr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-14T11:37:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FY_kq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-14T11:43:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FZADX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-14T11:44:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FZ1fS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-08-14T13:18:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FZ15n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-08-14T13:18:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6FhinK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-15T10:59:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Fh2x8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-08-15T12:09:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Gon7Q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-08-24T17:30:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GqvYI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2024-08-25T18:15:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GqwQa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-08-25T18:43:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Gqwjn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2024-08-25T18:53:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Gsdpo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-26T05:50:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6HvKCV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2024-09-03T12:25:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NRXlj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2024-10-15T18:56:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NSCW9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2024-10-15T19:00:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WjMwU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-12-30T17:05:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WjOBE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-12-30T17:12:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WjPsr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-12-30T17:20:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WjYlE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-12-30T18:07:51Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mRHb-",
                    "body": "```suggestion\r\nNote that `RCLike.marcinkiewicz_zygmund` is another version that works for both `‚Ñù` and `‚ÑÇ` at the\r\nexpense of a slightly worse constant. -/\r\n```",
                    "createdAt": "2024-08-13T18:42:37Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mRL6L",
                    "body": "did I write this or did you? ",
                    "createdAt": "2024-08-13T18:53:21Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mVAE0",
                    "body": "You did. I would never have written that because I would have found the generalisation instead üòâ ",
                    "createdAt": "2024-08-14T11:44:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mVgBk",
                    "body": "Okay cool, it's nonsense, let's delete it. The generalisation given here doesn't work.",
                    "createdAt": "2024-08-14T13:18:03Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mRMOW",
                    "body": "we got this proof from a hand-written thing by TB, right? or was it typed out somewhere?",
                    "createdAt": "2024-08-13T18:54:14Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mU9X6",
                    "body": "Yes we did",
                    "createdAt": "2024-08-14T11:37:37Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mRNvV",
                    "body": "The statement here is different from the one on wikipedia, we should probably clarify this in a docstring. Namely, here we specialise to the power being an even natural, and only give the rhs of what wiki has. But this allows making the constant explicit (which is needed in our specific application). Perhaps we should also add a todo to give the general versions; I vaguely recall that going from even integer to real >= 1 is easy from what we have, but I might be misremembering. ",
                    "createdAt": "2024-08-13T18:58:42Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mapqJ",
                    "body": "I've added a todo in the module doc",
                    "createdAt": "2024-08-15T10:59:50Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mROGb",
                    "body": "I know this isn't enforced, but I feel pretty strongly that `gcongr` should always have an explicit pattern to make it more robust. At some point I'll make a stronger case for this on zulip, but in the mean time would you mind squeezing the `gcongr`s in this PR?",
                    "createdAt": "2024-08-13T19:00:06Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mU_1v",
                    "body": "I don't really fancy duplicating all the LHS or RHS every time I use `gcongr`, especially since all `gcongr`s here are maximal (in the sense that the goals it leaves are not of the form `r (f a) (f b)` where `r` is a concrete relation and `f` a concrete operation) so I will wait until you have convinced the rest of the community that this is worth doing",
                    "createdAt": "2024-08-14T11:43:38Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mVgQI",
                    "body": "Eh, we really should have `gcongr?`",
                    "createdAt": "2024-08-14T13:18:39Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ma3Fw",
                    "body": "```suggestion\r\ncan be obtained from this specific one by nesting of Lp norms.\r\n```",
                    "createdAt": "2024-08-15T12:09:41Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nHm6H",
                    "body": "This looks like another case of `simp` giving `ge_iff_le` for no good reason",
                    "createdAt": "2024-08-24T17:30:49Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nI-hI",
                    "body": "I am really surprised by this version: for me, one of the important points of Marcinkiewicz-Zygmund is that you can take random variables which are not identically distributed. Also, you are working with the specific case of a fintype, while the inequality in true for a general probability space. I'd rather deduce the particular version from the general case (which is not really harder, although I'd rather get the more precise Rosenthal or Burkholder inequalities), but if you want to focus on the discrete space you should emphasize that in the file-level docstring.",
                    "createdAt": "2024-08-25T18:15:48Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nI_jn",
                    "body": "Indeed this is a special case, but it's precisely the special case which arises as a very early dependence in our work. Would you mind if we stayed with this version for now, with a comment to generalise it in the way you describe?",
                    "createdAt": "2024-08-25T18:43:20Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nI_6I",
                    "body": "I absolutely don't mind, as long as it's explained clearly in the file-level docstring.",
                    "createdAt": "2024-08-25T18:53:28Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nKGgr",
                    "body": "Tried adding something",
                    "createdAt": "2024-08-26T05:50:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5n1F3X",
                    "body": "```suggestion\r\n  to be generalised! (and when it is, this file should move out of the `Analysis.Discrete`) folder.\r\n```",
                    "createdAt": "2024-09-03T12:25:48Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rYwqr",
                    "body": "This formulation is not good: of course it's bounded by the $$L^p$$ norm of `f`, up to a constant, just by subadditivity of the norm (and this argument gives a constant `n`). The point is really to get a better constant, similar to the prediction of the central limit theorem (i.e., `sqrt n` instead of `n`). So you need to be a little bit more specific here.\r\n\r\nIn particular, can you list the main theorems of the file, and explain their statements?",
                    "createdAt": "2024-10-15T17:42:01Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xOs_U",
                    "body": "I am not sure I understand this quibble. Isn't the point to get *any* constant? At least, [Wikipedia](https://en.wikipedia.org/wiki/Marcinkiewicz%E2%80%93Zygmund_inequality) only claims the result with a constant, without specifying anything about its size and relationship to the central limit theorem.",
                    "createdAt": "2024-12-30T17:05:53Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xOt0e",
                    "body": "I think the quibble here is exactly the opposite! The usual MZ inequality allows any constant, but in our specific application the shape of the constant is actually important. And so what LeanAPAP needs as \"the MZ inequality\" is a bit different from the usual formulation, since we require better control on the constants. And then the docstring should say a bit more about what the control needed is",
                    "createdAt": "2024-12-30T17:12:05Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xOu4r",
                    "body": "(imo, your new docstring satisfies this)",
                    "createdAt": "2024-12-30T17:20:31Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rYw18",
                    "body": "Can you add a section on notation, mentioning specifically the `^^` notation you use throughout the file?",
                    "createdAt": "2024-10-15T17:42:27Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rZIs7",
                    "body": "```suggestion\r\n    (hf : ‚àÄ i, ‚àë a ‚àà A ^^ n, f (a i) = 0) :\r\n```\r\nThe `in` notation is deprecated, can you use `‚àà` instead throughout?",
                    "createdAt": "2024-10-15T18:46:10Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rZKGG",
                    "body": "Can you spell out what the inequality says, in layman terms -- in particular since there is no explicit independence in the statement, while it's clearly the intuition to have in mind? Same thing for the other main theorems.",
                    "createdAt": "2024-10-15T18:50:47Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rZK8h",
                    "body": "Isn't it also true for `m = 0`? Same thing below.",
                    "createdAt": "2024-10-15T18:53:40Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rZM37",
                    "body": "No, it's not, when `n` is empty. Sorry for the noise.",
                    "createdAt": "2024-10-15T19:00:05Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rZLWc",
                    "body": "To help your reader follow the argument, it would help a lot to have a short proof sketch in the file-level docstring, mentioning where the various auxiliary lemmas are relevant.",
                    "createdAt": "2024-10-15T18:54:57Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rZL2m",
                    "body": "can you use `where` instead?",
                    "createdAt": "2024-10-15T18:56:33Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xO0mn",
                    "body": "@sgouezel, any idea for how to prove these integrability conditions swiftly? It's hopefully a simple application of H√∂lder",
                    "createdAt": "2024-12-30T18:07:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjI1MzE2MTYy",
              "login": "hrmacbeth"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU3MTA3NjEy",
              "login": "kex-y"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIapdwtw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958190058/job/36148048055"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa1Ml3w",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12963125997/job/36160349663"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoCVA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478131/job/35994075732"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoI-g",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908479027/job/35994077434"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoIdQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478998/job/35994077301"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWn_ww",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478138/job/35994075075"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoKIw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908479006/job/35994077731"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoBAQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478138/job/35994075393"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoAaA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478131/job/35994075240"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoIeQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908479006/job/35994077305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWoDxw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478131/job/35994076103"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYW8qFQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12908478138/job/35994413589"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWohlQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35994083733"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIYWp8xw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15443&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: The Marcinkiewicz-Zygmund inequality",
        "updatedAt": "2025-01-25T07:49:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15443",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAMzE3Vp",
              "createdAt": "2024-08-02T13:21:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HBzp4",
              "createdAt": "2024-08-02T13:22:46Z",
              "body": "### PR summary [bae38f92fe](https://github.com/leanprover-community/mathlib4/pull/15443/commits/bae38f92fe3d0a15a11e7c76c379dcca38ae7d80)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Probability.MarcinkiewiczZygmund` (new file)|1996|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ marcinkiewiczZygmundConst`\n`+ marcinkiewiczZygmundSymmConst`\n`+ marcinkiewicz_zygmund`\n`+ marcinkiewicz_zygmund_symmetric`\n`+ mem‚Ñíp_prod_range`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6FS1-H",
              "createdAt": "2024-08-13T18:42:37Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6RuwVYzwAAAAM6lCOr",
              "createdAt": "2024-08-13T18:43:03Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5OTU5MjI2",
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6FS8U6",
              "createdAt": "2024-08-13T18:53:20Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAM7uzV3",
              "createdAt": "2024-08-14T20:42:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAM8JAqU",
              "createdAt": "2024-08-15T09:39:59Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAAM8KJcZ",
              "createdAt": "2024-08-15T10:15:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAM8Lg05",
              "createdAt": "2024-08-15T11:02:43Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Fh2x8",
              "createdAt": "2024-08-15T12:09:41Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAAM8N5PT",
              "createdAt": "2024-08-15T12:23:34Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAM8PJXy",
              "createdAt": "2024-08-15T12:57:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAM8QhF2",
              "createdAt": "2024-08-15T13:30:38Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAAM8Ro6N",
              "createdAt": "2024-08-15T13:57:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6IpPY0",
              "createdAt": "2024-08-16T00:35:00Z",
              "body": "Does this work for Euclidean space, by expressing the norm-square of a vector as the sum of the squares of its components?  You do this for the real+complex decomposition of a complex number, but I don't immediately see anything special to two summands.  (Of course, the constants would be adjusted.)\r\n\r\nIf that works, then you can extend to a finite-dimensional inner product space by using `stdOrthonormalBasis`.",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6IwVPs",
              "createdAt": "2024-08-16T22:05:27Z",
              "body": "I asked the people around me (Bhavik, Thomas Bloom, my PhD advisor), and we all agree that your generalisation should work, but also that we have no use for it. I am therefore leaving a TODO.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Uj6GL",
              "createdAt": "2024-08-20T12:53:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c542pWX",
                "title": "feat: Croot-Sisask Almost Periodicity",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16000"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JFZ2l",
              "createdAt": "2024-08-20T22:54:01Z",
              "body": "I pushed a cheap generalization to inner product spaces (cheap because I kept the dimension restriction, so your original proof goes through without change).  OK?",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAM_lwvG",
              "createdAt": "2024-08-20T22:55:42Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JGekS",
              "createdAt": "2024-08-21T02:03:22Z",
              "body": "... at which point I figured I might as well do the general case.  Are you willing to keep it part of the PR?",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JLBFc",
              "createdAt": "2024-08-21T07:44:33Z",
              "body": "Ahah, that's great! I was not willing to generalise because I have so many other things to push from APAP, but if you have already done it I won't complain üòÖ Thanks a lot!",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAANB9VMe",
              "createdAt": "2024-08-23T10:41:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAANCgWgm",
              "createdAt": "2024-08-24T09:58:16Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAANCggtf",
              "createdAt": "2024-08-24T10:05:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Gon7Q",
              "createdAt": "2024-08-24T17:30:49Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JmKy1",
              "createdAt": "2024-08-24T18:23:11Z",
              "body": "I have decided to move the new file to a new folder `Analysis.Discrete` because I have more discrete analysis in the making and Marcinkiewicz-Zygmund (at least the version here) is usually classified as a discrete analysis result.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6GqvYI",
              "createdAt": "2024-08-25T18:15:48Z",
              "body": "",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAANDWYEW",
              "createdAt": "2024-08-26T14:55:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAANDZsjp",
              "createdAt": "2024-08-26T16:05:38Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAANDa1SC",
              "createdAt": "2024-08-26T16:31:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HvKCV",
              "createdAt": "2024-09-03T12:25:47Z",
              "body": "",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6RuwVYzwAAAANL66QT",
              "createdAt": "2024-09-06T08:38:57Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwODE4NDM0",
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAANeyo6V",
              "createdAt": "2024-10-01T15:28:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAANfdVMr",
              "createdAt": "2024-10-02T10:21:11Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAANfdumg",
              "createdAt": "2024-10-02T10:30:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NRXlj",
              "createdAt": "2024-10-15T17:42:01Z",
              "body": "",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAANqTBL6",
              "createdAt": "2024-10-16T05:06:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAANr2b9w",
              "createdAt": "2024-10-17T07:37:55Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAANr3BWv",
              "createdAt": "2024-10-17T07:49:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAN1fP0l",
              "createdAt": "2024-10-24T17:37:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAN44z0v",
              "createdAt": "2024-10-26T21:00:05Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAAN45URt",
              "createdAt": "2024-10-26T21:05:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAOFUuB7",
              "createdAt": "2024-11-05T15:16:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAOsjAtg",
              "createdAt": "2024-12-29T10:45:42Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAOsmtJU",
              "createdAt": "2024-12-29T22:03:03Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "eec30f6370d47369019e263addc1875192bdc253"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Y7e9h",
              "createdAt": "2024-12-30T17:13:25Z",
              "body": "Thank you Heather and S√©bastien for the reviews. I have decided that the current proof was too ugly and specific to be worth spending more time on, so I have started formalising the general random variable version.\r\n\r\nAlong the way, I've made another big change: Instead of generalising to inner product spaces by taking a basis (bootstrapping), I rewrote the entire proof to handle products of inner products rather than products. This makes the proof a bit more complicated in places, but overall seems to work nicer AND gives a constant that does not depend on the dimension of the space.\r\n\r\nThere are still a few sorries left (10 at the time of writing), but none of them should be particularly challenging.\r\n\r\nPS: The lemmas Heather wrote disappeared from this PR because I don't need them anymore and I have PRed them separately.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RuwVYzwAAAAOs6hNa",
              "createdAt": "2024-12-30T17:13:32Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAAOs6iDO",
              "createdAt": "2024-12-30T17:14:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAOs6jT-",
              "createdAt": "2024-12-30T17:15:06Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WjYlE",
              "createdAt": "2024-12-30T18:07:43Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fc56324f2eab2479ab8c5291d47f056b2a9528d7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "128d52c91616945d2fcab7cbad770aab174600f4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bae38f92fe3d0a15a11e7c76c379dcca38ae7d80"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RuwVYzwAAAAO9hasi",
              "createdAt": "2025-01-24T21:49:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RuwVYzwAAAAO9p4Bp",
              "createdAt": "2025-01-25T07:49:20Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6by-Dr",
              "createdAt": "2025-01-25T07:49:22Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#15832~~\n* ~~leanprover-community/mathlib4#21033~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        }
      }
    }
  }
}
