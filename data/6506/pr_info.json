{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 36,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "yangky11"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "style: fix Windows-style line-endings and modify the linter to detect them\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\nRelated to https://github.com/leanprover-community/mathlib4/pull/6498\r\n\r\nThis is the linter's output when running it on the old `Mathlib/Analysis/SpecificLimits/IsROrC.lean`:\r\n\r\n```\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=1,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L1: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=2,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L2: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=3,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L3: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=4,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L4: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=5,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L5: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=6,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L6: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=7,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L7: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=8,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L8: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=9,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L9: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=10,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L10: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=11,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L11: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=12,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L12: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=13,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L13: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=14,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L14: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=15,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L15: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=16,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L16: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=17,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L17: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=18,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L18: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=19,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L19: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=20,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L20: ERR_WIN: Windows line endings (\\r\\n) detected\r\n::error file=Mathlib/Analysis/SpecificLimits/IsROrC.lean,line=21,code=ERR_WIN::Mathlib/Analysis/SpecificLimits/IsROrC.lean#L21: ERR_WIN: Windows line endings (\\r\\n) detected\r\n```",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-10T23:45:45Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jxV90",
              "body": "Updated",
              "createdAt": "2023-08-10T20:34:43Z",
              "author": {
                "login": "yangky11"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jxYfe",
              "body": "bors d+\r\n\r\nLGTM, please wait for CI to go green before telling bors to merge it",
              "createdAt": "2023-08-10T20:42:20Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jxYf-",
              "body": ":v: yangky11 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-10T20:42:21Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jxe_R",
              "body": "bors r+",
              "createdAt": "2023-08-10T21:03:18Z",
              "author": {
                "login": "yangky11"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jxlST",
              "body": "Merge conflict.",
              "createdAt": "2023-08-10T21:26:41Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jx9JE",
              "body": "bors merge",
              "createdAt": "2023-08-10T23:15:02Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jyB_g",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5827086234/job/15802383305)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5827086234/job/15802383435)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5827086234/job/15802383164)",
              "createdAt": "2023-08-10T23:45:44Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "854159cd6602f09df8a7d38988e5cfe20b9a1804",
                "additions": 36,
                "deletions": 22,
                "committedDate": "2023-08-10T19:15:17Z",
                "author": {
                  "name": "Kaiyu Yang",
                  "email": "kaiyuy@caltech.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cfc1b45990a99460126513935c5469a2788219c7",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-08-10T20:33:36Z",
                "author": {
                  "name": "Kaiyu Yang",
                  "email": "kaiyuy@caltech.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5e49649736ed891cad3e6339ea71d56a8b6bbf8e",
                "additions": 11353,
                "deletions": 10961,
                "committedDate": "2023-08-10T21:29:39Z",
                "author": {
                  "name": "Kaiyu Yang",
                  "email": "kaiyuy@caltech.edu"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-10T19:19:20Z",
        "deletions": 22,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/SpecificLimits/IsROrC.lean",
              "additions": 21,
              "deletions": 21
            },
            {
              "path": "scripts/lint-style.py",
              "additions": 15,
              "deletions": 1
            }
          ]
        },
        "headRefName": "yangky11-fix_line_endings",
        "headRefOid": "5e49649736ed891cad3e6339ea71d56a8b6bbf8e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Xq4Or",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dvXCC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T20:41:59Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6506,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dvLiz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T20:06:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvLo6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T20:06:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvLwU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T20:06:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvO1K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "yangky11"
              },
              "submittedAt": "2023-08-10T20:16:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5dvXCC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-10T20:41:59Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7WQX",
                    "body": "```suggestion\r\n    with path.open(encoding=\"utf-8\", newline=\"\") as f:\r\n```\r\nseems like a simpler way to do this",
                    "createdAt": "2023-08-10T20:06:06Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7WU0",
                    "body": "with the change I suggest below:\r\n```suggestion\r\n        if \"\\r\\n\" in line:\r\n```",
                    "createdAt": "2023-08-10T20:06:24Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7WZ8",
                    "body": "with the above suggestion\r\n```suggestion\r\n```",
                    "createdAt": "2023-08-10T20:06:46Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7Ygy",
                    "body": "We still need to replace `\\r\\n` with `\\n` before performing other checks. Otherwise, this line in `import_only_check`will raise an `IndexError` when there is an empty line `\\r\\n` (since `len(imports) == 0`).\r\nhttps://github.com/leanprover-community/mathlib4/blob/ba80034619884735df10ebb449b4fc2a44b2c3e7/scripts/lint-style.py#L166\r\n\r\nAn alternative is to also add `\\r\\n` to this line: \r\nhttps://github.com/leanprover-community/mathlib4/blob/ba80034619884735df10ebb449b4fc2a44b2c3e7/scripts/lint-style.py#L95",
                    "createdAt": "2023-08-10T20:16:24Z",
                    "author": {
                      "login": "yangky11"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5M7eKO",
                    "body": "Ah, then I'm fine with keeping it.",
                    "createdAt": "2023-08-10T20:41:58Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU0MzE5MTM=",
              "login": "yangky11"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - style: fix Windows-style line-endings and modify the linter to detect them",
        "updatedAt": "2023-08-10T23:45:48Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6506",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "854159cd6602f09df8a7d38988e5cfe20b9a1804"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5uBAM-zwAAAAJXzzV3",
              "createdAt": "2023-08-10T19:25:39Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dvLiz",
              "createdAt": "2023-08-10T20:06:06Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dvLo6",
              "createdAt": "2023-08-10T20:06:24Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dvLwU",
              "createdAt": "2023-08-10T20:06:46Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cfc1b45990a99460126513935c5469a2788219c7"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jxV90",
              "createdAt": "2023-08-10T20:34:43Z",
              "body": "Updated",
              "author": {
                "login": "yangky11"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uBAM-zwAAAAJX2iiL",
              "createdAt": "2023-08-10T20:42:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jxYfe",
              "createdAt": "2023-08-10T20:42:20Z",
              "body": "bors d+\r\n\r\nLGTM, please wait for CI to go green before telling bors to merge it",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jxYf-",
              "createdAt": "2023-08-10T20:42:21Z",
              "body": ":v: yangky11 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uBAM-zwAAAAJX2jVK",
              "createdAt": "2023-08-10T20:42:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uBAM-zwAAAAJX242R",
              "createdAt": "2023-08-10T20:54:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jxe_R",
              "createdAt": "2023-08-10T21:03:18Z",
              "body": "bors r+",
              "author": {
                "login": "yangky11"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jxlST",
              "createdAt": "2023-08-10T21:26:41Z",
              "body": "Merge conflict.",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5e49649736ed891cad3e6339ea71d56a8b6bbf8e"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jx9JE",
              "createdAt": "2023-08-10T23:15:02Z",
              "body": "bors merge",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uBAM-zwAAAAJX5zsn",
              "createdAt": "2023-08-10T23:15:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jyB_g",
              "createdAt": "2023-08-10T23:45:44Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5827086234/job/15802383305)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5827086234/job/15802383435)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5827086234/job/15802383164)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uBAM-zwAAAAJX6Pb7",
              "createdAt": "2023-08-10T23:45:45Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uBAM-zwAAAAJX6Pfi",
              "createdAt": "2023-08-10T23:45:48Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N7DeL",
              "createdAt": "2023-08-11T08:17:08Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5XtDhT",
                "title": "[Merged by Bors] - chore: restore Type* in SpecificLimits/IsROrC.lean",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6515"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
