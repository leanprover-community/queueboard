{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 379,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #22290\r\n- [ ] depends on: #22559\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 9,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6e4V6h",
              "body": "### PR summary [cf6f640b76](https://github.com/leanprover-community/mathlib4/pull/22039/commits/cf6f640b7686d6a7d36c39420b0da9c90f68093a)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +4.76% | `Mathlib.Util.Qq` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic | 2598 | 2602 | +4 (+0.15%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Util.Qq`|1|\n| `Mathlib.Tactic`|4|\n| `Mathlib.Tactic.Simproc.FinsetInterval` (new file)|609|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ evalFinsetIccNat`\n`+ le_iff_eq_or_le_pred`\n`+ le_iff_eq_or_succ_le`\n`+ mkIntLitQ`\n`+ mkNatLitQ`\n`++ insert_Icc_add_one_left_eq_Icc`\n`++ insert_Icc_eq_Icc_add_one_right`\n`++ insert_Icc_eq_Icc_pred_left`\n`++ insert_Icc_eq_Icc_sub_one_left`\n`++ insert_Icc_eq_Icc_succ_right`\n`++ insert_Icc_pred_right_eq_Icc`\n`++ insert_Icc_sub_one_right_eq_Icc`\n`++ insert_Icc_succ_left_eq_Icc`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (1.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|1232|1|erw|\n\nCurrent commit [cf6f640b76](https://github.com/leanprover-community/mathlib4/commit/cf6f640b7686d6a7d36c39420b0da9c90f68093a)\nReference commit [0ae75631bd](https://github.com/leanprover-community/mathlib4/commit/0ae75631bd67df199977a4324ada5f561e25dd8a)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-18T12:28:33Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6e4XVy",
              "body": "@eric-wieser, I tried making this simproc as a prototypical example of a simproc (I doubt it is actually useful as a default simproc, would be nice if simprocs could be added to individual simp calls similarly to lemmas) but it times out any slightly non-trivial example. Could you explain what I did wrong?",
              "createdAt": "2025-02-18T12:31:01Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gEO-m",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#22290~~\n* leanprover-community/mathlib4#22559\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-02-26T15:47:20Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gPJjd",
              "body": "@eric-wieser, your suggested Qq-ification results in `unusedHavesSuffices` warnings which I can't seem to disable (`set_option linter.unusedHavesSuffices false in` doesn't work because `linter.unusedHavesSuffices` isn't an option)",
              "createdAt": "2025-02-27T15:35:03Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gZlU7",
              "body": "> @eric-wieser, your suggested Qq-ification results in `unusedHavesSuffices` warnings which I can't seem to disable (`set_option linter.unusedHavesSuffices false in` doesn't work because `linter.unusedHavesSuffices` isn't an option)\r\n\r\nYes, you want `nolint` because this is an environment linter.",
              "createdAt": "2025-02-28T16:24:11Z",
              "author": {
                "login": "eric-wieser"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a1a5dabd09690c9d9cb0b9305e4e65875883a860",
                "additions": 49,
                "deletions": 0,
                "committedDate": "2025-03-04T12:58:21Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "91df54180c7de114d490510c8efebefa8ba76333",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-03-04T12:58:21Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "333486aceeef25b94be922d887845b1d4be31416",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2025-03-04T12:58:21Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "68291710b526adebec81e8dbb46a013c4db212b2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2e6165d7d55c02833d2c03b1a1bbd3ea19688a5d",
                "additions": 11,
                "deletions": 10,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "16ed278e0c650587ac1dd30e1637f6dd9d3fa7a9",
                "additions": 140,
                "deletions": 52,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5a03b48243a3602fbbc997fb94ad3c1e53d015c0",
                "additions": 11,
                "deletions": 5,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "914221a4660e44f99f2aefae7914fcf7cd4ae2dc",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb7db446b06b7a7ec1c8668ee4c034846ca583c9",
                "additions": 60,
                "deletions": 4,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9a46b98ddfd24269fb6f1fbe42c7baff0415b4ec",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "de4824f51cbbdca5619d512f4640c4b5789e3f01",
                "additions": 6,
                "deletions": 4,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ea0ae8456393b23051b56d123001f247d5797e19",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b65ae200d6984790958e8e623c4ede33e38acd11",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dbad87f3ebd120d63e3079a9223b8cfa480c07a5",
                "additions": 18,
                "deletions": 42,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "79fa532d354b0fd81b0b637dabc2f4d964c99a2f",
                "additions": 1,
                "deletions": 8,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "23287df505c45340d34b68e8ca4d5d27812710d0",
                "additions": 76,
                "deletions": 41,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c89b8e48f94a63430a5d2ddd89b5fd99ffb7edb0",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-03-04T12:58:22Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d5a5c65756c9cf0a36aef92fda714c7c9f36c605",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2025-03-04T12:58:23Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "30f248c2270d0c151bc80d88694ba027ce687cb0",
                "additions": 0,
                "deletions": 7,
                "committedDate": "2025-03-04T12:58:23Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "46decd18d5430969584d1360ad8673f78ad024e8",
                "additions": 55,
                "deletions": 47,
                "committedDate": "2025-03-04T12:58:23Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3f2c40f1b8e434e19ccd7264e77841f62bb75527",
                "additions": 10,
                "deletions": 8,
                "committedDate": "2025-03-04T12:58:23Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ad13b51ad743a536248c67a3b0cc9099583f8e9e",
                "additions": 15,
                "deletions": 8,
                "committedDate": "2025-03-04T12:58:23Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e475e316c4dc58167bd42966f516e11c53af9108",
                "additions": 226,
                "deletions": 62,
                "committedDate": "2025-03-04T12:58:23Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRTVg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654239425/job/38169498454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRXjw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654240089/job/38169499535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRXdQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654240057/job/38169499509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRTEg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654239413/job/38169498386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRXTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654240065/job/38169499468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRRkQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654239413/job/38169498001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRRuA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654239425/job/38169498040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRY1Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654240065/job/38169499861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xRU2g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654239425/job/38169498842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4zaAwg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13654239413/job/38171738306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xSWsw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38169515699"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI4xTI_g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22039&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "cf6f640b7686d6a7d36c39420b0da9c90f68093a",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2025-03-04T14:36:49Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI462ZLg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657273662/job/38179543342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AWkA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092994/job/38175512208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AuJA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094800/job/38175518244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AuLQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094792/job/38175518253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AW-Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092998/job/38175512313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43Av2Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094789/job/38175518681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AUdA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092994/job/38175511668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43ATwg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092998/job/38175511490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AuDw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094789/job/38175518223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43AYsQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092994/job/38175512753"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43kPmA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092998/job/38176100248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43B6Hw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38175537695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI43C3pg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22039&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-18T12:27:34Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Interval/Finset/SuccPred.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Interval/Set/SuccPred.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Interval/Finset/SuccPred.lean",
              "additions": 12,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Interval/Set/SuccPred.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/SuccPred/Basic.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Simproc/FinsetInterval.lean",
              "additions": 300,
              "deletions": 0
            },
            {
              "path": "Mathlib/Util/Qq.lean",
              "additions": 13,
              "deletions": 0
            }
          ]
        },
        "headRefName": "finset_icc_nat_simproc",
        "headRefOid": "cf6f640b7686d6a7d36c39420b0da9c90f68093a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LlwvX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6c4bIK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2025-02-21T05:37:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eC56C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-28T18:56:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c2sOP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-02-21T01:10:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ca6Am",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FLDutchmann"
              },
              "submittedAt": "2025-02-18T17:02:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6caz7E",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Paul-Lez"
              },
              "submittedAt": "2025-02-18T17:03:52Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22039,
        "potentialMergeCommit": {
          "oid": "15d6eaf6c636471f3ed8ffb4fabca46b001e260c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6caWZt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FLDutchmann"
              },
              "submittedAt": "2025-02-18T16:09:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6caYnR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T16:12:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ca6Am",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FLDutchmann"
              },
              "submittedAt": "2025-02-18T17:02:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6caz7E",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Paul-Lez"
              },
              "submittedAt": "2025-02-18T17:03:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6cdpJH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-18T20:58:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6cdpfm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-18T20:59:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6cdpyL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-18T20:59:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6cdqJR",
              "body": "This generally looks close, please ping me or Mario for another round of review.",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-18T21:06:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ceBTE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T21:51:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ceB04",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T21:53:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ceCEu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T21:53:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ceH45",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T22:02:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ceKWw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T22:06:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ceS3h",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-18T22:28:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6cfIrZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-19T01:14:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6chgGD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-19T08:38:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6chhPb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-19T08:40:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6cqDz7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-20T00:16:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c2nFN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-02-21T01:03:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c2ndp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-02-21T01:04:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c2pXX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-02-21T01:07:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c2sOP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-02-21T01:10:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c4bIK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2025-02-21T05:37:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c54PT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-21T08:57:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c7lOG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-21T12:05:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c-UTO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-21T16:19:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c-UmM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-21T16:19:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6c-VA6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-21T16:20:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dMWOK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-24T14:20:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dO8co",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-24T17:39:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dO8lT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-24T17:39:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dPBpf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-24T17:49:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dZ6nS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-25T12:11:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dqShr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-26T16:25:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dqeka",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-26T16:44:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dqmG9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-26T16:55:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dqmd5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-26T16:56:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dqsSe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-26T17:03:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dqtLY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-26T17:04:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dq29n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-26T17:19:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eBoJp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-28T16:25:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eBo2R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-28T16:26:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eBo_T",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-28T16:26:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eCHXj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-28T17:19:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eC56C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-02-28T18:56:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6eXKkY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T10:35:14Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c501D0D",
                    "body": "> would be nice if simprocs could be added to individual simp calls similarly to lemmas\r\n\r\nI believe this makes it so the simproc isn't added to the global simpset and you can pass it as if it were a lemma.\r\n\r\n```suggestion\r\nsimproc_decl finsetIcc_nat (Icc _ _) := fun e ↦ do\r\n```",
                    "createdAt": "2025-02-18T16:09:28Z",
                    "author": {
                      "login": "FLDutchmann"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c501FLR",
                    "body": "💡 ",
                    "createdAt": "2025-02-18T16:12:49Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c501VTw",
                    "body": "```suggestion\r\nexample : Icc 1 0 = ∅ := by simp [finsetIcc_nat, -Icc_eq_empty_of_lt, -Icc_eq_empty_iff]\r\n```\r\nI think you'll want to add this for the proof the compile",
                    "createdAt": "2025-02-18T16:53:18Z",
                    "author": {
                      "login": "Paul-Lez"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c501Y_N",
                    "body": "I think I found the problem. The `eml` on recursive calls was of the form `q(Nat.succ _)`, which is not a natural literal. This caused `Expr.natLit!` to panic. We can solve this by only parsing `m` and `n` once at the start and keeping track of `m` on recursive calls.\r\n\r\n```suggestion\r\npartial def evalFinsetIccNat {em eml en enl : Q(ℕ)} (m n : ℕ) (hm : Q(IsNat $em $eml))\r\n    (hn : Q(IsNat $en $enl)) : MetaM ((s : Q(Finset ℕ)) × Q(.Icc $em $en = $s)) := do\r\n  if m ≤ n then\r\n    let hmn ← mkDecideProofQq q($em ≤ $en)\r\n    let hm' := q(isNat_natSucc $hm rfl)\r\n    let ⟨s, hs⟩ ← evalFinsetIccNat (m+1) n hm' hn\r\n    return ⟨q(insert $em $s), q(Icc_eq_insert_of_Icc_succ_eq $hmn $hs)⟩\r\n  else\r\n    let hnm ← mkDecideProofQq q($en < $em)\r\n    return ⟨q(∅), q(Finset.Icc_eq_empty_of_lt $hnm)⟩\r\n\r\nsimproc_decl finsetIcc_nat (Icc _ _) := fun e ↦ do\r\n  let ⟨1, ~q(Finset ℕ), ~q(Icc (OfNat.ofNat $em) (OfNat.ofNat $en))⟩ ← inferTypeQ e\r\n    | return .continue\r\n  let hm : Q(IsNat (OfNat.ofNat $em) $em) := q(⟨rfl⟩)\r\n  let hn : Q(IsNat (OfNat.ofNat $en) $en) := q(⟨rfl⟩)\r\n  unless em.isRawNatLit && en.isRawNatLit do\r\n    return .continue\r\n  let m := em.natLit!\r\n  let n := en.natLit!\r\n  let ⟨s, p⟩ ← evalFinsetIccNat m n hm hn\r\n  return .done { expr := s, proof? := p }\r\n\r\nexample : Icc 1 0 = ∅ := by simp [finsetIcc_nat, -Icc_eq_empty_of_lt, -Icc_eq_empty_iff]\r\nexample : Icc 1 1 = {1} := by simp [finsetIcc_nat, -Icc_self]\r\nexample : Icc 1 2 = {1, 2} := by simp [finsetIcc_nat]\r\n```",
                    "createdAt": "2025-02-18T17:02:46Z",
                    "author": {
                      "login": "FLDutchmann"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c501ZXr",
                    "body": "I think the reason for the timeout here is that `natLit!` panics.",
                    "createdAt": "2025-02-18T17:03:45Z",
                    "author": {
                      "login": "Paul-Lez"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503BuN",
                    "body": "```suggestion\r\nlemma Icc_succ_pred_eq_Ioo : Icc (a + 1) (b - 1) = Ioo a b := by\r\n```\r\nto distinguish from `Icc a b = Ioo (a - 1) (b + 1)` or similar.",
                    "createdAt": "2025-02-18T20:58:13Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503B8l",
                    "body": "```suggestion\r\nsimproc_decl Icc_ofNat_ofNat (Icc _ _) := fun e ↦ do\r\n```\r\nsince this is really about `ofNat` in an `Icc` term.",
                    "createdAt": "2025-02-18T20:59:00Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c503Qx4",
                    "body": "I'm not sure I am following. This does *not* compute `Icc (2 : Int) (4 : Int)` (I am letting @Paul-Lez write a similar simproc for that, which he'll call `Icc_int`)",
                    "createdAt": "2025-02-18T21:51:52Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503CHZ",
                    "body": "I think you could justify logging a warning here, if this happens then something has gone wrong.",
                    "createdAt": "2025-02-18T20:59:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503CVP",
                    "body": "No need to `decide`, you can just use `Eq.refl` to get the equality of raw nat literals",
                    "createdAt": "2025-02-18T21:00:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c503Tnx",
                    "body": "How? `let hmn : Q($em = $en) := q(rfl)` rightfully complains",
                    "createdAt": "2025-02-18T22:02:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5034mz",
                    "body": "This should work:\r\n```\r\nhave : $em =Q $en := \\<\\> \r\n```\r\nthen you don't even need to build the `rfl` proof and can remove it from your helper theorem.",
                    "createdAt": "2025-02-19T01:14:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c505a9H",
                    "body": "Okay, I see. You're claiming that decide-eq numerals are actually defeq",
                    "createdAt": "2025-02-19T08:38:59Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503Ch5",
                    "body": "Hot take: we should produce `Finset.cons` instead!",
                    "createdAt": "2025-02-18T21:01:15Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c503Ufr",
                    "body": "Maybe, but it doesn't have the nice notation associated with it. Beginners would certainly expect the nice notation to be produced",
                    "createdAt": "2025-02-18T22:06:20Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c505br1",
                    "body": "What about we instead have another simproc that turns any `insert` into `cons`? I guess that will be quadratic time in general 😬",
                    "createdAt": "2025-02-19T08:40:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51Habd",
                    "body": "Currently, we `simp`lify the other way around.",
                    "createdAt": "2025-02-21T05:37:18Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51K81t",
                    "body": "Yeah, I don't think that's great either",
                    "createdAt": "2025-02-21T16:20:00Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503C9b",
                    "body": "Perhaps worth a note that these are not in the default simp set because we don't want `Icc 0 (2 ^ 1024)` to explode under `simp`.",
                    "createdAt": "2025-02-18T21:02:44Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503DHW",
                    "body": "I have some code somewhere that Qq-ifies this to make things easier; I'll see if I can find it.",
                    "createdAt": "2025-02-18T21:03:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c503RF2",
                    "body": "That would be great. It feels sad that Qq support ends at `NormNum.Result`",
                    "createdAt": "2025-02-18T21:53:07Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503DOV",
                    "body": "Can you add some tests of reversed bounds?",
                    "createdAt": "2025-02-18T21:03:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c503RQK",
                    "body": "... as in `Icc a b` where `b < a`? Isn't the first one enough?",
                    "createdAt": "2025-02-18T21:53:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c503DuE",
                    "body": "Here you could assert the defeq `$en =Q $en' + 1` (where `en' := mkRawNatLit n`) and then this would be true by a lemma application rather than a tactic.",
                    "createdAt": "2025-02-18T21:05:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c503Z5X",
                    "body": "You'll have to be more precise here: The following fails\r\n```\r\n    let en' := mkRawNatLitQq n\r\n    haveI' : $en =Q $en' + 1 := ⟨⟩\r\n    let hn := q(isNat_natPred $hn rfl)\r\n    /-\r\n    reduceEval: failed to evaluate argument\r\n      n\r\n    -/\r\n```",
                    "createdAt": "2025-02-18T22:28:49Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c50-lnM",
                    "body": "Replacing the `let` with `have` should fix that.",
                    "createdAt": "2025-02-20T00:16:40Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51GULu",
                    "body": "Suggest naming `Mathlib.Tactic.Simproc.FinsetInterval`. Clearer, and more consistent with Lean.\r\n",
                    "createdAt": "2025-02-21T01:03:18Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51GUbt",
                    "body": "Let's not introduce the neologism \"synteq\" unnecesarily. :-)",
                    "createdAt": "2025-02-21T01:04:59Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51K8Y0",
                    "body": "I like it 😢 ",
                    "createdAt": "2025-02-21T16:19:08Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51GVDM",
                    "body": "Does it work (haven't tried!) to put `OfNat.ofNat` in the pattern, however?",
                    "createdAt": "2025-02-21T01:07:18Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51JTqt",
                    "body": "My guess is no, since all the `no_index` stuff is about excluding `ofNat` from patterns.",
                    "createdAt": "2025-02-21T12:05:58Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51K8ja",
                    "body": "Nope, doesn't work indeed",
                    "createdAt": "2025-02-21T16:19:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51GV7v",
                    "body": "Something to consider: turn these on by default, but with a hard-coded (or option controlled?) limit on the size of the produced Finset. (Perhaps around 37? :-)\r\n\r\nThere's a trade-off between convenience, and someone getting confused about why it suddenly stops working when they use it above the limit.",
                    "createdAt": "2025-02-21T01:10:21Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51ITTe",
                    "body": "I don't think it is ever convenient for these to be on by default? Happy to be outvoted here\n\n+ I'm not sure how to get the default limit working without introducing two simprocs, one on by default which only works for small sizes, one off by default which works for all sizes",
                    "createdAt": "2025-02-21T08:57:06Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51STRQ",
                    "body": "I think these are usually done with `hmn : Q(Nat.ble #em #en = true) := (q(Eq.refl true) :)` or similar.\r\n\r\nLooking for `ble` should find them.",
                    "createdAt": "2025-02-24T14:20:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51TxQS",
                    "body": "This is no longer used, but I'd be happy to merge it in another PR (if you also eliminated existing callers of `mkDecideProof`)",
                    "createdAt": "2025-02-24T17:39:40Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51T0f-",
                    "body": "Will do",
                    "createdAt": "2025-02-24T17:49:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51ZmFN",
                    "body": "See #22283",
                    "createdAt": "2025-02-25T12:11:02Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51TxVs",
                    "body": "The convention is a single trailing `Q`.",
                    "createdAt": "2025-02-24T17:39:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51iUTV",
                    "body": "Could you try to use `ofQ` here?",
                    "createdAt": "2025-02-26T16:25:33Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51ib1u",
                    "body": "I would love to but it hasn't landed, right?",
                    "createdAt": "2025-02-26T16:44:31Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51igKU",
                    "body": "Ah, it `Simproc.ofQ`",
                    "createdAt": "2025-02-26T16:55:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51igZP",
                    "body": "Sadly, this makes my simprocs not follow the line of sight rule anymore 😦 Any way I can make sure the main branch of my simproc stays unindented?",
                    "createdAt": "2025-02-26T16:56:20Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51ikCD",
                    "body": "Unfortunately not, but this is not really any different to the typical `| _ => throwUnsupportedSyntax` that appears elsewhere.",
                    "createdAt": "2025-02-26T17:04:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51ijec",
                    "body": "```suggestion\r\n      return .done <| .mk _ q(Iio_zero)\r\n```\r\netc",
                    "createdAt": "2025-02-26T17:03:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51iqgh",
                    "body": "There are two of them which I didn't manage to make Qq-safe. Feel free to push suggestions",
                    "createdAt": "2025-02-26T17:19:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51wpsF",
                    "body": "This pattern could perhaps become\r\n```lean\r\ndef natCasesQ (en : Q(ℕ)) {motive : Type}\r\n  (zero : $en =Q 0 → motive) (succ : ∀ (n : ℕ) (en : Q(ℕ)), $en =Q $n + 1 → motive) :\r\n    Option motive :=\r\n  match en.rawNatLit? with\r\n  | some 0 => zero ⟨⟩\r\n  | some (n + 1) => succ n (mkNatLitQ n) ⟨⟩\r\n  | none => none\r\n```\r\nbut perhaps best left to a later PR.",
                    "createdAt": "2025-02-28T16:25:33Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51wqFi",
                    "body": "These belong in a (standalone) test file.",
                    "createdAt": "2025-02-28T16:26:43Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51w7r1",
                    "body": "I still don't understand the point of making standalone test files for things that already function the way they're intended to work by the end of their file:\n1. Tests can already be made at the end of the file\n2. One gets instantaneous feedback when modifying the thing/fixing breakage\n3. The tests demonstrate to the wandering user how to use the thing\n4. The tests don't weigh in the oleans + those specific ones are instantaneous",
                    "createdAt": "2025-02-28T17:19:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51xZTP",
                    "body": "Can you make a Zulip thread making these points?",
                    "createdAt": "2025-02-28T18:56:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c519yFQ",
                    "body": "https://leanprover.zulipchat.com/#narrow/channel/116395-maths/topic/Inlining.20tests",
                    "createdAt": "2025-03-04T10:35:14Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51wqKz",
                    "body": "```suggestion\r\nsimproc_decl Icc_ofNat_ofNat (Icc _ _) := .ofQ fun u α e ↦ do\r\n```",
                    "createdAt": "2025-02-28T16:26:58Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjg3NTk3NDU=",
              "login": "FLDutchmann"
            },
            {
              "id": "MDQ6VXNlcjcyODkyMTk5",
              "login": "Paul-Lez"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI462ZLg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13657273662/job/38179543342"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AWkA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092994/job/38175512208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AuJA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094800/job/38175518244"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AuLQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094792/job/38175518253"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AW-Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092998/job/38175512313"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43Av2Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094789/job/38175518681"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AUdA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092994/job/38175511668"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43ATwg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092998/job/38175511490"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AuDw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656094789/job/38175518223"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43AYsQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092994/job/38175512753"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43kPmA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13656092998/job/38176100248"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43B6Hw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38175537695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI43C3pg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22039&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: simproc for computing `Finset.Ixx` of natural numbers",
        "updatedAt": "2025-03-04T15:35:26Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22039",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPOYvrX",
              "createdAt": "2025-02-18T12:27:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPOYwB5",
              "createdAt": "2025-02-18T12:28:02Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e4V6h",
              "createdAt": "2025-02-18T12:28:33Z",
              "body": "### PR summary [cf6f640b76](https://github.com/leanprover-community/mathlib4/pull/22039/commits/cf6f640b7686d6a7d36c39420b0da9c90f68093a)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +4.76% | `Mathlib.Util.Qq` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic | 2598 | 2602 | +4 (+0.15%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Util.Qq`|1|\n| `Mathlib.Tactic`|4|\n| `Mathlib.Tactic.Simproc.FinsetInterval` (new file)|609|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ evalFinsetIccNat`\n`+ le_iff_eq_or_le_pred`\n`+ le_iff_eq_or_succ_le`\n`+ mkIntLitQ`\n`+ mkNatLitQ`\n`++ insert_Icc_add_one_left_eq_Icc`\n`++ insert_Icc_eq_Icc_add_one_right`\n`++ insert_Icc_eq_Icc_pred_left`\n`++ insert_Icc_eq_Icc_sub_one_left`\n`++ insert_Icc_eq_Icc_succ_right`\n`++ insert_Icc_pred_right_eq_Icc`\n`++ insert_Icc_sub_one_right_eq_Icc`\n`++ insert_Icc_succ_left_eq_Icc`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (1.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|1232|1|erw|\n\nCurrent commit [cf6f640b76](https://github.com/leanprover-community/mathlib4/commit/cf6f640b7686d6a7d36c39420b0da9c90f68093a)\nReference commit [0ae75631bd](https://github.com/leanprover-community/mathlib4/commit/0ae75631bd67df199977a4324ada5f561e25dd8a)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e4XVy",
              "createdAt": "2025-02-18T12:31:01Z",
              "body": "@eric-wieser, I tried making this simproc as a prototypical example of a simproc (I doubt it is actually useful as a default simproc, would be nice if simprocs could be added to individual simp calls similarly to lemmas) but it times out any slightly non-trivial example. Could you explain what I did wrong?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6qfMwizwAAAAPOZ9FW",
              "createdAt": "2025-02-18T12:50:33Z",
              "assignee": {
                "id": "MDQ6VXNlcjcyODkyMTk5",
                "login": "Paul-Lez"
              }
            },
            {
              "__typename": "UnassignedEvent"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qfMwizwAAAAPOaBRM",
              "createdAt": "2025-02-18T12:51:45Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjcyODkyMTk5",
                "login": "Paul-Lez"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6caWZt",
              "createdAt": "2025-02-18T16:09:28Z",
              "body": "",
              "author": {
                "login": "FLDutchmann"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ca6Am",
              "createdAt": "2025-02-18T17:02:46Z",
              "body": "",
              "author": {
                "login": "FLDutchmann"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6caz7E",
              "createdAt": "2025-02-18T16:53:18Z",
              "body": "",
              "author": {
                "login": "Paul-Lez"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6qfMwizwAAAAPOr9af",
              "createdAt": "2025-02-18T17:35:29Z",
              "assignee": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnassignedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qfMwizwAAAAPOuzkR",
              "createdAt": "2025-02-18T18:22:31Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6cdpJH",
              "createdAt": "2025-02-18T20:58:13Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6cdpfm",
              "createdAt": "2025-02-18T20:59:00Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6cdpyL",
              "createdAt": "2025-02-18T20:59:38Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6cdqJR",
              "createdAt": "2025-02-18T21:00:26Z",
              "body": "This generally looks close, please ping me or Mario for another round of review.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qfMwizwAAAAPP9ySR",
              "createdAt": "2025-02-20T01:11:36Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6c2nFN",
              "createdAt": "2025-02-21T01:03:18Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6c2ndp",
              "createdAt": "2025-02-21T01:04:59Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6c2pXX",
              "createdAt": "2025-02-21T01:07:18Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6c2sOP",
              "createdAt": "2025-02-21T01:10:21Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dMWOK",
              "createdAt": "2025-02-24T14:20:18Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dO8co",
              "createdAt": "2025-02-24T17:39:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dO8lT",
              "createdAt": "2025-02-24T17:39:55Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c587JHx",
              "createdAt": "2025-02-25T12:09:57Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6MdcB0",
                "title": "[Merged by Bors] - feat: Qq version of `mkDecideProof`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22283"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPVI3vf",
              "createdAt": "2025-02-25T14:41:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qfMwizwAAAAPVJWFE",
              "createdAt": "2025-02-25T14:48:29Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qfMwizwAAAAPVJYm5",
              "createdAt": "2025-02-25T14:49:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPVJaAS",
              "createdAt": "2025-02-25T14:49:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPVNR4R",
              "createdAt": "2025-02-25T15:22:04Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qfMwizwAAAAPWbftd",
              "createdAt": "2025-02-26T15:47:18Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gEO-m",
              "createdAt": "2025-02-26T15:47:20Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#22290~~\n* leanprover-community/mathlib4#22559\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qfMwizwAAAAPWb8Oo",
              "createdAt": "2025-02-26T15:54:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qfMwizwAAAAPWb_9o",
              "createdAt": "2025-02-26T15:55:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qfMwizwAAAAPWcRjP",
              "createdAt": "2025-02-26T16:00:02Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dqShr",
              "createdAt": "2025-02-26T16:25:33Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dqsSe",
              "createdAt": "2025-02-26T17:03:20Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gPJjd",
              "createdAt": "2025-02-27T15:35:03Z",
              "body": "@eric-wieser, your suggested Qq-ification results in `unusedHavesSuffices` warnings which I can't seem to disable (`set_option linter.unusedHavesSuffices false in` doesn't work because `linter.unusedHavesSuffices` isn't an option)",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPYSQ32",
              "createdAt": "2025-02-28T14:49:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qfMwizwAAAAPYTMF6",
              "createdAt": "2025-02-28T15:02:20Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qfMwizwAAAAPYTPCj",
              "createdAt": "2025-02-28T15:03:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gZlU7",
              "createdAt": "2025-02-28T16:24:11Z",
              "body": "> @eric-wieser, your suggested Qq-ification results in `unusedHavesSuffices` warnings which I can't seem to disable (`set_option linter.unusedHavesSuffices false in` doesn't work because `linter.unusedHavesSuffices` isn't an option)\r\n\r\nYes, you want `nolint` because this is an environment linter.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eBoJp",
              "createdAt": "2025-02-28T16:25:33Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eBo2R",
              "createdAt": "2025-02-28T16:26:43Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eBo_T",
              "createdAt": "2025-02-28T16:26:58Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a1a5dabd09690c9d9cb0b9305e4e65875883a860"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "91df54180c7de114d490510c8efebefa8ba76333"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "333486aceeef25b94be922d887845b1d4be31416"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "68291710b526adebec81e8dbb46a013c4db212b2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2e6165d7d55c02833d2c03b1a1bbd3ea19688a5d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "16ed278e0c650587ac1dd30e1637f6dd9d3fa7a9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5a03b48243a3602fbbc997fb94ad3c1e53d015c0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "914221a4660e44f99f2aefae7914fcf7cd4ae2dc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cb7db446b06b7a7ec1c8668ee4c034846ca583c9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9a46b98ddfd24269fb6f1fbe42c7baff0415b4ec"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "de4824f51cbbdca5619d512f4640c4b5789e3f01"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ea0ae8456393b23051b56d123001f247d5797e19"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b65ae200d6984790958e8e623c4ede33e38acd11"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dbad87f3ebd120d63e3079a9223b8cfa480c07a5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "79fa532d354b0fd81b0b637dabc2f4d964c99a2f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "23287df505c45340d34b68e8ca4d5d27812710d0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c89b8e48f94a63430a5d2ddd89b5fd99ffb7edb0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d5a5c65756c9cf0a36aef92fda714c7c9f36c605"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "30f248c2270d0c151bc80d88694ba027ce687cb0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "46decd18d5430969584d1360ad8673f78ad024e8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3f2c40f1b8e434e19ccd7264e77841f62bb75527"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ad13b51ad743a536248c67a3b0cc9099583f8e9e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e475e316c4dc58167bd42966f516e11c53af9108"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qfMwizwAAAAPa7v1n",
              "createdAt": "2025-03-04T12:58:40Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPa7z38",
              "createdAt": "2025-03-04T12:59:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cf6f640b7686d6a7d36c39420b0da9c90f68093a"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qfMwizwAAAAPbTq8N",
              "createdAt": "2025-03-04T15:35:25Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            }
          ]
        }
      }
    }
  }
}
