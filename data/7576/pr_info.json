{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 187,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "grunweg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define sigma-compact subsets of a topological space and show their basic properties.\r\n\r\n* compact sets are sigma-compact\r\n* countable unions of (sigma-)compact sets are sigma-compact\r\n* closed subsets of sigma-compact sets are sigma-compact.\r\n\r\nRelate them to sigma-compact space: a set is sigma-compact iff it is a sigma-compact space (w.r.t. the subspace topology).\r\n\r\nIn a later PR, we'll show that sigma-compact measure zero sets are nowhere dense.\r\n\r\n- [x] depends on: #7528\r\n-----------\r\n\r\nSimilar to compact sets and spaces, we define sigma-compact subsets first, and relate sigma-compact spaces to them later.\r\n",
        "changedFiles": 9,
        "closed": true,
        "closedAt": "2023-10-16T23:41:53Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ocPUV",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#7528~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-10-09T01:23:36Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ohn93",
              "body": "@eric-wieser CI passes, so making the lemma you mentioned simp works. I presume Homeomorph.isCompact_image should also be a simp lemma then, and have PRed this as #7594.\r\nI've also added the analogous version for preimages.\r\n\r\n(I've also made the renames locally, but not checked all of mathlib yet; happy to drop those changes if need be. Update: CI passes, so presumably all is fine.)",
              "createdAt": "2023-10-09T19:53:56Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oviPQ",
              "body": "I have addressed all your comments. (Let me know if you think the last golfs are hurting readability.)",
              "createdAt": "2023-10-11T09:50:41Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5oy4H2",
              "body": "Updated again. Thanks for the fast turnaround!\r\n(~~edit: github is still processing this, for some reason.~~after merging master and pushing again, it shows up now)",
              "createdAt": "2023-10-11T17:35:08Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5o0a6y",
              "body": "(Cancelling the build as this will need a rebase due to #7628 anyway.)",
              "createdAt": "2023-10-11T21:28:24Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pMXq9",
              "body": "I have addressed all the comments, and also included some last touch-ups of related doc comments (in the last commit).",
              "createdAt": "2023-10-16T16:28:22Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pN8QH",
              "body": ":v: grunweg can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-10-16T20:56:37Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pOVem",
              "body": "Thank you for the patient review.",
              "createdAt": "2023-10-16T22:22:36Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pOVfy",
              "body": "bors r+",
              "createdAt": "2023-10-16T22:22:41Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pOlsQ",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6540054159/job/17759265520)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6540054159/job/17759265634)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6540054159/job/17759265413)",
              "createdAt": "2023-10-16T23:41:52Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ff9b060c06739ac8c43db4e5e969f633656e9ad7",
                "additions": 163,
                "deletions": 1,
                "committedDate": "2023-10-09T20:07:35Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e5720ce5bf7581b62f2c93af2c68026fb25af211",
                "additions": 15,
                "deletions": 22,
                "committedDate": "2023-10-09T20:07:43Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "119d25f473e61fec337e5da331d444081f7c054a",
                "additions": 7,
                "deletions": 1,
                "committedDate": "2023-10-09T20:07:43Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cf9987b869ec447cbd7bdca4c22a1e4dc7d6abc0",
                "additions": 10,
                "deletions": 10,
                "committedDate": "2023-10-09T20:07:43Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c52d65b7ab4ed433703b723f271a567ce1790393",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-10-09T20:07:43Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8080f7ecd5a5dbc98965ce4d34711af548ed6ba1",
                "additions": 21,
                "deletions": 27,
                "committedDate": "2023-10-10T21:39:10Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "695e86ed28ced9ba0bd78c1bb3b6c0b93a600bc5",
                "additions": 0,
                "deletions": 11,
                "committedDate": "2023-10-10T21:44:53Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b1236ad2a3495b933bf72d5bb80b0ff8c9f6b648",
                "additions": 18,
                "deletions": 18,
                "committedDate": "2023-10-11T09:53:08Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5c967ab39c8f32c630c6c6e4e212fd90f0c48cdc",
                "additions": 25,
                "deletions": 13,
                "committedDate": "2023-10-11T09:53:08Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c4e56eea0ed52af75e2c435fdf2aeeba8dc318f7",
                "additions": 7,
                "deletions": 13,
                "committedDate": "2023-10-11T09:53:08Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7140e0d31067f20f53a1bb46270795d7930ec911",
                "additions": 1093,
                "deletions": 1007,
                "committedDate": "2023-10-11T16:03:24Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "43ff7830e341dea4c08d29b9cbcdb2e97e18c59d",
                "additions": 9,
                "deletions": 6,
                "committedDate": "2023-10-11T16:15:33Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb357dde86f59cb7bbf9b8fb20d9fbcea7d3adb5",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-11T16:17:48Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6217a35113b68d4ef41bf6881945e3a841ecc3b4",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-10-11T16:19:00Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d1daf243afa3a3e1ec7fa59f7f92c044edf7fab3",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-10-11T16:24:47Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9399e0287b8c190f8d5cb32b5152f6276c1110ea",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2023-10-11T16:26:42Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c584f30be9ce8b9f04b9b9632a91debe894a8b25",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-11T16:27:51Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ad59ae35f1749c7dca117abc4b6a867c8311928b",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-11T16:29:21Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c5ceb4464886c0b6ba427e21c6e55259b533435e",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-10-11T16:32:44Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "44f823103eb8cf1803bed160cba59c1710fe05b9",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-10-11T16:40:02Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "620c7c1b10db2055912aa9aae5d2a427e51ce992",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-10-11T16:58:11Z",
                "author": {
                  "name": "grunweg",
                  "email": "grunweg@posteo.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "50ff5a9649a2676ab9246c8ffde98cd49f57e905",
                "additions": 958,
                "deletions": 334,
                "committedDate": "2023-10-11T17:26:15Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "69dbe5ded10c2418d4a7335cfc32b5425d0b1d93",
                "additions": 21,
                "deletions": 21,
                "committedDate": "2023-10-11T17:33:41Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "07aafd3c1709d570a96877fc6bd4c3bd48a11c29",
                "additions": 17,
                "deletions": 14,
                "committedDate": "2023-10-11T17:33:41Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9eb66c871778df47e98a8ab944cf9106096e7c24",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-10-11T19:02:53Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "78bb656532cef48456feab912a2fbce6e396691e",
                "additions": 2767,
                "deletions": 931,
                "committedDate": "2023-10-11T19:06:18Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e9a0c4b79f52b1f805117737006f6bcb90b2f093",
                "additions": 191,
                "deletions": 190,
                "committedDate": "2023-10-11T20:51:09Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0ce65c1e6b0a169bcd3ddafa98a8c184b7d5b7c7",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-10-11T21:12:02Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "becea354484014100cce7d36958ac5e99538affd",
                "additions": 5,
                "deletions": 6,
                "committedDate": "2023-10-11T21:15:41Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "df0528e2728d03d6fd1d06c66c3b39774745fb8a",
                "additions": 2323,
                "deletions": 2233,
                "committedDate": "2023-10-11T21:54:57Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cfe5f699371415471b1b05cc3b42e5f863c20c65",
                "additions": 787,
                "deletions": 308,
                "committedDate": "2023-10-12T03:55:15Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "507556c4b9312f1579f5f57a3e5815f8eeb2764d",
                "additions": 39,
                "deletions": 39,
                "committedDate": "2023-10-16T16:26:13Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "da4a625f8251029e0d0217b385da34dc912920fe",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2023-10-16T16:26:28Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "986513a19addb17cfab0ccea8fec707b13fc92c0",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-16T22:19:56Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-08T23:06:22Z",
        "deletions": 35,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Metric.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/WeakDual.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Compactness/Compact.lean",
              "additions": 17,
              "deletions": 18
            },
            {
              "path": "Mathlib/Topology/Compactness/LocallyCompact.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Compactness/SigmaCompact.lean",
              "additions": 148,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/Homeomorph.lean",
              "additions": 13,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Closeds.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/NoetherianSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/QuasiSeparated.lean",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "MR-sigma-compact",
        "headRefOid": "986513a19addb17cfab0ccea8fec707b13fc92c0",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5cNU2I",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5jMddI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T11:06:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMQvF",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-16T20:56:35Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7576,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5jKMQz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-08T23:07:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKM0T",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T23:22:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKNF0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T23:30:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKNKm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T23:32:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jLO2O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-09T07:49:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jLS2W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-09T07:59:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jLWpl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T08:10:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMKEd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T10:13:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMKeI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T10:14:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMKtt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T10:15:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMWjt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-09T10:47:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMYdI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-09T10:52:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMbUs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-09T11:00:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMcc7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T11:03:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMdYR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T11:05:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jMddI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-09T11:06:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jddX_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-10T18:58:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jdfOv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-10T19:02:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jdfpj",
              "body": "Thanks a lot, this looks very good already!",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-10T19:43:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jezAz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-10T21:07:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jfC3Q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-10T21:32:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jfQkw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-10T21:52:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jk_gR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-11T09:50:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jlCQm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-11T09:56:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5joXj5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-11T15:44:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jp3D1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-11T16:54:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jqLFn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-11T17:13:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jqOEV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-11T17:20:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kC2rb",
              "body": "Sorry for the wait! I think this is mostly good now, at most one more round.",
              "state": "APPROVED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-15T21:16:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kKdmY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-16T16:19:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kKd54",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-16T16:20:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kKeFQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-16T16:20:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kKhuv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2023-10-16T16:26:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMQvF",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-16T20:56:35Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdDHe",
                    "body": "Would replacing this calc block by\r\n```\r\n  rw [← hcov]\r\n  exact subset_iUnion K n\r\n```\r\nbe desirable? (My sense of aesthetics is unsure.)",
                    "createdAt": "2023-10-08T23:07:39Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdEAg",
                    "body": "I think it's inconsistent to use a calc block for this one but `by rw [← hcov]; exact image_iUnion.symm` for the other one.",
                    "createdAt": "2023-10-08T23:32:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdsPE",
                    "body": "Fair point, agreed.",
                    "createdAt": "2023-10-09T07:49:37Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdDmr",
                    "body": "This looks like a good `simp` lemma to me, unless the linter knows better.\r\n\r\nIs this (or the `preimage` version) true under the weaker assumptions `(f : α → β) (hf : Embedding f)`?",
                    "createdAt": "2023-10-08T23:22:47Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qdutc",
                    "body": "Indeed it is --- this is shown in `Embedding.isSigmaCompact_iff_isSigmaCompact_image` in `SubsetProperties.lean`.\r\n\r\nI have pushed a change tagging this simp; let's see what CI says.",
                    "createdAt": "2023-10-09T07:59:58Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qdw_q",
                    "body": "Can you use that lemma to prove this one?",
                    "createdAt": "2023-10-09T08:10:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdD6k",
                    "body": "This is a good place for dot notation:\r\n```suggestion\r\n/-- Compact sets are σ-compact. -/\r\nlemma IsCompact.isSigmaCompact {s : Set α} (hs : IsCompact s) : IsSigmaCompact s :=\r\n  ⟨fun _ => s, fun _ => hs, iUnion_const _⟩\r\n```",
                    "createdAt": "2023-10-08T23:30:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QeQ7J",
                    "body": "This looks better in reverse to me:\r\n```suggestion\r\nlemma Embedding.isSigmaCompact_image_iff {f : α → β} {s : Set α}\r\n    (hf : Embedding f) : IsSigmaCompact (f '' s) ↔ IsSigmaCompact s := by\r\n```\r\n(obviously you'll have to tweak the proof too)",
                    "createdAt": "2023-10-09T10:13:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QeYvs",
                    "body": "I chose the name to mirror `Embedding.isCompact_iff_isCompact_image`. Should I change that one as well?",
                    "createdAt": "2023-10-09T10:47:24Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QecWC",
                    "body": "That's a good reason for the current name; certainly I agree they should match.\r\n\r\nLet's see if @urkud or @sgouezel agree with renaming (and flipping) both.",
                    "createdAt": "2023-10-09T11:03:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qec99",
                    "body": "These names come from https://github.com/leanprover-community/mathlib/pull/367, so are very old and possibly before conventions were well established!",
                    "createdAt": "2023-10-09T11:06:04Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qp-rs",
                    "body": "This should just be called `Embedding.is[Sigma]Compact_iff`, by analogy with [Inducing.isCompact_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/SubsetProperties.html#Inducing.isCompact_iff). The rationale is the following: most of the embeddings we consider go from a space we want to understand to a space we understand well, so this should just be thought of as a criterion for compacity on the domain, which is why we don't emphasize the image part.",
                    "createdAt": "2023-10-10T18:58:05Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QrFiL",
                    "body": "Makes sense to me, renamed. (Indeed, counting all current occurrences in mathlib, I see one where we rewrite \"forward\" and five where we rewrite backwards.)",
                    "createdAt": "2023-10-10T21:52:23Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QeRKw",
                    "body": "I think a shorter name would be clearer here, perhaps with a docstring to help:\r\n```suggestion\r\n/-- Sets of subtype are sigma compact if the image under a coercion is. -/\r\nlemma isSigmaCompact_subtype {p : α → Prop} {s : Set { a // p a }} :\r\n```",
                    "createdAt": "2023-10-09T10:14:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QeZ6M",
                    "body": "I like the change. Should I also make the analogous change to `isCompact_iff_isCompact_in_subtype`?",
                    "createdAt": "2023-10-09T10:52:47Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qec6_",
                    "body": "Let's throw this into the same decision as [the other thread](https://github.com/leanprover-community/mathlib4/pull/7576#discussion_r1350142956), and decide both the same way.",
                    "createdAt": "2023-10-09T11:05:52Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qp_wW",
                    "body": "I don't have a strong opinion on this one, maybe `Subtype.isSigmaCompact_iff`? The name `isSigmaCompact_subtype` sounds a bit weird to me, it sounds like \"the subtype is sigma compact\" (which makes no sense ofc).",
                    "createdAt": "2023-10-10T19:02:44Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QvZKh",
                    "body": "I've renamed to Subtype.isSigmaCompact_iff for now.",
                    "createdAt": "2023-10-11T09:56:35Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QeRUC",
                    "body": "Slightly less verbose (but untested):\r\n```suggestion\r\n    IsSigmaCompact s ↔ IsSigmaCompact ((↑) '' s : Set α) :=\r\n```",
                    "createdAt": "2023-10-09T10:15:19Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QebqH",
                    "body": "Works locally!",
                    "createdAt": "2023-10-09T11:00:19Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qp_9w",
                    "body": "What's wrong with using [Set.image_preimage_eq_of_subset](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Set/Image.html#Set.image_preimage_eq_of_subset)?",
                    "createdAt": "2023-10-10T19:03:28Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qq6gB",
                    "body": "I didn't find it :-) Thanks for pointing it out!",
                    "createdAt": "2023-10-10T21:07:01Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QqBvP",
                    "body": "For consistency with `CompactSpace`, `ConnectedSpace` and so on, could you replace the definition to be literally `IsSigmaCompact (univ : Set α)` and then prove that it's equivalent to the current definition? ",
                    "createdAt": "2023-10-10T19:08:28Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QqIBt",
                    "body": "Does [Function.Surjective.iUnion_comp](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Set/Lattice.html#Function.Surjective.iUnion_comp) help?",
                    "createdAt": "2023-10-10T19:24:27Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QrAyl",
                    "body": "Indeed, it works like a charm. I'm constantly amazed how many lemmas *are* already present in mathlib.",
                    "createdAt": "2023-10-10T21:32:35Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QqJCL",
                    "body": "I think this should be named either `isSigmaCompact_sUnion_of_isCompact` (I don't think it's important to emphasize on the countability in the same), or `Set.Countable.isSigmaCompact_sUnion_of_isCompact` if you want to use dot notation.",
                    "createdAt": "2023-10-10T19:27:35Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QqJ_P",
                    "body": "Like above, I would name that either `isSigmaCompact_sUnion` or `Set.Countable.isSigmaCompact_sUnion`. I think it's fine to make less things explicit here than in the previous version because it's strictly stronger so it should be the \"default\" one.",
                    "createdAt": "2023-10-10T19:30:58Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QqKsy",
                    "body": "Could you also add an `iUnion` version which would take `[Countable \\iota]` as a typeclass parameter, as well as a `biUnion` version analogous to [Set.Finite.isCompact_biUnion](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/SubsetProperties.html#Set.Finite.isCompact_biUnion)? You could also try to prove the indexed union version first and then deduce the `sUnion` version, imo it often gives cleaner proofs.",
                    "createdAt": "2023-10-10T19:33:35Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QvXZF",
                    "body": "Added both. Indeed, proving the iUnion version first was cleaner.\r\n\r\nI've cargo-culted the description for \"biUnion\" in the docstring. (Is there a central place which should have this explanation?)\r\n",
                    "createdAt": "2023-10-11T09:50:29Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QxpcJ",
                    "body": "```suggestion\r\n  simp only [noetherianSpace_iff_isCompact, ← embedding_subtype_val.isCompact_iff,\r\n```",
                    "createdAt": "2023-10-11T15:15:04Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QxqxS",
                    "body": "```suggestion\r\n`CompactSpace`, `PreirreducibleSpace`, `IrreducibleSpace`, `SigmaCompactSpace`.\r\n```\r\nand remove the mention below. I think it keeps consistency with the rest of the docstring.",
                    "createdAt": "2023-10-11T15:17:30Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QxsvF",
                    "body": "I should have mentioned that yesterday, but I think that we should actually keep the current order and reverse the order of `Inducing.isCompact_iff`. But if that's too annoying you can keep it like that and I'll fix it in a later PR (consistency between both versions is more important).",
                    "createdAt": "2023-10-11T15:20:08Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QygBl",
                    "body": "Oh well... I have flipped this back, and also changed `Inducing.isCompact_iff`.\r\nIf you realize further inconsistencies, be invited to PR that yourself :-)",
                    "createdAt": "2023-10-11T17:13:23Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qx5lp",
                    "body": "This looks a bit weird. There's no definitive rule here, but I think it's nice to simply do:\r\n```suggestion\r\n  have := calc\r\n          ⋃ i, s i\r\n```\r\nThe type of the `have` will be inferred from the content of the calc block.",
                    "createdAt": "2023-10-11T15:36:12Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QyWcF",
                    "body": "I just learned you can do this! Indeed, looks better to me also.",
                    "createdAt": "2023-10-11T16:54:10Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qx8K3",
                    "body": "This still looks a bit too complicated. If you add the following (either replacing `sUnion` version you already have, or using the `iUnion` version to prove the `sUnion` one):\r\n```lean\r\nlemma isSigmaCompact_iUnion_of_isCompact {ι : Type*} [hι : Countable ι] (s : ι → Set α)\r\n    (hcomp : ∀ i, IsCompact (s i)) : IsSigmaCompact (⋃ i, s i) := by\r\n  rcases isEmpty_or_nonempty ι\r\n  · simp only [iUnion_of_empty, isSigmaCompact_empty]\r\n  · -- If ι is non-empty, choose a surjection f : ℕ → ι, this yields a map ℕ → Set X.\r\n    obtain ⟨f, hf⟩ := countable_iff_exists_surjective.mp hι\r\n    exact ⟨s ∘ f, fun n ↦ hcomp (f n), Function.Surjective.iUnion_comp hf _⟩\r\n```\r\nYou can do:\r\n```suggestion\r\n      _ = ⋃ x, K.uncurry x := by rw [← iUnion_prod']\r\n  rw [this]\r\n  exact isSigmaCompact_iUnion_of_isCompact K.uncurry fun x ↦ (hcomp x.1 x.2)\r\n```\r\nBut maybe I'm nit-picking too much...",
                    "createdAt": "2023-10-11T15:39:13Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QyirF",
                    "body": "If you prefer this, I don't mind. Added.",
                    "createdAt": "2023-10-11T17:20:59Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qx8nC",
                    "body": "```suggestion\r\n  exact fun n ↦ (hcompact n).image_of_continuousOn (hf.mono (hcov.symm ▸ subset_iUnion K n))\r\n```",
                    "createdAt": "2023-10-11T15:39:50Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qx-QP",
                    "body": "Indeed I think it's a bit weird to insist on that here. This is explained in https://leanprover-community.github.io/contribute/naming.html",
                    "createdAt": "2023-10-11T15:44:02Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCojW",
                    "body": "```suggestion\r\nimport Mathlib.Data.Set.Accumulate\r\nimport Mathlib.Data.Set.Basic\r\n```",
                    "createdAt": "2023-10-14T21:04:33Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RHjB0",
                    "body": "Actually, the new import was unnecessary; I've removed it.",
                    "createdAt": "2023-10-16T16:26:57Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCsKH",
                    "body": "Super nitpick: you can golf this lemma by deducing it from `IsCompact.isSigmaCompact` :grin: ",
                    "createdAt": "2023-10-14T22:04:40Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RHg63",
                    "body": "Indeed, done. (The previous proof was essentially that argument inlined; re-using Compact.empty is both shorter and more mathlib style.)",
                    "createdAt": "2023-10-16T16:19:36Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCsTc",
                    "body": "```suggestion\r\n  -- Choose a decomposition s_i = ⋃ K_i,j for each i.",
                    "createdAt": "2023-10-14T22:06:55Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDyMs",
                    "body": "It should be easy to deduce this from the indexed version, could you do so?",
                    "createdAt": "2023-10-15T20:39:30Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RHhCV",
                    "body": "Done; this is nicer indeed.",
                    "createdAt": "2023-10-16T16:20:03Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDyPj",
                    "body": "```suggestion\r\n/-- If `s` is σ-compact and `f` is continuous on `s`, `f(s)` is σ-compact.-/",
                    "createdAt": "2023-10-15T20:40:46Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDzLd",
                    "body": "```suggestion\r\n/-- If `f : X → Y` is `Inducing`, the image `f '' s` of a set `s` is σ-compact\r\n  if and only `s`` is σ-compact. -/\r\nlemma Inducing.isSigmaCompact_iff {f : α → β} {s : Set α}\r\n    (hf : Inducing f) : IsSigmaCompact s ↔ IsSigmaCompact (f '' s) := by\r\n  constructor\r\n  · exact fun h ↦ h.image hf.continuous\r\n  · rintro ⟨L, hcomp, hcov⟩\r\n    -- Suppose f(s) is σ-compact; we want to show s is σ-compact.\r\n    -- Write f(s) as a union of compact sets L n, so s = ⋃ K n with K n := f⁻¹(L n) ∩ s.\r\n    -- Since f is inducing, each K n is compact iff L n is.\r\n    refine ⟨fun n ↦ f ⁻¹' (L n) ∩ s, ?_, ?_⟩\r\n    · intro n\r\n      have : f '' (f ⁻¹' (L n) ∩ s) = L n := by\r\n        rw [image_preimage_inter, inter_eq_left.mpr]\r\n        exact (subset_iUnion _ n).trans hcov.le\r\n      exact hf.isCompact_iff.mpr (this.symm ▸ (hcomp n))\r\n    · calc ⋃ n, f ⁻¹' L n ∩ s\r\n        _ = f ⁻¹' (⋃ n, L n) ∩ s  := by rw [preimage_iUnion, iUnion_inter]\r\n        _ = f ⁻¹' (f '' s) ∩ s := by rw [hcov]\r\n        _ = s := inter_eq_right.mpr (subset_preimage_image _ _)\r\n```\r\nActually `Inducing` is enough :wink: ",
                    "createdAt": "2023-10-15T21:10:18Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDzWK",
                    "body": "You can keep the `Embedding` version too of course.",
                    "createdAt": "2023-10-15T21:15:34Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RHhHA",
                    "body": "Nice find! I've changed the proof as you indicated (and kept the `Embedding` version, following the example for compact sets).",
                    "createdAt": "2023-10-16T16:20:18Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDzN_",
                    "body": "```suggestion\r\n  rw [← isSigmaCompact_univ_iff, IsSigmaCompact]\r\n```",
                    "createdAt": "2023-10-15T21:11:33Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIwgL",
                    "body": "```suggestion\r\nlemma isSigmaCompact_empty : IsSigmaCompact (∅ : Set α) :=\r\n  isCompact_empty.isSigmaCompact\r\n```",
                    "createdAt": "2023-10-16T20:50:48Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: sigma-compact sets",
        "updatedAt": "2023-10-16T23:41:58Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7576",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ2866E",
              "createdAt": "2023-10-08T23:06:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ2866F",
              "createdAt": "2023-10-08T23:06:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jKMQz",
              "createdAt": "2023-10-08T23:07:39Z",
              "body": "",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ28_tR",
              "createdAt": "2023-10-08T23:18:41Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jKM0T",
              "createdAt": "2023-10-08T23:22:47Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jKNF0",
              "createdAt": "2023-10-08T23:30:22Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ2-F7w",
              "createdAt": "2023-10-09T01:23:34Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ocPUV",
              "createdAt": "2023-10-09T01:23:36Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#7528~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ3FVfB",
              "createdAt": "2023-10-09T07:55:12Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ3FzAr",
              "createdAt": "2023-10-09T08:07:41Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jMKEd",
              "createdAt": "2023-10-09T10:13:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jMKeI",
              "createdAt": "2023-10-09T10:14:41Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jMKtt",
              "createdAt": "2023-10-09T10:15:19Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OyaEf",
              "createdAt": "2023-10-09T17:02:06Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cSADP",
                "title": "chore(Topology/SubsetProperties): rename types",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7590"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OyaSY",
              "createdAt": "2023-10-09T17:05:43Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cSBvl",
                "title": "[Merged by Bors] - chore(Topology/{Compactness/Compact}, Irreducible}): rename type variables",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7591"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Oyj76",
              "createdAt": "2023-10-09T19:52:09Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cSxkv",
                "title": "[Merged by Bors] - chore: mark Homeomorph.isCompact_{pre}image simp",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7594"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ohn93",
              "createdAt": "2023-10-09T19:53:56Z",
              "body": "@eric-wieser CI passes, so making the lemma you mentioned simp works. I presume Homeomorph.isCompact_image should also be a simp lemma then, and have PRed this as #7594.\r\nI've also added the analogous version for preimages.\r\n\r\n(I've also made the renames locally, but not checked all of mathlib yet; happy to drop those changes if need be. Update: CI passes, so presumably all is fine.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ3g89e",
              "createdAt": "2023-10-09T20:05:48Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ff9b060c06739ac8c43db4e5e969f633656e9ad7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e5720ce5bf7581b62f2c93af2c68026fb25af211"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "119d25f473e61fec337e5da331d444081f7c054a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cf9987b869ec447cbd7bdca4c22a1e4dc7d6abc0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c52d65b7ab4ed433703b723f271a567ce1790393"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ3hAVP",
              "createdAt": "2023-10-09T20:07:51Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jdfpj",
              "createdAt": "2023-10-10T19:03:28Z",
              "body": "Thanks a lot, this looks very good already!",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ4XR3k",
              "createdAt": "2023-10-10T20:29:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ4XR3o",
              "createdAt": "2023-10-10T20:29:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8080f7ecd5a5dbc98965ce4d34711af548ed6ba1"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ4bCCi",
              "createdAt": "2023-10-10T21:39:19Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "695e86ed28ced9ba0bd78c1bb3b6c0b93a600bc5"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ4xRL5",
              "createdAt": "2023-10-11T09:44:02Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oviPQ",
              "createdAt": "2023-10-11T09:50:41Z",
              "body": "I have addressed all your comments. (Let me know if you think the last golfs are hurting readability.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ4xkza",
              "createdAt": "2023-10-11T09:51:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ4xkzl",
              "createdAt": "2023-10-11T09:51:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ4xkzw",
              "createdAt": "2023-10-11T09:51:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b1236ad2a3495b933bf72d5bb80b0ff8c9f6b648"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5c967ab39c8f32c630c6c6e4e212fd90f0c48cdc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c4e56eea0ed52af75e2c435fdf2aeeba8dc318f7"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ4xqRT",
              "createdAt": "2023-10-11T09:53:15Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ40O4-",
              "createdAt": "2023-10-11T10:55:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5joXj5",
              "createdAt": "2023-10-11T15:15:04Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ5Cf5t",
              "createdAt": "2023-10-11T15:44:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ5Cf53",
              "createdAt": "2023-10-11T15:44:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7140e0d31067f20f53a1bb46270795d7930ec911"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "43ff7830e341dea4c08d29b9cbcdb2e97e18c59d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cb357dde86f59cb7bbf9b8fb20d9fbcea7d3adb5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6217a35113b68d4ef41bf6881945e3a841ecc3b4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d1daf243afa3a3e1ec7fa59f7f92c044edf7fab3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9399e0287b8c190f8d5cb32b5152f6276c1110ea"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c584f30be9ce8b9f04b9b9632a91debe894a8b25"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ad59ae35f1749c7dca117abc4b6a867c8311928b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c5ceb4464886c0b6ba427e21c6e55259b533435e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "44f823103eb8cf1803bed160cba59c1710fe05b9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "620c7c1b10db2055912aa9aae5d2a427e51ce992"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "50ff5a9649a2676ab9246c8ffde98cd49f57e905"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "69dbe5ded10c2418d4a7335cfc32b5425d0b1d93"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "07aafd3c1709d570a96877fc6bd4c3bd48a11c29"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5oy4H2",
              "createdAt": "2023-10-11T17:35:08Z",
              "body": "Updated again. Thanks for the fast turnaround!\r\n(~~edit: github is still processing this, for some reason.~~after merging master and pushing again, it shows up now)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ5HUm_",
              "createdAt": "2023-10-11T17:41:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ5HUnI",
              "createdAt": "2023-10-11T17:41:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ5HUnP",
              "createdAt": "2023-10-11T17:41:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5O1KAz",
              "createdAt": "2023-10-11T17:45:29Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ciWVK",
                "title": "[Merged by Bors] - chore(Topology/SubsetProperties): Refactor SubsetProperties.lean",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7628"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9eb66c871778df47e98a8ab944cf9106096e7c24"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "78bb656532cef48456feab912a2fbce6e396691e"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ5N3pB",
              "createdAt": "2023-10-11T20:09:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ5PECt",
              "createdAt": "2023-10-11T20:36:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e9a0c4b79f52b1f805117737006f6bcb90b2f093"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ5QLGu",
              "createdAt": "2023-10-11T21:05:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0ce65c1e6b0a169bcd3ddafa98a8c184b7d5b7c7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "becea354484014100cce7d36958ac5e99538affd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5o0a6y",
              "createdAt": "2023-10-11T21:28:24Z",
              "body": "(Cancelling the build as this will need a rebase due to #7628 anyway.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "df0528e2728d03d6fd1d06c66c3b39774745fb8a"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ5TRUw",
              "createdAt": "2023-10-11T23:09:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cfe5f699371415471b1b05cc3b42e5f863c20c65"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ5Y7T1",
              "createdAt": "2023-10-12T04:09:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5O1u60",
              "createdAt": "2023-10-12T07:05:49Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cmXSG",
                "title": "chore(Topology/Compactness/SigmaCompact): rename type variables",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7639"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5O1vDF",
              "createdAt": "2023-10-12T07:07:50Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cmYN5",
                "title": "[Merged by Bors] - feat: sigma-compact measure zero sets are meagre",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7640"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kC2rb",
              "createdAt": "2023-10-14T21:04:33Z",
              "body": "Sorry for the wait! I think this is mostly good now, at most one more round.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ7TFfR",
              "createdAt": "2023-10-15T21:38:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ7TFfU",
              "createdAt": "2023-10-15T21:38:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ72giQ",
              "createdAt": "2023-10-16T16:19:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ72gin",
              "createdAt": "2023-10-16T16:19:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "507556c4b9312f1579f5f57a3e5815f8eeb2764d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "da4a625f8251029e0d0217b385da34dc912920fe"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5zKYRuzwAAAAJ722rS",
              "createdAt": "2023-10-16T16:26:35Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pMXq9",
              "createdAt": "2023-10-16T16:28:22Z",
              "body": "I have addressed all the comments, and also included some last touch-ups of related doc comments (in the last commit).",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kMQvF",
              "createdAt": "2023-10-16T20:50:48Z",
              "body": "Thanks!\r\n\r\nbors d+",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pN8QH",
              "createdAt": "2023-10-16T20:56:37Z",
              "body": ":v: grunweg can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5zKYRuzwAAAAJ8BF_9",
              "createdAt": "2023-10-16T20:56:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5zKYRuzwAAAAJ8BGCJ",
              "createdAt": "2023-10-16T20:56:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "986513a19addb17cfab0ccea8fec707b13fc92c0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pOVem",
              "createdAt": "2023-10-16T22:22:36Z",
              "body": "Thank you for the patient review.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pOVfy",
              "createdAt": "2023-10-16T22:22:41Z",
              "body": "bors r+",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pOlsQ",
              "createdAt": "2023-10-16T23:41:52Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6540054159/job/17759265520)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6540054159/job/17759265634)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6540054159/job/17759265413)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5zKYRuzwAAAAJ8FMmu",
              "createdAt": "2023-10-16T23:41:54Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5zKYRuzwAAAAJ8FMsN",
              "createdAt": "2023-10-16T23:41:58Z"
            }
          ]
        }
      }
    }
  }
}
