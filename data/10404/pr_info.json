{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 143,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "acmepjz"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "- `perfectField_iff_splits_of_natSepDegree_eq_one`: A field is perfect if and only if every separable degree one polynomial splits.\r\n- add some criteria of a monic polynomial being separable degree one\r\n- add some convenient results of separable degree of a polynomial\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #10571\r\n- [x] depends on: #10572\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2024-03-13T11:52:12Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5z973x",
              "body": "> it might be more direct to reuse [Irreducible.natSepDegree_eq_one_iff_of_monic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/SeparableDegree.html#Irreducible.natSepDegree_eq_one_iff_of_monic).\r\n\r\nThis was my unsuccessful attempt, seems that this proof is no shorter than current proof, though.\r\n\r\n> Just extract a maximum power of an irreducible factor of the polynomial using [UniqueFactorizationMonoid.max_power_factor](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.max_power_factor) (note: many unncessary hypotheses), and what's left is coprime to the irreducible factor by [Irreducible.coprime_or_dvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/PrincipalIdealDomain.html#Irreducible.coprime_or_dvd), so it can't share any common root with the irreducible factor (in any extension), and therefore must be constant (1 if monic) if the original polynomial has only one root. So the original polynomial is a power of the irreducible factor, which has the form X^q^n-a.\r\n\r\nI was not aware of this approach! Seems that using [multiplicity](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Multiplicity.html#multiplicity) is better?\r\n\r\nBy the way, `UniqueFactorizationMonoid.max_power_factor` requires the (base) ring to be `NormalizationMonoid`, which I think that a field should be a `NormalizationMonoid`. But currently mathlib has no instance for this yet.",
              "createdAt": "2024-02-15T08:43:10Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50B7bW",
              "body": "> I was not aware of this approach! Seems that using [multiplicity](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Multiplicity.html#multiplicity) is better?\r\n\r\nThat can work but is probably less convenient. I'm not sure in what generality you can show a polynomial have finite multiplicity in another, but at least a monic polynomial of positive degree has finite multiplicity in any nonzero polynomial.\r\n\r\n> By the way, UniqueFactorizationMonoid.max_power_factor requires the (base) ring to be NormalizationMonoid, which I think that a field should be a NormalizationMonoid. But currently mathlib has no instance for this yet.\r\n\r\nI think you need the polynomial ring to be a NormalizationMonoid, not the base ring, which you can get using Classical.arbitrary, because there's [instNonemptyNormalizedGCDMonoid_1](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#instNonemptyNormalizedGCDMonoid_1) I just added. It may be hard to remove the condition from the lemma, since the lemma may be needed to prove the instance ...",
              "createdAt": "2024-02-15T17:21:51Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50CD08",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#10571~~\n* ~~leanprover-community/mathlib4#10572~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-02-15T17:32:06Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50CQ9-",
              "body": "> I'm not sure in what generality you can show a polynomial have finite multiplicity in another\r\n\r\nAll results in this files are polynomials over fields. In this case the polynomial ring itself is a PID, so I think the finiteness of the multiplicity should comes from the general results of multiplicity being finite for PIDs (or perhaps UFDs, or even [WfDvdMonoid](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid)). We should already have these results in mathlib, no?\r\n\r\n[EDIT] Here we go: [multiplicity.finite_prime_left](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Squarefree/Basic.html#multiplicity.finite_prime_left)\r\n\r\n[EDIT2] For polynomials over a ring which is not necessarily `WfDvdMonoid`, we have [Polynomial.multiplicity_finite_of_degree_pos_of_monic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Polynomial/Div.html#Polynomial.multiplicity_finite_of_degree_pos_of_monic) --- ~~but I have a question: it only requires `Semiring`, while [Polynomial.multiplicity_X_sub_C_finite](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Polynomial/Div.html#Polynomial.multiplicity_X_sub_C_finite), which seems a special case of it, requires `Ring`; should we change it to `Semiring`?~~",
              "createdAt": "2024-02-15T17:48:38Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50CYKA",
              "body": "Yeah, but I think max_power_factor can also be generalized to arbitrary UFD. The [Nontrivial R] [NormalizationMonoid R] [dec_dvd : DecidableRel Dvd.dvd] assumptions can all be removed once you have the NonemptyNormalizedGCD instance.",
              "createdAt": "2024-02-15T17:57:40Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50Cf8u",
              "body": "well, subtraction requires Ring because `sub` isn't a field of Semiring ...",
              "createdAt": "2024-02-15T18:07:39Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50CgOM",
              "body": "> Yeah, but I think max_power_factor can also be generalized to arbitrary UFD. The [Nontrivial R] [NormalizationMonoid R] [dec_dvd : DecidableRel Dvd.dvd] assumptions can all be removed once you have the NonemptyNormalizedGCD instance.\r\n\r\nIn fact I don't know why `NormalizationMonoid` is required to prove this result. Also, I think the `n` in this result is just the `multiplicity`, in order to make the API consistent, I think this result should be rephrased using `multiplicity.Finite`.",
              "createdAt": "2024-02-15T18:07:59Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50DMVp",
              "body": "The `multiplicity.finite` result is [multiplicity.exists_eq_pow_mul_and_not_dvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Multiplicity.html#multiplicity.exists_eq_pow_mul_and_not_dvd) and max_power_factor could be derived from it, yes. Do we have that a non-unit in a WfDvdMonoid has finite multiplicity in any nonzero element?",
              "createdAt": "2024-02-15T19:04:51Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50DbbG",
              "body": ">  Do we have that a non-unit in a WfDvdMonoid has finite multiplicity in any nonzero element?\r\n\r\nI don't think so, the [multiplicity.finite_prime_left](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Squarefree/Basic.html#multiplicity.finite_prime_left) is the only result which mentions `WfDvdMonoid` and `multiplicity.Finite`, which requires that the element is a prime. Is it still true if prime is replaced by irreducible? Then I think the general result follows since in `WfDvdMonoid` every non-unit has an irreducible factor.",
              "createdAt": "2024-02-15T19:22:50Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50FCmW",
              "body": "It turns out the generalization of `max_power_factor` doesn't require cancellation, but the generalization of `multiplicity.finite_prime_left` does (otherwise you get examples where `a` is an idempotent different from 0 and 1). They do both generalize to non-units:\r\n```\r\nimport Mathlib.RingTheory.UniqueFactorizationDomain\r\n\r\ntheorem max_power_factor {R} [CommMonoidWithZero R] [WfDvdMonoid R]\r\n    {a b : R} (ha : Â¬ IsUnit a) (hb : b â‰  0) :\r\n    âˆƒ (n : â„•) (c : R), Â¬a âˆ£ c âˆ§ b = a ^ n * c := by\r\n  obtain âŸ¨c, âŸ¨n, rflâŸ©, minâŸ© := wellFounded_dvdNotUnit.has_min\r\n    {c | âˆƒ n, a ^ n * c = b} âŸ¨b, 0, by rw [pow_zero, one_mul]âŸ©\r\n  refine âŸ¨n, c, ?_, rflâŸ©; rintro âŸ¨d, rflâŸ©\r\n  exact min d âŸ¨n + 1, by rw [pow_succ', mul_assoc]âŸ©\r\n    âŸ¨(right_ne_zero_of_mul <| right_ne_zero_of_mul hb), a, ha, mul_comm _ _âŸ©\r\n\r\ntheorem multiplicity.finite_of_not_isUnit {R} [CancelCommMonoidWithZero R] [WfDvdMonoid R]\r\n    {a b : R} (ha : Â¬ IsUnit a) (hb : b â‰  0) : multiplicity.Finite a b := by\r\n  obtain âŸ¨n, c, ndvd, rflâŸ© := max_power_factor ha hb\r\n  exact âŸ¨n, by rwa [pow_succ', mul_dvd_mul_iff_left (left_ne_zero_of_mul hb)]âŸ©\r\n```\r\n",
              "createdAt": "2024-02-15T23:00:48Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50FTGZ",
              "body": "> It turns out the generalization of `max_power_factor` doesn't require cancellation, but the generalization of `multiplicity.finite_prime_left` does (otherwise you get examples where `a` is an idempotent different from 0 and 1).\r\n\r\nLet me see. Do you mean that although `Â¬a âˆ£ c âˆ§ b = a ^ n * c`,  but it's still possible that `a ^ (n + 1) âˆ£ b` since it's not a domain?\r\n\r\n>They do both generalize to non-units\r\n\r\nGreat! Waiting for your PRs. Your generalization of `max_power_factor` should probably be called `WfDvdMonoid.max_power_factor` and the original `UniqueFactorizationMonoid.max_power_factor` could probably be deprecated...",
              "createdAt": "2024-02-16T00:18:21Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50FXwi",
              "body": "Yes, that's what I mean. I have a deadline to meet and won't open a PR today, so feel free to.",
              "createdAt": "2024-02-16T00:40:06Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50FYGP",
              "body": "> I have a deadline to meet and won't open a PR today, so feel free to.\r\n\r\nNo worries. Currently I don't need to use such generalization.",
              "createdAt": "2024-02-16T00:41:54Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c522oTQ",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2024-03-13T10:16:02Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c523STX",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8263856481/job/22606187023)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8263856481/job/22606187488)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8263856481/job/22606187971)",
              "createdAt": "2024-03-13T11:52:12Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "3e492c1dcfbdf71f5edc633eaf3bb5784d2699c2",
                "additions": 18,
                "deletions": 0,
                "committedDate": "2024-02-10T19:08:37Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_fSw6Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7857072814/job/21440540905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_gJTiQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7857490597/job/21441434505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_fSw5Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7857072816/job/21440540901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_gJTgg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7857490596/job/21441434498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e5zZA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856884808/job/21440131940"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e5zUQ",
                        "name": "label-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856884810/job/21440131921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e46Xg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877302/job/21440117342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47Aw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877303/job/21440117507"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e5zWg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856884807/job/21440131930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_fSxHA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7857072814/job/21440540956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_gJTuA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7857490597/job/21441434552"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47Wg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877302/job/21440117594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47PQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877303/job/21440117565"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e5zpg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856884807/job/21440132006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e46qA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877302/job/21440117416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e46Pg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877303/job/21440117310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47CA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877302/job/21440117512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e46nQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877303/job/21440117405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47mQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877302/job/21440117657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47eQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877303/job/21440117625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e47xA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877302/job/21440117700"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_fIsQQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7856877303/job/21440375873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE_e6PLQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "67bb6cc913e0a8f2579fa1859b16d45d9222358f",
                "additions": 256,
                "deletions": 4,
                "committedDate": "2024-02-14T02:20:38Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB8aw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621359/job/21548268651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB5-g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621101/job/21548268026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB6dw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621100/job/21548268151"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB9Aw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621355/job/21548268803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB8LA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621101/job/21548268588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB6-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621100/job/21548268280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB8gg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621355/job/21548268674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB7mQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621101/job/21548268441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB54Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621100/job/21548268001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB7Hg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621101/job/21548268318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB7cA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621100/job/21548268400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB6pg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621101/job/21548268198"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB78w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621100/job/21548268531"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGB8yA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621101/job/21548268744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGerSg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7895621100/job/21548739402"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBGCltQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "205aea1e8855d307d096b8329464f35aeebcde30",
                "additions": 13815,
                "deletions": 6117,
                "committedDate": "2024-02-14T13:24:01Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "33004a6d1f5bf583a0bae2091f75150411912972",
                "additions": 71,
                "deletions": 83,
                "committedDate": "2024-02-14T14:23:00Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZvH5g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902703857/job/21568931814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZvGGg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902703853/job/21568931354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjndA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643796/job/21568743284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjlNA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643581/job/21568742708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjnCw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643578/job/21568743179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjoKA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643798/job/21568743464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZvGLA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902703857/job/21568931372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjmRg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643581/job/21568742982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjoUA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643578/job/21568743504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjpSg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643798/job/21568743754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjnQA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643581/job/21568743232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjk1w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643578/job/21568742615"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjoeg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643581/job/21568743546"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjphg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643578/job/21568743814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjpfg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643581/job/21568743806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjl-g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643578/job/21568742906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZjqlA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643581/job/21568744084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBcUaRA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7902643578/job/21571639876"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBZk9DA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b0c7fcf6b7de86c65d81a39d8d6a440cfde0bd4d",
                "additions": 0,
                "deletions": 38,
                "committedDate": "2024-02-15T00:41:36Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBztbLw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7911659974/job/21596166959"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBztavg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7911659975/job/21596166846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBzwAVQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7911676808/job/21596209237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBzwaKA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7911679463/job/21596215848"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI5Tw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387795/job/21590325583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI1pw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387455/job/21590324647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI3Mg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387456/job/21590325042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI5sQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387799/job/21590325681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBztaug",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7911659974/job/21596166842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI2XA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387455/job/21590324828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI3tQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387456/job/21590325173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI5Kg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387799/job/21590325546"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI3bA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387455/job/21590325100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI2Og",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387456/job/21590324794"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI35g",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387455/job/21590325222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI1kA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387456/job/21590324624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI24w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387455/job/21590324963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI2uw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387456/job/21590324923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuI4hg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387455/job/21590325382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBvtWQw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7909387456/job/21591971395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBuJ2kg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2de2da913b5026294f1a60f91ab552a3d581a07b",
                "additions": 3377,
                "deletions": 2641,
                "committedDate": "2024-02-16T00:35:31Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5dd47ffb3c83cbb2abd551a813fece6e264e4720",
                "additions": 35,
                "deletions": 87,
                "committedDate": "2024-02-16T01:38:51Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCannnA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797331/job/21636966300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanlYg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797133/job/21636965730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanlgg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797134/job/21636965762"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanoJA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797330/job/21636966436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanmew",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797133/job/21636966011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanmiA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797134/job/21636966024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCannow",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797330/job/21636966307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCannDw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797133/job/21636966159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanmDw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797134/job/21636965903"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanl6Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797133/job/21636965865"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCannaw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797134/job/21636966251"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCannkA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797133/job/21636966288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanm-w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797134/job/21636966139"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCanoJw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797133/job/21636966439"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCbKkQg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7924797134/job/21637538882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCaoWvw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "dcf6f7b47b64e863e0e6ca3300d84abfe717fc73",
                "additions": 55171,
                "deletions": 32767,
                "committedDate": "2024-03-13T04:02:07Z",
                "author": {
                  "name": "acmepjz",
                  "email": "acme_pjz@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQw9gtA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8261829135/job/22599917748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQw9f3A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8261829127/job/22599917532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSjTQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259278699/job/22592922445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSpcA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSpig",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSj1Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259278702/job/22592922581"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQw9fww",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8261829135/job/22599917507"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSs2A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSqaQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSjVw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259278702/job/22592922455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSqYg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924258"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSrDg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSr5g",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSsnQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSrAg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqSr6Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqStxQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592925125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQq0F6Q",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22593471977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFQqTYYA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGhkY1Qw",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/2116",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-02-10T19:09:59Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/FieldTheory/SeparableDegree.lean",
              "additions": 143,
              "deletions": 3
            }
          ]
        },
        "headRefName": "acmepjz_perfect_field_iff",
        "headRefOid": "dcf6f7b47b64e863e0e6ca3300d84abfe717fc73",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5mj-7W",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5zPoL1",
              "body": "LGTM, thanks!",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-03-13T08:47:54Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 10404,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5vtPHX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-02-10T19:54:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5vtvFQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2024-02-10T21:21:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wFS4U",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2024-02-14T14:27:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wKnaQ",
              "body": "Thanks for the effort! The results you prove are quite general and strong. As for the original result I suggested, it might be more direct to reuse [Irreducible.natSepDegree_eq_one_iff_of_monic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/SeparableDegree.html#Irreducible.natSepDegree_eq_one_iff_of_monic). Just extract a maximum power of an irreducible factor of the polynomial using [UniqueFactorizationMonoid.max_power_factor](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.max_power_factor) (note: many unncessary hypotheses), and what's left is coprime to the irreducible factor by [Irreducible.coprime_or_dvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/PrincipalIdealDomain.html#Irreducible.coprime_or_dvd), so it can't share any common root with the irreducible factor (in any extension), and therefore must be constant (1 if monic) if the original polynomial has only one root. So the original polynomial is a power of the irreducible factor, which has the form X^q^n-a.",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-02-15T05:46:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zPoL1",
              "body": "LGTM, thanks!",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-03-13T08:47:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yhti0",
                    "body": "We have lemmas about `f.natSepDegree = 1` assuming `Irreducible f` ([Irreducible.natSepDegree_eq_one_iff_of_monic'](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/SeparableDegree.html#Irreducible.natSepDegree_eq_one_iff_of_monic') etc.), but without that assumption we should still be able to show `f` has the form `(X ^ p ^ n - C a) ^ m` (and you can require that `a : F` has no `p`th root in F (Edit: I should say \"can require ... if n is not 0\")).",
                    "createdAt": "2024-02-10T19:54:25Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yh7v0",
                    "body": "I should say in the proof of this result I cheated a bit and uses `PerfectRing.ofSurjective`. The criterion of a monic polynomial being separable degree one is not used.",
                    "createdAt": "2024-02-10T21:21:39Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YyOM4",
                    "body": "I have added the result you mentioned. The proof is very ugly though; improvements are welcome. Added a lot of intermediate results to various files. There is still an intermediate result `test1` which has no good descriptive names.",
                    "createdAt": "2024-02-14T14:27:23Z",
                    "author": {
                      "login": "acmepjz"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMzOTc3Nzk=",
              "login": "acmepjz"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQw9gtA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8261829135/job/22599917748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQw9f3A",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8261829127/job/22599917532"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSjTQ",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259278699/job/22592922445"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSpcA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924016"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSpig",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924042"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSj1Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259278702/job/22592922581"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQw9fww",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8261829135/job/22599917507"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSs2A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924888"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSqaQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924265"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSjVw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259278702/job/22592922455"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSqYg",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924258"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSrDg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924430"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSr5g",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924646"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSsnQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924829"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSrAg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592924418"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqSr6Q",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22592924649"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqStxQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279410/job/22592925125"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQq0F6Q",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8259279409/job/22593471977"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFQqTYYA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10404"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGhkY1Qw",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/2116",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(FieldTheory/SeparableDegree): some results on separable degree one polynomials",
        "updatedAt": "2024-03-13T11:52:15Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/10404",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAAK9Rxz5",
              "createdAt": "2024-02-10T19:09:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAAK9Rxz6",
              "createdAt": "2024-02-10T19:09:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAAK9Rxz-",
              "createdAt": "2024-02-10T19:09:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-4O-XzwAAAAK9R619",
              "createdAt": "2024-02-10T19:35:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5vtPHX",
              "createdAt": "2024-02-10T19:54:25Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-4O-XzwAAAAK9SYOo",
              "createdAt": "2024-02-10T21:08:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAAK9SYOq",
              "createdAt": "2024-02-10T21:08:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-4O-XzwAAAAK_fv3v",
              "createdAt": "2024-02-14T14:40:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAAK_fv3-",
              "createdAt": "2024-02-14T14:40:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAAK_2De_",
              "createdAt": "2024-02-15T00:45:52Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5wKnaQ",
              "createdAt": "2024-02-15T05:46:48Z",
              "body": "Thanks for the effort! The results you prove are quite general and strong. As for the original result I suggested, it might be more direct to reuse [Irreducible.natSepDegree_eq_one_iff_of_monic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/SeparableDegree.html#Irreducible.natSepDegree_eq_one_iff_of_monic). Just extract a maximum power of an irreducible factor of the polynomial using [UniqueFactorizationMonoid.max_power_factor](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.max_power_factor) (note: many unncessary hypotheses), and what's left is coprime to the irreducible factor by [Irreducible.coprime_or_dvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/PrincipalIdealDomain.html#Irreducible.coprime_or_dvd), so it can't share any common root with the irreducible factor (in any extension), and therefore must be constant (1 if monic) if the original polynomial has only one root. So the original polynomial is a power of the irreducible factor, which has the form X^q^n-a.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5z973x",
              "createdAt": "2024-02-15T08:43:10Z",
              "body": "> it might be more direct to reuse [Irreducible.natSepDegree_eq_one_iff_of_monic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/FieldTheory/SeparableDegree.html#Irreducible.natSepDegree_eq_one_iff_of_monic).\r\n\r\nThis was my unsuccessful attempt, seems that this proof is no shorter than current proof, though.\r\n\r\n> Just extract a maximum power of an irreducible factor of the polynomial using [UniqueFactorizationMonoid.max_power_factor](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.max_power_factor) (note: many unncessary hypotheses), and what's left is coprime to the irreducible factor by [Irreducible.coprime_or_dvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/PrincipalIdealDomain.html#Irreducible.coprime_or_dvd), so it can't share any common root with the irreducible factor (in any extension), and therefore must be constant (1 if monic) if the original polynomial has only one root. So the original polynomial is a power of the irreducible factor, which has the form X^q^n-a.\r\n\r\nI was not aware of this approach! Seems that using [multiplicity](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Multiplicity.html#multiplicity) is better?\r\n\r\nBy the way, `UniqueFactorizationMonoid.max_power_factor` requires the (base) ring to be `NormalizationMonoid`, which I think that a field should be a `NormalizationMonoid`. But currently mathlib has no instance for this yet.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50B7bW",
              "createdAt": "2024-02-15T17:21:51Z",
              "body": "> I was not aware of this approach! Seems that using [multiplicity](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Multiplicity.html#multiplicity) is better?\r\n\r\nThat can work but is probably less convenient. I'm not sure in what generality you can show a polynomial have finite multiplicity in another, but at least a monic polynomial of positive degree has finite multiplicity in any nonzero polynomial.\r\n\r\n> By the way, UniqueFactorizationMonoid.max_power_factor requires the (base) ring to be NormalizationMonoid, which I think that a field should be a NormalizationMonoid. But currently mathlib has no instance for this yet.\r\n\r\nI think you need the polynomial ring to be a NormalizationMonoid, not the base ring, which you can get using Classical.arbitrary, because there's [instNonemptyNormalizedGCDMonoid_1](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#instNonemptyNormalizedGCDMonoid_1) I just added. It may be hard to remove the condition from the lemma, since the lemma may be needed to prove the instance ...",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-4O-XzwAAAALAcz7Y",
              "createdAt": "2024-02-15T17:32:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50CD08",
              "createdAt": "2024-02-15T17:32:06Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#10571~~\n* ~~leanprover-community/mathlib4#10572~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50CQ9-",
              "createdAt": "2024-02-15T17:48:38Z",
              "body": "> I'm not sure in what generality you can show a polynomial have finite multiplicity in another\r\n\r\nAll results in this files are polynomials over fields. In this case the polynomial ring itself is a PID, so I think the finiteness of the multiplicity should comes from the general results of multiplicity being finite for PIDs (or perhaps UFDs, or even [WfDvdMonoid](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid)). We should already have these results in mathlib, no?\r\n\r\n[EDIT] Here we go: [multiplicity.finite_prime_left](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Squarefree/Basic.html#multiplicity.finite_prime_left)\r\n\r\n[EDIT2] For polynomials over a ring which is not necessarily `WfDvdMonoid`, we have [Polynomial.multiplicity_finite_of_degree_pos_of_monic](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Polynomial/Div.html#Polynomial.multiplicity_finite_of_degree_pos_of_monic) --- ~~but I have a question: it only requires `Semiring`, while [Polynomial.multiplicity_X_sub_C_finite](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Polynomial/Div.html#Polynomial.multiplicity_X_sub_C_finite), which seems a special case of it, requires `Ring`; should we change it to `Semiring`?~~",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50CYKA",
              "createdAt": "2024-02-15T17:57:40Z",
              "body": "Yeah, but I think max_power_factor can also be generalized to arbitrary UFD. The [Nontrivial R] [NormalizationMonoid R] [dec_dvd : DecidableRel Dvd.dvd] assumptions can all be removed once you have the NonemptyNormalizedGCD instance.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50Cf8u",
              "createdAt": "2024-02-15T18:07:39Z",
              "body": "well, subtraction requires Ring because `sub` isn't a field of Semiring ...",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50CgOM",
              "createdAt": "2024-02-15T18:07:59Z",
              "body": "> Yeah, but I think max_power_factor can also be generalized to arbitrary UFD. The [Nontrivial R] [NormalizationMonoid R] [dec_dvd : DecidableRel Dvd.dvd] assumptions can all be removed once you have the NonemptyNormalizedGCD instance.\r\n\r\nIn fact I don't know why `NormalizationMonoid` is required to prove this result. Also, I think the `n` in this result is just the `multiplicity`, in order to make the API consistent, I think this result should be rephrased using `multiplicity.Finite`.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50DMVp",
              "createdAt": "2024-02-15T19:04:51Z",
              "body": "The `multiplicity.finite` result is [multiplicity.exists_eq_pow_mul_and_not_dvd](https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Multiplicity.html#multiplicity.exists_eq_pow_mul_and_not_dvd) and max_power_factor could be derived from it, yes. Do we have that a non-unit in a WfDvdMonoid has finite multiplicity in any nonzero element?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50DbbG",
              "createdAt": "2024-02-15T19:22:50Z",
              "body": ">  Do we have that a non-unit in a WfDvdMonoid has finite multiplicity in any nonzero element?\r\n\r\nI don't think so, the [multiplicity.finite_prime_left](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Squarefree/Basic.html#multiplicity.finite_prime_left) is the only result which mentions `WfDvdMonoid` and `multiplicity.Finite`, which requires that the element is a prime. Is it still true if prime is replaced by irreducible? Then I think the general result follows since in `WfDvdMonoid` every non-unit has an irreducible factor.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50FCmW",
              "createdAt": "2024-02-15T23:00:48Z",
              "body": "It turns out the generalization of `max_power_factor` doesn't require cancellation, but the generalization of `multiplicity.finite_prime_left` does (otherwise you get examples where `a` is an idempotent different from 0 and 1). They do both generalize to non-units:\r\n```\r\nimport Mathlib.RingTheory.UniqueFactorizationDomain\r\n\r\ntheorem max_power_factor {R} [CommMonoidWithZero R] [WfDvdMonoid R]\r\n    {a b : R} (ha : Â¬ IsUnit a) (hb : b â‰  0) :\r\n    âˆƒ (n : â„•) (c : R), Â¬a âˆ£ c âˆ§ b = a ^ n * c := by\r\n  obtain âŸ¨c, âŸ¨n, rflâŸ©, minâŸ© := wellFounded_dvdNotUnit.has_min\r\n    {c | âˆƒ n, a ^ n * c = b} âŸ¨b, 0, by rw [pow_zero, one_mul]âŸ©\r\n  refine âŸ¨n, c, ?_, rflâŸ©; rintro âŸ¨d, rflâŸ©\r\n  exact min d âŸ¨n + 1, by rw [pow_succ', mul_assoc]âŸ©\r\n    âŸ¨(right_ne_zero_of_mul <| right_ne_zero_of_mul hb), a, ha, mul_comm _ _âŸ©\r\n\r\ntheorem multiplicity.finite_of_not_isUnit {R} [CancelCommMonoidWithZero R] [WfDvdMonoid R]\r\n    {a b : R} (ha : Â¬ IsUnit a) (hb : b â‰  0) : multiplicity.Finite a b := by\r\n  obtain âŸ¨n, c, ndvd, rflâŸ© := max_power_factor ha hb\r\n  exact âŸ¨n, by rwa [pow_succ', mul_dvd_mul_iff_left (left_ne_zero_of_mul hb)]âŸ©\r\n```\r\n",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50FTGZ",
              "createdAt": "2024-02-16T00:18:21Z",
              "body": "> It turns out the generalization of `max_power_factor` doesn't require cancellation, but the generalization of `multiplicity.finite_prime_left` does (otherwise you get examples where `a` is an idempotent different from 0 and 1).\r\n\r\nLet me see. Do you mean that although `Â¬a âˆ£ c âˆ§ b = a ^ n * c`,  but it's still possible that `a ^ (n + 1) âˆ£ b` since it's not a domain?\r\n\r\n>They do both generalize to non-units\r\n\r\nGreat! Waiting for your PRs. Your generalization of `max_power_factor` should probably be called `WfDvdMonoid.max_power_factor` and the original `UniqueFactorizationMonoid.max_power_factor` could probably be deprecated...",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50FXwi",
              "createdAt": "2024-02-16T00:40:06Z",
              "body": "Yes, that's what I mean. I have a deadline to meet and won't open a PR today, so feel free to.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50FYGP",
              "createdAt": "2024-02-16T00:41:54Z",
              "body": "> I have a deadline to meet and won't open a PR today, so feel free to.\r\n\r\nNo worries. Currently I don't need to use such generalization.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RJJpW",
              "createdAt": "2024-02-29T01:18:50Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5oPHMN",
                "title": "[Merged by Bors] - feat(RingTheory/UniqueFactorizationDomain): add `WfDvdMonoid.max_power_factor[']` and `multiplicity.finite_of_not_isUnit`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/11066"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zPoL1",
              "createdAt": "2024-03-13T08:47:55Z",
              "body": "LGTM, thanks!",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c522oTQ",
              "createdAt": "2024-03-13T10:16:02Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5-4O-XzwAAAALRR_-3",
              "createdAt": "2024-03-13T10:16:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5-4O-XzwAAAALRSABl",
              "createdAt": "2024-03-13T10:16:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c523STX",
              "createdAt": "2024-03-13T11:52:12Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8263856481/job/22606187023)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8263856481/job/22606187488)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8263856481/job/22606187971)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5-4O-XzwAAAALRWh_v",
              "createdAt": "2024-03-13T11:52:12Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5-4O-XzwAAAALRWiIJ",
              "createdAt": "2024-03-13T11:52:15Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
