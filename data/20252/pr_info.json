{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 124,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "JovanGerb"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "…of other hypothesis\r\n\r\nThis is an experiment, and doing all of the replacements is quite a bit of work.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 21,
        "closed": true,
        "closedAt": "2025-01-14T23:07:51Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6YuMuq",
              "body": "### PR summary [9094b6de64](https://github.com/leanprover-community/mathlib4/pull/20252/commits/9094b6de64f94477f17a1a97fd848eb634a34783)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (priority := 100) : SemilinearMapClass F σ M M₂`\n`+ instance (priority := 100) BoundedOrderHomClass.toBotHomClass`\n`+ instance (priority := 100) BoundedOrderHomClass.toTopHomClass`\n`+ instance (priority := 100) OrderIsoClass.toBotHomClass {_ : LE α} [OrderBot α]`\n`+ instance (priority := 100) OrderIsoClass.toBoundedOrderHomClass {_ : LE α} [BoundedOrder α]`\n`+ instance (priority := 100) OrderIsoClass.toTopHomClass {_ : LE α} [OrderTop α]`\n`+ instance (priority := 100) continuousSemilinearMapClass {_ : EquivLike F M M₂}`\n`+ instance (priority := 100) instMonoidHomClass (F : Type*)`\n`+ instance (priority := 100) toAddEquivClass {_ : Mul R} {_ : Add R} {_ : Mul S} {_ : Add S}`\n`+ instance (priority := 100) toAlgEquivClass {F : Type*} {R A B : outParam Type*} {_ : CommSemiring R}`\n`+ instance (priority := 100) toAlgHomClass : AlgHomClass F R A B`\n`+ instance (priority := 100) toBialgHomClass {F : Type*} {R A B : outParam Type*} {_ : CommSemiring R}`\n`+ instance (priority := 100) toLinearEquivClass : LinearEquivClass F R A B`\n`+ instance (priority := 100) {A B R : Type*} {_ : CommSemiring R} {_ : Semiring A} {_ : Semiring B}`\n`+ instance (priority := 100) {F : Type*} [FunLike F A B]`\n`+ instance (priority := 100) {_ : EquivLike F M M₂}`\n`+ instance (priority := 100) {_ : EquivLike F X Y} [DilationEquivClass F X Y] : DilationClass F X Y`\n`+ instance (priority := 50) {F A B : Type*} {_ : Add A} {_ : Mul A} {_ : Star A} {_ : Add B}`\n`+ instance : CoeTC F (A ≃ₐ[R] B)`\n`+ instance : CoeTC F (α ≃* β)`\n`+ instance {_ : Bot α} {_ : Bot β} [BotHomClass F α β] : CoeTC F (BotHom α β)`\n`+ instance {_ : Top α} {_ : Top β} [TopHomClass F α β] : CoeTC F (TopHom α β)`\n`+ toMulEquiv`\n`+ toMulEquiv_injective`\n`- MulEquivClass.toMulEquiv`\n`- MulEquivClass.toMulEquiv_injective`\n`- instance (F R A B : Type*) [CommSemiring R] [Semiring A] [Semiring B] [Algebra R A] [Algebra R B]`\n`- instance (priority := 100) BoundedOrderHomClass.toBotHomClass [LE α] [LE β]`\n`- instance (priority := 100) BoundedOrderHomClass.toTopHomClass [LE α] [LE β]`\n`- instance (priority := 100) OrderIsoClass.toBotHomClass [LE α] [OrderBot α]`\n`- instance (priority := 100) OrderIsoClass.toBoundedOrderHomClass [LE α] [BoundedOrder α]`\n`- instance (priority := 100) OrderIsoClass.toTopHomClass [LE α] [OrderTop α]`\n`- instance (priority := 100) [EquivLike F M M₂]`\n`- instance (priority := 100) [EquivLike F X Y] [DilationEquivClass F X Y] : DilationClass F X Y`\n`- instance (priority := 100) [FunLike F A B] [AlgHomClass F R A B] : NonUnitalAlgHomClass F R A B`\n`- instance (priority := 100) [RingHomInvPair σ σ'] [RingHomInvPair σ' σ]`\n`- instance (priority := 100) continuousSemilinearMapClass [EquivLike F M M₂]`\n`- instance (priority := 100) instMonoidHomClass`\n`- instance (priority := 100) toAddEquivClass [Mul R] [Add R]`\n`- instance (priority := 100) toAlgEquivClass : AlgEquivClass F R A B`\n`- instance (priority := 100) toAlgHomClass (F R A B : Type*) [CommSemiring R] [Semiring A]`\n`- instance (priority := 100) toBialgHomClass : BialgHomClass F R A B`\n`- instance (priority := 100) toLinearEquivClass (F R A B : Type*) [CommSemiring R]`\n`- instance (priority := 100) {F R S A B : Type*}`\n`- instance (priority := 50) {F A B : Type*} [Add A] [Mul A] [Star A] [Add B] [Mul B] [Star B]`\n`- instance [Bot α] [Bot β] [BotHomClass F α β] : CoeTC F (BotHom α β)`\n`- instance [Mul α] [Mul β] [MulEquivClass F α β] : CoeTC F (α ≃* β)`\n`- instance [Top α] [Top β] [TopHomClass F α β] : CoeTC F (TopHom α β)`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-26T07:21:12Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9094b6de64f94477f17a1a97fd848eb634a34783",
                "additions": 124,
                "deletions": 122,
                "committedDate": "2024-12-26T07:19:20Z",
                "author": {
                  "name": "Jovan Gerbscheid",
                  "email": "jovan.gerbscheid@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuPjpw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042084/job/34877989799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuPjqA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042080/job/34877989800"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuPjrw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042088/job/34877989807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOdyg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877971914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOdtw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34877971895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuPk3Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042078/job/34877990109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOe6w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877972203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOeRw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34877972039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuPkXg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042078/job/34877989982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOevw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34877972159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOeWw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877972059"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuOfYQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877972321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHu3IWw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34878638171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuPt9w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34877992439"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHuQN_A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20252&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-26T07:20:21Z",
        "deletions": 122,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/Equiv.lean",
              "additions": 9,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Algebra/Hom.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Algebra/NonUnitalHom.lean",
              "additions": 14,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Group/Equiv/Basic.lean",
              "additions": 9,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Hom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/HierarchyDesign.lean",
              "additions": 9,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Equiv/Defs.lean",
              "additions": 10,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Ring/Equiv.lean",
              "additions": 9,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Star/StarRingHom.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Order/Hom/Bounded.lean",
              "additions": 17,
              "deletions": 17
            },
            {
              "path": "Mathlib/Order/Hom/CompleteLattice.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Hom/Lattice.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Bialgebra/Equiv.lean",
              "additions": 10,
              "deletions": 12
            },
            {
              "path": "Mathlib/RingTheory/Coalgebra/Equiv.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Maps.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Norm/AbsNorm.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Over.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Equiv.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/MetricSpace/DilationEquiv.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Order/Hom/Esakia.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "implicitInsts",
        "headRefOid": "9094b6de64f94477f17a1a97fd848eb634a34783",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6GPDpG",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20252,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2MzU1MjQ4",
              "login": "JovanGerb"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuPjpw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042084/job/34877989799"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuPjqA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042080/job/34877989800"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuPjrw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042088/job/34877989807"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOdyg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877971914"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOdtw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34877971895"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuPk3Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042078/job/34877990109"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOe6w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877972203"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOeRw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34877972039"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuPkXg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501042078/job/34877989982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOevw",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34877972159"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOeWw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877972059"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuOfYQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033618/job/34877972321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHu3IWw",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12501033614/job/34878638171"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuPt9w",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34877992439"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIHuQN_A",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20252&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "perf: write instance hypotheses with `{}` brackets if it is outParam …",
        "updatedAt": "2025-01-14T23:08:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20252",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ConvertToDraftEvent",
              "id": "CTDE_lADOFcwZ1c6keP7xzwAAAAOrmVQ5",
              "createdAt": "2024-12-26T07:20:28Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YuMuq",
              "createdAt": "2024-12-26T07:21:12Z",
              "body": "### PR summary [9094b6de64](https://github.com/leanprover-community/mathlib4/pull/20252/commits/9094b6de64f94477f17a1a97fd848eb634a34783)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (priority := 100) : SemilinearMapClass F σ M M₂`\n`+ instance (priority := 100) BoundedOrderHomClass.toBotHomClass`\n`+ instance (priority := 100) BoundedOrderHomClass.toTopHomClass`\n`+ instance (priority := 100) OrderIsoClass.toBotHomClass {_ : LE α} [OrderBot α]`\n`+ instance (priority := 100) OrderIsoClass.toBoundedOrderHomClass {_ : LE α} [BoundedOrder α]`\n`+ instance (priority := 100) OrderIsoClass.toTopHomClass {_ : LE α} [OrderTop α]`\n`+ instance (priority := 100) continuousSemilinearMapClass {_ : EquivLike F M M₂}`\n`+ instance (priority := 100) instMonoidHomClass (F : Type*)`\n`+ instance (priority := 100) toAddEquivClass {_ : Mul R} {_ : Add R} {_ : Mul S} {_ : Add S}`\n`+ instance (priority := 100) toAlgEquivClass {F : Type*} {R A B : outParam Type*} {_ : CommSemiring R}`\n`+ instance (priority := 100) toAlgHomClass : AlgHomClass F R A B`\n`+ instance (priority := 100) toBialgHomClass {F : Type*} {R A B : outParam Type*} {_ : CommSemiring R}`\n`+ instance (priority := 100) toLinearEquivClass : LinearEquivClass F R A B`\n`+ instance (priority := 100) {A B R : Type*} {_ : CommSemiring R} {_ : Semiring A} {_ : Semiring B}`\n`+ instance (priority := 100) {F : Type*} [FunLike F A B]`\n`+ instance (priority := 100) {_ : EquivLike F M M₂}`\n`+ instance (priority := 100) {_ : EquivLike F X Y} [DilationEquivClass F X Y] : DilationClass F X Y`\n`+ instance (priority := 50) {F A B : Type*} {_ : Add A} {_ : Mul A} {_ : Star A} {_ : Add B}`\n`+ instance : CoeTC F (A ≃ₐ[R] B)`\n`+ instance : CoeTC F (α ≃* β)`\n`+ instance {_ : Bot α} {_ : Bot β} [BotHomClass F α β] : CoeTC F (BotHom α β)`\n`+ instance {_ : Top α} {_ : Top β} [TopHomClass F α β] : CoeTC F (TopHom α β)`\n`+ toMulEquiv`\n`+ toMulEquiv_injective`\n`- MulEquivClass.toMulEquiv`\n`- MulEquivClass.toMulEquiv_injective`\n`- instance (F R A B : Type*) [CommSemiring R] [Semiring A] [Semiring B] [Algebra R A] [Algebra R B]`\n`- instance (priority := 100) BoundedOrderHomClass.toBotHomClass [LE α] [LE β]`\n`- instance (priority := 100) BoundedOrderHomClass.toTopHomClass [LE α] [LE β]`\n`- instance (priority := 100) OrderIsoClass.toBotHomClass [LE α] [OrderBot α]`\n`- instance (priority := 100) OrderIsoClass.toBoundedOrderHomClass [LE α] [BoundedOrder α]`\n`- instance (priority := 100) OrderIsoClass.toTopHomClass [LE α] [OrderTop α]`\n`- instance (priority := 100) [EquivLike F M M₂]`\n`- instance (priority := 100) [EquivLike F X Y] [DilationEquivClass F X Y] : DilationClass F X Y`\n`- instance (priority := 100) [FunLike F A B] [AlgHomClass F R A B] : NonUnitalAlgHomClass F R A B`\n`- instance (priority := 100) [RingHomInvPair σ σ'] [RingHomInvPair σ' σ]`\n`- instance (priority := 100) continuousSemilinearMapClass [EquivLike F M M₂]`\n`- instance (priority := 100) instMonoidHomClass`\n`- instance (priority := 100) toAddEquivClass [Mul R] [Add R]`\n`- instance (priority := 100) toAlgEquivClass : AlgEquivClass F R A B`\n`- instance (priority := 100) toAlgHomClass (F R A B : Type*) [CommSemiring R] [Semiring A]`\n`- instance (priority := 100) toBialgHomClass : BialgHomClass F R A B`\n`- instance (priority := 100) toLinearEquivClass (F R A B : Type*) [CommSemiring R]`\n`- instance (priority := 100) {F R S A B : Type*}`\n`- instance (priority := 50) {F A B : Type*} [Add A] [Mul A] [Star A] [Add B] [Mul B] [Star B]`\n`- instance [Bot α] [Bot β] [BotHomClass F α β] : CoeTC F (BotHom α β)`\n`- instance [Mul α] [Mul β] [MulEquivClass F α β] : CoeTC F (α ≃* β)`\n`- instance [Top α] [Top β] [TopHomClass F α β] : CoeTC F (TopHom α β)`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6keP7xzwAAAAOwawQ9",
              "createdAt": "2025-01-07T21:51:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6keP7xzwAAAAO1kx9W",
              "createdAt": "2025-01-14T23:07:51Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6keP7xzwAAAAO1kzfA",
              "createdAt": "2025-01-14T23:08:44Z"
            }
          ]
        }
      }
    }
  }
}
