{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 74,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mo271"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-09-21T02:30:14Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5m5yqD",
              "body": "@MichaelStollBayreuth adding you here, because of the helpful suggestions in #7010.",
              "createdAt": "2023-09-19T20:31:02Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5m6kS-",
              "body": "Can we add some \"obvious\" lemmas about change level here, like `change_level_self` for `n | n` is the identity map, and `change_level_trans` saying that if `n | m | r` then changing level twice is the same as changing just once",
              "createdAt": "2023-09-19T22:33:45Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5m79gO",
              "body": "> Can we add some \"obvious\" lemmas about change level here, like `change_level_self` for `n | n` is the identity map, and `change_level_trans` saying that if `n | m | r` then changing level twice is the same as changing just once\r\n\r\nI was going to do that in a follow-up pull request in order to keep them small, but I'm happy to do it here now. Added those.",
              "createdAt": "2023-09-20T05:27:19Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5m-7pI",
              "body": "> > Can we add some \"obvious\" lemmas about change level here, like `change_level_self` for `n | n` is the identity map, and `change_level_trans` saying that if `n | m | r` then changing level twice is the same as changing just once\n> \n> I was going to do that in a follow-up pull request in order to keep them small, but I'm happy to do it here now. Added those.\n\nI appreciate that! I think there is some sort of happy medium around 100 lines for a new Def + the basic lemmas to be sure that the Def works as intended.",
              "createdAt": "2023-09-20T13:48:53Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nA2TL",
              "body": "Should the indentation in\r\n```lean\r\nlemma toUnitHom_eq_char' {a : ZMod n} (ha : IsUnit a) :\r\n  χ a = χ.toUnitHom ha.unit := by simp\r\n\r\nlemma toUnitHom_eq_iff (ψ : DirichletCharacter R n) :\r\n  toUnitHom χ = toUnitHom ψ ↔ χ = ψ := by simp\r\n\r\nlemma eval_modulus_sub (x : ZMod n) :\r\n  χ (n - x) = χ (-x) := by simp\r\n```\r\nalso be changed (to indent by 4 for statements on the line(s) after \":\")?",
              "createdAt": "2023-09-20T18:59:55Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nBOFQ",
              "body": "> also be changed (to indent by 4 for statements on the line(s) after \":\")?\r\n\r\nI just put them on one line.",
              "createdAt": "2023-09-20T20:21:09Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nBQDa",
              "body": "Looks good to me now!",
              "createdAt": "2023-09-20T20:28:19Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nBpiP",
              "body": "🚀 Pull request has been placed on the maintainer queue by alexjbest.",
              "createdAt": "2023-09-20T22:02:51Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nCXuk",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6256222145/job/16986731762)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6256222145/job/16986731622)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6256222145/job/16986731495)",
              "createdAt": "2023-09-21T02:30:13Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6394171de939d67c4240d8780087ae14350934de",
                "additions": 44,
                "deletions": 1,
                "committedDate": "2023-09-19T20:19:18Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2a9e5ad0b07e8e8d05616e4f71bf2486e09fde35",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-19T20:29:38Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e419f62d3af8977b7a9a148a73b4dbb91f5e5070",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-19T20:30:19Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e9937832491a02efa083ff7604176725b42c2e74",
                "additions": 24,
                "deletions": 1,
                "committedDate": "2023-09-20T05:25:02Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d27ac215bf094c7fa94cf535c8c8d684a9213e1f",
                "additions": 14,
                "deletions": 14,
                "committedDate": "2023-09-20T13:44:34Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4a29859a09942f15677ad053218b1fff303cb859",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-20T13:49:11Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9f1237e072c98d3942bdc4df215e6e063d676f45",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-09-20T13:50:37Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "06b3f4e23314e027a1da2ebca8472f210b3802a8",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-09-20T14:35:08Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7db676c2ad901871b39fc6d6850dd92286cfb23d",
                "additions": 8,
                "deletions": 4,
                "committedDate": "2023-09-20T14:42:18Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "59c4b2ec0f48be45b343cc86a2b151db90c6c1d2",
                "additions": 8,
                "deletions": 10,
                "committedDate": "2023-09-20T18:24:20Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "783d8e04469bea5e86cccea722fab6d1eeef597f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-20T18:42:09Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "92aaa9fff6467349362bf1475752a03e067b22e8",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-09-20T18:42:17Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6cfd2855a4f782174f0bc5a14f257eeff51a27f3",
                "additions": 3,
                "deletions": 6,
                "committedDate": "2023-09-20T20:20:27Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-19T20:20:39Z",
        "deletions": 10,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/ZMod/Basic.lean",
              "additions": 7,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/ZMod/Units.lean",
              "additions": 33,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/DirichletCharacter/Basic.lean",
              "additions": 33,
              "deletions": 8
            }
          ]
        },
        "headRefName": "mo271/change_level",
        "headRefOid": "6cfd2855a4f782174f0bc5a14f257eeff51a27f3",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5atuXi",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5hjB2v",
              "body": "maintainer merge",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-20T22:02:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hhzrx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T18:18:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hjuC7",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-21T01:54:37Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7263,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5hZxMc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-19T20:32:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hdQ_a",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T08:45:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hdRyD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T08:47:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hdWsj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T08:52:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hdhr0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T09:09:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hfp8K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-20T13:44:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hfsx-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-20T13:49:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hftY0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-20T13:50:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hgMNr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-20T14:44:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hhtKm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T18:01:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hhvbt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T18:06:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hhwNT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T18:08:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hhwpn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T18:10:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hhzrx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2023-09-20T18:18:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hh11a",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-20T18:25:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hh6v-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-20T18:38:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hh676",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-20T18:38:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hjB2v",
              "body": "maintainer merge",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-20T22:02:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5hjuC7",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-21T01:54:37Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PUHBL",
                    "body": "I didn't find a good place for this, so I made a new file. We already have `Data.Int.Units` and `Data.Nat.Units`, so why not also `Data.ZMod.Units`. \r\n ",
                    "createdAt": "2023-09-19T20:32:56Z",
                    "author": {
                      "login": "mo271"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZRbz",
                    "body": "done",
                    "createdAt": "2023-09-20T18:24:37Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PWW3a",
                    "body": "Shouldn't this be `changeLevel` according to point 4 of the naming convention?",
                    "createdAt": "2023-09-20T08:45:56Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PX4SN",
                    "body": "yes, I suppose. Done",
                    "createdAt": "2023-09-20T13:44:50Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PWXZF",
                    "body": "Is there a reason why you are not using `ZMod.unitsMap` here?",
                    "createdAt": "2023-09-20T08:47:24Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PX6Ge",
                    "body": "nope, just forgot to replace this instance of it...",
                    "createdAt": "2023-09-20T13:49:40Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PWavd",
                    "body": "You can leave out `ZMod.` as you are in the namespace here.",
                    "createdAt": "2023-09-20T08:52:21Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PX6f3",
                    "body": "done",
                    "createdAt": "2023-09-20T13:50:46Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PWh_S",
                    "body": "Maybe add the `comp` (EDITED, was `trans`) lemma here:\r\n```lean\r\nlemma castHom_comp {m d : ℕ} (hm : n ∣ m) (hd : m ∣ d) :\r\n  (castHom hm (ZMod n)).comp (castHom hd (ZMod m)) = castHom (dvd_trans hm hd) (ZMod n) :=\r\n    Subsingleton.elim _ _\r\n\r\nlemma unitsMap_comp {m d : ℕ} (hm : n ∣ m) (hd : m ∣ d) :\r\n  (unitsMap hm).comp (unitsMap hd) = unitsMap (dvd_trans hm hd) := by\r\n    simp only [unitsMap_def]\r\n    rw [← Units.map_comp]\r\n    exact congr_arg Units.map <| congr_arg RingHom.toMonoidHom <| castHom_comp hm hd\r\n```\r\nand use that for the proof of `changeLevel_trans` later?",
                    "createdAt": "2023-09-20T09:09:34Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PYNzk",
                    "body": "Good idea! I did that (castHom_comp` was already there...).",
                    "createdAt": "2023-09-20T14:44:27Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZL6B",
                    "body": "```lean\r\n  simp [changeLevel]\r\n```\r\nis enough.",
                    "createdAt": "2023-09-20T18:01:24Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZRfp",
                    "body": "done",
                    "createdAt": "2023-09-20T18:24:52Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZNSf",
                    "body": "`Subsingleton.elim _ _` works, too.",
                    "createdAt": "2023-09-20T18:06:46Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZRbA",
                    "body": "done",
                    "createdAt": "2023-09-20T18:24:34Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZNxu",
                    "body": "Perhaps also add\r\n```lean\r\n@[simp]\r\nlemma unitsMap_self (n : ℕ) : unitsMap (dvd_refl n) = MonoidHom.id _ := by\r\n  simp [unitsMap, castHom_self]\r\n```",
                    "createdAt": "2023-09-20T18:08:53Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZReE",
                    "body": "done",
                    "createdAt": "2023-09-20T18:24:46Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZODm",
                    "body": "`simp [changeLevel, ZMod.castHom_self]`\r\n",
                    "createdAt": "2023-09-20T18:10:08Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZRhL",
                    "body": "done",
                    "createdAt": "2023-09-20T18:24:59Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZQBZ",
                    "body": "`simp [changeLevel_def, MonoidHom.comp_assoc, ZMod.unitsMap_comp]`",
                    "createdAt": "2023-09-20T18:18:28Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZRi2",
                    "body": "done",
                    "createdAt": "2023-09-20T18:25:04Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZUg3",
                    "body": "```suggestion\r\n    changeLevel (dvd_trans hm hd) χ = changeLevel hd (changeLevel hm χ) := by\r\n```",
                    "createdAt": "2023-09-20T18:38:18Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PZUom",
                    "body": "```suggestion\r\n    (unitsMap hm).comp (unitsMap hd) = unitsMap (dvd_trans hm hd) := by\r\n  simp only [unitsMap_def]\r\n  rw [← Units.map_comp]\r\n  exact congr_arg Units.map <| congr_arg RingHom.toMonoidHom <| castHom_comp hm hd\r\n```",
                    "createdAt": "2023-09-20T18:38:49Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "U_kgDOBfNrCg",
              "login": "MichaelStollBayreuth"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: changeLevel for Dirichlet characters",
        "updatedAt": "2023-09-21T02:30:19Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7263",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6394171de939d67c4240d8780087ae14350934de"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2a9e5ad0b07e8e8d05616e4f71bf2486e09fde35"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e419f62d3af8977b7a9a148a73b4dbb91f5e5070"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m5yqD",
              "createdAt": "2023-09-19T20:31:02Z",
              "body": "@MichaelStollBayreuth adding you here, because of the helpful suggestions in #7010.",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hZxMc",
              "createdAt": "2023-09-19T20:32:56Z",
              "body": "",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xd7YbzwAAAAJsyZ4Q",
              "createdAt": "2023-09-19T20:33:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xd7YbzwAAAAJsyZ4T",
              "createdAt": "2023-09-19T20:33:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xd7YbzwAAAAJsy6wu",
              "createdAt": "2023-09-19T20:51:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m6kS-",
              "createdAt": "2023-09-19T22:33:45Z",
              "body": "Can we add some \"obvious\" lemmas about change level here, like `change_level_self` for `n | n` is the identity map, and `change_level_trans` saying that if `n | m | r` then changing level twice is the same as changing just once",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e9937832491a02efa083ff7604176725b42c2e74"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m79gO",
              "createdAt": "2023-09-20T05:27:19Z",
              "body": "> Can we add some \"obvious\" lemmas about change level here, like `change_level_self` for `n | n` is the identity map, and `change_level_trans` saying that if `n | m | r` then changing level twice is the same as changing just once\r\n\r\nI was going to do that in a follow-up pull request in order to keep them small, but I'm happy to do it here now. Added those.",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hdQ_a",
              "createdAt": "2023-09-20T08:45:56Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hdRyD",
              "createdAt": "2023-09-20T08:47:24Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hdWsj",
              "createdAt": "2023-09-20T08:52:20Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hdhr0",
              "createdAt": "2023-09-20T09:09:33Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d27ac215bf094c7fa94cf535c8c8d684a9213e1f"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5m-7pI",
              "createdAt": "2023-09-20T13:48:53Z",
              "body": "> > Can we add some \"obvious\" lemmas about change level here, like `change_level_self` for `n | n` is the identity map, and `change_level_trans` saying that if `n | m | r` then changing level twice is the same as changing just once\n> \n> I was going to do that in a follow-up pull request in order to keep them small, but I'm happy to do it here now. Added those.\n\nI appreciate that! I think there is some sort of happy medium around 100 lines for a new Def + the basic lemmas to be sure that the Def works as intended.",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4a29859a09942f15677ad053218b1fff303cb859"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9f1237e072c98d3942bdc4df215e6e063d676f45"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "06b3f4e23314e027a1da2ebca8472f210b3802a8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7db676c2ad901871b39fc6d6850dd92286cfb23d"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hhtKm",
              "createdAt": "2023-09-20T18:01:24Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hhvbt",
              "createdAt": "2023-09-20T18:06:45Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hhwNT",
              "createdAt": "2023-09-20T18:08:53Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hhwpn",
              "createdAt": "2023-09-20T18:10:08Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hhzrx",
              "createdAt": "2023-09-20T18:18:28Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "59c4b2ec0f48be45b343cc86a2b151db90c6c1d2"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hh6v-",
              "createdAt": "2023-09-20T18:38:18Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hh676",
              "createdAt": "2023-09-20T18:38:49Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "783d8e04469bea5e86cccea722fab6d1eeef597f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "92aaa9fff6467349362bf1475752a03e067b22e8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nA2TL",
              "createdAt": "2023-09-20T18:59:55Z",
              "body": "Should the indentation in\r\n```lean\r\nlemma toUnitHom_eq_char' {a : ZMod n} (ha : IsUnit a) :\r\n  χ a = χ.toUnitHom ha.unit := by simp\r\n\r\nlemma toUnitHom_eq_iff (ψ : DirichletCharacter R n) :\r\n  toUnitHom χ = toUnitHom ψ ↔ χ = ψ := by simp\r\n\r\nlemma eval_modulus_sub (x : ZMod n) :\r\n  χ (n - x) = χ (-x) := by simp\r\n```\r\nalso be changed (to indent by 4 for statements on the line(s) after \":\")?",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6cfd2855a4f782174f0bc5a14f257eeff51a27f3"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nBOFQ",
              "createdAt": "2023-09-20T20:21:09Z",
              "body": "> also be changed (to indent by 4 for statements on the line(s) after \":\")?\r\n\r\nI just put them on one line.",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nBQDa",
              "createdAt": "2023-09-20T20:28:19Z",
              "body": "Looks good to me now!",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hjB2v",
              "createdAt": "2023-09-20T22:02:38Z",
              "body": "maintainer merge",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nBpiP",
              "createdAt": "2023-09-20T22:02:51Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by alexjbest.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5hjuC7",
              "createdAt": "2023-09-21T01:54:37Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5xd7YbzwAAAAJtoIuN",
              "createdAt": "2023-09-21T01:54:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5xd7YbzwAAAAJtoIvC",
              "createdAt": "2023-09-21T01:54:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nCXuk",
              "createdAt": "2023-09-21T02:30:13Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6256222145/job/16986731762)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6256222145/job/16986731622)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6256222145/job/16986731495)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5xd7YbzwAAAAJtozt6",
              "createdAt": "2023-09-21T02:30:14Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5xd7YbzwAAAAJtozyl",
              "createdAt": "2023-09-21T02:30:19Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
