{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 236,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY2ODQ3MjYy",
              "login": "EtienneC30"
            }
          ]
        },
        "author": {
          "login": "RemyDegenne"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "From the TestingLowerBounds project.\r\nCo-authored-by: Lorenzo Luccioli\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\nThis will be used in #21053 to define the KL divergence.\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6emJiQ",
              "body": "### PR summary [fd9d39fdb7](https://github.com/leanprover-community/mathlib4/pull/21901/commits/fd9d39fdb7d04b7261146335048815289aa47c41)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.InformationTheory.KullbackLeibler.KLFun` (new file)|2079|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ continuous_klFun`\n`+ convexOn_Ioi_klFun`\n`+ convexOn_klFun`\n`+ deriv_klFun`\n`+ hasDerivAt_klFun`\n`+ integrable_klFun_rnDeriv_iff`\n`+ integrable_rnDeriv_mul_log_iff`\n`+ integral_klFun_rnDeriv`\n`+ integral_rnDeriv_mul_log`\n`+ isMinOn_klFun`\n`+ klFun`\n`+ klFun_eq_zero_iff`\n`+ klFun_nonneg`\n`+ klFun_one`\n`+ klFun_zero`\n`+ leftDeriv_klFun`\n`+ leftDeriv_klFun_one`\n`+ leftDeriv_mul_log`\n`+ llr_self`\n`+ measurable_klFun`\n`+ not_differentiableAt_klFun_zero`\n`+ not_differentiableWithinAt_klFun_Iio_zero`\n`+ not_differentiableWithinAt_klFun_Ioi_zero`\n`+ rightDeriv_klFun`\n`+ rightDeriv_klFun_one`\n`+ rightDeriv_mul_log`\n`+ strictConvexOn_klFun`\n`+ stronglyMeasurable_klFun`\n`+ tendsto_deriv_mul_log_atTop`\n`+ tendsto_klFun_atTop`\n`+ tendsto_log_nhdsWithin_zero_left`\n`+ tendsto_rightDeriv_klFun_atTop`\n`+ tendsto_rightDeriv_mul_log_atTop`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-15T07:56:07Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6f08pB",
              "body": "The reason for the statements about the right derivative is that in a future series of PRs I intend to add the theory of f-divergences, which are divergences between measures with value `∫ x, f (μ.rnDeriv ν x).toReal ∂ν` plus a term that depends on the limit of the right derivative of `f` at infinity.\r\nFor the divergence to have nice properties, the function `f` needs to be convex, non-negative with minimum 0 at 1. However we don't want to require that `f` is differentiable (at 0, in particular). The total variation divergence is an example of an f-divergence with `f x = |x - 1|/2`. The right derivative of such a function is a non-decreasing right-continuous function (a Stieltjes function in Mathlib terminology) and will also be used to define a measure.\r\n\r\nMy point with all those remarks is that the right derivative is a major player in that theory, and if I want to get properties of the KL by saying that it's an f-divergence, I will benefit from having convenience lemmas about the right derivative of `klFun`.",
              "createdAt": "2025-02-25T10:16:10Z",
              "author": {
                "login": "RemyDegenne"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "1ad8dd156671e38f510f00e00bc82f07ef095e1d",
                "additions": 205,
                "deletions": 1,
                "committedDate": "2025-02-15T07:52:06Z",
                "author": {
                  "name": "Remy Degenne",
                  "email": "remydegenne@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXt9Rg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343122806/job/37270289734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXr_3A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343108333/job/37270257628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxzvNoQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495680152/job/37702323617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxzu4MQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495678006/job/37702318129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0MDmQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495834025/job/37702796185"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0UMjg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495878349/job/37702929550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXt9cg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343122803/job/37270289778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXt9VA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343122805/job/37270289748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxzu-Eg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495678015/job/37702319634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0MDvg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495833995/job/37702796222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0ULzw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495878335/job/37702929359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXt9Sg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343122804/job/37270289738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIxzu9cg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495678022/job/37702319474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0MDww",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495834002/job/37702796227"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0UM8w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495878334/job/37702929651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXr_vA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343108334/job/37270257596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXt9jQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343122807/job/37270289805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXr_ng",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343108333/job/37270257566"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXr_mg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343108334/job/37270257562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXt9Uw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343122807/job/37270289747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXsAGQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343108333/job/37270257689"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrX09mA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13343108334/job/37270404504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXuBJA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37270290724"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIrXuRFQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21901&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "abe5a2e0c503ee0782759e252a6e0f9c627aff50",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-02-24T10:28:30Z",
                "author": {
                  "name": "Rémy Degenne",
                  "email": "remydegenne@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0We6g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890655/job/37702967018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0ldGw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495972154/job/37703212315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx00zXw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13496053654/job/37703463775"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0Wd8Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890872/job/37702966769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0ldwQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495972146/job/37703212481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx00x6A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13496053665/job/37703463400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0We1g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890871/job/37702966998"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0ldEA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495972155/job/37703212304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx00x-g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13496053662/job/37703463418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0Wcyw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890660/job/37702966475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0WfOA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890869/job/37702967096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0WbVQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890660/job/37702966101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0WcBQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890655/job/37702966277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0Wdzg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890869/job/37702966734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0WgcA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890655/job/37702967408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0tyOA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13495890660/job/37703348792"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0W0dQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37702972533"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIx0YDRQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21901&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ceb6f31509592280b4ec1e5dee784bcd963dc846",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2025-02-25T09:31:40Z",
                "author": {
                  "name": "Remy Degenne",
                  "email": "remydegenne@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7dd0174d7f0fbbfc8e5dbfa0e0fd4e91c4cce220",
                "additions": 11,
                "deletions": 2,
                "committedDate": "2025-02-25T09:44:34Z",
                "author": {
                  "name": "Remy Degenne",
                  "email": "remydegenne@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fd9d39fdb7d04b7261146335048815289aa47c41",
                "additions": 36,
                "deletions": 15,
                "committedDate": "2025-02-25T10:04:07Z",
                "author": {
                  "name": "Remy Degenne",
                  "email": "remydegenne@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tM7Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590439/job/37772545261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy3gIqA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518854590/job/37773379752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tYnQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591274/job/37772548253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tZFQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591271/job/37772548373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tNSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590437/job/37772545355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tYpw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591277/job/37772548263"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tPMQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590437/job/37772545841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tPIQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590439/job/37772545825"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2taJg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591277/job/37772548646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2tRiw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590439/job/37772546443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2zB1Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590437/job/37772640725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2t3HA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37772556060"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIy2vheQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21901&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-15T07:55:10Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/Basic.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/NegMulLog.lean",
              "additions": 25,
              "deletions": 0
            },
            {
              "path": "Mathlib/InformationTheory/KullbackLeibler/KLFun.lean",
              "additions": 191,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Decomposition/Lebesgue.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/LogLikelihoodRatio.lean",
              "additions": 15,
              "deletions": 1
            }
          ]
        },
        "headRefName": "RD_klFun",
        "headRefOid": "fd9d39fdb7d04b7261146335048815289aa47c41",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LVPTu",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dJ67f",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "EtienneC30"
              },
              "submittedAt": "2025-02-24T10:32:53Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21901,
        "potentialMergeCommit": {
          "oid": "1f0e67d752508c1c65e1b1c8064473308a56f120"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dJLoe",
              "body": "That's nice. I have one question though, do you really need all those statements about left and right derivatives? I am not sure about the mathlib policy here, but it seems to me that those should not be specialized statements. In particular because in this case the left and right derivatives are in fact true derivatives, I don't see in which case you would need it.",
              "state": "COMMENTED",
              "author": {
                "login": "EtienneC30"
              },
              "submittedAt": "2025-02-24T10:17:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dJ2AE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-02-24T10:25:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dJ3ij",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-02-24T10:27:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dJ67f",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "EtienneC30"
              },
              "submittedAt": "2025-02-24T10:32:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dJ94X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-02-24T10:37:17Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Qk1-",
                    "body": "```suggestion\r\nFor probability measures, any function `f` that differs from `klFun` by an affine function would give\r\n```",
                    "createdAt": "2025-02-24T09:32:17Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QmPf",
                    "body": "Is that true? If I take `f = klFun + 1` the integral won't be the same, I will get a plus one. Maybe you mean any affine function of the form `x => a(x - 1)`?",
                    "createdAt": "2025-02-24T09:36:08Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51Q6Io",
                    "body": "You're right, that's the form I had in mind. I'll fix the text.",
                    "createdAt": "2025-02-24T10:27:52Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QnOT",
                    "body": "Why don't you make the `MeasurableSpace` argument an instance argument?",
                    "createdAt": "2025-02-24T09:38:37Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51Q5TH",
                    "body": "For the lemmas to work, the `MeasurableSpace` has to be the one on which the measures are defined. If I use an instance argument, the measures have to be defined on the default measurable space of the type. If I use as I do an implicit argument, I can also apply the lemmas to a measure on a sub-sigma-algebra, defined with `Measure.trim`.\r\n\r\nIn general, whenever there is a measure, `MeasurableSpace` should be implicit.",
                    "createdAt": "2025-02-24T10:25:32Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51Q7_B",
                    "body": "I see. Am I right in thinking that this principle is not applied in many places of Mathlib? Should this be enforced in future PRs ?",
                    "createdAt": "2025-02-24T10:32:53Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51Q9ov",
                    "body": "I wrote several PRs to apply that principle to existing files (the latest one was #21907), and enforce it in review when I don't forget. I encourage you to do it as well!\r\nBut I also regularly find places that use instance arguments together with measures.",
                    "createdAt": "2025-02-24T10:37:17Z",
                    "author": {
                      "login": "RemyDegenne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QohU",
                    "body": "This is also true for `x=0` since it is not differentiable there. Can you generalize please? Same for the two results below.",
                    "createdAt": "2025-02-24T09:41:59Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51QpUc",
                    "body": "This is therefore a true equality.",
                    "createdAt": "2025-02-24T09:44:16Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51Qr47",
                    "body": "Maybe you can factor out `IsMinOn klFun (Ici 0) 1`.",
                    "createdAt": "2025-02-24T09:50:06Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQwOTQ3MzI=",
              "login": "RemyDegenne"
            },
            {
              "id": "MDQ6VXNlcjY2ODQ3MjYy",
              "login": "EtienneC30"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tM7Q",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590439/job/37772545261"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy3gIqA",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518854590/job/37773379752"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tYnQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591274/job/37772548253"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tZFQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591271/job/37772548373"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tNSw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590437/job/37772545355"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tYpw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591277/job/37772548263"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tPMQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590437/job/37772545841"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tPIQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590439/job/37772545825"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2taJg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518591277/job/37772548646"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2tRiw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590439/job/37772546443"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2zB1Q",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13518590437/job/37772640725"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2t3HA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37772556060"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIy2vheQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21901&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: define klFun, auxiliary function used for the Kullback-Leibler divergence",
        "updatedAt": "2025-02-25T10:17:37Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21901",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1ad8dd156671e38f510f00e00bc82f07ef095e1d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qMKl0zwAAAAPMzW8P",
              "createdAt": "2025-02-15T07:55:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
                "name": "t-measure-probability"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c56nK6A",
              "createdAt": "2025-02-15T07:55:31Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6I-wLn",
                "title": "feat(InformationTheory): define the Kullback-Leibler divergence between two finite measures",
                "url": "https://github.com/leanprover-community/mathlib4/pull/21053"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6emJiQ",
              "createdAt": "2025-02-15T07:56:07Z",
              "body": "### PR summary [fd9d39fdb7](https://github.com/leanprover-community/mathlib4/pull/21901/commits/fd9d39fdb7d04b7261146335048815289aa47c41)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.InformationTheory.KullbackLeibler.KLFun` (new file)|2079|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ continuous_klFun`\n`+ convexOn_Ioi_klFun`\n`+ convexOn_klFun`\n`+ deriv_klFun`\n`+ hasDerivAt_klFun`\n`+ integrable_klFun_rnDeriv_iff`\n`+ integrable_rnDeriv_mul_log_iff`\n`+ integral_klFun_rnDeriv`\n`+ integral_rnDeriv_mul_log`\n`+ isMinOn_klFun`\n`+ klFun`\n`+ klFun_eq_zero_iff`\n`+ klFun_nonneg`\n`+ klFun_one`\n`+ klFun_zero`\n`+ leftDeriv_klFun`\n`+ leftDeriv_klFun_one`\n`+ leftDeriv_mul_log`\n`+ llr_self`\n`+ measurable_klFun`\n`+ not_differentiableAt_klFun_zero`\n`+ not_differentiableWithinAt_klFun_Iio_zero`\n`+ not_differentiableWithinAt_klFun_Ioi_zero`\n`+ rightDeriv_klFun`\n`+ rightDeriv_klFun_one`\n`+ rightDeriv_mul_log`\n`+ strictConvexOn_klFun`\n`+ stronglyMeasurable_klFun`\n`+ tendsto_deriv_mul_log_atTop`\n`+ tendsto_klFun_atTop`\n`+ tendsto_log_nhdsWithin_zero_left`\n`+ tendsto_rightDeriv_klFun_atTop`\n`+ tendsto_rightDeriv_mul_log_atTop`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6qMKl0zwAAAAPNCoAa",
              "createdAt": "2025-02-16T18:37:41Z",
              "assignee": {
                "id": "MDQ6VXNlcjY2ODQ3MjYy",
                "login": "EtienneC30"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dJLoe",
              "createdAt": "2025-02-24T09:32:17Z",
              "body": "That's nice. I have one question though, do you really need all those statements about left and right derivatives? I am not sure about the mathlib policy here, but it seems to me that those should not be specialized statements. In particular because in this case the left and right derivatives are in fact true derivatives, I don't see in which case you would need it.",
              "author": {
                "login": "EtienneC30"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qMKl0zwAAAAPTM18O",
              "createdAt": "2025-02-24T10:17:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "abe5a2e0c503ee0782759e252a6e0f9c627aff50"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ceb6f31509592280b4ec1e5dee784bcd963dc846"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7dd0174d7f0fbbfc8e5dbfa0e0fd4e91c4cce220"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fd9d39fdb7d04b7261146335048815289aa47c41"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6f08pB",
              "createdAt": "2025-02-25T10:16:10Z",
              "body": "The reason for the statements about the right derivative is that in a future series of PRs I intend to add the theory of f-divergences, which are divergences between measures with value `∫ x, f (μ.rnDeriv ν x).toReal ∂ν` plus a term that depends on the limit of the right derivative of `f` at infinity.\r\nFor the divergence to have nice properties, the function `f` needs to be convex, non-negative with minimum 0 at 1. However we don't want to require that `f` is differentiable (at 0, in particular). The total variation divergence is an example of an f-divergence with `f x = |x - 1|/2`. The right derivative of such a function is a non-decreasing right-continuous function (a Stieltjes function in Mathlib terminology) and will also be used to define a measure.\r\n\r\nMy point with all those remarks is that the right derivative is a major player in that theory, and if I want to get properties of the KL by saying that it's an f-divergence, I will benefit from having convenience lemmas about the right derivative of `klFun`.",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qMKl0zwAAAAPUuNyW",
              "createdAt": "2025-02-25T10:17:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            }
          ]
        }
      }
    }
  }
}
