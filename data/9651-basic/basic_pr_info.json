{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 362,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "acmepjz"
        },
        "baseRefName": "master",
        "body": "This PR adds basics about the linearly disjoint fields.\r\nThere are two distinct but closely related definitions:\r\n\r\n- linearly disjoint intermediate fields (`IntermediateField.LinearDisjoint`).\r\n- linearly disjoint abstract fields (`Field.LinearDisjoint`). Currently no results of this being added yet, leave for future PRs.\r\n\r\nMain definitions:\r\n\r\n- `IntermediateField.LinearDisjoint`: an intermediate field `A` of `E / F`\r\n  and an abstract field `L` between `E / F` are linearly disjoint over `F`,\r\n  if they are linearly disjoint as subalgebras (`Subalgebra.LinearDisjoint`).\r\n- `Field.LinearDisjoint`: for two abstract fields `E` and `K` over `F`, they are\r\n  linearly disjoint over `F` (`Field.LinearDisjoint F E K`), if `E ⊗[F] K` is a field.\r\n\r\nMain results:\r\n\r\nEquivalent characterization of linearly disjointness:\r\n\r\n- `IntermediateField.LinearDisjoint.linearIndependent_left`:\r\n  if `A` and `L` are linearly disjoint, then any `F`-linearly independent family on `A` remains\r\n  linearly independent over `L`.\r\n\r\n- `IntermediateField.LinearDisjoint.of_basis_left`:\r\n  conversely, if there exists an `F`-basis of `A` which remains linearly independent over `L`, then\r\n  `A` and `L` are linearly disjoint.\r\n\r\n- `IntermediateField.LinearDisjoint.linearIndependent_right`:\r\n  if `A` and `L` are linearly disjoint, then any `F`-linearly independent family on `L` remains\r\n  linearly independent over `A`.\r\n\r\n- `IntermediateField.LinearDisjoint.of_basis_right`:\r\n  conversely, if there exists an `F`-basis of `L` which remains linearly independent over `A`, then\r\n  `A` and `L` are linearly disjoint.\r\n\r\n- `IntermediateField.LinearDisjoint.linearIndependent_mul`:\r\n  if `A` and `L` are linearly disjoint, then for any family of\r\n  `F`-linearly independent elements `{ a_i }` of `A`, and any family of\r\n  `F`-linearly independent elements `{ b_j }` of `L`, the family `{ a_i * b_j }` in `S` is\r\n  also `F`-linearly independent.\r\n\r\n- `IntermediateField.LinearDisjoint.of_basis_mul`:\r\n  conversely, if `{ a_i }` is an `F`-basis of `A`, if `{ b_j }` is an `F`-basis of `L`,\r\n  such that the family `{ a_i * b_j }` in `E` is `F`-linearly independent,\r\n  then `A` and `L` are linearly disjoint.\r\n\r\nOther main results:\r\n\r\n- `IntermediateField.LinearDisjoint.symm`, `IntermediateField.linearDisjoint_symm`:\r\n  linearly disjoint is symmetric.\r\n\r\n- `IntermediateField.LinearDisjoint.rank_sup_of_isAlgebraic`,\r\n  `IntermediateField.LinearDisjoint.finrank_sup`:\r\n  if `A` and `B` are linearly disjoint,\r\n  then the rank of `A ⊔ B` is equal to the product of the rank of `A` and `B`.\r\n\r\n  **TODO:** remove the algebraic assumptions (the proof becomes complicated).\r\n\r\n- `IntermediateField.LinearDisjoint.of_finrank_sup`:\r\n  conversely, if `A` and `B` are finite extensions,\r\n  such that rank of `A ⊔ B` is equal to the product of the rank of `A` and `B`,\r\n  then `A` and `B` are linearly disjoint.\r\n\r\n- `IntermediateField.LinearDisjoint.of_finrank_coprime`:\r\n  if the rank of `A` and `B` are coprime,\r\n  then `A` and `B` are linearly disjoint.\r\n\r\n- `IntermediateField.LinearDisjoint.inf_eq_bot`:\r\n  if `A` and `B` are linearly disjoint, then they are disjoint.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\ndiscussion: <https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Linearly.20disjoint>\r\n\r\n- [x] depends on: #12434 [part one: submodule version]\r\n  - [x] depends on: #11635\r\n  - [x] depends on: #11598 [need `finsuppTensorFinsupp'_symm_single`]\r\n  - [x] depends on: #11731\r\n  - [x] depends on: #11748\r\n  - [x] depends on: #11859\r\n- [x] depends on: #15346 [part two: subalgebra version]\r\n  - [x] depends on: #12025\r\n  - [x] depends on: #13425\r\n  - [x] depends on: #9626\r\n  - [x] depends on: #12846\r\n  - [x] depends on: #12847\r\n  - [x] depends on: #12849\r\n- [x] depends on: #18515\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-01-11T13:05:46Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/FieldTheory/LinearDisjoint.lean",
              "additions": 361,
              "deletions": 0
            }
          ]
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5jzfXI",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "number": 9651,
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5sPYOs",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-01-11T16:16:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5sRcQP",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2024-01-11T20:01:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5sTrAC",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-01-12T01:10:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5trP6B",
              "state": "COMMENTED",
              "author": {
                "login": "acmepjz"
              },
              "submittedAt": "2024-01-23T22:26:25Z"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYoEw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669404/job/32920446995"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYoLw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669402/job/32920447023"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYrrQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669812/job/32920447917"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYs2A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669808/job/32920448216"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYoUA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669440/job/32920447056"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYtBw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669812/job/32920448263"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYt0Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669808/job/32920448465"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYpgg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669440/job/32920447362"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYvOw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669812/job/32920448827"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYrwg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669808/job/32920447938"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjYwpQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669812/job/32920449189"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqju5wg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11816669808/job/32920811970"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjY-0A",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32920452816"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHqjaAYg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=9651&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(FieldTheory/LinearDisjoint): definition and basic properties of linearly disjoint of fields",
        "updatedAt": "2024-11-13T11:52:11Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/9651"
      }
    }
  }
}
