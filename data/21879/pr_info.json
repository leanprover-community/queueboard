{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1170,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "apnelson1"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "In accordance with [emerging guidelines](https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Naming.20conventions.20for.20.60Prop.60-valued.20defs.20and.20classes), and to minimize impact on the growing API, we rename `Noun`-style matroid predicates to `IsNoun`, deprecating the old names in each case. \r\n\r\nThis includes\r\n`Base` -> `IsBase`\r\n`Basis` -> `IsBasis`\r\n`Basis'` -> `IsBasis'`\r\n`Circuit` -> `IsCircuit`\r\n`Flat` -> `IsFlat`\r\n`Restriction` -> `IsRestriction`. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 11,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6eiN8r",
              "body": "### PR summary [1d5def05ba](https://github.com/leanprover-community/mathlib4/pull/21879/commits/1d5def05baf2dc89117d7a0f368fca0fa9ef998f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Base`\n`+ Base.isBasis_of_isRestriction`\n`+ Coindep.exists_isBase_subset_compl`\n`+ Coindep.exists_subset_compl_isBase`\n`+ Dep.dep_isRestriction`\n`+ Dep.exists_isCircuit_subset`\n`+ Dep.of_isRestriction`\n`+ Indep.cardinalMk_le_isBase`\n`+ Indep.cardinalMk_le_isBasis`\n`+ Indep.cardinalMk_le_isBasis'`\n`+ Indep.closure_eq_setOf_isBasis_insert`\n`+ Indep.eq_of_isBasis`\n`+ Indep.exists_insert_of_not_isBase`\n`+ Indep.exists_insert_of_not_isBasis`\n`+ Indep.exists_isBase_subset_spanning`\n`+ Indep.exists_isBase_subset_union_isBase`\n`+ Indep.exists_isBase_superset`\n`+ Indep.exists_isBasis_subset_union_isBasis`\n`+ Indep.fundCircuit_isCircuit`\n`+ Indep.indep_isRestriction`\n`+ Indep.insert_isBasis_iff_mem_closure`\n`+ Indep.insert_isCircuit_of_forall`\n`+ Indep.insert_isCircuit_of_forall_of_nontrivial`\n`+ Indep.inter_IsBasis_biInter`\n`+ Indep.inter_IsBasis_iInter`\n`+ Indep.inter_IsBasis_sInter`\n`+ Indep.inter_isBasis_closure_iff_subset_closure_inter`\n`+ Indep.isBase_iff_ground_subset_closure`\n`+ Indep.isBase_of_cRank_le`\n`+ Indep.isBase_of_cRank_le_of_finite`\n`+ Indep.isBase_of_forall_insert`\n`+ Indep.isBase_of_ground_subset_closure`\n`+ Indep.isBase_of_maximal`\n`+ Indep.isBase_of_spanning`\n`+ Indep.isBasis_closure`\n`+ Indep.isBasis_iff_forall_insert_dep`\n`+ Indep.isBasis_insert_iff`\n`+ Indep.isBasis_of_forall_insert`\n`+ Indep.isBasis_of_maximal_subset`\n`+ Indep.isBasis_of_subset_of_subset_closure`\n`+ Indep.isBasis_self`\n`+ Indep.isBasis_setOf_insert_isBasis`\n`+ Indep.of_isRestriction`\n`+ Indep.subset_finite_isBasis'_of_subset_of_isRkFinite`\n`+ Indep.subset_finite_isBasis_of_subset_of_isRkFinite`\n`+ Indep.subset_isBasis'_of_subset`\n`+ Indep.subset_isBasis_of_subset`\n`+ IsBase.cardinalMk_diff_comm`\n`+ IsBase.cardinalMk_eq`\n`+ IsBase.cardinalMk_eq_cRank`\n`+ IsBase.cardinalMk_le_cRank`\n`+ IsBase.closure_eq`\n`+ IsBase.closure_of_superset`\n`+ IsBase.compl_inter_isBasis_of_inter_isBasis`\n`+ IsBase.compl_isBase_dual`\n`+ IsBase.compl_isBase_of_dual`\n`+ IsBase.dep_of_insert`\n`+ IsBase.dep_of_ssubset`\n`+ IsBase.diff_finite_comm`\n`+ IsBase.diff_infinite_comm`\n`+ IsBase.encard_diff_comm`\n`+ IsBase.encard_eq_encard_of_isBase`\n`+ IsBase.eq_exchange_of_diff_eq_singleton`\n`+ IsBase.eq_of_subset_indep`\n`+ IsBase.eq_of_subset_isBase`\n`+ IsBase.eq_of_superset_spanning`\n`+ IsBase.eq_union_image_of_disjointSum`\n`+ IsBase.exchange`\n`+ IsBase.exchange_isBase_of_indep`\n`+ IsBase.exchange_isBase_of_indep'`\n`+ IsBase.exchange_mem`\n`+ IsBase.exists_insert_of_ssubset`\n`+ IsBase.finite`\n`+ IsBase.finite_of_finite`\n`+ IsBase.fundCircuit_isCircuit`\n`+ IsBase.indep`\n`+ IsBase.infinite`\n`+ IsBase.infinite_of_infinite`\n`+ IsBase.insert_dep`\n`+ IsBase.insert_not_isBase`\n`+ IsBase.inter_isBasis_iff_compl_inter_isBasis_dual`\n`+ IsBase.isBase_of_isBasis_superset`\n`+ IsBase.isBasis_ground`\n`+ IsBase.isBasis_of_subset`\n`+ IsBase.map`\n`+ IsBase.mapEmbedding`\n`+ IsBase.mem_of_insert_indep`\n`+ IsBase.ncard_diff_comm`\n`+ IsBase.ncard_eq_ncard_of_isBase`\n`+ IsBase.nonempty`\n`+ IsBase.not_isBase_of_ssubset`\n`+ IsBase.rankFinite_of_finite`\n`+ IsBase.rankInfinite_of_infinite`\n`+ IsBase.rankPos_of_nonempty`\n`+ IsBase.spanning`\n`+ IsBase.spanning_of_superset`\n`+ IsBase.ssubset_ground`\n`+ IsBase.subset_ground`\n`+ IsBasis`\n`+ IsBasis'`\n`+ IsBasis'.cardinalMk_diff_comm`\n`+ IsBasis'.cardinalMk_eq`\n`+ IsBasis'.cardinalMk_eq_cRk`\n`+ IsBasis'.cardinalMk_le_cRk`\n`+ IsBasis'.closure_eq_closure`\n`+ IsBasis'.encard_eq_encard`\n`+ IsBasis'.eq_of_subset_indep`\n`+ IsBasis'.finite_iff_isRkFinite`\n`+ IsBasis'.finite_of_isRkFinite`\n`+ IsBasis'.indep`\n`+ IsBasis'.insert_not_indep`\n`+ IsBasis'.inter_eq_of_subset_indep`\n`+ IsBasis'.isBase_restrict`\n`+ IsBasis'.isBasis`\n`+ IsBasis'.isBasis_closure_right`\n`+ IsBasis'.isBasis_inter_ground`\n`+ IsBasis'.isRkFinite_of_finite`\n`+ IsBasis'.mem_of_insert_indep`\n`+ IsBasis'.subset`\n`+ IsBasis.Finite`\n`+ IsBasis.base_of_base_subset`\n`+ IsBasis.cardinalMk_diff_comm`\n`+ IsBasis.cardinalMk_eq`\n`+ IsBasis.cardinalMk_eq_cRk`\n`+ IsBasis.cardinalMk_le_cRk`\n`+ IsBasis.closure_eq_closure`\n`+ IsBasis.closure_eq_right`\n`+ IsBasis.closure_inter_isBasis_closure`\n`+ IsBasis.dep_of_ssubset`\n`+ IsBasis.encard_eq_encard`\n`+ IsBasis.eq_exchange_of_diff_eq_singleton`\n`+ IsBasis.eq_of_closure_subset`\n`+ IsBasis.eq_of_subset_indep`\n`+ IsBasis.exchange`\n`+ IsBasis.exists_isBase`\n`+ IsBasis.exists_isBasis_inter_eq_of_superset`\n`+ IsBasis.finite_iff_isRkFinite`\n`+ IsBasis.finite_of_isRkFinite`\n`+ IsBasis.iUnion_isBasis_iUnion`\n`+ IsBasis.indep`\n`+ IsBasis.insert_dep`\n`+ IsBasis.insert_isBasis_insert`\n`+ IsBasis.insert_isBasis_insert_of_not_mem_closure`\n`+ IsBasis.inter_eq_of_subset_indep`\n`+ IsBasis.isBase_of_spanning`\n`+ IsBasis.isBase_restrict`\n`+ IsBasis.isBasis'`\n`+ IsBasis.isBasis_closure_right`\n`+ IsBasis.isBasis_iUnion`\n`+ IsBasis.isBasis_inter_ground`\n`+ IsBasis.isBasis_isRestriction`\n`+ IsBasis.isBasis_of_closure_eq_closure`\n`+ IsBasis.isBasis_of_isBasis_of_subset_of_subset`\n`+ IsBasis.isBasis_restrict_of_subset`\n`+ IsBasis.isBasis_sUnion`\n`+ IsBasis.isBasis_subset`\n`+ IsBasis.isBasis_union`\n`+ IsBasis.isBasis_union_of_subset`\n`+ IsBasis.isRkFinite_of_finite`\n`+ IsBasis.left_subset_ground`\n`+ IsBasis.map`\n`+ IsBasis.mapEmbedding`\n`+ IsBasis.mem_of_insert_indep`\n`+ IsBasis.not_isBasis_of_ssubset`\n`+ IsBasis.of_isRestriction`\n`+ IsBasis.restrict_base`\n`+ IsBasis.spanning_iff_spanning`\n`+ IsBasis.subset`\n`+ IsBasis.subset_closure`\n`+ IsBasis.subset_ground`\n`+ IsBasis.transfer`\n`+ IsBasis.union_isBasis_union`\n`+ IsCircuit`\n`+ IsCircuit.closure_diff_singleton_eq`\n`+ IsCircuit.dep`\n`+ IsCircuit.diff_singleton_indep`\n`+ IsCircuit.diff_singleton_isBasis`\n`+ IsCircuit.elimination`\n`+ IsCircuit.eq_fundCircuit_of_subset`\n`+ IsCircuit.eq_of_dep_subset`\n`+ IsCircuit.eq_of_not_indep_subset`\n`+ IsCircuit.eq_of_subset_isCircuit`\n`+ IsCircuit.eq_of_superset_isCircuit`\n`+ IsCircuit.finite`\n`+ IsCircuit.isBasis_iff_eq_diff_singleton`\n`+ IsCircuit.isBasis_iff_insert_eq`\n`+ IsCircuit.isCircuit_restrict_of_subset`\n`+ IsCircuit.mem_closure_diff_singleton_of_mem`\n`+ IsCircuit.minimal`\n`+ IsCircuit.minimal_not_indep`\n`+ IsCircuit.nonempty`\n`+ IsCircuit.not_indep`\n`+ IsCircuit.not_ssubset`\n`+ IsCircuit.ssubset_indep`\n`+ IsCircuit.strong_elimination`\n`+ IsCircuit.strong_multi_elimination`\n`+ IsCircuit.strong_multi_elimination_insert`\n`+ IsCircuit.strong_multi_elimination_set`\n`+ IsCircuit.subset_closure_diff_singleton`\n`+ IsCircuit.subset_ground`\n`+ IsFlat`\n`+ IsFlat.closure`\n`+ IsFlat.iInter`\n`+ IsRestriction`\n`+ IsRestriction.antisymm`\n`+ IsRestriction.base_iff`\n`+ IsRestriction.dep_iff`\n`+ IsRestriction.eq_or_isStrictRestriction`\n`+ IsRestriction.eq_restrict`\n`+ IsRestriction.exists_eq_restrict`\n`+ IsRestriction.finitary`\n`+ IsRestriction.finite`\n`+ IsRestriction.indep_iff`\n`+ IsRestriction.isBasis_iff`\n`+ IsRestriction.isStrictRestriction_of_ground_ne`\n`+ IsRestriction.isStrictRestriction_of_ne`\n`+ IsRestriction.of_subset`\n`+ IsRestriction.rankFinite`\n`+ IsRestriction.refl`\n`+ IsRestriction.subset`\n`+ IsRestriction.trans`\n`+ IsRkFinite.exists_finite_isBasis'`\n`+ IsRkFinite.exists_finset_isBasis'`\n`+ IsRkFinite.finite_of_isBasis`\n`+ IsRkFinite.finite_of_isBasis'`\n`+ IsStrictRestriction`\n`+ IsStrictRestriction.eq_restrict`\n`+ IsStrictRestriction.exists_eq_restrict`\n`+ IsStrictRestriction.irrefl`\n`+ IsStrictRestriction.isRestriction`\n`+ IsStrictRestriction.ne`\n`+ IsStrictRestriction.of_ssubset`\n`+ IsStrictRestriction.ssubset`\n`+ Restriction.isBase_iff_of_spanning`\n`+ Spanning.exists_isBase_subset`\n`+ Spanning.isBase_of_indep`\n`+ Spanning.isBase_of_le_cRank`\n`+ Spanning.isBase_of_le_cRank_of_finite`\n`+ Spanning.isBase_of_minimal`\n`+ Spanning.isBase_restrict_iff`\n`+ base_iff_dual_isBase_compl`\n`+ coindep_iff_subset_compl_isBase`\n`+ comapOn_isBase_iff`\n`+ comapOn_isBase_iff_of_bijOn`\n`+ comapOn_isBase_iff_of_surjOn`\n`+ comap_isBase_iff`\n`+ comap_isBasis'_iff`\n`+ comap_isBasis_iff`\n`+ dep_iff_superset_isCircuit`\n`+ dep_iff_superset_isCircuit'`\n`+ disjointSigma_isBase_iff`\n`+ disjointSigma_isBasis_iff`\n`+ disjointSum_isBase_iff`\n`+ disjointSum_isBasis_iff`\n`+ dual_isBase_iff`\n`+ dual_isBase_iff'`\n`+ emptyOn_isBase_iff`\n`+ empty_isBase_iff`\n`+ empty_isBasis_iff`\n`+ empty_not_isBase`\n`+ empty_not_isCircuit`\n`+ eq_of_isBase_iff_isBase_forall`\n`+ exists_isBasis`\n`+ exists_isBasis'`\n`+ exists_isBasis_disjoint_isBasis_of_subset`\n`+ exists_isBasis_inter_ground_isBasis_closure`\n`+ exists_isBasis_subset_isBasis`\n`+ exists_isBasis_union_inter_isBasis`\n`+ exists_isCircuit_of_mem_closure`\n`+ ext_iff_isBase`\n`+ ext_iff_isCircuit`\n`+ ext_isBase`\n`+ ext_isBase_indep`\n`+ ext_isCircuit`\n`+ ext_isCircuit_not_indep`\n`+ finitary_iff_forall_isCircuit_finite`\n`+ finite_setOf_isRestriction`\n`+ freeOn_isBase_iff`\n`+ freeOn_isBasis'_iff`\n`+ freeOn_isBasis_iff`\n`+ ground_indep_iff_isBase`\n`+ ground_isFlat`\n`+ ground_not_isBase`\n`+ indep_iff_forall_subset_not_isCircuit`\n`+ indep_iff_forall_subset_not_isCircuit'`\n`+ insert_isBase_of_insert_indep`\n`+ instance (M : Matroid α) : Nonempty {B // M.IsBase B}`\n`+ instance : Nonempty {F | M.IsFlat F ∧ X ∩ M.E ⊆ F} := ⟨M.E, M.ground_isFlat, inter_subset_right⟩`\n`+ isBase_compl_iff_maximal_disjoint_isBase`\n`+ isBase_iff_indep_closure_eq`\n`+ isBase_iff_maximal_indep`\n`+ isBase_iff_minimal_spanning`\n`+ isBase_restrict_iff`\n`+ isBase_restrict_iff'`\n`+ isBasis'_iff_isBasis`\n`+ isBasis'_iff_isBasis_closure`\n`+ isBasis'_iff_isBasis_inter_ground`\n`+ isBasis'_iff_isBasis_restrict_univ`\n`+ isBasis'_restrict_iff`\n`+ isBasis_empty_iff`\n`+ isBasis_ground_iff`\n`+ isBasis_iff`\n`+ isBasis_iff'`\n`+ isBasis_iff_indep_closure`\n`+ isBasis_iff_indep_subset_closure`\n`+ isBasis_iff_isBasis'_subset_ground`\n`+ isBasis_iff_isBasis_closure_of_subset`\n`+ isBasis_iff_isBasis_closure_of_subset'`\n`+ isBasis_iff_maximal`\n`+ isBasis_restrict_iff`\n`+ isBasis_restrict_iff'`\n`+ isBasis_self_iff_indep`\n`+ isBasis_union_iff_indep_closure`\n`+ isCircuit_antichain`\n`+ isCircuit_def`\n`+ isCircuit_iff`\n`+ isCircuit_iff_dep_forall_diff_singleton_indep`\n`+ isCircuit_iff_forall_ssubset`\n`+ isCircuit_iff_minimal_not_indep`\n`+ isClosed_iff_isFlat`\n`+ isFlat_closure`\n`+ isFlat_iff_closure_eq`\n`+ isFlat_iff_isClosed`\n`+ isRestriction_iff_exists`\n`+ isRkFinite_iff_exists_isBasis'`\n`+ loopyOn_isBase_iff`\n`+ loopyOn_isBasis_iff`\n`+ mapEmbedding_isBase_iff`\n`+ mapEmbedding_isBasis_iff`\n`+ mapEquiv_isBase_iff`\n`+ mapEquiv_isBasis_iff`\n`+ map_image_isBase_iff`\n`+ map_isBase_iff`\n`+ map_isBasis_iff`\n`+ map_isBasis_iff'`\n`+ mem_closure_iff_exists_isCircuit`\n`+ mem_closure_iff_forall_mem_isFlat`\n`+ ofExistsFiniteIsBase`\n`+ ofExistsFiniteIsBase_isBase`\n`+ ofExistsFiniteIsBase_rankFinite`\n`+ ofIsBaseOfFinite`\n`+ ofIsBaseOfFinite_E`\n`+ ofIsBaseOfFinite_isBase`\n`+ restrictSubtype_ground_isBase_iff`\n`+ restrictSubtype_ground_isBasis_iff`\n`+ restrictSubtype_isBase_iff`\n`+ restrictSubtype_isBasis_iff`\n`+ restrict_isCircuit_iff`\n`+ restrict_isRestriction`\n`+ restrict_isStrictRestriction`\n`+ setOf_dual_isBase_eq`\n`+ sigma_isBase_iff`\n`+ sigma_isBasis_iff`\n`+ spanning_iff_exists_isBase_subset`\n`+ spanning_iff_exists_isBase_subset'`\n`+ subset_closure_iff_forall_subset_isFlat`\n`+ sum'_isBase_iff`\n`+ sum'_isBasis_iff`\n`+ sum_isBase_iff`\n`+ sum_isBasis_iff`\n`+ uniqueBaseOn_inter_isBasis`\n`+ uniqueBaseOn_isBase_iff`\n`+ uniqueBaseOn_isBasis_iff`\n`- Base.base_of_basis_superset`\n`- Base.basis_ground`\n`- Base.basis_of_restriction`\n`- Base.basis_of_subset`\n`- Base.card_eq_card_of_base`\n`- Base.cardinalMk_diff_comm`\n`- Base.cardinalMk_eq`\n`- Base.cardinalMk_eq_cRank`\n`- Base.cardinalMk_le_cRank`\n`- Base.closure_eq`\n`- Base.closure_of_superset`\n`- Base.compl_base_dual`\n`- Base.compl_base_of_dual`\n`- Base.compl_inter_basis_of_inter_basis`\n`- Base.dep_of_insert`\n`- Base.dep_of_ssubset`\n`- Base.diff_finite_comm`\n`- Base.diff_infinite_comm`\n`- Base.encard_diff_comm`\n`- Base.eq_exchange_of_diff_eq_singleton`\n`- Base.eq_of_subset_base`\n`- Base.eq_of_subset_indep`\n`- Base.eq_of_superset_spanning`\n`- Base.eq_union_image_of_disjointSum`\n`- Base.exchange`\n`- Base.exchange_base_of_indep`\n`- Base.exchange_base_of_indep'`\n`- Base.exchange_mem`\n`- Base.exists_insert_of_ssubset`\n`- Base.finite`\n`- Base.finite_of_finite`\n`- Base.fundCircuit_circuit`\n`- Base.indep`\n`- Base.infinite`\n`- Base.infinite_of_infinite`\n`- Base.insert_dep`\n`- Base.insert_not_base`\n`- Base.inter_basis_iff_compl_inter_basis_dual`\n`- Base.map`\n`- Base.mapEmbedding`\n`- Base.mem_of_insert_indep`\n`- Base.ncard_diff_comm`\n`- Base.ncard_eq_ncard_of_base`\n`- Base.nonempty`\n`- Base.not_base_of_ssubset`\n`- Base.rankFinite_of_finite`\n`- Base.rankInfinite_of_infinite`\n`- Base.rankPos_of_nonempty`\n`- Base.spanning`\n`- Base.spanning_of_superset`\n`- Base.ssubset_ground`\n`- Base.subset_ground`\n`- Basis'.base_restrict`\n`- Basis'.basis`\n`- Basis'.basis_closure_right`\n`- Basis'.basis_inter_ground`\n`- Basis'.cardinalMk_diff_comm`\n`- Basis'.cardinalMk_eq`\n`- Basis'.cardinalMk_eq_cRk`\n`- Basis'.cardinalMk_le_cRk`\n`- Basis'.closure_eq_closure`\n`- Basis'.encard_eq_encard`\n`- Basis'.eq_of_subset_indep`\n`- Basis'.finite_iff_isRkFinite`\n`- Basis'.finite_of_isRkFinite`\n`- Basis'.indep`\n`- Basis'.insert_not_indep`\n`- Basis'.inter_eq_of_subset_indep`\n`- Basis'.isRkFinite_of_finite`\n`- Basis'.mem_of_insert_indep`\n`- Basis'.subset`\n`- Basis.Finite`\n`- Basis.base_of_base_subset`\n`- Basis.base_of_spanning`\n`- Basis.base_restrict`\n`- Basis.basis'`\n`- Basis.basis_closure_right`\n`- Basis.basis_iUnion`\n`- Basis.basis_inter_ground`\n`- Basis.basis_of_basis_of_subset_of_subset`\n`- Basis.basis_of_closure_eq_closure`\n`- Basis.basis_restrict_of_subset`\n`- Basis.basis_restriction`\n`- Basis.basis_sUnion`\n`- Basis.basis_subset`\n`- Basis.basis_union`\n`- Basis.basis_union_of_subset`\n`- Basis.cardinalMk_diff_comm`\n`- Basis.cardinalMk_eq`\n`- Basis.cardinalMk_eq_cRk`\n`- Basis.cardinalMk_le_cRk`\n`- Basis.closure_eq_closure`\n`- Basis.closure_eq_right`\n`- Basis.closure_inter_basis_closure`\n`- Basis.dep_of_ssubset`\n`- Basis.encard_eq_encard`\n`- Basis.eq_exchange_of_diff_eq_singleton`\n`- Basis.eq_of_closure_subset`\n`- Basis.eq_of_subset_indep`\n`- Basis.exchange`\n`- Basis.exists_base`\n`- Basis.exists_basis_inter_eq_of_superset`\n`- Basis.finite_iff_isRkFinite`\n`- Basis.finite_of_isRkFinite`\n`- Basis.iUnion_basis_iUnion`\n`- Basis.indep`\n`- Basis.insert_basis_insert`\n`- Basis.insert_basis_insert_of_not_mem_closure`\n`- Basis.insert_dep`\n`- Basis.inter_eq_of_subset_indep`\n`- Basis.isRkFinite_of_finite`\n`- Basis.left_subset_ground`\n`- Basis.map`\n`- Basis.mapEmbedding`\n`- Basis.mem_of_insert_indep`\n`- Basis.not_basis_of_ssubset`\n`- Basis.of_restriction`\n`- Basis.restrict_base`\n`- Basis.spanning_iff_spanning`\n`- Basis.subset`\n`- Basis.subset_closure`\n`- Basis.subset_ground`\n`- Basis.transfer`\n`- Basis.union_basis_union`\n`- Circuit.basis_iff_eq_diff_singleton`\n`- Circuit.basis_iff_insert_eq`\n`- Circuit.circuit_restrict_of_subset`\n`- Circuit.closure_diff_singleton_eq`\n`- Circuit.dep`\n`- Circuit.diff_singleton_basis`\n`- Circuit.diff_singleton_indep`\n`- Circuit.elimination`\n`- Circuit.eq_fundCircuit_of_subset`\n`- Circuit.eq_of_dep_subset`\n`- Circuit.eq_of_not_indep_subset`\n`- Circuit.eq_of_subset_circuit`\n`- Circuit.eq_of_superset_circuit`\n`- Circuit.finite`\n`- Circuit.mem_closure_diff_singleton_of_mem`\n`- Circuit.minimal`\n`- Circuit.minimal_not_indep`\n`- Circuit.nonempty`\n`- Circuit.not_indep`\n`- Circuit.not_ssubset`\n`- Circuit.ssubset_indep`\n`- Circuit.strong_elimination`\n`- Circuit.strong_multi_elimination`\n`- Circuit.strong_multi_elimination_insert`\n`- Circuit.strong_multi_elimination_set`\n`- Circuit.subset_closure_diff_singleton`\n`- Circuit.subset_ground`\n`- Coindep.exists_base_subset_compl`\n`- Coindep.exists_subset_compl_base`\n`- Dep.dep_restriction`\n`- Dep.exists_circuit_subset`\n`- Dep.of_restriction`\n`- Flat.closure`\n`- Flat.iInter`\n`- Indep.base_iff_ground_subset_closure`\n`- Indep.base_of_cRank_le`\n`- Indep.base_of_cRank_le_of_finite`\n`- Indep.base_of_forall_insert`\n`- Indep.base_of_ground_subset_closure`\n`- Indep.base_of_maximal`\n`- Indep.base_of_spanning`\n`- Indep.basis_closure`\n`- Indep.basis_iff_forall_insert_dep`\n`- Indep.basis_insert_iff`\n`- Indep.basis_of_forall_insert`\n`- Indep.basis_of_maximal_subset`\n`- Indep.basis_of_subset_of_subset_closure`\n`- Indep.basis_self`\n`- Indep.basis_setOf_insert_basis`\n`- Indep.cardinalMk_le_base`\n`- Indep.cardinalMk_le_basis`\n`- Indep.cardinalMk_le_basis'`\n`- Indep.closure_eq_setOf_basis_insert`\n`- Indep.eq_of_basis`\n`- Indep.exists_base_subset_spanning`\n`- Indep.exists_base_subset_union_base`\n`- Indep.exists_base_superset`\n`- Indep.exists_basis_subset_union_basis`\n`- Indep.exists_insert_of_not_base`\n`- Indep.exists_insert_of_not_basis`\n`- Indep.fundCircuit_circuit`\n`- Indep.indep_restriction`\n`- Indep.insert_basis_iff_mem_closure`\n`- Indep.insert_circuit_of_forall`\n`- Indep.insert_circuit_of_forall_of_nontrivial`\n`- Indep.inter_Basis_biInter`\n`- Indep.inter_Basis_iInter`\n`- Indep.inter_Basis_sInter`\n`- Indep.inter_basis_closure_iff_subset_closure_inter`\n`- Indep.of_restriction`\n`- Indep.subset_basis'_of_subset`\n`- Indep.subset_basis_of_subset`\n`- Indep.subset_finite_basis'_of_subset_of_isRkFinite`\n`- Indep.subset_finite_basis_of_subset_of_isRkFinite`\n`- IsRkFinite.exists_finite_basis'`\n`- IsRkFinite.exists_finset_basis'`\n`- IsRkFinite.finite_of_basis`\n`- IsRkFinite.finite_of_basis'`\n`- Restriction.antisymm`\n`- Restriction.base_iff`\n`- Restriction.base_iff_of_spanning`\n`- Restriction.basis_iff`\n`- Restriction.dep_iff`\n`- Restriction.eq_or_strictRestriction`\n`- Restriction.eq_restrict`\n`- Restriction.exists_eq_restrict`\n`- Restriction.finitary`\n`- Restriction.finite`\n`- Restriction.indep_iff`\n`- Restriction.of_subset`\n`- Restriction.rankFinite`\n`- Restriction.refl`\n`- Restriction.strictRestriction_of_ground_ne`\n`- Restriction.strictRestriction_of_ne`\n`- Restriction.subset`\n`- Restriction.trans`\n`- Spanning.base_of_indep`\n`- Spanning.base_of_le_cRank`\n`- Spanning.base_of_le_cRank_of_finite`\n`- Spanning.base_of_minimal`\n`- Spanning.base_restrict_iff`\n`- Spanning.exists_base_subset`\n`- StrictRestriction.eq_restrict`\n`- StrictRestriction.exists_eq_restrict`\n`- StrictRestriction.irrefl`\n`- StrictRestriction.ne`\n`- StrictRestriction.of_ssubset`\n`- StrictRestriction.restriction`\n`- StrictRestriction.ssubset`\n`- base_compl_iff_maximal_disjoint_base`\n`- base_iff_dual_base_compl`\n`- base_iff_indep_closure_eq`\n`- base_iff_maximal_indep`\n`- base_iff_minimal_spanning`\n`- base_restrict_iff`\n`- base_restrict_iff'`\n`- basis'_iff_basis`\n`- basis'_iff_basis_closure`\n`- basis'_iff_basis_inter_ground`\n`- basis'_iff_basis_restrict_univ`\n`- basis'_restrict_iff`\n`- basis_empty_iff`\n`- basis_ground_iff`\n`- basis_iff`\n`- basis_iff'`\n`- basis_iff_basis'_subset_ground`\n`- basis_iff_basis_closure_of_subset`\n`- basis_iff_basis_closure_of_subset'`\n`- basis_iff_indep_closure`\n`- basis_iff_indep_subset_closure`\n`- basis_iff_maximal`\n`- basis_restrict_iff`\n`- basis_restrict_iff'`\n`- basis_self_iff_indep`\n`- basis_union_iff_indep_closure`\n`- circuit_antichain`\n`- circuit_def`\n`- circuit_iff`\n`- circuit_iff_dep_forall_diff_singleton_indep`\n`- circuit_iff_forall_ssubset`\n`- circuit_iff_minimal_not_indep`\n`- coindep_iff_subset_compl_base`\n`- comapOn_base_iff`\n`- comapOn_base_iff_of_bijOn`\n`- comapOn_base_iff_of_surjOn`\n`- comap_base_iff`\n`- comap_basis'_iff`\n`- comap_basis_iff`\n`- dep_iff_superset_circuit`\n`- dep_iff_superset_circuit'`\n`- disjointSigma_base_iff`\n`- disjointSigma_basis_iff`\n`- disjointSum_base_iff`\n`- disjointSum_basis_iff`\n`- dual_base_iff`\n`- dual_base_iff'`\n`- emptyOn_base_iff`\n`- empty_base_iff`\n`- empty_basis_iff`\n`- empty_not_base`\n`- empty_not_circuit`\n`- eq_of_base_iff_base_forall`\n`- exists_basis`\n`- exists_basis'`\n`- exists_basis_disjoint_basis_of_subset`\n`- exists_basis_inter_ground_basis_closure`\n`- exists_basis_subset_basis`\n`- exists_basis_union_inter_basis`\n`- exists_circuit_of_mem_closure`\n`- ext_base`\n`- ext_base_indep`\n`- ext_circuit`\n`- ext_circuit_not_indep`\n`- ext_iff_base`\n`- ext_iff_circuit`\n`- finitary_iff_forall_circuit_finite`\n`- finite_setOf_restriction`\n`- flat_closure`\n`- flat_iff_closure_eq`\n`- flat_iff_isClosed`\n`- freeOn_base_iff`\n`- freeOn_basis'_iff`\n`- freeOn_basis_iff`\n`- ground_flat`\n`- ground_indep_iff_base`\n`- ground_not_base`\n`- indep_iff_forall_subset_not_circuit`\n`- indep_iff_forall_subset_not_circuit'`\n`- insert_base_of_insert_indep`\n`- instance (M : Matroid α) : Nonempty {B // M.Base B}`\n`- instance : Nonempty {F | M.Flat F ∧ X ∩ M.E ⊆ F} := ⟨M.E, M.ground_flat, inter_subset_right⟩`\n`- isClosed_iff_flat`\n`- isRkFinite_iff_exists_basis'`\n`- loopyOn_base_iff`\n`- loopyOn_basis_iff`\n`- mapEmbedding_base_iff`\n`- mapEmbedding_basis_iff`\n`- mapEquiv_base_iff`\n`- mapEquiv_basis_iff`\n`- map_base_iff`\n`- map_basis_iff`\n`- map_basis_iff'`\n`- map_image_base_iff`\n`- mem_closure_iff_exists_circuit`\n`- mem_closure_iff_forall_mem_flat`\n`- ofBaseOfFinite`\n`- ofBaseOfFinite_E`\n`- ofBaseOfFinite_base`\n`- ofExistsFiniteBase`\n`- ofExistsFiniteBase_base`\n`- ofExistsFiniteBase_rankFinite`\n`- restrictSubtype_base_iff`\n`- restrictSubtype_basis_iff`\n`- restrictSubtype_ground_base_iff`\n`- restrictSubtype_ground_basis_iff`\n`- restrict_circuit_iff`\n`- restrict_restriction`\n`- restrict_strictRestriction`\n`- restriction_iff_exists`\n`- setOf_dual_base_eq`\n`- sigma_base_iff`\n`- sigma_basis_iff`\n`- spanning_iff_exists_base_subset`\n`- spanning_iff_exists_base_subset'`\n`- subset_closure_iff_forall_subset_flat`\n`- sum'_base_iff`\n`- sum'_basis_iff`\n`- sum_base_iff`\n`- sum_basis_iff`\n`- uniqueBaseOn_base_iff`\n`- uniqueBaseOn_basis_iff`\n`- uniqueBaseOn_inter_basis`\n`--++ _`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-14T16:27:33Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6441e6d1836da0a7c1a72e591dc6d554d4e0ca30",
                "additions": 460,
                "deletions": 447,
                "committedDate": "2025-02-14T15:12:19Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq5DooA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13331991652/job/37238139040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq5DmSA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13331991670/job/37238138440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq5DmWQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13331991652/job/37238138457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq5Dn4g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13331991670/job/37238138850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq5Dqfg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13331991652/job/37238139518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq5jYWw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13331991670/job/37238659163"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "00af95357148e2260b5b627d1f8e725aaecfc5ee",
                "additions": 137,
                "deletions": 132,
                "committedDate": "2025-02-14T16:25:37Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9Kjfw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333282861/job/37242446719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9HPtw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333265353/job/37242392503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9Kixg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333282973/job/37242446534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9Kisw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333282984/job/37242446515"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9KjPw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333282983/job/37242446655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9HRLw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333265355/job/37242392879"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9Kl5g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333283025/job/37242447334"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9HPzQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333265355/job/37242392525"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9HRjA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333265353/job/37242392972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9KkKA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333283025/job/37242446888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9HS_g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333265353/job/37242393342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9NKbg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333265355/job/37242489454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9LH7Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37242456045"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq9Mlmw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21879&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "178fb6feb6017c34a6f4b6ce58e8fbb796400c85",
                "additions": 640,
                "deletions": 617,
                "committedDate": "2025-02-14T16:51:42Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-o14Q",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333734977/job/37243991521"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eNsA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685223/job/37243817392"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eTsg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685897/job/37243818930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eUJw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685905/job/37243819047"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eOlw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685228/job/37243817623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eWUw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685899/job/37243819603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-ePRA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685223/job/37243817796"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eNVA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685228/job/37243817300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eVCg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685899/job/37243819274"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-eQbQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685223/job/37243818093"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-4y_g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333685228/job/37244252926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-erdw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37243825015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq-f4ig",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21879&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1d5def05baf2dc89117d7a0f368fca0fa9ef998f",
                "additions": 24,
                "deletions": 24,
                "committedDate": "2025-02-14T17:04:04Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_Gf8Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333876998/job/37244477425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_GpCw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877775/job/37244479755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_Gq8A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877866/job/37244480240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_Gfww",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877010/job/37244477379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_Gq_Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877791/job/37244480253"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_GhJQ",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877010/job/37244477733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_Ghtg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333876998/job/37244477878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_GpRg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877791/job/37244479814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_GjSA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333876998/job/37244478280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_HCoQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37244486305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIq_I7qw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21879&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-14T16:26:36Z",
        "deletions": 1129,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Matroid/Basic.lean",
              "additions": 296,
              "deletions": 282
            },
            {
              "path": "Mathlib/Data/Matroid/Circuit.lean",
              "additions": 155,
              "deletions": 149
            },
            {
              "path": "Mathlib/Data/Matroid/Closure.lean",
              "additions": 189,
              "deletions": 185
            },
            {
              "path": "Mathlib/Data/Matroid/Constructions.lean",
              "additions": 31,
              "deletions": 31
            },
            {
              "path": "Mathlib/Data/Matroid/Dual.lean",
              "additions": 47,
              "deletions": 44
            },
            {
              "path": "Mathlib/Data/Matroid/IndepAxioms.lean",
              "additions": 45,
              "deletions": 45
            },
            {
              "path": "Mathlib/Data/Matroid/Map.lean",
              "additions": 90,
              "deletions": 87
            },
            {
              "path": "Mathlib/Data/Matroid/Rank/Cardinal.lean",
              "additions": 82,
              "deletions": 81
            },
            {
              "path": "Mathlib/Data/Matroid/Rank/Finite.lean",
              "additions": 45,
              "deletions": 45
            },
            {
              "path": "Mathlib/Data/Matroid/Restrict.lean",
              "additions": 151,
              "deletions": 142
            },
            {
              "path": "Mathlib/Data/Matroid/Sum.lean",
              "additions": 39,
              "deletions": 38
            }
          ]
        },
        "headRefName": "matroid_is_pred",
        "headRefOid": "1d5def05baf2dc89117d7a0f368fca0fa9ef998f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LRZH0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21879,
        "potentialMergeCommit": {
          "oid": "56cadc811976c3456f8c0031e82886446827be25"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcxNjYwNzcx",
              "login": "apnelson1"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_Gf8Q",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333876998/job/37244477425"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_GpCw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877775/job/37244479755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_Gq8A",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877866/job/37244480240"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_Gfww",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877010/job/37244477379"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_Gq_Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877791/job/37244480253"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_GhJQ",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877010/job/37244477733"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_Ghtg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333876998/job/37244477878"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_GpRg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333877791/job/37244479814"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_GjSA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13333876998/job/37244478280"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_HCoQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37244486305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIq_I7qw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21879&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(Matroid): add 'Is' to predicate names",
        "updatedAt": "2025-02-14T17:05:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21879",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6441e6d1836da0a7c1a72e591dc6d554d4e0ca30"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00af95357148e2260b5b627d1f8e725aaecfc5ee"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qH3sVzwAAAAPMalWQ",
              "createdAt": "2025-02-14T16:26:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6eiN8r",
              "createdAt": "2025-02-14T16:27:33Z",
              "body": "### PR summary [1d5def05ba](https://github.com/leanprover-community/mathlib4/pull/21879/commits/1d5def05baf2dc89117d7a0f368fca0fa9ef998f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Base`\n`+ Base.isBasis_of_isRestriction`\n`+ Coindep.exists_isBase_subset_compl`\n`+ Coindep.exists_subset_compl_isBase`\n`+ Dep.dep_isRestriction`\n`+ Dep.exists_isCircuit_subset`\n`+ Dep.of_isRestriction`\n`+ Indep.cardinalMk_le_isBase`\n`+ Indep.cardinalMk_le_isBasis`\n`+ Indep.cardinalMk_le_isBasis'`\n`+ Indep.closure_eq_setOf_isBasis_insert`\n`+ Indep.eq_of_isBasis`\n`+ Indep.exists_insert_of_not_isBase`\n`+ Indep.exists_insert_of_not_isBasis`\n`+ Indep.exists_isBase_subset_spanning`\n`+ Indep.exists_isBase_subset_union_isBase`\n`+ Indep.exists_isBase_superset`\n`+ Indep.exists_isBasis_subset_union_isBasis`\n`+ Indep.fundCircuit_isCircuit`\n`+ Indep.indep_isRestriction`\n`+ Indep.insert_isBasis_iff_mem_closure`\n`+ Indep.insert_isCircuit_of_forall`\n`+ Indep.insert_isCircuit_of_forall_of_nontrivial`\n`+ Indep.inter_IsBasis_biInter`\n`+ Indep.inter_IsBasis_iInter`\n`+ Indep.inter_IsBasis_sInter`\n`+ Indep.inter_isBasis_closure_iff_subset_closure_inter`\n`+ Indep.isBase_iff_ground_subset_closure`\n`+ Indep.isBase_of_cRank_le`\n`+ Indep.isBase_of_cRank_le_of_finite`\n`+ Indep.isBase_of_forall_insert`\n`+ Indep.isBase_of_ground_subset_closure`\n`+ Indep.isBase_of_maximal`\n`+ Indep.isBase_of_spanning`\n`+ Indep.isBasis_closure`\n`+ Indep.isBasis_iff_forall_insert_dep`\n`+ Indep.isBasis_insert_iff`\n`+ Indep.isBasis_of_forall_insert`\n`+ Indep.isBasis_of_maximal_subset`\n`+ Indep.isBasis_of_subset_of_subset_closure`\n`+ Indep.isBasis_self`\n`+ Indep.isBasis_setOf_insert_isBasis`\n`+ Indep.of_isRestriction`\n`+ Indep.subset_finite_isBasis'_of_subset_of_isRkFinite`\n`+ Indep.subset_finite_isBasis_of_subset_of_isRkFinite`\n`+ Indep.subset_isBasis'_of_subset`\n`+ Indep.subset_isBasis_of_subset`\n`+ IsBase.cardinalMk_diff_comm`\n`+ IsBase.cardinalMk_eq`\n`+ IsBase.cardinalMk_eq_cRank`\n`+ IsBase.cardinalMk_le_cRank`\n`+ IsBase.closure_eq`\n`+ IsBase.closure_of_superset`\n`+ IsBase.compl_inter_isBasis_of_inter_isBasis`\n`+ IsBase.compl_isBase_dual`\n`+ IsBase.compl_isBase_of_dual`\n`+ IsBase.dep_of_insert`\n`+ IsBase.dep_of_ssubset`\n`+ IsBase.diff_finite_comm`\n`+ IsBase.diff_infinite_comm`\n`+ IsBase.encard_diff_comm`\n`+ IsBase.encard_eq_encard_of_isBase`\n`+ IsBase.eq_exchange_of_diff_eq_singleton`\n`+ IsBase.eq_of_subset_indep`\n`+ IsBase.eq_of_subset_isBase`\n`+ IsBase.eq_of_superset_spanning`\n`+ IsBase.eq_union_image_of_disjointSum`\n`+ IsBase.exchange`\n`+ IsBase.exchange_isBase_of_indep`\n`+ IsBase.exchange_isBase_of_indep'`\n`+ IsBase.exchange_mem`\n`+ IsBase.exists_insert_of_ssubset`\n`+ IsBase.finite`\n`+ IsBase.finite_of_finite`\n`+ IsBase.fundCircuit_isCircuit`\n`+ IsBase.indep`\n`+ IsBase.infinite`\n`+ IsBase.infinite_of_infinite`\n`+ IsBase.insert_dep`\n`+ IsBase.insert_not_isBase`\n`+ IsBase.inter_isBasis_iff_compl_inter_isBasis_dual`\n`+ IsBase.isBase_of_isBasis_superset`\n`+ IsBase.isBasis_ground`\n`+ IsBase.isBasis_of_subset`\n`+ IsBase.map`\n`+ IsBase.mapEmbedding`\n`+ IsBase.mem_of_insert_indep`\n`+ IsBase.ncard_diff_comm`\n`+ IsBase.ncard_eq_ncard_of_isBase`\n`+ IsBase.nonempty`\n`+ IsBase.not_isBase_of_ssubset`\n`+ IsBase.rankFinite_of_finite`\n`+ IsBase.rankInfinite_of_infinite`\n`+ IsBase.rankPos_of_nonempty`\n`+ IsBase.spanning`\n`+ IsBase.spanning_of_superset`\n`+ IsBase.ssubset_ground`\n`+ IsBase.subset_ground`\n`+ IsBasis`\n`+ IsBasis'`\n`+ IsBasis'.cardinalMk_diff_comm`\n`+ IsBasis'.cardinalMk_eq`\n`+ IsBasis'.cardinalMk_eq_cRk`\n`+ IsBasis'.cardinalMk_le_cRk`\n`+ IsBasis'.closure_eq_closure`\n`+ IsBasis'.encard_eq_encard`\n`+ IsBasis'.eq_of_subset_indep`\n`+ IsBasis'.finite_iff_isRkFinite`\n`+ IsBasis'.finite_of_isRkFinite`\n`+ IsBasis'.indep`\n`+ IsBasis'.insert_not_indep`\n`+ IsBasis'.inter_eq_of_subset_indep`\n`+ IsBasis'.isBase_restrict`\n`+ IsBasis'.isBasis`\n`+ IsBasis'.isBasis_closure_right`\n`+ IsBasis'.isBasis_inter_ground`\n`+ IsBasis'.isRkFinite_of_finite`\n`+ IsBasis'.mem_of_insert_indep`\n`+ IsBasis'.subset`\n`+ IsBasis.Finite`\n`+ IsBasis.base_of_base_subset`\n`+ IsBasis.cardinalMk_diff_comm`\n`+ IsBasis.cardinalMk_eq`\n`+ IsBasis.cardinalMk_eq_cRk`\n`+ IsBasis.cardinalMk_le_cRk`\n`+ IsBasis.closure_eq_closure`\n`+ IsBasis.closure_eq_right`\n`+ IsBasis.closure_inter_isBasis_closure`\n`+ IsBasis.dep_of_ssubset`\n`+ IsBasis.encard_eq_encard`\n`+ IsBasis.eq_exchange_of_diff_eq_singleton`\n`+ IsBasis.eq_of_closure_subset`\n`+ IsBasis.eq_of_subset_indep`\n`+ IsBasis.exchange`\n`+ IsBasis.exists_isBase`\n`+ IsBasis.exists_isBasis_inter_eq_of_superset`\n`+ IsBasis.finite_iff_isRkFinite`\n`+ IsBasis.finite_of_isRkFinite`\n`+ IsBasis.iUnion_isBasis_iUnion`\n`+ IsBasis.indep`\n`+ IsBasis.insert_dep`\n`+ IsBasis.insert_isBasis_insert`\n`+ IsBasis.insert_isBasis_insert_of_not_mem_closure`\n`+ IsBasis.inter_eq_of_subset_indep`\n`+ IsBasis.isBase_of_spanning`\n`+ IsBasis.isBase_restrict`\n`+ IsBasis.isBasis'`\n`+ IsBasis.isBasis_closure_right`\n`+ IsBasis.isBasis_iUnion`\n`+ IsBasis.isBasis_inter_ground`\n`+ IsBasis.isBasis_isRestriction`\n`+ IsBasis.isBasis_of_closure_eq_closure`\n`+ IsBasis.isBasis_of_isBasis_of_subset_of_subset`\n`+ IsBasis.isBasis_restrict_of_subset`\n`+ IsBasis.isBasis_sUnion`\n`+ IsBasis.isBasis_subset`\n`+ IsBasis.isBasis_union`\n`+ IsBasis.isBasis_union_of_subset`\n`+ IsBasis.isRkFinite_of_finite`\n`+ IsBasis.left_subset_ground`\n`+ IsBasis.map`\n`+ IsBasis.mapEmbedding`\n`+ IsBasis.mem_of_insert_indep`\n`+ IsBasis.not_isBasis_of_ssubset`\n`+ IsBasis.of_isRestriction`\n`+ IsBasis.restrict_base`\n`+ IsBasis.spanning_iff_spanning`\n`+ IsBasis.subset`\n`+ IsBasis.subset_closure`\n`+ IsBasis.subset_ground`\n`+ IsBasis.transfer`\n`+ IsBasis.union_isBasis_union`\n`+ IsCircuit`\n`+ IsCircuit.closure_diff_singleton_eq`\n`+ IsCircuit.dep`\n`+ IsCircuit.diff_singleton_indep`\n`+ IsCircuit.diff_singleton_isBasis`\n`+ IsCircuit.elimination`\n`+ IsCircuit.eq_fundCircuit_of_subset`\n`+ IsCircuit.eq_of_dep_subset`\n`+ IsCircuit.eq_of_not_indep_subset`\n`+ IsCircuit.eq_of_subset_isCircuit`\n`+ IsCircuit.eq_of_superset_isCircuit`\n`+ IsCircuit.finite`\n`+ IsCircuit.isBasis_iff_eq_diff_singleton`\n`+ IsCircuit.isBasis_iff_insert_eq`\n`+ IsCircuit.isCircuit_restrict_of_subset`\n`+ IsCircuit.mem_closure_diff_singleton_of_mem`\n`+ IsCircuit.minimal`\n`+ IsCircuit.minimal_not_indep`\n`+ IsCircuit.nonempty`\n`+ IsCircuit.not_indep`\n`+ IsCircuit.not_ssubset`\n`+ IsCircuit.ssubset_indep`\n`+ IsCircuit.strong_elimination`\n`+ IsCircuit.strong_multi_elimination`\n`+ IsCircuit.strong_multi_elimination_insert`\n`+ IsCircuit.strong_multi_elimination_set`\n`+ IsCircuit.subset_closure_diff_singleton`\n`+ IsCircuit.subset_ground`\n`+ IsFlat`\n`+ IsFlat.closure`\n`+ IsFlat.iInter`\n`+ IsRestriction`\n`+ IsRestriction.antisymm`\n`+ IsRestriction.base_iff`\n`+ IsRestriction.dep_iff`\n`+ IsRestriction.eq_or_isStrictRestriction`\n`+ IsRestriction.eq_restrict`\n`+ IsRestriction.exists_eq_restrict`\n`+ IsRestriction.finitary`\n`+ IsRestriction.finite`\n`+ IsRestriction.indep_iff`\n`+ IsRestriction.isBasis_iff`\n`+ IsRestriction.isStrictRestriction_of_ground_ne`\n`+ IsRestriction.isStrictRestriction_of_ne`\n`+ IsRestriction.of_subset`\n`+ IsRestriction.rankFinite`\n`+ IsRestriction.refl`\n`+ IsRestriction.subset`\n`+ IsRestriction.trans`\n`+ IsRkFinite.exists_finite_isBasis'`\n`+ IsRkFinite.exists_finset_isBasis'`\n`+ IsRkFinite.finite_of_isBasis`\n`+ IsRkFinite.finite_of_isBasis'`\n`+ IsStrictRestriction`\n`+ IsStrictRestriction.eq_restrict`\n`+ IsStrictRestriction.exists_eq_restrict`\n`+ IsStrictRestriction.irrefl`\n`+ IsStrictRestriction.isRestriction`\n`+ IsStrictRestriction.ne`\n`+ IsStrictRestriction.of_ssubset`\n`+ IsStrictRestriction.ssubset`\n`+ Restriction.isBase_iff_of_spanning`\n`+ Spanning.exists_isBase_subset`\n`+ Spanning.isBase_of_indep`\n`+ Spanning.isBase_of_le_cRank`\n`+ Spanning.isBase_of_le_cRank_of_finite`\n`+ Spanning.isBase_of_minimal`\n`+ Spanning.isBase_restrict_iff`\n`+ base_iff_dual_isBase_compl`\n`+ coindep_iff_subset_compl_isBase`\n`+ comapOn_isBase_iff`\n`+ comapOn_isBase_iff_of_bijOn`\n`+ comapOn_isBase_iff_of_surjOn`\n`+ comap_isBase_iff`\n`+ comap_isBasis'_iff`\n`+ comap_isBasis_iff`\n`+ dep_iff_superset_isCircuit`\n`+ dep_iff_superset_isCircuit'`\n`+ disjointSigma_isBase_iff`\n`+ disjointSigma_isBasis_iff`\n`+ disjointSum_isBase_iff`\n`+ disjointSum_isBasis_iff`\n`+ dual_isBase_iff`\n`+ dual_isBase_iff'`\n`+ emptyOn_isBase_iff`\n`+ empty_isBase_iff`\n`+ empty_isBasis_iff`\n`+ empty_not_isBase`\n`+ empty_not_isCircuit`\n`+ eq_of_isBase_iff_isBase_forall`\n`+ exists_isBasis`\n`+ exists_isBasis'`\n`+ exists_isBasis_disjoint_isBasis_of_subset`\n`+ exists_isBasis_inter_ground_isBasis_closure`\n`+ exists_isBasis_subset_isBasis`\n`+ exists_isBasis_union_inter_isBasis`\n`+ exists_isCircuit_of_mem_closure`\n`+ ext_iff_isBase`\n`+ ext_iff_isCircuit`\n`+ ext_isBase`\n`+ ext_isBase_indep`\n`+ ext_isCircuit`\n`+ ext_isCircuit_not_indep`\n`+ finitary_iff_forall_isCircuit_finite`\n`+ finite_setOf_isRestriction`\n`+ freeOn_isBase_iff`\n`+ freeOn_isBasis'_iff`\n`+ freeOn_isBasis_iff`\n`+ ground_indep_iff_isBase`\n`+ ground_isFlat`\n`+ ground_not_isBase`\n`+ indep_iff_forall_subset_not_isCircuit`\n`+ indep_iff_forall_subset_not_isCircuit'`\n`+ insert_isBase_of_insert_indep`\n`+ instance (M : Matroid α) : Nonempty {B // M.IsBase B}`\n`+ instance : Nonempty {F | M.IsFlat F ∧ X ∩ M.E ⊆ F} := ⟨M.E, M.ground_isFlat, inter_subset_right⟩`\n`+ isBase_compl_iff_maximal_disjoint_isBase`\n`+ isBase_iff_indep_closure_eq`\n`+ isBase_iff_maximal_indep`\n`+ isBase_iff_minimal_spanning`\n`+ isBase_restrict_iff`\n`+ isBase_restrict_iff'`\n`+ isBasis'_iff_isBasis`\n`+ isBasis'_iff_isBasis_closure`\n`+ isBasis'_iff_isBasis_inter_ground`\n`+ isBasis'_iff_isBasis_restrict_univ`\n`+ isBasis'_restrict_iff`\n`+ isBasis_empty_iff`\n`+ isBasis_ground_iff`\n`+ isBasis_iff`\n`+ isBasis_iff'`\n`+ isBasis_iff_indep_closure`\n`+ isBasis_iff_indep_subset_closure`\n`+ isBasis_iff_isBasis'_subset_ground`\n`+ isBasis_iff_isBasis_closure_of_subset`\n`+ isBasis_iff_isBasis_closure_of_subset'`\n`+ isBasis_iff_maximal`\n`+ isBasis_restrict_iff`\n`+ isBasis_restrict_iff'`\n`+ isBasis_self_iff_indep`\n`+ isBasis_union_iff_indep_closure`\n`+ isCircuit_antichain`\n`+ isCircuit_def`\n`+ isCircuit_iff`\n`+ isCircuit_iff_dep_forall_diff_singleton_indep`\n`+ isCircuit_iff_forall_ssubset`\n`+ isCircuit_iff_minimal_not_indep`\n`+ isClosed_iff_isFlat`\n`+ isFlat_closure`\n`+ isFlat_iff_closure_eq`\n`+ isFlat_iff_isClosed`\n`+ isRestriction_iff_exists`\n`+ isRkFinite_iff_exists_isBasis'`\n`+ loopyOn_isBase_iff`\n`+ loopyOn_isBasis_iff`\n`+ mapEmbedding_isBase_iff`\n`+ mapEmbedding_isBasis_iff`\n`+ mapEquiv_isBase_iff`\n`+ mapEquiv_isBasis_iff`\n`+ map_image_isBase_iff`\n`+ map_isBase_iff`\n`+ map_isBasis_iff`\n`+ map_isBasis_iff'`\n`+ mem_closure_iff_exists_isCircuit`\n`+ mem_closure_iff_forall_mem_isFlat`\n`+ ofExistsFiniteIsBase`\n`+ ofExistsFiniteIsBase_isBase`\n`+ ofExistsFiniteIsBase_rankFinite`\n`+ ofIsBaseOfFinite`\n`+ ofIsBaseOfFinite_E`\n`+ ofIsBaseOfFinite_isBase`\n`+ restrictSubtype_ground_isBase_iff`\n`+ restrictSubtype_ground_isBasis_iff`\n`+ restrictSubtype_isBase_iff`\n`+ restrictSubtype_isBasis_iff`\n`+ restrict_isCircuit_iff`\n`+ restrict_isRestriction`\n`+ restrict_isStrictRestriction`\n`+ setOf_dual_isBase_eq`\n`+ sigma_isBase_iff`\n`+ sigma_isBasis_iff`\n`+ spanning_iff_exists_isBase_subset`\n`+ spanning_iff_exists_isBase_subset'`\n`+ subset_closure_iff_forall_subset_isFlat`\n`+ sum'_isBase_iff`\n`+ sum'_isBasis_iff`\n`+ sum_isBase_iff`\n`+ sum_isBasis_iff`\n`+ uniqueBaseOn_inter_isBasis`\n`+ uniqueBaseOn_isBase_iff`\n`+ uniqueBaseOn_isBasis_iff`\n`- Base.base_of_basis_superset`\n`- Base.basis_ground`\n`- Base.basis_of_restriction`\n`- Base.basis_of_subset`\n`- Base.card_eq_card_of_base`\n`- Base.cardinalMk_diff_comm`\n`- Base.cardinalMk_eq`\n`- Base.cardinalMk_eq_cRank`\n`- Base.cardinalMk_le_cRank`\n`- Base.closure_eq`\n`- Base.closure_of_superset`\n`- Base.compl_base_dual`\n`- Base.compl_base_of_dual`\n`- Base.compl_inter_basis_of_inter_basis`\n`- Base.dep_of_insert`\n`- Base.dep_of_ssubset`\n`- Base.diff_finite_comm`\n`- Base.diff_infinite_comm`\n`- Base.encard_diff_comm`\n`- Base.eq_exchange_of_diff_eq_singleton`\n`- Base.eq_of_subset_base`\n`- Base.eq_of_subset_indep`\n`- Base.eq_of_superset_spanning`\n`- Base.eq_union_image_of_disjointSum`\n`- Base.exchange`\n`- Base.exchange_base_of_indep`\n`- Base.exchange_base_of_indep'`\n`- Base.exchange_mem`\n`- Base.exists_insert_of_ssubset`\n`- Base.finite`\n`- Base.finite_of_finite`\n`- Base.fundCircuit_circuit`\n`- Base.indep`\n`- Base.infinite`\n`- Base.infinite_of_infinite`\n`- Base.insert_dep`\n`- Base.insert_not_base`\n`- Base.inter_basis_iff_compl_inter_basis_dual`\n`- Base.map`\n`- Base.mapEmbedding`\n`- Base.mem_of_insert_indep`\n`- Base.ncard_diff_comm`\n`- Base.ncard_eq_ncard_of_base`\n`- Base.nonempty`\n`- Base.not_base_of_ssubset`\n`- Base.rankFinite_of_finite`\n`- Base.rankInfinite_of_infinite`\n`- Base.rankPos_of_nonempty`\n`- Base.spanning`\n`- Base.spanning_of_superset`\n`- Base.ssubset_ground`\n`- Base.subset_ground`\n`- Basis'.base_restrict`\n`- Basis'.basis`\n`- Basis'.basis_closure_right`\n`- Basis'.basis_inter_ground`\n`- Basis'.cardinalMk_diff_comm`\n`- Basis'.cardinalMk_eq`\n`- Basis'.cardinalMk_eq_cRk`\n`- Basis'.cardinalMk_le_cRk`\n`- Basis'.closure_eq_closure`\n`- Basis'.encard_eq_encard`\n`- Basis'.eq_of_subset_indep`\n`- Basis'.finite_iff_isRkFinite`\n`- Basis'.finite_of_isRkFinite`\n`- Basis'.indep`\n`- Basis'.insert_not_indep`\n`- Basis'.inter_eq_of_subset_indep`\n`- Basis'.isRkFinite_of_finite`\n`- Basis'.mem_of_insert_indep`\n`- Basis'.subset`\n`- Basis.Finite`\n`- Basis.base_of_base_subset`\n`- Basis.base_of_spanning`\n`- Basis.base_restrict`\n`- Basis.basis'`\n`- Basis.basis_closure_right`\n`- Basis.basis_iUnion`\n`- Basis.basis_inter_ground`\n`- Basis.basis_of_basis_of_subset_of_subset`\n`- Basis.basis_of_closure_eq_closure`\n`- Basis.basis_restrict_of_subset`\n`- Basis.basis_restriction`\n`- Basis.basis_sUnion`\n`- Basis.basis_subset`\n`- Basis.basis_union`\n`- Basis.basis_union_of_subset`\n`- Basis.cardinalMk_diff_comm`\n`- Basis.cardinalMk_eq`\n`- Basis.cardinalMk_eq_cRk`\n`- Basis.cardinalMk_le_cRk`\n`- Basis.closure_eq_closure`\n`- Basis.closure_eq_right`\n`- Basis.closure_inter_basis_closure`\n`- Basis.dep_of_ssubset`\n`- Basis.encard_eq_encard`\n`- Basis.eq_exchange_of_diff_eq_singleton`\n`- Basis.eq_of_closure_subset`\n`- Basis.eq_of_subset_indep`\n`- Basis.exchange`\n`- Basis.exists_base`\n`- Basis.exists_basis_inter_eq_of_superset`\n`- Basis.finite_iff_isRkFinite`\n`- Basis.finite_of_isRkFinite`\n`- Basis.iUnion_basis_iUnion`\n`- Basis.indep`\n`- Basis.insert_basis_insert`\n`- Basis.insert_basis_insert_of_not_mem_closure`\n`- Basis.insert_dep`\n`- Basis.inter_eq_of_subset_indep`\n`- Basis.isRkFinite_of_finite`\n`- Basis.left_subset_ground`\n`- Basis.map`\n`- Basis.mapEmbedding`\n`- Basis.mem_of_insert_indep`\n`- Basis.not_basis_of_ssubset`\n`- Basis.of_restriction`\n`- Basis.restrict_base`\n`- Basis.spanning_iff_spanning`\n`- Basis.subset`\n`- Basis.subset_closure`\n`- Basis.subset_ground`\n`- Basis.transfer`\n`- Basis.union_basis_union`\n`- Circuit.basis_iff_eq_diff_singleton`\n`- Circuit.basis_iff_insert_eq`\n`- Circuit.circuit_restrict_of_subset`\n`- Circuit.closure_diff_singleton_eq`\n`- Circuit.dep`\n`- Circuit.diff_singleton_basis`\n`- Circuit.diff_singleton_indep`\n`- Circuit.elimination`\n`- Circuit.eq_fundCircuit_of_subset`\n`- Circuit.eq_of_dep_subset`\n`- Circuit.eq_of_not_indep_subset`\n`- Circuit.eq_of_subset_circuit`\n`- Circuit.eq_of_superset_circuit`\n`- Circuit.finite`\n`- Circuit.mem_closure_diff_singleton_of_mem`\n`- Circuit.minimal`\n`- Circuit.minimal_not_indep`\n`- Circuit.nonempty`\n`- Circuit.not_indep`\n`- Circuit.not_ssubset`\n`- Circuit.ssubset_indep`\n`- Circuit.strong_elimination`\n`- Circuit.strong_multi_elimination`\n`- Circuit.strong_multi_elimination_insert`\n`- Circuit.strong_multi_elimination_set`\n`- Circuit.subset_closure_diff_singleton`\n`- Circuit.subset_ground`\n`- Coindep.exists_base_subset_compl`\n`- Coindep.exists_subset_compl_base`\n`- Dep.dep_restriction`\n`- Dep.exists_circuit_subset`\n`- Dep.of_restriction`\n`- Flat.closure`\n`- Flat.iInter`\n`- Indep.base_iff_ground_subset_closure`\n`- Indep.base_of_cRank_le`\n`- Indep.base_of_cRank_le_of_finite`\n`- Indep.base_of_forall_insert`\n`- Indep.base_of_ground_subset_closure`\n`- Indep.base_of_maximal`\n`- Indep.base_of_spanning`\n`- Indep.basis_closure`\n`- Indep.basis_iff_forall_insert_dep`\n`- Indep.basis_insert_iff`\n`- Indep.basis_of_forall_insert`\n`- Indep.basis_of_maximal_subset`\n`- Indep.basis_of_subset_of_subset_closure`\n`- Indep.basis_self`\n`- Indep.basis_setOf_insert_basis`\n`- Indep.cardinalMk_le_base`\n`- Indep.cardinalMk_le_basis`\n`- Indep.cardinalMk_le_basis'`\n`- Indep.closure_eq_setOf_basis_insert`\n`- Indep.eq_of_basis`\n`- Indep.exists_base_subset_spanning`\n`- Indep.exists_base_subset_union_base`\n`- Indep.exists_base_superset`\n`- Indep.exists_basis_subset_union_basis`\n`- Indep.exists_insert_of_not_base`\n`- Indep.exists_insert_of_not_basis`\n`- Indep.fundCircuit_circuit`\n`- Indep.indep_restriction`\n`- Indep.insert_basis_iff_mem_closure`\n`- Indep.insert_circuit_of_forall`\n`- Indep.insert_circuit_of_forall_of_nontrivial`\n`- Indep.inter_Basis_biInter`\n`- Indep.inter_Basis_iInter`\n`- Indep.inter_Basis_sInter`\n`- Indep.inter_basis_closure_iff_subset_closure_inter`\n`- Indep.of_restriction`\n`- Indep.subset_basis'_of_subset`\n`- Indep.subset_basis_of_subset`\n`- Indep.subset_finite_basis'_of_subset_of_isRkFinite`\n`- Indep.subset_finite_basis_of_subset_of_isRkFinite`\n`- IsRkFinite.exists_finite_basis'`\n`- IsRkFinite.exists_finset_basis'`\n`- IsRkFinite.finite_of_basis`\n`- IsRkFinite.finite_of_basis'`\n`- Restriction.antisymm`\n`- Restriction.base_iff`\n`- Restriction.base_iff_of_spanning`\n`- Restriction.basis_iff`\n`- Restriction.dep_iff`\n`- Restriction.eq_or_strictRestriction`\n`- Restriction.eq_restrict`\n`- Restriction.exists_eq_restrict`\n`- Restriction.finitary`\n`- Restriction.finite`\n`- Restriction.indep_iff`\n`- Restriction.of_subset`\n`- Restriction.rankFinite`\n`- Restriction.refl`\n`- Restriction.strictRestriction_of_ground_ne`\n`- Restriction.strictRestriction_of_ne`\n`- Restriction.subset`\n`- Restriction.trans`\n`- Spanning.base_of_indep`\n`- Spanning.base_of_le_cRank`\n`- Spanning.base_of_le_cRank_of_finite`\n`- Spanning.base_of_minimal`\n`- Spanning.base_restrict_iff`\n`- Spanning.exists_base_subset`\n`- StrictRestriction.eq_restrict`\n`- StrictRestriction.exists_eq_restrict`\n`- StrictRestriction.irrefl`\n`- StrictRestriction.ne`\n`- StrictRestriction.of_ssubset`\n`- StrictRestriction.restriction`\n`- StrictRestriction.ssubset`\n`- base_compl_iff_maximal_disjoint_base`\n`- base_iff_dual_base_compl`\n`- base_iff_indep_closure_eq`\n`- base_iff_maximal_indep`\n`- base_iff_minimal_spanning`\n`- base_restrict_iff`\n`- base_restrict_iff'`\n`- basis'_iff_basis`\n`- basis'_iff_basis_closure`\n`- basis'_iff_basis_inter_ground`\n`- basis'_iff_basis_restrict_univ`\n`- basis'_restrict_iff`\n`- basis_empty_iff`\n`- basis_ground_iff`\n`- basis_iff`\n`- basis_iff'`\n`- basis_iff_basis'_subset_ground`\n`- basis_iff_basis_closure_of_subset`\n`- basis_iff_basis_closure_of_subset'`\n`- basis_iff_indep_closure`\n`- basis_iff_indep_subset_closure`\n`- basis_iff_maximal`\n`- basis_restrict_iff`\n`- basis_restrict_iff'`\n`- basis_self_iff_indep`\n`- basis_union_iff_indep_closure`\n`- circuit_antichain`\n`- circuit_def`\n`- circuit_iff`\n`- circuit_iff_dep_forall_diff_singleton_indep`\n`- circuit_iff_forall_ssubset`\n`- circuit_iff_minimal_not_indep`\n`- coindep_iff_subset_compl_base`\n`- comapOn_base_iff`\n`- comapOn_base_iff_of_bijOn`\n`- comapOn_base_iff_of_surjOn`\n`- comap_base_iff`\n`- comap_basis'_iff`\n`- comap_basis_iff`\n`- dep_iff_superset_circuit`\n`- dep_iff_superset_circuit'`\n`- disjointSigma_base_iff`\n`- disjointSigma_basis_iff`\n`- disjointSum_base_iff`\n`- disjointSum_basis_iff`\n`- dual_base_iff`\n`- dual_base_iff'`\n`- emptyOn_base_iff`\n`- empty_base_iff`\n`- empty_basis_iff`\n`- empty_not_base`\n`- empty_not_circuit`\n`- eq_of_base_iff_base_forall`\n`- exists_basis`\n`- exists_basis'`\n`- exists_basis_disjoint_basis_of_subset`\n`- exists_basis_inter_ground_basis_closure`\n`- exists_basis_subset_basis`\n`- exists_basis_union_inter_basis`\n`- exists_circuit_of_mem_closure`\n`- ext_base`\n`- ext_base_indep`\n`- ext_circuit`\n`- ext_circuit_not_indep`\n`- ext_iff_base`\n`- ext_iff_circuit`\n`- finitary_iff_forall_circuit_finite`\n`- finite_setOf_restriction`\n`- flat_closure`\n`- flat_iff_closure_eq`\n`- flat_iff_isClosed`\n`- freeOn_base_iff`\n`- freeOn_basis'_iff`\n`- freeOn_basis_iff`\n`- ground_flat`\n`- ground_indep_iff_base`\n`- ground_not_base`\n`- indep_iff_forall_subset_not_circuit`\n`- indep_iff_forall_subset_not_circuit'`\n`- insert_base_of_insert_indep`\n`- instance (M : Matroid α) : Nonempty {B // M.Base B}`\n`- instance : Nonempty {F | M.Flat F ∧ X ∩ M.E ⊆ F} := ⟨M.E, M.ground_flat, inter_subset_right⟩`\n`- isClosed_iff_flat`\n`- isRkFinite_iff_exists_basis'`\n`- loopyOn_base_iff`\n`- loopyOn_basis_iff`\n`- mapEmbedding_base_iff`\n`- mapEmbedding_basis_iff`\n`- mapEquiv_base_iff`\n`- mapEquiv_basis_iff`\n`- map_base_iff`\n`- map_basis_iff`\n`- map_basis_iff'`\n`- map_image_base_iff`\n`- mem_closure_iff_exists_circuit`\n`- mem_closure_iff_forall_mem_flat`\n`- ofBaseOfFinite`\n`- ofBaseOfFinite_E`\n`- ofBaseOfFinite_base`\n`- ofExistsFiniteBase`\n`- ofExistsFiniteBase_base`\n`- ofExistsFiniteBase_rankFinite`\n`- restrictSubtype_base_iff`\n`- restrictSubtype_basis_iff`\n`- restrictSubtype_ground_base_iff`\n`- restrictSubtype_ground_basis_iff`\n`- restrict_circuit_iff`\n`- restrict_restriction`\n`- restrict_strictRestriction`\n`- restriction_iff_exists`\n`- setOf_dual_base_eq`\n`- sigma_base_iff`\n`- sigma_basis_iff`\n`- spanning_iff_exists_base_subset`\n`- spanning_iff_exists_base_subset'`\n`- subset_closure_iff_forall_subset_flat`\n`- sum'_base_iff`\n`- sum'_basis_iff`\n`- sum_base_iff`\n`- sum_basis_iff`\n`- uniqueBaseOn_base_iff`\n`- uniqueBaseOn_basis_iff`\n`- uniqueBaseOn_inter_basis`\n`--++ _`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qH3sVzwAAAAPMapI-",
              "createdAt": "2025-02-14T16:27:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "178fb6feb6017c34a6f4b6ce58e8fbb796400c85"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qH3sVzwAAAAPMcW4b",
              "createdAt": "2025-02-14T16:55:11Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1d5def05baf2dc89117d7a0f368fca0fa9ef998f"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            }
          ]
        }
      }
    }
  }
}
