{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 191,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "nomeata"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "From the Carleson project\r\n\r\n---\r\n\r\n- [x] depends on: #17939",
        "changedFiles": 12,
        "closed": true,
        "closedAt": "2024-11-08T19:01:44Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6GqcHK",
              "body": "### PR summary [d0c60e9d51](https://github.com/leanprover-community/mathlib4/pull/15344/commits/d0c60e9d51d194f92b71bb08e41fc8a393975d68)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.ENat.Basic`|1|\n| `Mathlib.Data.ENat.BigOperators`|608|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ addLECancellable_iff_ne_top`\n`+ add_biSup`\n`+ add_biSup'`\n`+ add_iSup`\n`+ add_one_natCast_le_withTop_of_lt`\n`+ add_sSup`\n`+ biSup_add`\n`+ biSup_add'`\n`+ biSup_add_biSup_le`\n`+ biSup_add_biSup_le'`\n`+ exists_nat_gt`\n`+ iSup_add`\n`+ iSup_add_iSup`\n`+ iSup_add_iSup_le`\n`+ iSup_add_iSup_of_monotone`\n`+ iSup_natCast`\n`+ le_sub_of_add_le_left`\n`+ natCast_ne_coe_top`\n`+ sSup_add`\n`+ sub_eq_top_iff`\n`+ sub_iSup`\n`+ sub_sub_cancel`\n`+ sum_iSup`\n`+ sum_iSup_of_monotone`\n`++ addLECancellable_of_lt_top`\n`++ addLECancellable_of_ne_top`\n`++ iSup_zero`\n`+++ sub_ne_top_iff`\n`- add_one_nat_le_withTop_of_lt`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-07-30T21:51:43Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GqcTM",
              "body": "This feels too specialized and the proof a bit too inelegant to me.",
              "createdAt": "2024-07-30T21:52:26Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Gxxov",
              "body": "I'll wait for https://github.com/leanprover-community/mathlib4/pull/15380 due to https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Topology.20of.20.60ENat.60/near/455447883 or simply drop this and use the lemmas there.",
              "createdAt": "2024-07-31T18:54:10Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HaEe1",
              "body": "We have a similar lemma for `ENNReal`. What's the general fact here? I think that one inequality is true in any complete lattice with monotone `+`. What about the other one?",
              "createdAt": "2024-08-06T17:10:32Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HaNsO",
              "body": "Maybe monotone `-`? Just guessing :-)",
              "createdAt": "2024-08-06T17:31:20Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Iz3lW",
              "body": "With https://github.com/leanprover-community/mathlib4/pull/15380 in the present PR isn't really needed, closing.",
              "createdAt": "2024-08-18T15:19:27Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6McQH_",
              "body": "After further discussion with Joachim over at #16555, this PR actually is needed. Let me reopen it and revive it.",
              "createdAt": "2024-09-17T15:20:02Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QcCyZ",
              "body": "@YaelDillies has effectively taken over this PR, not sure if theyâ€™ll get pinged on reviews, so Iâ€™ll mention them here. ",
              "createdAt": "2024-10-18T21:41:01Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QifNX",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17939~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-20T13:23:48Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Qzi4g",
              "body": "This currently fails with\r\n```\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:268:60: unknown constant 'WithTop.sub_eq_top'\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:269:52: unknown constant 'WithTop.sub_ne_top'\r\n```\r\n\r\nAh, I can fix that myself.",
              "createdAt": "2024-10-22T14:22:17Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SoQmZ",
              "body": "> I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\n> If so, we could unify `ENNReal` and `ENat` proofs.\r\n\r\nThis seems pretty difficult at the moment. The key property of `ENat` and `ENNReal` we are using is that all `a` are either absorbing for addition (`a + b = a` for all `b`), or that it's order-cancellable (`a + b â‰¤ a + c â†’ b â‰¤ c` for all `b`, `c`), and similarly for multiplication. No typeclass in mathlib exists for this yet. I've added a TODO",
              "createdAt": "2024-11-06T15:13:13Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SofQa",
              "body": "This PR still overall adds a lot of unnecessary transitive imports, and new files are cheap, so I suggest to make a new file `ENat.BigOperators`. That file only contains 2 results(?), but I think it's useful anyway.\r\n\r\nOther than that, this looks good to me.",
              "createdAt": "2024-11-06T15:33:52Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S9B9N",
              "body": "Thanks for the ping, and for the changes.\r\n\r\nNext time, please don't force-push (it means that I cannot click on \"changes since last review\")\r\n\r\nbors merge",
              "createdAt": "2024-11-08T18:13:39Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S9U8s",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11747352007/job/32729095794)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11747352007/job/32729095548)",
              "createdAt": "2024-11-08T19:01:43Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S-Ee_",
              "body": "> Next time, please don't force-push (it means that I cannot click on \"changes since last review\")\r\n\r\nAh sorry, but this is very helpful to use dependency PRs as stacked diffs. In that case, I didn't quite need it though",
              "createdAt": "2024-11-08T21:03:03Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "813616438c08cfa39caefd96db9166311b304b64",
                "additions": 168,
                "deletions": 20,
                "committedDate": "2024-11-06T15:01:46Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5a5b6f7454fb4d7814d0f60920ade2d98e1e480f",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2024-11-06T15:01:46Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d91eaeafe1875914979727d03786195596ba2717",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-11-06T15:01:46Z",
                "author": {
                  "name": "Joachim Breitner",
                  "email": "mail@joachim-breitner.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7f256faaf041e85e9cb3986cae3330c6444e446e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-11-06T15:01:46Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "624fb7dddeb9d25fdd55b4683d2db3f8ee8cec3e",
                "additions": 13,
                "deletions": 10,
                "committedDate": "2024-11-06T15:14:45Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1KDiQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706437249/job/32603538313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1KDVA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706437247/job/32603538260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1J9OA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436625/job/32603536696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1J8vA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436626/job/32603536572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1KFhA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706437252/job/32603538820"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1KAOQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436625/job/32603537465"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1J-bg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436626/job/32603537006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1KDtg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706437252/job/32603538358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1J-zw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436625/job/32603537103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1J_6w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436626/job/32603537387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl35q3A",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436626/job/32606415580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1KBlQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11706436625/job/32603537813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1LdWA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32603561304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl1NLeg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d0c60e9d51d194f92b71bb08e41fc8a393975d68",
                "additions": 31,
                "deletions": 16,
                "committedDate": "2024-11-06T16:02:03Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl36B9Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318388/job/32606421493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl35-og",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318340/job/32606420642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl351Xw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606418271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl353dg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32606418806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl36AgQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318362/job/32606421121"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl3544w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606419171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl355cg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32606419314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl35-vA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318362/job/32606420668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl353GA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606418712"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl351tQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32606418357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl357KA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606419752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl5X92w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32607960539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl37ajA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32606444172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHl38CsA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHkEFG-Q",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/7234",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-30T21:51:03Z",
        "deletions": 19,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/WithTop.lean",
              "additions": 11,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Sub/WithTop.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/ENNReal/Inv.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/ENNReal/Operations.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/ENat/Basic.lean",
              "additions": 36,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/ENat/BigOperators.lean",
              "additions": 29,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/ENat/Lattice.lean",
              "additions": 101,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/MeasureSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Instances/ENat.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/MetricSpace/HausdorffDimension.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/no_lints_prime_decls.txt",
              "additions": 3,
              "deletions": 0
            }
          ]
        },
        "headRefName": "joachim/enat_isup_add",
        "headRefOid": "d0c60e9d51d194f92b71bb08e41fc8a393975d68",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c527ODV",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6OKKha",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-22T12:20:30Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15344,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6EbqnY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-06T17:08:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzJuh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:36:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzJzr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:36:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzJ3V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:37:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzKLP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:38:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzKlr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:40:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzKvu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:41:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N0RBO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-19T08:23:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N0fC7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-19T10:31:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N8gRm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-21T09:25:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6OKKha",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-22T12:20:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6P1GDa",
              "body": "Looks good. I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\nIf so, we could unify `ENNReal` and `ENat` proofs. We can also leave this as a todo.",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2024-11-04T13:41:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6P3viI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2024-11-04T17:55:05Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lrXjn",
                    "body": "```suggestion\r\nlemma iSup_add (Î¹ : Type*) [Nonempty Î¹] (f : Î¹ â†’ â„•âˆž) (n : â„•âˆž) :\r\n```",
                    "createdAt": "2024-08-06T17:08:20Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTDh",
                    "body": "This will allow us to write `.of_ne_top h` if the expected type is known.\r\n```suggestion\r\nlemma AddLECancellable.of_ne_top [Preorder Î±] [ContravariantClass Î± Î± (Â· + Â·) (Â· â‰¤ Â·)]\r\n```",
                    "createdAt": "2024-10-18T21:36:34Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ruFou",
                    "body": "This doesn't work because it's in the `WithTop` namespace ",
                    "createdAt": "2024-10-19T08:23:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTGh",
                    "body": "If you rename a lemma, then you should add a deprecated alias.",
                    "createdAt": "2024-10-18T21:36:55Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTIp",
                    "body": "Do you add a variable but don't use it?",
                    "createdAt": "2024-10-18T21:37:12Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTVn",
                    "body": "What's wrong with the old naming?",
                    "createdAt": "2024-10-18T21:38:39Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5r69_x",
                    "body": "I wasn't so sure of that change. Reverted",
                    "createdAt": "2024-10-22T12:20:30Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtToN",
                    "body": "You can use `exists_gt` to avoid importing `Archimedean`. OTOH, you can prove it for `[Archimedean R] {a : WithTop R} (ha : a â‰  âŠ¤)`.",
                    "createdAt": "2024-10-18T21:40:29Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTvc",
                    "body": "I think that it's better to create a file `ENat.BigOperators` instead of adding heavy imports to this one.",
                    "createdAt": "2024-10-18T21:41:14Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ruPTd",
                    "body": "Actually, the heavy imports can easily be avoided. See #17939",
                    "createdAt": "2024-10-19T10:31:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ryjGz",
                    "body": "The imports are now only increasing by 22 files. Do you still think it's worth creating a separate one?",
                    "createdAt": "2024-10-21T09:25:40Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5s8O38",
                    "body": "I'm confused about this statement. `ENat` is a well-order, so `â¨… i, f i = 0 â†’ âˆƒ i, f i = 0` is unconditionally true, right?\r\n```suggestion\r\nproof_wanted mul_iInf' (_hâ‚€ : a = 0 â†’ Nonempty Î¹) :\r\n```",
                    "createdAt": "2024-11-04T13:25:35Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5s92_x",
                    "body": "@YaelDillies This assumption also occurs elsewhere.",
                    "createdAt": "2024-11-04T17:55:05Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5s8SKN",
                    "body": "```suggestion\r\nlemma sum_iSup {Î± Î¹ : Type*} {s : Finset Î±} {f : Î± â†’ Î¹ â†’ â„•âˆž}\r\n```\r\nUnless you think that is ambiguous. `finsetSum` occurs only very little in Mathlib, and usually we just write `sum`. Also below.",
                    "createdAt": "2024-11-04T13:34:46Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0ODAzNw==",
              "login": "nomeata"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl36B9Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318388/job/32606421493"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl35-og",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318340/job/32606420642"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl351Xw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606418271"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl353dg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32606418806"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl36AgQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318362/job/32606421121"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl3544w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606419171"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl355cg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32606419314"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl35-vA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707318362/job/32606420668"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl353GA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606418712"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl351tQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32606418357"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl357KA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317497/job/32606419752"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl5X92w",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11707317513/job/32607960539"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl37ajA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32606444172"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHl38CsA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHkEFG-Q",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/7234",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(ENat): iSup_add",
        "updatedAt": "2024-11-08T21:03:21Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15344",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GqcHK",
              "createdAt": "2024-07-30T21:51:43Z",
              "body": "### PR summary [d0c60e9d51](https://github.com/leanprover-community/mathlib4/pull/15344/commits/d0c60e9d51d194f92b71bb08e41fc8a393975d68)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.ENat.Basic`|1|\n| `Mathlib.Data.ENat.BigOperators`|608|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ addLECancellable_iff_ne_top`\n`+ add_biSup`\n`+ add_biSup'`\n`+ add_iSup`\n`+ add_one_natCast_le_withTop_of_lt`\n`+ add_sSup`\n`+ biSup_add`\n`+ biSup_add'`\n`+ biSup_add_biSup_le`\n`+ biSup_add_biSup_le'`\n`+ exists_nat_gt`\n`+ iSup_add`\n`+ iSup_add_iSup`\n`+ iSup_add_iSup_le`\n`+ iSup_add_iSup_of_monotone`\n`+ iSup_natCast`\n`+ le_sub_of_add_le_left`\n`+ natCast_ne_coe_top`\n`+ sSup_add`\n`+ sub_eq_top_iff`\n`+ sub_iSup`\n`+ sub_sub_cancel`\n`+ sum_iSup`\n`+ sum_iSup_of_monotone`\n`++ addLECancellable_of_lt_top`\n`++ addLECancellable_of_ne_top`\n`++ iSup_zero`\n`+++ sub_ne_top_iff`\n`- add_one_nat_le_withTop_of_lt`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GqcTM",
              "createdAt": "2024-07-30T21:52:26Z",
              "body": "This feels too specialized and the proof a bit too inelegant to me.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAMxTt5b",
              "createdAt": "2024-07-31T15:49:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Gxxov",
              "createdAt": "2024-07-31T18:54:10Z",
              "body": "I'll wait for https://github.com/leanprover-community/mathlib4/pull/15380 due to https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Topology.20of.20.60ENat.60/near/455447883 or simply drop this and use the lemmas there.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAMxc11l",
              "createdAt": "2024-07-31T18:54:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAMxlSbO",
              "createdAt": "2024-07-31T22:02:38Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5USd_W",
              "createdAt": "2024-08-05T14:47:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c53dQHy",
                "title": "feat(KrullDimension): height refactor",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15524"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6EbqnY",
              "createdAt": "2024-08-06T17:08:20Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HaEe1",
              "createdAt": "2024-08-06T17:10:32Z",
              "body": "We have a similar lemma for `ENNReal`. What's the general fact here? I think that one inequality is true in any complete lattice with monotone `+`. What about the other one?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HaNsO",
              "createdAt": "2024-08-06T17:31:20Z",
              "body": "Maybe monotone `-`? Just guessing :-)",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAM2JOwO",
              "createdAt": "2024-08-07T14:18:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAAM9RQSL",
              "createdAt": "2024-08-16T16:22:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Iz3lW",
              "createdAt": "2024-08-18T15:19:27Z",
              "body": "With https://github.com/leanprover-community/mathlib4/pull/15380 in the present PR isn't really needed, closing.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6RXDn5zwAAAAM91bXy",
              "createdAt": "2024-08-18T15:19:27Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6McQH_",
              "createdAt": "2024-09-17T15:20:02Z",
              "body": "After further discussion with Joachim over at #16555, this PR actually is needed. Let me reopen it and revive it.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReopenedEvent",
              "id": "REE_lADOFcwZ1c6RXDn5zwAAAANT8R68",
              "createdAt": "2024-09-17T15:20:02Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANT8Wzj",
              "createdAt": "2024-09-17T15:21:26Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANT8XG1",
              "createdAt": "2024-09-17T15:21:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANT8XG8",
              "createdAt": "2024-09-17T15:21:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANT8XHH",
              "createdAt": "2024-09-17T15:21:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANT8X1i",
              "createdAt": "2024-09-17T15:21:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Wexdu",
              "createdAt": "2024-09-17T15:22:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c56tSR0",
                "title": "[Merged by Bors] - feat(KrullDimension): height_strictMono, mapping theorems",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16555"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANVG56o",
              "createdAt": "2024-09-18T19:38:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANXDslR",
              "createdAt": "2024-09-20T20:15:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANXDtEK",
              "createdAt": "2024-09-20T20:15:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANXDtEP",
              "createdAt": "2024-09-20T20:15:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANcZhGS",
              "createdAt": "2024-09-27T18:55:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANgwXlm",
              "createdAt": "2024-10-03T17:51:03Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANgwZxv",
              "createdAt": "2024-10-03T17:51:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANgxS4V",
              "createdAt": "2024-10-03T18:09:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzJuh",
              "createdAt": "2024-10-18T21:36:33Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzJzr",
              "createdAt": "2024-10-18T21:36:55Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzJ3V",
              "createdAt": "2024-10-18T21:37:12Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzKLP",
              "createdAt": "2024-10-18T21:38:39Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzKlr",
              "createdAt": "2024-10-18T21:40:29Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QcCyZ",
              "createdAt": "2024-10-18T21:41:01Z",
              "body": "@YaelDillies has effectively taken over this PR, not sure if theyâ€™ll get pinged on reviews, so Iâ€™ll mention them here. ",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzKvu",
              "createdAt": "2024-10-18T21:41:14Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANuFMFH",
              "createdAt": "2024-10-19T09:45:21Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANuGloE",
              "createdAt": "2024-10-19T10:34:40Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANuG4mX",
              "createdAt": "2024-10-19T10:47:57Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANvOCEH",
              "createdAt": "2024-10-20T13:23:47Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QifNX",
              "createdAt": "2024-10-20T13:23:48Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17939~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANvfP0J",
              "createdAt": "2024-10-20T21:17:53Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANxMys3",
              "createdAt": "2024-10-22T12:15:20Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6RXDn5zwAAAANxNKgh",
              "createdAt": "2024-10-22T12:20:37Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Qzi4g",
              "createdAt": "2024-10-22T14:22:17Z",
              "body": "This currently fails with\r\n```\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:268:60: unknown constant 'WithTop.sub_eq_top'\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:269:52: unknown constant 'WithTop.sub_ne_top'\r\n```\r\n\r\nAh, I can fix that myself.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAN831uG",
              "createdAt": "2024-10-29T08:40:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAAOCCATR",
              "createdAt": "2024-11-01T12:29:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6P1GDa",
              "createdAt": "2024-11-04T13:25:35Z",
              "body": "Looks good. I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\nIf so, we could unify `ENNReal` and `ENat` proofs. We can also leave this as a todo.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6SoQmZ",
              "createdAt": "2024-11-06T15:13:13Z",
              "body": "> I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\n> If so, we could unify `ENNReal` and `ENat` proofs.\r\n\r\nThis seems pretty difficult at the moment. The key property of `ENat` and `ENNReal` we are using is that all `a` are either absorbing for addition (`a + b = a` for all `b`), or that it's order-cancellable (`a + b â‰¤ a + c â†’ b â‰¤ c` for all `b`, `c`), and similarly for multiplication. No typeclass in mathlib exists for this yet. I've added a TODO",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAAOHJ3Ds",
              "createdAt": "2024-11-06T15:14:56Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6SofQa",
              "createdAt": "2024-11-06T15:33:52Z",
              "body": "This PR still overall adds a lot of unnecessary transitive imports, and new files are cheap, so I suggest to make a new file `ENat.BigOperators`. That file only contains 2 results(?), but I think it's useful anyway.\r\n\r\nOther than that, this looks good to me.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAOHMH00",
              "createdAt": "2024-11-06T15:33:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAAOHPS_l",
              "createdAt": "2024-11-06T16:02:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAAOHPV0K",
              "createdAt": "2024-11-06T16:02:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6RXDn5zwAAAAOLQ8lP",
              "createdAt": "2024-11-08T17:33:32Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S9B9N",
              "createdAt": "2024-11-08T18:13:39Z",
              "body": "Thanks for the ping, and for the changes.\r\n\r\nNext time, please don't force-push (it means that I cannot click on \"changes since last review\")\r\n\r\nbors merge",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAOLVrER",
              "createdAt": "2024-11-08T18:13:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S9U8s",
              "createdAt": "2024-11-08T19:01:43Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11747352007/job/32729095794)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11747352007/job/32729095548)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6RXDn5zwAAAAOLaFBh",
              "createdAt": "2024-11-08T19:01:44Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6RXDn5zwAAAAOLaFZC",
              "createdAt": "2024-11-08T19:01:47Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S-Ee_",
              "createdAt": "2024-11-08T21:03:03Z",
              "body": "> Next time, please don't force-push (it means that I cannot click on \"changes since last review\")\r\n\r\nAh sorry, but this is very helpful to use dependency PRs as stacked diffs. In that case, I didn't quite need it though",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        }
      }
    }
  }
}
