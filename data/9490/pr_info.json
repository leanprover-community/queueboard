{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 223,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            }
          ]
        },
        "author": {
          "login": "adri326"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Defines `MulAction.period g a` as a wrapper around `Function.minimalPeriod (fun x => g • x) a`,\r\nallowing for some cleaner proofs involving the period of a group action.\r\nThe existing `MulAction.*_minimalPeriod_*` lemmas are changed to be defined using their now-preferred `MulAction.*_period_*` counterparts,\r\nalthough they will only be made deprecated in another pull request.\r\nThe `Mathlib.GroupTheory.GroupAction.Period` module is also created, for additional lemmas around `MulAction.period`.\r\n\r\nSome core lemmas need to remain in `Mathlib.Dynamics.PeriodicPts`, as they are needed for `ZMod` and the quotient group.\r\n\r\n---\r\n\r\nNote that the linter fails on `Mathlib.Dynamic.PeriodicPts`, since I do not know how to split the `to_additive` description on multiples lines :/\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2024-02-15T14:03:52Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5wClLm",
              "body": "> Note that the linter fails on Mathlib.Dynamic.PeriodicPts, since I do not know how to split the to_additive description on multiples lines :/\r\n\r\nI think a newline without indentation works, i.e.\r\n```\r\n@[to_additive \"foo\r\nbar\"]\r\ndef \r\n```",
              "createdAt": "2024-01-06T15:12:18Z",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5wCmdj",
              "body": "Oh it does, thanks",
              "createdAt": "2024-01-06T15:32:02Z",
              "author": {
                "login": "adri326"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5wDwex",
              "body": "Fixed the style issues pointed out above :)",
              "createdAt": "2024-01-07T11:37:59Z",
              "author": {
                "login": "adri326"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5z5uUX",
              "body": "Couple of changes, as suggested; of interest:\r\n- `le_period_of_moved` → `le_period`\r\n- `moved_of_lt_period` → `pow_smul_ne_of_lt_period` (currently lives in the `MulAction` namespace)\r\n- `period_eq_one_of_fixed` → `period_eq_one_iff`\r\n- new `period_one` and `period_inv` (I couldn't golf the latter any further)\r\n- new `period_dvd_orderOf` and `period_dvd_exponent`, which helped golfed the rest of the lemmas\r\n- added missing docstrings in `@[to_additive]`",
              "createdAt": "2024-02-14T20:07:53Z",
              "author": {
                "login": "adri326"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5z_HkB",
              "body": "🚀 Pull request has been placed on the maintainer queue by Vierkantor.",
              "createdAt": "2024-02-15T11:39:50Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5z_HkH",
              "body": "🚀 Pull request has been placed on the maintainer queue by Vierkantor.",
              "createdAt": "2024-02-15T11:39:50Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50AA-s",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7916377158/job/21610096821)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7916377158/job/21610096280)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7916377158/job/21610096573)",
              "createdAt": "2024-02-15T14:03:51Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c819dd2208a50c94f4d1c443bf077fcf9f80d024",
                "additions": 124,
                "deletions": 0,
                "committedDate": "2024-02-14T11:00:22Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8a606bf6b651bb8e1010773992748d6023983c64",
                "additions": 99,
                "deletions": 40,
                "committedDate": "2024-02-14T11:00:28Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "80bfc1f4d75306cb30bc1ae6c5f0249ffdc6f507",
                "additions": 19,
                "deletions": 9,
                "committedDate": "2024-02-14T11:01:25Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "af6f3931c0f36862acf59ac90c8fa95f33f1768c",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2024-02-14T11:01:29Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d880f9b565e51ab347848380a0618b92963c3ca2",
                "additions": 13,
                "deletions": 25,
                "committedDate": "2024-02-14T11:01:29Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e731985f236045fd6bf8e7c1a44cc77fc9cc2241",
                "additions": 21,
                "deletions": 22,
                "committedDate": "2024-02-14T11:30:37Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTbEfg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900557578/job/21562311806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTbDkQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900557582/job/21562311569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXlzg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900538101/job/21562254798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXkiQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537587/job/21562254473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBWdFEQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537588/job/21565490449"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXmFg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900538103/job/21562254870"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTbDfA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900557578/job/21562311548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXlgQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537587/job/21562254721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBWdCiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537588/job/21565489803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXmzw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900538103/job/21562255055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXmWQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537587/job/21562254937"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBWdESw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537588/job/21565490251"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXodg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537587/job/21562255478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBWdFxQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537588/job/21565490629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBWdDew",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537588/job/21565490043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXnNw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537587/job/21562255159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBWeLYg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537588/job/21565508450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTXpQw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900537587/job/21562255683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTdDLg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9490"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "63b4c79c216c3c4fd04596bf2c1b45ddc6d2e293",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-02-14T11:35:15Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBjv-kg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7905872533/job/21579431570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBjv9eQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7905872535/job/21579431289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgaKA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586596/job/21562399272"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgWAA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586092/job/21562398208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgVpQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586103/job/21562398117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgauQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586601/job/21562399417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBjv9yQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7905872533/job/21579431369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgYkw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586092/job/21562398867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgWWA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586103/job/21562398296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgaBg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586601/job/21562399238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgVLg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586092/job/21562397998"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgU9w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586103/job/21562397943"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgXlg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586092/job/21562398614"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgXKQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586103/job/21562398505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgW7g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586092/job/21562398446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgXsA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586103/job/21562398640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTgZXw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586092/job/21562399071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBVpovg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7900586103/job/21564647614"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBTiDXQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9490"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "aff3c23a712d7dd36b32a0e221e96d6399aef227",
                "additions": 26,
                "deletions": 14,
                "committedDate": "2024-02-14T18:47:00Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "41dff4124993b18408bd8d8932d29c2fec9532ca",
                "additions": 20,
                "deletions": 31,
                "committedDate": "2024-02-14T19:02:35Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4dc1506aa257f8964a8baa9c5ba19d0413e04ed9",
                "additions": 39,
                "deletions": 16,
                "committedDate": "2024-02-14T19:49:16Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "feddce3dd5e49b344683749ef79a25bc8f999b22",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2024-02-14T19:57:15Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB96U5A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915309220/job/21606864100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX-4A",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714359/job/21582184160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB96Ukw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915309212/job/21606864019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB96T-g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915309231/job/21606863866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX5hA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714045/job/21582182788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX7RQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714042/job/21582183237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX-qg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714363/job/21582184106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB96T2A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915309220/job/21606863832"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX8dw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714045/job/21582183543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX6YQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714042/job/21582183009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX_mA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714363/job/21582184344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX7hg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714045/job/21582183302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX8Ew",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714042/job/21582183443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX6jA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714045/job/21582183052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX5UQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714042/job/21582182737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX9oA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714045/job/21582183840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX8wA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714042/job/21582183616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmX-pg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714045/job/21582184102"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBoBJbA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7906714042/job/21583907180"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFBmZ3aQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9490"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "989e487c3014832643dbe52a9281777ba55b52ca",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-02-15T11:47:09Z",
                "author": {
                  "name": "Shad Amethyst",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I-MA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915383121/job/21607104048"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I8bg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382920/job/21607103598"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I8LA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382917/job/21607103532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I-dQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915383122/job/21607104117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I9Kw",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382917/job/21607103787"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I-2Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382920/job/21607104217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I_NQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915383122/job/21607104309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-JAkw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382920/job/21607104659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I96g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382917/job/21607103978"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I9Wg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382920/job/21607103834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I_1g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382917/job/21607104470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I_Aw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382917/job/21607104259"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-I_2w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382920/job/21607104475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-O-Vg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382917/job/21607202390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-JBZA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915382920/job/21607104868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-J4wg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9490"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "90e1aa5040f69a8f729923b34bbf252a25887d5f",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-02-15T11:49:55Z",
                "author": {
                  "name": "Adrien Burgun",
                  "email": "adrien.burgun@orange.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-jg0A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915517727/job/21607538896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-jgyQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915517740/job/21607538889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Ophw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915413211/job/21607197063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Om0w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607196371"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Ontw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OpQg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915413202/job/21607196994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-jh-w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915517740/job/21607539195"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OotQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607196853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Om-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OqPQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915413202/job/21607197245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OnuA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607196600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OmFg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Oq6Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607197417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OpWw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607197019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-OqFw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607197207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Oogw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-Orpg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607197606"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCAIaUw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21609192019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB-PpWw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9490"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGaalK0g",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1636",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-01-06T14:42:50Z",
        "deletions": 16,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/GroupPower/IterateHom.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Dynamics/PeriodicPts.lean",
              "additions": 93,
              "deletions": 16
            },
            {
              "path": "Mathlib/GroupTheory/GroupAction/Period.lean",
              "additions": 125,
              "deletions": 0
            }
          ]
        },
        "headRefName": "adri326/mulaction-period",
        "headRefOid": "90e1aa5040f69a8f729923b34bbf252a25887d5f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5jYflr",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABWC7cjA",
              "color": "33DBEC",
              "name": "t-dynamics"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5rwPJT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2024-01-07T13:26:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5su8xS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2024-01-16T17:09:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wNiVo",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-02-15T12:00:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wNENA",
              "body": "Some minor comments and I'm happy with this, thanks! I'm going to ask another maintainer to delegate this because I haven't reviewed `Dynamics` before and I contributed a few of the lemmas.\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-02-15T11:39:38Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 9490,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5rvAeX",
              "body": "Some stylistic comments",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2024-01-06T15:34:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rwK9l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adri326"
              },
              "submittedAt": "2024-01-07T11:37:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5rwPJT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2024-01-07T13:26:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5snHMi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2024-01-15T19:45:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5sp76N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adri326"
              },
              "submittedAt": "2024-01-16T09:50:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5su8xS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2024-01-16T17:09:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v70mQ",
              "body": "Thanks for the PR. It might look like I have a lot of comments, but I'm confident that they'll be the (almost) complete set, once they're done everything is ready to merge. This PR is nicely structured overall!",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-02-13T14:48:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v-tAZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adri326"
              },
              "submittedAt": "2024-02-13T18:53:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wD1Yr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adri326"
              },
              "submittedAt": "2024-02-14T11:33:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wHdzs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adri326"
              },
              "submittedAt": "2024-02-14T18:41:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wNENA",
              "body": "Some minor comments and I'm happy with this, thanks! I'm going to ask another maintainer to delegate this because I haven't reviewed `Dynamics` before and I contributed a few of the lemmas.\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-02-15T11:39:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wNiVo",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-02-15T12:00:41Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WDmLL",
                    "body": "```suggestion\r\n  rw [period_eq_minimalPeriod, ← isPeriodicPt_iff_minimalPeriod_dvd, fixed_iff_isPeriodicPt]\r\n```",
                    "createdAt": "2024-01-06T15:13:40Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WDmMm",
                    "body": "```suggestion\r\n  · rw [Int.negSucc_coe, zpow_neg, zpow_ofNat, inv_smul_eq_iff, eq_comm, dvd_neg, Int.coe_nat_dvd,\r\n      pow_smul_eq_iff_period_dvd]\r\n```",
                    "createdAt": "2024-01-06T15:14:30Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WDmN8",
                    "body": "I think you can remove a lot of `Function.` thanks to this.",
                    "createdAt": "2024-01-06T15:15:22Z",
                    "author": {
                      "login": "erdOne"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5WEYP0",
                    "body": "True, though I wonder if accidental name shadowing hasn't happened in the past",
                    "createdAt": "2024-01-07T11:37:24Z",
                    "author": {
                      "login": "adri326"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5WEcjK",
                    "body": "I think lean will complain about ambiguous names.",
                    "createdAt": "2024-01-07T13:26:24Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WDm8I",
                    "body": "```suggestion\r\n  conv_rhs => rw [← Nat.mod_add_div n (period m a), pow_smul_plus_period]\r\n```",
                    "createdAt": "2024-01-06T15:33:53Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WDm8P",
                    "body": "```suggestion\r\n  conv_rhs => rw [← Int.emod_add_ediv j (period g a), zpow_smul_plus_period]\r\n```",
                    "createdAt": "2024-01-06T15:34:02Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WlniN",
                    "body": "Why not use the new `period` definition here?",
                    "createdAt": "2024-01-15T19:45:20Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5WncjJ",
                    "body": "This is what `pow_smul_eq_iff_period_dvd` does above, these theorems are left here for compatibility purposes, since they're used in defining quotient groups, and will be made deprecated in #9514.",
                    "createdAt": "2024-01-16T09:50:31Z",
                    "author": {
                      "login": "adri326"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Wphj5",
                    "body": "Ah, great.",
                    "createdAt": "2024-01-16T17:09:44Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yru40",
                    "body": "Let's be slightly more precise (pedantic!).\r\n```suggestion\r\nThe period of a multiplicative action of `g` on `a` is the smallest positive `n` such that\r\n`g ^ n • a = a`, or `0` if such an `n` does not exist.\r\n-/\r\n@[to_additive \"The period of an additive action of `g` on `a` is the smallest positive `n`\r\nsuch that `(n • g) +ᵥ a = a`, or `0` if such an `n` does not exist.\"]\r\n```",
                    "createdAt": "2024-02-13T13:33:47Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YryeA",
                    "body": "This seems too general to be in this file: could you move it next to the declaration of `smul_iterate`?",
                    "createdAt": "2024-02-13T13:39:23Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YrzbR",
                    "body": "A couple of tweaks:\r\n * Equalities tend to put the \"more complicated\" expressions on the left, for easier rewriting. So here `iterate` feels more complicated than exponentiation, so I've flipped the order.\r\n * With the flipped order comes a new name (I copied `smul_iterate`).\r\n * We have some neat notation for partially applying an operator by writing `·` for its arguments.\r\nThat gives:\r\n```suggestion\r\n@[to_additive]\r\nlemma smul_iterate_apply (m : M) (a : α) (n : ℕ) : (m • ·)^[n] a  = m ^ n • a := by\r\n  rw [smul_iterate]\r\n```",
                    "createdAt": "2024-02-13T13:42:01Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YxVr_",
                    "body": "It's unfortunate that `rw` doesn't provide an easy way to do eta-expansion for existing lemmas like `smul_iterate`",
                    "createdAt": "2024-02-14T11:33:04Z",
                    "author": {
                      "login": "adri326"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yr0an",
                    "body": "The naming convention suggests to put the binary operator `smul` after its left argument `pow_period`. I'd also leave out `fixed` since there is no definition `Fixed` to refer to. (Perhaps `pow_period_smul_eq_self` if you'd like to emphasize that it's kept fixed.)\r\n```suggestion\r\ntheorem pow_period_smul (m : M) (a : α) : m ^ (period m a) • a = a := by\r\n```",
                    "createdAt": "2024-02-13T13:44:41Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yr5Cb",
                    "body": "This lemma feels slightly on the trivial / overspecialized side but indeed there seems to be no good alternative way. I'd like to reverse its direction, though:\r\n```suggestion\r\n@[to_additive]\r\nlemma isPeriodicPt_smul_iff {m : M} {a : α} {n : ℕ} :\r\n    IsPeriodicPt (fun x => m • x) n a ↔ m ^ n • a = a := by\r\n  rw [← smul_iterate_apply, IsPeriodicPt, IsFixedPt]\r\n```",
                    "createdAt": "2024-02-13T13:54:22Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yr6dF",
                    "body": "```suggestion\r\ntheorem pow_smul_eq_iff_period_dvd {n : ℕ} {m : M} {a : α} :\r\n```",
                    "createdAt": "2024-02-13T13:57:43Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yr6fb",
                    "body": "```suggestion\r\ntheorem zpow_smul_eq_iff_period_dvd {j : ℤ} {g : G} {a : α} :\r\n```",
                    "createdAt": "2024-02-13T13:57:48Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsBvL",
                    "body": "I'd like to restructure this section somewhat: IMO the fundamental relation is that `m ^ k • a = m ^ n • a` if `n ≡ k` mod `period m a`. But we can't express that here because `Nat.ModEq` and `Int.ModEq` are not available, so the next best thing is to put the `mod` lemmas first.\r\n\r\nThen I'm going to derive the addition results from them, and include addition on the left and on the right. Finally I'm renaming them since `+` is called `add` here, not `plus`. :)\r\n```suggestion\r\n@[to_additive (attr := simp)]\r\ntheorem pow_smul_mod_period (n : ℕ) {m : M} {a : α}:\r\n    m ^ (n % period m a) • a = m ^ n • a := by\r\n  conv_rhs => rw [← Nat.mod_add_div n (period m a), pow_add, mul_smul,\r\n    pow_smul_eq_iff_period_dvd.mpr (dvd_mul_right _ _)]\r\n\r\n@[to_additive (attr := simp)]\r\ntheorem zpow_smul_mod_period (j : ℤ) {g : G} {a : α}:\r\n    g ^ (j % (period g a : ℤ)) • a = g ^ j • a := by\r\n  conv_rhs => rw [← Int.emod_add_ediv j (period g a), zpow_add, mul_smul,\r\n    zpow_smul_eq_iff_period_dvd.mpr (dvd_mul_right _ _)]\r\n\r\n@[to_additive (attr := simp)]\r\ntheorem pow_add_period_smul (n : ℕ) (m : M) (a : α):\r\n    m ^ (n + period m a) • a = m ^ n • a := by\r\n  rw [← pow_smul_mod_period, Nat.add_mod_right, pow_smul_mod_period]\r\n\r\n@[to_additive (attr := simp)]\r\ntheorem pow_period_add_smul (n : ℕ) (m : M) (a : α):\r\n    m ^ (period m a + n) • a = m ^ n • a := by\r\n  rw [← pow_smul_mod_period, Nat.add_mod_left, pow_smul_mod_period]\r\n\r\n@[to_additive (attr := simp)]\r\ntheorem zpow_add_period_smul (i : ℤ) (g : G) (a : α):\r\n    g ^ (i + period g a) • a = g ^ i • a := by\r\n  rw [← zpow_smul_mod_period, Int.add_emod_self, zpow_smul_mod_period]\r\n\r\n@[to_additive (attr := simp)]\r\ntheorem zpow_period_add_smul (i : ℤ) (g : G) (a : α):\r\n    g ^ (period g a + i) • a = g ^ i • a := by\r\n  rw [← zpow_smul_mod_period, Int.add_emod_self_left, zpow_smul_mod_period]\r\n```",
                    "createdAt": "2024-02-13T14:15:35Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsCBx",
                    "body": "Nice cleanup!",
                    "createdAt": "2024-02-13T14:16:23Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsCP9",
                    "body": "My hobby is sorting imports alphabetically :)\r\n```suggestion\r\nimport Mathlib.Dynamics.PeriodicPts\r\nimport Mathlib.GroupTheory.Exponent\r\nimport Mathlib.GroupTheory.GroupAction.Basic\r\n```",
                    "createdAt": "2024-02-13T14:16:58Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yt4to",
                    "body": "I should try to automate that :p",
                    "createdAt": "2024-02-13T18:53:24Z",
                    "author": {
                      "login": "adri326"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsEhi",
                    "body": "Theorem names really have to closely match their statement, so:\r\n```suggestion\r\ntheorem le_period_of_moved {m : M} {a : α} {n : ℕ} (period_pos : 0 < period m a)\r\n```\r\n\r\n(I assume \"moved\" is used as the opposite of \"fixed (point)\"? I'm not familiar with any word for this concept, so maybe another name would be clearer for other users too.)",
                    "createdAt": "2024-02-13T14:22:16Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YzkXO",
                    "body": "To be fair, this is the only real mechanism to prove a lower bound for the period, so we could just go with `le_period`",
                    "createdAt": "2024-02-14T18:41:01Z",
                    "author": {
                      "login": "adri326"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsIri",
                    "body": "`by_contra!` can do some of the rewrites for you automatically:\r\n```suggestion\r\n  by_contra! period_lt_n\r\n  apply moved _ period_pos period_lt_n\r\n  exact smul_pow_period_fixed m a\r\n```",
                    "createdAt": "2024-02-13T14:31:53Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsIxX",
                    "body": "In fact if you really love term mode this could even become:\r\n```suggestion\r\n  le_of_not_gt <| fun period_lt_n => moved _ period_pos period_lt_n <| smul_pow_period_fixed m a\r\n```\r\n(although I would not advise it!)",
                    "createdAt": "2024-02-13T14:32:07Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsJZR",
                    "body": "Here I would not go into tactic mode:\r\n```suggestion\r\n    period m a ≤ n :=\r\n  (isPeriodicPt_smul_iff.mpr fixed).minimalPeriod_le n_pos\r\n```",
                    "createdAt": "2024-02-13T14:33:37Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsJlO",
                    "body": "Idem:\r\n```suggestion\r\n    0 < period m a :=\r\n  (isPeriodicPt_smul_iff.mpr fixed).minimalPeriod_pos n_pos\r\n```",
                    "createdAt": "2024-02-13T14:34:03Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsLL1",
                    "body": "There's a little trick here: for `n : ℕ`, `0 < n` is definitionally equal to `1 ≤ n`.\r\n```suggestion\r\ntheorem period_eq_one_of_fixed {m : M} {a : α} (fixed : m • a = a) : period m a = 1 := :=\r\n  le_antisymm\r\n    (period_le_of_fixed one_pos (by simpa))\r\n    (period_pos_of_fixed one_pos (by simpa))\r\n```",
                    "createdAt": "2024-02-13T14:37:26Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsL5P",
                    "body": "A less tricky way is to use `linarith` to figure out the equality:\r\n```suggestion\r\ntheorem period_eq_one_of_fixed {m : M} {a : α} (fixed : m • a = a) : period m a = 1 := by\r\n  have : period m a ≤ 1 := period_le_of_fixed one_pos (by simpa)\r\n  have : 0 < period m a := period_pos_of_fixed one_pos (by simpa)\r\n  linarith\r\n```",
                    "createdAt": "2024-02-13T14:39:01Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsM95",
                    "body": "All these tactic steps can also be term steps. I'd also like to replace the specific `Nat.not_le` with a more general `not_le_of_gt`.\r\n```suggestion\r\n    m^n • a ≠ a :=\r\n  fun a_fixed => not_le_of_gt n_lt_period (period_le_of_fixed n_pos a_fixed)\r\n```",
                    "createdAt": "2024-02-13T14:41:12Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsQFJ",
                    "body": "Following a plain `simp` with another tactic (\"non-terminal `simp`\") is dangerous since the set of `simp` lemmas can change and break the proof. `simp` followed by `apply`/`exact` can often be combined into `simpa` instead:\r\n```suggestion\r\n  simpa [upperBounds] using period_le_exponent exp_pos _\r\n```",
                    "createdAt": "2024-02-13T14:45:26Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YsQkI",
                    "body": "I think we should add a few more lemmas about special cases of `period`, in particular `period_one : period 1 x = 1` and `period_inv : period g⁻¹ x = period g x`? (Assuming those are correct!)",
                    "createdAt": "2024-02-13T14:46:15Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y3EKE",
                    "body": "Good point about `to_additive`izing the doc comments, let's not forget this one!\r\n```suggestion\r\n/-- `MulAction.period m a` is definitionally equal to `Function.minimalPeriod (m • ·) a`. -/\r\n@[to_additive \"`AddAction.period m a` is definitionally equal to `Function.minimalPeriod (m +ᵥ ·) a`\"]\r\n```",
                    "createdAt": "2024-02-15T11:02:18Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y3E3A",
                    "body": "For some reason the style guide says brackets belong on the next line, even if it makes indentation look slightly ugly.\r\n```suggestion\r\ntheorem period_eq_one_iff {m : M} {a : α} : period m a = 1 ↔ m • a = a :=\r\n  ⟨fun eq_one => pow_one m ▸ eq_one ▸ pow_period_smul m a,\r\n   fun fixed => le_antisymm\r\n    (period_le_of_fixed one_pos (by simpa))\r\n    (period_pos_of_fixed one_pos (by simpa))⟩\r\n```",
                    "createdAt": "2024-02-15T11:03:27Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4MTE4MDUz",
              "login": "adri326"
            },
            {
              "id": "MDQ6VXNlcjM2NDE0Mjcw",
              "login": "erdOne"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjEzMzM5MDE3",
              "login": "tb65536"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-jg0A",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915517727/job/21607538896"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-jgyQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915517740/job/21607538889"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Ophw",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915413211/job/21607197063"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Om0w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607196371"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Ontw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196599"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OpQg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915413202/job/21607196994"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-jh-w",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915517740/job/21607539195"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OotQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607196853"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Om-A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196408"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OqPQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915413202/job/21607197245"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OnuA",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607196600"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OmFg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196182"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Oq6Q",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607197417"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OpWw",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607197019"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-OqFw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607197207"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Oogw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21607196803"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-Orpg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412934/job/21607197606"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFCAIaUw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7915412921/job/21609192019"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFB-PpWw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=9490"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGaalK0g",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1636",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(GroupTheory/GroupAction): define MulAction.period and create GroupTheory/GroupAction/Period",
        "updatedAt": "2024-02-15T14:03:54Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/9490",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAAKoAs6d",
              "createdAt": "2024-01-06T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAAKoAs6e",
              "createdAt": "2024-01-06T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAAKoAs6h",
              "createdAt": "2024-01-06T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABWC7cjA",
                "name": "t-dynamics"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAAKoAs6j",
              "createdAt": "2024-01-06T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5wClLm",
              "createdAt": "2024-01-06T15:12:18Z",
              "body": "> Note that the linter fails on Mathlib.Dynamic.PeriodicPts, since I do not know how to split the to_additive description on multiples lines :/\r\n\r\nI think a newline without indentation works, i.e.\r\n```\r\n@[to_additive \"foo\r\nbar\"]\r\ndef \r\n```",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5wCmdj",
              "createdAt": "2024-01-06T15:32:02Z",
              "body": "Oh it does, thanks",
              "author": {
                "login": "adri326"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5rvAeX",
              "createdAt": "2024-01-06T15:13:40Z",
              "body": "Some stylistic comments",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5wDwex",
              "createdAt": "2024-01-07T11:37:59Z",
              "body": "Fixed the style issues pointed out above :)",
              "author": {
                "login": "adri326"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5QJzhv",
              "createdAt": "2024-01-07T14:20:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5jaAef",
                "title": "chore: Replace `Function.minimalPeriod (m • ·) a` with `MulAction.period m a`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/9514"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5snHMi",
              "createdAt": "2024-01-15T19:45:20Z",
              "body": "",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c57TVGpzwAAAAK-eF1m",
              "createdAt": "2024-02-13T09:17:24Z",
              "assignee": {
                "id": "MDQ6VXNlcjIxMTY1NzA=",
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5v70mQ",
              "createdAt": "2024-02-13T13:33:47Z",
              "body": "Thanks for the PR. It might look like I have a lot of comments, but I'm confident that they'll be the (almost) complete set, once they're done everything is ready to merge. This PR is nicely structured overall!",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c57TVGpzwAAAAK-z6xe",
              "createdAt": "2024-02-13T16:23:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAAK-z7AZ",
              "createdAt": "2024-02-13T16:23:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c57TVGpzwAAAAK_XN3Q",
              "createdAt": "2024-02-14T11:31:23Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5z5uUX",
              "createdAt": "2024-02-14T20:07:53Z",
              "body": "Couple of changes, as suggested; of interest:\r\n- `le_period_of_moved` → `le_period`\r\n- `moved_of_lt_period` → `pow_smul_ne_of_lt_period` (currently lives in the `MulAction` namespace)\r\n- `period_eq_one_of_fixed` → `period_eq_one_iff`\r\n- new `period_one` and `period_inv` (I couldn't golf the latter any further)\r\n- new `period_dvd_orderOf` and `period_dvd_exponent`, which helped golfed the rest of the lemmas\r\n- added missing docstrings in `@[to_additive]`",
              "author": {
                "login": "adri326"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c57TVGpzwAAAAK_uNEZ",
              "createdAt": "2024-02-14T20:09:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAAK_uNEd",
              "createdAt": "2024-02-14T20:09:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5wNENA",
              "createdAt": "2024-02-15T11:02:18Z",
              "body": "Some minor comments and I'm happy with this, thanks! I'm going to ask another maintainer to delegate this because I haven't reviewed `Dynamics` before and I contributed a few of the lemmas.\r\n\r\nmaintainer merge",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5z_HkB",
              "createdAt": "2024-02-15T11:39:50Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by Vierkantor.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5z_HkH",
              "createdAt": "2024-02-15T11:39:50Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by Vierkantor.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5wNiVo",
              "createdAt": "2024-02-15T12:00:41Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c57TVGpzwAAAALAMr_g",
              "createdAt": "2024-02-15T12:00:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c57TVGpzwAAAALAMsC1",
              "createdAt": "2024-02-15T12:00:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50AA-s",
              "createdAt": "2024-02-15T14:03:51Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/7916377158/job/21610096821)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/7916377158/job/21610096280)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/7916377158/job/21610096573)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c57TVGpzwAAAALASQkm",
              "createdAt": "2024-02-15T14:03:52Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c57TVGpzwAAAALASQuY",
              "createdAt": "2024-02-15T14:03:54Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
