{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 39,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "sebzim4500"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "feat: Assume natural numbers are nonnegative when cast to any ordered semiring inside `linarith`\r\n\r\nPreviously this would only work when casting to an integer.\r\n\r\n---\r\n\r\nFixes #7031 (although one of those examples still does not actually work for other reasons).\r\n\r\nThis is the kind of thing that works now that didn't before:\r\n\r\n```lean\r\nimport Mathlib.Data.Real.Basic\r\nimport Mathlib.Analysis.SpecialFunctions.Trigonometric.Basic\r\nopen Real\r\n\r\nexample (n : Nat) : (-3/5 : ℚ) < n := by linarith\r\nexample (n : Nat) : (-3/5 : ℝ) < n := by linarith\r\nexample (n : Nat) : 0 ≤ n * π := by nlinarith [two_le_pi]\r\n```\r\n\r\nI'm a bit concerned about performance, since this tactic will now look for an `OrderedSemiring` instance for any coersion from `Nat` that's in the local context. I imagine this could be slow when no such instance exists?\r\n\r\nMy initial approach was to only look for casts to Rat or Real, but I don't think I can explicit mention Real without creating a cyclic dependency.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-10-22T12:03:09Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5n0YzA",
              "body": "please add some tests to `test/linarith.lean`\r\n\r\nI will try and do a proper review later so I just added some minor comments for now.\r\n\r\nBut this looks like a nice addition to me.",
              "createdAt": "2023-09-30T15:08:33Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5n0YzQ",
              "body": "!bench",
              "createdAt": "2023-09-30T15:08:37Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5n0dmG",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/aa41b7b2-d903-4715-bea5-1edfef529690) for commit 038a2827e5ba73422ccbf445d80857915c6be666.\nThe entire run failed.\nFound no significant differences.",
              "createdAt": "2023-09-30T16:17:44Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5n0s5j",
              "body": "!bench",
              "createdAt": "2023-09-30T22:00:49Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5n0uKU",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/5578363b-81a6-481d-bcc7-dfa4a8d9880c) for commit 8b5fc72c8bee292e51a43b75b218265734e1d161.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/0577a905-101a-4ac6-8f61-76b9ea77d4e8/to/5578363b-81a6-481d-bcc7-dfa4a8d9880c) against commit b2d415234c85aceb6ffbb857ef4c309e2499a2c6:\n```diff\n  Benchmark   Metric    Change\n  ============================\n+ build       linting    -5.1%\n```",
              "createdAt": "2023-09-30T22:35:28Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pvDoJ",
              "body": "Thanks again!\r\n\r\nbors merge",
              "createdAt": "2023-10-21T23:14:50Z",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pvDoP",
              "body": ":-1: Rejected by label",
              "createdAt": "2023-10-21T23:14:52Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pvEmj",
              "body": "bors merge",
              "createdAt": "2023-10-21T23:46:52Z",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pvj6Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6603428746/job/17936520029)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6603428746/job/17936520064)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6603428746/job/17936520000)",
              "createdAt": "2023-10-22T12:03:08Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "038a2827e5ba73422ccbf445d80857915c6be666",
                "additions": 26,
                "deletions": 12,
                "committedDate": "2023-09-29T16:28:42Z",
                "author": {
                  "name": "Sebastian Zimmer",
                  "email": "sebastian.zim@googlemail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "405b777558c5e2f6d1265606437742153e4cfc79",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-09-30T16:08:34Z",
                "author": {
                  "name": "Sebastian Zimmer",
                  "email": "sebastian.zim@googlemail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5e4b747af06754a3a8cd90c655731a5534342aba",
                "additions": 16,
                "deletions": 4,
                "committedDate": "2023-09-30T16:09:06Z",
                "author": {
                  "name": "Sebastian Zimmer",
                  "email": "sebastian.zim@googlemail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8b5fc72c8bee292e51a43b75b218265734e1d161",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-30T16:21:41Z",
                "author": {
                  "name": "Sebastian Zimmer",
                  "email": "sebastian.zim@googlemail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "68ce369fe6968b5be8be17eff57c9178b0e1677f",
                "additions": 5,
                "deletions": 9,
                "committedDate": "2023-10-20T20:05:04Z",
                "author": {
                  "name": "Sebastian Zimmer",
                  "email": "sebastian.zim@googlemail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "45d797f950ed8ba4c08e08a5bf2db950a49e06ef",
                "additions": 24297,
                "deletions": 10437,
                "committedDate": "2023-10-21T23:14:39Z",
                "author": {
                  "name": "Rob Lewis",
                  "email": "Rob.y.lewis@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-29T16:31:21Z",
        "deletions": 16,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/Linarith/Lemmas.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Linarith/Preprocessing.lean",
              "additions": 27,
              "deletions": 16
            },
            {
              "path": "test/linarith.lean",
              "additions": 10,
              "deletions": 0
            }
          ]
        },
        "headRefName": "sebzim4500/linarith-generalize-nat-coe",
        "headRefOid": "45d797f950ed8ba4c08e08a5bf2db950a49e06ef",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5bjdpw",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5icw9I",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-30T15:06:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kx5f8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "robertylewis"
              },
              "submittedAt": "2023-10-20T19:34:49Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7439,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5icw7C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-30T15:05:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5icw9I",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-30T15:06:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kx362",
              "body": "I agree that this is the right implementation of this feature!\r\n\r\n`compare_nat_casts` is misnamed and just an instance of `lexOrd`, but `lexOrd` is inconvenient without a type class instance. Really, `Expr.Ord` should live somewhere other than this file. That's a followup PR though.",
              "state": "COMMENTED",
              "author": {
                "login": "robertylewis"
              },
              "submittedAt": "2023-10-20T19:33:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kx5f8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "robertylewis"
              },
              "submittedAt": "2023-10-20T19:34:49Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5P_N-q",
                    "body": "```suggestion\r\n/-- If `e` is of the form `((n : ℕ) : C)`, `isNatCoe e` returns `⟨n, C⟩`. -/\r\n```\r\nif you are renaming the def",
                    "createdAt": "2023-09-30T15:05:35Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5P_OBT",
                    "body": "```suggestion\r\ndef compare_nat_casts (a b : Expr × Expr) : Ordering :=\r\n```\r\nand as the linter says this will need a docstring",
                    "createdAt": "2023-09-30T15:06:35Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RgSg-",
                    "body": "```suggestion\r\ndef Expr.Ord : Ord Expr :=\r\n⟨fun a b => if Expr.lt a b then .lt else if a.equal b then .eq else .gt⟩\r\n\r\nattribute [local instance] Expr.Ord\r\n```",
                    "createdAt": "2023-10-20T19:29:27Z",
                    "author": {
                      "login": "robertylewis"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RgSkr",
                    "body": "```suggestion\r\n    let nonnegs ← l.foldlM (init := ∅) fun (es : RBSet (Expr × Expr) lexOrd.compare) h => do\r\n```",
                    "createdAt": "2023-10-20T19:29:45Z",
                    "author": {
                      "login": "robertylewis"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RgTfJ",
                    "body": "```suggestion\r\n```\r\nwith those previous suggestions, this can be deleted.",
                    "createdAt": "2023-10-20T19:34:49Z",
                    "author": {
                      "login": "robertylewis"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": [
            {
              "id": "I_kwDOFcwZ1c5wekOW",
              "title": "Teach `linarith` that naturals are positive",
              "url": "https://github.com/leanprover-community/mathlib4/issues/7031"
            }
          ]
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjExMTcwMjg=",
              "login": "sebzim4500"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjQ5Njc0Njk=",
              "login": "robertylewis"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - Support coersions from Nat to ordered semirings in linarith",
        "updatedAt": "2023-10-22T12:03:12Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7439",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "038a2827e5ba73422ccbf445d80857915c6be666"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yaoljzwAAAAJypMYD",
              "createdAt": "2023-09-29T16:31:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yaoljzwAAAAJypM08",
              "createdAt": "2023-09-29T16:31:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5icw7C",
              "createdAt": "2023-09-30T15:05:35Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5icw9I",
              "createdAt": "2023-09-30T15:06:34Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5n0YzA",
              "createdAt": "2023-09-30T15:08:33Z",
              "body": "please add some tests to `test/linarith.lean`\r\n\r\nI will try and do a proper review later so I just added some minor comments for now.\r\n\r\nBut this looks like a nice addition to me.",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5n0YzQ",
              "createdAt": "2023-09-30T15:08:37Z",
              "body": "!bench",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "405b777558c5e2f6d1265606437742153e4cfc79"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5e4b747af06754a3a8cd90c655731a5534342aba"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5n0dmG",
              "createdAt": "2023-09-30T16:17:44Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/aa41b7b2-d903-4715-bea5-1edfef529690) for commit 038a2827e5ba73422ccbf445d80857915c6be666.\nThe entire run failed.\nFound no significant differences.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8b5fc72c8bee292e51a43b75b218265734e1d161"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5n0s5j",
              "createdAt": "2023-09-30T22:00:49Z",
              "body": "!bench",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5n0uKU",
              "createdAt": "2023-09-30T22:35:28Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/5578363b-81a6-481d-bcc7-dfa4a8d9880c) for commit 8b5fc72c8bee292e51a43b75b218265734e1d161.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/0577a905-101a-4ac6-8f61-76b9ea77d4e8/to/5578363b-81a6-481d-bcc7-dfa4a8d9880c) against commit b2d415234c85aceb6ffbb857ef4c309e2499a2c6:\n```diff\n  Benchmark   Metric    Change\n  ============================\n+ build       linting    -5.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kx362",
              "createdAt": "2023-10-20T19:29:26Z",
              "body": "I agree that this is the right implementation of this feature!\r\n\r\n`compare_nat_casts` is misnamed and just an instance of `lexOrd`, but `lexOrd` is inconvenient without a type class instance. Really, `Expr.Ord` should live somewhere other than this file. That's a followup PR though.",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kx5f8",
              "createdAt": "2023-10-20T19:34:49Z",
              "body": "",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "68ce369fe6968b5be8be17eff57c9178b0e1677f"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yaoljzwAAAAJ_rk0S",
              "createdAt": "2023-10-21T20:22:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "45d797f950ed8ba4c08e08a5bf2db950a49e06ef"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pvDoJ",
              "createdAt": "2023-10-21T23:14:50Z",
              "body": "Thanks again!\r\n\r\nbors merge",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pvDoP",
              "createdAt": "2023-10-21T23:14:52Z",
              "body": ":-1: Rejected by label",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yaoljzwAAAAJ_sT2a",
              "createdAt": "2023-10-21T23:15:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yaoljzwAAAAJ_sT2r",
              "createdAt": "2023-10-21T23:15:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yaoljzwAAAAJ_sVrS",
              "createdAt": "2023-10-21T23:21:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pvEmj",
              "createdAt": "2023-10-21T23:46:52Z",
              "body": "bors merge",
              "author": {
                "login": "robertylewis"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pvj6Z",
              "createdAt": "2023-10-22T12:03:08Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6603428746/job/17936520029)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6603428746/job/17936520064)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6603428746/job/17936520000)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5yaoljzwAAAAJ_vwxd",
              "createdAt": "2023-10-22T12:03:10Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5yaoljzwAAAAJ_vwya",
              "createdAt": "2023-10-22T12:03:12Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PKFmZ",
              "createdAt": "2023-11-01T16:04:29Z",
              "source": {
                "id": "I_kwDOFcwZ1c5wekOW",
                "title": "Teach `linarith` that naturals are positive",
                "url": "https://github.com/leanprover-community/mathlib4/issues/7031"
              }
            }
          ]
        }
      }
    }
  }
}
