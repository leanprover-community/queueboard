{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 36,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR adds a macro rule to the `erw` tactic that first tries `rw` at reducible transparency, and displays a \"Try this:\" if that succeeded. This should help us get rid of uselessly slow `erw`s.\r\n\r\nThis is a relatively simple implementation that does not verify if `erw` and `rw` would have resulted in the same exact rewrite. So it is possible that `erw` and `rw` both succeed but rewrite different occurrences, and there would be a suggestion to replace `erw` with `rw` in that case. I think the complication of running both at the same time and checking the goal state afterwards doesn't weigh up to accepting that this happens and adding an explanation to the warning generated by `erw`.\r\n\r\nI import the `erw` extension in `Tactic.Common`: it might be nice to migrate this up even earlier in the import hierarchy but `Mathlib.Tactic.TryThis` is a somewhat heavy import to put in `Mathlib.Tactic.Core`.\r\n\r\nZulip thread: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Fixing.20the.20.60erw.60.20hell.20around.20concrete.20categories\r\n\r\n---\r\n\r\n- [x] depends on: #17617 \r\n- [x] depends on: #17703\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 7,
        "closed": true,
        "closedAt": "2025-02-24T12:52:11Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6PdrhP",
              "body": "### PR summary [de4fb5fbf8](https://github.com/leanprover-community/mathlib4/pull/17638/commits/de4fb5fbf885cd46d49e4f4a47f04bc5cc5ca787)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic.Common | 244 | 246 | +2 (+0.82%) |\n| Mathlib.Algebra.Order.CauSeq.Basic | 543 | 545 | +2 (+0.37%) |\n| Mathlib.CategoryTheory.Sites.Subcanonical | 680 | 682 | +2 (+0.29%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\nThere are 4496 files with changed transitive imports taking up over 190394 characters: this is too many to display!\nYou can run `scripts/import_trans_difference.sh all` locally to see the whole output.\n\n</details>\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-10-11T08:41:01Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pd4l-",
              "body": "Thanks for this PR! I'm (perhaps needlessly so) worries about the performance effects of this change. Can you benchmark this/is the speedcenter up and working already?\r\nOr is the idea that this will reduce slow erw's over time, and hence be worth it even if it's a small slow-down?",
              "createdAt": "2024-10-11T09:08:42Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pd_ZD",
              "body": "> Thanks for this PR! I'm (perhaps needlessly so) worries about the performance effects of this change. Can you benchmark this/is the speedcenter up and working already? Or is the idea that this will reduce slow erw's over time, and hence be worth it even if it's a small slow-down?\r\n\r\nUnfortunately the speedcenter was still down yesterday, and I don't see any movement in the [zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/mathlib4.20speedcenter). I agree that this will make Mathlib a bit slower, but the extra cost of doing a `rw` in addition to `erw` should make that cost somewhat marginal. And removing `erw`s definitely makes up for that. And even if it weren't about speed, then simply cleaning up `erw`s that don't need to be `erw` is nice for code clarity.",
              "createdAt": "2024-10-11T09:23:22Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PfBTG",
              "body": "> Two nits about outdated comments\r\n\r\nNicely spotted, thanks!",
              "createdAt": "2024-10-11T12:06:33Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PlZ1Y",
              "body": "Lets split this into separate PRs for changing proofs and for the macro. ",
              "createdAt": "2024-10-13T11:49:45Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PlZ4Z",
              "body": "I would prefer a solution where we only run the extra check in CI, like we do for `says`.",
              "createdAt": "2024-10-13T11:50:29Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Plw4S",
              "body": "> Lets split this into separate PRs for changing proofs and for the macro.\r\n\r\nSee #17703 for only the changed proofs.",
              "createdAt": "2024-10-13T16:29:41Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pl0Vy",
              "body": "I'm curious about the overall balance of this PR, thus let me bench it.",
              "createdAt": "2024-10-13T17:14:25Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pl0V8",
              "body": "!bench",
              "createdAt": "2024-10-13T17:14:28Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pl2qX",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17617~~\n* ~~leanprover-community/mathlib4#17703~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-13T17:46:53Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pl3dT",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/bed60633-45e1-4fb6-b747-0f99ae91f3fa) for commit edc1e5c163772d17fb6067027afbc9f938648e2f.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/349ad6b5-2d9d-4ff2-9038-d410616dec20/to/bed60633-45e1-4fb6-b747-0f99ae91f3fa) against commit 626e646a45085713dacac5c222cfe6d768e8dd67:\n```diff\n  Benchmark                                                  Metric         Change\n  ================================================================================\n- ~Mathlib.Algebra.Module.LocalizedModule                    instructions     8.2%\n- ~Mathlib.CategoryTheory.Adjunction.Lifting.Right           instructions    46.6%\n- ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing       instructions    15.4%\n- ~Mathlib.RepresentationTheory.GroupCohomology.Resolution   instructions     8.1%\n```",
              "createdAt": "2024-10-13T17:58:45Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PmIMM",
              "body": "The previous PR was performance-neutral - so the benchmark should mostly represent the effect of this PR. Overall, there is a slowdown of 200*10‚Åπ instruction (about 0.1-0.2% of all of mathlib).",
              "createdAt": "2024-10-13T21:24:16Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6P3fs6",
              "body": "I'll hold off on merging this PR then, running it manually every so often until the number of `erw`s is more manageable.",
              "createdAt": "2024-10-15T11:46:25Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fpBg1",
              "body": "I think this can now be definitively closed in favour of `erw?`.",
              "createdAt": "2025-02-24T12:52:11Z",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "97c0ff5a62eb0c8e63a17682edc50e23f70d1d0a",
                "additions": 30,
                "deletions": 0,
                "committedDate": "2024-11-11T08:21:47Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "39e8983981fc098008a59cb06f3a7b4705db5cc7",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2024-11-11T09:01:34Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "de4fb5fbf885cd46d49e4f4a47f04bc5cc5ca787",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2024-11-11T09:01:56Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUFTA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337415/job/32795592012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUErw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337379/job/32795591855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosT-Bw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795590151"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosT_hA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32795590532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUGLw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337396/job/32795592239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUAuQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795590841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUA6w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32795590891"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUE1g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337396/job/32795591894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosT_Sw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795590475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosT9-w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32795590139"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUCKQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795591209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHot_qlw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32797354647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosUdgQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32795598209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosT4tw",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHosVnaQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17638&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-11T08:40:15Z",
        "deletions": 5,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/DirectSum.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/CauSeq/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Subcanonical.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Common.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Erw.lean",
              "additions": 28,
              "deletions": 0
            }
          ]
        },
        "headRefName": "try_this-erw",
        "headRefOid": "de4fb5fbf885cd46d49e4f4a47f04bc5cc5ca787",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5-UN4X",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6M0030",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-10-11T12:08:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M1JjS",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-11T12:54:14Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17638,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "b-mehta"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": [
                {
                  "login": "mo271"
                }
              ]
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6M0w9Z",
              "body": "Two nits about outdated comments - otherwise the `erw -> rw` replacements look good to me. The macro looks plausible to me, but I'm not an expert on them - that's a low-confidence approval of that part.",
              "state": "APPROVED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-10-11T12:01:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M0zhC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-10-11T12:05:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M0zlf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-10-11T12:05:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M0030",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2024-10-11T12:08:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M02hg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-10-11T12:12:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M1JjS",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-11T12:54:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M1Llp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-10-11T12:58:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M1fUv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-10-11T13:36:49Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGdYk",
                    "body": "Update this, please :-)",
                    "createdAt": "2024-10-11T11:59:11Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGe9u",
                    "body": "```suggestion\r\n    rw [‚Üê comp_apply, ‚Üê comp_apply]\r\n```",
                    "createdAt": "2024-10-11T12:05:31Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGdaQ",
                    "body": "Here also",
                    "createdAt": "2024-10-11T11:59:18Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGfAu",
                    "body": "```suggestion\r\n    rw [‚Üê comp_apply, eq‚ÇÅ, ‚Üê comp_apply, eq‚ÇÇ,\r\n```",
                    "createdAt": "2024-10-11T12:05:41Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGf0j",
                    "body": "Do these two calls combine? (The other new changes also look good to me.)",
                    "createdAt": "2024-10-11T12:08:49Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGgya",
                    "body": "They do not (note that the other one is `at h`), but I spotted two others that do! Thanks for checking :D",
                    "createdAt": "2024-10-11T12:12:29Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rG5pY",
                    "body": "(I should not forget to push my changes...)",
                    "createdAt": "2024-10-11T13:36:49Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGsR1",
                    "body": "This is the same ref that's mentioned in the other rw -> erw notes; can (and should) we try to go back to the older proof?",
                    "createdAt": "2024-10-11T12:53:56Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rGtlv",
                    "body": "We cannot, unfortunately: `simp` can't use `comp_apply` here. (To be very specific, the `CoeSort` instance is not reducibly defeq between `TopCat` and `ConcreteCategory`, and so they don't end up in the same discrimination tree key.)",
                    "createdAt": "2024-10-11T12:58:03Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUFTA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337415/job/32795592012"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUErw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337379/job/32795591855"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosT-Bw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795590151"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosT_hA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32795590532"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUGLw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337396/job/32795592239"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUAuQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795590841"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUA6w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32795590891"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUE1g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775337396/job/32795591894"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosT_Sw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795590475"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosT9-w",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32795590139"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUCKQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336726/job/32795591209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHot_qlw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775336730/job/32797354647"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosUdgQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32795598209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosT4tw",
                "name": ".github/dependabot.yml",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dependabot-api.githubapp.com"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHosVnaQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17638&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Tactic): `erw` tries `rw` first and warns if that succeeds",
        "updatedAt": "2025-02-24T12:52:12Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17638",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAANmimwV",
              "createdAt": "2024-10-11T08:40:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6Z0-T6zwAAAANmimwk",
              "createdAt": "2024-10-11T08:40:15Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PdrhP",
              "createdAt": "2024-10-11T08:41:01Z",
              "body": "### PR summary [de4fb5fbf8](https://github.com/leanprover-community/mathlib4/pull/17638/commits/de4fb5fbf885cd46d49e4f4a47f04bc5cc5ca787)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Tactic.Common | 244 | 246 | +2 (+0.82%) |\n| Mathlib.Algebra.Order.CauSeq.Basic | 543 | 545 | +2 (+0.37%) |\n| Mathlib.CategoryTheory.Sites.Subcanonical | 680 | 682 | +2 (+0.29%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\nThere are 4496 files with changed transitive imports taking up over 190394 characters: this is too many to display!\nYou can run `scripts/import_trans_difference.sh all` locally to see the whole output.\n\n</details>\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pd4l-",
              "createdAt": "2024-10-11T09:08:42Z",
              "body": "Thanks for this PR! I'm (perhaps needlessly so) worries about the performance effects of this change. Can you benchmark this/is the speedcenter up and working already?\r\nOr is the idea that this will reduce slow erw's over time, and hence be worth it even if it's a small slow-down?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pd_ZD",
              "createdAt": "2024-10-11T09:23:22Z",
              "body": "> Thanks for this PR! I'm (perhaps needlessly so) worries about the performance effects of this change. Can you benchmark this/is the speedcenter up and working already? Or is the idea that this will reduce slow erw's over time, and hence be worth it even if it's a small slow-down?\r\n\r\nUnfortunately the speedcenter was still down yesterday, and I don't see any movement in the [zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/mathlib4.20speedcenter). I agree that this will make Mathlib a bit slower, but the extra cost of doing a `rw` in addition to `erw` should make that cost somewhat marginal. And removing `erw`s definitely makes up for that. And even if it weren't about speed, then simply cleaning up `erw`s that don't need to be `erw` is nice for code clarity.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAANmme9I",
              "createdAt": "2024-10-11T10:02:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Z0-T6zwAAAANmmnvI",
              "createdAt": "2024-10-11T10:05:27Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ciLk3",
              "createdAt": "2024-10-11T10:23:00Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5-U3YQ",
                "title": "chore(Topology/Category): make `TopCat` an `abbrev`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17641"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6Z0-T6zwAAAANmohwj",
              "createdAt": "2024-10-11T10:46:42Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Z0-T6zwAAAANmo7Ir",
              "createdAt": "2024-10-11T10:54:41Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6M0w9Z",
              "createdAt": "2024-10-11T11:59:11Z",
              "body": "Two nits about outdated comments - otherwise the `erw -> rw` replacements look good to me. The macro looks plausible to me, but I'm not an expert on them - that's a low-confidence approval of that part.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PfBTG",
              "createdAt": "2024-10-11T12:06:33Z",
              "body": "> Two nits about outdated comments\r\n\r\nNicely spotted, thanks!",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6M0030",
              "createdAt": "2024-10-11T12:08:49Z",
              "body": "",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6M1JjS",
              "createdAt": "2024-10-11T12:53:56Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAANnLrVw",
              "createdAt": "2024-10-12T06:29:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PlZ1Y",
              "createdAt": "2024-10-13T11:49:45Z",
              "body": "Lets split this into separate PRs for changing proofs and for the macro. ",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PlZ4Z",
              "createdAt": "2024-10-13T11:50:29Z",
              "body": "I would prefer a solution where we only run the extra check in CI, like we do for `says`.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Z0-T6zwAAAANnbFFQ",
              "createdAt": "2024-10-13T16:26:10Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5c1HXs",
              "createdAt": "2024-10-13T16:29:04Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5-c-MQ",
                "title": "[Merged by Bors] - chore(*): replace `erw` with `rw` where possible",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17703"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Plw4S",
              "createdAt": "2024-10-13T16:29:41Z",
              "body": "> Lets split this into separate PRs for changing proofs and for the macro.\r\n\r\nSee #17703 for only the changed proofs.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAANnbJxV",
              "createdAt": "2024-10-13T16:35:29Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6Z0-T6zwAAAANnbK5z",
              "createdAt": "2024-10-13T16:37:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pl0Vy",
              "createdAt": "2024-10-13T17:14:25Z",
              "body": "I'm curious about the overall balance of this PR, thus let me bench it.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pl0V8",
              "createdAt": "2024-10-13T17:14:28Z",
              "body": "!bench",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6Z0-T6zwAAAANnbs1P",
              "createdAt": "2024-10-13T17:46:51Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pl2qX",
              "createdAt": "2024-10-13T17:46:53Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17617~~\n* ~~leanprover-community/mathlib4#17703~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pl3dT",
              "createdAt": "2024-10-13T17:58:45Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/bed60633-45e1-4fb6-b747-0f99ae91f3fa) for commit edc1e5c163772d17fb6067027afbc9f938648e2f.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/349ad6b5-2d9d-4ff2-9038-d410616dec20/to/bed60633-45e1-4fb6-b747-0f99ae91f3fa) against commit 626e646a45085713dacac5c222cfe6d768e8dd67:\n```diff\n  Benchmark                                                  Metric         Change\n  ================================================================================\n- ~Mathlib.Algebra.Module.LocalizedModule                    instructions     8.2%\n- ~Mathlib.CategoryTheory.Adjunction.Lifting.Right           instructions    46.6%\n- ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing       instructions    15.4%\n- ~Mathlib.RepresentationTheory.GroupCohomology.Resolution   instructions     8.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PmIMM",
              "createdAt": "2024-10-13T21:24:16Z",
              "body": "The previous PR was performance-neutral - so the benchmark should mostly represent the effect of this PR. Overall, there is a slowdown of 200*10‚Åπ instruction (about 0.1-0.2% of all of mathlib).",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6P3fs6",
              "createdAt": "2024-10-15T11:46:25Z",
              "body": "I'll hold off on merging this PR then, running it manually every so often until the number of `erw`s is more manageable.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAANpkZPh",
              "createdAt": "2024-10-15T11:46:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAANq4Xoq",
              "createdAt": "2024-10-16T12:56:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Z0-T6zwAAAANtkvpx",
              "createdAt": "2024-10-18T15:43:47Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Z0-T6zwAAAANtl7LS",
              "createdAt": "2024-10-18T16:03:37Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eOusU",
              "createdAt": "2024-10-18T16:08:24Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_H5b2",
                "title": "[Merged by Bors] - chore: more `erw`s that can become `rw`s",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17923"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6Z0-T6zwAAAANtolBD",
              "createdAt": "2024-10-18T16:54:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5gg7KS",
              "createdAt": "2024-10-28T08:44:50Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6AEJK2",
                "title": "[Merged by Bors] - chore: some `erw`s that can become `rw` for free",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18322"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "97c0ff5a62eb0c8e63a17682edc50e23f70d1d0a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "39e8983981fc098008a59cb06f3a7b4705db5cc7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "de4fb5fbf885cd46d49e4f4a47f04bc5cc5ca787"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Z0-T6zwAAAAOMwtB1",
              "createdAt": "2024-11-11T09:02:07Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5j_ELG",
              "createdAt": "2024-11-11T09:04:00Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6BepJT",
                "title": "[Merged by Bors] - chore: some `erw`s that can become `rw`s for free",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18847"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5pP_X7",
              "createdAt": "2024-12-02T16:04:00Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6DxM6C",
                "title": "[Merged by Bors] - chore: turn `erw` into `rw` for free",
                "url": "https://github.com/leanprover-community/mathlib4/pull/19689"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Z0-T6zwAAAAPJpNhe",
              "createdAt": "2025-02-11T16:43:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fpBg1",
              "createdAt": "2025-02-24T12:52:11Z",
              "body": "I think this can now be definitively closed in favour of `erw?`.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6Z0-T6zwAAAAPTVH5s",
              "createdAt": "2025-02-24T12:52:11Z"
            }
          ]
        }
      }
    }
  }
}
