{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 453,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            }
          ]
        },
        "author": {
          "login": "mans0954"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Introduces the Upper Set topology, which is the canonical example of an Alexandrov topology and its dual, the Lower Set topology.\r\n\r\n---\r\n\r\nAn Alexandrov topology is a topology where the intersection of any collection of open sets is open. The `UpperSetTopology` is an Alexandrov topology, and, given any Alexandrov topology, a `Preorder` may be defined on the underlying set such that the `UpperSetTopology` of the `Preorder` coincides with the original topology.\r\n\r\nHowever, our motivation for introducing the `UpperSetTopology` is its use in the construction of the Scott Topology (#2508). Beyond demonstrating that the set of open sets is closed under arbitrary intersections, we have not sought to further develop the theory of Alexandrov topologies in this PR. However, we hope that by breaking the Upper Set topology out into a separate file / PR, we may facilitate anyone who does wish to develop mathlib4 in that direction.\r\n\r\nSee also the discussion about naming [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Possible.20future.20name.20collision)\r\n\r\nFor completeness we also introduce the dual Lower Set topology.\r\n\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #5873\r\n- [x] depends on: #6157\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-08-01T18:35:16Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hMsDj",
              "body": "Could you add comments (I'd say both in the module docstrings and in the docs of the definitions) warning that this is not the dual of the `LowerTopology`? Maybe even add an example in the module docstring.",
              "createdAt": "2023-07-11T12:14:48Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hPGOz",
              "body": "> Could you add comments (I'd say both in the module docstrings and in the docs of the definitions) warning that this is not the dual of the `LowerTopology`? Maybe even add an example in the module docstring.\r\n\r\nI've added the warning and also `UpperSetTopology.Monotone_to_LowerTopology_Dual_Continuous` which explains the relationship between these topologies.",
              "createdAt": "2023-07-11T18:51:45Z",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hPT2x",
              "body": "I think I know your answer, but why not also introduce `LowerSetTopology`? In particular I feel like having the full collection would make it easier to emphasize that `LowerTopology` is different from `LowerSetTopoloy`, without resorting to dualizing the order.\r\nI don't have a use case in mind, but I know that I have a use case for the dual version of `LowerTopology` (which we still don't have) so it wouldn't surprise me if such a case appears in the future.",
              "createdAt": "2023-07-11T19:34:39Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hPfa6",
              "body": "> I think I know your answer, but why not also introduce `LowerSetTopology`? In particular I feel like having the full collection would make it easier to emphasize that `LowerTopology` is different from `LowerSetTopoloy`, without resorting to dualizing the order. I don't have a use case in mind, but I know that I have a use case for the dual version of `LowerTopology` (which we still don't have) so it wouldn't surprise me if such a case appears in the future.\r\n\r\nI got my fingers burnt early on introducing something just because we could which then caused trouble later on, so I've been a bit cautious since. If you have a use for `UpperTopology` (the dual version of `LowerTopology`) then maybe we should just go ahead and add these things in.\r\n\r\nWould I just create a file called `LowerSetTopology.lean`, define\r\n```\r\ndef lowerSetTopology : TopologicalSpace α :=\r\n{ IsOpen := IsLowerSet,\r\n...\r\n```\r\nand restate/prove all the results, or can I infer them all somehow using `OrderDual`?\r\n",
              "createdAt": "2023-07-11T20:14:29Z",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hPu3i",
              "body": "> > I think I know your answer, but why not also introduce `LowerSetTopology`? In particular I feel like having the full collection would make it easier to emphasize that `LowerTopology` is different from `LowerSetTopoloy`, without resorting to dualizing the order. I don't have a use case in mind, but I know that I have a use case for the dual version of `LowerTopology` (which we still don't have) so it wouldn't surprise me if such a case appears in the future.\r\n> \r\n> I got my fingers burnt early on introducing something just because we could which then caused trouble later on, so I've been a bit cautious since. If you have a use for `UpperTopology` (the dual version of `LowerTopology`) then maybe we should just go ahead and add these things in.\r\n> \r\n> Would I just create a file called `LowerSetTopology.lean`, define\r\n> \r\n> ```\r\n> def lowerSetTopology : TopologicalSpace α :=\r\n> { IsOpen := IsLowerSet,\r\n> ...\r\n> ```\r\n> \r\n> and restate/prove all the results, or can I infer them all somehow using `OrderDual`?\r\n\r\nI'd say you can have them in the same file (`UpperLowerSetTopology.lean`). You can either separate them into two sections or mix them, it doesn't really matter (except maybe for managing namespaces). You'll have to restate all the results, but the proofs should hopefully be one line applications of the upper version ",
              "createdAt": "2023-07-11T21:10:46Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hRrSk",
              "body": "> I'd say you can have them in the same file (`UpperLowerSetTopology.lean`). You can either separate them into two sections or mix them, it doesn't really matter (except maybe for managing namespaces). You'll have to restate all the results, but the proofs should hopefully be one line applications of the upper version\r\n\r\nI've made a start on adding `UpperTopology`: https://github.com/leanprover-community/mathlib4/tree/mans0954/UpperTopology\r\n\r\nI've added `def toOrderDualHomeomorph [Preorder α] : WithLowerTopology α ≃ₜ WithUpperTopology αᵒᵈ` - is that the right way to express this? \r\n",
              "createdAt": "2023-07-12T07:52:57Z",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hTM2e",
              "body": "> I've made a start on adding `UpperTopology`: [`mans0954`/UpperTopology](https://github.com/leanprover-community/mathlib4/tree/mans0954/UpperTopology?rgh-link-date=2023-07-12T07%3A52%3A57Z)\r\n> \r\n> I've added `def toOrderDualHomeomorph [Preorder α] : WithLowerTopology α ≃ₜ WithUpperTopology αᵒᵈ` - is that the right way to express this?\r\n\r\nCould you please open a PR for that? It'll be easier to make suggestions. Also if you want to dualize this particular file in a separate PR that would work for me, do as you wish.",
              "createdAt": "2023-07-12T12:16:01Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hWHJ2",
              "body": "@ADedecker I've added the statements for the lower set topology to this file/PR.\r\n\r\nIs the next step to prove:\r\n```\r\ninstance  [Preorder α] [TopologicalSpace α] [LowerSetTopology α] : UpperSetTopology (αᵒᵈ) := sorry\r\n```\r\nso that\r\n```\r\ntheorem LowerSetTopology.IsOpen_sInter {S : Set (Set α)} (hf : ∀ s ∈ S, IsOpen s) : IsOpen (⋂₀ S) := by\r\n  apply @UpperSetTopology.IsOpen_sInter αᵒᵈ _ _ _ _ (fun s a ↦ hf s a)\r\n```\r\netc?",
              "createdAt": "2023-07-12T20:40:08Z",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hWaAN",
              "body": "Yes, I think this is the perfect approach! In particular note that you don't actually need an homeomorphism with the order dual, this instance does all the work.\r\n\r\nEDIT: you can keep the homeomorphism of course, I just meant that you don't have to manually transport all the proofs through it.",
              "createdAt": "2023-07-12T21:58:34Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iU-CH",
              "body": "Could you merge master?",
              "createdAt": "2023-07-25T11:37:44Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iVAtv",
              "body": "> Could you merge master?\r\n\r\nDone.",
              "createdAt": "2023-07-25T11:46:03Z",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5i53lx",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#5873~~\n* ~~leanprover-community/mathlib4#6157~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-07-31T23:19:31Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5i9JPX",
              "body": ":v: mans0954 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-01T12:15:44Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5i_nV2",
              "body": "bors r+",
              "createdAt": "2023-08-01T18:11:22Z",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5i_vGr",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5730357027/job/15528968257)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5730357027/job/15528968042)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5730357027/job/15528968453)",
              "createdAt": "2023-08-01T18:35:15Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d66ceb4ca4b6ba585fc43e07fea8b65e7472a8c3",
                "additions": 141,
                "deletions": 0,
                "committedDate": "2023-06-12T18:23:13Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8fa1fcda7374ccdedd75993a444be4816345caa5",
                "additions": 33,
                "deletions": 0,
                "committedDate": "2023-06-12T19:58:09Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cc4eecddbdcec87a6746f7d6396e854cfe12bfae",
                "additions": 34,
                "deletions": 0,
                "committedDate": "2023-06-12T20:50:23Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ccfc6d99da1d58e0c62b8a0ba76a00d403253a5d",
                "additions": 3,
                "deletions": 0,
                "committedDate": "2023-06-12T20:52:26Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d612756036fe4aa0b7c0b4cce8862c1d5cfd76a9",
                "additions": 16,
                "deletions": 10,
                "committedDate": "2023-06-13T05:26:32Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7e4d0f93e2500e6eb2d33aad6d827c5af474818b",
                "additions": 11,
                "deletions": 4,
                "committedDate": "2023-06-13T17:07:36Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "251a6cc86ed734b3a51a54646e7c64e8964d7c73",
                "additions": 15,
                "deletions": 36,
                "committedDate": "2023-06-13T17:16:45Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bf272c2fc5bbfbded55f2692d6d3530013f4d3e4",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-06-13T17:18:07Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "222dd958d5f70a2e2a2d14597faad46a1c9cff34",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-06-14T04:08:02Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ff51ef06cf8b4d24dc3e0d7e20511bf2e5fef751",
                "additions": 36,
                "deletions": 11,
                "committedDate": "2023-07-02T10:53:39Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9aaf9376a87da68c5265b58aed368900641c3082",
                "additions": 135132,
                "deletions": 8308,
                "committedDate": "2023-07-02T10:58:55Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9ea2aceb94f9aac9ffe7e7f8a0538cfa160db09e",
                "additions": 6,
                "deletions": 1,
                "committedDate": "2023-07-02T11:59:53Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "15fe595ea8c88f4cd748612de0a57eb778dd9d63",
                "additions": 11,
                "deletions": 0,
                "committedDate": "2023-07-02T15:49:55Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dbee995496ac9f2a45d95502bfd7e972af6df5ec",
                "additions": 22,
                "deletions": 0,
                "committedDate": "2023-07-02T16:08:13Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c05afc22a23ee4341fbb8445b46bfef15586828a",
                "additions": 7,
                "deletions": 0,
                "committedDate": "2023-07-02T16:16:20Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4fdfd332d63b2a14c0c392d36eecf6443692c5b3",
                "additions": 15455,
                "deletions": 4153,
                "committedDate": "2023-07-06T06:50:50Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "84088df97185f879fae3cff2976ae99543109af4",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-07-06T07:06:15Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9ef6ca32bc625ba4643a5ac1d8673330d8eaa6bb",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-11T17:00:27Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "876c8d94c297bb323ead473c74cece01f2f91eb9",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-11T17:00:34Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8f48ca32965ff50d63f611d3d959a8765ff010dc",
                "additions": 4,
                "deletions": 7,
                "committedDate": "2023-07-11T17:00:43Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6f5eaf7ebe5daefb0eea3e88a800b79d6fe9ac06",
                "additions": 4,
                "deletions": 7,
                "committedDate": "2023-07-11T17:00:49Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d5e9d7d5efa3387ccd6272b515e6ba40ecc8952",
                "additions": 21,
                "deletions": 3,
                "committedDate": "2023-07-11T18:50:56Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "075c6781607c427ad8defb2a0c6fd42c64510cba",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-11T19:38:37Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9c9e69381dcc70d9cf71fd06b70c718f88f23126",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2023-07-11T19:47:24Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7318fc02d8f3d4106931f1a28d2f1ae1ecc7bf58",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-11T19:50:11Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b8ae4cb9dd88f229e1018856b6ab7a0c83e1098c",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-11T21:53:06Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "62d8e09105bc8893285ba59328756a60ce2eddea",
                "additions": 93,
                "deletions": 1,
                "committedDate": "2023-07-12T07:21:29Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9a3a577afd15280bd290cce26348f2103d710c53",
                "additions": 84,
                "deletions": 5,
                "committedDate": "2023-07-12T07:44:22Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4b97d6bc3289162fa76287445b03fb52fddf3557",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-07-12T07:50:17Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "317cfb8bb4d4f73388026fe4e6446ede23ae48dc",
                "additions": 7,
                "deletions": 17,
                "committedDate": "2023-07-12T17:40:20Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "194ca7530f31523d8c3129b19e8c8d1f8d547ebc",
                "additions": 0,
                "deletions": 6,
                "committedDate": "2023-07-12T17:45:27Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "82264971e51984f15f8c1e9b61f7714eb89de3f3",
                "additions": 112,
                "deletions": 27,
                "committedDate": "2023-07-12T18:05:24Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2a3dddc7e96c2f7fe2a40307937c09f79ae85e19",
                "additions": 9,
                "deletions": 0,
                "committedDate": "2023-07-12T18:19:12Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a6d01c85bd374a3ec3fcbf2adf85a586e15e3615",
                "additions": 96,
                "deletions": 0,
                "committedDate": "2023-07-12T18:34:29Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f421a6c1b38580492dc131ee3819ded36c0ea428",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-12T18:45:15Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5cec79575e179b6fbb6ae9f377aee212ec72b9d2",
                "additions": 14,
                "deletions": 25,
                "committedDate": "2023-07-13T05:27:28Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b75aa6e7fc130c0ac159d0829470fbd1696cfd3b",
                "additions": 11,
                "deletions": 30,
                "committedDate": "2023-07-13T05:36:44Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b44fec0591a957c66838d9d08239b35a3a0156f0",
                "additions": 6,
                "deletions": 2,
                "committedDate": "2023-07-13T05:51:53Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f8b101802eab51312bb7db0eecfc0082b64bb213",
                "additions": 5,
                "deletions": 2,
                "committedDate": "2023-07-13T05:55:56Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "222148e58c2cc29492ebba609bf6e4a8d59944d6",
                "additions": 53,
                "deletions": 6,
                "committedDate": "2023-07-13T17:26:51Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "75e114db085b26fc59b6c99dfc6002d4878b3fa3",
                "additions": 13144,
                "deletions": 1920,
                "committedDate": "2023-07-16T20:04:38Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8ceab16878810e8d85625bff685552e293d9ecc7",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2023-07-16T20:13:47Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c7065d8e797f19500e8f182b09c24e192ca39bce",
                "additions": 10,
                "deletions": 0,
                "committedDate": "2023-07-18T19:43:14Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1ef7fcdc2351109abcbc3bdefb8bf398ea3d263c",
                "additions": 14244,
                "deletions": 4783,
                "committedDate": "2023-07-18T19:44:16Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "94fceb362989b69420f1db167776cd10760d2b53",
                "additions": 23681,
                "deletions": 22043,
                "committedDate": "2023-07-19T20:09:50Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5806ee92a326a9d5f1769eef69e29ee0e85d4877",
                "additions": 9650,
                "deletions": 17473,
                "committedDate": "2023-07-19T20:12:59Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ba208fc95d4aa8c98617569fe915c9434b811305",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-21T16:45:52Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cd0cc57d183ae8a721f4ee0b420110fc82200eae",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-07-21T16:46:07Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "448cf2d2c1111823c31446159296e10d2ffcdb40",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-21T16:46:18Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b68d05a53da0802de53a1619515657448cbebdbd",
                "additions": 3,
                "deletions": 13,
                "committedDate": "2023-07-21T16:51:03Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "01814fcfc9bc135cfcf99796bde3720292190050",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-21T16:55:42Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "79369ef23e0d6afe76f29db312922c47d29c1c74",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-07-21T17:00:01Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7655ad756496b2242ec9e4c90b870a5cc5713a31",
                "additions": 1078,
                "deletions": 192,
                "committedDate": "2023-07-21T17:00:59Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3172603d316d2b0c0cb2b06e8cb0754d50daf1f2",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-21T18:34:12Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e70c52825cdf3c8f814f59b942dd9ce7025052d6",
                "additions": 1094,
                "deletions": 220,
                "committedDate": "2023-07-22T05:48:24Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cb8669b37d08cb9af8a8942b11c055f56f21f472",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-07-22T05:53:15Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f9ef40a79dbc489831d902d24ad68621eaf3a64a",
                "additions": 15,
                "deletions": 0,
                "committedDate": "2023-07-24T16:33:48Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "387ce81538346738ccab5eb8fd8387eecd0d8754",
                "additions": 2772,
                "deletions": 444,
                "committedDate": "2023-07-24T16:34:33Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7e6281206e32bb138946d1aa8662eff76a5be26a",
                "additions": 8,
                "deletions": 6,
                "committedDate": "2023-07-24T19:05:29Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f4ab5dc12ea77cb6ef608e9852da882ecae17213",
                "additions": 2790,
                "deletions": 445,
                "committedDate": "2023-07-25T06:06:53Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f08ce9624d018df2998a1fb4e45e50dd330cf2ac",
                "additions": 20,
                "deletions": 1,
                "committedDate": "2023-07-25T06:13:17Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "08afa9dcf8f0bc64c163d1e65a80b232c8a55b86",
                "additions": 620,
                "deletions": 503,
                "committedDate": "2023-07-25T11:44:27Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "52ff99aac790a9b7f16d8687a8a2055cee971206",
                "additions": 10,
                "deletions": 0,
                "committedDate": "2023-07-26T16:51:59Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ae7b3f0154e125c26deee99a7c480b6e5054f77f",
                "additions": 1625,
                "deletions": 668,
                "committedDate": "2023-07-26T17:13:41Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8b252a3820687113bb5e2fc385cf0ce3d6c0f264",
                "additions": 7,
                "deletions": 16,
                "committedDate": "2023-07-26T17:26:22Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "936f293a6b364ec49f988dd4c857264d09dc44c4",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-07-26T17:27:31Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "87d15f24ad219092b05ac4b280b8127ce86d6f98",
                "additions": 6970,
                "deletions": 3007,
                "committedDate": "2023-08-01T05:09:39Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "873ee77d26e40754d287fe9dd4856fb0a4136d35",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-01T05:12:43Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c65f6ecbe15bb1b4693b8f9a0b870b9e524302f8",
                "additions": 1,
                "deletions": 4,
                "committedDate": "2023-08-01T17:18:40Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "81da5cfb773231186b47c3341c5967e528e294fa",
                "additions": 1,
                "deletions": 4,
                "committedDate": "2023-08-01T17:19:04Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c8fbedeb6132e6559c8538d34507c4778a653b92",
                "additions": 1,
                "deletions": 4,
                "committedDate": "2023-08-01T17:19:19Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "635c0201c36a52336df964daf93d4e77870de80a",
                "additions": 1,
                "deletions": 4,
                "committedDate": "2023-08-01T17:19:35Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f83c78fd1fcef67d8ecc00e0b6b3c65e3450a589",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-01T17:20:25Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b9c083c9ad239f7e6398eaa4bc57d0c10c814ca7",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-01T17:20:35Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "mans0954@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a4b01e7331199eeef7cad0354cc507be14bee50e",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-01T17:29:37Z",
                "author": {
                  "name": "Christopher Hoskin",
                  "email": "christopher.hoskin@overleaf.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-02T16:24:57Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Order/UpperLowerSetTopology.lean",
              "additions": 452,
              "deletions": 0
            }
          ]
        },
        "headRefName": "mans0954/upper-set-topology",
        "headRefOid": "a4b01e7331199eeef7cad0354cc507be14bee50e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5UcpfS",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cyybc",
              "body": "Final set of nitpicks.\r\n\r\nThanks!\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-01T12:15:42Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5672,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5a2Lzd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T12:34:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5iEB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T19:31:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5l24",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mans0954"
              },
              "submittedAt": "2023-07-11T19:43:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5mBe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T19:43:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5mxz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T19:46:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5oB9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T19:50:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5obZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mans0954"
              },
              "submittedAt": "2023-07-11T19:51:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5ot7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T19:52:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5sr1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mans0954"
              },
              "submittedAt": "2023-07-11T20:03:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a5tc9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mans0954"
              },
              "submittedAt": "2023-07-11T20:06:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a6BXg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-11T21:06:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a9okN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-12T11:14:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a9rq5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-12T11:18:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5a9xHS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-12T11:28:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cPHQP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-07-26T11:03:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cSIUf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mans0954"
              },
              "submittedAt": "2023-07-26T17:28:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cyybc",
              "body": "Final set of nitpicks.\r\n\r\nThanks!\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-08-01T12:15:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c1XzI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mans0954"
              },
              "submittedAt": "2023-08-01T17:28:57Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LFO2o",
                    "body": "```suggestion\r\ntheorem ofUpperSet_le_iff {a b : WithUpperSetTopology α} : ofUpperSet a ≤ ofUpperSet b ↔ a ≤ b :=\r\n```",
                    "createdAt": "2023-07-11T12:28:33Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LFO7j",
                    "body": "```suggestion\r\ntheorem toUpperSet_le_iff {a b : α} : toUpperSet a ≤ toUpperSet b ↔ a ≤ b :=\r\n```",
                    "createdAt": "2023-07-11T12:28:49Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LFPFm",
                    "body": "```suggestion\r\n/-- `ofUpper` as an `OrderIso` -/\r\ndef ofUpperSetOrderIso : OrderIso (WithUpperSetTopology α) α :=\r\n{ toFun := ofUpperSet,\r\n  invFun := toUpperSet,\r\n  left_inv := toUpperSet_ofUpperSet,\r\n  right_inv := ofUpperSet_toUpperSet,\r\n  map_rel_iff' := ofUpperSet_le_iff }\r\n```",
                    "createdAt": "2023-07-11T12:29:20Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LFPOh",
                    "body": "```suggestion\r\n/-- `toUpper` as an `OrderIso` -/\r\ndef toUpperSetOrderIso : OrderIso α (WithUpperSetTopology α) := \r\n{ toFun := toUpperSet,\r\n  invFun := ofUpperSet,\r\n  left_inv := ofUpperSet_toUpperSet,\r\n  right_inv := toUpperSet_ofUpperSet,\r\n  map_rel_iff' := toUpperSet_le_iff }\r\n```",
                    "createdAt": "2023-07-11T12:29:50Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHP8b",
                    "body": "```suggestion\r\n    (hf : Monotone f) : coinduced f t₁ ≤ upperSetTopology' β := by\r\n```\r\nThe new convention is that everything before the `:=` has to be indented twice. Could you also check that in the rest of the file?",
                    "createdAt": "2023-07-11T19:31:32Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHSuR",
                    "body": "Presumably this only applies when the statement of the result runs over multiple lines? e.g.\r\n```\r\nlemma Monotone_to_LowerTopology_Dual_Continuous [TopologicalSpace α]\r\n  [UpperSetTopology α] [TopologicalSpace β] [LowerTopology β] {f : α → βᵒᵈ} (hf : Monotone f) :\r\n    Continuous f := by\r\n  rw [continuous_def]\r\n```",
                    "createdAt": "2023-07-11T19:43:13Z",
                    "author": {
                      "login": "mans0954"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHTYG",
                    "body": "No from what I understand the hypotheses and the statement have the same level of indentation, you only go back one tab when getting into the proof. So that gives:\r\n```lean\r\nlemma Monotone_to_LowerTopology_Dual_Continuous [TopologicalSpace α]\r\n    [UpperSetTopology α] [TopologicalSpace β] [LowerTopology β] {f : α → βᵒᵈ} (hf : Monotone f) :\r\n    Continuous f := by\r\n  rw [continuous_def]\r\n```",
                    "createdAt": "2023-07-11T19:46:09Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHUhH",
                    "body": "Hopefully I've got this correct now?",
                    "createdAt": "2023-07-11T19:51:32Z",
                    "author": {
                      "login": "mans0954"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHUsO",
                    "body": "Yes that's perfect, thanks!",
                    "createdAt": "2023-07-11T19:52:18Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHS1f",
                    "body": "This may bite us back at some point, but what do you think of just calling that `upperSetTopology` (with a small `u`) and using the case variation to distinguish it from `UpperSetTopology`. If you think that will be annoying I have no problem with keeping the current name.",
                    "createdAt": "2023-07-11T19:43:44Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHYCp",
                    "body": "I find having `upperSetTopology'`, `UpperSetTopology` and `WithUpperSetTopology` a bit confusing. Originally I tried not naming `upperSetTopology'` at all, but found I seemed to keep needing to refer to it.",
                    "createdAt": "2023-07-11T20:06:15Z",
                    "author": {
                      "login": "mans0954"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LKcBt",
                    "body": "I think it makes sense to have all three (see my comments on Zulip), as long as you are a bit careful about how you build up the API. The current naming is fine, so do whatever you prefer.",
                    "createdAt": "2023-07-12T11:18:14Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHUQp",
                    "body": "Is there a particular reason you split out this result from the TFAE? Ease of use for defining the Scott topology?",
                    "createdAt": "2023-07-11T19:50:15Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHXhE",
                    "body": "I think I used it in that form here: https://github.com/leanprover-community/mathlib4/pull/2508/files#diff-983e16dd03108ad09234625f776ad94cfb58b1f6ee4762bf7519306fd90a2b46R220\r\n\r\nTo be honest, I'm finding multiple topologies on the same space in Lean very hard to wrap my head around. Given that it's a very common situation in mathematics (think about all the topologies on a W*-algebra - e.g. Takesaki, Theory of Operator Algebra I Chapter II Theorem 2.6) I was hoping there might be more by the way of an established convention about how to set these things out. I asked [on Zulip](https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Multiple.20topologies.3F) but found it hard to interpret the answers.",
                    "createdAt": "2023-07-11T20:03:55Z",
                    "author": {
                      "login": "mans0954"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LHmOK",
                    "body": "I didn't participate in this thread at the time because I was busy with other things, but it's true that the discussion wasn't super clear. I have quite a lot of experience working with multiple topologies (although not in the context of order-related topologies). I'll try to write a summary of the way I see things tomorrow and post it on Zulip. \r\n\r\nI also have ideas about this particular situation, but I need to test them so I'll comment tomorrow.",
                    "createdAt": "2023-07-11T21:06:24Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LKZ0J",
                    "body": "I've added some explanations on Zulip, I hope that'll help to clarify things!",
                    "createdAt": "2023-07-12T11:14:35Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LKfd8",
                    "body": "I would suggest doing the following:\r\n```suggestion\r\nprotected lemma monotone_iff_continuous {t₁ : TopologicalSpace α} [UpperSetTopology α]\r\n    {t₂ : TopologicalSpace β} [UpperSetTopology β] {f : α → β} :\r\n    Monotone f ↔ Continuous f := by\r\n  constructor\r\n  · intro hf\r\n    simp_rw [continuous_def, IsOpen_iff_IsUpperSet]\r\n    exact fun _ hs ↦ IsUpperSet.preimage hs hf\r\n  · intro hf a b hab\r\n    rw [← mem_Iic, ← closure_singleton, ← mem_preimage]\r\n    apply (Continuous.closure_preimage_subset hf {f b})\r\n    rw [← mem_Iic, ← closure_singleton] at hab\r\n    apply mem_of_mem_of_subset hab\r\n    apply closure_mono\r\n    rw [singleton_subset_iff, mem_preimage, mem_singleton_iff]\r\n```\r\nI don't think the `coinduced` and `induced` statements are worth putting in the TFAE because they are always one rewrite away anyways, and I feel like `rw [UpperSetTopology.monotone_iff_continuous, continuous_iff_coinduced_le]` is more readable than `rw [(UpperSetTopology.monotone_tfae).out 0 2]`.\r\n\r\nThen you can also remove `upperSetTopology_coinduced` imo, first because it can easily be proven;\r\n```lean\r\nlemma upperSetTopology_coinduced {t₁ : TopologicalSpace α} [UpperSetTopology α]\r\n    (hf : Monotone f) : coinduced f t₁ ≤ upperSetTopology' β := by\r\n  rwa [← continuous_iff_coinduced_le, ← UpperSetTopology.monotone_iff_continuous]\r\n```\r\nand also because I think you can just work around it in #2508 ",
                    "createdAt": "2023-07-12T11:28:51Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5L-8wY",
                    "body": "```suggestion\r\n\r\n/--\r\n```",
                    "createdAt": "2023-07-26T11:01:11Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5L-9MW",
                    "body": "Did you try getting this proof by duality? For the shorter one above there's no point since it's really short already, but for this one and the ones below it would be really nice.",
                    "createdAt": "2023-07-26T11:03:09Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MAz-L",
                    "body": "I've done this now. Needed an extra lemma: #6157",
                    "createdAt": "2023-07-26T17:28:23Z",
                    "author": {
                      "login": "mans0954"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MUysd",
                    "body": "```suggestion\r\n{ ofUpperSet with\r\n  map_rel_iff' := ofUpperSet_le_iff }\r\n```",
                    "createdAt": "2023-08-01T11:56:34Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MUyz2",
                    "body": "```suggestion\r\n{ toUpperSet with\r\n  map_rel_iff' := toUpperSet_le_iff }\r\n```",
                    "createdAt": "2023-08-01T11:57:02Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MUy8a",
                    "body": "```suggestion\r\n{ ofLowerSet with\r\n  map_rel_iff' := ofLowerSet_le_iff }\r\n```",
                    "createdAt": "2023-08-01T11:57:34Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MUzNm",
                    "body": "```suggestion\r\n{ toLowerSet with\r\n  map_rel_iff' := toLowerSet_le_iff }\r\n```",
                    "createdAt": "2023-08-01T11:58:37Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MUze9",
                    "body": "```suggestion\r\n  simp_rw [IsOpen_iff_IsUpperSet] at *\r\n  apply isUpperSet_sInter\r\n  intros s hs\r\n```",
                    "createdAt": "2023-08-01T11:59:42Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MUztZ",
                    "body": "```suggestion\r\n  simp_rw [IsOpen_iff_IsUpperSet] at *\r\n  apply isUpperSet_iInter\r\n  intros i\r\n```",
                    "createdAt": "2023-08-01T12:00:38Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MU20o",
                    "body": "Untested\r\n```suggestion\r\n    rw [← mem_Iic, ← closure_singleton, ← mem_preimage] at hab ⊢\r\n    apply (Continuous.closure_preimage_subset hf {f b})\r\n```",
                    "createdAt": "2023-08-01T12:12:26Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MWao5",
                    "body": "Not quite, but this works:\r\n```\r\n    rw [← mem_Iic, ← closure_singleton] at hab ⊢\r\n    apply (Continuous.closure_preimage_subset hf {f b})\r\n```",
                    "createdAt": "2023-08-01T17:28:57Z",
                    "author": {
                      "login": "mans0954"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4NTU1Nzg=",
              "login": "mans0954"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Topology/Order/UpperLowerSetTopology): Introduce the Upper Set (or Alexandrov) topology and the Lower Set topology",
        "updatedAt": "2023-08-01T18:35:21Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5672",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d66ceb4ca4b6ba585fc43e07fea8b65e7472a8c3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8fa1fcda7374ccdedd75993a444be4816345caa5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cc4eecddbdcec87a6746f7d6396e854cfe12bfae"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ccfc6d99da1d58e0c62b8a0ba76a00d403253a5d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d612756036fe4aa0b7c0b4cce8862c1d5cfd76a9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7e4d0f93e2500e6eb2d33aad6d827c5af474818b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "251a6cc86ed734b3a51a54646e7c64e8964d7c73"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bf272c2fc5bbfbded55f2692d6d3530013f4d3e4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "222dd958d5f70a2e2a2d14597faad46a1c9cff34"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ff51ef06cf8b4d24dc3e0d7e20511bf2e5fef751"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9aaf9376a87da68c5265b58aed368900641c3082"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9ea2aceb94f9aac9ffe7e7f8a0538cfa160db09e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "15fe595ea8c88f4cd748612de0a57eb778dd9d63"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dbee995496ac9f2a45d95502bfd7e972af6df5ec"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c05afc22a23ee4341fbb8445b46bfef15586828a"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NVTvT",
              "createdAt": "2023-07-02T16:25:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5KyEmM",
                "title": "[Merged by Bors] - feat: Scott topology on a preorder",
                "url": "https://github.com/leanprover-community/mathlib4/pull/2508"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJCMxy2",
              "createdAt": "2023-07-02T16:30:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4fdfd332d63b2a14c0c392d36eecf6443692c5b3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "84088df97185f879fae3cff2976ae99543109af4"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJFJZMI",
              "createdAt": "2023-07-07T02:55:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5qYIqyzwAAAAJG4lZn",
              "createdAt": "2023-07-10T20:02:03Z",
              "assignee": {
                "id": "MDQ6VXNlcjQ4NjU2Nzkz",
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hMsDj",
              "createdAt": "2023-07-11T12:14:48Z",
              "body": "Could you add comments (I'd say both in the module docstrings and in the docs of the definitions) warning that this is not the dual of the `LowerTopology`? Maybe even add an example in the module docstring.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5a2Lzd",
              "createdAt": "2023-07-11T12:28:33Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJHWF7x",
              "createdAt": "2023-07-11T12:35:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJHWF78",
              "createdAt": "2023-07-11T12:35:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9ef6ca32bc625ba4643a5ac1d8673330d8eaa6bb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "876c8d94c297bb323ead473c74cece01f2f91eb9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8f48ca32965ff50d63f611d3d959a8765ff010dc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6f5eaf7ebe5daefb0eea3e88a800b79d6fe9ac06"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4d5e9d7d5efa3387ccd6272b515e6ba40ecc8952"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hPGOz",
              "createdAt": "2023-07-11T18:51:45Z",
              "body": "> Could you add comments (I'd say both in the module docstrings and in the docs of the definitions) warning that this is not the dual of the `LowerTopology`? Maybe even add an example in the module docstring.\r\n\r\nI've added the warning and also `UpperSetTopology.Monotone_to_LowerTopology_Dual_Continuous` which explains the relationship between these topologies.",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJHmWXD",
              "createdAt": "2023-07-11T18:51:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJHmWXL",
              "createdAt": "2023-07-11T18:51:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5a5iEB",
              "createdAt": "2023-07-11T19:31:32Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hPT2x",
              "createdAt": "2023-07-11T19:34:39Z",
              "body": "I think I know your answer, but why not also introduce `LowerSetTopology`? In particular I feel like having the full collection would make it easier to emphasize that `LowerTopology` is different from `LowerSetTopoloy`, without resorting to dualizing the order.\r\nI don't have a use case in mind, but I know that I have a use case for the dual version of `LowerTopology` (which we still don't have) so it wouldn't surprise me if such a case appears in the future.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "075c6781607c427ad8defb2a0c6fd42c64510cba"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5a5mBe",
              "createdAt": "2023-07-11T19:43:44Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9c9e69381dcc70d9cf71fd06b70c718f88f23126"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7318fc02d8f3d4106931f1a28d2f1ae1ecc7bf58"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5a5oB9",
              "createdAt": "2023-07-11T19:50:15Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hPfa6",
              "createdAt": "2023-07-11T20:14:29Z",
              "body": "> I think I know your answer, but why not also introduce `LowerSetTopology`? In particular I feel like having the full collection would make it easier to emphasize that `LowerTopology` is different from `LowerSetTopoloy`, without resorting to dualizing the order. I don't have a use case in mind, but I know that I have a use case for the dual version of `LowerTopology` (which we still don't have) so it wouldn't surprise me if such a case appears in the future.\r\n\r\nI got my fingers burnt early on introducing something just because we could which then caused trouble later on, so I've been a bit cautious since. If you have a use for `UpperTopology` (the dual version of `LowerTopology`) then maybe we should just go ahead and add these things in.\r\n\r\nWould I just create a file called `LowerSetTopology.lean`, define\r\n```\r\ndef lowerSetTopology : TopologicalSpace α :=\r\n{ IsOpen := IsLowerSet,\r\n...\r\n```\r\nand restate/prove all the results, or can I infer them all somehow using `OrderDual`?\r\n",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hPu3i",
              "createdAt": "2023-07-11T21:10:46Z",
              "body": "> > I think I know your answer, but why not also introduce `LowerSetTopology`? In particular I feel like having the full collection would make it easier to emphasize that `LowerTopology` is different from `LowerSetTopoloy`, without resorting to dualizing the order. I don't have a use case in mind, but I know that I have a use case for the dual version of `LowerTopology` (which we still don't have) so it wouldn't surprise me if such a case appears in the future.\r\n> \r\n> I got my fingers burnt early on introducing something just because we could which then caused trouble later on, so I've been a bit cautious since. If you have a use for `UpperTopology` (the dual version of `LowerTopology`) then maybe we should just go ahead and add these things in.\r\n> \r\n> Would I just create a file called `LowerSetTopology.lean`, define\r\n> \r\n> ```\r\n> def lowerSetTopology : TopologicalSpace α :=\r\n> { IsOpen := IsLowerSet,\r\n> ...\r\n> ```\r\n> \r\n> and restate/prove all the results, or can I infer them all somehow using `OrderDual`?\r\n\r\nI'd say you can have them in the same file (`UpperLowerSetTopology.lean`). You can either separate them into two sections or mix them, it doesn't really matter (except maybe for managing namespaces). You'll have to restate all the results, but the proofs should hopefully be one line applications of the upper version ",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b8ae4cb9dd88f229e1018856b6ab7a0c83e1098c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "62d8e09105bc8893285ba59328756a60ce2eddea"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9a3a577afd15280bd290cce26348f2103d710c53"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4b97d6bc3289162fa76287445b03fb52fddf3557"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hRrSk",
              "createdAt": "2023-07-12T07:52:57Z",
              "body": "> I'd say you can have them in the same file (`UpperLowerSetTopology.lean`). You can either separate them into two sections or mix them, it doesn't really matter (except maybe for managing namespaces). You'll have to restate all the results, but the proofs should hopefully be one line applications of the upper version\r\n\r\nI've made a start on adding `UpperTopology`: https://github.com/leanprover-community/mathlib4/tree/mans0954/UpperTopology\r\n\r\nI've added `def toOrderDualHomeomorph [Preorder α] : WithLowerTopology α ≃ₜ WithUpperTopology αᵒᵈ` - is that the right way to express this? \r\n",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5a9xHS",
              "createdAt": "2023-07-12T11:28:50Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hTM2e",
              "createdAt": "2023-07-12T12:16:01Z",
              "body": "> I've made a start on adding `UpperTopology`: [`mans0954`/UpperTopology](https://github.com/leanprover-community/mathlib4/tree/mans0954/UpperTopology?rgh-link-date=2023-07-12T07%3A52%3A57Z)\r\n> \r\n> I've added `def toOrderDualHomeomorph [Preorder α] : WithLowerTopology α ≃ₜ WithUpperTopology αᵒᵈ` - is that the right way to express this?\r\n\r\nCould you please open a PR for that? It'll be easier to make suggestions. Also if you want to dualize this particular file in a separate PR that would work for me, do as you wish.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "317cfb8bb4d4f73388026fe4e6446ede23ae48dc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "194ca7530f31523d8c3129b19e8c8d1f8d547ebc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "82264971e51984f15f8c1e9b61f7714eb89de3f3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2a3dddc7e96c2f7fe2a40307937c09f79ae85e19"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a6d01c85bd374a3ec3fcbf2adf85a586e15e3615"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f421a6c1b38580492dc131ee3819ded36c0ea428"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hWHJ2",
              "createdAt": "2023-07-12T20:40:08Z",
              "body": "@ADedecker I've added the statements for the lower set topology to this file/PR.\r\n\r\nIs the next step to prove:\r\n```\r\ninstance  [Preorder α] [TopologicalSpace α] [LowerSetTopology α] : UpperSetTopology (αᵒᵈ) := sorry\r\n```\r\nso that\r\n```\r\ntheorem LowerSetTopology.IsOpen_sInter {S : Set (Set α)} (hf : ∀ s ∈ S, IsOpen s) : IsOpen (⋂₀ S) := by\r\n  apply @UpperSetTopology.IsOpen_sInter αᵒᵈ _ _ _ _ (fun s a ↦ hf s a)\r\n```\r\netc?",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hWaAN",
              "createdAt": "2023-07-12T21:58:34Z",
              "body": "Yes, I think this is the perfect approach! In particular note that you don't actually need an homeomorphism with the order dual, this instance does all the work.\r\n\r\nEDIT: you can keep the homeomorphism of course, I just meant that you don't have to manually transport all the proofs through it.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5cec79575e179b6fbb6ae9f377aee212ec72b9d2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b75aa6e7fc130c0ac159d0829470fbd1696cfd3b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b44fec0591a957c66838d9d08239b35a3a0156f0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f8b101802eab51312bb7db0eecfc0082b64bb213"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "222148e58c2cc29492ebba609bf6e4a8d59944d6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "75e114db085b26fc59b6c99dfc6002d4878b3fa3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8ceab16878810e8d85625bff685552e293d9ecc7"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJKBDJE",
              "createdAt": "2023-07-16T20:20:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c7065d8e797f19500e8f182b09c24e192ca39bce"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1ef7fcdc2351109abcbc3bdefb8bf398ea3d263c"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJLwMOJ",
              "createdAt": "2023-07-19T10:30:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "94fceb362989b69420f1db167776cd10760d2b53"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5806ee92a326a9d5f1769eef69e29ee0e85d4877"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJMHt74",
              "createdAt": "2023-07-19T20:20:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ba208fc95d4aa8c98617569fe915c9434b811305"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cd0cc57d183ae8a721f4ee0b420110fc82200eae"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "448cf2d2c1111823c31446159296e10d2ffcdb40"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b68d05a53da0802de53a1619515657448cbebdbd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "01814fcfc9bc135cfcf99796bde3720292190050"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "79369ef23e0d6afe76f29db312922c47d29c1c74"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7655ad756496b2242ec9e4c90b870a5cc5713a31"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3172603d316d2b0c0cb2b06e8cb0754d50daf1f2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e70c52825cdf3c8f814f59b942dd9ce7025052d6"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cb8669b37d08cb9af8a8942b11c055f56f21f472"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f9ef40a79dbc489831d902d24ad68621eaf3a64a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "387ce81538346738ccab5eb8fd8387eecd0d8754"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7e6281206e32bb138946d1aa8662eff76a5be26a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f4ab5dc12ea77cb6ef608e9852da882ecae17213"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f08ce9624d018df2998a1fb4e45e50dd330cf2ac"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJOtvJo",
              "createdAt": "2023-07-25T11:32:25Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iU-CH",
              "createdAt": "2023-07-25T11:37:44Z",
              "body": "Could you merge master?",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "08afa9dcf8f0bc64c163d1e65a80b232c8a55b86"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iVAtv",
              "createdAt": "2023-07-25T11:46:03Z",
              "body": "> Could you merge master?\r\n\r\nDone.",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cPHQP",
              "createdAt": "2023-07-26T11:01:11Z",
              "body": "",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJPb_dm",
              "createdAt": "2023-07-26T11:03:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJPb_du",
              "createdAt": "2023-07-26T11:03:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "52ff99aac790a9b7f16d8687a8a2055cee971206"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ae7b3f0154e125c26deee99a7c480b6e5054f77f"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJPr0K5",
              "createdAt": "2023-07-26T17:19:03Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8b252a3820687113bb5e2fc385cf0ce3d6c0f264"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NsUcL",
              "createdAt": "2023-07-26T17:27:03Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5Wdqev",
                "title": "[Merged by Bors] - feat(Order/Monotone/Basic): Add Monotone.dual_iff and Antitone.dual_iff",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6157"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "936f293a6b364ec49f988dd4c857264d09dc44c4"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJPsKFW",
              "createdAt": "2023-07-26T17:28:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJPsKFl",
              "createdAt": "2023-07-26T17:28:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJSQ6Xv",
              "createdAt": "2023-07-31T23:13:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJSRNjO",
              "createdAt": "2023-07-31T23:19:29Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i53lx",
              "createdAt": "2023-07-31T23:19:31Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#5873~~\n* ~~leanprover-community/mathlib4#6157~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "87d15f24ad219092b05ac4b280b8127ce86d6f98"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "873ee77d26e40754d287fe9dd4856fb0a4136d35"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJSX1AG",
              "createdAt": "2023-08-01T05:21:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cyybc",
              "createdAt": "2023-08-01T11:56:34Z",
              "body": "Final set of nitpicks.\r\n\r\nThanks!\r\nbors d+",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i9JPX",
              "createdAt": "2023-08-01T12:15:44Z",
              "body": ":v: mans0954 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5qYIqyzwAAAAJSmxQr",
              "createdAt": "2023-08-01T12:15:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5qYIqyzwAAAAJSmxS2",
              "createdAt": "2023-08-01T12:15:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c65f6ecbe15bb1b4693b8f9a0b870b9e524302f8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "81da5cfb773231186b47c3341c5967e528e294fa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c8fbedeb6132e6559c8538d34507c4778a653b92"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "635c0201c36a52336df964daf93d4e77870de80a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f83c78fd1fcef67d8ecc00e0b6b3c65e3450a589"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b9c083c9ad239f7e6398eaa4bc57d0c10c814ca7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a4b01e7331199eeef7cad0354cc507be14bee50e"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i_nV2",
              "createdAt": "2023-08-01T18:11:22Z",
              "body": "bors r+",
              "author": {
                "login": "mans0954"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5i_vGr",
              "createdAt": "2023-08-01T18:35:15Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5730357027/job/15528968257)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5730357027/job/15528968042)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5730357027/job/15528968453)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5qYIqyzwAAAAJS2UC7",
              "createdAt": "2023-08-01T18:35:16Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5qYIqyzwAAAAJS2UKJ",
              "createdAt": "2023-08-01T18:35:20Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N7__Z",
              "createdAt": "2023-08-13T12:09:12Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5X0MN5",
                "title": "[Merged by Bors] - fix(Topology/Order/UpperLowerSetTopology): Fix theorem names in UpperLowerSetTopology to match mathlib4 conventions",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6557"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
