{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 77,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "urkud"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\nI'm surprised we don't have this.\r\nI also plan to add versions for `Con`s and `QuotientGroup`.\r\n`pi` version awaits a refactor turning `piSetoid` into a `def`.\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-10-08T21:40:08Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6PF4WA",
              "body": "### PR summary [40252201ef](https://github.com/leanprover-community/mathlib4/pull/17550/commits/40252201ef9e56b083f2aec12a410e660ca5b067)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Logic.Equiv.QuotProd`|253|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ quotProdQuot`\n`+ quotProdQuot_apply_mk`\n`+ quotProdQuot_symm_apply_mk`\n`+ quotientProdQuotient`\n`+ quotientProdQuotient_apply_mk`\n`+ quotientProdQuotient_symm_apply_mk`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-08T19:42:13Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGgP2",
              "body": "See #15947. In fact the `piSetoid` equiv is the one I need there; I simply did the `prod` version as well for completeness. Once that's in I have followup material ready to PR about `leftRel` and `rightRel`\r\n\r\n```lean\r\n@[to_additive]\r\nlemma leftRel_prod {β : Type*} [Group β] (s' : Subgroup β) :\r\n    leftRel (s.prod s') = (leftRel s).prod (leftRel s') := by\r\n\r\n@[to_additive]\r\nlemma rightRel_prod {β : Type*} [Group β] (s' : Subgroup β) :\r\n    rightRel (s.prod s') = (rightRel s).prod (rightRel s') := by\r\n\r\n@[to_additive]\r\nlemma leftRel_pi {ι : Type*} {β : ι → Type*} [∀ i, Group (β i)] (s' : ∀ i, Subgroup (β i)) :\r\n    leftRel (Subgroup.pi Set.univ s') = @piSetoid _ _ fun i ↦ leftRel (s' i) := by\r\n\r\n@[to_additive]\r\nlemma rightRel_pi {ι : Type*} {β : ι → Type*} [∀ i, Group (β i)] (s' : ∀ i, Subgroup (β i)) :\r\n    rightRel (Subgroup.pi Set.univ s') = @piSetoid _ _ fun i ↦ rightRel (s' i) := by\r\n```\r\n\r\nand then my actual goal there, also ready to PR, is\r\n\r\n```lean\r\n@[to_additive]\r\nlemma index_prod (H : Subgroup G) (K : Subgroup G') : (H.prod K).index = H.index * K.index := by\r\n\r\n@[to_additive]\r\nlemma index_pi {ι : Type*} [Fintype ι] (H : ι → Subgroup G) :\r\n    (Subgroup.pi Set.univ H).index = ∏ i, (H i).index := by\r\n```\r\n\r\n(where again, the `pi` version is the one I have a use for and the `prod` one is for completeness).",
              "createdAt": "2024-10-08T21:23:21Z",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGgf-",
              "body": "(I agree that `piSetoid` would be better as a `def`.)",
              "createdAt": "2024-10-08T21:24:06Z",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PGlX2",
              "body": "I'm sorry I've missed your PR. I'm closing this one. Could you please open PRs about groups (depending on #15947), so that I can merge them into my branch and work on what I want here (same equivalence as a homeomorphism for topological groups)?",
              "createdAt": "2024-10-08T21:37:24Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PM7Jg",
              "body": "The first four lemmas I mentioned about groups are now in #17585.",
              "createdAt": "2024-10-09T14:37:28Z",
              "author": {
                "login": "jsm28"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "40252201ef9e56b083f2aec12a410e660ca5b067",
                "additions": 77,
                "deletions": 0,
                "committedDate": "2024-10-08T19:40:20Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwgWAw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553279/job/31256483331"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHR1dI7g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11244180894/job/31261673710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwgVoA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553297/job/31256483232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwgW4g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553273/job/31256483554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwecZw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRweccA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256452208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwgWuA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553295/job/31256483512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRweeMQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwedUQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256452433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwgVpg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553295/job/31256483238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwedTg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRweehg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256452742"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwefIA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRw1Bag",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256822122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwh9eQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31256509817"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRwhuDA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17550&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-08T19:41:27Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Logic/Equiv/QuotProd.lean",
              "additions": 76,
              "deletions": 0
            }
          ]
        },
        "headRefName": "YK-equiv-quot-prod",
        "headRefOid": "40252201ef9e56b083f2aec12a410e660ca5b067",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c59_eV7",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABYQuqiA",
              "name": "t-logic"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17550,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjEwNTM3Nzkz",
              "login": "jsm28"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwgWAw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553279/job/31256483331"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHR1dI7g",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11244180894/job/31261673710"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwgVoA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553297/job/31256483232"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwgW4g",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553273/job/31256483554"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwecZw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452199"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRweccA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256452208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwgWuA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553295/job/31256483512"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRweeMQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452657"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwedUQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256452433"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwgVpg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242553295/job/31256483238"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwedTg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452430"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRweehg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256452742"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwefIA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543654/job/31256452896"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRw1Bag",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11242543652/job/31256822122"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwh9eQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31256509817"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHRwhuDA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17550&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Equiv/QuotProd): new file",
        "updatedAt": "2024-10-09T14:37:29Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17550",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZbQFZzwAAAANj9t8J",
              "createdAt": "2024-10-08T19:41:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PF4WA",
              "createdAt": "2024-10-08T19:42:13Z",
              "body": "### PR summary [40252201ef](https://github.com/leanprover-community/mathlib4/pull/17550/commits/40252201ef9e56b083f2aec12a410e660ca5b067)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Logic.Equiv.QuotProd`|253|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ quotProdQuot`\n`+ quotProdQuot_apply_mk`\n`+ quotProdQuot_symm_apply_mk`\n`+ quotientProdQuotient`\n`+ quotientProdQuotient_apply_mk`\n`+ quotientProdQuotient_symm_apply_mk`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZbQFZzwAAAANj9xRo",
              "createdAt": "2024-10-08T19:42:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABYQuqiA",
                "name": "t-logic"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGgP2",
              "createdAt": "2024-10-08T21:23:21Z",
              "body": "See #15947. In fact the `piSetoid` equiv is the one I need there; I simply did the `prod` version as well for completeness. Once that's in I have followup material ready to PR about `leftRel` and `rightRel`\r\n\r\n```lean\r\n@[to_additive]\r\nlemma leftRel_prod {β : Type*} [Group β] (s' : Subgroup β) :\r\n    leftRel (s.prod s') = (leftRel s).prod (leftRel s') := by\r\n\r\n@[to_additive]\r\nlemma rightRel_prod {β : Type*} [Group β] (s' : Subgroup β) :\r\n    rightRel (s.prod s') = (rightRel s).prod (rightRel s') := by\r\n\r\n@[to_additive]\r\nlemma leftRel_pi {ι : Type*} {β : ι → Type*} [∀ i, Group (β i)] (s' : ∀ i, Subgroup (β i)) :\r\n    leftRel (Subgroup.pi Set.univ s') = @piSetoid _ _ fun i ↦ leftRel (s' i) := by\r\n\r\n@[to_additive]\r\nlemma rightRel_pi {ι : Type*} {β : ι → Type*} [∀ i, Group (β i)] (s' : ∀ i, Subgroup (β i)) :\r\n    rightRel (Subgroup.pi Set.univ s') = @piSetoid _ _ fun i ↦ rightRel (s' i) := by\r\n```\r\n\r\nand then my actual goal there, also ready to PR, is\r\n\r\n```lean\r\n@[to_additive]\r\nlemma index_prod (H : Subgroup G) (K : Subgroup G') : (H.prod K).index = H.index * K.index := by\r\n\r\n@[to_additive]\r\nlemma index_pi {ι : Type*} [Fintype ι] (H : ι → Subgroup G) :\r\n    (Subgroup.pi Set.univ H).index = ∏ i, (H i).index := by\r\n```\r\n\r\n(where again, the `pi` version is the one I have a use for and the `prod` one is for completeness).",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGgf-",
              "createdAt": "2024-10-08T21:24:06Z",
              "body": "(I agree that `piSetoid` would be better as a `def`.)",
              "author": {
                "login": "jsm28"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PGlX2",
              "createdAt": "2024-10-08T21:37:24Z",
              "body": "I'm sorry I've missed your PR. I'm closing this one. Could you please open PRs about groups (depending on #15947), so that I can merge them into my branch and work on what I want here (same equivalence as a homeomorphism for topological groups)?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6ZbQFZzwAAAANkCIlw",
              "createdAt": "2024-10-08T21:40:08Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6ZbQFZzwAAAANkCIwr",
              "createdAt": "2024-10-08T21:40:13Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PM7Jg",
              "createdAt": "2024-10-09T14:37:28Z",
              "body": "The first four lemmas I mentioned about groups are now in #17585.",
              "author": {
                "login": "jsm28"
              }
            }
          ]
        }
      }
    }
  }
}
