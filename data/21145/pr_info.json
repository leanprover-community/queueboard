{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 136,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "apnelson1"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We define the fundamental circuit in a matroid for a set `I` and an element `e`, then use it to show that dependent sets all contain circuits, and a circuit-based extensionality lemma. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6b-0IQ",
              "body": "### PR summary [94233c6f28](https://github.com/leanprover-community/mathlib4/pull/21145/commits/94233c6f28d1f597f496f920f13c68c9687b4511)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Base.fundCircuit_circuit`\n`+ Circuit.eq_fundCircuit_of_subset`\n`+ Dep.exists_circuit_subset`\n`+ Indep.fundCircuit_circuit`\n`+ Indep.mem_fundCircuit_iff`\n`+ dep_iff_superset_circuit`\n`+ dep_iff_superset_circuit'`\n`+ ext_circuit`\n`+ ext_circuit_not_indep`\n`+ ext_iff_circuit`\n`+ fundCircuit`\n`+ fundCircuit_eq_of_mem`\n`+ fundCircuit_eq_of_mem'`\n`+ fundCircuit_eq_sInter`\n`+ fundCircuit_subset_ground`\n`+ fundCircuit_subset_insert`\n`+ indep_iff_forall_subset_not_circuit`\n`+ indep_iff_forall_subset_not_circuit'`\n`+ mem_fundCircuit`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-27T21:29:22Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "94233c6f28d1f597f496f920f13c68c9687b4511",
                "additions": 136,
                "deletions": 0,
                "committedDate": "2025-01-27T21:26:58Z",
                "author": {
                  "name": "Peter Nelson",
                  "email": "71660771+apnelson1@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcV7jkA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": null,
                        "status": "QUEUED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13001814010/job/36261782416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcV7lMw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": null,
                        "status": "QUEUED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13001814017/job/36261782835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcV7mhQ",
                        "name": "Fix style issues from lint",
                        "conclusion": null,
                        "status": "QUEUED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13001814021/job/36261783173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcMznbA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641279/job/36252215148"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM3_Fw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662666/job/36252286743"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM3_QQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662668/job/36252286785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM3_Dw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662669/job/36252286735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcMzl1Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641275/job/36252214741"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM4AjQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662673/job/36252287117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcMzmSA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641279/job/36252214856"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcMzm2w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641275/job/36252215003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM3_Og",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662673/job/36252286778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcMzobQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641279/job/36252215405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcNNrpQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641275/job/36252642213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM4c9g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36252294390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIcM5teQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21145&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-27T21:28:30Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Matroid/Circuit.lean",
              "additions": 136,
              "deletions": 0
            }
          ]
        },
        "headRefName": "matroid_fund_circuit",
        "headRefOid": "94233c6f28d1f597f496f920f13c68c9687b4511",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6JJH2e",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZlcXE",
              "body": "Looks really nice!",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-01-28T01:30:32Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21145,
        "potentialMergeCommit": {
          "oid": "b48c3c5e8c3ec0319bed02e8771ae861016ef5f4"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZlcXE",
              "body": "Looks really nice!",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-01-28T01:30:32Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHUSp",
                    "body": "Could you add the output type of this definition? I'm guessing it's `Set α`, but it would be nice to be explicit and readable here.",
                    "createdAt": "2025-01-27T23:05:35Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHVyT",
                    "body": "```suggestion\r\n/-- For an independent set `I` that spans some `e ∉ I`, the unique circuit contained in `insert e I`.\r\n```\r\nOptional, but to me this makes it a little clearer what's going on, especially since you refer to `insert e I` later in this docstring and in later lemmas.",
                    "createdAt": "2025-01-27T23:09:25Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHsZe",
                    "body": "```suggestion\r\n  have h' (C) : M₁.Circuit C ↔ M₂.Circuit C := \r\n    (em (C ⊆ M₁.E)).elim (h (C := C))\r\n      (fun hC ↦ iff_of_false (mt Circuit.subset_ground hC)\r\n        (mt Circuit.subset_ground (fun hss ↦ hC (hss.trans_eq hE.symm))))\r\n```",
                    "createdAt": "2025-01-28T01:18:26Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHsnF",
                    "body": "```suggestion\r\n    M₁ = M₂ ↔ M₁.E = M₂.E ∧ ∀ C, M₁.Circuit C ↔ M₂.Circuit C :=\r\n```\r\nI think this would be easier to use, the key distinction between this situation and that in the previous two lemmas is that those have an explicit argument immediately following C which determines it, but here there is none such.",
                    "createdAt": "2025-01-28T01:19:51Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHst0",
                    "body": "```suggestion\r\ntwo matroids on the same ground set are equal if no circuit of one is independent in the other. -/\r\n```\r\nThis reads more cleanly to me, what do you think?",
                    "createdAt": "2025-01-28T01:20:22Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHtEb",
                    "body": "Lemmas with a primed name like this and the following should have a docstring, see the discussion here: https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/theorem.20names.20with.20primes.3F/near/471505697. I'm surprised this case isn't causing the linter to fail, actually...",
                    "createdAt": "2025-01-28T01:22:47Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHtUe",
                    "body": "```suggestion\r\n    refine ((hI.fundCircuit_circuit ?_ (fun heI ↦ ?_)).eq_of_subset_circuit hC hss).symm\r\n```",
                    "createdAt": "2025-01-28T01:24:43Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHtya",
                    "body": "In fact, might it be sensible to have a version of `eq_of_subset_circuit` the other way round; analogous to how both `Finset.eq_of_subset_of_card_le` and `Finset.eq_of_superset_of_card_ge` exist? I'd be happy either way, but having this alternate version looks like it could be useful to you...",
                    "createdAt": "2025-01-28T01:28:04Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHtZC",
                    "body": "```suggestion\r\n  obtain rfl | hne := eq_or_ne x e\r\n```\r\na minor stylistic point",
                    "createdAt": "2025-01-28T01:25:07Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHtbj",
                    "body": "```suggestion\r\n      (by simp +contextual]\r\n```",
                    "createdAt": "2025-01-28T01:25:26Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHtpI",
                    "body": "and I hope that with this change, the `rw` fits on two lines rather than three?",
                    "createdAt": "2025-01-28T01:26:57Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zHt_R",
                    "body": "To me, this is the \"defining property\" of `fundCircuit`, so it would be reasonable to list this in the main declarations in the docstring and/or in the docstring of `fundCircuit`. In particular, since you describe the fundamental circuit as being unique with those properties in that docstring, it feels appropriate to mention the proofs that it has those properties and is unique as such.",
                    "createdAt": "2025-01-28T01:29:35Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcxNjYwNzcx",
              "login": "apnelson1"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcV7jkA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": null,
                "status": "QUEUED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13001814010/job/36261782416"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcV7lMw",
                "name": "Ping maintainers on Zulip",
                "conclusion": null,
                "status": "QUEUED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13001814017/job/36261782835"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcV7mhQ",
                "name": "Fix style issues from lint",
                "conclusion": null,
                "status": "QUEUED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13001814021/job/36261783173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcMznbA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641279/job/36252215148"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM3_Fw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662666/job/36252286743"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM3_QQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662668/job/36252286785"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM3_Dw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662669/job/36252286735"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcMzl1Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641275/job/36252214741"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM4AjQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662673/job/36252287117"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcMzmSA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641279/job/36252214856"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcMzm2w",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641275/job/36252215003"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM3_Og",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998662673/job/36252286778"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcMzobQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641279/job/36252215405"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcNNrpQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12998641275/job/36252642213"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM4c9g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36252294390"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIcM5teQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21145&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Data/Matroid/Circuit): fundamental circuits and extensionality ",
        "updatedAt": "2025-01-28T01:30:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21145",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "94233c6f28d1f597f496f920f13c68c9687b4511"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b-0IQ",
              "createdAt": "2025-01-27T21:29:22Z",
              "body": "### PR summary [94233c6f28](https://github.com/leanprover-community/mathlib4/pull/21145/commits/94233c6f28d1f597f496f920f13c68c9687b4511)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Base.fundCircuit_circuit`\n`+ Circuit.eq_fundCircuit_of_subset`\n`+ Dep.exists_circuit_subset`\n`+ Indep.fundCircuit_circuit`\n`+ Indep.mem_fundCircuit_iff`\n`+ dep_iff_superset_circuit`\n`+ dep_iff_superset_circuit'`\n`+ ext_circuit`\n`+ ext_circuit_not_indep`\n`+ ext_iff_circuit`\n`+ fundCircuit`\n`+ fundCircuit_eq_of_mem`\n`+ fundCircuit_eq_of_mem'`\n`+ fundCircuit_eq_sInter`\n`+ fundCircuit_subset_ground`\n`+ fundCircuit_subset_insert`\n`+ indep_iff_forall_subset_not_circuit`\n`+ indep_iff_forall_subset_not_circuit'`\n`+ mem_fundCircuit`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6nu7V0zwAAAAO-tDlz",
              "createdAt": "2025-01-27T21:29:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ZlcXE",
              "createdAt": "2025-01-27T23:05:35Z",
              "body": "Looks really nice!",
              "author": {
                "login": "b-mehta"
              }
            }
          ]
        }
      }
    }
  }
}
