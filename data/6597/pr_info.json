{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 88,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alexjbest"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "These work on the command line and therefore didn't fail in CI (as `lake env lean blah.lean` doesn't pick up the extra lean args?) but as soon as you open one of these files in vscode you get a sea of red errors.\r\n\r\nI tried to fix a couple in a minimal way, if there was just for example one universe level missing, for most files the \"fix\" for now is just reenabling autoimplicits for the file.\r\nThis revealed a couple of tests that were incorrectly using an implicit type when they thought they were using Nat.\r\nTwo files had issues, that we may want to follow up on  `test/superscript.lean` which failed even with autoimplicits turned on when using an autoimplicit superscript variable (unsure if this was intentional).\r\nAnd the `ToExpr` deriving handler seems to rely on autoimplicits somehow to work properly in the presence of universe, if an explicit universe variable is added there is still an error.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 63,
        "closed": true,
        "closedAt": "2023-08-15T23:33:03Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kHjgm",
              "body": ":v: alexjbest can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-15T22:21:55Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kHjxA",
              "body": "> Two files had issues, that we may want to follow up on `test/superscript.lean` which failed even with autoimplicits turned on when using an autoimplicit superscript variable (unsure if this was intentional). And the `ToExpr` deriving handler seems to rely on autoimplicits somehow to work properly in the presence of universe, if an explicit universe variable is added there is still an error.\r\n\r\nCan you open an issue for each of these two, and reference it in a TODO comment?",
              "createdAt": "2023-08-15T22:22:33Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kHoW5",
              "body": "I was planning to look into them/discuss on zulip myself before reporting. I think that should be enough, we can always add the comments later if it does turn out they should become issues",
              "createdAt": "2023-08-15T22:41:29Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kHomX",
              "body": "bors r+",
              "createdAt": "2023-08-15T22:42:49Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kHxkh",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5872661782/job/15924601560)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5872661782/job/15924601816)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5872661782/job/15924601933)",
              "createdAt": "2023-08-15T23:33:02Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ca431b00d6f5e3a2884cab2b7f0ed93bf54940e9",
                "additions": 88,
                "deletions": 7,
                "committedDate": "2023-08-15T19:27:56Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1dc9ac6e95ebbe0c2d863b4ba6d32ffe03981100",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-08-15T22:39:38Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-15T19:29:43Z",
        "deletions": 8,
        "files": {
          "nodes": [
            {
              "path": "test/Alias.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "test/CategoryTheory/Elementwise.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/CommDiag.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/Continuity.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/DeriveFintype.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/DeriveToExpr.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/ExtractGoal.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/FBinop.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/Find.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/GCongr/mod.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/GeneralizeProofs.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/HigherOrder.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/Inhabit.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/InstanceTransparency.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/LibrarySearch/basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/LiftLets.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/MfldSetTac.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/MkIffOfInductive.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/NthRewrite.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/Recall.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/Simps.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/Tauto.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/Use.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/Variable.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/abel.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/apply_fun.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/apply_rules.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/apply_with.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/borelize.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/byContra.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/cancel_denoms.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/cases.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/casesm.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/change.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/choose.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/congr.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/convert.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/eqns.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "test/irreducibleDef.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/linarith.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/linear_combination.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "test/nomatch.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/nontriviality.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/norm_cast.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/norm_num.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/notation3.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/positivity.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/propose.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/push_neg.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/restate_axiom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/rfl.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/ring.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/rsuffices.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/says.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/simp_intro.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/solve_by_elim/basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/spread.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/superscript.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "test/symm.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/tfae.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/toAdditive.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/toAdditiveIrredDef.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "test/trans.lean",
              "additions": 1,
              "deletions": 0
            }
          ]
        },
        "headRefName": "alexjbest/autoimplicittests",
        "headRefOid": "1dc9ac6e95ebbe0c2d863b4ba6d32ffe03981100",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5X_89z",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eJfJo",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-15T22:21:54Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6597,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eJesu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-15T22:21:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eJfJo",
              "body": "bors d+\r\n\r\nThanks!",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-15T22:21:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NMyDq",
                    "body": "```suggestion\r\ntheorem add_comm_zero {n} : 0 + n = n + 0 := Nat.add_comm _ _\r\n```\r\nseems like the smaller patch here, and also ensure we don't let `#find` somehow rely on `autoImplicit`",
                    "createdAt": "2023-08-15T22:21:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - chore: fix tests after #6528 disabled autoimplicits",
        "updatedAt": "2023-08-15T23:33:06Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6597",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ca431b00d6f5e3a2884cab2b7f0ed93bf54940e9"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uY1nTzwAAAAJaC9Ck",
              "createdAt": "2023-08-15T19:29:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5uY1nTzwAAAAJaC9C1",
              "createdAt": "2023-08-15T19:29:43Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eJesu",
              "createdAt": "2023-08-15T22:21:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eJfJo",
              "createdAt": "2023-08-15T22:21:54Z",
              "body": "bors d+\r\n\r\nThanks!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kHjgm",
              "createdAt": "2023-08-15T22:21:55Z",
              "body": ":v: alexjbest can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uY1nTzwAAAAJaIJ_Y",
              "createdAt": "2023-08-15T22:22:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uY1nTzwAAAAJaIKBP",
              "createdAt": "2023-08-15T22:22:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kHjxA",
              "createdAt": "2023-08-15T22:22:33Z",
              "body": "> Two files had issues, that we may want to follow up on `test/superscript.lean` which failed even with autoimplicits turned on when using an autoimplicit superscript variable (unsure if this was intentional). And the `ToExpr` deriving handler seems to rely on autoimplicits somehow to work properly in the presence of universe, if an explicit universe variable is added there is still an error.\r\n\r\nCan you open an issue for each of these two, and reference it in a TODO comment?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1dc9ac6e95ebbe0c2d863b4ba6d32ffe03981100"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kHoW5",
              "createdAt": "2023-08-15T22:41:29Z",
              "body": "I was planning to look into them/discuss on zulip myself before reporting. I think that should be enough, we can always add the comments later if it does turn out they should become issues",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kHomX",
              "createdAt": "2023-08-15T22:42:49Z",
              "body": "bors r+",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kHxkh",
              "createdAt": "2023-08-15T23:33:02Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5872661782/job/15924601560)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5872661782/job/15924601816)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5872661782/job/15924601933)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uY1nTzwAAAAJaJqPD",
              "createdAt": "2023-08-15T23:33:03Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uY1nTzwAAAAJaJqSX",
              "createdAt": "2023-08-15T23:33:06Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N_KKZ",
              "createdAt": "2023-08-16T13:34:46Z",
              "source": {
                "id": "I_kwDOFcwZ1c5ttIDB",
                "title": "`pp.unicode.fun=true` is not turned on during tests",
                "url": "https://github.com/leanprover-community/mathlib4/issues/6440"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
