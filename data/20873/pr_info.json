{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 281,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "vbeffara"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This proves the existence and uniqueness of path and homotopy lifts through covering maps.\r\n\r\n---\r\n\r\nI tried to separate as much of the proof as possible into separate PRs (which are already in Mathlib now), but the proof here relies on a monolithic construction of an explicit lift along a well-chosen subdivision, in `partial_lift`, with associated definitions. Only one standalone lean file added.\r\n\r\nAn older WIP PR #10084 by Junyan Xu @alreadydone proves similar results using a very similar construction for path lifting, with a different argument to obtain continuity for homotopy lifting.\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6bHR57",
              "body": "### PR summary [f93c8d9af7](https://github.com/leanprover-community/mathlib4/pull/20873/commits/f93c8d9af70fa7a996dbc64a18859a6cb97454f1)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Topology.Covering`|-853|\n| `Mathlib.Topology.Covering.Basic`|853|\n| `Mathlib.Topology.Covering.Lift` (new file)|1141|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ LiftSetup`\n`+ continuous_lift`\n`+ embed`\n`+ exist`\n`+ exists_unique_hlift`\n`+ exists_unique_hlift'`\n`+ exists_unique_lift`\n`+ fits`\n`+ fits.eventually`\n`+ hlift`\n`+ hlift_comp`\n`+ hlift_congr`\n`+ hlift_left`\n`+ hlift_unique`\n`+ htn`\n`+ icc`\n`+ icc_subset_I`\n`+ joint_lift`\n`+ lift_comp`\n`+ lift_left`\n`+ lift_unique`\n`+ t_mem_I`\n`++ lift`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-20T13:03:52Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHfMC",
              "body": "This might be related in #20619, I wanted to extend a `PartialHomeomorph` to a disjoint union. My first design was using subtypes, and everything was painful. Eventually, I arrived the at the PR's design, where you \"lift\" a partial homeomorphism under an open embedding.\r\nCan such ideas be used here? From a quick glance, this PR does lots of work with subtypes... which you managed to do, but I'm not sure if using subtypes is best for everybody's long-term happiness.\r\n\r\nThis is a side comment: perhaps this does not apply at all!",
              "createdAt": "2025-01-20T13:28:51Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHlTF",
              "body": "I agree that it was a bit painful, but I saw no alternative to obtain continuity of the lift directly (hence a previous PR constructing `ContinuousMap.concatCM` already in terms of subtypes, and containing most of the pain). IIRC Junyan's construction first does path lifting by gluing paths without showing continuity in the lifted path, and then shows continuity by doing the subdivision argument a second time, leading to a lot of duplication.\r\n\r\nIn any case, this is hidden in implementation, the API is just the statement of the theorem :-)",
              "createdAt": "2025-01-20T13:40:07Z",
              "author": {
                "login": "vbeffara"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bzkak",
              "body": "I added `continuous_lift` and refactored things a bit.",
              "createdAt": "2025-01-25T14:38:30Z",
              "author": {
                "login": "vbeffara"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bzlCz",
              "body": "> I added `continuous_lift` and refactored things a bit.\r\n\r\nThanks but this is not at the same generality as my `continuous_lift`, which only assumes `IsLocalHomeomorph` + `IsSeparatedMap`. Maybe that means most of this PR can also be generalized to that setting? Assuming `IsCoveringMap` would reduce the generality of the monodromy theorem, since asa you continue an analytic germ and wrap back to the same point you may encounter a singularity, or in other words the Riemann surface of the germ may not be a covering space.",
              "createdAt": "2025-01-25T14:47:01Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bzopB",
              "body": "Hm, possibly replacing the `Trivialization` with a `PartialHomeomorph` in `LiftSetup` would suffice to generalize the construction. But then constricting a `LiftSetup` along a path feels like doing the same thing twice... I will think about it a little.",
              "createdAt": "2025-01-25T15:34:25Z",
              "author": {
                "login": "vbeffara"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9a2794c3aafb4903692b2e0f16fd486a5678e792",
                "additions": 251,
                "deletions": 1,
                "committedDate": "2025-01-20T12:56:25Z",
                "author": {
                  "name": "Vincent Beffara",
                  "email": "vbeffara@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWltzEg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868628171/job/35875681042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlX-Eg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868510178/job/35875323410"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIarxinQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958995912/job/36150469277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIar0WFw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12959011708/job/36150515223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWltzWw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868628163/job/35875681115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlty3Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868628191/job/35875680989"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIarxilw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958995905/job/36150469271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIar0XFg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12959011702/job/36150515478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWltx9g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868628173/job/35875680758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIarxirA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958995914/job/36150469292"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIar0WQQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12959011713/job/36150515265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlX8ag",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868510167/job/35875322986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlt0NA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868628195/job/35875681332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlX8UQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868510178/job/35875322961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlX95A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868510167/job/35875323364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWltx3A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868628195/job/35875680732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlX_jg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868510178/job/35875323790"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWl0Inw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12868510167/job/35875784863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWluWbw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35875690095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWlvqqg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20873&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "62c35a4b544667f06d95ff2afdc2947406b0a725",
                "additions": 29,
                "deletions": 11,
                "committedDate": "2025-01-25T00:25:36Z",
                "author": {
                  "name": "Vincent Beffara",
                  "email": "vbeffara@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0ab34e1c0596dd99b97497ee90afbe3552479cca",
                "additions": 8,
                "deletions": 17,
                "committedDate": "2025-01-25T00:38:41Z",
                "author": {
                  "name": "Vincent Beffara",
                  "email": "vbeffara@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "664ed719412d2cedf326ca36b0a2000bf0514597",
                "additions": 33,
                "deletions": 20,
                "committedDate": "2025-01-25T10:38:04Z",
                "author": {
                  "name": "Vincent Beffara",
                  "email": "vbeffara@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f93c8d9af70fa7a996dbc64a18859a6cb97454f1",
                "additions": 12,
                "deletions": 4,
                "committedDate": "2025-01-25T14:36:36Z",
                "author": {
                  "name": "Vincent Beffara",
                  "email": "vbeffara@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6ll_w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849781/job/36166002175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6mNFQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965855093/job/36166012181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lnAQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849936/job/36166002433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6mNDA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965855097/job/36166012172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lm8g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849935/job/36166002418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6mNSg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965855094/job/36166012234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lltw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849780/job/36166002103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lm8Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849934/job/36166002417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6ll6g",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849780/job/36166002154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6llwA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849781/job/36166002112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lnLw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849934/job/36166002479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lmLw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849781/job/36166002223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6sm-g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849780/job/36166117114"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6lsSA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36166003784"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIa6mBuA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20873&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-20T13:03:03Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Covering/Basic.lean",
              "additions": 0,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Covering/Lift.lean",
              "additions": 279,
              "deletions": 0
            }
          ]
        },
        "headRefName": "VB-hlift",
        "headRefOid": "f93c8d9af70fa7a996dbc64a18859a6cb97454f1",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6IWjya",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZaEe2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2025-01-24T23:00:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20873,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZaD0d",
              "body": "Thanks for the PR. It proves the main results (path lifting and homotopy lifting) in the same generality as my draft PR #10084, so I'm mostly happy with it. However, it does not include the [`continuous_lift` theorem there](https://github.com/leanprover-community/mathlib4/blob/9b5cfbf91db7ecdb25e53f48837d8dcf91df63ca/Mathlib/Topology/Homotopy/Lifting.lean#L96), which is used to prove a version of the monodromy theorem and depends on the technical lemma `IsLocalHomeomorphOn.exists_lift_nhds`. Is it possible to recover `continuous_lift` using the mechanism in this PR? If I understand correctly, the API developed in this PR is to avoid duplications in my proof of the technical lemma. But if it can't prove `continuous_lift`, I would have to PR the technical lemma anyway, so it doesn't actually save the effort. However, the API developed here may be useful for other proofs; do you already have other applications in mind?",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2025-01-24T22:58:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZaEe2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2025-01-24T23:00:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZbIEu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "vbeffara"
              },
              "submittedAt": "2025-01-25T14:37:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5y_2cT",
                    "body": "Why is this not stated as\r\n```suggestion\r\n    ∃! Γ : C(I × Y, E), f ∘ Γ = γ ∧ ∀ y, Γ (0, y) = Γ₀ y := by\r\n```",
                    "createdAt": "2025-01-24T23:00:28Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zAqYo",
                    "body": "Good point. This means using a lot of `congr_fun` and the like but indeed it looks better.",
                    "createdAt": "2025-01-25T14:37:53Z",
                    "author": {
                      "login": "vbeffara"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI0ODk3Mg==",
              "login": "vbeffara"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6ll_w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849781/job/36166002175"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6mNFQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965855093/job/36166012181"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lnAQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849936/job/36166002433"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6mNDA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965855097/job/36166012172"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lm8g",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849935/job/36166002418"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6mNSg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965855094/job/36166012234"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lltw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849780/job/36166002103"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lm8Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849934/job/36166002417"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6ll6g",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849780/job/36166002154"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6llwA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849781/job/36166002112"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lnLw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849934/job/36166002479"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lmLw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849781/job/36166002223"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6sm-g",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12965849780/job/36166117114"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6lsSA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36166003784"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIa6mBuA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20873&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Topology/Covering): path lifting and homotopy lifting",
        "updatedAt": "2025-03-17T03:55:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20873",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9a2794c3aafb4903692b2e0f16fd486a5678e792"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2KwyzwAAAAO5l9RE",
              "createdAt": "2025-01-20T13:03:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2KwyzwAAAAO5l-FK",
              "createdAt": "2025-01-20T13:03:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHR57",
              "createdAt": "2025-01-20T13:03:52Z",
              "body": "### PR summary [f93c8d9af7](https://github.com/leanprover-community/mathlib4/pull/20873/commits/f93c8d9af70fa7a996dbc64a18859a6cb97454f1)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Topology.Covering`|-853|\n| `Mathlib.Topology.Covering.Basic`|853|\n| `Mathlib.Topology.Covering.Lift` (new file)|1141|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ LiftSetup`\n`+ continuous_lift`\n`+ embed`\n`+ exist`\n`+ exists_unique_hlift`\n`+ exists_unique_hlift'`\n`+ exists_unique_lift`\n`+ fits`\n`+ fits.eventually`\n`+ hlift`\n`+ hlift_comp`\n`+ hlift_congr`\n`+ hlift_left`\n`+ hlift_unique`\n`+ htn`\n`+ icc`\n`+ icc_subset_I`\n`+ joint_lift`\n`+ lift_comp`\n`+ lift_left`\n`+ lift_unique`\n`+ t_mem_I`\n`++ lift`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5z4SrA",
              "createdAt": "2025-01-20T13:06:43Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6IBpqV",
                "title": "feat(Topology/Covering): CM version of eq_of_comp_eq",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20797"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHfMC",
              "createdAt": "2025-01-20T13:28:51Z",
              "body": "This might be related in #20619, I wanted to extend a `PartialHomeomorph` to a disjoint union. My first design was using subtypes, and everything was painful. Eventually, I arrived the at the PR's design, where you \"lift\" a partial homeomorphism under an open embedding.\r\nCan such ideas be used here? From a quick glance, this PR does lots of work with subtypes... which you managed to do, but I'm not sure if using subtypes is best for everybody's long-term happiness.\r\n\r\nThis is a side comment: perhaps this does not apply at all!",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHlTF",
              "createdAt": "2025-01-20T13:40:07Z",
              "body": "I agree that it was a bit painful, but I saw no alternative to obtain continuity of the lift directly (hence a previous PR constructing `ContinuousMap.concatCM` already in terms of subtypes, and containing most of the pain). IIRC Junyan's construction first does path lifting by gluing paths without showing continuity in the lifted path, and then shows continuity by doing the subdivision argument a second time, leading to a lot of duplication.\r\n\r\nIn any case, this is hidden in implementation, the API is just the statement of the theorem :-)",
              "author": {
                "login": "vbeffara"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ZaD0d",
              "createdAt": "2025-01-24T22:58:51Z",
              "body": "Thanks for the PR. It proves the main results (path lifting and homotopy lifting) in the same generality as my draft PR #10084, so I'm mostly happy with it. However, it does not include the [`continuous_lift` theorem there](https://github.com/leanprover-community/mathlib4/blob/9b5cfbf91db7ecdb25e53f48837d8dcf91df63ca/Mathlib/Topology/Homotopy/Lifting.lean#L96), which is used to prove a version of the monodromy theorem and depends on the technical lemma `IsLocalHomeomorphOn.exists_lift_nhds`. Is it possible to recover `continuous_lift` using the mechanism in this PR? If I understand correctly, the API developed in this PR is to avoid duplications in my proof of the technical lemma. But if it can't prove `continuous_lift`, I would have to PR the technical lemma anyway, so it doesn't actually save the effort. However, the API developed here may be useful for other proofs; do you already have other applications in mind?",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ZaEe2",
              "createdAt": "2025-01-24T23:00:28Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "62c35a4b544667f06d95ff2afdc2947406b0a725"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0ab34e1c0596dd99b97497ee90afbe3552479cca"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "664ed719412d2cedf326ca36b0a2000bf0514597"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f93c8d9af70fa7a996dbc64a18859a6cb97454f1"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bzkak",
              "createdAt": "2025-01-25T14:38:30Z",
              "body": "I added `continuous_lift` and refactored things a bit.",
              "author": {
                "login": "vbeffara"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bzlCz",
              "createdAt": "2025-01-25T14:47:01Z",
              "body": "> I added `continuous_lift` and refactored things a bit.\r\n\r\nThanks but this is not at the same generality as my `continuous_lift`, which only assumes `IsLocalHomeomorph` + `IsSeparatedMap`. Maybe that means most of this PR can also be generalized to that setting? Assuming `IsCoveringMap` would reduce the generality of the monodromy theorem, since asa you continue an analytic germ and wrap back to the same point you may encounter a singularity, or in other words the Riemann surface of the germ may not be a covering space.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bzopB",
              "createdAt": "2025-01-25T15:34:25Z",
              "body": "Hm, possibly replacing the `Trivialization` with a `PartialHomeomorph` in `LiftSetup` would suffice to generalize the construction. But then constricting a `LiftSetup` along a path feels like doing the same thing twice... I will think about it a little.",
              "author": {
                "login": "vbeffara"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2KwyzwAAAAPpAUr4",
              "createdAt": "2025-03-17T03:55:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
