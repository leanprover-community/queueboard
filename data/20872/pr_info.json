{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 63,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "grunweg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This means we can remove the corresponding technical debt entry. We also correct some outdated details in the Linter/Style.lean docstring.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6bHMSE",
              "body": "### PR summary [7287038046](https://github.com/leanprover-community/mathlib4/pull/20872/commits/7287038046c32ff930c496b4d940c1589ceaa2f0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ skipAssInst''`\n`+ topLevelIn`\n`+ topLevelIn'`\n`+ topLevelIn''`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-20T12:53:10Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHP4J",
              "body": "@adomani This runs into another instance of the \"`set_option name in` is not recognised\", which is somewhat unfortunate.\r\nDo you know how to this fix? (I think we came across this for sure, but don't remember what the conclusion was.)",
              "createdAt": "2025-01-20T12:59:59Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHqVp",
              "body": "Michael, did you fix the error since you posted the message?  I do not see any issues at the moment.",
              "createdAt": "2025-01-20T13:49:15Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHry5",
              "body": "Damiano: the issue is that tests pass :-) More specifically, it's in these lines (in `MathlibTest/LintStyle.lean`):\r\n```\r\n-- TODO: this should warn!\r\nset_option tactic.skipAssignedInstances true in\r\nlemma skipAssInst'' : True := trivial\r\n```\r\nthe fact that *no* warning is emitted.",
              "createdAt": "2025-01-20T13:51:58Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHuQB",
              "body": "Ah, that is because you should match also on `set_option ... in`.  Let me look more in depth at the code and how to catch that.",
              "createdAt": "2025-01-20T13:56:25Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bH0rz",
              "body": "So, the issue is that the `withSetOptionsIn` is doing its job and is consuming the `set_option ... in` part of the syntax (I am simply reminding myself of what the issue was).  If we *remove* `withSetOptionIn`, then we get access to all of the syntax: would that cause problems down the line?",
              "createdAt": "2025-01-20T14:07:43Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bH4dW",
              "body": "I guess that, for this linter, it is important to get access to all `set_option ... in`, and depending on the option, to decide if it should emit a warning or not: some `set_option`s should only exist scoped, others should not exist at all.",
              "createdAt": "2025-01-20T14:14:20Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bIP2l",
              "body": "Michael, given that there are quite a few updates, fixes and renames that this PR is doing, on top of adding the new linting, would you mind splitting the PR into the \"house-keeping\" PR with updates and renames, and then a dependent PR with the actual changes to the linting?\r\n\r\nI can approve the housekeeping PR immediately, and then we can focus on the best approach to linting `set_option in`.",
              "createdAt": "2025-01-20T14:54:37Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bIikP",
              "body": "I'm not sure if 8 lines of diff are worth a new PR, but here you go: #20879",
              "createdAt": "2025-01-20T15:27:41Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bInil",
              "body": "Removing the `withSetOptionIn` already helped: now outer `set_option ... in` are linted.\r\nThis doesn't work for *nested* set_option ... in, though (see the new tests).",
              "createdAt": "2025-01-20T15:36:27Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bIoqX",
              "body": "> Removing the `withSetOptionIn` already helped: now outer `set_option ... in` are linted. This doesn't work for _nested_ set_option ... in, though (see the new tests).\r\n\r\nI presume that this is because the filter on the syntax is `find?`, which returns the first instance that it finds, rather than all occurrences.",
              "createdAt": "2025-01-20T15:38:26Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bIrfa",
              "body": "I do not know if this is enough of a performance issue to require a careful scanning, but here is a proposal.\r\n\r\n1. If the `Syntax` does not start with `set_option ... in` and is not `set_option ...`, do nothing: this test should be quick, should fail almost always and was already essentially implied by the `withSetOptionIn` pre-processing.\r\n2. If it is `set_option` or `set_option ... in`, then scan all syntax, extracting the array of options and then continue with roughly the same logic as now, except that the script should take care of which `in`s are allowed and which ones are not.",
              "createdAt": "2025-01-20T15:43:27Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bJdTV",
              "body": "Wow, the \"new\" linter found two exceptions!!",
              "createdAt": "2025-01-20T17:24:26Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bKB1v",
              "body": "Fixed (these were pre-existing, but linting set_option in caught it :tada:) and rebased.",
              "createdAt": "2025-01-20T19:11:17Z",
              "author": {
                "login": "grunweg"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0baedd5163b577f767b5e9fac5176dcc0e48774f",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2025-01-20T19:06:47Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgang@math.uni-bonn.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b888a09b44d176bb1a54f390fd72f977615828e9",
                "additions": 33,
                "deletions": 4,
                "committedDate": "2025-01-20T19:10:09Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgang@math.uni-bonn.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7287038046c32ff930c496b4d940c1589ceaa2f0",
                "additions": 33,
                "deletions": 4,
                "committedDate": "2025-01-20T19:10:31Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgang@math.uni-bonn.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW28g3Q",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874398474/job/35893747933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW26-IA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388705/job/35893722656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW26_Bw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389134/job/35893722887"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW26_Gg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389126/job/35893722906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW278pA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388687/job/35893738660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW27AAQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389118/job/35893723137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW2681Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388705/job/35893722325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW277iQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388687/job/35893738377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW26-6g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389118/job/35893722858"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW26__g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388705/job/35893723134"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW4PsDw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388687/job/35895110671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW27dHA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35893730588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW28Hiw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20872&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-20T12:52:20Z",
        "deletions": 7,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/InnerProductSpace/PiL2.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Linter/Style.lean",
              "additions": 12,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Separation/Regular.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "MathlibTest/LintStyle.lean",
              "additions": 51,
              "deletions": 1
            },
            {
              "path": "scripts/technical-debt-metrics.sh",
              "additions": 0,
              "deletions": 1
            }
          ]
        },
        "headRefName": "MR-lint-skipAssignedInstances",
        "headRefOid": "7287038046c32ff930c496b4d940c1589ceaa2f0",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6IWeUi",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
              "color": "33DBEC",
              "name": "t-linter"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
              "color": "0EFB96",
              "name": "tech debt"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Yu_85",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2025-01-20T13:55:25Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20872,
        "potentialMergeCommit": {
          "oid": "9c27c9ee83e260f6def6cdb5147c872b7c2d71a6"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Yu9Va",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2025-01-20T13:50:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yu-rX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-20T13:53:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yu_85",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2025-01-20T13:55:25Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ylg27",
                    "body": "I think that this is outdated: the linter is in mathlib.\r\n\r\nFeel free to say that this is out of scope, but I only noticed this due to your edits!",
                    "createdAt": "2025-01-20T13:50:43Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ylhpj",
                    "body": "Good catch; fixed as well. Thanks!",
                    "createdAt": "2025-01-20T13:53:07Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ylibe",
                    "body": "```suggestion\r\n```\r\nDoes this line do anything at all?",
                    "createdAt": "2025-01-20T13:55:25Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW28g3Q",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874398474/job/35893747933"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW26-IA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388705/job/35893722656"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW26_Bw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389134/job/35893722887"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW26_Gg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389126/job/35893722906"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW278pA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388687/job/35893738660"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW27AAQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389118/job/35893723137"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW2681Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388705/job/35893722325"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW277iQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388687/job/35893738377"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW26-6g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874389118/job/35893722858"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW26__g",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388705/job/35893723134"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW4PsDw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874388687/job/35895110671"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW27dHA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35893730588"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIW28Hiw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20872&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: lint against the tactic.skipAssignedInstances option in mathlib",
        "updatedAt": "2025-01-21T18:39:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20872",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2ErAzwAAAAO5lajx",
              "createdAt": "2025-01-20T12:52:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2ErAzwAAAAO5laj1",
              "createdAt": "2025-01-20T12:52:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
                "name": "t-linter"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2ErAzwAAAAO5lakB",
              "createdAt": "2025-01-20T12:52:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
                "name": "tech debt"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHMSE",
              "createdAt": "2025-01-20T12:53:10Z",
              "body": "### PR summary [7287038046](https://github.com/leanprover-community/mathlib4/pull/20872/commits/7287038046c32ff930c496b4d940c1589ceaa2f0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ skipAssInst''`\n`+ topLevelIn`\n`+ topLevelIn'`\n`+ topLevelIn''`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6m2ErAzwAAAAO5lwgt",
              "createdAt": "2025-01-20T12:59:00Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHP4J",
              "createdAt": "2025-01-20T12:59:59Z",
              "body": "@adomani This runs into another instance of the \"`set_option name in` is not recognised\", which is somewhat unfortunate.\r\nDo you know how to this fix? (I think we came across this for sure, but don't remember what the conclusion was.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6m2ErAzwAAAAO5oBBH",
              "createdAt": "2025-01-20T13:44:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHqVp",
              "createdAt": "2025-01-20T13:49:15Z",
              "body": "Michael, did you fix the error since you posted the message?  I do not see any issues at the moment.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Yu9Va",
              "createdAt": "2025-01-20T13:50:43Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHry5",
              "createdAt": "2025-01-20T13:51:58Z",
              "body": "Damiano: the issue is that tests pass :-) More specifically, it's in these lines (in `MathlibTest/LintStyle.lean`):\r\n```\r\n-- TODO: this should warn!\r\nset_option tactic.skipAssignedInstances true in\r\nlemma skipAssInst'' : True := trivial\r\n```\r\nthe fact that *no* warning is emitted.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Yu_85",
              "createdAt": "2025-01-20T13:55:25Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHuQB",
              "createdAt": "2025-01-20T13:56:25Z",
              "body": "Ah, that is because you should match also on `set_option ... in`.  Let me look more in depth at the code and how to catch that.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bH0rz",
              "createdAt": "2025-01-20T14:07:43Z",
              "body": "So, the issue is that the `withSetOptionsIn` is doing its job and is consuming the `set_option ... in` part of the syntax (I am simply reminding myself of what the issue was).  If we *remove* `withSetOptionIn`, then we get access to all of the syntax: would that cause problems down the line?",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bH4dW",
              "createdAt": "2025-01-20T14:14:20Z",
              "body": "I guess that, for this linter, it is important to get access to all `set_option ... in`, and depending on the option, to decide if it should emit a warning or not: some `set_option`s should only exist scoped, others should not exist at all.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bIP2l",
              "createdAt": "2025-01-20T14:54:37Z",
              "body": "Michael, given that there are quite a few updates, fixes and renames that this PR is doing, on top of adding the new linting, would you mind splitting the PR into the \"house-keeping\" PR with updates and renames, and then a dependent PR with the actual changes to the linting?\r\n\r\nI can approve the housekeeping PR immediately, and then we can focus on the best approach to linting `set_option in`.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bIikP",
              "createdAt": "2025-01-20T15:27:41Z",
              "body": "I'm not sure if 8 lines of diff are worth a new PR, but here you go: #20879",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bInil",
              "createdAt": "2025-01-20T15:36:27Z",
              "body": "Removing the `withSetOptionIn` already helped: now outer `set_option ... in` are linted.\r\nThis doesn't work for *nested* set_option ... in, though (see the new tests).",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bIoqX",
              "createdAt": "2025-01-20T15:38:26Z",
              "body": "> Removing the `withSetOptionIn` already helped: now outer `set_option ... in` are linted. This doesn't work for _nested_ set_option ... in, though (see the new tests).\r\n\r\nI presume that this is because the filter on the syntax is `find?`, which returns the first instance that it finds, rather than all occurrences.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bIrfa",
              "createdAt": "2025-01-20T15:43:27Z",
              "body": "I do not know if this is enough of a performance issue to require a careful scanning, but here is a proposal.\r\n\r\n1. If the `Syntax` does not start with `set_option ... in` and is not `set_option ...`, do nothing: this test should be quick, should fail almost always and was already essentially implied by the `withSetOptionIn` pre-processing.\r\n2. If it is `set_option` or `set_option ... in`, then scan all syntax, extracting the array of options and then continue with roughly the same logic as now, except that the script should take care of which `in`s are allowed and which ones are not.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2ErAzwAAAAO5xl4D",
              "createdAt": "2025-01-20T16:21:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bJdTV",
              "createdAt": "2025-01-20T17:24:26Z",
              "body": "Wow, the \"new\" linter found two exceptions!!",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6m2ErAzwAAAAO54Evm",
              "createdAt": "2025-01-20T18:29:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6m2ErAzwAAAAO55SUK",
              "createdAt": "2025-01-20T19:06:12Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0baedd5163b577f767b5e9fac5176dcc0e48774f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b888a09b44d176bb1a54f390fd72f977615828e9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7287038046c32ff930c496b4d940c1589ceaa2f0"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6m2ErAzwAAAAO55cgf",
              "createdAt": "2025-01-20T19:10:39Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bKB1v",
              "createdAt": "2025-01-20T19:11:17Z",
              "body": "Fixed (these were pre-existing, but linting set_option in caught it :tada:) and rebased.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6m2ErAzwAAAAO55eRL",
              "createdAt": "2025-01-20T19:11:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
