{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 219,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "awueth"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Contains the definition of the graph laplacian and proofs of some its properties, including that it is positive semidefinite and that the dimension of its nullspace equals the number of connected components of the graph.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2024-02-28T13:52:29Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5vAGTi",
              "body": "I merged master into this branch in order to use ```PosSemidef.toLinearMap₂'_zero_iff``` from #8809. Was this a mistake? This branch is now 500 commits ahead which is not what I intended. How do I fix this?",
              "createdAt": "2023-12-19T08:09:20Z",
              "author": {
                "login": "awueth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5vA5KF",
              "body": "The usual recipe is to make a new fresh branch from master, and then import your old changes into it using `git merge --squash`, which destroys the git history. Then you \"force push\" the new branch to GitHub (`git push --force`). Some open source projects are very insistent that destroying git history is a bad thing, but mathlib has its own way of doing things (and each PR gets squashed down to a single commit, with a new label, when it gets merged anyway).\r\n\r\nI think it's best if I fix this, since I have a clean copy of your old git branch saved. Here you go.",
              "createdAt": "2023-12-19T10:30:31Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5vA7xF",
              "body": "When you want to work further on this, I suggest killing your current git branch and then checking out the new branch from GitHub:\r\n```\r\ngit fetch\r\ngit branch -D awueth-lapMatrix\r\ngit checkout origin/awueth-lapMatrix\r\n```",
              "createdAt": "2023-12-19T10:37:05Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5vHL_c",
              "body": "> When you want to work further on this, I suggest killing your current git branch and then checking out the new branch from GitHub:\r\n> \r\n> ```\r\n> git fetch\r\n> git branch -D awueth-lapMatrix\r\n> git checkout origin/awueth-lapMatrix\r\n> ```\r\n\r\nThanks a lot! It looks to be working nicely again. ",
              "createdAt": "2023-12-20T09:40:39Z",
              "author": {
                "login": "awueth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5wm-Nx",
              "body": "Merge conflict now fixed, please review!",
              "createdAt": "2024-01-12T13:52:27Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5xpV2X",
              "body": "LGTM",
              "createdAt": "2024-01-23T18:24:57Z",
              "author": {
                "login": "apurvanakade"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c51N3wD",
              "body": "It wasn't merging cleanly so I have force-pushed a new, rebased branch.",
              "createdAt": "2024-02-27T13:37:45Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c51Qo1N",
              "body": ":v: awueth can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-02-27T17:52:47Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c51WyoN",
              "body": "`bors merge`",
              "createdAt": "2024-02-28T12:44:43Z",
              "author": {
                "login": "awueth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c51XQpT",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8080576564/job/22077335507)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8080576564/job/22077334749)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8080576564/job/22077334477)",
              "createdAt": "2024-02-28T13:52:28Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "97890350c6f9c54b5f8f78ada631b78669e5fd64",
                "additions": 222,
                "deletions": 0,
                "committedDate": "2024-02-27T13:32:05Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTrlw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065665615/job/22031952791"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITThgg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664693/job/22031950210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTiYw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664690/job/22031950435"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTstg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065665621/job/22031953078"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTj0w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664693/job/22031950803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTkQg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664690/job/22031950914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTrhA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065665621/job/22031952772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTiug",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664693/job/22031950522"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITThGw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664690/job/22031950107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTmDA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664693/job/22031951372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTjWA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664690/job/22031950680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTlKg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664690/job/22031951146"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTlAQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664693/job/22031951105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITTnIA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664693/job/22031951648"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIVCmMQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8065664690/job/22033770033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFITVk1w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f2f995b488b7dacb2492f5e62800ef20028fcee4",
                "additions": 4,
                "deletions": 5,
                "committedDate": "2024-02-27T14:47:03Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWrEQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066632372/job/22035147537"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWhWw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631636/job/22035145051"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWiAw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631634/job/22035145219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWssA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066632370/job/22035147952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWkgQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631636/job/22035145857"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWjSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631634/job/22035145547"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWrPw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066632370/job/22035147583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWjFw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631636/job/22035145495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWl9A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631634/job/22035146228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWlvw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631636/job/22035146175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWnMA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631634/job/22035146544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWkoQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631634/job/22035145889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWnGw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631636/job/22035146523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWWobQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631636/job/22035146861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWymdw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8066631634/job/22035605111"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIWYHkg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4b673b15b8f69853e418beabc4482f766b126da8",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2024-02-27T15:39:13Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIeaDEA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8069161537/job/22043591440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIeaBQA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8069161527/job/22043590976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIeaCBg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8069161535/job/22043591174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyH4g",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394820/job/22037694434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyCBg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394352/job/22037692934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyDUA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394353/job/22037693264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyJYg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394816/job/22037694818"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyF3w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394352/job/22037693919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIeaB-g",
                        "name": "Add delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8069161537/job/22043591162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyG3A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394353/job/22037694172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyKVg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394816/job/22037695062"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyDVQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394352/job/22037693269"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyEiA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394353/job/22037693576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyEng",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394352/job/22037693598"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyFqg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394353/job/22037693866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyHKQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394352/job/22037694249"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyCWA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394353/job/22037693016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYyIXg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394352/job/22037694558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIZ8STQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8067394353/job/22038909517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFIYzebA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1b6100c006dd083fabc2426b0ca0b8fb1d96a39c",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-02-28T10:50:50Z",
                "author": {
                  "name": "awueth",
                  "email": "83429722+awueth@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6egcw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177850/job/22073024627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6eeDQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177745/job/22073024013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6efRA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177747/job/22073024324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6ehZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177852/job/22073024869"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6ehYw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177745/job/22073024867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6eeBQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177747/job/22073024005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6egdQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177852/job/22073024629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6efOg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177745/job/22073024314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6eiBA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177747/job/22073025028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6egZw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177745/job/22073024615"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6ehVg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177747/job/22073024854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6egRg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177747/job/22073024582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6eibg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177745/job/22073025134"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6gmIw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177747/job/22073058851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6ejMg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079177745/job/22073025330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6fkCQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7a8d81760c0912c31ed0fb25ca0c5797b3d3d527",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-02-28T10:51:32Z",
                "author": {
                  "name": "awueth",
                  "email": "83429722+awueth@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6gA6A",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079185231/job/22073049320"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f81A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184771/job/22073048276"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f9gA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184769/job/22073048448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6gBAQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079185223/job/22073049345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f-XA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184771/job/22073048668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f8BA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184769/job/22073048068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6gCCA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079185223/job/22073049608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f9mQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184771/job/22073048473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f_Aw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184769/job/22073048835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f_OA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184771/job/22073048888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f8yw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184769/job/22073048267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f-TQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184769/job/22073048653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6f7-Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184771/job/22073048057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6gAGA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184771/job/22073049112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6hwJw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8079184769/job/22073077799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI6hDPg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1453de8e22802ad08ea919262343477ba5a9323d",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-02-28T12:05:28Z",
                "author": {
                  "name": "awueth",
                  "email": "83429722+awueth@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9G09Q",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057786/job/22075782389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GtRg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075780422"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GvNQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075780917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9G1Vg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057794/job/22075782486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GxwQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075781569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GuGA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075780632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9G0ew",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057794/job/22075782267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GvSQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075780937"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9Gs4g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075780322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GwlA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075781268"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GwNA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075781172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GuSA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075780680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9GxIQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075781409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9Gyrw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075781807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI-HkFQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22076843029"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFI9ICzA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGdwKarQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1908",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-23T14:23:36Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/Defs.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/AdjMatrix.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/LapMatrix.lean",
              "additions": 202,
              "deletions": 0
            }
          ]
        },
        "headRefName": "awueth-lapMatrix",
        "headRefOid": "1453de8e22802ad08ea919262343477ba5a9323d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5gPDOY",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
              "color": "33dbec",
              "name": "t-combinatorics"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5qleQl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-12-19T06:50:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5u7T2H",
              "body": "The remaining `unfold`'s aren't so much a sign of missing API, as of existing API which hasn't been used (fortunately, since most of them are unfolding pre-existing mathlib definitions, rather than ones added in this PR). I'm posting suggested reformulations which avoid the unfoldings entirely.",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2024-02-03T14:56:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oIJpA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-11-23T20:35:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5tpcWX",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "apurvanakade"
              },
              "submittedAt": "2024-01-23T18:25:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5xghTj",
              "body": "Thanks for all the work on this!\r\n\r\nThere are just two mathlib naming convention issues I noticed, and once you fix those, let's merge.\r\n\r\nbors d+\r\n\r\nI have now delegated merging rights to you. After you address the comments, you can create a comment that contains `bors merge` on a line of its own, and that will send it off into the next merge batch. It is usually courteous to wait until the CI passes on your own branch before sending it to bors, since the batch fails if any included PR fails.",
              "state": "APPROVED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2024-02-27T17:52:46Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8594,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5oIFlx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-11-23T20:02:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oIHPs",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2023-11-23T20:14:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oIIpZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-11-23T20:25:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oIJpA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-11-23T20:35:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5oIUZ0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-11-23T22:16:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5o2PkO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apurvanakade"
              },
              "submittedAt": "2023-12-01T05:33:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5o2Qd3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apurvanakade"
              },
              "submittedAt": "2023-12-01T05:37:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5o8cWS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2023-12-01T23:01:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5o80uh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apurvanakade"
              },
              "submittedAt": "2023-12-02T04:14:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5o80xf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "apurvanakade"
              },
              "submittedAt": "2023-12-02T04:16:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5o9hXd",
              "body": "I've added some suggestions. Most of this is just minor \"golfing\" of proofs (expressing the same argument in slightly fewer lines). The only major point is that it would be nicer to work with the kernel of the Laplacian as an endomorphism of the space of functions on V, rather than what you do here, which is actually to regard it as a map from that space to its own dual.",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-12-02T21:27:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5pCDgp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-12-04T11:06:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5pHd2O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2023-12-04T22:30:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5pHeOf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2023-12-04T22:31:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5pHe_Q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2023-12-04T22:34:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qleQl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-12-19T06:50:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qvwfp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2023-12-20T13:34:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5sfIuq",
              "body": "Some comments, mostly naming and style.",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2024-01-13T21:12:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5tpcWX",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "apurvanakade"
              },
              "submittedAt": "2024-01-23T18:25:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5u3-mp",
              "body": "I pushed some cosmetic changes, and wrapped everything in the `SimpleGraph` namespace.\r\n\r\nThere's some missing API still. I added a couple theorems. Basically, much of the time when there's an `unfold`, it indicates that there's some lemma that's missing. I suspect `lapMatrix_toLinearMap₂'` for example contains some intermediate results that we'd want.\r\n\r\nWe don't need to go too deep into this before we merge, but I want to be sure that we have lemmas like the ones in AdjMatrix surrounding the definitions so that we don't need to `unfold` so much.\r\n\r\n(I left one comment; I haven't done a very careful review for other such lemmas yet.)",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2024-02-02T19:31:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5u7T2H",
              "body": "The remaining `unfold`'s aren't so much a sign of missing API, as of existing API which hasn't been used (fortunately, since most of them are unfolding pre-existing mathlib definitions, rather than ones added in this PR). I'm posting suggested reformulations which avoid the unfoldings entirely.",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2024-02-03T14:56:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v0Sez",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2024-02-12T19:02:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v0Uc5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2024-02-12T19:08:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5v0p2M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "awueth"
              },
              "submittedAt": "2024-02-12T19:51:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5xghTj",
              "body": "Thanks for all the work on this!\r\n\r\nThere are just two mathlib naming convention issues I noticed, and once you fix those, let's merge.\r\n\r\nbors d+\r\n\r\nI have now delegated merging rights to you. After you address the comments, you can create a comment that contains `bors merge` on a line of its own, and that will send it off into the next merge batch. It is usually courteous to wait until the CI passes on your own branch before sending it to bors, since the batch fails if any included PR fails.",
              "state": "APPROVED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2024-02-27T17:52:46Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TqrqV",
                    "body": "Does tagging this as simp benefit you anywhere? I can't think of how it would but I may be missing something!",
                    "createdAt": "2023-11-23T20:02:39Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tqsy9",
                    "body": "No, I just saw that the equivalent theorem for the adjacency matrix was tagged with simp and assumed it was good practice. Should I remove @[simp] where it is not needed? I might not use them anywhere since I mostly used simp only [...].",
                    "createdAt": "2023-11-23T20:14:49Z",
                    "author": {
                      "login": "awueth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tqtw5",
                    "body": "Hmm indeed that sounds strange to me. Well you should think about how likely it is that the lemma will be used by simp, generally lemmas that are an equality or iff statement where the LHS is more complicated than the RHS are the obvious ones. If the statement is some property like this then it is generally rarer that simp would be the tactic people would be using on goals containing that property, they'd just use that single lemma directly ",
                    "createdAt": "2023-11-23T20:25:14Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TqucK",
                    "body": "I'm not sure if `[Ring R]` is the best assumption here, generally we go as weak as possible, so I'd it least try and include the naturals, but this should make sense for any `AddMonoidWithOne` I hope ",
                    "createdAt": "2023-11-23T20:32:47Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tqumb",
                    "body": "Probably you should put the R and the assumptions as a line `variable` at the start of a section of you have to repeat it a lot. I would also think R should be implicit for a lot of these, as R can be read off from the type of the thing being proved and there is likely only one possible R under consideration in any proof about these things",
                    "createdAt": "2023-11-23T20:34:22Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq1qx",
                    "body": "I suspect many of the import lines are redundant, since \"import\" is transitive (and I suspect virtually every file in the library imports Fintype.Card etc).",
                    "createdAt": "2023-11-23T21:33:10Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq2QC",
                    "body": "This is a non-terminal `simp` (doesn't close the goal) - best avoided in library code since it can break in unpredictable ways if the simp lemma set changes",
                    "createdAt": "2023-11-23T21:40:45Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq59X",
                    "body": "In this proof there are multiple goals being opened + closed without indentation to show this. I think a documentation string for this lemma would be good as well",
                    "createdAt": "2023-11-23T21:51:54Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq6BO",
                    "body": "Probably \"spd\" is a typo (but I think it should be expanded, see above)",
                    "createdAt": "2023-11-23T21:52:49Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq6F5",
                    "body": "Maybe better to put this in the \"PosSemidef\" namespace (i.e. name it as \"PosSemidef.spectral_theorem\")",
                    "createdAt": "2023-11-23T21:53:39Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq6aB",
                    "body": "Indenting is off slightly here. More importantly, it is bad for readability that we wait so long before killing the easy goal with \"exact two_pos\" – you can use \"refine\" or \"swap\" to quickly deal with easy side-goals before going on with the main proof.",
                    "createdAt": "2023-11-23T21:57:47Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq6hH",
                    "body": "It seems a little clumsy to have a long proof inside the `def` of a function – can you factor out the proof argument into an auxiliary lemma?",
                    "createdAt": "2023-11-23T21:59:13Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq6j0",
                    "body": "non-terminal `simp` again",
                    "createdAt": "2023-11-23T21:59:45Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq7N4",
                    "body": "```suggestion\r\n  · exact fun h i j hA ↦ h i j (Adj.reachable hA)\r\n```",
                    "createdAt": "2023-11-23T22:09:35Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq7cX",
                    "body": "```suggestion\r\n    · exact (h i j hA).trans h'\r\n```",
                    "createdAt": "2023-11-23T22:12:08Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Tq8Kc",
                    "body": "You now have two variables called `i` at once",
                    "createdAt": "2023-11-23T22:15:55Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UI8Rn",
                    "body": "This theorem and the one below should be in a much earlier file. Maybe in Mathlib.Algebra.Ring.Defs next to [ite_add](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Ring/Defs.html#ite_add)",
                    "createdAt": "2023-12-01T05:33:07Z",
                    "author": {
                      "login": "apurvanakade"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UI8_R",
                    "body": "No actually, `P` does not need multiplication! This should work with just `AddGroup`. Maybe move these to Mathlib.Algebra.Group.Basic ?",
                    "createdAt": "2023-12-01T05:37:08Z",
                    "author": {
                      "login": "apurvanakade"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UMzrG",
                    "body": "I renamed both theorems and made them more general, I hope this is better:\r\n```lean\r\ntheorem ite_sub_ite {α : Type*} [Sub α] (P : Prop) [Decidable P] (a b c d : α) :\r\n    ((if P then a else b) - if P then c else d) = if P then a - c else b - d := by\r\n  split\r\n  repeat rfl\r\n\r\ntheorem ite_add_ite {α : Type*} [Add α] (P : Prop) [Decidable P] (a b c d : α) :\r\n    ((if P then a else b) + if P then c else d) = if P then a + c else b + d := by\r\n  split\r\n  repeat rfl\r\n```\r\nI'm not quite sure where to put it in `AddGroup`. Also `ite_add` does not need multiplication either, why is it in Mathlib.Algebra.Ring.Defs? Finally if I put these two theorems in another file, should I create a new pull request?",
                    "createdAt": "2023-12-01T23:01:07Z",
                    "author": {
                      "login": "awueth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNF8P",
                    "body": "Good point. Mathlib.Algebra.Ring.Defs sounds good then. \r\n\r\nNo, you don't need a new PR. It's ok to have multiple files being edited in a single PR.",
                    "createdAt": "2023-12-02T04:14:30Z",
                    "author": {
                      "login": "apurvanakade"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNF_l",
                    "body": "This PR is really cool btw. I'm looking forward to it getting merged and having more Spectral Graph Theory in mathlib.",
                    "createdAt": "2023-12-02T04:16:34Z",
                    "author": {
                      "login": "apurvanakade"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UUOdg",
                    "body": "I tried to move the theorems but I get an error when trying to rebuild the imports.",
                    "createdAt": "2023-12-04T22:34:01Z",
                    "author": {
                      "login": "awueth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5VZZoX",
                    "body": "Got it done now",
                    "createdAt": "2023-12-20T13:34:16Z",
                    "author": {
                      "login": "awueth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNrpK",
                    "body": "You can fold these two lemmas together:\r\n```suggestion\r\ntheorem isSymm_lapMatrix [AddGroupWithOne α] : (G.lapMatrix α).IsSymm := by\r\n  rw [Matrix.IsSymm, lapMatrix, degMatrix, transpose_sub, diagonal_transpose, transpose_adjMatrix]\r\n```",
                    "createdAt": "2023-12-02T20:58:37Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNrp9",
                    "body": "golf:\r\n```suggestion\r\ntheorem lapMatrix_mulVec_const_eq_zero [Ring α] : mulVec (G.lapMatrix α) (fun _ ↦ 1) = 0 := by\r\n  ext1 i\r\n  simp_rw [lapMatrix, sub_mulVec, Pi.sub_apply, adjMatrix_mulVec_apply, degMatrix, mulVec,\r\n    dotProduct, diagonal]\r\n  simp\r\n```",
                    "createdAt": "2023-12-02T20:59:16Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNrtx",
                    "body": "```suggestion\r\n  unfold mulVec dotProduct\r\n  simp [mul_sum]\r\n```",
                    "createdAt": "2023-12-02T21:01:28Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNrwh",
                    "body": "```suggestion\r\ntheorem sum_adj_eq_degree [AddCommMonoidWithOne α] (i : V) :\r\n    (G.degree i : α) = ∑ j : V, if G.Adj i j then 1 else 0 := by\r\n  unfold degree neighborFinset neighborSet\r\n  rw [sum_boole, Set.toFinset_setOf]\r\n```",
                    "createdAt": "2023-12-02T21:02:42Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNryG",
                    "body": "```suggestion\r\ntheorem lapMatrix_toLinearMap₂' [LinearOrderedField α] (x : V → α) :\r\n    toLinearMap₂' (G.lapMatrix α) x x = (∑ i, ∑ j, if G.Adj i j then (x i - x j)^2 else 0) / 2 := by\r\n  simp_rw [toLinearMap₂'_apply', lapMatrix, sub_mulVec, dotProduct_sub, dotProduct_mulVec_degMatrix,\r\n    dotProduct_mulVec_adjMatrix, ← sum_sub_distrib, sum_adj_eq_degree, sum_mul, ← sum_sub_distrib,\r\n    ite_mul, one_mul, zero_mul, ite_sub_ite, sub_zero]\r\n  rw [← half_add_self (∑ x_1 : V, ∑ x_2 : V, _)]\r\n  conv_lhs => arg 1; arg 2; arg 2; intro i; arg 2; intro j; rw [if_congr (adj_comm G i j)]\r\n  conv_lhs => arg 1; arg 2; rw [Finset.sum_comm]\r\n  simp_rw [← sum_add_distrib, ite_add_ite]\r\n  congr 2 with i\r\n  congr 2 with j\r\n  ring_nf\r\n```",
                    "createdAt": "2023-12-02T21:03:45Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNrz5",
                    "body": "```suggestion\r\ntheorem isPosSemidef_lapMatrix [LinearOrderedField α] [StarOrderedRing α] [TrivialStar α] :\r\n    PosSemidef (G.lapMatrix α) := by\r\n  constructor\r\n  · rw [IsHermitian, conjTranspose_eq_transpose_of_trivial, isSymm_lapMatrix]\r\n  · intro x\r\n    rw [star_trivial, ← toLinearMap₂'_apply', lapMatrix_toLinearMap₂']\r\n    refine div_nonneg (sum_nonneg' fun i ↦ sum_nonneg' fun j ↦ ?_) two_pos.le\r\n    split\r\n    · apply sq_nonneg\r\n    · rfl\r\n```",
                    "createdAt": "2023-12-02T21:04:37Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNr-0",
                    "body": "This can be golfed a lot:\r\n```suggestion\r\ntheorem lapMatrix_toLinearMap₂'_apply'_zero_iff_adj [LinearOrderedField α] (x : V → α) :\r\n    Matrix.toLinearMap₂' (G.lapMatrix α) x x = 0 ↔ ∀ i j : V, G.Adj i j → x i = x j := by\r\n  constructor\r\n  · intro h i j\r\n    by_contra hn\r\n    push_neg at hn\r\n    suffices hc : toLinearMap₂' (G.lapMatrix α) x x > 0\r\n    · exact gt_irrefl _ (h ▸ hc)\r\n    rw [lapMatrix_toLinearMap₂']\r\n    refine div_pos (sum_pos' (λ k _ ↦ sum_nonneg' (λ l ↦ ?_)) ?_) two_pos\r\n    · split_ifs\r\n      · apply sq_nonneg\r\n      · rfl\r\n    · refine ⟨i, mem_univ _, sum_pos' (λ k _ ↦ ?_) ⟨j, mem_univ _, ?_⟩⟩\r\n      · split_ifs\r\n        · apply sq_nonneg\r\n        · rfl\r\n      · simpa only [hn, ite_true, gt_iff_lt, sub_pos] using\r\n          sq_pos_of_ne_zero _ (sub_ne_zero.mpr hn.2)\r\n  · intro h\r\n    rw [lapMatrix_toLinearMap₂', div_eq_zero_iff]\r\n    refine Or.inl <| sum_eq_zero λ i _ ↦ (sum_eq_zero λ j _ ↦ ?_)\r\n    simpa only [ite_eq_right_iff, zero_lt_two, pow_eq_zero_iff, sub_eq_zero] using h i j\r\n```",
                    "createdAt": "2023-12-02T21:07:37Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNsyg",
                    "body": "I think it would be cleaner to express this in terms of `Matrix.toLin'` (i.e. interpreting A as a linear, not bilinear, map). Can you show\r\n```\r\ntheorem PosSemidef.toLin'_zero_iff (A : Matrix V V ℝ) (h_psd : PosSemidef A) (x : V → ℝ) :\r\n    Matrix.toLinearMap₂' A x x = 0 ↔ Matrix.toLin' A x = 0 := by sorry\r\n```\r\n? Then you can replace most of the uses of `toLinearMap₂'` (the ones which aren't explicitly using the bilinear form) further down the file with `toLin'`.",
                    "createdAt": "2023-12-02T21:16:53Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UUNvC",
                    "body": "I proved it but I guess this theorem wont be needed anymore once `PosSemidef.dotProduct_mulVec_zero_iff` from PR https://github.com/leanprover-community/mathlib4/pull/8809 is available",
                    "createdAt": "2023-12-04T22:30:21Z",
                    "author": {
                      "login": "awueth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNs4Z",
                    "body": "```suggestion\r\n  · rw [← ConnectedComponent.eq] at h\r\n    exact (h₂ (h₁ ▸ h.symm)).elim\r\n  · rw [← ConnectedComponent.eq] at h\r\n    exact (h₁ (h₃ ▸ h)).elim\r\n```",
                    "createdAt": "2023-12-02T21:20:21Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5UNs6p",
                    "body": "All the lemmas about positive-semidef matrices will have to be moved into `Mathlib.LinearAlgebra.Matrix.PosDef` or somewhere similar. It might be nice to add, at the same time, the following characterisation of positive semidefinite matrices:\r\n```\r\nlemma Matrix.posSemidef_iff_exists_eq_transpose_mul_self {A : Matrix V V ℝ} : \r\n    PosSemidef A ↔ ∃ (B : Matrix V V ℝ), A = Bᵀ * B := \r\n  ⟨fun hA ↦ ⟨_, hA.spectral_theorem⟩, fun ⟨B, hB⟩ ↦ (hB ▸ posSemidef_conjTranspose_mul_self B)⟩\r\n```\r\n\r\n",
                    "createdAt": "2023-12-02T21:22:28Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UQ6Ja",
                    "body": "I've made a separate PR #8809 for the linear-algebra parts (crediting you as a contributor) – I hope that's OK with you.",
                    "createdAt": "2023-12-04T11:06:40Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5UUN5d",
                    "body": "Thats fine with me, thanks!",
                    "createdAt": "2023-12-04T22:31:07Z",
                    "author": {
                      "login": "awueth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5VSyho",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  rw [← half_add_self (∑ x_1 : V, ∑ x_2 : V, _)]\n```\n",
                    "createdAt": "2023-12-19T06:50:12Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Whb2n",
                    "body": "```suggestion\r\n* `SimpleGraph.lapMatrix`: The Laplacian matrix of a simple graph, defined as the difference\r\n```",
                    "createdAt": "2024-01-13T20:59:04Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Whb49",
                    "body": "```suggestion\r\nand `A` the adjacency matrix of `G`. -/\r\n```",
                    "createdAt": "2024-01-13T21:00:06Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Whb87",
                    "body": "```suggestion\r\n$$x^{\\top} L x = \\sum_{i \\sim j} (x_{i}-x_{j})^{2}$$\r\nwhere $\\sim$ denotes the adjacency relation -/\r\n```",
                    "createdAt": "2024-01-13T21:01:52Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Whb-z",
                    "body": "Given the theorem statement, it would be in the reverse order. Maybe throw in an `if`? So `degree_eq_sum_if_adj`",
                    "createdAt": "2024-01-13T21:02:38Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcC_",
                    "body": "The name should have `eq` in there. Maybe `forall` too? `lapMatrix_toLinearMap₂'_apply'_eq_zero_iff_forall_adj`",
                    "createdAt": "2024-01-13T21:04:58Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcGp",
                    "body": "```suggestion\r\ntheorem lapMatrix_toLin'_apply_eq_zero_iff_forall_adj (x : V → ℝ) :\r\n```",
                    "createdAt": "2024-01-13T21:06:09Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcHE",
                    "body": "```suggestion\r\ntheorem lapMatrix_toLinearMap₂'_apply'_eq_zero_iff_forall_reachable (x : V → ℝ) :\r\n```",
                    "createdAt": "2024-01-13T21:06:21Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcJ3",
                    "body": "```suggestion\r\ntheorem lapMatrix_toLin'_apply_eq_zero_iff_forall_reachable (x : V → ℝ) : Matrix.toLin' (G.lapMatrix ℝ) x = 0 ↔\r\n```",
                    "createdAt": "2024-01-13T21:07:44Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcL1",
                    "body": "I'm not sure what to call this. Here's an option.\r\n```suggestion\r\nlemma mem_ker_toLin'_lapMatrix_of_connectedComponent {G : SimpleGraph V} [DecidableRel G.Adj]\r\n```",
                    "createdAt": "2024-01-13T21:08:49Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcMA",
                    "body": "```suggestion\r\n`V → ℝ` which is `1` on the vertices in `c` and `0` elsewhere.\r\nThe family of these maps indexed by the connected components of `G` proves to be a basis\r\nof the kernel of `lapMatrix G R` -/\r\n```",
                    "createdAt": "2024-01-13T21:09:02Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcOT",
                    "body": "I think this should go the other way?\r\n```suggestion\r\nlemma linearIndependent_lapMatrix_ker_basis_aux :\r\n```",
                    "createdAt": "2024-01-13T21:09:59Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcRx",
                    "body": "Mathlib names always follow the syntax of the lemma, not the meaning of it, unless \"spanning\" is a convention specified somewhere and I'm not familiar with it.\r\n```suggestion\r\nlemma top_le_span_range_lapMatrix_ker_basis_aux :\r\n```",
                    "createdAt": "2024-01-13T21:11:14Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcR8",
                    "body": "```suggestion\r\nthe basis is made up of the functions `V → ℝ` which are `1` on the vertices of the given\r\nconnected component and `0` elsewhere. -/\r\n```",
                    "createdAt": "2024-01-13T21:11:27Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5WhcSp",
                    "body": "```suggestion\r\n/-- The number of connected components in `G` is the dimension of the nullspace its Laplacian. -/\r\n```",
                    "createdAt": "2024-01-13T21:11:55Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YAt8_",
                    "body": "This should go into the AdjMatrix module",
                    "createdAt": "2024-02-02T19:27:22Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YnSt_",
                    "body": "Done. I'm not sure about in the placement though, i feel like it could also go below `adjMatrix_vecMul_apply`.",
                    "createdAt": "2024-02-12T19:51:55Z",
                    "author": {
                      "login": "awueth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YCmLs",
                    "body": "```suggestion\r\n  simp only [dotProduct, mulVec, adjMatrix_apply, ite_mul, one_mul, zero_mul, mul_sum, mul_ite,\r\n    mul_zero]\r\n```",
                    "createdAt": "2024-02-03T14:41:31Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YnEj2",
                    "body": "Are `unfold`'s something that should be avoided in general?",
                    "createdAt": "2024-02-12T19:02:37Z",
                    "author": {
                      "login": "awueth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YnF2f",
                    "body": "In the cases below I see why it makes sense but here using 'unfold' appears more readable to me.",
                    "createdAt": "2024-02-12T19:08:01Z",
                    "author": {
                      "login": "awueth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YCmMd",
                    "body": "```suggestion\r\n  simp only [dotProduct, degMatrix, mulVec_diagonal, ← mul_assoc, mul_comm]\r\n```",
                    "createdAt": "2024-02-03T14:42:04Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YCmN1",
                    "body": "```suggestion\r\n  simp_rw [degree, neighborFinset, neighborSet, sum_boole]\r\n  rw [Set.toFinset_setOf]\r\n```\r\n(for some reason `simp_rw` won't fire on `Set.toFinset_setOf` -- maybe it doesn't locate the decidability instances?)",
                    "createdAt": "2024-02-03T14:42:50Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YCmOv",
                    "body": "```suggestion\r\n  simp_rw [toLinearMap₂'_apply', lapMatrix, sub_mulVec, dotProduct_sub, dotProduct_mulVec_degMatrix,\r\n    dotProduct_mulVec_adjMatrix, ← sum_sub_distrib, degree_eq_sum_if_adj, sum_mul, ite_mul, one_mul,\r\n    zero_mul, ← sum_sub_distrib, ite_sub_ite, sub_zero]\r\n```",
                    "createdAt": "2024-02-03T14:43:31Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YCmem",
                    "body": "```suggestion\r\n  refine ⟨?_, fun h i j hA ↦ h i j hA.reachable⟩\r\n  · intro h i j ⟨w⟩\r\n    induction' w with w i j _ hA _ h'\r\n    · rfl\r\n    · exact (h i j hA).trans h'\r\n```",
                    "createdAt": "2024-02-03T14:51:42Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5YCmhh",
                    "body": "```suggestion\r\n    by_contra! hn\r\n    suffices hc : toLinearMap₂' (G.lapMatrix α) x x > 0\r\n    · exact gt_irrefl _ (h ▸ hc)\r\n    rw [lapMatrix_toLinearMap₂']\r\n    refine div_pos (sum_pos' (fun k _ ↦ sum_nonneg' (fun l ↦ ?_)) ?_) two_pos\r\n    · exact ite_nonneg (sq_nonneg _) le_rfl\r\n    · refine ⟨i, mem_univ _, sum_pos' (fun k _ ↦ ?_) ⟨j, mem_univ _, ?_⟩⟩\r\n      · exact ite_nonneg (sq_nonneg _) le_rfl\r\n      · simpa only [hn, ite_true, gt_iff_lt, sub_pos] using\r\n          sq_pos_of_ne_zero _ (sub_ne_zero.mpr hn.2)\r\n  · intro h\r\n    rw [lapMatrix_toLinearMap₂', div_eq_zero_iff]\r\n    refine Or.inl <| sum_eq_zero fun i _ ↦ (sum_eq_zero fun j _ ↦ ?_)\r\n```\r\n(I think `λ` is deprecated in favour of `fun` in mathlib 4.)",
                    "createdAt": "2024-02-03T14:53:27Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Zr-Oe",
                    "body": "```suggestion\r\ntheorem posSemidef_lapMatrix [LinearOrderedField α] [StarOrderedRing α] [TrivialStar α] :\r\n```",
                    "createdAt": "2024-02-27T17:46:53Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Zr-lv",
                    "body": "```suggestion\r\ntheorem card_ConnectedComponent_eq_rank_ker_lapMatrix : Fintype.card G.ConnectedComponent =\r\n```",
                    "createdAt": "2024-02-27T17:48:11Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjgzNDI5NzIy",
              "login": "awueth"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "MDQ6VXNlcjUzNTUzNzU1",
              "login": "apurvanakade"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9G09Q",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057786/job/22075782389"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GtRg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075780422"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GvNQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075780917"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9G1Vg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057794/job/22075782486"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GxwQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075781569"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GuGA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075780632"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9G0ew",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057794/job/22075782267"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GvSQ",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075780937"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9Gs4g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075780322"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GwlA",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075781268"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GwNA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075781172"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GuSA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075780680"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9GxIQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22075781409"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9Gyrw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057164/job/22075781807"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI-HkFQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8080057162/job/22076843029"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFI9ICzA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=8594"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGdwKarQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1908",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Laplacian matrix of a simple graph",
        "updatedAt": "2024-03-25T19:55:51Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8594",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oIFlx",
              "createdAt": "2023-11-23T20:02:39Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oIJpA",
              "createdAt": "2023-11-23T20:32:47Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5oIUZ0",
              "createdAt": "2023-11-23T21:33:10Z",
              "body": "",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAAKTGIVs",
              "createdAt": "2023-11-24T15:53:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAAKThoR8",
              "createdAt": "2023-11-27T01:52:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
                "name": "t-combinatorics"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53tLLUzwAAAAKWPiuZ",
              "createdAt": "2023-11-30T15:27:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAAKWPk45",
              "createdAt": "2023-11-30T15:28:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5o2PkO",
              "createdAt": "2023-12-01T05:33:07Z",
              "body": "",
              "author": {
                "login": "apurvanakade"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5o9hXd",
              "createdAt": "2023-12-02T20:58:37Z",
              "body": "I've added some suggestions. Most of this is just minor \"golfing\" of proofs (expressing the same argument in slightly fewer lines). The only major point is that it would be nicer to work with the kernel of the Laplacian as an endomorphism of the space of functions on V, rather than what you do here, which is actually to regard it as a map from that space to its own dual.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Pr6Ya",
              "createdAt": "2023-12-04T11:05:15Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5hCkWF",
                "title": "[Merged by Bors] - feat(LinearAlgebra/Matrix/PosDef): unique positive semidef square root",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8809"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qleQl",
              "createdAt": "2023-12-19T06:50:12Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vAGTi",
              "createdAt": "2023-12-19T08:09:20Z",
              "body": "I merged master into this branch in order to use ```PosSemidef.toLinearMap₂'_zero_iff``` from #8809. Was this a mistake? This branch is now 500 commits ahead which is not what I intended. How do I fix this?",
              "author": {
                "login": "awueth"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAAKgxDfz",
              "createdAt": "2023-12-19T09:38:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c53tLLUzwAAAAKgzV9k",
              "createdAt": "2023-12-19T10:29:18Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vA5KF",
              "createdAt": "2023-12-19T10:30:31Z",
              "body": "The usual recipe is to make a new fresh branch from master, and then import your old changes into it using `git merge --squash`, which destroys the git history. Then you \"force push\" the new branch to GitHub (`git push --force`). Some open source projects are very insistent that destroying git history is a bad thing, but mathlib has its own way of doing things (and each PR gets squashed down to a single commit, with a new label, when it gets merged anyway).\r\n\r\nI think it's best if I fix this, since I have a clean copy of your old git branch saved. Here you go.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53tLLUzwAAAAKgzpVH",
              "createdAt": "2023-12-19T10:35:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vA7xF",
              "createdAt": "2023-12-19T10:37:05Z",
              "body": "When you want to work further on this, I suggest killing your current git branch and then checking out the new branch from GitHub:\r\n```\r\ngit fetch\r\ngit branch -D awueth-lapMatrix\r\ngit checkout origin/awueth-lapMatrix\r\n```",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5vHL_c",
              "createdAt": "2023-12-20T09:40:39Z",
              "body": "> When you want to work further on this, I suggest killing your current git branch and then checking out the new branch from GitHub:\r\n> \r\n> ```\r\n> git fetch\r\n> git branch -D awueth-lapMatrix\r\n> git checkout origin/awueth-lapMatrix\r\n> ```\r\n\r\nThanks a lot! It looks to be working nicely again. ",
              "author": {
                "login": "awueth"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAAKpGBSX",
              "createdAt": "2024-01-09T08:24:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c53tLLUzwAAAAKrlsZ0",
              "createdAt": "2024-01-12T12:38:36Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53tLLUzwAAAAKrl03Q",
              "createdAt": "2024-01-12T12:42:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5wm-Nx",
              "createdAt": "2024-01-12T13:52:27Z",
              "body": "Merge conflict now fixed, please review!",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5sfIuq",
              "createdAt": "2024-01-13T20:59:04Z",
              "body": "Some comments, mostly naming and style.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5xpV2X",
              "createdAt": "2024-01-23T18:24:57Z",
              "body": "LGTM",
              "author": {
                "login": "apurvanakade"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5tpcWX",
              "createdAt": "2024-01-23T18:25:34Z",
              "body": "",
              "author": {
                "login": "apurvanakade"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5u3-mp",
              "createdAt": "2024-02-02T19:27:22Z",
              "body": "I pushed some cosmetic changes, and wrapped everything in the `SimpleGraph` namespace.\r\n\r\nThere's some missing API still. I added a couple theorems. Basically, much of the time when there's an `unfold`, it indicates that there's some lemma that's missing. I suspect `lapMatrix_toLinearMap₂'` for example contains some intermediate results that we'd want.\r\n\r\nWe don't need to go too deep into this before we merge, but I want to be sure that we have lemmas like the ones in AdjMatrix surrounding the definitions so that we don't need to `unfold` so much.\r\n\r\n(I left one comment; I haven't done a very careful review for other such lemmas yet.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5u7T2H",
              "createdAt": "2024-02-03T14:41:31Z",
              "body": "The remaining `unfold`'s aren't so much a sign of missing API, as of existing API which hasn't been used (fortunately, since most of them are unfolding pre-existing mathlib definitions, rather than ones added in this PR). I'm posting suggested reformulations which avoid the unfoldings entirely.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAALHRBzy",
              "createdAt": "2024-02-27T09:05:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c53tLLUzwAAAALHeUkl",
              "createdAt": "2024-02-27T13:36:50Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51N3wD",
              "createdAt": "2024-02-27T13:37:45Z",
              "body": "It wasn't merging cleanly so I have force-pushed a new, rebased branch.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53tLLUzwAAAALHfUQs",
              "createdAt": "2024-02-27T13:55:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5xghTj",
              "createdAt": "2024-02-27T17:46:53Z",
              "body": "Thanks for all the work on this!\r\n\r\nThere are just two mathlib naming convention issues I noticed, and once you fix those, let's merge.\r\n\r\nbors d+\r\n\r\nI have now delegated merging rights to you. After you address the comments, you can create a comment that contains `bors merge` on a line of its own, and that will send it off into the next merge batch. It is usually courteous to wait until the CI passes on your own branch before sending it to bors, since the batch fails if any included PR fails.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51Qo1N",
              "createdAt": "2024-02-27T17:52:47Z",
              "body": ":v: awueth can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAALHvd8R",
              "createdAt": "2024-02-27T17:52:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53tLLUzwAAAALHvd94",
              "createdAt": "2024-02-27T17:52:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51WyoN",
              "createdAt": "2024-02-28T12:44:43Z",
              "body": "`bors merge`",
              "author": {
                "login": "awueth"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c51XQpT",
              "createdAt": "2024-02-28T13:52:28Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8080576564/job/22077335507)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8080576564/job/22077334749)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8080576564/job/22077334477)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c53tLLUzwAAAALIZfxP",
              "createdAt": "2024-02-28T13:52:29Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c53tLLUzwAAAALIZf5u",
              "createdAt": "2024-02-28T13:52:31Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53tLLUzwAAAALZj9Xp",
              "createdAt": "2024-03-25T19:55:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
