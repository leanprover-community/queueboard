{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 484,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> List.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 10,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6bw8ns",
              "body": "### PR summary [4cf814d911](https://github.com/leanprover-community/mathlib4/pull/21031/commits/4cf814d911631263ee9ea29245f2cd605b12055b)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.RingTheory.Valuation.Basic | 982 | 985 | +3 (+0.31%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.RingTheory.Valuation.RankOne`|2|\n|<details><summary>5 files</summary> `Mathlib.RingTheory.HahnSeries.Valuation` `Mathlib.RingTheory.Valuation.Basic` `Mathlib.RingTheory.Valuation.Integers` `Mathlib.RingTheory.Valuation.PrimeMultiplicity` `Mathlib.RingTheory.Valuation.ValExtension`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ MonoidHom.ofClass`\n`+ MulEquiv.ofClass`\n`+ MulEquiv.ofClass_injective`\n`+ MulHom.coe_ofClass`\n`+ MulHom.ofClass`\n`+ OneHom.coe_ofClass`\n`+ OneHom.ofClass`\n`+ Simps.symm_apply`\n`+ apply_eq_iff_eq`\n`+ apply_eq_iff_symm_apply`\n`+ bijective`\n`+ coe_mk`\n`+ coe_refl`\n`+ coe_symm_mulEquiv`\n`+ coe_symm_ofClass`\n`+ coe_symm_orderIso`\n`+ coe_toEquiv`\n`+ coe_toEquiv_symm`\n`+ coe_toMonoidHom`\n`+ coe_toMulEquiv`\n`+ coe_toMulHom`\n`+ coe_trans`\n`+ comp_left_injective`\n`+ comp_right_injective`\n`+ comp_symm_eq`\n`+ congr_arg`\n`+ congr_fun`\n`+ eq_comp_symm`\n`+ eq_symm_apply`\n`+ eq_symm_comp`\n`+ equivLike_inv_eq_symm`\n`+ ext`\n`+ injective`\n`+ instance : Coe (M ≃* N) (M →* N) := ⟨MulEquiv.toMonoidHom⟩`\n`+ instance : Coe (M ≃* N) (M →ₙ* N) where coe := toMulHom`\n`+ instance : Coe (M ≃* N) (M ≃ N) where coe := toEquiv`\n`+ instance : Coe (α →*o β) (α →* β) := ⟨toMonoidHom⟩`\n`+ instance : Coe (α →ₙ+* β) (α →+ β) := ⟨toAddMonoidHom⟩`\n`+ instance : EquivLike (M ≃* N) M N`\n`+ instance : FunLike (M ≃* N) M N := inferInstance`\n`+ instance : Inhabited (M ≃* M) := ⟨refl M⟩`\n`+ instance : MulEquivClass (M ≃* N) M N`\n`+ invFun_eq_symm`\n`+ isLocalHom_monoidHomOfClass`\n`+ mapEquiv`\n`+ map_eq_one_iff`\n`+ map_id`\n`+ map_map`\n`+ map_mul`\n`+ map_ne_one_iff`\n`+ map_one`\n`+ mk'`\n`+ mk_coe`\n`+ mk_coe'`\n`+ ofBijective`\n`+ ofBijective_apply_symm_apply`\n`+ ofClass_symm_comp_self`\n`+ refl`\n`+ refl_apply`\n`+ refl_symm`\n`+ self_comp_ofClass_symm`\n`+ self_comp_symm`\n`+ self_trans_symm`\n`+ surjective`\n`+ symm_apply_eq`\n`+ symm_bijective`\n`+ symm_comp_eq`\n`+ symm_comp_self`\n`+ symm_map_mul`\n`+ symm_mk`\n`+ symm_symm`\n`+ symm_trans_apply`\n`+ symm_trans_self`\n`+ toEquiv_symm`\n`+ toFun_eq_coe`\n`+ toMonoidHom`\n`+ toMonoidHom_comp_symm`\n`+ toMonoidHom_injective`\n`+ toMonoidHom_refl`\n`+ toMonoidHom_symm_comp_toMonoidHom`\n`+ toMonoidHom_trans`\n`+ trans`\n`+ trans_apply`\n`++ apply_ofClass_symm_apply`\n`++ apply_symm_apply`\n`++ coe_ofClass`\n`++ ofClass`\n`++ ofClass_symm_apply_apply`\n`++ symm`\n`++ symm_apply_apply`\n`++ toMonoidHom_comp_toMonoidHom_symm`\n`- EquivLike.toEquiv`\n`- MonoidHom.coe_coe`\n`- MonoidHomClass.toMonoidHom`\n`- MulEquivClass.toMulEquiv_injective`\n`- MulHom.coe_coe`\n`- MulHomClass.toMulHom`\n`- OneHom.coe_coe`\n`- OneHomClass.toOneHom`\n`- RingHomClass.toRingHom`\n`- _root_.EquivLike.apply_coe_symm_apply`\n`- _root_.EquivLike.coe_coe`\n`- _root_.EquivLike.coe_symm_apply_apply`\n`- _root_.EquivLike.coe_symm_comp_self`\n`- _root_.EquivLike.self_comp_coe_symm`\n`- instance : CoeTC F (α →+* β)`\n`- instance [MonoidHomClass F M N] : CoeTC F (M →* N)`\n`- instance [MulHomClass F M N] : CoeTC F (M →ₙ* N)`\n`- instance [OneHomClass F M N] : CoeTC F (OneHom M N)`\n`- instance {F} [EquivLike F α β] : CoeTC F (α ≃ β)`\n`- isLocalHom_toMonoidHom`\n`- map_apply`\n`- toMonoidHom_eq_coe`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (7.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4313|7|porting notes|\n\nCurrent commit [4cf814d911](https://github.com/leanprover-community/mathlib4/commit/4cf814d911631263ee9ea29245f2cd605b12055b)\nReference commit [395adf2401](https://github.com/leanprover-community/mathlib4/commit/395adf2401cc7247738280245313c33803ea7eec)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-24T20:09:58Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "4cf814d911631263ee9ea29245f2cd605b12055b",
                "additions": 484,
                "deletions": 126,
                "committedDate": "2025-01-24T20:08:57Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaljZ5A",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956824674/job/36143946212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliVLg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818311/job/36143928622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliroQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820338/job/36143934369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliriw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820411/job/36143934347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIalir5A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820336/job/36143934436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliTug",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818316/job/36143928250"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIalitDA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820343/job/36143934732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliU2g",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818316/job/36143928538"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliTpA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818311/job/36143928228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIalirtg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820343/job/36143934390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaliWjA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818311/job/36143928972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIalxZzA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818316/job/36144175564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaljgYg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36143947874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIalj-Wg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21031&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-24T20:09:07Z",
        "deletions": 126,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Group/Equiv/Basic.lean",
              "additions": 354,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Hom/Defs.lean",
              "additions": 17,
              "deletions": 39
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Map.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Group/Units/Hom.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Hom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Hom/Monoid.lean",
              "additions": 33,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Ring/Hom/Defs.lean",
              "additions": 14,
              "deletions": 16
            },
            {
              "path": "Mathlib/GroupTheory/MonoidLocalization/Basic.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Logic/Equiv/Defs.lean",
              "additions": 36,
              "deletions": 37
            },
            {
              "path": "Mathlib/RingTheory/Valuation/Basic.lean",
              "additions": 21,
              "deletions": 12
            }
          ]
        },
        "headRefName": "no_generic_hom_coe",
        "headRefOid": "4cf814d911631263ee9ea29245f2cd605b12055b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6I8cge",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21031,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaljZ5A",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956824674/job/36143946212"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliVLg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818311/job/36143928622"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliroQ",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820338/job/36143934369"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliriw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820411/job/36143934347"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIalir5A",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820336/job/36143934436"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliTug",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818316/job/36143928250"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIalitDA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820343/job/36143934732"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliU2g",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818316/job/36143928538"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliTpA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818311/job/36143928228"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIalirtg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956820343/job/36143934390"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaliWjA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818311/job/36143928972"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIalxZzA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956818316/job/36144175564"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaljgYg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36143947874"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIalj-Wg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21031&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore: get rid of generic hom coercions",
        "updatedAt": "2025-01-24T23:55:06Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21031",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4cf814d911631263ee9ea29245f2cd605b12055b"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ngbsyzwAAAAO9d8x1",
              "createdAt": "2025-01-24T20:09:24Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bw8ns",
              "createdAt": "2025-01-24T20:09:58Z",
              "body": "### PR summary [4cf814d911](https://github.com/leanprover-community/mathlib4/pull/21031/commits/4cf814d911631263ee9ea29245f2cd605b12055b)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.RingTheory.Valuation.Basic | 982 | 985 | +3 (+0.31%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.RingTheory.Valuation.RankOne`|2|\n|<details><summary>5 files</summary> `Mathlib.RingTheory.HahnSeries.Valuation` `Mathlib.RingTheory.Valuation.Basic` `Mathlib.RingTheory.Valuation.Integers` `Mathlib.RingTheory.Valuation.PrimeMultiplicity` `Mathlib.RingTheory.Valuation.ValExtension`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ MonoidHom.ofClass`\n`+ MulEquiv.ofClass`\n`+ MulEquiv.ofClass_injective`\n`+ MulHom.coe_ofClass`\n`+ MulHom.ofClass`\n`+ OneHom.coe_ofClass`\n`+ OneHom.ofClass`\n`+ Simps.symm_apply`\n`+ apply_eq_iff_eq`\n`+ apply_eq_iff_symm_apply`\n`+ bijective`\n`+ coe_mk`\n`+ coe_refl`\n`+ coe_symm_mulEquiv`\n`+ coe_symm_ofClass`\n`+ coe_symm_orderIso`\n`+ coe_toEquiv`\n`+ coe_toEquiv_symm`\n`+ coe_toMonoidHom`\n`+ coe_toMulEquiv`\n`+ coe_toMulHom`\n`+ coe_trans`\n`+ comp_left_injective`\n`+ comp_right_injective`\n`+ comp_symm_eq`\n`+ congr_arg`\n`+ congr_fun`\n`+ eq_comp_symm`\n`+ eq_symm_apply`\n`+ eq_symm_comp`\n`+ equivLike_inv_eq_symm`\n`+ ext`\n`+ injective`\n`+ instance : Coe (M ≃* N) (M →* N) := ⟨MulEquiv.toMonoidHom⟩`\n`+ instance : Coe (M ≃* N) (M →ₙ* N) where coe := toMulHom`\n`+ instance : Coe (M ≃* N) (M ≃ N) where coe := toEquiv`\n`+ instance : Coe (α →*o β) (α →* β) := ⟨toMonoidHom⟩`\n`+ instance : Coe (α →ₙ+* β) (α →+ β) := ⟨toAddMonoidHom⟩`\n`+ instance : EquivLike (M ≃* N) M N`\n`+ instance : FunLike (M ≃* N) M N := inferInstance`\n`+ instance : Inhabited (M ≃* M) := ⟨refl M⟩`\n`+ instance : MulEquivClass (M ≃* N) M N`\n`+ invFun_eq_symm`\n`+ isLocalHom_monoidHomOfClass`\n`+ mapEquiv`\n`+ map_eq_one_iff`\n`+ map_id`\n`+ map_map`\n`+ map_mul`\n`+ map_ne_one_iff`\n`+ map_one`\n`+ mk'`\n`+ mk_coe`\n`+ mk_coe'`\n`+ ofBijective`\n`+ ofBijective_apply_symm_apply`\n`+ ofClass_symm_comp_self`\n`+ refl`\n`+ refl_apply`\n`+ refl_symm`\n`+ self_comp_ofClass_symm`\n`+ self_comp_symm`\n`+ self_trans_symm`\n`+ surjective`\n`+ symm_apply_eq`\n`+ symm_bijective`\n`+ symm_comp_eq`\n`+ symm_comp_self`\n`+ symm_map_mul`\n`+ symm_mk`\n`+ symm_symm`\n`+ symm_trans_apply`\n`+ symm_trans_self`\n`+ toEquiv_symm`\n`+ toFun_eq_coe`\n`+ toMonoidHom`\n`+ toMonoidHom_comp_symm`\n`+ toMonoidHom_injective`\n`+ toMonoidHom_refl`\n`+ toMonoidHom_symm_comp_toMonoidHom`\n`+ toMonoidHom_trans`\n`+ trans`\n`+ trans_apply`\n`++ apply_ofClass_symm_apply`\n`++ apply_symm_apply`\n`++ coe_ofClass`\n`++ ofClass`\n`++ ofClass_symm_apply_apply`\n`++ symm`\n`++ symm_apply_apply`\n`++ toMonoidHom_comp_toMonoidHom_symm`\n`- EquivLike.toEquiv`\n`- MonoidHom.coe_coe`\n`- MonoidHomClass.toMonoidHom`\n`- MulEquivClass.toMulEquiv_injective`\n`- MulHom.coe_coe`\n`- MulHomClass.toMulHom`\n`- OneHom.coe_coe`\n`- OneHomClass.toOneHom`\n`- RingHomClass.toRingHom`\n`- _root_.EquivLike.apply_coe_symm_apply`\n`- _root_.EquivLike.coe_coe`\n`- _root_.EquivLike.coe_symm_apply_apply`\n`- _root_.EquivLike.coe_symm_comp_self`\n`- _root_.EquivLike.self_comp_coe_symm`\n`- instance : CoeTC F (α →+* β)`\n`- instance [MonoidHomClass F M N] : CoeTC F (M →* N)`\n`- instance [MulHomClass F M N] : CoeTC F (M →ₙ* N)`\n`- instance [OneHomClass F M N] : CoeTC F (OneHom M N)`\n`- instance {F} [EquivLike F α β] : CoeTC F (α ≃ β)`\n`- isLocalHom_toMonoidHom`\n`- map_apply`\n`- toMonoidHom_eq_coe`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (7.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4313|7|porting notes|\n\nCurrent commit [4cf814d911](https://github.com/leanprover-community/mathlib4/commit/4cf814d911631263ee9ea29245f2cd605b12055b)\nReference commit [395adf2401](https://github.com/leanprover-community/mathlib4/commit/395adf2401cc7247738280245313c33803ea7eec)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ngbsyzwAAAAO9lQje",
              "createdAt": "2025-01-24T23:55:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
