{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 72,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n-->\r\n- [ ] depends on: #7772\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-10-23T12:53:46Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5pmkoM",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#7772~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-10-19T21:17:41Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pu_yb",
              "body": "Note: I have pushed an update to the lean toolchain because this PR was on a [buggy version](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Potential.20data.20loss.20from.20.60lake.20clean.60.20with.204.2E2.2E0-rc2.2F3/near/397875701) of the toolchain. **WARNING**: checking out old commits of this PR using v4.2.0-rc2 or v4.2.0-rc3 can cause `lake clean` to delete your mathlib folder! If you need to do so, make sure to delete `lakefile.olean` manually before running any `lake` commands.",
              "createdAt": "2023-10-21T21:33:09Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pyZal",
              "body": "I think a useful generalization of of `Function.OfArity` is the following:\r\n```lean\r\nimport Mathlib.Tactic\r\n\r\nuniverse u\r\n/-- The type of `n`-ary functions `Î± â†’ Î± â†’ ... â†’ Î²`. -/\r\ndef OfArity (Î± Î² : Type u) : â„• â†’ Type u\r\n  | 0 => Î²\r\n  | n + 1 => Î± â†’ OfArity Î± Î² n\r\n```\r\n",
              "createdAt": "2023-10-23T09:47:28Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pyce_",
              "body": "> I think a useful generalization of of `Function.OfArity` is the following:\r\n> \r\n> ```lean\r\n> import Mathlib.Tactic\r\n> \r\n> universe u\r\n> /-- The type of `n`-ary functions `Î± â†’ Î± â†’ ... â†’ Î²`. -/\r\n> def OfArity (Î± Î² : Type u) : â„• â†’ Type u\r\n>   | 0 => Î²\r\n>   | n + 1 => Î± â†’ OfArity Î± Î² n\r\n> ```\r\n\r\nI was considering this in a follow-up, though the lack of universe polymorphism is rather unfortunate.",
              "createdAt": "2023-10-23T09:54:38Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pyrIN",
              "body": "I agree that the universe restriction is annoying. It's still a much smaller restriction than \"the types need to be identical\". ",
              "createdAt": "2023-10-23T10:26:13Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pysf-",
              "body": "I'd personally go for a function of general arity where inputs and outputs can be different types from the same universe (all all inputs the same type).",
              "createdAt": "2023-10-23T10:29:41Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pzDIa",
              "body": "I've made that generalization in #7859, I think it's orthogonal to this PR.",
              "createdAt": "2023-10-23T11:29:32Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pzYVD",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2023-10-23T12:24:24Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pzlNb",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6613253001/job/17960729087)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6613253001/job/17960728829)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6613253001/job/17960728490)",
              "createdAt": "2023-10-23T12:53:44Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "db44f49dd461be2bddc6d011f12d820f33245902",
                "additions": 85,
                "deletions": 60,
                "committedDate": "2023-10-19T11:25:16Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "45f1a21f4f744bf2cd1460d53ba06bc9e214827f",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-10-19T11:28:49Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "61b9d977e1a401e5180691788e1081f66beef6e4",
                "additions": 46,
                "deletions": 0,
                "committedDate": "2023-10-19T12:02:05Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d0ddfd897747512ed37c111d0f79d293bb25e1d2",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-10-19T12:03:43Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8e9ae83b83010cf61a8008b2318f76f62af9c758",
                "additions": 1174,
                "deletions": 934,
                "committedDate": "2023-10-19T21:20:46Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3bf8f36995ca80e4a2cbcc5ab60d34bf558306f4",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-21T21:33:08Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1bfe808c3fb86da9ef77230a33b376d25997f235",
                "additions": 3265,
                "deletions": 925,
                "committedDate": "2023-10-23T10:58:02Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3481a1d587df459840ac1bdbba15fabf86763df2",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-10-23T11:03:43Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7d1b93d412dc35b9f80b8e9b775adb2f877836cb",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-10-23T11:05:54Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d93a995c119edd274d62b58035f672ee0e7a4f67",
                "additions": 72,
                "deletions": 51,
                "committedDate": "2023-10-23T11:09:31Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-19T12:02:36Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Fin/Tuple/Curry.lean",
              "additions": 71,
              "deletions": 0
            }
          ]
        },
        "headRefName": "eric-wieser/arity-currying",
        "headRefOid": "d93a995c119edd274d62b58035f672ee0e7a4f67",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5dQ43l",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kpNuz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-10-19T19:45:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k21RT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2023-10-23T09:28:46Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7773,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5klVgK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-19T12:04:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpNuz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-10-19T19:45:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k21RT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2023-10-23T09:28:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k2_cL",
              "body": "Can you bundle these results into an `Equiv`?",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-10-23T09:50:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k3dlC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-23T11:01:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k3go0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-23T11:10:18Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RYl4o",
                    "body": "@kmill: is it expected that this can be needed more than once?",
                    "createdAt": "2023-10-19T12:04:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ra_1g",
                    "body": "Nope, that's a bug. #7785",
                    "createdAt": "2023-10-19T19:45:20Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rj9Pi",
                    "body": "Since #7785 has been merged, I guess we can bump this PR to remove the second `eta_reduce` and merge this PR soon?",
                    "createdAt": "2023-10-23T09:28:46Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RkXza",
                    "body": "@kmill, the second `eta_reduce` is still needed to fully eta-reduce here. As it happens I didn't need either of these and I've removed them, but you can checkout 1bfe808c3fb86da9ef77230a33b376d25997f235 to diagnose.",
                    "createdAt": "2023-10-23T11:01:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RkEAD",
                    "body": "I would move these results to `Mathlib.Data.Fin.Tuple.Basic` so that this file has very little imports.",
                    "createdAt": "2023-10-23T09:50:14Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RkZy_",
                    "body": "I put them in a new file, `.Basic` is getting rather long.",
                    "createdAt": "2023-10-23T11:10:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Logic/Function/OfArity): curry and uncurry",
        "updatedAt": "2023-10-23T12:53:53Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7773",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db44f49dd461be2bddc6d011f12d820f33245902"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "45f1a21f4f744bf2cd1460d53ba06bc9e214827f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "61b9d977e1a401e5180691788e1081f66beef6e4"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAJ-YaGF",
              "createdAt": "2023-10-19T12:02:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAJ-YaGa",
              "createdAt": "2023-10-19T12:02:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAJ-YgWN",
              "createdAt": "2023-10-19T12:03:18Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d0ddfd897747512ed37c111d0f79d293bb25e1d2"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5klVgK",
              "createdAt": "2023-10-19T12:04:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50WfGGzwAAAAJ-ciNW",
              "createdAt": "2023-10-19T12:37:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5O9Yr2",
              "createdAt": "2023-10-19T19:44:42Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5dT5nK",
                "title": "[Merged by Bors] - fix: `eta_reduce` tactic should recursively reduce",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7785"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50WfGGzwAAAAJ-yZ2b",
              "createdAt": "2023-10-19T21:17:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pmkoM",
              "createdAt": "2023-10-19T21:17:41Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#7772~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e9ae83b83010cf61a8008b2318f76f62af9c758"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3bf8f36995ca80e4a2cbcc5ab60d34bf558306f4"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pu_yb",
              "createdAt": "2023-10-21T21:33:09Z",
              "body": "Note: I have pushed an update to the lean toolchain because this PR was on a [buggy version](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Potential.20data.20loss.20from.20.60lake.20clean.60.20with.204.2E2.2E0-rc2.2F3/near/397875701) of the toolchain. **WARNING**: checking out old commits of this PR using v4.2.0-rc2 or v4.2.0-rc3 can cause `lake clean` to delete your mathlib folder! If you need to do so, make sure to delete `lakefile.olean` manually before running any `lake` commands.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pyZal",
              "createdAt": "2023-10-23T09:47:28Z",
              "body": "I think a useful generalization of of `Function.OfArity` is the following:\r\n```lean\r\nimport Mathlib.Tactic\r\n\r\nuniverse u\r\n/-- The type of `n`-ary functions `Î± â†’ Î± â†’ ... â†’ Î²`. -/\r\ndef OfArity (Î± Î² : Type u) : â„• â†’ Type u\r\n  | 0 => Î²\r\n  | n + 1 => Î± â†’ OfArity Î± Î² n\r\n```\r\n",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5k2_cL",
              "createdAt": "2023-10-23T09:50:14Z",
              "body": "Can you bundle these results into an `Equiv`?",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50WfGGzwAAAAKADqIG",
              "createdAt": "2023-10-23T09:51:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAKADqIa",
              "createdAt": "2023-10-23T09:51:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pyce_",
              "createdAt": "2023-10-23T09:54:38Z",
              "body": "> I think a useful generalization of of `Function.OfArity` is the following:\r\n> \r\n> ```lean\r\n> import Mathlib.Tactic\r\n> \r\n> universe u\r\n> /-- The type of `n`-ary functions `Î± â†’ Î± â†’ ... â†’ Î²`. -/\r\n> def OfArity (Î± Î² : Type u) : â„• â†’ Type u\r\n>   | 0 => Î²\r\n>   | n + 1 => Î± â†’ OfArity Î± Î² n\r\n> ```\r\n\r\nI was considering this in a follow-up, though the lack of universe polymorphism is rather unfortunate.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pyrIN",
              "createdAt": "2023-10-23T10:26:13Z",
              "body": "I agree that the universe restriction is annoying. It's still a much smaller restriction than \"the types need to be identical\". ",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pysf-",
              "createdAt": "2023-10-23T10:29:41Z",
              "body": "I'd personally go for a function of general arity where inputs and outputs can be different types from the same universe (all all inputs the same type).",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1bfe808c3fb86da9ef77230a33b376d25997f235"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3481a1d587df459840ac1bdbba15fabf86763df2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7d1b93d412dc35b9f80b8e9b775adb2f877836cb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d93a995c119edd274d62b58035f672ee0e7a4f67"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pzDIa",
              "createdAt": "2023-10-23T11:29:32Z",
              "body": "I've made that generalization in #7859, I think it's orthogonal to this PR.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c50WfGGzwAAAAKAIQiv",
              "createdAt": "2023-10-23T11:42:09Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50WfGGzwAAAAKAIQ86",
              "createdAt": "2023-10-23T11:42:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAKAIQ9H",
              "createdAt": "2023-10-23T11:42:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAKAIQ9Y",
              "createdAt": "2023-10-23T11:42:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50WfGGzwAAAAKAIy69",
              "createdAt": "2023-10-23T11:56:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pzYVD",
              "createdAt": "2023-10-23T12:24:24Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50WfGGzwAAAAKAJ7op",
              "createdAt": "2023-10-23T12:24:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50WfGGzwAAAAKAJ7sD",
              "createdAt": "2023-10-23T12:24:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pzlNb",
              "createdAt": "2023-10-23T12:53:44Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6613253001/job/17960729087)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6613253001/job/17960728829)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6613253001/job/17960728490)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c50WfGGzwAAAAKALTlU",
              "createdAt": "2023-10-23T12:53:47Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c50WfGGzwAAAAKALT3u",
              "createdAt": "2023-10-23T12:53:53Z"
            }
          ]
        }
      }
    }
  }
}
