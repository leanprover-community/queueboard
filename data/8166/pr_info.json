{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 68,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "IvanRenison"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define a bicoloring for `pathGraph` and prove that when `2 ≤ n` its chromatic number is 2. Creates a ConcreteColorings module to hold such colorings of concrete graphs.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-11-14T19:39:09Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5r7-29",
              "body": "Great, thanks! Looking forward to your future contributions.\r\n\r\nbors r+",
              "createdAt": "2023-11-14T18:25:17Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r8tOv",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6868123480/job/18677943164)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6868123480/job/18677943369)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6868123480/job/18677943754)",
              "createdAt": "2023-11-14T19:39:08Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "6342b94254bb61586c3c3c9732fa86535e021a59",
                "additions": 38,
                "deletions": 0,
                "committedDate": "2023-10-29T19:07:55Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "58e58d954882063e1d40ad2289658009509270a0",
                "additions": 45,
                "deletions": 0,
                "committedDate": "2023-11-03T12:58:30Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6352ba533193ec7e3a688ecc69d18ac1eff29df1",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-11-03T13:38:27Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4e11e5c470346097502433c2e164ef681fb3abc5",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-11-03T13:53:27Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "991f4d6b1fafdbc8d3c8b5bddc960a0a0bd06eb6",
                "additions": 18,
                "deletions": 25,
                "committedDate": "2023-11-03T20:23:34Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8f9dd34ac49e3c2bb96a7c1fc0c7a54c38aeac68",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-11-06T20:20:48Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e24b9e16f91e4428c66ed2abf277433ecc6a603b",
                "additions": 18,
                "deletions": 14,
                "committedDate": "2023-11-06T20:35:58Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a28f4f31f6e69811ae01e3c49124a34ba65ae90f",
                "additions": 11,
                "deletions": 22,
                "committedDate": "2023-11-06T20:58:36Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f46d84fef73dda87705ee47f1fef58403c64d799",
                "additions": 20,
                "deletions": 33,
                "committedDate": "2023-11-06T22:28:27Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "685a06a5d1a1c466fad5ee06dfad2937f08c30df",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-11-06T22:47:11Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f76e3600a677284abd85c21f6f179aa683966441",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-06T23:02:53Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "65484ed033c1407a11fdfeb2ebf94be09bb90de6",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-11-14T16:48:59Z",
                "author": {
                  "name": "Iván Renison",
                  "email": "85908989+IvanRenison@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-03T20:36:32Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/ConcreteColorings.lean",
              "additions": 51,
              "deletions": 0
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Hasse.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Nat/Parity.lean",
              "additions": 6,
              "deletions": 0
            }
          ]
        },
        "headRefName": "IvanRenison_pathGraph_bicoloring",
        "headRefOid": "65484ed033c1407a11fdfeb2ebf94be09bb90de6",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5ekulz",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8166,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mRoQB",
              "body": "Thanks for contributing this proof of the chromatic number of the path graph!\r\n\r\nOne thing to be sure to do is wrap everything after the module docstring in `namespace SimpleGraph ... end SimpleGraph`. That way you don't need to put `SimpleGraph.` everywhere.\r\n\r\nI've also suggested changes to the organization of the proof. It's morally the same as your clique argument, but it goes through showing that there's an embedding of a two-vertex complete graph, which I believe is easier than working with cliques directly. My feeling is that cliques are better when you're in the clique-counting business.\r\n\r\n(Note: I edited the PR title and description.)",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-06T18:43:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nAqGM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-13T20:30:42Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SesMr",
                    "body": "In mathlib we use `=` instead of `==` and rely on the `decide` insertion.\r\n\r\nThis lemma made me realize we're missing the following lemmas. Could you add them?\r\n```lean\r\n-- to Data.Nat.Parity\r\ntheorem succ_mod_two_eq_zero_iff {m : ℕ} : (m + 1) % 2 = 0 ↔ m % 2 = 1 := by\r\n  simp [← Nat.even_iff, ← Nat.not_even_iff, parity_simps]\r\n\r\ntheorem succ_mod_two_eq_one_iff {m : ℕ} : (m + 1) % 2 = 1 ↔ m % 2 = 0 := by\r\n  simp [← Nat.even_iff, ← Nat.not_even_iff, parity_simps]\r\n```\r\n\r\nStyle comments: The theorem you wrote might be called something like `mod_two_beq_zero_neq_succ_mod_two_eq_zero` using the mathlib naming convention, possibly shortened. It's `succ` instead of `suc` and `mod_two` instead of `mod2`.",
                    "createdAt": "2023-11-06T18:20:34Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Setr3",
                    "body": "Here's a shorter proof by using a lemma and some mathlib tactics. Could you add this lemma to right after `pathGraph`?\r\n```suggestion\r\ntheorem pathGraph_adj {n : ℕ} {u v : Fin n} :\r\n    (pathGraph n).Adj u v ↔ u.val + 1 = v.val ∨ v.val + 1 = u.val := by\r\n  simp only [pathGraph, hasse]\r\n  simp_rw [← Fin.coe_covby_iff, Nat.covby_iff_succ_eq]\r\n\r\n/-- Bicoloring of a path graph -/\r\ndef pathGraph.bicoloring (n : ℕ) :\r\n    Coloring (pathGraph n) Bool :=\r\n  Coloring.mk (fun u ↦ u.val % 2 = 0) <| by\r\n    intro u v\r\n    rw [pathGraph_adj]\r\n    rintro (h | h) <;> simp [← h, not_iff, succ_mod_two_eq_zero_iff]\r\n```\r\n\r\nStyle comments:\r\n- Do not have \"non-terminal simps,\" which are simps that do not close a goal. That `simp` before the `have` is not allowed -- we use `simp?` to turn them into a `simp only`, which is allowed.\r\n- We generally don't do `simp_all`. Usually there's something more precise.\r\n- `match` is ok, but using `obtain` or `rintro` tends to be cleaner. Inside tactics, you'll often find `cases` instead of `match`, which has similar syntax.",
                    "createdAt": "2023-11-06T18:23:22Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SeuAI",
                    "body": "This definition ends up being unnecessary. Lean can unfold things and see that `Fintype.card Bool = 2` without needing it to be `Fintype.card (Fin 2) = 2` (I guessing that's why you introduced this).",
                    "createdAt": "2023-11-06T18:24:39Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SeuhK",
                    "body": "Rather than using cliques, I find working with graph embeddings to be preferable (maps are more fun than sets, right?) Here's the main content of this clique lemma, but it lets you avoid needing to construct this two-element finset, and `⊤` (the complete graph) is what a clique is modeling.\r\n```lean\r\ndef pathGraph_two_embedding (n : ℕ) (h : 2 ≤ n) : pathGraph 2 ↪g pathGraph n where\r\n  toFun v := ⟨v, trans v.2 h⟩\r\n  inj' := by\r\n    rintro v w\r\n    rw [Fin.mk.injEq]\r\n    exact Fin.ext\r\n  map_rel_iff' := by\r\n    intro v w\r\n    fin_cases v <;> fin_cases w <;> simp [pathGraph, ← Fin.coe_covby_iff]\r\n\r\n-- move to right after `pathGraph`\r\ntheorem pathGraph_two_eq_top : pathGraph 2 = ⊤ := by\r\n  ext u v\r\n  fin_cases u <;> fin_cases v <;> simp [pathGraph, ← Fin.coe_covby_iff, Nat.covby_iff_succ_eq]\r\n```\r\nStyle comments: Note the non-terminal simp. Also note that `simp_all` obscures that `hs` is essential to closing the goal. In this case I believe you can use `simpa using hs`, which is a way to do `simp` on `hs` and the goal simultaneously, and then it does `exact` for you with the simplified `hs`.",
                    "createdAt": "2023-11-06T18:26:48Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Seu4W",
                    "body": "With those changes, now you can assemble them pretty quickly:\r\n```suggestion\r\ntheorem chromaticNumber_pathGraph (n : ℕ) (h : 2 ≤ n) :\r\n    (pathGraph n).chromaticNumber = 2 := by\r\n  have hc := (pathGraph.bicoloring n).to_colorable\r\n  apply le_antisymm\r\n  · exact chromaticNumber_le_of_colorable hc\r\n  · simpa only [pathGraph_two_eq_top, chromaticNumber_top] using\r\n      hc.chromaticNumber_mono_of_embedding (pathGraph_two_embedding n h)\r\n```\r\nStyle comments: Instead of your `refine` line, `apply le_antisymm` is better since it creates two goals all at once, and it works for partial orders in general. Notice that instead of `Nonempty.intro` I used the `to_colorable` method, which is definitionally the same but syntactically produces a `Colorable` term. I'm not sure how much it matters these days, but we use `1 < n` instead of `n > 1` because the latter is the first only after unfolding -- at the least preferring `<` leads to more consistency.",
                    "createdAt": "2023-11-06T18:28:14Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5S8zPU",
                    "body": "Let's move these to right after `even_add_one`, which is the earliest they can go, unless there's some reason you placed them here.",
                    "createdAt": "2023-11-13T20:30:42Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg1OTA4OTg5",
              "login": "IvanRenison"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: add 2-coloring of `pathGraph` and prove its chromatic number is 2",
        "updatedAt": "2023-11-14T19:39:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8166",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6342b94254bb61586c3c3c9732fa86535e021a59"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "58e58d954882063e1d40ad2289658009509270a0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6352ba533193ec7e3a688ecc69d18ac1eff29df1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4e11e5c470346097502433c2e164ef681fb3abc5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "991f4d6b1fafdbc8d3c8b5bddc960a0a0bd06eb6"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c511RRJzwAAAAKHVVHs",
              "createdAt": "2023-11-03T20:51:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mRoQB",
              "createdAt": "2023-11-06T18:20:34Z",
              "body": "Thanks for contributing this proof of the chromatic number of the path graph!\r\n\r\nOne thing to be sure to do is wrap everything after the module docstring in `namespace SimpleGraph ... end SimpleGraph`. That way you don't need to put `SimpleGraph.` everywhere.\r\n\r\nI've also suggested changes to the organization of the proof. It's morally the same as your clique argument, but it goes through showing that there's an embedding of a two-vertex complete graph, which I believe is easier than working with cliques directly. My feeling is that cliques are better when you're in the clique-counting business.\r\n\r\n(Note: I edited the PR title and description.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c511RRJzwAAAAKIU0TV",
              "createdAt": "2023-11-06T18:43:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c511RRJzwAAAAKIU0Th",
              "createdAt": "2023-11-06T18:43:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8f9dd34ac49e3c2bb96a7c1fc0c7a54c38aeac68"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e24b9e16f91e4428c66ed2abf277433ecc6a603b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a28f4f31f6e69811ae01e3c49124a34ba65ae90f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f46d84fef73dda87705ee47f1fef58403c64d799"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "685a06a5d1a1c466fad5ee06dfad2937f08c30df"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f76e3600a677284abd85c21f6f179aa683966441"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c511RRJzwAAAAKI2qqR",
              "createdAt": "2023-11-07T12:14:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c511RRJzwAAAAKI2qqh",
              "createdAt": "2023-11-07T12:14:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c511RRJzwAAAAKMI3TX",
              "createdAt": "2023-11-13T12:21:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nAqGM",
              "createdAt": "2023-11-13T20:30:42Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "65484ed033c1407a11fdfeb2ebf94be09bb90de6"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c511RRJzwAAAAKNKZs_",
              "createdAt": "2023-11-14T18:21:39Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r7-29",
              "createdAt": "2023-11-14T18:25:17Z",
              "body": "Great, thanks! Looking forward to your future contributions.\r\n\r\nbors r+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c511RRJzwAAAAKNKkVh",
              "createdAt": "2023-11-14T18:25:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c511RRJzwAAAAKNKkX0",
              "createdAt": "2023-11-14T18:25:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r8tOv",
              "createdAt": "2023-11-14T19:39:08Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6868123480/job/18677943164)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6868123480/job/18677943369)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6868123480/job/18677943754)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c511RRJzwAAAAKNODL4",
              "createdAt": "2023-11-14T19:39:09Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c511RRJzwAAAAKNODUo",
              "createdAt": "2023-11-14T19:39:13Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
