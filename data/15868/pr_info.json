{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 317,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "grunweg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Fix mathlib for running the missingEnd linter everywhere. Prerequiste to #15845.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 134,
        "closed": true,
        "closedAt": "2024-08-16T14:45:14Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6Ire63",
              "body": "### PR summary [392c6c4c1d](https://github.com/leanprover-community/mathlib4/pull/15868/commits/392c6c4c1df752279462fa48a9d3ef15f2cae117)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-08-16T08:47:12Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Irxgs",
              "body": "üöÄ Pull request has been placed on the maintainer queue by adomani.",
              "createdAt": "2024-08-16T09:36:40Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Ir44l",
              "body": "Good find, thanks! I tweaked some changes of this PR, trying to more closely follow \"end namespaces how they were opened\".\r\nPrevious mathlib style is uneven, so changing this in a follow-up (if we care) seems appropriate.",
              "createdAt": "2024-08-16T09:57:03Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Is5WB",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "createdAt": "2024-08-16T13:02:05Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ItkBH",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10420972171/job/28862108745)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10420972171/job/28862109352)",
              "createdAt": "2024-08-16T14:45:13Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "1bc32e97fd1b7e42df6157d89cb35418acc81bdb",
                "additions": 382,
                "deletions": 70,
                "committedDate": "2024-08-16T08:45:12Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt8YKug",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417907567/job/28853013178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6nW-Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417269733/job/28851164921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt8YJkA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417907566/job/28853012880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6nXDg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417269734/job/28851164942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6lxng",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261578/job/28851138974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6l0Lw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261580/job/28851139631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6nX9Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417269732/job/28851165173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt8YJ1w",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417907567/job/28853012951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6l0Pg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261578/job/28851139646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6lyjQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261580/job/28851139213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6nXTQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417269732/job/28851165005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6lyew",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261578/job/28851139195"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6lzSA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261580/job/28851139400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6lzQw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261578/job/28851139395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6lxpQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261580/job/28851138981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6l1JA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261578/job/28851139876"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt8oukw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10417261580/job/28853284499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6n5ag",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28851173738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt6ok5A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15868&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "392c6c4c1df752279462fa48a9d3ef15f2cae117",
                "additions": 23,
                "deletions": 93,
                "committedDate": "2024-08-16T09:55:23Z",
                "author": {
                  "name": "Michael Rothgang",
                  "email": "rothgami@math.hu-berlin.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AMnA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123418/job/28853669020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AMkg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123403/job/28853669010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AIOg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853667898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AJ0w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853668307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9ANuA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123407/job/28853669304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AI8g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853668082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AIzQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853668045"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AMqQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123407/job/28853669033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AJ1A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853668308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AHAQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853667585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AHNQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853667637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AH2w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853667803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9AKkg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853668498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt-3HgA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28855617408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9Aspw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28853677223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGt9BwNg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15868&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHLin9AQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5125",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-16T08:46:29Z",
        "deletions": 75,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Group/Hom/CompTypeclasses.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/OrderDual.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/OrderDual.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Unbundled/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Array/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Int/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/GetD.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/MLList/IO.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/MLList/Split.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Nat/Find.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Option/Defs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Init/Data/Int/Order.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/Elab/Term.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/Exception.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/GoalsLocation.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/Json.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/Meta/KAbstractPositions.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Lean/PrettyPrinter/Delaborator.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Logic/Function/CompTypeclasses.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Abel.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/ApplyAt.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ApplyFun.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ApplyWith.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ArithMult.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Bound/Attribute.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Cases.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CasesM.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Coherence.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/Check.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Choose.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ClearExcept.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ClearExclamation.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Clear_.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Coe.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/CongrM.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Conv.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Core.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ExistsI.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Explode.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Explode/Datatypes.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Explode/Pretty.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ExtractGoal.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FailIfNoProgress.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FieldSimp.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Find.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Attr.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Core.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Decl.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Elab.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/FunctionData.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Mor.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/RefinedDiscrTree.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/StateList.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Theorems.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/ToBatteries.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/Types.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/GCongr/Core.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/GCongr/ForwardAttr.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/GeneralizeProofs.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Group.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Have.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/HaveI.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/HelpCmd.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ITauto.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/InferParam.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Inhabit.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/IntervalCases.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/IrreducibleDef.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Linarith/Oracle/SimplexAlgorithm/PositiveVector.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/LinearCombination.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Linter/HaveLetLinter.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/MkIffOfInductiveProp.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/ModCases.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Monotonicity/Attr.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Monotonicity/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/MoveAdd.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Nontriviality/Core.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/NormNum/Core.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/NormNum/Result.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/NthRewrite.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/PPWithUniv.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Peel.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Polyrith.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Positivity/Core.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/Propose.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/PushNeg.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Qify.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/Recall.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Recover.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Relation/Rfl.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Relation/Symm.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Relation/Trans.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Rename.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/RenameBVar.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Replace.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/RewriteSearch.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Tactic/Rify.lean",
              "additions": 1,
              "deletions": 5
            },
            {
              "path": "Mathlib/Tactic/Ring/Basic.lean",
              "additions": 1,
              "deletions": 3
            }
          ]
        },
        "headRefName": "MR-fix-missing-end",
        "headRefOid": "392c6c4c1df752279462fa48a9d3ef15f2cae117",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c54jeVf",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
              "color": "33DBEC",
              "name": "t-linter"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6FpzLp",
              "body": "Looks good to me, thanks!\r\n\r\nThere is some inconsistency with `end Z end Y` and `end Y.Z`.  However, this is minor and, if there is a clear style preference, it would likely have to be enforced by a linter.\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-08-16T09:36:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15868,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6FpzLp",
              "body": "Looks good to me, thanks!\r\n\r\nThere is some inconsistency with `end Z end Y` and `end Y.Z`.  However, this is minor and, if there is a clear style preference, it would likely have to be enforced by a linter.\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-08-16T09:36:28Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5mfxVT",
                    "body": "```suggestion\r\n\r\n```\r\nMaybe this is too many empty lines?",
                    "createdAt": "2024-08-16T09:34:50Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AMnA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123418/job/28853669020"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AMkg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123403/job/28853669010"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AIOg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853667898"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AJ0w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853668307"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9ANuA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123407/job/28853669304"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AI8g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853668082"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AIzQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853668045"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AMqQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418123407/job/28853669033"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AJ1A",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853668308"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AHAQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853667585"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AHNQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853667637"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AH2w",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28853667803"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9AKkg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122869/job/28853668498"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt-3HgA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10418122857/job/28855617408"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9Aspw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28853677223"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGt9BwNg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15868&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHLin9AQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5125",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore: add missing end",
        "updatedAt": "2024-08-16T14:45:18Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15868",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6TNlLNzwAAAAM8_Nij",
              "createdAt": "2024-08-16T08:46:36Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5NDY3NzQ1",
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Ire63",
              "createdAt": "2024-08-16T08:47:12Z",
              "body": "### PR summary [392c6c4c1d](https://github.com/leanprover-community/mathlib4/pull/15868/commits/392c6c4c1df752279462fa48a9d3ef15f2cae117)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TNlLNzwAAAAM8_V8e",
              "createdAt": "2024-08-16T08:49:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABk2TD1g",
                "name": "t-linter"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Uf1mh",
              "createdAt": "2024-08-16T08:52:54Z",
              "source": {
                "id": "PR_kwDOFcwZ1c54fAlk",
                "title": "[Merged by Bors] - chore: import enabled mathlib syntax linters in `Mathlib.Init`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15845"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6FpzLp",
              "createdAt": "2024-08-16T09:34:49Z",
              "body": "Looks good to me, thanks!\r\n\r\nThere is some inconsistency with `end Z end Y` and `end Y.Z`.  However, this is minor and, if there is a clear style preference, it would likely have to be enforced by a linter.\r\n\r\nmaintainer merge",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Irxgs",
              "createdAt": "2024-08-16T09:36:40Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by adomani.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TNlLNzwAAAAM9BQGD",
              "createdAt": "2024-08-16T09:36:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Ir44l",
              "createdAt": "2024-08-16T09:57:03Z",
              "body": "Good find, thanks! I tweaked some changes of this PR, trying to more closely follow \"end namespaces how they were opened\".\r\nPrevious mathlib style is uneven, so changing this in a follow-up (if we care) seems appropriate.",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Is5WB",
              "createdAt": "2024-08-16T13:02:05Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TNlLNzwAAAAM9I-Dv",
              "createdAt": "2024-08-16T13:02:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ItkBH",
              "createdAt": "2024-08-16T14:45:13Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10420972171/job/28862108745)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10420972171/job/28862109352)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6TNlLNzwAAAAM9Ne9J",
              "createdAt": "2024-08-16T14:45:14Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6TNlLNzwAAAAM9NfIN",
              "createdAt": "2024-08-16T14:45:18Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
