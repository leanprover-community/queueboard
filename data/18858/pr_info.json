{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 200,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "xroblot"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Let `F : Œ± ‚Üí ‚Ñï` be a function. We study the `LSeries` with coefficients `n ‚Ü¶ Nat.card {x | F x = n}` under the assumption that `Nat.card {x | F x ‚â§ n} / n` tends to `l` with `0 < l`. In this PR, we prove that this `LSeries` is summable for `s` such that `1 < Re s`.\r\n\r\nIn a later PR #18857, we prove that this `LSeries` has abscisse of convergence `1` and has residue `l` at `s = 1`.\r\n\r\nThis PR is part of the proof of the Analytic Class Number Formula.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2025-01-08T14:40:52Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6TGSm8",
              "body": "### PR summary [ac1bca1cf5](https://github.com/leanprover-community/mathlib4/pull/18858/commits/ac1bca1cf501f37cbf9a118587b33e79f289fef7)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.NumberTheory.LSeries.Card`|1691|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.NumberTheory.LSeriesSummable_card_eq`\n`+ card_eq_div_pow_eq_tsum`\n`+ card_eq_succ_add_card_le`\n`+ card_le_not_bounded`\n`+ card_val_eq_succ`\n`+ compl_mem_cofinite`\n`+ eventually_lt_one_div_val_rpow_lt`\n`+ finite_card_eq`\n`+ finite_card_le`\n`+ finite_val_eq`\n`+ mono_card_le`\n`+ mono_val`\n`+ summable_one_div_val_rpow`\n`+ tendsto_atTop_div_val`\n`+ tendsto_atTop_val`\n`+ val`\n`+ val_eq_succ_iff`\n`+ val_not_bounded`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-11-11T11:05:09Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6THAam",
              "body": "In this PR, the type `Œ±` and function `F : Œ± ‚Üí ‚Ñï` play pretty much no role; the only information that's used is the function `Nat.card {x | F x = ¬∑}`\r\n\r\nMight it not be better to formulate the lemmas for an arbitrary function `f : ‚Ñï ‚Üí ‚Ñï`, or even `‚Ñï ‚Üí ‚Ñù`, satisfying `Tendsto (fun n ‚Ü¶ (‚àë i ‚àà range n, f i) / n) atTop (ùìù l))`? ",
              "createdAt": "2024-11-11T12:41:00Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6THiQ7",
              "body": "> In this PR, the type `Œ±` and function `F : Œ± ‚Üí ‚Ñï` play pretty much no role; the only information that's used is the function `Nat.card {x | F x = ¬∑}`\r\n> \r\n> Might it not be better to formulate the lemmas for an arbitrary function `f : ‚Ñï ‚Üí ‚Ñï`, or even `‚Ñï ‚Üí ‚Ñù`, satisfying `Tendsto (fun n ‚Ü¶ (‚àë i ‚àà range n, f i) / n) atTop (ùìù l))`?\r\n\r\nThe first version was for an arbitrary function `f : ‚Ñï ‚Üí ‚Ñï` but that made it a bit harder to apply for the proof of the ACNF so I changed to the current version. I can change it back though if you think it is more natural. I don't think the proof would work with a function `‚Ñï ‚Üí ‚Ñù`...",
              "createdAt": "2024-11-11T13:49:33Z",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6THkEy",
              "body": "But, maybe it does, I'll have to think a bit more about it.",
              "createdAt": "2024-11-11T13:53:06Z",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIGfW",
              "body": "@loefflerd Yes, it is possible to prove a result for `‚Ñï ‚Üí ‚Ñù` but in that case, we don't get L-series. But that's probably okay. So, I'll put the PRs in WIP while I see what can be done. ",
              "createdAt": "2024-11-11T14:56:42Z",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIH9R",
              "body": "I'm confused. What do you mean \"we don't get L-series\"? I'm saying that if `f : ‚Ñï ‚Üí ‚Ñù` takes non-negative real values and `(‚àë i ‚àà Finset.range n, f i) / n)` tends to a limit, then `LSeriesSummable (‚Üóf) s` holds for `1 < re s`.",
              "createdAt": "2024-11-11T14:59:26Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIKTc",
              "body": "> I'm confused. What do you mean \"we don't get L-series\"? I'm saying that if `f : ‚Ñï ‚Üí ‚Ñù` takes non-negative real values and `(‚àë i ‚àà Finset.range n, f i) / n)` tends to a limit, then `LSeriesSummable (‚Üóf) s` holds for `1 < re s`.\r\n\r\nNo, no, what I am saying is that the proof gives a way to compute the residue of the series `‚àë' n, 1 / (f n) ^ s` but that's not a L-series if `f` takes values in `‚Ñù` ",
              "createdAt": "2024-11-11T15:03:47Z",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIOmj",
              "body": "Then I am afraid we are misunderstanding each other. My `f` is not a generalisation of your `F : Œ± ‚Üí ‚Ñï`; it is a generalisation of the function `‚Ñï ‚Üí ‚Ñï` defined by `n ‚Ü¶ Nat.card {x | F x = n}`. \r\n\r\nThis function `f := fun n ‚Ü¶ Nat.card {x | F x = n}` has the property that `(‚àë i ‚àà Finset.range n, f i) / n` tends to the limit `l`; that is an equivalent statement of your hypothesis `hF`. What I am saying is that it should be possible to show that for _any_ function `f : ‚Ñï ‚Üí ‚Ñù‚â•0` such that `‚àë i ‚àà Finset.range n, f i = O(n)`, we have `LSeriesSummable f s` for all `1 < s.re`. This is then a generalisation of your lemma `NumberTheory.LSeriesSummable_card_eq`. But it has nothing to do with the function `‚àë' n, 1 / (f n) ^ s`.",
              "createdAt": "2024-11-11T15:11:58Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIS07",
              "body": "> Then I am afraid we are misunderstanding each other. My `f` is not a generalisation of your `F : Œ± ‚Üí ‚Ñï`; it is a generalisation of the function `‚Ñï ‚Üí ‚Ñï` defined by `n ‚Ü¶ Nat.card {x | F x = n}`.\r\n> \r\n> This function `f := fun n ‚Ü¶ Nat.card {x | F x = n}` has the property that `(‚àë i ‚àà Finset.range n, f i) / n` tends to the limit `l`; that is an equivalent statement of your hypothesis `hF`. What I am saying is that it should be possible to show that for _any_ function `f : ‚Ñï ‚Üí ‚Ñù‚â•0` such that `‚àë i ‚àà Finset.range n, f i = O(n)`, we have `LSeriesSummable f s` for all `1 < s.re`. This is then a generalisation of your lemma `NumberTheory.LSeriesSummable_card_eq`. But it has nothing to do with the function `‚àë' n, 1 / (f n) ^ s`.\r\n\r\nRight, I am sorry. I think I have not been very clear. I totally agree that you are correct and that the result of this PR can be generalized to the case `f : ‚Ñï ‚Üí ‚Ñù` and probably should be if we go ahead with this PR. But, what I really want are the results of the next PR #18857 where what is computed is the residue of `‚àë' n, 1 / (f n) ^ s` which is not a L-series if `f : ‚Ñï ‚Üí ‚Ñù`. Still the method in #18857 works in this case and I should be able to use the more general result for the proof of the ACNF, so I am thinking about ditching these two PRs and write instead the general case. ",
              "createdAt": "2024-11-11T15:19:50Z",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIYE5",
              "body": "We're still talking (writing?) past each other. At no point in this discussion have I suggested considering series of the form `‚àë' x, 1 / (F x) ^ s` with `F` not integer valued.\r\n\r\nRather, I am saying that the main result of this PR, whose conclusion has the form `LSeriesSummable (‚Üó(Nat.card {x | F x = ¬∑})) s`, is a special case of a result in which the function `‚Ñï ‚Üí ‚Ñï` defined by `(Nat.card {x | F x = ¬∑})` is replaced by a more general function `‚Ñï ‚Üí ‚Ñï` or even `‚Ñï ‚Üí ‚Ñù‚â•0` having a well-defined \"average\" value.",
              "createdAt": "2024-11-11T15:29:27Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIcFI",
              "body": "> We're still talking (writing?) past each other. At no point in this discussion have I suggested considering series of the form `‚àë' x, 1 / (F x) ^ s` with `F` not integer valued.\r\n> \r\n> Rather, I am saying that the main result of this PR, whose conclusion has the form `LSeriesSummable (‚Üó(Nat.card {x | F x = ¬∑})) s`, is a special case of a result in which the function `‚Ñï ‚Üí ‚Ñï` defined by `(Nat.card {x | F x = ¬∑})` is replaced by a more general function `‚Ñï ‚Üí ‚Ñï` or even `‚Ñï ‚Üí ‚Ñù‚â•0` having a well-defined \"average\" value.\r\n\r\nSure, I agree. But, your remark made me think about another way to prove the result that I need for ACNF so I don't think I'll need the result of this PR and I am not convinced its result is valuable enough to be added without any specific need for it.\r\n\r\nStill, I may be wrong and the other way I want to try may not work so I think it is better to put this PR in WIP in the meantime. If the other way works, I'll close the PR and if not, I'll modify this PR to the general case. ",
              "createdAt": "2024-11-11T15:36:57Z",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIhFW",
              "body": "OK, that sounds very reasonable! \r\n\r\nIt might be interesting to return to this sort of thing later ‚Äì showing that if a function on `‚Ñï` has an average value in the natural sense, then the \"Dirichlet average\", defined as the residue of its L-series at s = 1, exists and agrees with the natural average ‚Äì¬†but this can certainly wait if it isn't needed for ACNF.",
              "createdAt": "2024-11-11T15:46:25Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TIrYU",
              "body": "> OK, that sounds very reasonable!\r\n> \r\n> It might be interesting to return to this sort of thing later ‚Äì showing that if a function on `‚Ñï` has an average value in the natural sense, then the \"Dirichlet average\", defined as the residue of its L-series at s = 1, exists and agrees with the natural average ‚Äì¬†but this can certainly wait if it isn't needed for ACNF.\r\n\r\nWell, things are a bit fuzzy in my head but it's possible that the refactor I have in mind eventually ends up proving that. I'll keep you posted. ",
              "createdAt": "2024-11-11T16:06:12Z",
              "author": {
                "login": "xroblot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "3d79e559658bffb0dd3907248dccf025312341d1",
                "additions": 201,
                "deletions": 0,
                "committedDate": "2024-11-11T11:01:45Z",
                "author": {
                  "name": "Xavier Roblot",
                  "email": "roblot@math.univ-lyon1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxzByQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777272493/job/32801341897"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxzBTg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777272489/job/32801341774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxzBVw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777272484/job/32801341783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxriWw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230033/job/32801219163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxrgIQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230028/job/32801218593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxzCnQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777272481/job/32801342109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxrjwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230033/job/32801219522"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxri8g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230028/job/32801219314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxzBRA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777272481/job/32801341764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxrhow",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230028/job/32801218979"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxrgRQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230033/job/32801218629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox9GAw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230028/job/32801506819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxrlHQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777230033/job/32801219869"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoxziAA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32801350144"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox0iUQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18858&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f0fbb18f76fc8396703180e82718892f9d30d85b",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-11-11T11:06:54Z",
                "author": {
                  "name": "Xavier Roblot",
                  "email": "roblot@math.univ-lyon1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7eQA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777318496/job/32801480256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7eIA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777318461/job/32801480224"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7WLg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317483/job/32801478190"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7WMQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317484/job/32801478193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7edA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777318475/job/32801480308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7Xtw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317483/job/32801478583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7Xow",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317484/job/32801478563"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7fxQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777318475/job/32801480645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7ZGw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317484/job/32801478939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7ZDQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317483/job/32801478925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox7aiA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317483/job/32801479304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyrZ0Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777317484/job/32802265553"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox78dA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32801487988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHox8-3w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18858&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ab618c6870a79bbffee14edae4287f1b7667af3d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-11-11T11:26:46Z",
                "author": {
                  "name": "Xavier Roblot",
                  "email": "roblot@math.univ-lyon1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyw1HQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777613097/job/32802354461"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyw0nw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777613098/job/32802354335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoywvng",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612693/job/32802353054"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoywvqQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612694/job/32802353065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyw1uQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777613086/job/32802354617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoywx4A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612693/job/32802353632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoywxwQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612694/job/32802353601"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyw0ag",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777613086/job/32802354282"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyww1A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612694/job/32802353364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyww2A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612693/job/32802353368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoywzFw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612693/job/32802353943"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozFsfQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777612694/job/32802696317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyxRmg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32802361754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoyyYPw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18858&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "53b210deebd0fb7386ee2ff70433e12b8dde8d1d",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2024-11-11T11:36:50Z",
                "author": {
                  "name": "Xavier Roblot",
                  "email": "roblot@math.univ-lyon1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM6qA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777772498/job/32802814632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM61g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777772506/job/32802814678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM1nQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771971/job/32802813341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM1sQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771968/job/32802813361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM7mg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777772499/job/32802814874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM4Dg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771971/job/32802813966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM2sA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771968/job/32802813616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM6uA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777772499/job/32802814648"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM2mw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771971/job/32802813595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM37Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771968/job/32802813933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozM5GQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771971/job/32802814233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozhK1A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11777771968/job/32803146452"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozNYww",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32802822339"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHozOYjQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18858&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ac1bca1cf501f37cbf9a118587b33e79f289fef7",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-11-11T11:54:54Z",
                "author": {
                  "name": "Xavier Roblot",
                  "email": "roblot@math.univ-lyon1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIORowQw",
                        "name": "Cross off linked issues",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12672835928/job/35317755971"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6wTA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015767/job/32803565644"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6wog",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015776/job/32803565730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6qIA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6rRw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803564359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6weQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015766/job/32803565689"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6rRQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6saQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803564649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6xcA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015766/job/32803565936"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6skA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6qRA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803564100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz6toQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHo0OaMw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803887667"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz7IVQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32803571797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHoz7_og",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18858&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-11T11:04:20Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/LSeries/Card.lean",
              "additions": 196,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Filter/Cofinite.lean",
              "additions": 3,
              "deletions": 0
            }
          ]
        },
        "headRefName": "xfr-lseries_card_part_1",
        "headRefOid": "ac1bca1cf501f37cbf9a118587b33e79f289fef7",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Bfr2o",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
              "color": "33DBEC",
              "name": "t-number-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 18858,
        "potentialMergeCommit": {
          "oid": "b4c0a6c9f40e6d7d7d29b71595097ccaf55ea53c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMyNDkwNTMy",
                "login": "riccardobrasca"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM0Mzk2ODg=",
                "login": "loefflerd"
              }
            }
          ]
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ2MjAwMDcy",
              "login": "xroblot"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIORowQw",
                "name": "Cross off linked issues",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12672835928/job/35317755971"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6wTA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015767/job/32803565644"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6wog",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015776/job/32803565730"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6qIA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564064"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6rRw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803564359"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6weQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015766/job/32803565689"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6rRQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564357"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6saQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803564649"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6xcA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015766/job/32803565936"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6skA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564688"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6qRA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803564100"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz6toQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015172/job/32803564961"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHo0OaMw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11778015191/job/32803887667"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz7IVQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32803571797"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHoz7_og",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18858&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(NumberTheory/LSeries): LSeries of a counting function (part I)",
        "updatedAt": "2025-01-08T14:40:52Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/18858",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6d5JF0zwAAAAOM3sQi",
              "createdAt": "2024-11-11T11:04:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
                "name": "t-number-theory"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5kBgQ4",
              "createdAt": "2024-11-11T11:05:07Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Bfi-i",
                "title": "feat(NumberTheory/LSeries): LSeries of a counting function (part II)",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18857"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TGSm8",
              "createdAt": "2024-11-11T11:05:09Z",
              "body": "### PR summary [ac1bca1cf5](https://github.com/leanprover-community/mathlib4/pull/18858/commits/ac1bca1cf501f37cbf9a118587b33e79f289fef7)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.NumberTheory.LSeries.Card`|1691|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.NumberTheory.LSeriesSummable_card_eq`\n`+ card_eq_div_pow_eq_tsum`\n`+ card_eq_succ_add_card_le`\n`+ card_le_not_bounded`\n`+ card_val_eq_succ`\n`+ compl_mem_cofinite`\n`+ eventually_lt_one_div_val_rpow_lt`\n`+ finite_card_eq`\n`+ finite_card_le`\n`+ finite_val_eq`\n`+ mono_card_le`\n`+ mono_val`\n`+ summable_one_div_val_rpow`\n`+ tendsto_atTop_div_val`\n`+ tendsto_atTop_val`\n`+ val`\n`+ val_eq_succ_iff`\n`+ val_not_bounded`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6d5JF0zwAAAAOM5ydP",
              "createdAt": "2024-11-11T11:46:55Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMyNDkwNTMy",
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6d5JF0zwAAAAOM6YrG",
              "createdAt": "2024-11-11T11:59:16Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM0Mzk2ODg=",
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6THAam",
              "createdAt": "2024-11-11T12:41:00Z",
              "body": "In this PR, the type `Œ±` and function `F : Œ± ‚Üí ‚Ñï` play pretty much no role; the only information that's used is the function `Nat.card {x | F x = ¬∑}`\r\n\r\nMight it not be better to formulate the lemmas for an arbitrary function `f : ‚Ñï ‚Üí ‚Ñï`, or even `‚Ñï ‚Üí ‚Ñù`, satisfying `Tendsto (fun n ‚Ü¶ (‚àë i ‚àà range n, f i) / n) atTop (ùìù l))`? ",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6THiQ7",
              "createdAt": "2024-11-11T13:49:33Z",
              "body": "> In this PR, the type `Œ±` and function `F : Œ± ‚Üí ‚Ñï` play pretty much no role; the only information that's used is the function `Nat.card {x | F x = ¬∑}`\r\n> \r\n> Might it not be better to formulate the lemmas for an arbitrary function `f : ‚Ñï ‚Üí ‚Ñï`, or even `‚Ñï ‚Üí ‚Ñù`, satisfying `Tendsto (fun n ‚Ü¶ (‚àë i ‚àà range n, f i) / n) atTop (ùìù l))`?\r\n\r\nThe first version was for an arbitrary function `f : ‚Ñï ‚Üí ‚Ñï` but that made it a bit harder to apply for the proof of the ACNF so I changed to the current version. I can change it back though if you think it is more natural. I don't think the proof would work with a function `‚Ñï ‚Üí ‚Ñù`...",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6THkEy",
              "createdAt": "2024-11-11T13:53:06Z",
              "body": "But, maybe it does, I'll have to think a bit more about it.",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIGfW",
              "createdAt": "2024-11-11T14:56:42Z",
              "body": "@loefflerd Yes, it is possible to prove a result for `‚Ñï ‚Üí ‚Ñù` but in that case, we don't get L-series. But that's probably okay. So, I'll put the PRs in WIP while I see what can be done. ",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6d5JF0zwAAAAONDzQ9",
              "createdAt": "2024-11-11T14:56:51Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIH9R",
              "createdAt": "2024-11-11T14:59:26Z",
              "body": "I'm confused. What do you mean \"we don't get L-series\"? I'm saying that if `f : ‚Ñï ‚Üí ‚Ñù` takes non-negative real values and `(‚àë i ‚àà Finset.range n, f i) / n)` tends to a limit, then `LSeriesSummable (‚Üóf) s` holds for `1 < re s`.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIKTc",
              "createdAt": "2024-11-11T15:03:47Z",
              "body": "> I'm confused. What do you mean \"we don't get L-series\"? I'm saying that if `f : ‚Ñï ‚Üí ‚Ñù` takes non-negative real values and `(‚àë i ‚àà Finset.range n, f i) / n)` tends to a limit, then `LSeriesSummable (‚Üóf) s` holds for `1 < re s`.\r\n\r\nNo, no, what I am saying is that the proof gives a way to compute the residue of the series `‚àë' n, 1 / (f n) ^ s` but that's not a L-series if `f` takes values in `‚Ñù` ",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIOmj",
              "createdAt": "2024-11-11T15:11:58Z",
              "body": "Then I am afraid we are misunderstanding each other. My `f` is not a generalisation of your `F : Œ± ‚Üí ‚Ñï`; it is a generalisation of the function `‚Ñï ‚Üí ‚Ñï` defined by `n ‚Ü¶ Nat.card {x | F x = n}`. \r\n\r\nThis function `f := fun n ‚Ü¶ Nat.card {x | F x = n}` has the property that `(‚àë i ‚àà Finset.range n, f i) / n` tends to the limit `l`; that is an equivalent statement of your hypothesis `hF`. What I am saying is that it should be possible to show that for _any_ function `f : ‚Ñï ‚Üí ‚Ñù‚â•0` such that `‚àë i ‚àà Finset.range n, f i = O(n)`, we have `LSeriesSummable f s` for all `1 < s.re`. This is then a generalisation of your lemma `NumberTheory.LSeriesSummable_card_eq`. But it has nothing to do with the function `‚àë' n, 1 / (f n) ^ s`.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIS07",
              "createdAt": "2024-11-11T15:19:50Z",
              "body": "> Then I am afraid we are misunderstanding each other. My `f` is not a generalisation of your `F : Œ± ‚Üí ‚Ñï`; it is a generalisation of the function `‚Ñï ‚Üí ‚Ñï` defined by `n ‚Ü¶ Nat.card {x | F x = n}`.\r\n> \r\n> This function `f := fun n ‚Ü¶ Nat.card {x | F x = n}` has the property that `(‚àë i ‚àà Finset.range n, f i) / n` tends to the limit `l`; that is an equivalent statement of your hypothesis `hF`. What I am saying is that it should be possible to show that for _any_ function `f : ‚Ñï ‚Üí ‚Ñù‚â•0` such that `‚àë i ‚àà Finset.range n, f i = O(n)`, we have `LSeriesSummable f s` for all `1 < s.re`. This is then a generalisation of your lemma `NumberTheory.LSeriesSummable_card_eq`. But it has nothing to do with the function `‚àë' n, 1 / (f n) ^ s`.\r\n\r\nRight, I am sorry. I think I have not been very clear. I totally agree that you are correct and that the result of this PR can be generalized to the case `f : ‚Ñï ‚Üí ‚Ñù` and probably should be if we go ahead with this PR. But, what I really want are the results of the next PR #18857 where what is computed is the residue of `‚àë' n, 1 / (f n) ^ s` which is not a L-series if `f : ‚Ñï ‚Üí ‚Ñù`. Still the method in #18857 works in this case and I should be able to use the more general result for the proof of the ACNF, so I am thinking about ditching these two PRs and write instead the general case. ",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIYE5",
              "createdAt": "2024-11-11T15:29:27Z",
              "body": "We're still talking (writing?) past each other. At no point in this discussion have I suggested considering series of the form `‚àë' x, 1 / (F x) ^ s` with `F` not integer valued.\r\n\r\nRather, I am saying that the main result of this PR, whose conclusion has the form `LSeriesSummable (‚Üó(Nat.card {x | F x = ¬∑})) s`, is a special case of a result in which the function `‚Ñï ‚Üí ‚Ñï` defined by `(Nat.card {x | F x = ¬∑})` is replaced by a more general function `‚Ñï ‚Üí ‚Ñï` or even `‚Ñï ‚Üí ‚Ñù‚â•0` having a well-defined \"average\" value.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIcFI",
              "createdAt": "2024-11-11T15:36:57Z",
              "body": "> We're still talking (writing?) past each other. At no point in this discussion have I suggested considering series of the form `‚àë' x, 1 / (F x) ^ s` with `F` not integer valued.\r\n> \r\n> Rather, I am saying that the main result of this PR, whose conclusion has the form `LSeriesSummable (‚Üó(Nat.card {x | F x = ¬∑})) s`, is a special case of a result in which the function `‚Ñï ‚Üí ‚Ñï` defined by `(Nat.card {x | F x = ¬∑})` is replaced by a more general function `‚Ñï ‚Üí ‚Ñï` or even `‚Ñï ‚Üí ‚Ñù‚â•0` having a well-defined \"average\" value.\r\n\r\nSure, I agree. But, your remark made me think about another way to prove the result that I need for ACNF so I don't think I'll need the result of this PR and I am not convinced its result is valuable enough to be added without any specific need for it.\r\n\r\nStill, I may be wrong and the other way I want to try may not work so I think it is better to put this PR in WIP in the meantime. If the other way works, I'll close the PR and if not, I'll modify this PR to the general case. ",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIhFW",
              "createdAt": "2024-11-11T15:46:25Z",
              "body": "OK, that sounds very reasonable! \r\n\r\nIt might be interesting to return to this sort of thing later ‚Äì showing that if a function on `‚Ñï` has an average value in the natural sense, then the \"Dirichlet average\", defined as the residue of its L-series at s = 1, exists and agrees with the natural average ‚Äì¬†but this can certainly wait if it isn't needed for ACNF.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TIrYU",
              "createdAt": "2024-11-11T16:06:12Z",
              "body": "> OK, that sounds very reasonable!\r\n> \r\n> It might be interesting to return to this sort of thing later ‚Äì showing that if a function on `‚Ñï` has an average value in the natural sense, then the \"Dirichlet average\", defined as the residue of its L-series at s = 1, exists and agrees with the natural average ‚Äì¬†but this can certainly wait if it isn't needed for ACNF.\r\n\r\nWell, things are a bit fuzzy in my head but it's possible that the refactor I have in mind eventually ends up proving that. I'll keep you posted. ",
              "author": {
                "login": "xroblot"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6d5JF0zwAAAAOxC3ve",
              "createdAt": "2025-01-08T14:40:52Z"
            }
          ]
        }
      }
    }
  }
}
