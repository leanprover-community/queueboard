{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 92,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adamtopaz"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Instead it is now the opposite -- a structure with a single field.\r\n\r\n[zulip discussion](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Groupoid.2EtoCategory/near/400820106)\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": true,
        "closedAt": "2023-11-08T19:50:43Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5rT_VL",
              "body": "I noticed this a while ago and have [another design](https://github.com/leanprover-community/mathlib4/pull/7886/files#diff-2729c9e3f2b1add9310a9490643d4afb6edd64d8f99902e32ae4cff562c74fe4R246-R251) to fix the problem without changing FundamentalGroupoid to a one-field structure, but I haven't fixed all errors. The ideas is that Lean can't quite identify the coeSort of `{ α := FundamentalGroupoid X } : Grpd` with `FundamentalGroupoid X` reducibly, and the former is used a lot, so we may just define `FundamentalGroupoid X` to be `{ α := X, str := ... } : Grpd` and Lean won't confuse it with `X` itself.\r\n\r\nDid you find this because you want to do something with fundamental groupoids, or by `import Mathlib`? I was doing something towards van Kampen and want to define a [functor](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/n.20composable.20morphisms/near/399407412) from the unit interval (with the category structure from its order) to a fundamental groupoid but noticed that the unit interval actually got its fundamental groupoid structure too.",
              "createdAt": "2023-11-07T23:23:46Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ra17B",
              "body": "bors d=@alreadydone",
              "createdAt": "2023-11-08T16:05:18Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ra18C",
              "body": ":v: alreadydone can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-08T16:05:21Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rbVIz",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6801603982/job/18492836971)",
              "createdAt": "2023-11-08T17:18:07Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rcLpd",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964335)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495963841)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964107)",
              "createdAt": "2023-11-08T19:50:42Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "12099b33b0b313357bc1ea665200e892e0cb5ac4",
                "additions": 50,
                "deletions": 34,
                "committedDate": "2023-11-07T22:25:24Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9c51dffa9203e8ff947a81c3fcff623dc5cc4b79",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-07T22:27:36Z",
                "author": {
                  "name": "Adam Topaz",
                  "email": "adamtopaz@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "164b50398f47f7aa58cfed1a543498552ca9f71a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-07T22:27:45Z",
                "author": {
                  "name": "Adam Topaz",
                  "email": "adamtopaz@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e94b453f0f538d94fbfcc3dc108f8bb9398dd5aa",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-11-07T22:29:20Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ec7a716c5c45541a561e5cf9fe3ca9aeb6d4d75b",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-07T22:29:43Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d839dff72259d2b7d938f60a6a3247310297a3d0",
                "additions": 44,
                "deletions": 3,
                "committedDate": "2023-11-08T03:17:43Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0879d4b00aa3dd514333772693f40f932df8ac04",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-11-08T03:19:48Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9f2d62c673d6ea2f2444120c8656b92c53352f14",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2023-11-08T13:12:06Z",
                "author": {
                  "name": "adamtopaz",
                  "email": "github@adamtopaz.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-07T22:26:42Z",
        "deletions": 37,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean",
              "additions": 63,
              "deletions": 18
            },
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/FundamentalGroup.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean",
              "additions": 12,
              "deletions": 7
            },
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/PUnit.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean",
              "additions": 4,
              "deletions": 1
            }
          ]
        },
        "headRefName": "AT-fundamental-groupoid-fix",
        "headRefOid": "9f2d62c673d6ea2f2444120c8656b92c53352f14",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5e3AdI",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mgMUg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T08:54:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mdG-c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-11-07T22:28:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mkgct",
              "body": "Thanks! This approach seems to cause the least breakage, as all fixes are straightforward, and I think it will be good enough for my purpose.\r\n\r\nbors r+",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-08T16:57:25Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8257,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5mdGsJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-11-07T22:27:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mdG-c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-11-07T22:28:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mdI5V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-07T22:33:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mdJMo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-07T22:33:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mdJXO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-07T22:34:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mdJZO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-11-07T22:34:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mecTM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2023-11-08T03:21:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mgMUg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-08T08:54:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mgq3o",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-08T09:49:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5mkgct",
              "body": "Thanks! This approach seems to cause the least breakage, as all fixes are straightforward, and I think it will be good enough for my purpose.\r\n\r\nbors r+",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-11-08T16:57:25Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl5kl",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    FundamentalGroupoid.mk x₀ ⟶ FundamentalGroupoid.mk x₁ := p\n```\n",
                    "createdAt": "2023-11-07T22:27:09Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl5km",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    · intros; apply FundamentalGroupoid.ext; apply Prod.ext <;> simp <;> rfl\n```\n",
                    "createdAt": "2023-11-07T22:27:09Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl5wG",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n    · intros; apply FundamentalGroupoid.ext; apply Prod.ext <;> simp <;> rfl\n```\n",
                    "createdAt": "2023-11-07T22:28:10Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl7h6",
                    "body": "Is there a missing lemma here? Maybe `Nonempty (FundamentalGroupoid X) \\iff Nonempty X` (and similarly for `Subsingleton` and `Nontrivial`)",
                    "createdAt": "2023-11-07T22:33:01Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl70I",
                    "body": "(the trick is to build the equiv and then all these results are there by dot notation)",
                    "createdAt": "2023-11-07T22:34:29Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl71V",
                    "body": "Probably. I didn't think too much when I made these changes :) I'll fix this soon.",
                    "createdAt": "2023-11-07T22:34:36Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sm2Ae",
                    "body": "I added `equiv` and some related lemmas and instances. I don't want this PR to expand too far beyond the original fix, so I would prefer to leave anything further which is not directly related to a future PR.",
                    "createdAt": "2023-11-08T03:21:19Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Sl7su",
                    "body": "I suspect the linter will ask for this anyway, but; can you add a docstring to `as`, preferably one that makes clear the intended mnemonic?",
                    "createdAt": "2023-11-07T22:33:51Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5SoA3t",
                    "body": "Should this be deleted? Or do we need a TODO here?",
                    "createdAt": "2023-11-08T08:54:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5SoUGK",
                    "body": "Yeah I think it should be. The fundamental groupoid shouldn't get a topological structure, just like the topological space shouldn't get a category structure. Previously they got mixed up due to `reducible`.",
                    "createdAt": "2023-11-08T09:49:36Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU1Nzc2ODc=",
              "login": "adamtopaz"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix: Fix `FundamentalGroupoid` being reducible.",
        "updatedAt": "2023-11-08T19:50:49Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8257",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "12099b33b0b313357bc1ea665200e892e0cb5ac4"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mdGsJ",
              "createdAt": "2023-11-07T22:27:09Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9c51dffa9203e8ff947a81c3fcff623dc5cc4b79"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "164b50398f47f7aa58cfed1a543498552ca9f71a"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mdG-c",
              "createdAt": "2023-11-07T22:28:10Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e94b453f0f538d94fbfcc3dc108f8bb9398dd5aa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ec7a716c5c45541a561e5cf9fe3ca9aeb6d4d75b"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mdI5V",
              "createdAt": "2023-11-07T22:33:01Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mdJMo",
              "createdAt": "2023-11-07T22:33:51Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rT_VL",
              "createdAt": "2023-11-07T23:23:46Z",
              "body": "I noticed this a while ago and have [another design](https://github.com/leanprover-community/mathlib4/pull/7886/files#diff-2729c9e3f2b1add9310a9490643d4afb6edd64d8f99902e32ae4cff562c74fe4R246-R251) to fix the problem without changing FundamentalGroupoid to a one-field structure, but I haven't fixed all errors. The ideas is that Lean can't quite identify the coeSort of `{ α := FundamentalGroupoid X } : Grpd` with `FundamentalGroupoid X` reducibly, and the former is used a lot, so we may just define `FundamentalGroupoid X` to be `{ α := X, str := ... } : Grpd` and Lean won't confuse it with `X` itself.\r\n\r\nDid you find this because you want to do something with fundamental groupoids, or by `import Mathlib`? I was doing something towards van Kampen and want to define a [functor](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/n.20composable.20morphisms/near/399407412) from the unit interval (with the category structure from its order) to a fundamental groupoid but noticed that the unit interval actually got its fundamental groupoid structure too.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d839dff72259d2b7d938f60a6a3247310297a3d0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0879d4b00aa3dd514333772693f40f932df8ac04"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mgMUg",
              "createdAt": "2023-11-08T08:54:09Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52KB_RzwAAAAKJs9nx",
              "createdAt": "2023-11-08T12:37:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9f2d62c673d6ea2f2444120c8656b92c53352f14"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ra17B",
              "createdAt": "2023-11-08T16:05:18Z",
              "body": "bors d=@alreadydone",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ra18C",
              "createdAt": "2023-11-08T16:05:21Z",
              "body": ":v: alreadydone can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52KB_RzwAAAAKJ3Sgv",
              "createdAt": "2023-11-08T16:05:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52KB_RzwAAAAKJ3SkT",
              "createdAt": "2023-11-08T16:05:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5mkgct",
              "createdAt": "2023-11-08T16:57:25Z",
              "body": "Thanks! This approach seems to cause the least breakage, as all fixes are straightforward, and I think it will be good enough for my purpose.\r\n\r\nbors r+",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rbVIz",
              "createdAt": "2023-11-08T17:18:07Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6801603982/job/18492836971)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rcLpd",
              "createdAt": "2023-11-08T19:50:42Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964335)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495963841)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6802581740/job/18495964107)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52KB_RzwAAAAKJ_-_W",
              "createdAt": "2023-11-08T19:50:43Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52KB_RzwAAAAKJ__Pf",
              "createdAt": "2023-11-08T19:50:49Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Qh20q",
              "createdAt": "2024-01-27T22:51:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5dmBN3",
                "title": "refactor: extract induced functor between FundamentalGroupoids",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7886"
              }
            }
          ]
        }
      }
    }
  }
}
