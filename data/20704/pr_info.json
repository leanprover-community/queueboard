{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 633,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "winstonyin"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I formalise the existence theorem for local flows of time-dependent vector fields (`IsPicardLindelof.exists_forall_mem_closedBall_eq_hasDerivWithinAt`). Currently, if we wish to show the existence of a family of integral curves indexed by their initial conditions, it is necessary to prove the hypotheses of the vector field (Lipschitz continuity within a closed ball, etc.), centred around each of these initial conditions. I have refactored the current proof of the Picard-Lindel√∂f theorem to allow the initial point to be different from the point about which the hypotheses on the vector field are stated. This way, integral curves and flows are treated on equal footing.\r\n\r\nCredits going to the original author @urkud, I have completely rewritten the file to accommodate different design choices. Many of the proof steps are nevertheless inspired by Yury's formalisation.\r\n* The `PicardLindelof` data structure is removed entirely. It merely bundles the non-Prop arguments into itself. Although it simplifies the assumptions in subsequent proofs, it obscures the (in)dependence on the relevant constants in the type description of theorems. Since `IsPicardLindelof` is already a public facing structure, we should also simply use it internally, without any loss.\r\n* In particular, I remove the completely superficial dependence of `FunSpace` on the `PicardLindelof` structure.\r\n* I avoid defining new non-Prop things that are only used in the proof steps, such as the current `vComp` and `tDist`. The proofs are a little longer as a result, but they are also more readable.\r\n* I place all private (i.e. only internally used) theorems under the namespace `FunSpace`, to guide users to the proper theorems in the public API.\r\n\r\nThis is part of my effort to show that the solution to an ODE depends smoothly on the initial condition, or on parameters of the ODE. This is in turn needed for many results about manifolds, such as the fact that $C^1$ vector fields on compact manifolds always have global integral curves (or global flows).\r\n\r\n- [ ] depends on: #20696\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6aMQUd",
              "body": "### PR summary [149cacf666](https://github.com/leanprover-community/mathlib4/pull/20704/commits/149cacf6664010a6f1ce5008e6afd8245eaa5643)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_sub_le_max_sub`\n`+ compProj`\n`+ compProj_apply`\n`+ compProj_mem_closedBall`\n`+ compProj_of_mem`\n`+ compProj_val`\n`+ contDiffOn_comp`\n`+ continuousOn_comp`\n`+ continuousOn_comp_compProj`\n`+ continuousOn_prod_of_continuousOn_lipschitzOnWith'`\n`+ continuousOn_prod_of_subset_closure_continuousOn_lipschitzOnWith'`\n`+ continuousOn_uncurry`\n`+ continuous_compProj`\n`+ continuous_prod_of_continuous_lipschitzWith'`\n`+ continuous_prod_of_dense_continuous_lipschitzWith'`\n`+ dist_comp_iterate_next_le`\n`+ dist_iterate_next_iterate_next_le`\n`+ exists_contractingWith_iterate_next`\n`+ exists_eq_hasDerivAt_Ioo_of_contDiffAt`\n`+ exists_eq_hasDerivAt_Ioo_of_contDiffAt‚ÇÄ`\n`+ exists_eq_hasDerivWithinAt`\n`+ exists_eq_hasDerivWithinAt_Icc_of_contDiffAt`\n`+ exists_eq_hasDerivWithinAt_Icc_of_contDiffAt‚ÇÄ`\n`+ exists_eq_hasDerivWithinAt‚ÇÄ`\n`+ exists_eq_integrate_eq`\n`+ exists_forall_mem_closedBall_eq_hasDerivAt_Ioo`\n`+ exists_forall_mem_closedBall_eq_hasDerivWithinAt`\n`+ exists_forall_mem_closedBall_eq_hasDerivWithinAt_Icc`\n`+ exists_isFixedPt_next`\n`+ hasDerivWithinAt_integrate_Icc`\n`+ instance : CoeFun (FunSpace t‚ÇÄ x‚ÇÄ r L) fun _ ‚Ü¶ Icc tmin tmax ‚Üí E := ‚ü®fun Œ± ‚Ü¶ Œ±.toFun‚ü©`\n`+ instance : Inhabited (FunSpace t‚ÇÄ x‚ÇÄ r L)`\n`+ instance : MetricSpace (FunSpace t‚ÇÄ x‚ÇÄ r L)`\n`+ instance [CompleteSpace E] : CompleteSpace (FunSpace t‚ÇÄ x‚ÇÄ r L) := by`\n`+ integrate`\n`+ integrate_apply`\n`+ integrate_apply‚ÇÄ`\n`+ intervalIntegrable_comp_compProj`\n`+ mapsTo_swap_prod`\n`+ next_apply‚ÇÄ`\n`+ norm_le_norm_div_add`\n`+ of_contDiffAt_one`\n`+ of_time_independent`\n`+ toContinuousMap_apply_eq_apply`\n`- IsPicardLindelof.exists_forall_hasDerivWithinAt_Icc_eq`\n`- IsPicardLindelof.norm_le‚ÇÄ`\n`- PicardLindelof`\n`- continuousOn`\n`- continuous_proj`\n`- continuous_vComp`\n`- dist_apply_le_dist`\n`- dist_iterate_next_le`\n`- dist_le_of_forall`\n`- dist_next_apply_le_of_le`\n`- dist_t‚ÇÄ_le`\n`- exists_contracting_iterate`\n`- exists_fixed`\n`- exists_forall_hasDerivAt_Ioo_eq_of_contDiff`\n`- exists_forall_hasDerivAt_Ioo_eq_of_contDiffAt`\n`- exists_isPicardLindelof_const_of_contDiffAt`\n`- exists_solution`\n`- for`\n`- hasDerivWithinAt_next`\n`- instance : CoeFun (FunSpace v) fun _ => Icc v.tMin v.tMax ‚Üí E`\n`- instance : CoeFun (PicardLindelof E) fun _ => ‚Ñù ‚Üí E ‚Üí E`\n`- instance : Inhabited (PicardLindelof E)`\n`- instance : Inhabited v.FunSpace`\n`- instance : MetricSpace v.FunSpace`\n`- instance [CompleteSpace E] : CompleteSpace v.FunSpace := by`\n`- intervalIntegrable_vComp`\n`- lipschitz`\n`- lipschitzOnWith`\n`- map_t‚ÇÄ`\n`- nonempty_Icc`\n`- norm_le`\n`- norm_vComp_le`\n`- proj`\n`- proj_coe`\n`- proj_of_mem`\n`- tDist`\n`- tDist_nonneg`\n`- tMin_le_tMax`\n`- uniformInducing_toContinuousMap`\n`- vComp`\n`- vComp_apply_coe`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2025-01-13T11:53:59Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aMVZT",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#20696\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-01-13T12:04:15Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "58e7aad810aa8c13aa9d00f9e0cd7389f49a6123",
                "additions": 155,
                "deletions": 356,
                "committedDate": "2025-01-13T06:29:27Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d7b76e064de02bd2de2db531092b19110b0eccde",
                "additions": 103,
                "deletions": 3,
                "committedDate": "2025-01-13T08:03:32Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6bac4e13628fc6d692badb7d2c1043064730e88d",
                "additions": 40,
                "deletions": 1,
                "committedDate": "2025-01-13T08:49:06Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "80fbf49a05330989c0e37fd762b82ff01d6e3077",
                "additions": 114,
                "deletions": 15,
                "committedDate": "2025-01-13T10:10:49Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "be0611826075fe2073ebb4afa8053bfa3d10af51",
                "additions": 27,
                "deletions": 19,
                "committedDate": "2025-01-13T10:16:52Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9e4312acfb6d63834ad5496da45fdb6878af5f44",
                "additions": 157,
                "deletions": 4,
                "committedDate": "2025-01-13T11:23:19Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a4c96843ad8ba5c364f089243daa4a206d4a311b",
                "additions": 88,
                "deletions": 1,
                "committedDate": "2025-01-13T11:35:39Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "149cacf6664010a6f1ce5008e6afd8245eaa5643",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-01-13T11:38:53Z",
                "author": {
                  "name": "Winston Yin",
                  "email": "winstonyin@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbLKw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634772/job/35523054379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbLYA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634782/job/35523054432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRV7s4g",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746801935/job/35523587298"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRU0Y5g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430393/job/35522418918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbKFA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634807/job/35523054100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbKIw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634819/job/35523054115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbKQg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634809/job/35523054146"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRU0ZFA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430397/job/35522418964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbKPg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634822/job/35523054142"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRU0Z9g",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430397/job/35522419190"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRU0Z3w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430393/job/35522419167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbLog",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634822/job/35523054498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRU0a4w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430393/job/35522419427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVbkPQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35523060797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRVcwnQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20704&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-13T11:53:06Z",
        "deletions": 348,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/Group/Abs.lean",
              "additions": 8,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Basic.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/ODE/PicardLindelof.lean",
              "additions": 583,
              "deletions": 345
            },
            {
              "path": "Mathlib/Data/Set/Prod.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/EMetricSpace/Lipschitz.lean",
              "additions": 33,
              "deletions": 1
            }
          ]
        },
        "headRefName": "picard_lindelof_refactor",
        "headRefOid": "149cacf6664010a6f1ce5008e6afd8245eaa5643",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6HhRO1",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABWC7cjA",
              "color": "33DBEC",
              "name": "t-dynamics"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20704,
        "potentialMergeCommit": {
          "oid": "f01663ad15d49a077de1166f2df5c867add0e3e6"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjc5MTQ4NDk=",
              "login": "winstonyin"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbLKw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634772/job/35523054379"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbLYA",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634782/job/35523054432"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRV7s4g",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746801935/job/35523587298"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRU0Y5g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430393/job/35522418918"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbKFA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634807/job/35523054100"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbKIw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634819/job/35523054115"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbKQg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634809/job/35523054146"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRU0ZFA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430397/job/35522418964"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbKPg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634822/job/35523054142"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRU0Z9g",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430397/job/35522419190"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRU0Z3w",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430393/job/35522419167"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbLog",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746634822/job/35523054498"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRU0a4w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12746430393/job/35522419427"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVbkPQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35523060797"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRVcwnQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20704&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: existence of local flows of vector fields",
        "updatedAt": "2025-01-13T12:04:17Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20704",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6l7K40zwAAAAOz8ApK",
              "createdAt": "2025-01-13T11:53:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6l7K40zwAAAAOz8ApO",
              "createdAt": "2025-01-13T11:53:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABWC7cjA",
                "name": "t-dynamics"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aMQUd",
              "createdAt": "2025-01-13T11:53:59Z",
              "body": "### PR summary [149cacf666](https://github.com/leanprover-community/mathlib4/pull/20704/commits/149cacf6664010a6f1ce5008e6afd8245eaa5643)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ abs_sub_le_max_sub`\n`+ compProj`\n`+ compProj_apply`\n`+ compProj_mem_closedBall`\n`+ compProj_of_mem`\n`+ compProj_val`\n`+ contDiffOn_comp`\n`+ continuousOn_comp`\n`+ continuousOn_comp_compProj`\n`+ continuousOn_prod_of_continuousOn_lipschitzOnWith'`\n`+ continuousOn_prod_of_subset_closure_continuousOn_lipschitzOnWith'`\n`+ continuousOn_uncurry`\n`+ continuous_compProj`\n`+ continuous_prod_of_continuous_lipschitzWith'`\n`+ continuous_prod_of_dense_continuous_lipschitzWith'`\n`+ dist_comp_iterate_next_le`\n`+ dist_iterate_next_iterate_next_le`\n`+ exists_contractingWith_iterate_next`\n`+ exists_eq_hasDerivAt_Ioo_of_contDiffAt`\n`+ exists_eq_hasDerivAt_Ioo_of_contDiffAt‚ÇÄ`\n`+ exists_eq_hasDerivWithinAt`\n`+ exists_eq_hasDerivWithinAt_Icc_of_contDiffAt`\n`+ exists_eq_hasDerivWithinAt_Icc_of_contDiffAt‚ÇÄ`\n`+ exists_eq_hasDerivWithinAt‚ÇÄ`\n`+ exists_eq_integrate_eq`\n`+ exists_forall_mem_closedBall_eq_hasDerivAt_Ioo`\n`+ exists_forall_mem_closedBall_eq_hasDerivWithinAt`\n`+ exists_forall_mem_closedBall_eq_hasDerivWithinAt_Icc`\n`+ exists_isFixedPt_next`\n`+ hasDerivWithinAt_integrate_Icc`\n`+ instance : CoeFun (FunSpace t‚ÇÄ x‚ÇÄ r L) fun _ ‚Ü¶ Icc tmin tmax ‚Üí E := ‚ü®fun Œ± ‚Ü¶ Œ±.toFun‚ü©`\n`+ instance : Inhabited (FunSpace t‚ÇÄ x‚ÇÄ r L)`\n`+ instance : MetricSpace (FunSpace t‚ÇÄ x‚ÇÄ r L)`\n`+ instance [CompleteSpace E] : CompleteSpace (FunSpace t‚ÇÄ x‚ÇÄ r L) := by`\n`+ integrate`\n`+ integrate_apply`\n`+ integrate_apply‚ÇÄ`\n`+ intervalIntegrable_comp_compProj`\n`+ mapsTo_swap_prod`\n`+ next_apply‚ÇÄ`\n`+ norm_le_norm_div_add`\n`+ of_contDiffAt_one`\n`+ of_time_independent`\n`+ toContinuousMap_apply_eq_apply`\n`- IsPicardLindelof.exists_forall_hasDerivWithinAt_Icc_eq`\n`- IsPicardLindelof.norm_le‚ÇÄ`\n`- PicardLindelof`\n`- continuousOn`\n`- continuous_proj`\n`- continuous_vComp`\n`- dist_apply_le_dist`\n`- dist_iterate_next_le`\n`- dist_le_of_forall`\n`- dist_next_apply_le_of_le`\n`- dist_t‚ÇÄ_le`\n`- exists_contracting_iterate`\n`- exists_fixed`\n`- exists_forall_hasDerivAt_Ioo_eq_of_contDiff`\n`- exists_forall_hasDerivAt_Ioo_eq_of_contDiffAt`\n`- exists_isPicardLindelof_const_of_contDiffAt`\n`- exists_solution`\n`- for`\n`- hasDerivWithinAt_next`\n`- instance : CoeFun (FunSpace v) fun _ => Icc v.tMin v.tMax ‚Üí E`\n`- instance : CoeFun (PicardLindelof E) fun _ => ‚Ñù ‚Üí E ‚Üí E`\n`- instance : Inhabited (PicardLindelof E)`\n`- instance : Inhabited v.FunSpace`\n`- instance : MetricSpace v.FunSpace`\n`- instance [CompleteSpace E] : CompleteSpace v.FunSpace := by`\n`- intervalIntegrable_vComp`\n`- lipschitz`\n`- lipschitzOnWith`\n`- map_t‚ÇÄ`\n`- nonempty_Icc`\n`- norm_le`\n`- norm_vComp_le`\n`- proj`\n`- proj_coe`\n`- proj_of_mem`\n`- tDist`\n`- tDist_nonneg`\n`- tMin_le_tMax`\n`- uniformInducing_toContinuousMap`\n`- vComp`\n`- vComp_apply_coe`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6l7K40zwAAAAOz8hNQ",
              "createdAt": "2025-01-13T12:04:14Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aMVZT",
              "createdAt": "2025-01-13T12:04:15Z",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#20696\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        }
      }
    }
  }
}
