{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 111,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            }
          ]
        },
        "author": {
          "login": "peabrainiac"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define an `IsHomeomorph` predicate for maps between topological spaces to complement the existing bundled `Homeomorph` API.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2024-08-23T11:17:20Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c58QR9h",
              "body": "Thanks for your contribution! Is this ready for review? If so, please label it `awaiting-review`. (See [here](https://leanprover-community.github.io/contribute/index.html#lifecycle-of-a-pr) for a more detailed explanation of this and related labels.)",
              "createdAt": "2024-04-30T08:00:09Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c58Vns1",
              "body": "For context, there was already a little bit of discussion over this [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Why.20no.20.60IsHomeomorph.60.20property.3F/near/435012711) on Zulip. One concern voiced there was that having an unbundled predicate in addition to the bundled `Homeomorph` structure would encourage a lot of API duplication. The way I've tried to avoid that is by only implementing API relating this to other unbundled properties of maps, such as with `IsHomeomorph.isClosedMap` - theorems involving properties of sets and spaces, like [Homeomorph.compactSpace](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Homeomorph.html#Homeomorph.compactSpace), are still available only for bundled homeomorphisms. My hope is that this provides enough API for most situations in which the `IsHomeomorph` predicate might be used, while also making it easy enough to convert between the `IsHomeomorph` and `Homeomorph` types when the additional API of `Homeomorph` is needed.",
              "createdAt": "2024-04-30T17:10:46Z",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6F1vkR",
              "body": "Hi @peabrainiac, this PR looks mostly fine, but there are still some places where it needs some work. Are you planning to continue working on this PR? Would you like some help from others, or do you want to hand over completely? (In the latter case, please label it with `please-adopt`.)",
              "createdAt": "2024-07-23T14:45:19Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6I5MPD",
              "body": "@peabrainiac, it looks like the PR hasn't moved since we last pinged you. We're going to close this for now, just for the sake of cleaning up our [PR queue](https://bit.ly/3Ymuh0U). But please do feel free to either re-open the PR if you'd like to continue working on it, or come across to the [PR reviews](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/) zulip stream to ask for advice or request that we look at this again.",
              "createdAt": "2024-08-19T14:17:47Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6I9Kkp",
              "body": "@j-loreaux asked that we reopen this.",
              "createdAt": "2024-08-20T00:17:32Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6I-_vq",
              "body": "### PR summary [80789fee7f](https://github.com/leanprover-community/mathlib4/pull/12533/commits/80789fee7fbfd91d977f1066e08b04284094940e)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Homeomorph.isHomeomorph`\n`+ IsHomeomorph`\n`+ IsHomeomorph.comp`\n`+ IsHomeomorph.id`\n`+ IsHomeomorph.isProperMap`\n`+ IsHomeomorph.pi_map`\n`+ IsHomeomorph.prodMap`\n`+ IsHomeomorph.sigmaMap`\n`+ IsHomeomorph.sumMap`\n`+ IsOpenMap.sumMap`\n`+ closedEmbedding`\n`+ denseEmbedding`\n`+ embedding`\n`+ homeomorph`\n`+ inducing`\n`+ injective`\n`+ isClosedMap`\n`+ isHomeomorph_iff_continuous_bijective`\n`+ isHomeomorph_iff_continuous_isClosedMap_bijective`\n`+ isHomeomorph_iff_embedding_surjective`\n`+ isHomeomorph_iff_exists_homeomorph`\n`+ isHomeomorph_iff_exists_inverse`\n`+ openEmbedding`\n`+ quotientMap`\n`+ surjective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-20T07:58:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZxyZ",
              "body": "build failing @YaelDillies \r\n\r\nbors d+",
              "createdAt": "2024-08-22T17:01:42Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZxzp",
              "body": ":v: peabrainiac can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-08-22T17:01:44Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZyAC",
              "body": "oops\r\n\r\nbors d=yaeldillies",
              "createdAt": "2024-08-22T17:02:09Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZyBD",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-08-22T17:02:11Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JZyQ8",
              "body": "bors d-",
              "createdAt": "2024-08-22T17:02:48Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JfXgH",
              "body": "bors merge",
              "createdAt": "2024-08-23T09:37:29Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JgB9h",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10524056557/job/29160036690)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10524056557/job/29160036493)",
              "createdAt": "2024-08-23T11:17:19Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2b6b1018319c69728d5b5c9926a40536d5ba3d23",
                "additions": 116,
                "deletions": 4,
                "committedDate": "2024-08-20T06:59:53Z",
                "author": {
                  "name": "Ben Eltschig",
                  "email": "b.eltschig@protonmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "96d4dd26b2f1513d54c26558097edf9b07dee787",
                "additions": 66,
                "deletions": 78,
                "committedDate": "2024-08-20T07:57:46Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwMiCnA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10473090846/job/29004169884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwzsgtw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486617273/job/29045235895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwMiCBg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10473090830/job/29004169734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwzsg4w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486617275/job/29045235939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72paA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467593152/job/28986681704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72pPQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467593141/job/28986681661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72kYQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592572/job/28986680417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72lKg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592571/job/28986680618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72pOg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467593149/job/28986681658"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwMiEyg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10473090846/job/29004170442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGwzsiBA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486617273/job/29045236228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72m-A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592572/job/28986681080"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72myg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592571/job/28986681034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72qUQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467593149/job/28986681937"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72mFw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592572/job/28986680855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72kIg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592571/job/28986680354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72lPQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592572/job/28986680637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72l5g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592571/job/28986680806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv72oBg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592572/job/28986681350"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv9NHLw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10467592571/job/28988098351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv73H9g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28986689526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGv74N7w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=12533&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ca9f9d24a1940cbb73a067403652932a862e7b25",
                "additions": 11,
                "deletions": 2,
                "committedDate": "2024-08-21T08:54:50Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0Buug",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486725312/job/29045583546"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyAcokA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10512428187/job/29125716112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BuxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486725315/job/29045583556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyAcnOw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10512428188/job/29125715771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BGoA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486722262/job/29045573280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BHLw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486722265/job/29045573423"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BEpQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721746/job/29045572773"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BDgA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721749/job/29045572480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BLMg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486722305/job/29045574450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0Bv9A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486725312/job/29045583860"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyAcnHQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10512428187/job/29125715741"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BDmA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721746/job/29045572504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BFcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721749/job/29045572979"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BJ3A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486722305/job/29045574108"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BCPQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721746/job/29045572157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BEYA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721749/job/29045572704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BCaQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721749/job/29045572201"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BFzw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721746/job/29045573071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0BIcQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721746/job/29045573745"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0GUiA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10486721749/job/29045658760"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0Bwxg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29045584070"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGw0Cn8Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=12533&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "80789fee7fbfd91d977f1066e08b04284094940e",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-08-23T09:35:50Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdiqA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477600/job/29158236840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdh-w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477575/job/29158236667"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdfTw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158235983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdfGA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158235928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdisg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477566/job/29158236850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdhRQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158236485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdhBA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158236420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdh0g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477566/job/29158236626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdd_A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158235644"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdgDA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158236172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdgPA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158236220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdeAg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158235650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfdiPA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158236732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGygrYYQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29159512161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfmH6Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29158377449"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGyfe4Bw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=12533&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHNd0New",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5290",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-04-30T02:59:26Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/Constructions.lean",
              "additions": 4,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Homeomorph.lean",
              "additions": 103,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Maps/Proper/Basic.lean",
              "additions": 4,
              "deletions": 1
            }
          ]
        },
        "headRefName": "isHomeomorph",
        "headRefOid": "80789fee7fbfd91d977f1066e08b04284094940e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5uFl6X",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GH2_q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-21T08:55:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Ga4AY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-08-22T17:01:25Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 12533,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c59UNPk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-06-06T16:29:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6F_l2S",
              "body": "Thanks for adopting this YaÃ«l!",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-08-20T14:02:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GHyd7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-21T08:47:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GH2_q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-21T08:55:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Ga4AY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-08-22T17:01:25Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hJVe4",
                    "body": "Please avoid adding unnecessary lines of diff to your PRs ",
                    "createdAt": "2024-06-06T16:24:30Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hJWGU",
                    "body": "Following the [naming convention](https://leanprover-community.github.io/contribute/naming.html), the foreign namespaces should be appended back in camel-case unless the unnamespaced name is unambiguous.\r\n```suggestion\r\ntheorem IsOpenMap.sumMap {f : X â Y} {g : Z â W} (hf : IsOpenMap f) (hg : IsOpenMap g) :\r\n```",
                    "createdAt": "2024-06-06T16:26:25Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hJW5h",
                    "body": "It's usually nicer to create a custom structure when combining > 2 predicates\r\n```suggestion\r\nstructure IsHomeomorph (f : X â Y) : Prop where\r\n  continuous : Continuous f\r\n  isOpenMap : IsOpenMap f\r\n  bijective : Bijective f\r\n```\r\n(also please `open Function`)",
                    "createdAt": "2024-06-06T16:28:53Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hJXDk",
                    "body": "```suggestion\r\ntheorem isHomeomorph_iff_exists_homeomorph {f : X â Y} : IsHomeomorph f â â h : X ââ Y, h = f :=\r\n```",
                    "createdAt": "2024-06-06T16:29:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hJXJL",
                    "body": "```suggestion\r\nlemma IsHomeomorph.sigmaMap {Î¹ Îº : Type*} {X : Î¹ â Type*} {Y : Îº â Type*}\r\n```\r\nand above",
                    "createdAt": "2024-06-06T16:29:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5muAp8",
                    "body": "As long as it makes the correct `apply` lemma, and if not we write it by hand.\n```suggestion\n@[simps]\nnoncomputable def homeomorph : X ââ Y where\n```\n",
                    "createdAt": "2024-08-20T13:40:35Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5muFNj",
                    "body": "Even `isClosedMap` would be more accurate, but I know the name is getting long.\r\n```suggestion\r\nlemma isHomeomorph_iff_continuous_closed_bijective : IsHomeomorph f â\r\n    Continuous f â§ IsClosedMap f â§ Function.Bijective f :=\r\n```\r\n",
                    "createdAt": "2024-08-20T13:51:34Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mzIse",
                    "body": "Actually, I agree about `isClosedMap` too",
                    "createdAt": "2024-08-21T08:47:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5muJbJ",
                    "body": "This docstring should be greatly expanded with information about why we have this, and when to use it, especially since we frequently should prefer `Homeomorph` directly.\n\nFor example, this should mention at least:\n\n1. That `Homeomorph` exists and that it should get preferred whenever the inverse is easy to write down.\n2. That we have this in part because we have much of the topological end of the library unbundled.\n3. Unlike many other `EquivLike` morphisms, `IsHomeomorph` is not just a `FunLike` version of the morphism + `Function.Bijective`, so something is actually gained by having this as a separate predicate.\n4. This predicate is useful when you *don't* have an easily written inverse, but you still want to access properties of homeomorphosms or potentially build one.\n\nPoints 2 and 3 also explain why we don't have this pattern for various equivs across the library.\n",
                    "createdAt": "2024-08-20T14:01:21Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5mzLiB",
                    "body": "What about now? I'm not super happy with it, so feel free to request more changes",
                    "createdAt": "2024-08-21T08:55:09Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5m97Cg",
                    "body": "I think it's okay. It may not be perfect, but I don't see obvious bits to change, and it's good enough.",
                    "createdAt": "2024-08-22T17:01:24Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQzODEyOTUz",
              "login": "peabrainiac"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdiqA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477600/job/29158236840"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdh-w",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477575/job/29158236667"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdfTw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158235983"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdfGA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158235928"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdisg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477566/job/29158236850"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdhRQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158236485"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdhBA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158236420"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdh0g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477566/job/29158236626"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdd_A",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158235644"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdgDA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158236172"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdgPA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158236220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdeAg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29158235650"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfdiPA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477176/job/29158236732"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGygrYYQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10523477173/job/29159512161"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfmH6Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29158377449"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGyfe4Bw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=12533&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHNd0New",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5290",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: `IsHomeomorph` predicate",
        "updatedAt": "2024-08-23T11:17:27Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/12533",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6HU5wqzwAAAALyGEWn",
              "createdAt": "2024-04-30T02:59:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6HU5wqzwAAAALyGEWr",
              "createdAt": "2024-04-30T02:59:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c58QR9h",
              "createdAt": "2024-04-30T08:00:09Z",
              "body": "Thanks for your contribution! Is this ready for review? If so, please label it `awaiting-review`. (See [here](https://leanprover-community.github.io/contribute/index.html#lifecycle-of-a-pr) for a more detailed explanation of this and related labels.)",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6HU5wqzwAAAALyq6m_",
              "createdAt": "2024-04-30T16:56:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c58Vns1",
              "createdAt": "2024-04-30T17:10:46Z",
              "body": "For context, there was already a little bit of discussion over this [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Why.20no.20.60IsHomeomorph.60.20property.3F/near/435012711) on Zulip. One concern voiced there was that having an unbundled predicate in addition to the bundled `Homeomorph` structure would encourage a lot of API duplication. The way I've tried to avoid that is by only implementing API relating this to other unbundled properties of maps, such as with `IsHomeomorph.isClosedMap` - theorems involving properties of sets and spaces, like [Homeomorph.compactSpace](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Homeomorph.html#Homeomorph.compactSpace), are still available only for bundled homeomorphisms. My hope is that this provides enough API for most situations in which the `IsHomeomorph` predicate might be used, while also making it easy enough to convert between the `IsHomeomorph` and `Homeomorph` types when the additional API of `Homeomorph` is needed.",
              "author": {
                "login": "peabrainiac"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c59UNPk",
              "createdAt": "2024-06-06T16:24:30Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6HU5wqzwAAAAMK_1Y9",
              "createdAt": "2024-06-06T16:29:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6HU5wqzwAAAAMK_1ZE",
              "createdAt": "2024-06-06T16:29:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6HU5wqzwAAAAMo0pu6",
              "createdAt": "2024-07-19T07:08:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6F1vkR",
              "createdAt": "2024-07-23T14:45:19Z",
              "body": "Hi @peabrainiac, this PR looks mostly fine, but there are still some places where it needs some work. Are you planning to continue working on this PR? Would you like some help from others, or do you want to hand over completely? (In the latter case, please label it with `please-adopt`.)",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I5MPD",
              "createdAt": "2024-08-19T14:17:47Z",
              "body": "@peabrainiac, it looks like the PR hasn't moved since we last pinged you. We're going to close this for now, just for the sake of cleaning up our [PR queue](https://bit.ly/3Ymuh0U). But please do feel free to either re-open the PR if you'd like to continue working on it, or come across to the [PR reviews](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/) zulip stream to ask for advice or request that we look at this again.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6HU5wqzwAAAAM-Xd7Y",
              "createdAt": "2024-08-19T14:17:47Z"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I9Kkp",
              "createdAt": "2024-08-20T00:17:32Z",
              "body": "@j-loreaux asked that we reopen this.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "ReopenedEvent",
              "id": "REE_lADOFcwZ1c6HU5wqzwAAAAM-vtq4",
              "createdAt": "2024-08-20T00:17:32Z"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6HU5wqzwAAAAM-vuU5",
              "createdAt": "2024-08-20T00:17:55Z",
              "assignee": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6HU5wqzwAAAAM-8GWf",
              "createdAt": "2024-08-20T07:57:58Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I-_vq",
              "createdAt": "2024-08-20T07:58:39Z",
              "body": "### PR summary [80789fee7f](https://github.com/leanprover-community/mathlib4/pull/12533/commits/80789fee7fbfd91d977f1066e08b04284094940e)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Homeomorph.isHomeomorph`\n`+ IsHomeomorph`\n`+ IsHomeomorph.comp`\n`+ IsHomeomorph.id`\n`+ IsHomeomorph.isProperMap`\n`+ IsHomeomorph.pi_map`\n`+ IsHomeomorph.prodMap`\n`+ IsHomeomorph.sigmaMap`\n`+ IsHomeomorph.sumMap`\n`+ IsOpenMap.sumMap`\n`+ closedEmbedding`\n`+ denseEmbedding`\n`+ embedding`\n`+ homeomorph`\n`+ inducing`\n`+ injective`\n`+ isClosedMap`\n`+ isHomeomorph_iff_continuous_bijective`\n`+ isHomeomorph_iff_continuous_isClosedMap_bijective`\n`+ isHomeomorph_iff_embedding_surjective`\n`+ isHomeomorph_iff_exists_homeomorph`\n`+ isHomeomorph_iff_exists_inverse`\n`+ openEmbedding`\n`+ quotientMap`\n`+ surjective`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6HU5wqzwAAAAM-8uoY",
              "createdAt": "2024-08-20T08:10:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6F_l2S",
              "createdAt": "2024-08-20T13:40:35Z",
              "body": "Thanks for adopting this YaÃ«l!",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZxyZ",
              "createdAt": "2024-08-22T17:01:42Z",
              "body": "build failing @YaelDillies \r\n\r\nbors d+",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZxzp",
              "createdAt": "2024-08-22T17:01:44Z",
              "body": ":v: peabrainiac can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6HU5wqzwAAAANBXRcd",
              "createdAt": "2024-08-22T17:01:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZyAC",
              "createdAt": "2024-08-22T17:02:09Z",
              "body": "oops\r\n\r\nbors d=yaeldillies",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZyBD",
              "createdAt": "2024-08-22T17:02:11Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JZyQ8",
              "createdAt": "2024-08-22T17:02:48Z",
              "body": "bors d-",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6HU5wqzwAAAANB6mtR",
              "createdAt": "2024-08-23T09:37:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JfXgH",
              "createdAt": "2024-08-23T09:37:29Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JgB9h",
              "createdAt": "2024-08-23T11:17:19Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10524056557/job/29160036690)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10524056557/job/29160036493)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6HU5wqzwAAAANB-tB2",
              "createdAt": "2024-08-23T11:17:20Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6HU5wqzwAAAANB-tSe",
              "createdAt": "2024-08-23T11:17:27Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
