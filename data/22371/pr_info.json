{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 53,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "imathwy"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2025-03-06T09:50:11Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6gPujw",
              "body": "Thanks for the PR! What's your use case for these definitions?",
              "createdAt": "2025-02-27T16:26:28Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gQdJS",
              "body": "> Thanks for the PR! What's your use case for these definitions?\r\n\r\nI want to construct the affine map\r\n```lean\r\n{s : Set V} (hs : s.Nonempty) : (affineSpan ùïú s).direction ‚Üí·µÉ[ùïú] V\r\n```\r\nin order to prove an equivalent condition for intrinsicInterior and intrinsicClosure, which can subsequently be used to prove the following:\r\n\r\n```lean\r\n{s : Set V} (hsc : Convex ùïú s) {x y : V}\r\n(hx : x ‚àà intrinsicInterior ùïú s) (hy : y ‚àà intrinsicClosure ùïú s) :\r\nopenSegment ùïú x y ‚äÜ intrinsicInterior ùïú s\r\n```\r\n\r\nAdditionally, many other theorems involving intrinsicInterior can be reduced to proving the corresponding int version of the theorem using this affine map.\r\n\r\nEssentially, this affine map is used to employ the topological structure of the submodule affineSpan ùïú s as a tool for the proof.",
              "createdAt": "2025-02-27T17:42:29Z",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gnTW-",
              "body": "Can you use `Equiv.vaddConst` directlyt instead of defining something new?",
              "createdAt": "2025-03-03T14:50:55Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gnYVf",
              "body": "> Can you use `Equiv.vaddConst` directlyt instead of defining something new?\r\n\r\nOKÔºÅ I only PR one definition.",
              "createdAt": "2025-03-03T14:57:06Z",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gniUQ",
              "body": "Can you make it exactly analogous to `Equiv.vaddConst`? Maybe call it `Homeomorph.vaddConst`",
              "createdAt": "2025-03-03T15:11:36Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6goPRJ",
              "body": "> Can you make it exactly analogous to `Equiv.vaddConst`? Maybe call it `Homeomorph.vaddConst`\r\nI have tried before.\r\n```lean\r\ndef Homeomorph.vaddConst {G : Type*} {P : Type*} \r\n  [TopologicalSpace G] [TopologicalSpace P]\r\n  [AddGroup G] [AddTorsor G P]\r\n  [ContinuousSub G] [ContinuousVAdd G P]\r\n  (p : P) :\r\n  G ‚âÉ‚Çú P where\r\n  toEquiv := .vaddConst p\r\n  continuous_toFun := by continuity\r\n  continuous_invFun := by\r\n    simp\r\n    sorry\r\n```\r\nBut there is a question. `continuous_vsub` need normed. And the sorry can't be solved in this situation.",
              "createdAt": "2025-03-03T16:16:35Z",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6goQBE",
              "body": "Then assume that it is normed? What is the issue with that?",
              "createdAt": "2025-03-03T16:17:43Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6goSAp",
              "body": "> Then assume that it is normed? What is the issue with that?\r\n\r\nBut there is no need for the condition of 'norm' here.\r\n```lean\r\ndef AffineSubspaceHomeomorphAffineSubspace_direction\r\n    {s : AffineSubspace ùïú V} {z} (hz : z ‚àà s) : s ‚âÉ‚Çú s.direction\r\n```",
              "createdAt": "2025-03-03T16:20:42Z",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6goULQ",
              "body": "And anyway, if we use norm, we can def like this.\r\n```lean\r\ndef Homeomorph.vaddConst {V: Type*} {P : Type*} \r\n  [SeminormedAddCommGroup V] [PseudoMetricSpace P]\r\n  [NormedAddTorsor V P] (p : P) :\r\n  V ‚âÉ‚Çú P where\r\n  toEquiv := .vaddConst p\r\n  continuous_toFun := by continuity\r\n  continuous_invFun := by simpa using .vsub  continuous_id' continuous_const\r\n```",
              "createdAt": "2025-03-03T16:24:01Z",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6hIbyM",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #22583. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "createdAt": "2025-03-06T09:50:47Z",
              "author": {
                "login": "mergify"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2fd82a316a0e19ee582ad2aa5536d0502e76b8fa",
                "additions": 795,
                "deletions": 0,
                "committedDate": "2025-03-05T21:16:02Z",
                "author": {
                  "name": "imathwy",
                  "email": "3124237569@qq.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "32fe03ace89abc14092480f65d130e42ead10d66",
                "additions": 0,
                "deletions": 795,
                "committedDate": "2025-03-05T21:16:02Z",
                "author": {
                  "name": "imathwy",
                  "email": "3124237569@qq.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e4817fdbf21d0cebcf4ff2da3b2c615c645f3fa1",
                "additions": 17,
                "deletions": 0,
                "committedDate": "2025-03-05T21:23:45Z",
                "author": {
                  "name": "imathwy",
                  "email": "3124237569@qq.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QDC0g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685819171/job/38268879570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6pVVDw",
                        "name": "Add closed-pr emoji in Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695017518/job/38295393551"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QJgww",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685853179/job/38268985539"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6pVVOA",
                        "name": "Cross off linked issues",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695017516/job/38295393592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QJgtA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685853174/job/38268985524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QJggA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685853168/job/38268985472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QDBHA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685819168/job/38268879132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QJiNA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685853183/job/38268985908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QDBIQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685819171/job/38268879137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QDCUA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685819168/job/38268879440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QJg4Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685853183/job/38268985569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QDELQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685819171/job/38268879917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6Qfl9w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13685819168/job/38269347319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QJ2iA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38268991112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6QKD0A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22609&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a5acc255c97c3f8350634471f2c4bb5abb0cafa7",
                "additions": 46,
                "deletions": 12,
                "committedDate": "2025-03-06T08:44:00Z",
                "author": {
                  "name": "imathwy",
                  "email": "3124237569@qq.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rvusQ",
                        "name": "Add closed-pr emoji in Zulip",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695842531/job/38297923249"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6o_jNg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902438/job/38295036726"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6o_jQw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902443/job/38295036739"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr3Jw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822401/job/38297859879"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rvueQ",
                        "name": "Cross off linked issues",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695842507/job/38297923193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr8sQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823242/job/38297861297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr8wg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823241/job/38297861314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr1Qw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822404/job/38297859395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6o_k2Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902448/job/38295037145"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr86Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823252/job/38297861353"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr26A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822404/job/38297859816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr1Rg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822401/job/38297859398"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6o_jOw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902448/job/38295036731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr-Rg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823252/job/38297861702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rr5GQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822401/job/38297860377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6tE3WA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822404/job/38299318104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6rsRSw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38297866571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI6pBSJw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22583&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-27T13:29:18Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Normed/Group/AddTorsor.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/AffineSpace/ContinuousAffineEquiv.lean",
              "additions": 15,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/ConstMulAction.lean",
              "additions": 26,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/MulAction.lean",
              "additions": 8,
              "deletions": 1
            }
          ]
        },
        "headRefName": "intrinsicInterior_pr_1",
        "headRefOid": "a5acc255c97c3f8350634471f2c4bb5abb0cafa7",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "imathwy"
          }
        },
        "headRepositoryOwner": {
          "login": "imathwy"
        },
        "id": "PR_kwDOFcwZ1c6MzJKN",
        "isCrossRepository": true,
        "isDraft": false,
        "labels": {
          "nodes": []
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6eegXL",
              "body": "What's left in this PR has nothing with the intrinsic interior. Can you move the definition to an earlier file?\r\n\r\nAlso note that we can't merge PRs from forks. Please close the current PR, read https://leanprover-community.github.io/contribute/index.html, then reopen the PR from the `mathlib4` repository.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T19:36:31Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22371,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6eegXL",
              "body": "What's left in this PR has nothing with the intrinsic interior. Can you move the definition to an earlier file?\r\n\r\nAlso note that we can't merge PRs from forks. Please close the current PR, read https://leanprover-community.github.io/contribute/index.html, then reopen the PR from the `mathlib4` repository.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-04T19:36:31Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCNNVzw",
              "login": "imathwy"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rvusQ",
                "name": "Add closed-pr emoji in Zulip",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695842531/job/38297923249"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6o_jNg",
                "name": "label-and-report-new-contributor",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902438/job/38295036726"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6o_jQw",
                "name": "post-or-update-summary-comment",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902443/job/38295036739"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr3Jw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822401/job/38297859879"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rvueQ",
                "name": "Cross off linked issues",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695842507/job/38297923193"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr8sQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823242/job/38297861297"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr8wg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823241/job/38297861314"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr1Qw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822404/job/38297859395"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6o_k2Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902448/job/38295037145"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr86Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823252/job/38297861353"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr26A",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822404/job/38297859816"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr1Rg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822401/job/38297859398"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6o_jOw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13694902448/job/38295036731"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr-Rg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695823252/job/38297861702"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rr5GQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822401/job/38297860377"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6tE3WA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13695822404/job/38299318104"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6rsRSw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38297866571"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI6pBSJw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22583&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "Intrinsic interior pr 1",
        "updatedAt": "2025-03-06T09:50:48Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22371",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gPujw",
              "createdAt": "2025-02-27T16:26:28Z",
              "body": "Thanks for the PR! What's your use case for these definitions?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gQdJS",
              "createdAt": "2025-02-27T17:42:29Z",
              "body": "> Thanks for the PR! What's your use case for these definitions?\r\n\r\nI want to construct the affine map\r\n```lean\r\n{s : Set V} (hs : s.Nonempty) : (affineSpan ùïú s).direction ‚Üí·µÉ[ùïú] V\r\n```\r\nin order to prove an equivalent condition for intrinsicInterior and intrinsicClosure, which can subsequently be used to prove the following:\r\n\r\n```lean\r\n{s : Set V} (hsc : Convex ùïú s) {x y : V}\r\n(hx : x ‚àà intrinsicInterior ùïú s) (hy : y ‚àà intrinsicClosure ùïú s) :\r\nopenSegment ùïú x y ‚äÜ intrinsicInterior ùïú s\r\n```\r\n\r\nAdditionally, many other theorems involving intrinsicInterior can be reduced to proving the corresponding int version of the theorem using this affine map.\r\n\r\nEssentially, this affine map is used to employ the topological structure of the submodule affineSpan ùïú s as a tool for the proof.",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gnTW-",
              "createdAt": "2025-03-03T14:50:55Z",
              "body": "Can you use `Equiv.vaddConst` directlyt instead of defining something new?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gnYVf",
              "createdAt": "2025-03-03T14:57:06Z",
              "body": "> Can you use `Equiv.vaddConst` directlyt instead of defining something new?\r\n\r\nOKÔºÅ I only PR one definition.",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gniUQ",
              "createdAt": "2025-03-03T15:11:36Z",
              "body": "Can you make it exactly analogous to `Equiv.vaddConst`? Maybe call it `Homeomorph.vaddConst`",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6goPRJ",
              "createdAt": "2025-03-03T16:16:35Z",
              "body": "> Can you make it exactly analogous to `Equiv.vaddConst`? Maybe call it `Homeomorph.vaddConst`\r\nI have tried before.\r\n```lean\r\ndef Homeomorph.vaddConst {G : Type*} {P : Type*} \r\n  [TopologicalSpace G] [TopologicalSpace P]\r\n  [AddGroup G] [AddTorsor G P]\r\n  [ContinuousSub G] [ContinuousVAdd G P]\r\n  (p : P) :\r\n  G ‚âÉ‚Çú P where\r\n  toEquiv := .vaddConst p\r\n  continuous_toFun := by continuity\r\n  continuous_invFun := by\r\n    simp\r\n    sorry\r\n```\r\nBut there is a question. `continuous_vsub` need normed. And the sorry can't be solved in this situation.",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6goQBE",
              "createdAt": "2025-03-03T16:17:43Z",
              "body": "Then assume that it is normed? What is the issue with that?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6goSAp",
              "createdAt": "2025-03-03T16:20:42Z",
              "body": "> Then assume that it is normed? What is the issue with that?\r\n\r\nBut there is no need for the condition of 'norm' here.\r\n```lean\r\ndef AffineSubspaceHomeomorphAffineSubspace_direction\r\n    {s : AffineSubspace ùïú V} {z} (hz : z ‚àà s) : s ‚âÉ‚Çú s.direction\r\n```",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6goULQ",
              "createdAt": "2025-03-03T16:24:01Z",
              "body": "And anyway, if we use norm, we can def like this.\r\n```lean\r\ndef Homeomorph.vaddConst {V: Type*} {P : Type*} \r\n  [SeminormedAddCommGroup V] [PseudoMetricSpace P]\r\n  [NormedAddTorsor V P] (p : P) :\r\n  V ‚âÉ‚Çú P where\r\n  toEquiv := .vaddConst p\r\n  continuous_toFun := by continuity\r\n  continuous_invFun := by simpa using .vsub  continuous_id' continuous_const\r\n```",
              "author": {
                "login": "imathwy"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6eegXL",
              "createdAt": "2025-03-04T19:36:31Z",
              "body": "What's left in this PR has nothing with the intrinsic interior. Can you move the definition to an earlier file?\r\n\r\nAlso note that we can't merge PRs from forks. Please close the current PR, read https://leanprover-community.github.io/contribute/index.html, then reopen the PR from the `mathlib4` repository.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6r7ncSzwAAAAPdJtgO",
              "createdAt": "2025-03-05T08:07:34Z"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2fd82a316a0e19ee582ad2aa5536d0502e76b8fa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "32fe03ace89abc14092480f65d130e42ead10d66"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e4817fdbf21d0cebcf4ff2da3b2c615c645f3fa1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a5acc255c97c3f8350634471f2c4bb5abb0cafa7"
              }
            },
            {
              "__typename": "ReopenedEvent",
              "id": "REE_lADOFcwZ1c6r7ncSzwAAAAPePJc4",
              "createdAt": "2025-03-06T08:48:33Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6r7ncSzwAAAAPePxpZ",
              "createdAt": "2025-03-06T09:00:31Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5_WZ0z",
              "createdAt": "2025-03-06T09:49:41Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6NbyPs",
                "title": "feat: affinespace homeomorphism",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22583"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6r7ncSzwAAAAPeSlEf",
              "createdAt": "2025-03-06T09:50:11Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6hIbyM",
              "createdAt": "2025-03-06T09:50:47Z",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #22583. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "author": {
                "login": "mergify"
              }
            }
          ]
        }
      }
    }
  }
}
