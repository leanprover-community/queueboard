{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1021,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR implements `Hom` classes and `ConcreteCategory` instances for the following categories of orders:\r\n* `Preord`\r\n* `PartOrd`, `FinPartOrd`\r\n* `Lat`\r\n* `DistLat`\r\n* `LinOrd`, `NonemptyFinLinOrd`\r\n* `BddOrd`\r\n* `Frm`\r\n\r\n(These are basically the categories where the morphisms are `OrderHom`s, plus the lattice categories, since those are in between in the inheritance hierarchy `PartOrd -> Lat -> LinOrd`.)\r\n\r\nIt also replaces `HasForget` instances with `ConcreteCategory` instances for the following categories of orders:\r\n* `BddLat`\r\n* `SemilatSupCat`, `SemilatInfCat`\r\n* `BddDistLat`, `FinBddDistLat`\r\n\r\n(These are basically the categories that depend on / extend one of the previous definitions, so in the process of fixing I might as well update their instances.)\r\n\r\nThe following order categories still need to be refactored:\r\n* `BoolAlg`, `FinBoolAlg`\r\n* `CompleteLat`\r\n* `HeytAlg`\r\n* `ωCPO`\r\n\r\nZulip thread: https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Concrete.20category.20class.20redesign\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 21,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6c9v0i",
              "body": "### PR summary [d023e3ea61](https://github.com/leanprover-community/mathlib4/pull/21409/commits/d023e3ea612033bb2fa0a33021cee6aa24609d43)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (X : NonemptyFinLinOrd) : BoundedOrder X`\n`+ instance : Category BddOrd.{u}`\n`+ instance : Category DistLat.{u}`\n`+ instance : Category Frm.{u}`\n`+ instance : Category Lat.{u}`\n`+ instance : Category LinOrd.{u}`\n`+ instance : Category PartOrd.{u}`\n`+ instance : Category Preord.{u}`\n`+ instance : CoeSort DistLat (Type _)`\n`+ instance : CoeSort Frm (Type _)`\n`+ instance : CoeSort Lat (Type _)`\n`+ instance : CoeSort LinOrd (Type _)`\n`+ instance : CoeSort NonemptyFinLinOrd (Type _)`\n`+ instance : CoeSort PartOrd (Type _)`\n`+ instance : CoeSort Preord (Type u)`\n`+ instance : ConcreteCategory BddDistLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddOrd (BoundedOrderHom · ·)`\n`+ instance : ConcreteCategory DistLat (LatticeHom · ·)`\n`+ instance : ConcreteCategory Frm (FrameHom · ·)`\n`+ instance : ConcreteCategory Lat (LatticeHom · ·)`\n`+ instance : ConcreteCategory LinOrd (· →o ·)`\n`+ instance : ConcreteCategory NonemptyFinLinOrd (· →o ·)`\n`+ instance : ConcreteCategory PartOrd (· →o ·)`\n`+ instance : ConcreteCategory Preord (· →o ·)`\n`+ instance : ConcreteCategory SemilatInfCat (InfTopHom · ·)`\n`+ instance : ConcreteCategory SemilatSupCat (SupBotHom · ·)`\n`+ instance : ConcreteCategory SimplexCategory (fun i j => Fin (i.len + 1) →o Fin (j.len + 1))`\n`+ instance : LargeCategory NonemptyFinLinOrd`\n`++ concreteCategory`\n`+++++++ Hom.hom`\n`+++++++ coe_comp`\n`+++++++ coe_id`\n`+++++++ ext`\n`+++++++ forget_map`\n`+++++++ hom_inv_apply`\n`+++++++ inv_hom_apply`\n`+++++++ ofHom_apply`\n`+++++++ ofHom_comp`\n`+++++++ ofHom_id`\n`+++++++++ Hom.Simps.hom`\n`+++++++++ comp_apply`\n`+++++++++ hom_comp`\n`+++++++++ hom_ext`\n`+++++++++ hom_id`\n`+++++++++ hom_ofHom`\n`+++++++++ id_apply`\n`+++++++++ ofHom`\n`+++++++++ ofHom_hom`\n`++++++++++++++-------------- of`\n`+++++++----+----- coe_of`\n`- Fin.nonemptyFiniteLinearOrder`\n`- NonemptyFiniteLinearOrder`\n`- PUnit.nonemptyFiniteLinearOrder`\n`- ULift.nonemptyFiniteLinearOrder`\n`- bundledHom`\n`- forget_map_apply`\n`- instance (X : BddLat) : Lattice X`\n`- instance (X : BddOrd) : PartialOrder X`\n`- instance (X : DistLat) : DistribLattice X`\n`- instance (X : Frm) : Frame X`\n`- instance (X : Lat) : Lattice X`\n`- instance (priority := 100) NonemptyFiniteLinearOrder.toBoundedOrder (α : Type*)`\n`- instance (α : LinOrd) : LinearOrder α`\n`- instance (α : NonemptyFinLinOrd) : NonemptyFiniteLinearOrder α`\n`- instance (α : PartOrd) : PartialOrder α`\n`- instance (α : Preord) : Preorder α`\n`- instance (α : Type*) [NonemptyFiniteLinearOrder α] : NonemptyFiniteLinearOrder αᵒᵈ`\n`- instance : BundledHom @LatticeHom`\n`- instance : BundledHom @OrderHom`\n`- instance : BundledHom.ParentProjection @DistribLattice.toLattice`\n`- instance : BundledHom.ParentProjection @LinearOrder.toPartialOrder`\n`- instance : BundledHom.ParentProjection @NonemptyFiniteLinearOrder.toLinearOrder`\n`- instance : BundledHom.ParentProjection @PartialOrder.toPreorder`\n`- instance : CoeSort DistLat Type*`\n`- instance : CoeSort Frm Type*`\n`- instance : CoeSort Lat Type*`\n`- instance : CoeSort LinOrd Type*`\n`- instance : CoeSort NonemptyFinLinOrd Type*`\n`- instance : CoeSort PartOrd Type*`\n`- instance : CoeSort Preord Type*`\n`- instance : HasForget BddDistLat`\n`- instance : HasForget BddLat`\n`- instance : HasForget DistLat`\n`- instance : HasForget Frm := by`\n`- instance : HasForget Lat`\n`- instance : HasForget LinOrd`\n`- instance : HasForget NonemptyFinLinOrd`\n`- instance : HasForget PartOrd`\n`- instance : HasForget Preord`\n`- instance : HasForget SemilatInfCat`\n`- instance : HasForget SemilatSupCat`\n`- instance : HasForget.{0} SimplexCategory`\n`- instance : Inhabited DistLat`\n`- instance : Inhabited Lat`\n`- instance : Inhabited PartOrd`\n`- instance : LargeCategory.{u} Lat`\n`- instance {A B : NonemptyFinLinOrd.{u}} : FunLike (A ⟶ B) A B`\n`- instance {A B : NonemptyFinLinOrd.{u}} : OrderHomClass (A ⟶ B) A B`\n`- largeCategory`\n`-+++++++ Hom`\n`--- hasForget`\n`---- instFunLike`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (23.00, 0.01)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4168|-23|porting notes|\n\nCurrent commit [d023e3ea61](https://github.com/leanprover-community/mathlib4/commit/d023e3ea612033bb2fa0a33021cee6aa24609d43)\nReference commit [2dd5bb2d33](https://github.com/leanprover-community/mathlib4/commit/2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-04T10:07:15Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d023e3ea612033bb2fa0a33021cee6aa24609d43",
                "additions": 1021,
                "deletions": 488,
                "committedDate": "2025-02-04T10:05:44Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmr_w",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999060/job/36642073599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmroA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999084/job/36642073504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmq2A",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999103/job/36642073304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmrQQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999239/job/36642073409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAkuXQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642041437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmonw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999151/job/36642072735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmolA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999169/job/36642072724"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmohQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999158/job/36642072709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAkrgw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642040707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmtUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999162/job/36642073938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAks6w",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642041067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAksUw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642040915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmqJg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999162/job/36642073126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAkv-g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642041850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBKMCg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642655242"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAnTVw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36642083671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAm3gg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-04T10:06:19Z",
        "deletions": 488,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicTopology/SimplexCategory.lean",
              "additions": 14,
              "deletions": 16
            },
            {
              "path": "Mathlib/AlgebraicTopology/TopologicalSimplex.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/Category/BddDistLat.lean",
              "additions": 10,
              "deletions": 15
            },
            {
              "path": "Mathlib/Order/Category/BddLat.lean",
              "additions": 23,
              "deletions": 38
            },
            {
              "path": "Mathlib/Order/Category/BddOrd.lean",
              "additions": 118,
              "deletions": 37
            },
            {
              "path": "Mathlib/Order/Category/DistLat.lean",
              "additions": 116,
              "deletions": 30
            },
            {
              "path": "Mathlib/Order/Category/FinBddDistLat.lean",
              "additions": 11,
              "deletions": 16
            },
            {
              "path": "Mathlib/Order/Category/FinBoolAlg.lean",
              "additions": 2,
              "deletions": 12
            },
            {
              "path": "Mathlib/Order/Category/FinPartOrd.lean",
              "additions": 50,
              "deletions": 24
            },
            {
              "path": "Mathlib/Order/Category/Frm.lean",
              "additions": 114,
              "deletions": 39
            },
            {
              "path": "Mathlib/Order/Category/Lat.lean",
              "additions": 113,
              "deletions": 35
            },
            {
              "path": "Mathlib/Order/Category/LinOrd.lean",
              "additions": 114,
              "deletions": 29
            },
            {
              "path": "Mathlib/Order/Category/NonemptyFinLinOrd.lean",
              "additions": 71,
              "deletions": 74
            },
            {
              "path": "Mathlib/Order/Category/PartOrd.lean",
              "additions": 128,
              "deletions": 47
            },
            {
              "path": "Mathlib/Order/Category/Preord.lean",
              "additions": 113,
              "deletions": 30
            },
            {
              "path": "Mathlib/Order/Category/Semilat.lean",
              "additions": 12,
              "deletions": 32
            },
            {
              "path": "Mathlib/Topology/Category/CompHaus/Frm.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Category/Locale.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Order/Category/AlexDisc.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Order/Category/FrameAdjunction.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Specialization.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "concreteify-PartOrd",
        "headRefOid": "d023e3ea612033bb2fa0a33021cee6aa24609d43",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6J9zsX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
              "color": "E96E5B",
              "name": "awaiting-CI"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABw0w9Mg",
              "color": "193a9a",
              "name": "awaiting-bench"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21409,
        "potentialMergeCommit": {
          "oid": "c765a55ca7119351322783d376eb5c28de2a2814"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmr_w",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999060/job/36642073599"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmroA",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999084/job/36642073504"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmq2A",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999103/job/36642073304"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmrQQ",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999239/job/36642073409"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAkuXQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642041437"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmonw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999151/job/36642072735"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmolA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999169/job/36642072724"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmohQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999158/job/36642072709"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAkrgw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642040707"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmtUg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999162/job/36642073938"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAks6w",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642041067"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAksUw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642040915"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAmqJg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999162/job/36642073126"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAkv-g",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642041850"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiBKMCg",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642655242"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAnTVw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36642083671"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiAm3gg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Order/Category): concrete category refactor for basic orders",
        "updatedAt": "2025-02-04T10:07:17Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21409",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d023e3ea612033bb2fa0a33021cee6aa24609d43"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDnh",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDno",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDn0",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDn-",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABw0w9Mg",
                "name": "awaiting-bench"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c9v0i",
              "createdAt": "2025-02-04T10:07:15Z",
              "body": "### PR summary [d023e3ea61](https://github.com/leanprover-community/mathlib4/pull/21409/commits/d023e3ea612033bb2fa0a33021cee6aa24609d43)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (X : NonemptyFinLinOrd) : BoundedOrder X`\n`+ instance : Category BddOrd.{u}`\n`+ instance : Category DistLat.{u}`\n`+ instance : Category Frm.{u}`\n`+ instance : Category Lat.{u}`\n`+ instance : Category LinOrd.{u}`\n`+ instance : Category PartOrd.{u}`\n`+ instance : Category Preord.{u}`\n`+ instance : CoeSort DistLat (Type _)`\n`+ instance : CoeSort Frm (Type _)`\n`+ instance : CoeSort Lat (Type _)`\n`+ instance : CoeSort LinOrd (Type _)`\n`+ instance : CoeSort NonemptyFinLinOrd (Type _)`\n`+ instance : CoeSort PartOrd (Type _)`\n`+ instance : CoeSort Preord (Type u)`\n`+ instance : ConcreteCategory BddDistLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddOrd (BoundedOrderHom · ·)`\n`+ instance : ConcreteCategory DistLat (LatticeHom · ·)`\n`+ instance : ConcreteCategory Frm (FrameHom · ·)`\n`+ instance : ConcreteCategory Lat (LatticeHom · ·)`\n`+ instance : ConcreteCategory LinOrd (· →o ·)`\n`+ instance : ConcreteCategory NonemptyFinLinOrd (· →o ·)`\n`+ instance : ConcreteCategory PartOrd (· →o ·)`\n`+ instance : ConcreteCategory Preord (· →o ·)`\n`+ instance : ConcreteCategory SemilatInfCat (InfTopHom · ·)`\n`+ instance : ConcreteCategory SemilatSupCat (SupBotHom · ·)`\n`+ instance : ConcreteCategory SimplexCategory (fun i j => Fin (i.len + 1) →o Fin (j.len + 1))`\n`+ instance : LargeCategory NonemptyFinLinOrd`\n`++ concreteCategory`\n`+++++++ Hom.hom`\n`+++++++ coe_comp`\n`+++++++ coe_id`\n`+++++++ ext`\n`+++++++ forget_map`\n`+++++++ hom_inv_apply`\n`+++++++ inv_hom_apply`\n`+++++++ ofHom_apply`\n`+++++++ ofHom_comp`\n`+++++++ ofHom_id`\n`+++++++++ Hom.Simps.hom`\n`+++++++++ comp_apply`\n`+++++++++ hom_comp`\n`+++++++++ hom_ext`\n`+++++++++ hom_id`\n`+++++++++ hom_ofHom`\n`+++++++++ id_apply`\n`+++++++++ ofHom`\n`+++++++++ ofHom_hom`\n`++++++++++++++-------------- of`\n`+++++++----+----- coe_of`\n`- Fin.nonemptyFiniteLinearOrder`\n`- NonemptyFiniteLinearOrder`\n`- PUnit.nonemptyFiniteLinearOrder`\n`- ULift.nonemptyFiniteLinearOrder`\n`- bundledHom`\n`- forget_map_apply`\n`- instance (X : BddLat) : Lattice X`\n`- instance (X : BddOrd) : PartialOrder X`\n`- instance (X : DistLat) : DistribLattice X`\n`- instance (X : Frm) : Frame X`\n`- instance (X : Lat) : Lattice X`\n`- instance (priority := 100) NonemptyFiniteLinearOrder.toBoundedOrder (α : Type*)`\n`- instance (α : LinOrd) : LinearOrder α`\n`- instance (α : NonemptyFinLinOrd) : NonemptyFiniteLinearOrder α`\n`- instance (α : PartOrd) : PartialOrder α`\n`- instance (α : Preord) : Preorder α`\n`- instance (α : Type*) [NonemptyFiniteLinearOrder α] : NonemptyFiniteLinearOrder αᵒᵈ`\n`- instance : BundledHom @LatticeHom`\n`- instance : BundledHom @OrderHom`\n`- instance : BundledHom.ParentProjection @DistribLattice.toLattice`\n`- instance : BundledHom.ParentProjection @LinearOrder.toPartialOrder`\n`- instance : BundledHom.ParentProjection @NonemptyFiniteLinearOrder.toLinearOrder`\n`- instance : BundledHom.ParentProjection @PartialOrder.toPreorder`\n`- instance : CoeSort DistLat Type*`\n`- instance : CoeSort Frm Type*`\n`- instance : CoeSort Lat Type*`\n`- instance : CoeSort LinOrd Type*`\n`- instance : CoeSort NonemptyFinLinOrd Type*`\n`- instance : CoeSort PartOrd Type*`\n`- instance : CoeSort Preord Type*`\n`- instance : HasForget BddDistLat`\n`- instance : HasForget BddLat`\n`- instance : HasForget DistLat`\n`- instance : HasForget Frm := by`\n`- instance : HasForget Lat`\n`- instance : HasForget LinOrd`\n`- instance : HasForget NonemptyFinLinOrd`\n`- instance : HasForget PartOrd`\n`- instance : HasForget Preord`\n`- instance : HasForget SemilatInfCat`\n`- instance : HasForget SemilatSupCat`\n`- instance : HasForget.{0} SimplexCategory`\n`- instance : Inhabited DistLat`\n`- instance : Inhabited Lat`\n`- instance : Inhabited PartOrd`\n`- instance : LargeCategory.{u} Lat`\n`- instance {A B : NonemptyFinLinOrd.{u}} : FunLike (A ⟶ B) A B`\n`- instance {A B : NonemptyFinLinOrd.{u}} : OrderHomClass (A ⟶ B) A B`\n`- largeCategory`\n`-+++++++ Hom`\n`--- hasForget`\n`---- instFunLike`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (23.00, 0.01)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4168|-23|porting notes|\n\nCurrent commit [d023e3ea61](https://github.com/leanprover-community/mathlib4/commit/d023e3ea612033bb2fa0a33021cee6aa24609d43)\nReference commit [2dd5bb2d33](https://github.com/leanprover-community/mathlib4/commit/2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        }
      }
    }
  }
}
