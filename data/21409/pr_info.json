{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1584,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR implements `Hom` classes and `ConcreteCategory` instances for the following categories of orders:\r\n* `Preord`\r\n* `PartOrd`, `FinPartOrd`\r\n* `Lat`\r\n* `DistLat`\r\n* `LinOrd`, `NonemptyFinLinOrd`\r\n* `BddOrd`\r\n* `Frm`\r\n* `BddLat`\r\n* `BddDistLat`, `FinBddDistLat`\r\n* `BoolAlg`, `FinBoolAlg`\r\n* `HeytAlg`\r\n\r\nIt also replaces `HasForget` instances with `ConcreteCategory` instances for the following categories of orders:\r\n* `SemilatSupCat`, `SemilatInfCat`\r\n* `SimplexCategory`\r\n\r\nThe following order categories still need to be refactored:\r\n* `CompleteLat`\r\n* `ωCPO`\r\n\r\nZulip thread: https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Concrete.20category.20class.20redesign\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 26,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6c9v0i",
              "body": "### PR summary [8711c27063](https://github.com/leanprover-community/mathlib4/pull/21409/commits/8711c270631e8621ee06104879f6b120f2f1b867)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.Category.Preord | 401 | 400 | -1 (-0.25%) |\n| Mathlib.Order.Category.PartOrd | 406 | 405 | -1 (-0.25%) |\n| Mathlib.Order.Category.Lat | 409 | 408 | -1 (-0.24%) |\n| Mathlib.Order.Category.Semilat | 409 | 408 | -1 (-0.24%) |\n| Mathlib.Order.Category.BddOrd | 410 | 409 | -1 (-0.24%) |\n| Mathlib.Order.Category.DistLat | 410 | 409 | -1 (-0.24%) |\n| Mathlib.Order.Category.LinOrd | 410 | 409 | -1 (-0.24%) |\n| Mathlib.Order.Category.Frm | 416 | 415 | -1 (-0.24%) |\n| Mathlib.Order.Category.BddLat | 418 | 417 | -1 (-0.24%) |\n| Mathlib.Order.Category.BddDistLat | 420 | 419 | -1 (-0.24%) |\n| Mathlib.Order.Category.HeytAlg | 422 | 421 | -1 (-0.24%) |\n| Mathlib.Order.Category.BoolAlg | 429 | 428 | -1 (-0.23%) |\n| Mathlib.Order.Category.FinPartOrd | 540 | 539 | -1 (-0.19%) |\n| Mathlib.Order.Category.FinBddDistLat | 586 | 585 | -1 (-0.17%) |\n| Mathlib.Order.Category.FinBoolAlg | 599 | 598 | -1 (-0.17%) |\n| Mathlib.Algebra.Category.BoolRing | 633 | 632 | -1 (-0.16%) |\n| Mathlib.Order.Category.NonemptyFinLinOrd | 641 | 640 | -1 (-0.16%) |\n| Mathlib.Topology.Specialization | 771 | 770 | -1 (-0.13%) |\n| Mathlib.Topology.Order.Category.AlexDisc | 772 | 771 | -1 (-0.13%) |\n| Mathlib.AlgebraicTopology.SimplexCategory | 820 | 819 | -1 (-0.12%) |\n| Mathlib.AlgebraicTopology.SimplicialSet.Nerve | 841 | 840 | -1 (-0.12%) |\n| Mathlib.AlgebraicTopology.TopologicalSimplex | 1245 | 1244 | -1 (-0.08%) |\n| Mathlib.Topology.Category.CompHaus.Frm | 1502 | 1501 | -1 (-0.07%) |\n| Mathlib.Topology.Category.Locale | 1503 | 1502 | -1 (-0.07%) |\n| Mathlib.Topology.Order.Category.FrameAdjunction | 1504 | 1503 | -1 (-0.07%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>72 files</summary> `Mathlib.Algebra.Category.BoolRing` `Mathlib.AlgebraicTopology.AlternatingFaceMapComplex` `Mathlib.AlgebraicTopology.CechNerve` `Mathlib.AlgebraicTopology.DoldKan.Decomposition` `Mathlib.AlgebraicTopology.DoldKan.Degeneracies` `Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive` `Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian` `Mathlib.AlgebraicTopology.DoldKan.Equivalence` `Mathlib.AlgebraicTopology.DoldKan.Faces` `Mathlib.AlgebraicTopology.DoldKan.FunctorGamma` `Mathlib.AlgebraicTopology.DoldKan.FunctorN` `Mathlib.AlgebraicTopology.DoldKan.GammaCompN` `Mathlib.AlgebraicTopology.DoldKan.Homotopies` `Mathlib.AlgebraicTopology.DoldKan.HomotopyEquivalence` `Mathlib.AlgebraicTopology.DoldKan.NCompGamma` `Mathlib.AlgebraicTopology.DoldKan.NReflectsIso` `Mathlib.AlgebraicTopology.DoldKan.Normalized` `Mathlib.AlgebraicTopology.DoldKan.Notations` `Mathlib.AlgebraicTopology.DoldKan.PInfty` `Mathlib.AlgebraicTopology.DoldKan.Projections` `Mathlib.AlgebraicTopology.DoldKan.SplitSimplicialObject` `Mathlib.AlgebraicTopology.ExtraDegeneracy` `Mathlib.AlgebraicTopology.MooreComplex` `Mathlib.AlgebraicTopology.Quasicategory.Basic` `Mathlib.AlgebraicTopology.Quasicategory.Nerve` `Mathlib.AlgebraicTopology.Quasicategory.StrictSegal` `Mathlib.AlgebraicTopology.SimplexCategory` `Mathlib.AlgebraicTopology.SimplicialCategory.Basic` `Mathlib.AlgebraicTopology.SimplicialCategory.SimplicialObject` `Mathlib.AlgebraicTopology.SimplicialNerve` `Mathlib.AlgebraicTopology.SimplicialObject.Basic` `Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal` `Mathlib.AlgebraicTopology.SimplicialObject.Split` `Mathlib.AlgebraicTopology.SimplicialSet.Basic` `Mathlib.AlgebraicTopology.SimplicialSet.Boundary` `Mathlib.AlgebraicTopology.SimplicialSet.Coskeletal` `Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat` `Mathlib.AlgebraicTopology.SimplicialSet.Horn` `Mathlib.AlgebraicTopology.SimplicialSet.KanComplex` `Mathlib.AlgebraicTopology.SimplicialSet.Monoidal` `Mathlib.AlgebraicTopology.SimplicialSet.Nerve` `Mathlib.AlgebraicTopology.SimplicialSet.Path` `Mathlib.AlgebraicTopology.SimplicialSet.StdSimplex` `Mathlib.AlgebraicTopology.SimplicialSet.StrictSegal` `Mathlib.AlgebraicTopology.SingularSet` `Mathlib.AlgebraicTopology.TopologicalSimplex` `Mathlib.CategoryTheory.Idempotents.SimplicialObject` `Mathlib.Order.Category.BddDistLat` `Mathlib.Order.Category.BddLat` `Mathlib.Order.Category.BddOrd` `Mathlib.Order.Category.BoolAlg` `Mathlib.Order.Category.DistLat` `Mathlib.Order.Category.FinBddDistLat` `Mathlib.Order.Category.FinBoolAlg` `Mathlib.Order.Category.FinPartOrd` `Mathlib.Order.Category.Frm` `Mathlib.Order.Category.HeytAlg` `Mathlib.Order.Category.Lat` `Mathlib.Order.Category.LinOrd` `Mathlib.Order.Category.NonemptyFinLinOrd` `Mathlib.Order.Category.PartOrd` `Mathlib.Order.Category.Preord` `Mathlib.Order.Category.Semilat` `Mathlib.RepresentationTheory.GroupCohomology.Basic` `Mathlib.RepresentationTheory.GroupCohomology.Hilbert90` `Mathlib.RepresentationTheory.GroupCohomology.LowDegree` `Mathlib.RepresentationTheory.GroupCohomology.Resolution` `Mathlib.Topology.Category.CompHaus.Frm` `Mathlib.Topology.Category.Locale` `Mathlib.Topology.Order.Category.AlexDisc` `Mathlib.Topology.Order.Category.FrameAdjunction` `Mathlib.Topology.Specialization`</details>|-1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (X : NonemptyFinLinOrd) : BoundedOrder X`\n`+ instance : Category BddDistLat.{u}`\n`+ instance : Category BddOrd.{u}`\n`+ instance : Category BoolAlg.{u}`\n`+ instance : Category DistLat.{u}`\n`+ instance : Category FinBddDistLat.{u}`\n`+ instance : Category Frm.{u}`\n`+ instance : Category HeytAlg.{u}`\n`+ instance : Category Lat.{u}`\n`+ instance : Category LinOrd.{u}`\n`+ instance : Category PartOrd.{u}`\n`+ instance : Category Preord.{u}`\n`+ instance : CoeSort BoolAlg (Type _)`\n`+ instance : CoeSort DistLat.{u} (Type u)`\n`+ instance : CoeSort Frm (Type _)`\n`+ instance : CoeSort HeytAlg (Type _)`\n`+ instance : CoeSort Lat (Type _)`\n`+ instance : CoeSort LinOrd (Type _)`\n`+ instance : CoeSort NonemptyFinLinOrd (Type _)`\n`+ instance : CoeSort PartOrd (Type _)`\n`+ instance : CoeSort Preord (Type u)`\n`+ instance : ConcreteCategory BddDistLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddOrd (BoundedOrderHom · ·)`\n`+ instance : ConcreteCategory BoolAlg (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory DistLat (LatticeHom · ·)`\n`+ instance : ConcreteCategory FinBddDistLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory Frm (FrameHom · ·)`\n`+ instance : ConcreteCategory HeytAlg (HeytingHom · ·)`\n`+ instance : ConcreteCategory Lat (LatticeHom · ·)`\n`+ instance : ConcreteCategory LinOrd (· →o ·)`\n`+ instance : ConcreteCategory NonemptyFinLinOrd (· →o ·)`\n`+ instance : ConcreteCategory PartOrd (· →o ·)`\n`+ instance : ConcreteCategory Preord (· →o ·)`\n`+ instance : ConcreteCategory SemilatInfCat (InfTopHom · ·)`\n`+ instance : ConcreteCategory SemilatSupCat (SupBotHom · ·)`\n`+ instance : ConcreteCategory SimplexCategory (fun i j => Fin (i.len + 1) →o Fin (j.len + 1))`\n`+ instance : LargeCategory NonemptyFinLinOrd`\n`++ concreteCategory`\n`+++++++++++ coe_comp`\n`+++++++++++ coe_id`\n`+++++++++++ forget_map`\n`+++++++++++ hom_inv_apply`\n`+++++++++++ inv_hom_apply`\n`+++++++++++ ofHom_apply`\n`+++++++++++ ofHom_comp`\n`+++++++++++ ofHom_id`\n`++++++++++++ Hom.hom`\n`++++++++++++ ext`\n`+++++++++++++ hom_ofHom`\n`+++++++++++++ ofHom_hom`\n`++++++++++++++ Hom.Simps.hom`\n`++++++++++++++ comp_apply`\n`++++++++++++++ hom_comp`\n`++++++++++++++ hom_ext`\n`++++++++++++++ hom_id`\n`++++++++++++++ id_apply`\n`++++++++++++++ ofHom`\n`+++++++++++++++++----------------- of`\n`+++++++++------+----- coe_of`\n`- Fin.nonemptyFiniteLinearOrder`\n`- NonemptyFiniteLinearOrder`\n`- PUnit.nonemptyFiniteLinearOrder`\n`- ULift.nonemptyFiniteLinearOrder`\n`- forget_map_apply`\n`- instBooleanAlgebra`\n`- instBoundedLatticeHomClass`\n`- instance (X : BddLat) : Lattice X`\n`- instance (X : BddOrd) : PartialOrder X`\n`- instance (X : DistLat) : DistribLattice X`\n`- instance (X : FinBoolAlg) : BooleanAlgebra X`\n`- instance (X : Frm) : Frame X`\n`- instance (X : HeytAlg) : HeytingAlgebra X`\n`- instance (X : Lat) : Lattice X`\n`- instance (priority := 100) NonemptyFiniteLinearOrder.toBoundedOrder (α : Type*)`\n`- instance (α : LinOrd) : LinearOrder α`\n`- instance (α : NonemptyFinLinOrd) : NonemptyFiniteLinearOrder α`\n`- instance (α : PartOrd) : PartialOrder α`\n`- instance (α : Preord) : Preorder α`\n`- instance (α : Type*) [NonemptyFiniteLinearOrder α] : NonemptyFiniteLinearOrder αᵒᵈ`\n`- instance : BundledHom @LatticeHom`\n`- instance : BundledHom @OrderHom`\n`- instance : BundledHom.ParentProjection @DistribLattice.toLattice`\n`- instance : BundledHom.ParentProjection @LinearOrder.toPartialOrder`\n`- instance : BundledHom.ParentProjection @NonemptyFiniteLinearOrder.toLinearOrder`\n`- instance : BundledHom.ParentProjection @PartialOrder.toPreorder`\n`- instance : CoeSort BoolAlg Type*`\n`- instance : CoeSort DistLat Type*`\n`- instance : CoeSort Frm Type*`\n`- instance : CoeSort HeytAlg Type*`\n`- instance : CoeSort Lat Type*`\n`- instance : CoeSort LinOrd Type*`\n`- instance : CoeSort NonemptyFinLinOrd Type*`\n`- instance : CoeSort PartOrd Type*`\n`- instance : CoeSort Preord Type*`\n`- instance : HasForget BddDistLat`\n`- instance : HasForget BddLat`\n`- instance : HasForget BoolAlg`\n`- instance : HasForget DistLat`\n`- instance : HasForget Frm := by`\n`- instance : HasForget HeytAlg := by`\n`- instance : HasForget Lat`\n`- instance : HasForget LinOrd`\n`- instance : HasForget NonemptyFinLinOrd`\n`- instance : HasForget PartOrd`\n`- instance : HasForget Preord`\n`- instance : HasForget SemilatInfCat`\n`- instance : HasForget SemilatSupCat`\n`- instance : HasForget.{0} SimplexCategory`\n`- instance : Inhabited DistLat`\n`- instance : Inhabited Lat`\n`- instance : Inhabited PartOrd`\n`- instance : LargeCategory.{u} BddDistLat`\n`- instance : LargeCategory.{u} BoolAlg`\n`- instance : LargeCategory.{u} Lat`\n`- instance {A B : NonemptyFinLinOrd.{u}} : FunLike (A ⟶ B) A B`\n`- instance {A B : NonemptyFinLinOrd.{u}} : OrderHomClass (A ⟶ B) A B`\n`- instance {X Y : HeytAlg.{u}} : FunLike (X ⟶ Y) ↑X ↑Y`\n`- instance {X Y : HeytAlg.{u}} : HeytingHomClass (X ⟶ Y) ↑X ↑Y`\n`-++++++++++++ Hom`\n`-+-+ hasForgetToBddDistLat`\n`-- bundledHom`\n`-- largeCategory`\n`---- hasForget`\n`----- instFunLike`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (29.00, 0.01)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4162|-29|porting notes|\n\nCurrent commit [8711c27063](https://github.com/leanprover-community/mathlib4/commit/8711c270631e8621ee06104879f6b120f2f1b867)\nReference commit [2dd5bb2d33](https://github.com/leanprover-community/mathlib4/commit/2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-04T10:07:15Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c-Mc6",
              "body": "!bench",
              "createdAt": "2025-02-04T10:53:53Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c-dNK",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/c0168192-ddcb-47fa-8ff1-c64be878ba76) for commit e187402aad26317e9f6997ec6aeff6f1c6a1649b.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/b87280e6-8612-4e00-9533-e98d82c55c29/to/c0168192-ddcb-47fa-8ff1-c64be878ba76) against commit 2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc:\n```diff\n  Benchmark                                        Metric         Change\n  ======================================================================\n- ~Mathlib.AlgebraicTopology.SimplicialSet.Nerve   instructions   137.4%\n- ~Mathlib.Order.Category.DistLat                  instructions   270.8%\n- ~Mathlib.Order.Category.Lat                      instructions   172.3%\n- ~Mathlib.Order.Category.LinOrd                   instructions    77.8%\n- ~Mathlib.Order.Category.NonemptyFinLinOrd        instructions    96.7%\n```",
              "createdAt": "2025-02-04T11:23:08Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c-df6",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+144.114⬝10⁹|(+0.09%)|\n|`lint`|-22.227⬝10⁹|(-0.29%)|\n|`Mathlib.Order.Category.NonemptyFinLinOrd`|+30.73⬝10⁹|(+96.73%)|\n|`Mathlib.Order.Category.DistLat`|+26.274⬝10⁹|(+270.77%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.Nerve`|+25.669⬝10⁹|(+137.44%)|\n|`Mathlib.Order.Category.Lat`|+21.163⬝10⁹|(+172.25%)|\n|`Mathlib.Order.Category.LinOrd`|+10.848⬝10⁹|(+77.77%)|\n|`Mathlib.Order.Category.PartOrd`|+9.470⬝10⁹|(+78.00%)|\n|`Mathlib.Order.Category.BddOrd`|+6.193⬝10⁹|(+36.63%)|\n|`Mathlib.Order.Category.Frm`|+5.768⬝10⁹|(+121.26%)|\n|`Mathlib.Order.Category.Preord`|+4.626⬝10⁹|(+45.86%)|\n|`Mathlib.Order.Category.FinPartOrd`|+3.959⬝10⁹|(+28.83%)|\n|`Mathlib.Topology.Order.Category.AlexDisc`|+2.322⬝10⁹|(+9.27%)|\n<details><summary>3 files, Instructions +1.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.AlgebraicTopology.SimplexCategory`|+1.561⬝10⁹|(+2.98%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat`|+1.456⬝10⁹|(+2.89%)|\n|`Mathlib.Topology.Order.Category.FrameAdjunction`|+1.300⬝10⁹|(+5.07%)|\n</details>\n\n<details><summary>2 files, Instructions -2.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.FinBoolAlg`|-1.36⬝10⁹|(-2.88%)|\n|`Mathlib.Order.Category.BddLat`|-1.340⬝10⁹|(-4.30%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.BddDistLat`|-2.426⬝10⁹|(-12.52%)|\n|`Mathlib.Order.Category.FinBddDistLat`|-3.452⬝10⁹|(-13.57%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13134362637)",
              "createdAt": "2025-02-04T11:23:32Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c-luw",
              "body": "Most of those slowdowns are in files that grew quite a bit. Looks like `AlgebraicTopology.SimplicialSet.Nerve` got slower due to the `aesop` calls in `nerve` being slow. They can be replaced with `rfl` and become fast, but I think I'll try and figure out if I can make `aesop` faster.",
              "createdAt": "2025-02-04T11:39:00Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c_HoH",
              "body": "> Most of those slowdowns are in files that grew quite a bit. Looks like `AlgebraicTopology.SimplicialSet.Nerve` got slower due to the `aesop` calls in `nerve` being slow. They can be replaced with `rfl` and become fast, but I think I'll try and figure out if I can make `aesop` faster.\r\n\r\nAdding a `Hom` structure for `SimplexCategory` did not seem to help, and I still don't know how to figure out where `simp` spends all its time. I'll just do the proofs by hand then.",
              "createdAt": "2025-02-04T12:40:26Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c_LIv",
              "body": "I've been looking at `BoolAlg` and come to the conclusion that `Hom` structures for `BddLat` and `BddDistLat` would be helpful. One moment please...",
              "createdAt": "2025-02-04T12:46:52Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c_iuS",
              "body": "Oh, interesting. Looking at a timeout in `FinBddDistLat` suggests that I might actually be going down the wrong way with bundling instances. Namely, previously we implemented `NonemptyFinLinOrd` as a class `NonemptyFiniteLinearOrder` plus a structure bundling a type `X` with an instance `NonemptyFiniteLinearOrder X`. But now I'm getting slow equality checks on `(dual.obj (dual.obj X)).carrier = X.carrierᵒᵈᵒᵈ`. Even though these should be exactly the same thing, it ends up checking that each order class on `dual.obj X` is the same as `Xᵒᵈ`...",
              "createdAt": "2025-02-04T13:22:44Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c_kLa",
              "body": "(by the way, this is a refactor PR, not a feat PR, right?)",
              "createdAt": "2025-02-04T13:24:08Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c_4QO",
              "body": "> Oh, interesting. Looking at a timeout in `FinBddDistLat` suggests that I might actually be going down the wrong way with bundling instances. Namely, previously we implemented `NonemptyFinLinOrd` as a class `NonemptyFiniteLinearOrder` plus a structure bundling a type `X` with an instance `NonemptyFiniteLinearOrder X`. But now I'm getting slow equality checks on `(dual.obj (dual.obj X)).carrier = X.carrierᵒᵈᵒᵈ`. Even though these should be exactly the same thing, it ends up checking that each order class on `dual.obj X` is the same as `Xᵒᵈ`...\r\n\r\nNope, changing this doesn't seem to help much...",
              "createdAt": "2025-02-04T13:40:02Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dALjQ",
              "body": "Huh, if I turn `@[simps]` on `dual` into `@[simps map]`, it looks like aesop gets 2x faster for quite a few of the categories. (In general I think we should be more careful with `@[simps]` lemmas on `Functor.obj`s.)",
              "createdAt": "2025-02-04T14:05:05Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dAY4m",
              "body": "In the process of investigation I ended up adding `Hom` structures for most of the order categories anyway. Seems like a shame to waste that effort, so now they're part of the PR. Should I just include `CompleteLattice` and `ωCPO` to be complete? :)",
              "createdAt": "2025-02-04T14:26:09Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dAp4x",
              "body": "!bench",
              "createdAt": "2025-02-04T14:44:43Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dA-7w",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/e07673e5-c875-4ca6-a84e-0ee1cf49094b) for commit 98ccd36fa08cc971aae660e52030a41954d81ea9.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/b87280e6-8612-4e00-9533-e98d82c55c29/to/e07673e5-c875-4ca6-a84e-0ee1cf49094b) against commit 2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc:\n```diff\n  Benchmark                                        Metric         Change\n  ======================================================================\n+ ~Mathlib.AlgebraicTopology.SimplicialSet.Nerve   instructions   -62.8%\n- ~Mathlib.Order.Category.BddDistLat               instructions    52.6%\n- ~Mathlib.Order.Category.BoolAlg                  instructions    64.0%\n- ~Mathlib.Order.Category.DistLat                  instructions   268.7%\n- ~Mathlib.Order.Category.NonemptyFinLinOrd        instructions    86.0%\n```",
              "createdAt": "2025-02-04T15:15:50Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dA_N6",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+137.918⬝10⁹|(+0.09%)|\n|`lint`|-19.659⬝10⁹|(-0.25%)|\n<details><summary>2 files, Instructions +26.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.NonemptyFinLinOrd`|+26.734⬝10⁹|(+85.99%)|\n|`Mathlib.Order.Category.DistLat`|+26.71⬝10⁹|(+268.67%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.BoolAlg`|+17.60⬝10⁹|(+64.02%)|\n|`Mathlib.Order.Category.BddDistLat`|+10.192⬝10⁹|(+52.62%)|\n|`Mathlib.Order.Category.PartOrd`|+8.271⬝10⁹|(+68.12%)|\n<details><summary>4 files, Instructions +7.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.LinOrd`|+7.928⬝10⁹|(+56.83%)|\n|`Mathlib.Order.Category.BddLat`|+7.796⬝10⁹|(+25.02%)|\n|`Mathlib.Order.Category.FinBddDistLat`|+7.426⬝10⁹|(+29.21%)|\n|`Mathlib.Order.Category.FinBoolAlg`|+7.146⬝10⁹|(+19.89%)|\n</details>\n\n<details><summary>2 files, Instructions +5.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Frm`|+5.768⬝10⁹|(+121.26%)|\n|`Mathlib.Order.Category.Lat`|+5.699⬝10⁹|(+46.38%)|\n</details>\n\n<details><summary>3 files, Instructions +3.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Preord`|+3.810⬝10⁹|(+37.77%)|\n|`Mathlib.Order.Category.HeytAlg`|+3.807⬝10⁹|(+55.34%)|\n|`Mathlib.Order.Category.BddOrd`|+3.549⬝10⁹|(+20.99%)|\n</details>\n\n<details><summary>2 files, Instructions +2.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.FinPartOrd`|+2.401⬝10⁹|(+17.48%)|\n|`Mathlib.Topology.Order.Category.AlexDisc`|+2.321⬝10⁹|(+9.27%)|\n</details>\n\n<details><summary>3 files, Instructions +1.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat`|+1.576⬝10⁹|(+3.13%)|\n|`Mathlib.AlgebraicTopology.SimplexCategory`|+1.553⬝10⁹|(+2.97%)|\n|`Mathlib.Topology.Order.Category.FrameAdjunction`|+1.303⬝10⁹|(+5.08%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Algebra.Category.BoolRing`|-1.493⬝10⁹|(-6.44%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.Nerve`|-11.726⬝10⁹|(-62.78%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13138677211)",
              "createdAt": "2025-02-04T15:16:16Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dBQYg",
              "body": "The extra slowdown in `DistLat` was because I forgot a `@[simps map]` there. Otherwise it seems to be just files getting bigger and therefore slower. (Assuming I am debugging the profiler trace / `simp` trace correctly...)",
              "createdAt": "2025-02-04T15:40:59Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dEw8d",
              "body": "!bench",
              "createdAt": "2025-02-04T23:12:57Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dE7AN",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/2a791737-2317-424e-b449-f68c955790f2) for commit 8711c270631e8621ee06104879f6b120f2f1b867.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/b87280e6-8612-4e00-9533-e98d82c55c29/to/2a791737-2317-424e-b449-f68c955790f2) against commit 2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc:\n```diff\n  Benchmark                                        Metric         Change\n  ======================================================================\n+ ~Mathlib.AlgebraicTopology.SimplicialSet.Nerve   instructions   -62.8%\n- ~Mathlib.Order.Category.BddDistLat               instructions    52.4%\n- ~Mathlib.Order.Category.BoolAlg                  instructions    64.0%\n- ~Mathlib.Order.Category.NonemptyFinLinOrd        instructions    86.0%\n```",
              "createdAt": "2025-02-04T23:42:22Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dE7Sn",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+117.330⬝10⁹|(+0.07%)|\n|`lint`|-19.472⬝10⁹|(-0.25%)|\n|`Mathlib.Order.Category.NonemptyFinLinOrd`|+26.736⬝10⁹|(+85.99%)|\n|`Mathlib.Order.Category.BoolAlg`|+17.61⬝10⁹|(+64.03%)|\n|`Mathlib.Order.Category.BddDistLat`|+10.153⬝10⁹|(+52.42%)|\n|`Mathlib.Order.Category.PartOrd`|+8.270⬝10⁹|(+68.11%)|\n<details><summary>4 files, Instructions +7.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.LinOrd`|+7.929⬝10⁹|(+56.84%)|\n|`Mathlib.Order.Category.BddLat`|+7.794⬝10⁹|(+25.02%)|\n|`Mathlib.Order.Category.FinBddDistLat`|+7.393⬝10⁹|(+29.08%)|\n|`Mathlib.Order.Category.FinBoolAlg`|+7.143⬝10⁹|(+19.88%)|\n</details>\n\n<details><summary>3 files, Instructions +5.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Frm`|+5.768⬝10⁹|(+121.26%)|\n|`Mathlib.Order.Category.Lat`|+5.698⬝10⁹|(+46.38%)|\n|`Mathlib.Order.Category.DistLat`|+5.600⬝10⁹|(+57.72%)|\n</details>\n\n<details><summary>3 files, Instructions +3.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Preord`|+3.810⬝10⁹|(+37.77%)|\n|`Mathlib.Order.Category.HeytAlg`|+3.806⬝10⁹|(+55.33%)|\n|`Mathlib.Order.Category.BddOrd`|+3.550⬝10⁹|(+20.99%)|\n</details>\n\n<details><summary>2 files, Instructions +2.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.FinPartOrd`|+2.401⬝10⁹|(+17.48%)|\n|`Mathlib.Topology.Order.Category.AlexDisc`|+2.323⬝10⁹|(+9.28%)|\n</details>\n\n<details><summary>3 files, Instructions +1.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat`|+1.578⬝10⁹|(+3.14%)|\n|`Mathlib.AlgebraicTopology.SimplexCategory`|+1.553⬝10⁹|(+2.97%)|\n|`Mathlib.Topology.Order.Category.FrameAdjunction`|+1.303⬝10⁹|(+5.08%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Algebra.Category.BoolRing`|-1.496⬝10⁹|(-6.46%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.Nerve`|-11.726⬝10⁹|(-62.78%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13146995922)",
              "createdAt": "2025-02-04T23:42:45Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dFt38",
              "body": "> Huh, if I turn `@[simps]` on `dual` into `@[simps map]`, it looks like aesop gets 2x faster for quite a few of the categories. (In general I think we should be more careful with `@[simps]` lemmas on `Functor.obj`s.)\r\n\r\nInteresting... I often find `Functor.obj` lemmas very helpful in `dsimp`, but I can see why they might be harmful in general. Indeed this isn't so surprising because these lemmas are equalities on objects, which would be evil except for the case where they're definitional. I'd view removing the \"simp by rfl\" lemmas on concrete `Functor.obj` as unfortunate, since these are really nice pedagogically in the typical case. I wonder if there's some modification we can make to `aesop_cat` to get the best of both worlds here?",
              "createdAt": "2025-02-05T01:48:58Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dINB3",
              "body": "> Interesting... I often find `Functor.obj` lemmas very helpful in `dsimp`, but I can see why they might be harmful in general. Indeed this isn't so surprising because these lemmas are equalities on objects, which would be evil except for the case where they're definitional.\r\n\r\nTrue! Although `@[simps]` is supposed to generate only definitional equalities which are not evil :) From a more mechanical perspective, the issue seems to be that we apply these kind of `Functor.obj` lemmas to our terms, but in the `simp` lemmas themselves we still see quite a few `F.obj`. If the definitional equality isn't reducible, `simp` won't see through that and we can get stuck in a non-confluent corner.\r\n\r\n> I'd view removing the \"simp by rfl\" lemmas on concrete `Functor.obj` as unfortunate, since these are really nice pedagogically in the typical case. I wonder if there's some modification we can make to `aesop_cat` to get the best of both worlds here?\r\n\r\nOn the longer term, we could be using ematching instead of rewriting for our equalities, that would get rid of all of these confluence issues. For now, perhaps we can split the lemmas up into multiple simp sets: call `erase_aesop_rules` on the `Functor.obj` lemmas, but still allow them in full-on `simp`? (Have never tried removing lemmas from `aesop`, so unsure if that's the right way to go.)",
              "createdAt": "2025-02-05T09:21:20Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dIPOU",
              "body": "What about making a version of `simps` that only creates `dsimp` lemmas? Something like `dsimps`",
              "createdAt": "2025-02-05T09:25:17Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6dIRhh",
              "body": "Not sure I understand. All lemmas created by `simps` are supposed to be `dsimp` lemmas already, no?",
              "createdAt": "2025-02-05T09:29:18Z",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d023e3ea612033bb2fa0a33021cee6aa24609d43",
                "additions": 1021,
                "deletions": 488,
                "committedDate": "2025-02-04T10:05:44Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmr_w",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999060/job/36642073599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmroA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999084/job/36642073504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmq2A",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999103/job/36642073304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmrQQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999239/job/36642073409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAkuXQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642041437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmonw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999151/job/36642072735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmolA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999169/job/36642072724"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmohQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999158/job/36642072709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAkrgw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642040707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmtUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999162/job/36642073938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAks6w",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642041067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAksUw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642040915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAmqJg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132999162/job/36642073126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAkv-g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989213/job/36642041850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBKMCg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13132989212/job/36642655242"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAnTVw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36642083671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiAm3gg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e187402aad26317e9f6997ec6aeff6f1c6a1649b",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2025-02-04T10:20:32Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaCSg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133266114/job/36642914890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiGTtlQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13134914276/job/36648054165"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIHAEA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135518607/job/36649943056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIH0zg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135522834/job/36649956558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIOqkw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135558697/job/36650068627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIR9gw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135576890/job/36650122627"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaNAQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133267302/job/36642917633"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiGTuEw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13134914298/job/36648054291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIG-hg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135518595/job/36649942662"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIH0lg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135522817/job/36649956502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIOsHQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135558684/job/36650069021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIR9rg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135576872/job/36650122670"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaNDw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133267307/job/36642917647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiGTuMQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13134914296/job/36648054321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIG-sQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135518599/job/36649942705"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIH0ow",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135522832/job/36649956515"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIOr9g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135558700/job/36650068982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIR9mw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135576885/job/36650122651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaCLw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133266113/job/36642914863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaM7A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133267280/job/36642917612"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaEUQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133266114/job/36642915409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaDvQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133266113/job/36642915261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaOOg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133267280/job/36642917946"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBaGLg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133266114/job/36642915886"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiB9eoA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13133266113/job/36643495584"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBavKQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36642926377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiBcZVA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "79bfe0df717809ddc598038030b9ec5d3cd931c9",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-02-04T12:36:04Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "Vierkantor@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUUGw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589721/job/36650161179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiImavg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135691502/job/36650457790"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUQJA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589781/job/36650160164"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiImZfQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135691501/job/36650457469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUQQQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589784/job/36650160193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiImZaw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135691506/job/36650457451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUScg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589720/job/36650160754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUP2g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589776/job/36650160090"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUT3Q",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589720/job/36650161117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUSXg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589721/job/36650160734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIURlw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589776/job/36650160535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInC2Q",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589720/job/36650468057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUVsQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135589721/job/36650161585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIUwEA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36650168336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIV5Ng",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "cecce79044abbf87184024d20d09c077717f9f65",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-02-04T12:41:44Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "Vierkantor@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIm_2A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694637/job/36650467288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiI4YhA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135785049/job/36650752132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIxuJQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135750818/job/36650642981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIm_1A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694839/job/36650467284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIxvRg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135750820/job/36650643270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIm_og",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694837/job/36650467234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIxt8g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135750815/job/36650642930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInGtg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694643/job/36650469046"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInB_Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694835/job/36650467837"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIm-KQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694637/job/36650466857"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInFJg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694643/job/36650468646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInAiw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694835/job/36650467467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInBxA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694637/job/36650467780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiKKDpQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13135694643/job/36652090277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiInc1g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36650474710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiIoGsw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7764ef241f08f4c73ea742016622d1f0d964a2c5",
                "additions": 558,
                "deletions": 176,
                "committedDate": "2025-02-04T14:20:00Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1a31f212e44764c5d91c23b4380f2ff66d7e9fa",
                "additions": 12,
                "deletions": 12,
                "committedDate": "2025-02-04T14:20:11Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b147960bacbb3657693bd0872289626d0dcb01ee",
                "additions": 3,
                "deletions": 0,
                "committedDate": "2025-02-04T14:22:40Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObd7Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137583691/job/36656569837"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiOb6TQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137586935/job/36656577101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObtzQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137585621/job/36656573901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObt8w",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137585620/job/36656573939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObbQA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137583675/job/36656569152"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObvxg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137585623/job/36656574406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObczw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137583675/job/36656569551"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObbag",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137583691/job/36656569194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObuLA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137585623/job/36656573996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPF1EA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137583675/job/36657263888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiObf4Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137583691/job/36656570337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiOcPKQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36656582441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiOd0wA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d05809a2845db43aa23c366d005ffd613c725079",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2025-02-04T14:32:19Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPF3SQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784002/job/36657264457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDEwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784007/job/36657218754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDQEQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784726/job/36657221649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDQGA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784732/job/36657221656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDRwQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784733/job/36657222081"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPF5WQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784002/job/36657264985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDJDQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784007/job/36657219853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDQFA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784733/job/36657221652"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPMYgA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784002/job/36657371264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPDNZg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137784007/job/36657220966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPD2bQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36657231469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPFbzw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "98ccd36fa08cc971aae660e52030a41954d81ea9",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2025-02-04T14:34:06Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLPhQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137825697/job/36657352581"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLVjA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137826453/job/36657354124"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLU-A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137826423/job/36657353976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPMbaQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137825721/job/36657372009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLVEA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137826422/job/36657354000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLNMQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137825697/job/36657351985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPMdcQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137825721/job/36657372529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLW2A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137826422/job/36657354456"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLRFg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137825697/job/36657352982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPvNWA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13137825721/job/36657941848"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPL-zg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36657364686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiPLZAw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8711c270631e8621ee06104879f6b120f2f1b867",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-02-04T15:39:01Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTjIeQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139209141/job/36661938297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd5Fg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183445/job/36661852438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd_Kw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184073/job/36661853995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd-UQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184046/job/36661853777"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd4sA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183454/job/36661852336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTeAyA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184051/job/36661854408"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd7PA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183445/job/36661852988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd6aQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183454/job/36661852777"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd_GA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184051/job/36661853976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTd9Pg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183445/job/36661853502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiUyShA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183454/job/36663235204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTepww",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36661864899"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIiTgfwQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-04T10:06:19Z",
        "deletions": 665,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Category/BoolRing.lean",
              "additions": 5,
              "deletions": 7
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplexCategory.lean",
              "additions": 14,
              "deletions": 16
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplicialSet/Nerve.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/TopologicalSimplex.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/Category/BddDistLat.lean",
              "additions": 120,
              "deletions": 27
            },
            {
              "path": "Mathlib/Order/Category/BddLat.lean",
              "additions": 83,
              "deletions": 57
            },
            {
              "path": "Mathlib/Order/Category/BddOrd.lean",
              "additions": 119,
              "deletions": 38
            },
            {
              "path": "Mathlib/Order/Category/BoolAlg.lean",
              "additions": 123,
              "deletions": 32
            },
            {
              "path": "Mathlib/Order/Category/CompleteLat.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/Order/Category/DistLat.lean",
              "additions": 117,
              "deletions": 31
            },
            {
              "path": "Mathlib/Order/Category/FinBddDistLat.lean",
              "additions": 129,
              "deletions": 36
            },
            {
              "path": "Mathlib/Order/Category/FinBoolAlg.lean",
              "additions": 17,
              "deletions": 48
            },
            {
              "path": "Mathlib/Order/Category/FinPartOrd.lean",
              "additions": 51,
              "deletions": 25
            },
            {
              "path": "Mathlib/Order/Category/Frm.lean",
              "additions": 114,
              "deletions": 39
            },
            {
              "path": "Mathlib/Order/Category/HeytAlg.lean",
              "additions": 115,
              "deletions": 35
            },
            {
              "path": "Mathlib/Order/Category/Lat.lean",
              "additions": 114,
              "deletions": 36
            },
            {
              "path": "Mathlib/Order/Category/LinOrd.lean",
              "additions": 115,
              "deletions": 30
            },
            {
              "path": "Mathlib/Order/Category/NonemptyFinLinOrd.lean",
              "additions": 72,
              "deletions": 76
            },
            {
              "path": "Mathlib/Order/Category/PartOrd.lean",
              "additions": 129,
              "deletions": 48
            },
            {
              "path": "Mathlib/Order/Category/Preord.lean",
              "additions": 115,
              "deletions": 32
            },
            {
              "path": "Mathlib/Order/Category/Semilat.lean",
              "additions": 13,
              "deletions": 33
            },
            {
              "path": "Mathlib/Topology/Category/CompHaus/Frm.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Category/Locale.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Order/Category/AlexDisc.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Order/Category/FrameAdjunction.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Specialization.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "concreteify-PartOrd",
        "headRefOid": "8711c270631e8621ee06104879f6b120f2f1b867",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6J9zsX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ahbje",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-04T11:58:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aiS7o",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2025-02-04T12:32:30Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21409,
        "potentialMergeCommit": {
          "oid": "6e43eebc07d56e056cae0c76aa6d08f4a3dffe96"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ahbje",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-02-04T11:58:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aiVVj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-02-04T12:32:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aiS7o",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2025-02-04T12:32:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aiWrN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-02-04T12:34:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aiXM3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-02-04T12:35:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aiayM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-02-04T12:41:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6aicsN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2025-02-04T12:44:58Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsH8p",
                    "body": "Does this work? If not, can it be made to?\r\n```suggestion\r\n  map f := .ofHom f.toOrderHom\r\n```",
                    "createdAt": "2025-02-04T10:54:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zspgH",
                    "body": "It would not work, since the expected type is `LinOrd.Hom (NonemptyFinLinOrd.toLinOrd _) (NonemptyFinLinOrd.toLinOrd _)`, not `NonemptyFinLinOrd`.",
                    "createdAt": "2025-02-04T12:34:27Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsp0p",
                    "body": "We could make it work if we add a `NonemptyFinLinOrd.Hom` structure. But I don't expect the extra boilerplate is worth it. Usually the relevant category's namespace is open anyway, so we can just write `ofHom`.",
                    "createdAt": "2025-02-04T12:35:25Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsdFj",
                    "body": "Is this meant to be a docstring?",
                    "createdAt": "2025-02-04T11:57:09Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsoxw",
                    "body": "It's more of a comment explaining why this isn't marked as `@[simp]`. But we can docstringify all of these comments.",
                    "createdAt": "2025-02-04T12:32:15Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsdLC",
                    "body": "```suggestion\r\n  carrier : Type*\r\n```",
                    "createdAt": "2025-02-04T11:57:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsdWt",
                    "body": "```suggestion\r\ninstance : CoeSort DistLat.{u} (Type u) :=\r\n```\r\nmight be clearer?",
                    "createdAt": "2025-02-04T11:57:56Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsnah",
                    "body": "Might as well clean this up too?",
                    "createdAt": "2025-02-04T12:28:31Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsr46",
                    "body": "You mean:\r\n```suggestion\r\n  ⟨fun h => by\r\n```",
                    "createdAt": "2025-02-04T12:41:35Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsoJr",
                    "body": "Don't you feel like there should be automation for this now?",
                    "createdAt": "2025-02-04T12:30:41Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5zstED",
                    "body": "Mhm, it would be helpful although I don't quite know what form that would take. It's hard to state this inside the type theory itself, since for each base morphism (that is `FrameHom`, not `Frm.Hom`) the type of `comp` can take a different shape. Maybe a metaprogram generating all the boilerplate?",
                    "createdAt": "2025-02-04T12:44:58Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zsofa",
                    "body": "Similarly automation here would help",
                    "createdAt": "2025-02-04T12:31:26Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTjIeQ",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139209141/job/36661938297"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd5Fg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183445/job/36661852438"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd_Kw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184073/job/36661853995"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd-UQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184046/job/36661853777"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd4sA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183454/job/36661852336"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTeAyA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184051/job/36661854408"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd7PA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183445/job/36661852988"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd6aQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183454/job/36661852777"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd_GA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139184051/job/36661853976"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTd9Pg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183445/job/36661853502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiUyShA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13139183454/job/36663235204"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTepww",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36661864899"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIiTgfwQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21409&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(Order/Category): concrete category refactor for basic orders",
        "updatedAt": "2025-02-05T09:29:19Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21409",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d023e3ea612033bb2fa0a33021cee6aa24609d43"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDnh",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDno",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDn0",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPEJDn-",
              "createdAt": "2025-02-04T10:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABw0w9Mg",
                "name": "awaiting-bench"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c9v0i",
              "createdAt": "2025-02-04T10:07:15Z",
              "body": "### PR summary [8711c27063](https://github.com/leanprover-community/mathlib4/pull/21409/commits/8711c270631e8621ee06104879f6b120f2f1b867)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Order.Category.Preord | 401 | 400 | -1 (-0.25%) |\n| Mathlib.Order.Category.PartOrd | 406 | 405 | -1 (-0.25%) |\n| Mathlib.Order.Category.Lat | 409 | 408 | -1 (-0.24%) |\n| Mathlib.Order.Category.Semilat | 409 | 408 | -1 (-0.24%) |\n| Mathlib.Order.Category.BddOrd | 410 | 409 | -1 (-0.24%) |\n| Mathlib.Order.Category.DistLat | 410 | 409 | -1 (-0.24%) |\n| Mathlib.Order.Category.LinOrd | 410 | 409 | -1 (-0.24%) |\n| Mathlib.Order.Category.Frm | 416 | 415 | -1 (-0.24%) |\n| Mathlib.Order.Category.BddLat | 418 | 417 | -1 (-0.24%) |\n| Mathlib.Order.Category.BddDistLat | 420 | 419 | -1 (-0.24%) |\n| Mathlib.Order.Category.HeytAlg | 422 | 421 | -1 (-0.24%) |\n| Mathlib.Order.Category.BoolAlg | 429 | 428 | -1 (-0.23%) |\n| Mathlib.Order.Category.FinPartOrd | 540 | 539 | -1 (-0.19%) |\n| Mathlib.Order.Category.FinBddDistLat | 586 | 585 | -1 (-0.17%) |\n| Mathlib.Order.Category.FinBoolAlg | 599 | 598 | -1 (-0.17%) |\n| Mathlib.Algebra.Category.BoolRing | 633 | 632 | -1 (-0.16%) |\n| Mathlib.Order.Category.NonemptyFinLinOrd | 641 | 640 | -1 (-0.16%) |\n| Mathlib.Topology.Specialization | 771 | 770 | -1 (-0.13%) |\n| Mathlib.Topology.Order.Category.AlexDisc | 772 | 771 | -1 (-0.13%) |\n| Mathlib.AlgebraicTopology.SimplexCategory | 820 | 819 | -1 (-0.12%) |\n| Mathlib.AlgebraicTopology.SimplicialSet.Nerve | 841 | 840 | -1 (-0.12%) |\n| Mathlib.AlgebraicTopology.TopologicalSimplex | 1245 | 1244 | -1 (-0.08%) |\n| Mathlib.Topology.Category.CompHaus.Frm | 1502 | 1501 | -1 (-0.07%) |\n| Mathlib.Topology.Category.Locale | 1503 | 1502 | -1 (-0.07%) |\n| Mathlib.Topology.Order.Category.FrameAdjunction | 1504 | 1503 | -1 (-0.07%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>72 files</summary> `Mathlib.Algebra.Category.BoolRing` `Mathlib.AlgebraicTopology.AlternatingFaceMapComplex` `Mathlib.AlgebraicTopology.CechNerve` `Mathlib.AlgebraicTopology.DoldKan.Decomposition` `Mathlib.AlgebraicTopology.DoldKan.Degeneracies` `Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive` `Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian` `Mathlib.AlgebraicTopology.DoldKan.Equivalence` `Mathlib.AlgebraicTopology.DoldKan.Faces` `Mathlib.AlgebraicTopology.DoldKan.FunctorGamma` `Mathlib.AlgebraicTopology.DoldKan.FunctorN` `Mathlib.AlgebraicTopology.DoldKan.GammaCompN` `Mathlib.AlgebraicTopology.DoldKan.Homotopies` `Mathlib.AlgebraicTopology.DoldKan.HomotopyEquivalence` `Mathlib.AlgebraicTopology.DoldKan.NCompGamma` `Mathlib.AlgebraicTopology.DoldKan.NReflectsIso` `Mathlib.AlgebraicTopology.DoldKan.Normalized` `Mathlib.AlgebraicTopology.DoldKan.Notations` `Mathlib.AlgebraicTopology.DoldKan.PInfty` `Mathlib.AlgebraicTopology.DoldKan.Projections` `Mathlib.AlgebraicTopology.DoldKan.SplitSimplicialObject` `Mathlib.AlgebraicTopology.ExtraDegeneracy` `Mathlib.AlgebraicTopology.MooreComplex` `Mathlib.AlgebraicTopology.Quasicategory.Basic` `Mathlib.AlgebraicTopology.Quasicategory.Nerve` `Mathlib.AlgebraicTopology.Quasicategory.StrictSegal` `Mathlib.AlgebraicTopology.SimplexCategory` `Mathlib.AlgebraicTopology.SimplicialCategory.Basic` `Mathlib.AlgebraicTopology.SimplicialCategory.SimplicialObject` `Mathlib.AlgebraicTopology.SimplicialNerve` `Mathlib.AlgebraicTopology.SimplicialObject.Basic` `Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal` `Mathlib.AlgebraicTopology.SimplicialObject.Split` `Mathlib.AlgebraicTopology.SimplicialSet.Basic` `Mathlib.AlgebraicTopology.SimplicialSet.Boundary` `Mathlib.AlgebraicTopology.SimplicialSet.Coskeletal` `Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat` `Mathlib.AlgebraicTopology.SimplicialSet.Horn` `Mathlib.AlgebraicTopology.SimplicialSet.KanComplex` `Mathlib.AlgebraicTopology.SimplicialSet.Monoidal` `Mathlib.AlgebraicTopology.SimplicialSet.Nerve` `Mathlib.AlgebraicTopology.SimplicialSet.Path` `Mathlib.AlgebraicTopology.SimplicialSet.StdSimplex` `Mathlib.AlgebraicTopology.SimplicialSet.StrictSegal` `Mathlib.AlgebraicTopology.SingularSet` `Mathlib.AlgebraicTopology.TopologicalSimplex` `Mathlib.CategoryTheory.Idempotents.SimplicialObject` `Mathlib.Order.Category.BddDistLat` `Mathlib.Order.Category.BddLat` `Mathlib.Order.Category.BddOrd` `Mathlib.Order.Category.BoolAlg` `Mathlib.Order.Category.DistLat` `Mathlib.Order.Category.FinBddDistLat` `Mathlib.Order.Category.FinBoolAlg` `Mathlib.Order.Category.FinPartOrd` `Mathlib.Order.Category.Frm` `Mathlib.Order.Category.HeytAlg` `Mathlib.Order.Category.Lat` `Mathlib.Order.Category.LinOrd` `Mathlib.Order.Category.NonemptyFinLinOrd` `Mathlib.Order.Category.PartOrd` `Mathlib.Order.Category.Preord` `Mathlib.Order.Category.Semilat` `Mathlib.RepresentationTheory.GroupCohomology.Basic` `Mathlib.RepresentationTheory.GroupCohomology.Hilbert90` `Mathlib.RepresentationTheory.GroupCohomology.LowDegree` `Mathlib.RepresentationTheory.GroupCohomology.Resolution` `Mathlib.Topology.Category.CompHaus.Frm` `Mathlib.Topology.Category.Locale` `Mathlib.Topology.Order.Category.AlexDisc` `Mathlib.Topology.Order.Category.FrameAdjunction` `Mathlib.Topology.Specialization`</details>|-1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (X : NonemptyFinLinOrd) : BoundedOrder X`\n`+ instance : Category BddDistLat.{u}`\n`+ instance : Category BddOrd.{u}`\n`+ instance : Category BoolAlg.{u}`\n`+ instance : Category DistLat.{u}`\n`+ instance : Category FinBddDistLat.{u}`\n`+ instance : Category Frm.{u}`\n`+ instance : Category HeytAlg.{u}`\n`+ instance : Category Lat.{u}`\n`+ instance : Category LinOrd.{u}`\n`+ instance : Category PartOrd.{u}`\n`+ instance : Category Preord.{u}`\n`+ instance : CoeSort BoolAlg (Type _)`\n`+ instance : CoeSort DistLat.{u} (Type u)`\n`+ instance : CoeSort Frm (Type _)`\n`+ instance : CoeSort HeytAlg (Type _)`\n`+ instance : CoeSort Lat (Type _)`\n`+ instance : CoeSort LinOrd (Type _)`\n`+ instance : CoeSort NonemptyFinLinOrd (Type _)`\n`+ instance : CoeSort PartOrd (Type _)`\n`+ instance : CoeSort Preord (Type u)`\n`+ instance : ConcreteCategory BddDistLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory BddOrd (BoundedOrderHom · ·)`\n`+ instance : ConcreteCategory BoolAlg (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory DistLat (LatticeHom · ·)`\n`+ instance : ConcreteCategory FinBddDistLat (BoundedLatticeHom · ·)`\n`+ instance : ConcreteCategory Frm (FrameHom · ·)`\n`+ instance : ConcreteCategory HeytAlg (HeytingHom · ·)`\n`+ instance : ConcreteCategory Lat (LatticeHom · ·)`\n`+ instance : ConcreteCategory LinOrd (· →o ·)`\n`+ instance : ConcreteCategory NonemptyFinLinOrd (· →o ·)`\n`+ instance : ConcreteCategory PartOrd (· →o ·)`\n`+ instance : ConcreteCategory Preord (· →o ·)`\n`+ instance : ConcreteCategory SemilatInfCat (InfTopHom · ·)`\n`+ instance : ConcreteCategory SemilatSupCat (SupBotHom · ·)`\n`+ instance : ConcreteCategory SimplexCategory (fun i j => Fin (i.len + 1) →o Fin (j.len + 1))`\n`+ instance : LargeCategory NonemptyFinLinOrd`\n`++ concreteCategory`\n`+++++++++++ coe_comp`\n`+++++++++++ coe_id`\n`+++++++++++ forget_map`\n`+++++++++++ hom_inv_apply`\n`+++++++++++ inv_hom_apply`\n`+++++++++++ ofHom_apply`\n`+++++++++++ ofHom_comp`\n`+++++++++++ ofHom_id`\n`++++++++++++ Hom.hom`\n`++++++++++++ ext`\n`+++++++++++++ hom_ofHom`\n`+++++++++++++ ofHom_hom`\n`++++++++++++++ Hom.Simps.hom`\n`++++++++++++++ comp_apply`\n`++++++++++++++ hom_comp`\n`++++++++++++++ hom_ext`\n`++++++++++++++ hom_id`\n`++++++++++++++ id_apply`\n`++++++++++++++ ofHom`\n`+++++++++++++++++----------------- of`\n`+++++++++------+----- coe_of`\n`- Fin.nonemptyFiniteLinearOrder`\n`- NonemptyFiniteLinearOrder`\n`- PUnit.nonemptyFiniteLinearOrder`\n`- ULift.nonemptyFiniteLinearOrder`\n`- forget_map_apply`\n`- instBooleanAlgebra`\n`- instBoundedLatticeHomClass`\n`- instance (X : BddLat) : Lattice X`\n`- instance (X : BddOrd) : PartialOrder X`\n`- instance (X : DistLat) : DistribLattice X`\n`- instance (X : FinBoolAlg) : BooleanAlgebra X`\n`- instance (X : Frm) : Frame X`\n`- instance (X : HeytAlg) : HeytingAlgebra X`\n`- instance (X : Lat) : Lattice X`\n`- instance (priority := 100) NonemptyFiniteLinearOrder.toBoundedOrder (α : Type*)`\n`- instance (α : LinOrd) : LinearOrder α`\n`- instance (α : NonemptyFinLinOrd) : NonemptyFiniteLinearOrder α`\n`- instance (α : PartOrd) : PartialOrder α`\n`- instance (α : Preord) : Preorder α`\n`- instance (α : Type*) [NonemptyFiniteLinearOrder α] : NonemptyFiniteLinearOrder αᵒᵈ`\n`- instance : BundledHom @LatticeHom`\n`- instance : BundledHom @OrderHom`\n`- instance : BundledHom.ParentProjection @DistribLattice.toLattice`\n`- instance : BundledHom.ParentProjection @LinearOrder.toPartialOrder`\n`- instance : BundledHom.ParentProjection @NonemptyFiniteLinearOrder.toLinearOrder`\n`- instance : BundledHom.ParentProjection @PartialOrder.toPreorder`\n`- instance : CoeSort BoolAlg Type*`\n`- instance : CoeSort DistLat Type*`\n`- instance : CoeSort Frm Type*`\n`- instance : CoeSort HeytAlg Type*`\n`- instance : CoeSort Lat Type*`\n`- instance : CoeSort LinOrd Type*`\n`- instance : CoeSort NonemptyFinLinOrd Type*`\n`- instance : CoeSort PartOrd Type*`\n`- instance : CoeSort Preord Type*`\n`- instance : HasForget BddDistLat`\n`- instance : HasForget BddLat`\n`- instance : HasForget BoolAlg`\n`- instance : HasForget DistLat`\n`- instance : HasForget Frm := by`\n`- instance : HasForget HeytAlg := by`\n`- instance : HasForget Lat`\n`- instance : HasForget LinOrd`\n`- instance : HasForget NonemptyFinLinOrd`\n`- instance : HasForget PartOrd`\n`- instance : HasForget Preord`\n`- instance : HasForget SemilatInfCat`\n`- instance : HasForget SemilatSupCat`\n`- instance : HasForget.{0} SimplexCategory`\n`- instance : Inhabited DistLat`\n`- instance : Inhabited Lat`\n`- instance : Inhabited PartOrd`\n`- instance : LargeCategory.{u} BddDistLat`\n`- instance : LargeCategory.{u} BoolAlg`\n`- instance : LargeCategory.{u} Lat`\n`- instance {A B : NonemptyFinLinOrd.{u}} : FunLike (A ⟶ B) A B`\n`- instance {A B : NonemptyFinLinOrd.{u}} : OrderHomClass (A ⟶ B) A B`\n`- instance {X Y : HeytAlg.{u}} : FunLike (X ⟶ Y) ↑X ↑Y`\n`- instance {X Y : HeytAlg.{u}} : HeytingHomClass (X ⟶ Y) ↑X ↑Y`\n`-++++++++++++ Hom`\n`-+-+ hasForgetToBddDistLat`\n`-- bundledHom`\n`-- largeCategory`\n`---- hasForget`\n`----- instFunLike`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (29.00, 0.01)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4162|-29|porting notes|\n\nCurrent commit [8711c27063](https://github.com/leanprover-community/mathlib4/commit/8711c270631e8621ee06104879f6b120f2f1b867)\nReference commit [2dd5bb2d33](https://github.com/leanprover-community/mathlib4/commit/2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e187402aad26317e9f6997ec6aeff6f1c6a1649b"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c53tH45",
              "createdAt": "2025-02-04T10:24:12Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6J988_",
                "title": "feat(Order/Category): `ConcreteCategory` instance for `CompleteLat`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/21410"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6oqYuFzwAAAAPEKZ0L",
              "createdAt": "2025-02-04T10:31:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c-Mc6",
              "createdAt": "2025-02-04T10:53:53Z",
              "body": "!bench",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c-dNK",
              "createdAt": "2025-02-04T11:23:08Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/c0168192-ddcb-47fa-8ff1-c64be878ba76) for commit e187402aad26317e9f6997ec6aeff6f1c6a1649b.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/b87280e6-8612-4e00-9533-e98d82c55c29/to/c0168192-ddcb-47fa-8ff1-c64be878ba76) against commit 2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc:\n```diff\n  Benchmark                                        Metric         Change\n  ======================================================================\n- ~Mathlib.AlgebraicTopology.SimplicialSet.Nerve   instructions   137.4%\n- ~Mathlib.Order.Category.DistLat                  instructions   270.8%\n- ~Mathlib.Order.Category.Lat                      instructions   172.3%\n- ~Mathlib.Order.Category.LinOrd                   instructions    77.8%\n- ~Mathlib.Order.Category.NonemptyFinLinOrd        instructions    96.7%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c-df6",
              "createdAt": "2025-02-04T11:23:32Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+144.114⬝10⁹|(+0.09%)|\n|`lint`|-22.227⬝10⁹|(-0.29%)|\n|`Mathlib.Order.Category.NonemptyFinLinOrd`|+30.73⬝10⁹|(+96.73%)|\n|`Mathlib.Order.Category.DistLat`|+26.274⬝10⁹|(+270.77%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.Nerve`|+25.669⬝10⁹|(+137.44%)|\n|`Mathlib.Order.Category.Lat`|+21.163⬝10⁹|(+172.25%)|\n|`Mathlib.Order.Category.LinOrd`|+10.848⬝10⁹|(+77.77%)|\n|`Mathlib.Order.Category.PartOrd`|+9.470⬝10⁹|(+78.00%)|\n|`Mathlib.Order.Category.BddOrd`|+6.193⬝10⁹|(+36.63%)|\n|`Mathlib.Order.Category.Frm`|+5.768⬝10⁹|(+121.26%)|\n|`Mathlib.Order.Category.Preord`|+4.626⬝10⁹|(+45.86%)|\n|`Mathlib.Order.Category.FinPartOrd`|+3.959⬝10⁹|(+28.83%)|\n|`Mathlib.Topology.Order.Category.AlexDisc`|+2.322⬝10⁹|(+9.27%)|\n<details><summary>3 files, Instructions +1.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.AlgebraicTopology.SimplexCategory`|+1.561⬝10⁹|(+2.98%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat`|+1.456⬝10⁹|(+2.89%)|\n|`Mathlib.Topology.Order.Category.FrameAdjunction`|+1.300⬝10⁹|(+5.07%)|\n</details>\n\n<details><summary>2 files, Instructions -2.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.FinBoolAlg`|-1.36⬝10⁹|(-2.88%)|\n|`Mathlib.Order.Category.BddLat`|-1.340⬝10⁹|(-4.30%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.BddDistLat`|-2.426⬝10⁹|(-12.52%)|\n|`Mathlib.Order.Category.FinBddDistLat`|-3.452⬝10⁹|(-13.57%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13134362637)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c-luw",
              "createdAt": "2025-02-04T11:39:00Z",
              "body": "Most of those slowdowns are in files that grew quite a bit. Looks like `AlgebraicTopology.SimplicialSet.Nerve` got slower due to the `aesop` calls in `nerve` being slow. They can be replaced with `rfl` and become fast, but I think I'll try and figure out if I can make `aesop` faster.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ahbje",
              "createdAt": "2025-02-04T10:54:26Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6aiS7o",
              "createdAt": "2025-02-04T12:28:31Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "79bfe0df717809ddc598038030b9ec5d3cd931c9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c_HoH",
              "createdAt": "2025-02-04T12:40:26Z",
              "body": "> Most of those slowdowns are in files that grew quite a bit. Looks like `AlgebraicTopology.SimplicialSet.Nerve` got slower due to the `aesop` calls in `nerve` being slow. They can be replaced with `rfl` and become fast, but I think I'll try and figure out if I can make `aesop` faster.\r\n\r\nAdding a `Hom` structure for `SimplexCategory` did not seem to help, and I still don't know how to figure out where `simp` spends all its time. I'll just do the proofs by hand then.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cecce79044abbf87184024d20d09c077717f9f65"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c_LIv",
              "createdAt": "2025-02-04T12:46:52Z",
              "body": "I've been looking at `BoolAlg` and come to the conclusion that `Hom` structures for `BddLat` and `BddDistLat` would be helpful. One moment please...",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6oqYuFzwAAAAPETXri",
              "createdAt": "2025-02-04T12:46:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c_iuS",
              "createdAt": "2025-02-04T13:22:44Z",
              "body": "Oh, interesting. Looking at a timeout in `FinBddDistLat` suggests that I might actually be going down the wrong way with bundling instances. Namely, previously we implemented `NonemptyFinLinOrd` as a class `NonemptyFiniteLinearOrder` plus a structure bundling a type `X` with an instance `NonemptyFiniteLinearOrder X`. But now I'm getting slow equality checks on `(dual.obj (dual.obj X)).carrier = X.carrierᵒᵈᵒᵈ`. Even though these should be exactly the same thing, it ends up checking that each order class on `dual.obj X` is the same as `Xᵒᵈ`...",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c_kLa",
              "createdAt": "2025-02-04T13:24:08Z",
              "body": "(by the way, this is a refactor PR, not a feat PR, right?)",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c_4QO",
              "createdAt": "2025-02-04T13:40:02Z",
              "body": "> Oh, interesting. Looking at a timeout in `FinBddDistLat` suggests that I might actually be going down the wrong way with bundling instances. Namely, previously we implemented `NonemptyFinLinOrd` as a class `NonemptyFiniteLinearOrder` plus a structure bundling a type `X` with an instance `NonemptyFiniteLinearOrder X`. But now I'm getting slow equality checks on `(dual.obj (dual.obj X)).carrier = X.carrierᵒᵈᵒᵈ`. Even though these should be exactly the same thing, it ends up checking that each order class on `dual.obj X` is the same as `Xᵒᵈ`...\r\n\r\nNope, changing this doesn't seem to help much...",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dALjQ",
              "createdAt": "2025-02-04T14:05:05Z",
              "body": "Huh, if I turn `@[simps]` on `dual` into `@[simps map]`, it looks like aesop gets 2x faster for quite a few of the categories. (In general I think we should be more careful with `@[simps]` lemmas on `Functor.obj`s.)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7764ef241f08f4c73ea742016622d1f0d964a2c5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1a31f212e44764c5d91c23b4380f2ff66d7e9fa"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b147960bacbb3657693bd0872289626d0dcb01ee"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6oqYuFzwAAAAPEY9Iu",
              "createdAt": "2025-02-04T14:22:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dAY4m",
              "createdAt": "2025-02-04T14:26:09Z",
              "body": "In the process of investigation I ended up adding `Hom` structures for most of the order categories anyway. Seems like a shame to waste that effort, so now they're part of the PR. Should I just include `CompleteLattice` and `ωCPO` to be complete? :)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d05809a2845db43aa23c366d005ffd613c725079"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "98ccd36fa08cc971aae660e52030a41954d81ea9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dAp4x",
              "createdAt": "2025-02-04T14:44:43Z",
              "body": "!bench",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dA-7w",
              "createdAt": "2025-02-04T15:15:50Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/e07673e5-c875-4ca6-a84e-0ee1cf49094b) for commit 98ccd36fa08cc971aae660e52030a41954d81ea9.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/b87280e6-8612-4e00-9533-e98d82c55c29/to/e07673e5-c875-4ca6-a84e-0ee1cf49094b) against commit 2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc:\n```diff\n  Benchmark                                        Metric         Change\n  ======================================================================\n+ ~Mathlib.AlgebraicTopology.SimplicialSet.Nerve   instructions   -62.8%\n- ~Mathlib.Order.Category.BddDistLat               instructions    52.6%\n- ~Mathlib.Order.Category.BoolAlg                  instructions    64.0%\n- ~Mathlib.Order.Category.DistLat                  instructions   268.7%\n- ~Mathlib.Order.Category.NonemptyFinLinOrd        instructions    86.0%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dA_N6",
              "createdAt": "2025-02-04T15:16:16Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+137.918⬝10⁹|(+0.09%)|\n|`lint`|-19.659⬝10⁹|(-0.25%)|\n<details><summary>2 files, Instructions +26.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.NonemptyFinLinOrd`|+26.734⬝10⁹|(+85.99%)|\n|`Mathlib.Order.Category.DistLat`|+26.71⬝10⁹|(+268.67%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.BoolAlg`|+17.60⬝10⁹|(+64.02%)|\n|`Mathlib.Order.Category.BddDistLat`|+10.192⬝10⁹|(+52.62%)|\n|`Mathlib.Order.Category.PartOrd`|+8.271⬝10⁹|(+68.12%)|\n<details><summary>4 files, Instructions +7.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.LinOrd`|+7.928⬝10⁹|(+56.83%)|\n|`Mathlib.Order.Category.BddLat`|+7.796⬝10⁹|(+25.02%)|\n|`Mathlib.Order.Category.FinBddDistLat`|+7.426⬝10⁹|(+29.21%)|\n|`Mathlib.Order.Category.FinBoolAlg`|+7.146⬝10⁹|(+19.89%)|\n</details>\n\n<details><summary>2 files, Instructions +5.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Frm`|+5.768⬝10⁹|(+121.26%)|\n|`Mathlib.Order.Category.Lat`|+5.699⬝10⁹|(+46.38%)|\n</details>\n\n<details><summary>3 files, Instructions +3.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Preord`|+3.810⬝10⁹|(+37.77%)|\n|`Mathlib.Order.Category.HeytAlg`|+3.807⬝10⁹|(+55.34%)|\n|`Mathlib.Order.Category.BddOrd`|+3.549⬝10⁹|(+20.99%)|\n</details>\n\n<details><summary>2 files, Instructions +2.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.FinPartOrd`|+2.401⬝10⁹|(+17.48%)|\n|`Mathlib.Topology.Order.Category.AlexDisc`|+2.321⬝10⁹|(+9.27%)|\n</details>\n\n<details><summary>3 files, Instructions +1.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat`|+1.576⬝10⁹|(+3.13%)|\n|`Mathlib.AlgebraicTopology.SimplexCategory`|+1.553⬝10⁹|(+2.97%)|\n|`Mathlib.Topology.Order.Category.FrameAdjunction`|+1.303⬝10⁹|(+5.08%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Algebra.Category.BoolRing`|-1.493⬝10⁹|(-6.44%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.Nerve`|-11.726⬝10⁹|(-62.78%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13138677211)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c53x73m",
              "createdAt": "2025-02-04T15:28:23Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6JiXCk",
                "title": "feat(ModelTheory/Bundled): first-order embeddings and equivalences from equalities",
                "url": "https://github.com/leanprover-community/mathlib4/pull/21270"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8711c270631e8621ee06104879f6b120f2f1b867"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dBQYg",
              "createdAt": "2025-02-04T15:40:59Z",
              "body": "The extra slowdown in `DistLat` was because I forgot a `@[simps map]` there. Otherwise it seems to be just files getting bigger and therefore slower. (Assuming I am debugging the profiler trace / `simp` trace correctly...)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6oqYuFzwAAAAPEeKxI",
              "createdAt": "2025-02-04T15:41:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABw0w9Mg",
                "name": "awaiting-bench"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dEw8d",
              "createdAt": "2025-02-04T23:12:57Z",
              "body": "!bench",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dE7AN",
              "createdAt": "2025-02-04T23:42:22Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/2a791737-2317-424e-b449-f68c955790f2) for commit 8711c270631e8621ee06104879f6b120f2f1b867.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/b87280e6-8612-4e00-9533-e98d82c55c29/to/2a791737-2317-424e-b449-f68c955790f2) against commit 2dd5bb2d33e82377b2cc4e347e2317a4ec0603bc:\n```diff\n  Benchmark                                        Metric         Change\n  ======================================================================\n+ ~Mathlib.AlgebraicTopology.SimplicialSet.Nerve   instructions   -62.8%\n- ~Mathlib.Order.Category.BddDistLat               instructions    52.4%\n- ~Mathlib.Order.Category.BoolAlg                  instructions    64.0%\n- ~Mathlib.Order.Category.NonemptyFinLinOrd        instructions    86.0%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dE7Sn",
              "createdAt": "2025-02-04T23:42:45Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+117.330⬝10⁹|(+0.07%)|\n|`lint`|-19.472⬝10⁹|(-0.25%)|\n|`Mathlib.Order.Category.NonemptyFinLinOrd`|+26.736⬝10⁹|(+85.99%)|\n|`Mathlib.Order.Category.BoolAlg`|+17.61⬝10⁹|(+64.03%)|\n|`Mathlib.Order.Category.BddDistLat`|+10.153⬝10⁹|(+52.42%)|\n|`Mathlib.Order.Category.PartOrd`|+8.270⬝10⁹|(+68.11%)|\n<details><summary>4 files, Instructions +7.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.LinOrd`|+7.929⬝10⁹|(+56.84%)|\n|`Mathlib.Order.Category.BddLat`|+7.794⬝10⁹|(+25.02%)|\n|`Mathlib.Order.Category.FinBddDistLat`|+7.393⬝10⁹|(+29.08%)|\n|`Mathlib.Order.Category.FinBoolAlg`|+7.143⬝10⁹|(+19.88%)|\n</details>\n\n<details><summary>3 files, Instructions +5.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Frm`|+5.768⬝10⁹|(+121.26%)|\n|`Mathlib.Order.Category.Lat`|+5.698⬝10⁹|(+46.38%)|\n|`Mathlib.Order.Category.DistLat`|+5.600⬝10⁹|(+57.72%)|\n</details>\n\n<details><summary>3 files, Instructions +3.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.Preord`|+3.810⬝10⁹|(+37.77%)|\n|`Mathlib.Order.Category.HeytAlg`|+3.806⬝10⁹|(+55.33%)|\n|`Mathlib.Order.Category.BddOrd`|+3.550⬝10⁹|(+20.99%)|\n</details>\n\n<details><summary>2 files, Instructions +2.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Order.Category.FinPartOrd`|+2.401⬝10⁹|(+17.48%)|\n|`Mathlib.Topology.Order.Category.AlexDisc`|+2.323⬝10⁹|(+9.28%)|\n</details>\n\n<details><summary>3 files, Instructions +1.0⬝10⁹</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat`|+1.578⬝10⁹|(+3.14%)|\n|`Mathlib.AlgebraicTopology.SimplexCategory`|+1.553⬝10⁹|(+2.97%)|\n|`Mathlib.Topology.Order.Category.FrameAdjunction`|+1.303⬝10⁹|(+5.08%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.Algebra.Category.BoolRing`|-1.496⬝10⁹|(-6.46%)|\n|`Mathlib.AlgebraicTopology.SimplicialSet.Nerve`|-11.726⬝10⁹|(-62.78%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13146995922)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dFt38",
              "createdAt": "2025-02-05T01:48:58Z",
              "body": "> Huh, if I turn `@[simps]` on `dual` into `@[simps map]`, it looks like aesop gets 2x faster for quite a few of the categories. (In general I think we should be more careful with `@[simps]` lemmas on `Functor.obj`s.)\r\n\r\nInteresting... I often find `Functor.obj` lemmas very helpful in `dsimp`, but I can see why they might be harmful in general. Indeed this isn't so surprising because these lemmas are equalities on objects, which would be evil except for the case where they're definitional. I'd view removing the \"simp by rfl\" lemmas on concrete `Functor.obj` as unfortunate, since these are really nice pedagogically in the typical case. I wonder if there's some modification we can make to `aesop_cat` to get the best of both worlds here?",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dINB3",
              "createdAt": "2025-02-05T09:21:20Z",
              "body": "> Interesting... I often find `Functor.obj` lemmas very helpful in `dsimp`, but I can see why they might be harmful in general. Indeed this isn't so surprising because these lemmas are equalities on objects, which would be evil except for the case where they're definitional.\r\n\r\nTrue! Although `@[simps]` is supposed to generate only definitional equalities which are not evil :) From a more mechanical perspective, the issue seems to be that we apply these kind of `Functor.obj` lemmas to our terms, but in the `simp` lemmas themselves we still see quite a few `F.obj`. If the definitional equality isn't reducible, `simp` won't see through that and we can get stuck in a non-confluent corner.\r\n\r\n> I'd view removing the \"simp by rfl\" lemmas on concrete `Functor.obj` as unfortunate, since these are really nice pedagogically in the typical case. I wonder if there's some modification we can make to `aesop_cat` to get the best of both worlds here?\r\n\r\nOn the longer term, we could be using ematching instead of rewriting for our equalities, that would get rid of all of these confluence issues. For now, perhaps we can split the lemmas up into multiple simp sets: call `erase_aesop_rules` on the `Functor.obj` lemmas, but still allow them in full-on `simp`? (Have never tried removing lemmas from `aesop`, so unsure if that's the right way to go.)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dIPOU",
              "createdAt": "2025-02-05T09:25:17Z",
              "body": "What about making a version of `simps` that only creates `dsimp` lemmas? Something like `dsimps`",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6dIRhh",
              "createdAt": "2025-02-05T09:29:18Z",
              "body": "Not sure I understand. All lemmas created by `simps` are supposed to be `dsimp` lemmas already, no?",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        }
      }
    }
  }
}
