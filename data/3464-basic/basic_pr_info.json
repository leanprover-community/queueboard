{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 360,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 9,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5mB3qE",
              "body": "It's probably worth documenting how exactly the state is handled. I *think* I get it: Nondet is a lazy list of monadic actions that produce a value along with the state with respect to which the value is actually valid. Importantly, it is up to the monadic actions to be sure that they set their state, if necessary, but for example the bind operation sets the state to ensure the value passed in is valid.",
              "createdAt": "2023-09-08T14:29:47Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mEWQv",
              "body": "@kmill, I've added a paragraph of documentation about the state.",
              "createdAt": "2023-09-09T05:00:55Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mOcNa",
              "body": "@kmill, I've added the `restoreState` in `head` that you suggested.\r\n\r\nCuriously, I can't actually get anything to fail if I remove the `restoreState`s in `bind` or `head`. (The one in `ofList` is certainly necessary.)",
              "createdAt": "2023-09-12T06:23:24Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mOcXg",
              "body": "I've also switched over `library_search` so rather than carrying around `MetavarContext` state itself, it just relies on `Nondet` to do it automatically. Seems to work as planned.",
              "createdAt": "2023-09-12T06:24:01Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mRLic",
              "body": "I don't have any more questions about Nondet, so let's try this out (and if this breaks library search I trust that you'll fix it quick! :smile:)\r\n\r\nbors r+",
              "createdAt": "2023-09-12T13:57:15Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mRWMm",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6160617263/job/16717992280)",
              "createdAt": "2023-09-12T14:21:16Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mRdyo",
              "body": "bors r-",
              "createdAt": "2023-09-12T14:37:52Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mReQ3",
              "body": "bors d+",
              "createdAt": "2023-09-12T14:38:52Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mReTo",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-09-12T14:38:58Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mU-Hs",
              "body": "bors merge",
              "createdAt": "2023-09-13T00:46:57Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mVTOy",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6166733968/job/16736664670)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6166733968/job/16736664499)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6166733968/job/16736664587)",
              "createdAt": "2023-09-13T02:44:00Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "closed": true,
        "closedAt": "2023-09-13T02:44:02Z",
        "createdAt": "2023-04-16T11:27:37Z",
        "deletions": 64,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/MLList/Basic.lean",
              "additions": 26,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Nondet/Basic.lean",
              "additions": 206,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/Backtrack.lean",
              "additions": 8,
              "deletions": 17
            },
            {
              "path": "Mathlib/Tactic/GCongr/Core.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/LibrarySearch.lean",
              "additions": 20,
              "deletions": 22
            },
            {
              "path": "Mathlib/Tactic/SolveByElim.lean",
              "additions": 19,
              "deletions": 22
            },
            {
              "path": "test/Nondet.lean",
              "additions": 76,
              "deletions": 0
            }
          ]
        },
        "headRefName": "nondet",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5OaQ-X",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "number": 3464,
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gQllU",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:10:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gQmKX",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:11:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gQnDw",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:13:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gQnwU",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:14:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gQodA",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:16:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gQpDO",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:17:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gQpJN",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-07T09:18:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gTUUf",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-07T15:10:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gWOUh",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T00:18:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXBu1",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:18:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXBx9",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:19:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXB2m",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:19:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXB3-",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:19:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXB49",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:19:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXEMh",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:34:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXEOL",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-08T04:34:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gXIc8",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T05:01:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gZDWu",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-08T10:38:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gbHia",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T15:20:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gbaQA",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-08T16:01:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gdQpc",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T21:12:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfQBK",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-09-10T11:13:00Z"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: nondeterminism monad, and use in backtrack",
        "updatedAt": "2023-09-13T02:44:06Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/3464"
      }
    }
  }
}
