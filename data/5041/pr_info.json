{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 689,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "101damnations"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n\r\nTrying again to port this now the mathlib3 PR [#19170](https://github.com/leanprover-community/mathlib/pull/19170) is merged. The first port attempt was #4761.\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-06-21T10:32:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5e8E1o",
              "body": "Accidentally removed a `nolint simpNF` in the last commit - I'm going to modify some `@[simps]` attributes in other files as [suggested](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/!4.235041.20RepresentationTheory.2ERep/near/366297267) by Scott, so that `simp` stops unfolding types and meaning I have to add `nolint simpNF`s.",
              "createdAt": "2023-06-15T10:46:49Z",
              "author": {
                "login": "101damnations"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5fFPl0",
              "body": "I've removed 2 of the `protected`s I added in [the mathlib3 PR](https://github.com/leanprover-community/mathlib/pull/19170) because I don't think they have a good reason to be there. Not sure if this is worth a porting note or a backport.",
              "createdAt": "2023-06-16T19:49:50Z",
              "author": {
                "login": "101damnations"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5fY9Rv",
              "body": "bors merge",
              "createdAt": "2023-06-21T08:03:41Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5fZxxl",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5332388361/jobs/9661500092)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5332388361/jobs/9661500246)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5332388361/jobs/9661500391)",
              "createdAt": "2023-06-21T10:32:29Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0d05d3cdb31549a795e8dcd3e0eda8239e0316d6",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-06-14T08:04:05Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5afe352ae96307736675470386d25600210273cb",
                "additions": 586,
                "deletions": 0,
                "committedDate": "2023-06-14T08:04:05Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4f4ba7035473e84e691eda0ccd5dca17b29fc389",
                "additions": 22,
                "deletions": 35,
                "committedDate": "2023-06-14T08:04:06Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3f6d4e3467cb1d4f91bd6fd8753325d883050c15",
                "additions": 12,
                "deletions": 6,
                "committedDate": "2023-06-14T09:06:28Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "81843becd9a6a897cdd10d613d6df682727ecceb",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-06-14T09:11:07Z",
                "author": {
                  "name": "Jeremy Tan Jie Rui",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9e1dbe9e6787ef213b6cb94e59c1253606e66d49",
                "additions": 29,
                "deletions": 24,
                "committedDate": "2023-06-14T09:30:35Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fe626cb227df66f8696b0c5bbbf7a71a78574129",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-06-14T09:30:52Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6c05caa92d6c9abb62845e00245b5a04d8893cba",
                "additions": 63,
                "deletions": 42,
                "committedDate": "2023-06-14T12:54:12Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "699ce6ab81319755204be58d0ed2c0f008a57dba",
                "additions": 49,
                "deletions": 38,
                "committedDate": "2023-06-14T13:29:07Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "de6ba285d84fa957a7310debc4d44b0d8157a439",
                "additions": 10,
                "deletions": 10,
                "committedDate": "2023-06-14T13:35:40Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5e545356a0a990e2a27cf91a746962f20412cce2",
                "additions": 9,
                "deletions": 9,
                "committedDate": "2023-06-14T14:38:38Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f4071447c648cb40c467ea537dc2677dfaeb4ec0",
                "additions": 60,
                "deletions": 0,
                "committedDate": "2023-06-14T16:55:48Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "db3a302c7b66ca0e5970513797d0e6066c3ff2f0",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-06-14T16:56:55Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9ecb67069197ae459e231af2479b62e9ccb77c57",
                "additions": 10,
                "deletions": 6,
                "committedDate": "2023-06-14T16:58:37Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3bd46bf8e64e469a2cea64e0d38dafb4fc34aac0",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-06-14T17:21:19Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3808888b6cea0174db6998fe0caceed054ea7b00",
                "additions": 23,
                "deletions": 32,
                "committedDate": "2023-06-15T10:34:20Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5b866edac4eec2d6508532fba6f9f1c5369b5cd1",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-06-15T12:29:35Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bb6cc971bd21c49548487c789ed20e54933c773e",
                "additions": 10,
                "deletions": 7,
                "committedDate": "2023-06-16T01:23:11Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dedeeafbc58d2541ac4c610de8c01faeefe2b09d",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-06-16T19:48:26Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "53d29185e1d88370726e3c1ecbb8e3db9dc00c35",
                "additions": 22,
                "deletions": 9,
                "committedDate": "2023-06-16T19:59:28Z",
                "author": {
                  "name": "101damnations",
                  "email": "101damnations@github.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-06-14T08:15:16Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Limits.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/RepresentationTheory/Rep.lean",
              "additions": 681,
              "deletions": 0
            }
          ]
        },
        "headRefName": "port/RepresentationTheory.Rep",
        "headRefOid": "53d29185e1d88370726e3c1ecbb8e3db9dc00c35",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5S9raz",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHdNnVg",
              "color": "006B75",
              "name": "mathlib-port"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5YYKjb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-06-16T05:18:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YOGaI",
              "body": "This looks fine to me. I've left some of my usual pernickety comments.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-06-15T19:38:25Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5041,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5YQg9n",
              "body": "Thanks for leaving detailed porting notes. Would you please move them right above the point where the proof changed, instead of above the decl?",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-06-15T05:46:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YSg73",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-15T10:34:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YShA8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-15T10:34:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YShUG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-15T10:35:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YOGaI",
              "body": "This looks fine to me. I've left some of my usual pernickety comments.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-06-15T19:38:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YXnNn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-16T01:23:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YYKjb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-06-16T05:18:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YdcpM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-16T18:36:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YeOGR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-16T20:14:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5YeR9o",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "101damnations"
              },
              "submittedAt": "2023-06-16T20:27:07Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JUMP-",
                    "body": "Some implicit arguments are changed by the simplifier: the diff with `pp.all true` for the first one has stuff like\r\n```\r\n<     (@Action.V.{u} (@ModuleCat.{u, u} k (@CommRing.toRing.{u} k inst✝¹))\r\n<       (@ModuleCat.moduleCategory.{u, u} k (@CommRing.toRing.{u} k inst✝¹)) (@MonCat.of.{u} G inst✝)\r\n<       (@CategoryTheory.MonoidalCategory.tensorObj.{u, u + 1} (@Rep.{u} k G (@CommRing.toRing.{u} k inst✝¹) inst✝)\r\n<         (@Action.instCategoryAction.{u} (@ModuleCat.{u, u} k (@CommRing.toRing.{u} k inst✝¹))\r\n<           (@ModuleCat.moduleCategory.{u, u} k (@CommRing.toRing.{u} k inst✝¹)) (@MonCat.of.{u} G inst✝))\r\n<         (@Action.instMonoidalCategoryActionInstCategoryAction.{u} (@ModuleCat.{u, u} k (@CommRing.toRing.{u} k inst✝¹))\r\n<           (@ModuleCat.moduleCategory.{u, u} k (@CommRing.toRing.{u} k inst✝¹)) (@MonCat.of.{u} G inst✝)\r\n<           (@ModuleCat.monoidalCategory.{u} k inst✝¹))\r\n<         A B)))\r\n---\r\n>     (@CategoryTheory.MonoidalCategory.tensorObj.{u, u + 1} (@ModuleCat.{u, u} k (@CommRing.toRing.{u} k inst✝¹))\r\n>       (@ModuleCat.moduleCategory.{u, u} k (@CommRing.toRing.{u} k inst✝¹)) (@ModuleCat.monoidalCategory.{u} k inst✝¹)\r\n>       (@Action.V.{u} (@ModuleCat.{u, u} k (@CommRing.toRing.{u} k inst✝¹))\r\n>         (@ModuleCat.moduleCategory.{u, u} k (@CommRing.toRing.{u} k inst✝¹)) (@MonCat.of.{u} G inst✝) A)\r\n>       (@Action.V.{u} (@ModuleCat.{u, u} k (@CommRing.toRing.{u} k inst✝¹))\r\n>         (@ModuleCat.moduleCategory.{u, u} k (@CommRing.toRing.{u} k inst✝¹)) (@MonCat.of.{u} G inst✝) B)))\r\n```\r\nIf you don't immediately understand what's happening there then it might be best to just remove `simp` and trust the linter in both cases. It usually knows best. Or figure out how to get the output of `simp` as the statement of the theorem? (I don't know how to do this). It seems that all uses of this lemma have been removed by your port of this file anyway!",
                    "createdAt": "2023-06-14T18:43:37Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JeAqz",
                    "body": "Scott is investigating the type-simplifying `@[simps]` lemmas that fire here and produce that diff. I tried removing them all, and `simp` is then happy to use my `nolint` lemmas (without me telling it to). But the `@[simps]` lemmas I removed are sometimes useful, and taking them away breaks stuff. \r\n\r\nAs you say, though, I don't actually need my `nolint` lemmas to be `simp` lemmas, so I'm just gonna remove the `simp` attributes for now.",
                    "createdAt": "2023-06-16T18:36:01Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JV1KK",
                    "body": "```suggestion\r\n/- Porting note: linter informs me the LHS simplifies to... itself.\r\nBut fwiw I also can't get simp to use this lemma. -/\r\n```\r\nIt's better to repeat the note, in case the other one changes or is removed, but this one isn't.",
                    "createdAt": "2023-06-15T05:42:34Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JXJIf",
                    "body": "thanks, done!",
                    "createdAt": "2023-06-15T10:34:35Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JV1fi",
                    "body": "```suggestion\r\n@[simp]\r\ntheorem linearization_μ_inv_hom (X Y : Action (Type u) (MonCat.of G)) :\r\n    (inv ((linearization k G).μ X Y)).hom = (finsuppTensorFinsupp' k X.V Y.V).symm.toLinearMap := by\r\n-- Porting note: broken proof was\r\n/-simp_rw [← Action.forget_map, Functor.map_inv, Action.forget_map, linearization_μ_hom]\r\n  apply IsIso.inv_eq_of_hom_inv_id _\r\n  exact LinearMap.ext fun x => LinearEquiv.symm_apply_apply _ _-/\r\n```",
                    "createdAt": "2023-06-15T05:43:29Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JXJLm",
                    "body": "thanks, done!",
                    "createdAt": "2023-06-15T10:34:47Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JV1td",
                    "body": "```suggestion\r\n```\r\nLines like this can be deleted.",
                    "createdAt": "2023-06-15T05:44:58Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JXJX8",
                    "body": "thanks - I've also deleted the first line like this about how `@[derive] abbrev` is unsupported.",
                    "createdAt": "2023-06-15T10:35:38Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JZTmi",
                    "body": "I've heard Eric W argue that priorities are a bad way to deal with instances if you're battling a diamond, because some lemma somewhere will find the other route anyway. But is this not a diamond? Is `priority := high` necessary? What breaks if you remove it?",
                    "createdAt": "2023-06-15T17:59:41Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JejBa",
                    "body": "It's something to do with universes; see the instance above it:\r\n```\r\ninstance hasLimits : HasLimits (ModuleCat.{w} R) :=\r\n  ModuleCat.hasLimitsOfSize.{w, w, u}\r\n#align Module.has_limits ModuleCat.hasLimits\r\n\r\ninstance (priority := high) hasLimits' : HasLimits (ModuleCat.{u} R) :=\r\n  ModuleCat.hasLimitsOfSize.{u, u, u}\r\n```\r\n\r\n@joelriou added it to fix the error you worked on [here](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/!4.234761.20universe.20issues). I don't really understand it at the moment :)",
                    "createdAt": "2023-06-16T20:27:07Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JZUXa",
                    "body": "Do you really need all those imports? Or maybe the fashion nowadays is to leave them anyway?",
                    "createdAt": "2023-06-15T18:03:07Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JaetY",
                    "body": "I could only remove one!",
                    "createdAt": "2023-06-16T01:23:28Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JZU0v",
                    "body": "```suggestion\r\n  -- porting note: was `V.ρ`\r\n  Action.ρ V\r\n```",
                    "createdAt": "2023-06-15T18:05:18Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JZm-F",
                    "body": "These two exts were just `ext` in Lean 3. Should `TensorProduct.ext'` be ~~a `simp`~~ an `ext` lemma?",
                    "createdAt": "2023-06-15T19:27:39Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ja4ur",
                    "body": "Do you mean an `ext` lemma?\r\nI think in Lean 3 we didn't have it as an ext lemma globally, but enabled it locally on occasion.",
                    "createdAt": "2023-06-16T05:18:40Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5JegeI",
                    "body": "I tried enabling it locally with high priority, but Lean still won't use it. (I can't find it enabled locally anywhere in mathlib3 either).",
                    "createdAt": "2023-06-16T20:14:34Z",
                    "author": {
                      "login": "101damnations"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JZn70",
                    "body": "```suggestion\r\n/-- Auxiliary lemma for `to_Module_monoid_algebra`. -/\r\n```",
                    "createdAt": "2023-06-15T19:32:32Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5JZo29",
                    "body": "Maybe add a porting note that this `erw` was `simp only` in mathlib3?",
                    "createdAt": "2023-06-15T19:37:20Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQwNzQ1MTA0",
              "login": "101damnations"
            },
            {
              "id": "MDQ6VXNlcjMzODQ3Njg2",
              "login": "ChrisHughes24"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: port RepresentationTheory.Rep",
        "updatedAt": "2023-06-21T10:32:39Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5041",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0d05d3cdb31549a795e8dcd3e0eda8239e0316d6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5afe352ae96307736675470386d25600210273cb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4f4ba7035473e84e691eda0ccd5dca17b29fc389"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI3vpqM",
              "createdAt": "2023-06-14T08:16:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHdNnVg",
                "name": "mathlib-port"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI3vp9R",
              "createdAt": "2023-06-14T08:16:12Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3f6d4e3467cb1d4f91bd6fd8753325d883050c15"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "81843becd9a6a897cdd10d613d6df682727ecceb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9e1dbe9e6787ef213b6cb94e59c1253606e66d49"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fe626cb227df66f8696b0c5bbbf7a71a78574129"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6c05caa92d6c9abb62845e00245b5a04d8893cba"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "699ce6ab81319755204be58d0ed2c0f008a57dba"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "de6ba285d84fa957a7310debc4d44b0d8157a439"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5e545356a0a990e2a27cf91a746962f20412cce2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f4071447c648cb40c467ea537dc2677dfaeb4ec0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db3a302c7b66ca0e5970513797d0e6066c3ff2f0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9ecb67069197ae459e231af2479b62e9ccb77c57"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5or1crzwAAAAI4HHc8",
              "createdAt": "2023-06-14T17:05:34Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI4HHdK",
              "createdAt": "2023-06-14T17:05:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI4HHdR",
              "createdAt": "2023-06-14T17:05:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3bd46bf8e64e469a2cea64e0d38dafb4fc34aac0"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5or1crzwAAAAI4IEJe",
              "createdAt": "2023-06-14T17:34:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5YQg9n",
              "createdAt": "2023-06-15T05:42:33Z",
              "body": "Thanks for leaving detailed porting notes. Would you please move them right above the point where the proof changed, instead of above the decl?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5or1crzwAAAAI4Yd7M",
              "createdAt": "2023-06-15T05:46:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI4Yd7S",
              "createdAt": "2023-06-15T05:46:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3808888b6cea0174db6998fe0caceed054ea7b00"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5e8E1o",
              "createdAt": "2023-06-15T10:46:49Z",
              "body": "Accidentally removed a `nolint simpNF` in the last commit - I'm going to modify some `@[simps]` attributes in other files as [suggested](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/!4.235041.20RepresentationTheory.2ERep/near/366297267) by Scott, so that `simp` stops unfolding types and meaning I have to add `nolint simpNF`s.",
              "author": {
                "login": "101damnations"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5b866edac4eec2d6508532fba6f9f1c5369b5cd1"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5or1crzwAAAAI4noqh",
              "createdAt": "2023-06-15T12:30:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI4noqr",
              "createdAt": "2023-06-15T12:30:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI4noq2",
              "createdAt": "2023-06-15T12:30:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5or1crzwAAAAI4oKQy",
              "createdAt": "2023-06-15T12:42:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5YOGaI",
              "createdAt": "2023-06-14T18:43:36Z",
              "body": "This looks fine to me. I've left some of my usual pernickety comments.",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bb6cc971bd21c49548487c789ed20e54933c773e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dedeeafbc58d2541ac4c610de8c01faeefe2b09d"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5fFPl0",
              "createdAt": "2023-06-16T19:49:50Z",
              "body": "I've removed 2 of the `protected`s I added in [the mathlib3 PR](https://github.com/leanprover-community/mathlib/pull/19170) because I don't think they have a good reason to be there. Not sure if this is worth a porting note or a backport.",
              "author": {
                "login": "101damnations"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "53d29185e1d88370726e3c1ecbb8e3db9dc00c35"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5fY9Rv",
              "createdAt": "2023-06-21T08:03:41Z",
              "body": "bors merge",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5or1crzwAAAAI7mUzu",
              "createdAt": "2023-06-21T08:03:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5or1crzwAAAAI7mU3Q",
              "createdAt": "2023-06-21T08:04:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5fZxxl",
              "createdAt": "2023-06-21T10:32:29Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5332388361/jobs/9661500092)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5332388361/jobs/9661500246)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5332388361/jobs/9661500391)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5or1crzwAAAAI7tXWH",
              "createdAt": "2023-06-21T10:32:32Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5or1crzwAAAAI7tXmE",
              "createdAt": "2023-06-21T10:32:39Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
