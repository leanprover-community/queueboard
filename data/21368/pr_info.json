{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 322,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Very straightforward, essentially copypasting the design of `MonCat` back onto `MagmaCat` and `Semigrp`. We can probably do without this amount of `dsimp` lemmas, they should all be pretty easy to prove from generic `ConcreteCategory` results, but it doesn't hurt to have them in any case.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6cy__T",
              "body": "### PR summary [428c6f28bb](https://github.com/leanprover-community/mathlib4/pull/21368/commits/428c6f28bbb06681101b00b65da53ef381cc99ff)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Category.Semigrp.Basic | 347 | 345 | -2 (-0.58%) |\n| Mathlib.Algebra.Category.MonCat.Adjunctions | 476 | 474 | -2 (-0.42%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.Category.MonCat.Adjunctions` `Mathlib.Algebra.Category.Semigrp.Basic`|-2|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AddMagmaCat`\n`+ AddMagmaCat.Hom`\n`+ AddSemigrp`\n`+ AddSemigrp.Hom`\n`+ MagmaCat.Hom`\n`+ Semigrp.Hom`\n`+ comp_def`\n`+ instance : Category MagmaCat.{u}`\n`+ instance : Category Semigrp.{u}`\n`+ instance : CoeSort MagmaCat (Type u)`\n`+ instance : CoeSort Semigrp (Type u)`\n`+ instance : ConcreteCategory MagmaCat (· →ₙ* ·)`\n`+ instance : ConcreteCategory Semigrp (· →ₙ* ·)`\n`++ Hom.Simps.hom`\n`++ Hom.hom`\n`++ coe_comp`\n`++ coe_id`\n`++ comp_apply`\n`++ ext`\n`++ forget_map`\n`++ hom_comp`\n`++ hom_ext`\n`++ hom_id`\n`++ hom_inv_apply`\n`++ hom_ofHom`\n`++ id_apply`\n`++ inv_hom_apply`\n`++ ofHom_comp`\n`++ ofHom_hom`\n`++ ofHom_id`\n`++-- of`\n`++-- ofHom`\n`++-- ofHom_apply`\n`+--+ coe_of`\n`- bundledHom`\n`- instance (X : MagmaCat) : Mul X := X.str`\n`- instance (X : Semigrp) : Semigroup X := X.str`\n`- instance : BundledHom.ParentProjection @Semigroup.toMul := ⟨⟩`\n`- instance : CoeSort MagmaCat Type*`\n`- instance : CoeSort Semigrp Type*`\n`-- instFunLike`\n`-- instHasForget`\n`-- instMulHomClass`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (4.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4254|-4|porting notes|\n\nCurrent commit [428c6f28bb](https://github.com/leanprover-community/mathlib4/commit/428c6f28bbb06681101b00b65da53ef381cc99ff)\nReference commit [4eafc86ea5](https://github.com/leanprover-community/mathlib4/commit/4eafc86ea5a6c81fc9d4fc4519f577ded214015c)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-03T10:58:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c0ODd",
              "body": "!bench",
              "createdAt": "2025-02-03T13:00:33Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c0hTn",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/40924853-2ca7-4e97-b9e4-98c989feeaff) for commit 428c6f28bbb06681101b00b65da53ef381cc99ff.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/bec62472-44d4-4b4d-a44d-4ac3a6e6f29f/to/40924853-2ca7-4e97-b9e4-98c989feeaff) against commit 4eafc86ea5a6c81fc9d4fc4519f577ded214015c:\n```diff\n  Benchmark                                 Metric         Change\n  ===============================================================\n- ~Mathlib.Algebra.Category.Semigrp.Basic   instructions   100.8%\n```",
              "createdAt": "2025-02-03T13:30:23Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c0hpl",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+10.378⬝10⁹|(+0.00%)|\n|`lint`|+1.133⬝10⁹|(+0.01%)|\n|`Mathlib.Algebra.Category.Semigrp.Basic`|+10.720⬝10⁹|(+100.83%)|\n|`Mathlib.Algebra.Category.MonCat.Adjunctions`|+3.60⬝10⁹|(+25.90%)|\n|`Mathlib.CategoryTheory.Abelian.NonPreadditive`|-1.58⬝10⁹|(-3.90%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13114622963)",
              "createdAt": "2025-02-03T13:31:00Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c0i_t",
              "body": "`SemiGrp.Basic` got almost twice as long, so I'm not so worried about that slowdown. The adjunctions seem to become a bit slower for any concrete category, it looks like that's just from the terms getting more complicated.",
              "createdAt": "2025-02-03T13:33:22Z",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "428c6f28bbb06681101b00b65da53ef381cc99ff",
                "additions": 322,
                "deletions": 104,
                "committedDate": "2025-02-03T10:51:50Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGnhA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935856/job/36577585028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGoGw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935943/job/36577585179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGofg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935951/job/36577585278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDDYjA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920562/job/36577532044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGmKw",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935883/job/36577584683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGmlA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935884/job/36577584788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGmew",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935886/job/36577584763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGnIA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935881/job/36577584928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDDYZg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920584/job/36577532006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDDZ2g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920562/job/36577532378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDGoFQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935883/job/36577585173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDDZmg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920584/job/36577532314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDDbAA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920562/job/36577532672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhD0WcQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920584/job/36578334321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDHE3g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36577592542"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhDIN5w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21368&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-03T10:57:44Z",
        "deletions": 104,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Category/MonCat/Adjunctions.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/Semigrp/Basic.lean",
              "additions": 270,
              "deletions": 101
            },
            {
              "path": "MathlibTest/CategoryTheory/ConcreteCategory/Semigrp.lean",
              "additions": 47,
              "deletions": 0
            }
          ]
        },
        "headRefName": "concreteify-Semigrp",
        "headRefOid": "428c6f28bbb06681101b00b65da53ef381cc99ff",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6J1NM5",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21368,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGnhA",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935856/job/36577585028"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGoGw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935943/job/36577585179"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGofg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935951/job/36577585278"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDDYjA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920562/job/36577532044"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGmKw",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935883/job/36577584683"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGmlA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935884/job/36577584788"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGmew",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935886/job/36577584763"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGnIA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935881/job/36577584928"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDDYZg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920584/job/36577532006"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDDZ2g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920562/job/36577532378"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDGoFQ",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111935883/job/36577585173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDDZmg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920584/job/36577532314"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDDbAA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920562/job/36577532672"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhD0WcQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13111920584/job/36578334321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDHE3g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36577592542"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhDIN5w",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21368&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Algebra/Category): `ConcreteCategory` instance for `Semigrp`",
        "updatedAt": "2025-02-03T13:33:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21368",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "428c6f28bbb06681101b00b65da53ef381cc99ff"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ogzfezwAAAAPDO-Qj",
              "createdAt": "2025-02-03T10:57:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ogzfezwAAAAPDO-Qy",
              "createdAt": "2025-02-03T10:57:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ogzfezwAAAAPDO-Q7",
              "createdAt": "2025-02-03T10:57:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6cy__T",
              "createdAt": "2025-02-03T10:58:39Z",
              "body": "### PR summary [428c6f28bb](https://github.com/leanprover-community/mathlib4/pull/21368/commits/428c6f28bbb06681101b00b65da53ef381cc99ff)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Category.Semigrp.Basic | 347 | 345 | -2 (-0.58%) |\n| Mathlib.Algebra.Category.MonCat.Adjunctions | 476 | 474 | -2 (-0.42%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.Category.MonCat.Adjunctions` `Mathlib.Algebra.Category.Semigrp.Basic`|-2|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AddMagmaCat`\n`+ AddMagmaCat.Hom`\n`+ AddSemigrp`\n`+ AddSemigrp.Hom`\n`+ MagmaCat.Hom`\n`+ Semigrp.Hom`\n`+ comp_def`\n`+ instance : Category MagmaCat.{u}`\n`+ instance : Category Semigrp.{u}`\n`+ instance : CoeSort MagmaCat (Type u)`\n`+ instance : CoeSort Semigrp (Type u)`\n`+ instance : ConcreteCategory MagmaCat (· →ₙ* ·)`\n`+ instance : ConcreteCategory Semigrp (· →ₙ* ·)`\n`++ Hom.Simps.hom`\n`++ Hom.hom`\n`++ coe_comp`\n`++ coe_id`\n`++ comp_apply`\n`++ ext`\n`++ forget_map`\n`++ hom_comp`\n`++ hom_ext`\n`++ hom_id`\n`++ hom_inv_apply`\n`++ hom_ofHom`\n`++ id_apply`\n`++ inv_hom_apply`\n`++ ofHom_comp`\n`++ ofHom_hom`\n`++ ofHom_id`\n`++-- of`\n`++-- ofHom`\n`++-- ofHom_apply`\n`+--+ coe_of`\n`- bundledHom`\n`- instance (X : MagmaCat) : Mul X := X.str`\n`- instance (X : Semigrp) : Semigroup X := X.str`\n`- instance : BundledHom.ParentProjection @Semigroup.toMul := ⟨⟩`\n`- instance : CoeSort MagmaCat Type*`\n`- instance : CoeSort Semigrp Type*`\n`-- instFunLike`\n`-- instHasForget`\n`-- instMulHomClass`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (4.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4254|-4|porting notes|\n\nCurrent commit [428c6f28bb](https://github.com/leanprover-community/mathlib4/commit/428c6f28bbb06681101b00b65da53ef381cc99ff)\nReference commit [4eafc86ea5](https://github.com/leanprover-community/mathlib4/commit/4eafc86ea5a6c81fc9d4fc4519f577ded214015c)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ogzfezwAAAAPDPtNu",
              "createdAt": "2025-02-03T11:11:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6ogzfezwAAAAPDQC88",
              "createdAt": "2025-02-03T11:18:23Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c0ODd",
              "createdAt": "2025-02-03T13:00:33Z",
              "body": "!bench",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c0hTn",
              "createdAt": "2025-02-03T13:30:23Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/40924853-2ca7-4e97-b9e4-98c989feeaff) for commit 428c6f28bbb06681101b00b65da53ef381cc99ff.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/bec62472-44d4-4b4d-a44d-4ac3a6e6f29f/to/40924853-2ca7-4e97-b9e4-98c989feeaff) against commit 4eafc86ea5a6c81fc9d4fc4519f577ded214015c:\n```diff\n  Benchmark                                 Metric         Change\n  ===============================================================\n- ~Mathlib.Algebra.Category.Semigrp.Basic   instructions   100.8%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c0hpl",
              "createdAt": "2025-02-03T13:31:00Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|+10.378⬝10⁹|(+0.00%)|\n|`lint`|+1.133⬝10⁹|(+0.01%)|\n|`Mathlib.Algebra.Category.Semigrp.Basic`|+10.720⬝10⁹|(+100.83%)|\n|`Mathlib.Algebra.Category.MonCat.Adjunctions`|+3.60⬝10⁹|(+25.90%)|\n|`Mathlib.CategoryTheory.Abelian.NonPreadditive`|-1.58⬝10⁹|(-3.90%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13114622963)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c0i_t",
              "createdAt": "2025-02-03T13:33:22Z",
              "body": "`SemiGrp.Basic` got almost twice as long, so I'm not so worried about that slowdown. The adjunctions seem to become a bit slower for any concrete category, it looks like that's just from the terms getting more complicated.",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        }
      }
    }
  }
}
