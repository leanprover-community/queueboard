{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 152,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alreadydone"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "+ Add a criterion `isLimit_iff` for a cone to be a limit in Limits/Types.lean.\r\n\r\n+ Use the criterion to show the equivalence between the UniqueGluing and PairwiseIntersection sheaf conditions without going through EqualizerProducts, thereby generalize the universes.\r\n\r\n+ Remove theorems/def that are now unnecessary. (cc @justus-springer)\r\n\r\n+ Generalize `isSheaf_iff_isSheaf_forget` for sheaves on sites using `isSheaf_iff_isLimit`; use it to prove and generalize the result on topological spaces, removing a large chunk of code.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-10-21T07:29:41Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5pDxTt",
              "body": "@kbuzzard I've been able to generalize the universes in `isSheaf_iff_isSheaf_forget` in https://github.com/leanprover-community/mathlib4/pull/7654/commits/05b5bb61a29af22d6a10f177570ce3112278d6b0, which you requested in the comments in [#5659](https://github.com/leanprover-community/mathlib4/pull/5659), using the sheaf condition `isSheaf_iff_isLimit` I introduced [two years ago](https://github.com/leanprover-community/mathlib/commit/343cbd9867860506f5daded9173cc1a3bc064906). This sheaf condition in terms of limits is very convenient as it doesn't require any extra conditions (pullbacks in C, products in A), and is manifestly equivalent to the OpensLeCover condition on topological spaces; I should probably add it to the module docstring to make it more well-known. When C has pullbacks, we could use the Pairwise diagram to define a \"PairwisePullback\" sheaf condition, which would have the advantage of not requiring [HasProducts A], which the equalizer sheaf condition requires. Since the category of opens has pullbacks, the [PairwiseIntersections](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Sheaves/SheafCondition/PairwiseIntersections.html#TopCat.Presheaf.IsSheafPairwiseIntersections) condition is also unconditionally equivalent to the usual sheaf condition, and in this PR I have successfully used it to generalize universes in the UniqueGluing sheaf condition. From my personal experience (not a heavy user of sheaves on sites), I think the equalizer condition (and EqualizerProducts for topological spaces) could be superseded by such a PairwisePullback condition and deprecated.",
              "createdAt": "2023-10-14T04:50:15Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pGSBV",
              "body": "Pinging @semorrison for review as this finishes the incomplete universe generalization in #5726.",
              "createdAt": "2023-10-15T03:23:10Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pHv0m",
              "body": "> Pinging @semorrison for review as this finishes the incomplete universe generalization in #5726.\r\n\r\nThanks, but I don't have time to review this at the moment.",
              "createdAt": "2023-10-16T02:42:06Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pP4pZ",
              "body": "> I think the equalizer condition (and EqualizerProducts for topological spaces) could be superseded by such a PairwisePullback condition and deprecated.\r\n\r\nThe equalizer condition is quite a prominent one in the literature and I think it should be kept nonetheless?",
              "createdAt": "2023-10-17T06:46:55Z",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pYDdo",
              "body": "> The equalizer condition is quite a prominent one in the literature and I think it should be kept nonetheless?\r\n\r\nI think it could go into Archive/ because I just don't see how it could be useful for mathlib development. It's basically just a version of PairwiseIntersection that requires an extra condition (existence of products), and I don't see any advantage working with equalizer diagram between products vs. working directly with the pairwise diagram. Rather than taking the products and then equalizer, it's easier to take the limit of a diagram in one stretch, and this is the approach used to do sheafification (where [WalkingMultispan](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instInhabitedWalkingMultispan) is a generalization of the Pairwise category). (The only exception is probably when all intersections are empty, so the limit is actually a product.)\r\n\r\nThe existence of the product-equalizer condition in mathlib seems to lead to confusion and less general results with unnecessary HasProduct assumptions. Probably due to its centrality in the literature people tends to develop APIs around it and make it a hub to connect sheaf conditions or else, which led to less general results. I think there should at least be a warning that its use is discouraged, and PairwiseIntersections/Pullbacks should be used instead.",
              "createdAt": "2023-10-18T08:09:12Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pYJcy",
              "body": "I agree that it is not useful for mathlib development, but IMO mathlib should still provide its results in forms that a substantial amount of working mathematicians are most familiar with if we want it to become a first choice for working mathematicians. I think a warning would be good enough.",
              "createdAt": "2023-10-18T08:22:31Z",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5puJkJ",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6595862991/job/17921311620)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6595862991/job/17921311651)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6595862991/job/17921311734)",
              "createdAt": "2023-10-21T07:29:40Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c1d2752d5213bdf6a44571441279c60a87710630",
                "additions": 80,
                "deletions": 109,
                "committedDate": "2023-10-13T06:14:27Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxumath@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "05b5bb61a29af22d6a10f177570ce3112278d6b0",
                "additions": 19,
                "deletions": 13,
                "committedDate": "2023-10-14T04:35:24Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "578d9209c114a7fd86921323fc1b2937dbf0528f",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2023-10-14T04:58:05Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8ee1a50932c6ce8cdf526259a77c2a45082e6be7",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-14T05:05:42Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "980e39108ef40397593c20576826c9e90ce1cff9",
                "additions": 26,
                "deletions": 26,
                "committedDate": "2023-10-14T06:18:36Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f2ce63096f9719ea55fee12126aacd67f98f0746",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-14T06:42:40Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b9e3d96f7bf9f4e33ddf48e745f2ff4e20fedcf7",
                "additions": 8,
                "deletions": 7,
                "committedDate": "2023-10-14T06:46:49Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cf66121980b48c355dff246f307773584144bcb8",
                "additions": 18,
                "deletions": 189,
                "committedDate": "2023-10-14T07:09:03Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b040911c9d2719a559c0690861a737ce120a4ae5",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-10-14T07:22:03Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2a38bdc312afe1c0ab038ec12db17abae46ada1b",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-15T03:35:19Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "913850e281a07e1c956b0a57c85aa680efcb82ab",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-10-18T07:49:37Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c62d83d26b39de47bdb6a3b3a1cd0eaed818f1fe",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2023-10-18T07:51:11Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "171374d4808465f45ce43c7200e6a92037407a3a",
                "additions": 6975,
                "deletions": 3684,
                "committedDate": "2023-10-19T17:25:42Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1084e56e4ec8e42a9f4386a22836650203adf990",
                "additions": 1049,
                "deletions": 611,
                "committedDate": "2023-10-20T14:38:38Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "daa8e51b1ac398d3c780f913b5b8f819df10b3b6",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-21T00:14:55Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9834b849e69d249b82b75d1abd52e705f9c50343",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-21T00:15:40Z",
                "author": {
                  "name": "Junyan Xu",
                  "email": "junyanxu.math@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-13T06:25:19Z",
        "deletions": 344,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Limits/Types.lean",
              "additions": 54,
              "deletions": 25
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Sheaf.lean",
              "additions": 24,
              "deletions": 15
            },
            {
              "path": "Mathlib/Topology/Sheaves/Forget.lean",
              "additions": 18,
              "deletions": 189
            },
            {
              "path": "Mathlib/Topology/Sheaves/SheafCondition/UniqueGluing.lean",
              "additions": 56,
              "deletions": 115
            }
          ]
        },
        "headRefName": "UniqueGluing",
        "headRefOid": "9834b849e69d249b82b75d1abd52e705f9c50343",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5ctKSr",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
              "color": "33DBEC",
              "name": "t-algebraic-geometry"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kycbM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2023-10-20T21:57:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kzaKx",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-10-21T06:26:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7654,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kONN9",
              "body": "LGTM modulo the comments that I'm not sure about at all.",
              "state": "APPROVED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2023-10-17T06:40:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kZcsi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-10-18T08:09:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kycbM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "erdOne"
              },
              "submittedAt": "2023-10-20T21:57:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kzaKx",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-10-21T06:26:17Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ8gW",
                    "body": "I'm not familiar with the new naming conventions at all, but should this be `coneOfSection`?",
                    "createdAt": "2023-10-17T06:22:28Z",
                    "author": {
                      "login": "erdOne"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RRGnJ",
                    "body": "Thanks, renamed",
                    "createdAt": "2023-10-18T08:09:33Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ8hH",
                    "body": "Maybe `sectionOfCone`?",
                    "createdAt": "2023-10-17T06:22:30Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RJ_Xh",
                    "body": "`objPairwiseOfFamily`?",
                    "createdAt": "2023-10-17T06:35:52Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RgpYh",
                    "body": "```suggestion\r\ndef IsCompatible.sectionPairwise {sf} (h : IsCompatible F U sf) :\r\n```",
                    "createdAt": "2023-10-20T21:57:10Z",
                    "author": {
                      "login": "erdOne"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjM2NDE0Mjcw",
              "login": "erdOne"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: universe generalizations in UniqueGluing and Forget",
        "updatedAt": "2023-10-21T07:29:45Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7654",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1d2752d5213bdf6a44571441279c60a87710630"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ6NkWf",
              "createdAt": "2023-10-13T06:25:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ6NkWl",
              "createdAt": "2023-10-13T06:25:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ6NkWo",
              "createdAt": "2023-10-13T06:25:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5O24vh",
              "createdAt": "2023-10-13T07:02:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5ctT-Y",
                "title": "[Merged by Bors] - feat: miscellaneous lemmas about local homeomorphisms",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7655"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ6PJ2p",
              "createdAt": "2023-10-13T07:15:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ6cOcZ",
              "createdAt": "2023-10-13T13:03:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
                "name": "t-algebraic-geometry"
              }
            },
            {
              "__typename": "UnsubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "05b5bb61a29af22d6a10f177570ce3112278d6b0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pDxTt",
              "createdAt": "2023-10-14T04:50:15Z",
              "body": "@kbuzzard I've been able to generalize the universes in `isSheaf_iff_isSheaf_forget` in https://github.com/leanprover-community/mathlib4/pull/7654/commits/05b5bb61a29af22d6a10f177570ce3112278d6b0, which you requested in the comments in [#5659](https://github.com/leanprover-community/mathlib4/pull/5659), using the sheaf condition `isSheaf_iff_isLimit` I introduced [two years ago](https://github.com/leanprover-community/mathlib/commit/343cbd9867860506f5daded9173cc1a3bc064906). This sheaf condition in terms of limits is very convenient as it doesn't require any extra conditions (pullbacks in C, products in A), and is manifestly equivalent to the OpensLeCover condition on topological spaces; I should probably add it to the module docstring to make it more well-known. When C has pullbacks, we could use the Pairwise diagram to define a \"PairwisePullback\" sheaf condition, which would have the advantage of not requiring [HasProducts A], which the equalizer sheaf condition requires. Since the category of opens has pullbacks, the [PairwiseIntersections](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Sheaves/SheafCondition/PairwiseIntersections.html#TopCat.Presheaf.IsSheafPairwiseIntersections) condition is also unconditionally equivalent to the usual sheaf condition, and in this PR I have successfully used it to generalize universes in the UniqueGluing sheaf condition. From my personal experience (not a heavy user of sheaves on sites), I think the equalizer condition (and EqualizerProducts for topological spaces) could be superseded by such a PairwisePullback condition and deprecated.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "578d9209c114a7fd86921323fc1b2937dbf0528f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8ee1a50932c6ce8cdf526259a77c2a45082e6be7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "980e39108ef40397593c20576826c9e90ce1cff9"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ65JB-",
              "createdAt": "2023-10-14T06:21:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ65JCE",
              "createdAt": "2023-10-14T06:21:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2ce63096f9719ea55fee12126aacd67f98f0746"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b9e3d96f7bf9f4e33ddf48e745f2ff4e20fedcf7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cf66121980b48c355dff246f307773584144bcb8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b040911c9d2719a559c0690861a737ce120a4ae5"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ66ELc",
              "createdAt": "2023-10-14T07:22:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ66ELr",
              "createdAt": "2023-10-14T07:22:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ66ELz",
              "createdAt": "2023-10-14T07:22:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ669_n",
              "createdAt": "2023-10-14T08:19:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5ztjAdzwAAAAJ7LdlX",
              "createdAt": "2023-10-15T03:20:46Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQ3Nzk1Ng==",
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pGSBV",
              "createdAt": "2023-10-15T03:23:10Z",
              "body": "Pinging @semorrison for review as this finishes the incomplete universe generalization in #5726.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2a38bdc312afe1c0ab038ec12db17abae46ada1b"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pHv0m",
              "createdAt": "2023-10-16T02:42:06Z",
              "body": "> Pinging @semorrison for review as this finishes the incomplete universe generalization in #5726.\r\n\r\nThanks, but I don't have time to review this at the moment.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c5ztjAdzwAAAAJ7Wp-Y",
              "createdAt": "2023-10-16T02:42:11Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQ3Nzk1Ng==",
                "login": "kim-em"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kONN9",
              "createdAt": "2023-10-17T06:22:27Z",
              "body": "LGTM modulo the comments that I'm not sure about at all.",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pP4pZ",
              "createdAt": "2023-10-17T06:46:55Z",
              "body": "> I think the equalizer condition (and EqualizerProducts for topological spaces) could be superseded by such a PairwisePullback condition and deprecated.\r\n\r\nThe equalizer condition is quite a prominent one in the literature and I think it should be kept nonetheless?",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "913850e281a07e1c956b0a57c85aa680efcb82ab"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c62d83d26b39de47bdb6a3b3a1cd0eaed818f1fe"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ9HECK",
              "createdAt": "2023-10-18T07:51:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pYDdo",
              "createdAt": "2023-10-18T08:09:12Z",
              "body": "> The equalizer condition is quite a prominent one in the literature and I think it should be kept nonetheless?\r\n\r\nI think it could go into Archive/ because I just don't see how it could be useful for mathlib development. It's basically just a version of PairwiseIntersection that requires an extra condition (existence of products), and I don't see any advantage working with equalizer diagram between products vs. working directly with the pairwise diagram. Rather than taking the products and then equalizer, it's easier to take the limit of a diagram in one stretch, and this is the approach used to do sheafification (where [WalkingMultispan](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.instInhabitedWalkingMultispan) is a generalization of the Pairwise category). (The only exception is probably when all intersections are empty, so the limit is actually a product.)\r\n\r\nThe existence of the product-equalizer condition in mathlib seems to lead to confusion and less general results with unnecessary HasProduct assumptions. Probably due to its centrality in the literature people tends to develop APIs around it and make it a hub to connect sheaf conditions or else, which led to less general results. I think there should at least be a warning that its use is discouraged, and PairwiseIntersections/Pullbacks should be used instead.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pYJcy",
              "createdAt": "2023-10-18T08:22:31Z",
              "body": "I agree that it is not useful for mathlib development, but IMO mathlib should still provide its results in forms that a substantial amount of working mathematicians are most familiar with if we want it to become a first choice for working mathematicians. I think a warning would be good enough.",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ9J_vS",
              "createdAt": "2023-10-18T08:49:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "171374d4808465f45ce43c7200e6a92037407a3a"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ-tlfX",
              "createdAt": "2023-10-19T18:48:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1084e56e4ec8e42a9f4386a22836650203adf990"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ_R_yT",
              "createdAt": "2023-10-20T14:38:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ_R_yZ",
              "createdAt": "2023-10-20T14:38:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5ztjAdzwAAAAJ_SADN",
              "createdAt": "2023-10-20T14:38:54Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ_UJwT",
              "createdAt": "2023-10-20T15:21:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kycbM",
              "createdAt": "2023-10-20T21:57:10Z",
              "body": "",
              "author": {
                "login": "erdOne"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "daa8e51b1ac398d3c780f913b5b8f819df10b3b6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9834b849e69d249b82b75d1abd52e705f9c50343"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kzaKx",
              "createdAt": "2023-10-21T06:26:17Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5ztjAdzwAAAAJ_mLQo",
              "createdAt": "2023-10-21T06:26:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5ztjAdzwAAAAJ_mLQ1",
              "createdAt": "2023-10-21T06:26:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5puJkJ",
              "createdAt": "2023-10-21T07:29:40Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6595862991/job/17921311620)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6595862991/job/17921311651)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6595862991/job/17921311734)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5ztjAdzwAAAAJ_mkfb",
              "createdAt": "2023-10-21T07:29:42Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5ztjAdzwAAAAJ_mkg9",
              "createdAt": "2023-10-21T07:29:45Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PIAB2",
              "createdAt": "2023-10-31T04:53:57Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5duqVX",
                "title": "[Merged by Bors] - feat: categorical sheaf condition for presieves of arrows",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7918"
              }
            }
          ]
        }
      }
    }
  }
}
