{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 315,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY2ODQ3MjYy",
              "login": "EtienneC30"
            }
          ]
        },
        "author": {
          "login": "rudynicolop"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Add the closure properties union, intersection and reversal for NFA.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6gLglm",
              "body": "As per the discussion on #22298, this only includes changes to NFA.",
              "createdAt": "2025-02-27T09:25:18Z",
              "author": {
                "login": "rudynicolop"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gLgtV",
              "body": "### PR summary [15e2338d66](https://github.com/leanprover-community/mathlib4/pull/22361/commits/15e2338d661ba6f5c73c8322636c7fe83c6872fa)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ acceptsFrom`\n`+ accepts_acceptsFrom`\n`+ intersect`\n`+ intersect.Spec`\n`+ intersect.SpecFrom`\n`+ intersect.biUnionSpec`\n`+ intersect.startSpec`\n`+ mem_acceptsFrom`\n`+ mem_startsTo`\n`+ mem_unstep`\n`+ mem_unstepSet`\n`+ mem_unstepSet_step`\n`+ reverse`\n`+ reverse.Spec`\n`+ reverse.SpecFrom`\n`+ reverse.rewindFromSpec`\n`+ reverse.startsToSpec`\n`+ rewind`\n`+ rewindFrom`\n`+ startsTo`\n`+ stepProd`\n`+ stepSum`\n`+ union`\n`+ union.Spec`\n`+ union.SpecFrom`\n`+ union.biUnionSpec`\n`+ union.startSpec`\n`+ unstep`\n`+ unstepSet`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-27T09:25:30Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "15e2338d661ba6f5c73c8322636c7fe83c6872fa",
                "additions": 315,
                "deletions": 0,
                "committedDate": "2025-02-27T09:20:43Z",
                "author": {
                  "name": "rudynicolop",
                  "email": "rudypotamia@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05mHwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002850/job/37909792706"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOjFT_A",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144894566/job/39631016956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOjFIEA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144893380/job/39631013904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05u4HA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053088/job/37909936156"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05u4eA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053083/job/37909936248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOjFIQg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144893376/job/39631013954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05u5HQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053112/job/37909936413"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05mG7w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002849/job/37909792495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05u6Pg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053081/job/37909936702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05mFtA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002850/job/37909792180"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05mFXA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002849/job/37909792092"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05u4TA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053081/job/37909936204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05mJVw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002850/job/37909793111"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI06Grxg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002849/job/37910326214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05vSZw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37909942887"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI05wvHg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22361&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-27T09:24:24Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Computability/NFA.lean",
              "additions": 315,
              "deletions": 0
            }
          ]
        },
        "headRefName": "nfa-closure",
        "headRefOid": "15e2338d661ba6f5c73c8322636c7fe83c6872fa",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6MxEam",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
              "color": "33DBEC",
              "name": "t-computability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ij8ma",
              "body": "Thanks for your work. Here comes a first wave of comments. I only looked at the beginning but many comments should apply to all the file, so make sure to go through it carefully. Don't hesitate to ask if you have any questions.",
              "state": "COMMENTED",
              "author": {
                "login": "EtienneC30"
              },
              "submittedAt": "2025-03-29T10:46:36Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22361,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ij8ma",
              "body": "Thanks for your work. Here comes a first wave of comments. I only looked at the beginning but many comments should apply to all the file, so make sure to go through it carefully. Don't hesitate to ask if you have any questions.",
              "state": "COMMENTED",
              "author": {
                "login": "EtienneC30"
              },
              "submittedAt": "2025-03-29T10:46:36Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzEu",
                    "body": "This is more common (and sticks to the style of the file).\r\n```suggestion\r\n/-- `M.acceptsFrom S` is the language of `x` such that `M.evalFrom S x` is an accept state. -/\r\n```",
                    "createdAt": "2025-03-29T10:03:16Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzJl",
                    "body": "Rather this?\r\n```suggestion\r\n`M.acceptsFrom S` is the language of `x` such that `M.evalFrom S x` contains an accept state.\r\n```",
                    "createdAt": "2025-03-29T10:05:38Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzLM",
                    "body": "The statement of a theorem has to be indented with 4 spaces.\r\n```suggestion\r\ntheorem mem_acceptsFrom {S : Set σ} {x : List α} :\r\n    x ∈ M.acceptsFrom S ↔ ∃ s ∈ M.accept, s ∈ M.evalFrom S x := by rfl\r\n```",
                    "createdAt": "2025-03-29T10:06:36Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzVP",
                    "body": "simpler:\r\n```suggestion\r\nlemma accepts_acceptsFrom : M.accepts = M.acceptsFrom M.start := rfl\r\n```",
                    "createdAt": "2025-03-29T10:10:43Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzZ5",
                    "body": "Don't skip lines for delimiters of docstring. Also add the full stop please. And it is `M.unstep` rather than `M unstep`.\r\n```suggestion\r\n/-- `M.unstep` is the reverse of `M.step`. -/\r\n```",
                    "createdAt": "2025-03-29T10:12:44Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzgN",
                    "body": "We avoid spelling sets as functions. Also you can put everything on one line.\r\n```suggestion\r\ndef unstep (s : σ) (a : α) : Set σ := {s' | s ∈ M.step s' a}\r\n```",
                    "createdAt": "2025-03-29T10:16:09Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54YzmI",
                    "body": "Again you can put everything on one line. We tend to minimize explicit argument in `iff` results to simplify the use of dot notation, here all your variables appear on both sides of the `iff` so you can make them implicit. Also note that all the proofs which go as `by rfl` can be replaced by `Iff.rfl`, I would say the latter is more common in the library but you can choose the version you prefer.\r\n```suggestion\r\ntheorem mem_unstep {s t : σ} {a : α} : s ∈ M.unstep t a ↔ t ∈ M.step s a := Iff.rfl\r\n```",
                    "createdAt": "2025-03-29T10:18:52Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Yz1z",
                    "body": "Can you write a more enlightening docstring please? Here you just describe the equation below, I think it would be more helpful if you explained what it is in terms of states and paths and all.",
                    "createdAt": "2025-03-29T10:25:20Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Yz8V",
                    "body": "Again I would make everything explicit here, and mind the indentation. This comment apply to many results so can you please go carefully through all of them and apply it when needed?\r\n```suggestion\r\ntheorem mem_unstepSet {s : σ} {S : Set σ} {a : α} :\r\n    s ∈ M.unstepSet S a ↔ ∃ t ∈ S, s ∈ M.unstep t a := by\r\n  simp [unstepSet]\r\n```",
                    "createdAt": "2025-03-29T10:28:12Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Yz_l",
                    "body": "Shorter proof.\r\n```suggestion\r\n  simp [mem_unstepSet, mem_unstep]\r\n```",
                    "createdAt": "2025-03-29T10:30:07Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0Dg",
                    "body": "Typo. Also can you use the same variable in the docstring and in the def please (I'm talking about `S` vs `final`)? I'm not sure the docstring really describes the function. For me it rather computes a set of state rather than a set of paths.\r\n```suggestion\r\n/-- `M.rewindFrom S x` computes all possible paths through `M` with input `x` ending at an element\r\n  of `S`. -/\r\ndef rewindFrom (final : Set σ) : List α → Set σ :=\r\n```",
                    "createdAt": "2025-03-29T10:31:46Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0I0",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2025-03-29T10:34:08Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0KA",
                    "body": "```suggestion\r\n/-- `M.rewind x` computes all possible paths through `M` with input `x` ending at an element of\r\n  `M.accept`. -/\r\n```",
                    "createdAt": "2025-03-29T10:34:45Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0Up",
                    "body": "I'm not sure about the name, does \"starting to\" means something in English? Maybe `startsFrom` is better.",
                    "createdAt": "2025-03-29T10:39:38Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0WM",
                    "body": "```suggestion\r\n/-- `M.startsTo S` is the language of `x`\r\n```",
                    "createdAt": "2025-03-29T10:40:11Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0YC",
                    "body": "Can you use the `where` syntax please?",
                    "createdAt": "2025-03-29T10:40:48Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0dn",
                    "body": "Namespaces have to start with a capital letter. Besides, if we do this we can't use dot notation anymore, so I'd suggest to remove the `reverse.`. Also lemmas are written in `lower_camel_case`.\r\n```suggestion\r\nlemma spec_from (S : Set σ) (M : NFA α σ) :\r\n```",
                    "createdAt": "2025-03-29T10:43:13Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Y0e6",
                    "body": "You should rather state that (and `rfl` closes the goal):\r\n```suggestion\r\n  M.reverse.acceptsFrom = M.startsTo := by\r\n```",
                    "createdAt": "2025-03-29T10:44:04Z",
                    "author": {
                      "login": "EtienneC30"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3NTc3MDEw",
              "login": "rudynicolop"
            },
            {
              "id": "MDQ6VXNlcjY2ODQ3MjYy",
              "login": "EtienneC30"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05mHwg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002850/job/37909792706"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOjFT_A",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144894566/job/39631016956"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOjFIEA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144893380/job/39631013904"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05u4HA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053088/job/37909936156"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05u4eA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053083/job/37909936248"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOjFIQg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144893376/job/39631013954"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05u5HQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053112/job/37909936413"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05mG7w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002849/job/37909792495"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05u6Pg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053081/job/37909936702"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05mFtA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002850/job/37909792180"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05mFXA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002849/job/37909792092"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05u4TA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563053081/job/37909936204"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05mJVw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002850/job/37909793111"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI06Grxg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13563002849/job/37910326214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05vSZw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37909942887"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI05wvHg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22361&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Computability/NFA): nfa closure properties",
        "updatedAt": "2025-03-29T10:46:51Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22361",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "15e2338d661ba6f5c73c8322636c7fe83c6872fa"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6r5TpnzwAAAAPXFcfS",
              "createdAt": "2025-02-27T09:24:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gLglm",
              "createdAt": "2025-02-27T09:25:18Z",
              "body": "As per the discussion on #22298, this only includes changes to NFA.",
              "author": {
                "login": "rudynicolop"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6r5TpnzwAAAAPXFfJf",
              "createdAt": "2025-02-27T09:25:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
                "name": "t-computability"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gLgtV",
              "createdAt": "2025-02-27T09:25:30Z",
              "body": "### PR summary [15e2338d66](https://github.com/leanprover-community/mathlib4/pull/22361/commits/15e2338d661ba6f5c73c8322636c7fe83c6872fa)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ acceptsFrom`\n`+ accepts_acceptsFrom`\n`+ intersect`\n`+ intersect.Spec`\n`+ intersect.SpecFrom`\n`+ intersect.biUnionSpec`\n`+ intersect.startSpec`\n`+ mem_acceptsFrom`\n`+ mem_startsTo`\n`+ mem_unstep`\n`+ mem_unstepSet`\n`+ mem_unstepSet_step`\n`+ reverse`\n`+ reverse.Spec`\n`+ reverse.SpecFrom`\n`+ reverse.rewindFromSpec`\n`+ reverse.startsToSpec`\n`+ rewind`\n`+ rewindFrom`\n`+ startsTo`\n`+ stepProd`\n`+ stepSum`\n`+ union`\n`+ union.Spec`\n`+ union.SpecFrom`\n`+ union.biUnionSpec`\n`+ union.startSpec`\n`+ unstep`\n`+ unstepSet`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6r5TpnzwAAAAPgAMEf",
              "createdAt": "2025-03-08T20:10:01Z",
              "assignee": {
                "id": "MDQ6VXNlcjY2ODQ3MjYy",
                "login": "EtienneC30"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ij8ma",
              "createdAt": "2025-03-29T10:03:15Z",
              "body": "Thanks for your work. Here comes a first wave of comments. I only looked at the beginning but many comments should apply to all the file, so make sure to go through it carefully. Don't hesitate to ask if you have any questions.",
              "author": {
                "login": "EtienneC30"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6r5TpnzwAAAAP31Ka6",
              "createdAt": "2025-03-29T10:46:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            }
          ]
        }
      }
    }
  }
}
