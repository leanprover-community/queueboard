{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 677,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`Function.Embedding` is a type while `Embedding` is a proposition, and there are many other kinds of embeddings than topological embeddings. Hence this PR is a step towards\n1. renaming `Embedding` to `IsEmbedding` and similarly for neighborhing declarations (which `OpenEmbedding` is)\n2. namespacing it inside `Topology`\n\n[Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/rename.20.60Inducing.60.20and.20.60Embedding.60.3F). See #15993 for context.\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> Mathlib.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 75,
        "closed": true,
        "closedAt": "2024-10-18T21:51:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6QWo1G",
              "body": "### PR summary [55e9d277fe](https://github.com/leanprover-community/mathlib4/pull/17898/commits/55e9d277fed3a5888e95324f969ecd491e6d32ee)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ContMDiff.of_comp_isOpenEmbedding`\n`+ IsLocallyInjective_iff_isOpenEmbedding`\n`+ IsOpen.isOpenEmbedding_subtypeVal`\n`+ IsOpenEmbedding`\n`+ IsOpenEmbedding.coborder_preimage`\n`+ IsOpenEmbedding.compatiblePreserving`\n`+ IsOpenEmbedding.continuous`\n`+ IsOpenEmbedding.continuousAt_iff`\n`+ IsOpenEmbedding.functor_isContinuous`\n`+ IsOpenEmbedding.functor_obj_injective`\n`+ IsOpenEmbedding.generalizingMap`\n`+ IsOpenEmbedding.isLocalHomeomorph`\n`+ IsOpenEmbedding.isOpenMap`\n`+ IsOpenEmbedding.isQuasiSeparated_iff`\n`+ IsOpenEmbedding.locPathConnectedSpace`\n`+ IsOpenEmbedding.locallyCompactSpace`\n`+ IsOpenEmbedding.locallyConnectedSpace`\n`+ IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ IsOpenEmbedding.map_nhds_eq`\n`+ IsOpenEmbedding.measurableEmbedding`\n`+ IsOpenEmbedding.open_iff_image_open`\n`+ IsOpenEmbedding.open_iff_preimage_open`\n`+ IsOpenEmbedding.prod`\n`+ IsOpenEmbedding.prodMap`\n`+ IsOpenEmbedding.quasiSober`\n`+ IsOpenEmbedding.restrictPreimage`\n`+ IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ IsOpenEmbedding.tendsto_nhds_iff`\n`+ IsOpenEmbedding.tendsto_nhds_iff'`\n`+ QuasiSeparatedSpace.of_isOpenEmbedding`\n`+ Set.restrictPreimage_isOpenEmbedding`\n`+ Sigma.isOpenEmbedding_ι`\n`+ TopCat.Presheaf.isSheaf_of_isOpenEmbedding`\n`+ _root_.Embedding.toIsOpenEmbedding_of_surjective`\n`+ contMDiffOn_isOpenEmbedding_symm`\n`+ contMDiff_isOpenEmbedding`\n`+ finiteCoproduct.isOpenEmbedding_ι`\n`+ fromGlued_isOpenEmbedding`\n`+ fromOpenSubsetsGlue_isOpenEmbedding`\n`+ fst_isOpenEmbedding_of_right`\n`+ instance (X : LocallyRingedSpace) {U : TopCat} (f : U ⟶ X.toTopCat) (hf : IsOpenEmbedding f) :`\n`+ instance : (topologically IsOpenEmbedding).RespectsIso`\n`+ instance : LocPathConnectedSpace ℍ := isOpenEmbedding_coe.locPathConnectedSpace`\n`+ isLocalHomeomorphOn_iff_isOpenEmbedding_restrict`\n`+ isLocalHomeomorph_iff_isOpenEmbedding_restrict`\n`+ isOpenEmbedding'`\n`+ isOpenEmbedding_exp`\n`+ isOpenEmbedding_id`\n`+ isOpenEmbedding_iff_comp_isIso`\n`+ isOpenEmbedding_iff_comp_isIso'`\n`+ isOpenEmbedding_iff_continuous_injective_open`\n`+ isOpenEmbedding_iff_embedding_open`\n`+ isOpenEmbedding_iff_isIso_comp`\n`+ isOpenEmbedding_iff_isIso_comp'`\n`+ isOpenEmbedding_iff_isOpenEmbedding_of_iSup_eq_top`\n`+ isOpenEmbedding_inl`\n`+ isOpenEmbedding_inr`\n`+ isOpenEmbedding_isLocalAtTarget`\n`+ isOpenEmbedding_mk`\n`+ isOpenEmbedding_mk_symm`\n`+ isOpenEmbedding_natCast`\n`+ isOpenEmbedding_obj_top`\n`+ isOpenEmbedding_of_comp`\n`+ isOpenEmbedding_of_continuous_injective_open`\n`+ isOpenEmbedding_of_embedding_open`\n`+ isOpenEmbedding_of_injective`\n`+ isOpenEmbedding_of_le`\n`+ isOpenEmbedding_of_pullback_open_embeddings`\n`+ isOpenEmbedding_restrict`\n`+ isOpenEmbedding_sigmaMk`\n`+ isOpenEmbedding_sigma_map`\n`+ isOpenEmbedding_val`\n`+ localization_away_isOpenEmbedding`\n`+ pullback_map_isOpenEmbedding`\n`+ separated_by_isOpenEmbedding`\n`+ sigma_ι_isOpenEmbedding`\n`+ snd_isOpenEmbedding_of_left`\n`+ stalkPushforward_iso_of_isOpenEmbedding`\n`+ to_isOpenEmbedding`\n`++ ι_isOpenEmbedding`\n`++++ isOpenEmbedding_coe`\n`+++++ isOpenEmbedding`\n`+++++----- openEmbedding`\n`++++---- openEmbedding_coe`\n`++-- ι_openEmbedding`\n`+-+- restrictTopIso`\n`+-+-+- of_stalk_iso`\n`- OpenEmbedding.prod`\n`- instance (X : LocallyRingedSpace) {U : TopCat} (f : U ⟶ X.toTopCat) (hf : OpenEmbedding f) :`\n`- instance : (topologically OpenEmbedding).RespectsIso`\n`- instance : LocPathConnectedSpace ℍ := openEmbedding_coe.locPathConnectedSpace`\n`- openEmbedding_isLocalAtTarget`\n`- openEmbedding_of_continuous_injective_open`\n`-++- restrict`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-18T08:44:08Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Qb4sb",
              "body": "Please drop the new `sh` file from this PR (possibly opening a new PR with the file). Otherwise LGTM. Thanks!\r\nbors d+",
              "createdAt": "2024-10-18T21:02:58Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Qb4tK",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-10-18T21:03:00Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Qb41K",
              "body": "bors merge",
              "createdAt": "2024-10-18T21:03:25Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QcHmJ",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11411294446/job/31755271926)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11411294446/job/31755271734)",
              "createdAt": "2024-10-18T21:51:32Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "47980404309775b50333103b87fbd756224965b2",
                "additions": 421,
                "deletions": 418,
                "committedDate": "2024-10-18T21:02:24Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "55e9d277fed3a5888e95324f969ecd491e6d32ee",
                "additions": 260,
                "deletions": 5,
                "committedDate": "2024-10-18T21:02:45Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUo9Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975528/job/31754365173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUoAw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975525/job/31754364931"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUmVg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754364502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUnAg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31754364674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUoaA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975523/job/31754365032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUnJg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754364710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUoEA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31754364944"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUpbQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975523/job/31754365293"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUpUA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754365264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUmQA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31754364480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLUqZg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754365542"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZMDyhw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31755137671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLVnJg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31754381094"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHZLV_Lg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17898&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHd3hKkQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6564",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-18T08:43:17Z",
        "deletions": 419,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicGeometry/AffineScheme.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Cover/Open.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/FunctionField.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Gluing.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Limits.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/Affine.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/IsIso.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/OpenImmersion.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/Preimmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Noetherian.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/OpenImmersion.lean",
              "additions": 14,
              "deletions": 11
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/ProjectiveSpectrum/Scheme.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Properties.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Restrict.lean",
              "additions": 15,
              "deletions": 15
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Scheme.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Manifold.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Topology.lean",
              "additions": 9,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/Normed/Ring/Units.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Exp.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/Manifold/ChartedSpace.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Basic.lean",
              "additions": 18,
              "deletions": 9
            },
            {
              "path": "Mathlib/Geometry/Manifold/Instances/UnitsOfNormedAlgebra.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Geometry/Manifold/LocalInvariantProperties.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/SmoothManifoldWithCorners.lean",
              "additions": 6,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/LocallyRingedSpace.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/OpenImmersion.lean",
              "additions": 28,
              "deletions": 25
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace/Gluing.lean",
              "additions": 11,
              "deletions": 8
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/SheafedSpace.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/Stalks.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ConstMulAction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Constructions/DomMulAct.lean",
              "additions": 9,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Nonarchimedean/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Bases.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/CompHausLike/Limits.lean",
              "additions": 17,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/Category/Stonean/Limits.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Basic.lean",
              "additions": 25,
              "deletions": 13
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Products.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Pullbacks.lean",
              "additions": 30,
              "deletions": 18
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/OpenNhds.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Opens.lean",
              "additions": 21,
              "deletions": 12
            },
            {
              "path": "Mathlib/Topology/Clopen.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Compactification/OnePoint.lean",
              "additions": 13,
              "deletions": 10
            },
            {
              "path": "Mathlib/Topology/Compactness/LocallyCompact.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Connected/LocallyConnected.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Connected/PathConnected.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Constructions.lean",
              "additions": 45,
              "deletions": 27
            },
            {
              "path": "Mathlib/Topology/ContinuousOn.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Defs/Induced.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Gluing.lean",
              "additions": 15,
              "deletions": 9
            },
            {
              "path": "Mathlib/Topology/Homeomorph.lean",
              "additions": 11,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Inseparable.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Instances/ENNReal.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Instances/ENat.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Instances/EReal.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Irreducible.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/IsLocalHomeomorph.lean",
              "additions": 35,
              "deletions": 19
            },
            {
              "path": "Mathlib/Topology/LocalAtTarget.lean",
              "additions": 20,
              "deletions": 10
            },
            {
              "path": "Mathlib/Topology/LocallyClosed.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Maps/Basic.lean",
              "additions": 80,
              "deletions": 41
            },
            {
              "path": "Mathlib/Topology/PartialHomeomorph.lean",
              "additions": 18,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/QuasiSeparated.lean",
              "additions": 10,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/SeparatedMap.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Separation.lean",
              "additions": 10,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/Sets/Opens.lean",
              "additions": 10,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Sheaves/LocalPredicate.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Sheaves/SheafCondition/Sites.lean",
              "additions": 14,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Sheaves/Stalks.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Sober.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Support.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/no_lints_prime_decls.txt",
              "additions": 4,
              "deletions": 4
            }
          ]
        },
        "headRefName": "rename_open_embedding",
        "headRefOid": "55e9d277fed3a5888e95324f969ecd491e6d32ee",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5_EnFF",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17898,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUo9Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975528/job/31754365173"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUoAw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975525/job/31754364931"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUmVg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754364502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUnAg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31754364674"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUoaA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975523/job/31754365032"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUnJg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754364710"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUoEA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31754364944"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUpbQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975523/job/31754365293"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUpUA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754365264"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUmQA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31754364480"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLUqZg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975313/job/31754365542"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZMDyhw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11410975315/job/31755137671"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLVnJg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31754381094"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHZLV_Lg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17898&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHd3hKkQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6564",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore: Rename `OpenEmbedding` to `IsOpenEmbedding`",
        "updatedAt": "2024-10-18T21:51:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17898",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ayQk0zwAAAANtGRe5",
              "createdAt": "2024-10-18T08:43:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ayQk0zwAAAANtGRfE",
              "createdAt": "2024-10-18T08:43:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eHmLq",
              "createdAt": "2024-10-18T08:43:39Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59lVXO",
                "title": "[Merged by Bors] - chore: Rename `UniformInducing` to `IsUniformInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17398"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eHmc-",
              "createdAt": "2024-10-18T08:43:58Z",
              "source": {
                "id": "PR_kwDOFcwZ1c540qc3",
                "title": "chore(Topology): Namespace `Inducing`, `Embedding`...",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15993"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QWo1G",
              "createdAt": "2024-10-18T08:44:08Z",
              "body": "### PR summary [55e9d277fe](https://github.com/leanprover-community/mathlib4/pull/17898/commits/55e9d277fed3a5888e95324f969ecd491e6d32ee)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ContMDiff.of_comp_isOpenEmbedding`\n`+ IsLocallyInjective_iff_isOpenEmbedding`\n`+ IsOpen.isOpenEmbedding_subtypeVal`\n`+ IsOpenEmbedding`\n`+ IsOpenEmbedding.coborder_preimage`\n`+ IsOpenEmbedding.compatiblePreserving`\n`+ IsOpenEmbedding.continuous`\n`+ IsOpenEmbedding.continuousAt_iff`\n`+ IsOpenEmbedding.functor_isContinuous`\n`+ IsOpenEmbedding.functor_obj_injective`\n`+ IsOpenEmbedding.generalizingMap`\n`+ IsOpenEmbedding.isLocalHomeomorph`\n`+ IsOpenEmbedding.isOpenMap`\n`+ IsOpenEmbedding.isQuasiSeparated_iff`\n`+ IsOpenEmbedding.locPathConnectedSpace`\n`+ IsOpenEmbedding.locallyCompactSpace`\n`+ IsOpenEmbedding.locallyConnectedSpace`\n`+ IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ IsOpenEmbedding.map_nhds_eq`\n`+ IsOpenEmbedding.measurableEmbedding`\n`+ IsOpenEmbedding.open_iff_image_open`\n`+ IsOpenEmbedding.open_iff_preimage_open`\n`+ IsOpenEmbedding.prod`\n`+ IsOpenEmbedding.prodMap`\n`+ IsOpenEmbedding.quasiSober`\n`+ IsOpenEmbedding.restrictPreimage`\n`+ IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ IsOpenEmbedding.tendsto_nhds_iff`\n`+ IsOpenEmbedding.tendsto_nhds_iff'`\n`+ QuasiSeparatedSpace.of_isOpenEmbedding`\n`+ Set.restrictPreimage_isOpenEmbedding`\n`+ Sigma.isOpenEmbedding_ι`\n`+ TopCat.Presheaf.isSheaf_of_isOpenEmbedding`\n`+ _root_.Embedding.toIsOpenEmbedding_of_surjective`\n`+ contMDiffOn_isOpenEmbedding_symm`\n`+ contMDiff_isOpenEmbedding`\n`+ finiteCoproduct.isOpenEmbedding_ι`\n`+ fromGlued_isOpenEmbedding`\n`+ fromOpenSubsetsGlue_isOpenEmbedding`\n`+ fst_isOpenEmbedding_of_right`\n`+ instance (X : LocallyRingedSpace) {U : TopCat} (f : U ⟶ X.toTopCat) (hf : IsOpenEmbedding f) :`\n`+ instance : (topologically IsOpenEmbedding).RespectsIso`\n`+ instance : LocPathConnectedSpace ℍ := isOpenEmbedding_coe.locPathConnectedSpace`\n`+ isLocalHomeomorphOn_iff_isOpenEmbedding_restrict`\n`+ isLocalHomeomorph_iff_isOpenEmbedding_restrict`\n`+ isOpenEmbedding'`\n`+ isOpenEmbedding_exp`\n`+ isOpenEmbedding_id`\n`+ isOpenEmbedding_iff_comp_isIso`\n`+ isOpenEmbedding_iff_comp_isIso'`\n`+ isOpenEmbedding_iff_continuous_injective_open`\n`+ isOpenEmbedding_iff_embedding_open`\n`+ isOpenEmbedding_iff_isIso_comp`\n`+ isOpenEmbedding_iff_isIso_comp'`\n`+ isOpenEmbedding_iff_isOpenEmbedding_of_iSup_eq_top`\n`+ isOpenEmbedding_inl`\n`+ isOpenEmbedding_inr`\n`+ isOpenEmbedding_isLocalAtTarget`\n`+ isOpenEmbedding_mk`\n`+ isOpenEmbedding_mk_symm`\n`+ isOpenEmbedding_natCast`\n`+ isOpenEmbedding_obj_top`\n`+ isOpenEmbedding_of_comp`\n`+ isOpenEmbedding_of_continuous_injective_open`\n`+ isOpenEmbedding_of_embedding_open`\n`+ isOpenEmbedding_of_injective`\n`+ isOpenEmbedding_of_le`\n`+ isOpenEmbedding_of_pullback_open_embeddings`\n`+ isOpenEmbedding_restrict`\n`+ isOpenEmbedding_sigmaMk`\n`+ isOpenEmbedding_sigma_map`\n`+ isOpenEmbedding_val`\n`+ localization_away_isOpenEmbedding`\n`+ pullback_map_isOpenEmbedding`\n`+ separated_by_isOpenEmbedding`\n`+ sigma_ι_isOpenEmbedding`\n`+ snd_isOpenEmbedding_of_left`\n`+ stalkPushforward_iso_of_isOpenEmbedding`\n`+ to_isOpenEmbedding`\n`++ ι_isOpenEmbedding`\n`++++ isOpenEmbedding_coe`\n`+++++ isOpenEmbedding`\n`+++++----- openEmbedding`\n`++++---- openEmbedding_coe`\n`++-- ι_openEmbedding`\n`+-+- restrictTopIso`\n`+-+-+- of_stalk_iso`\n`- OpenEmbedding.prod`\n`- instance (X : LocallyRingedSpace) {U : TopCat} (f : U ⟶ X.toTopCat) (hf : OpenEmbedding f) :`\n`- instance : (topologically OpenEmbedding).RespectsIso`\n`- instance : LocPathConnectedSpace ℍ := openEmbedding_coe.locPathConnectedSpace`\n`- openEmbedding_isLocalAtTarget`\n`- openEmbedding_of_continuous_injective_open`\n`-++- restrict`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ayQk0zwAAAANtWP53",
              "createdAt": "2024-10-18T12:13:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Qb4sb",
              "createdAt": "2024-10-18T21:02:58Z",
              "body": "Please drop the new `sh` file from this PR (possibly opening a new PR with the file). Otherwise LGTM. Thanks!\r\nbors d+",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Qb4tK",
              "createdAt": "2024-10-18T21:03:00Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ayQk0zwAAAANt0TxW",
              "createdAt": "2024-10-18T21:03:02Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ayQk0zwAAAANt0UHm",
              "createdAt": "2024-10-18T21:03:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Qb41K",
              "createdAt": "2024-10-18T21:03:25Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QcHmJ",
              "createdAt": "2024-10-18T21:51:32Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11411294446/job/31755271926)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11411294446/job/31755271734)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6ayQk0zwAAAANt2P23",
              "createdAt": "2024-10-18T21:51:32Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6ayQk0zwAAAANt2P8n",
              "createdAt": "2024-10-18T21:51:36Z"
            }
          ]
        }
      }
    }
  }
}
