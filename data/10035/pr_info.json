{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 136,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "tb65536"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR proves that a transitive permutation group generated by transpositions must be the whole symmetric group.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-02-24T12:33:36Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5yGIl4",
              "body": "Thanks! I tried extracting the lemmas (https://github.com/leanprover-community/mathlib4/pull/10035/commits/47e8fbec44a4f2a7ca1cbb68ed3c6cc523754ee2).\r\n\r\nI was able to extract the second fact, but the statement ended up looking awfully clunky and specialized in my eyes, so I don't know if there's much point keeping it as a separate lemma?\r\n\r\nThe first fact (after adding a symmetry assumption on the generating set) seems tricky to extract since \"sending an element of T to an element of O\\T\" is not quite the same thing as \"swapping an element of T with an element of O\\T\", and going between these would require a bit of case bashing (you would assume sigma = swap x y takes a in T to b not in T, and then show that {x,y}={a,b}).",
              "createdAt": "2024-01-29T08:39:28Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yL03v",
              "body": "I'm going to suggest a golf and a helper lemma later tonight.",
              "createdAt": "2024-01-29T22:42:10Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yNNh8",
              "body": "I think that the following lemma is a nice generalization of your statement:\r\n```lean\r\nopen Subgroup MulAction in\r\ntheorem mem_closure_iff_mem_orbit_of_isSwap [Finite α] {S : Set (Perm α)} {σ : Perm α}\r\n    (hS : ∀ σ ∈ S, σ.IsSwap) : σ ∈ closure S ↔ ∀ x, σ x ∈ orbit (closure S) x := by\r\n  refine ⟨fun hσ x ↦ mem_orbit_iff.2 ⟨⟨σ, hσ⟩, rfl⟩, fun hσ ↦ ?_⟩\r\n```\r\n(I only prove the easy implication here).\r\n\r\nUnfortunately, I don't see a short proof yet. I'll think about it tomorrow.",
              "createdAt": "2024-01-30T04:43:55Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yNUGb",
              "body": "> Thanks! I tried extracting the lemmas (https://github.com/leanprover-community/mathlib4/commit/47e8fbec44a4f2a7ca1cbb68ed3c6cc523754ee2).\r\n\r\nThanks for trying!\r\n\r\n> I was able to extract the second fact, but the statement ended up looking awfully clunky and specialized in my eyes, so I don't know if there's much point keeping it as a separate lemma?\r\n\r\nI think it's not too clunky and is worthwhile to extract. Using `T.Pairwise (swap · · ∈ H)` would make it even less clunky, so would removing the unnecessary hypothesis `hb : b ∉ T`.\r\n~~And my other statement is probably shorter: if the stabilizer of T is a subset of H, and H includes a transposition (ab) with a in T, then the stabilizer of T ∪ {b} is a subset of H. You even added [Equiv.swap_mem_stabilizer](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/GroupAction/Basic.html#Equiv.swap_mem_stabilizer) already.~~\r\n\r\n> The first fact (after adding a symmetry assumption on the generating set) seems tricky to extract since \"sending an element of T to an element of O\\T\" is not quite the same thing as \"swapping an element of T with an element of O\\T\", and going between these would require a bit of case bashing (you would assume sigma = swap x y takes a in T to b not in T, and then show that {x,y}={a,b}).\r\n\r\nThe symmetry assumption is unnecessary if T or O\\T is finite. And yes we seem to be missing a lemma stating `swap a b = swap x y` iff `{a,b}={x,y}` (if a ≠ b or if x ≠ y), even though we have [Set.pair_eq_pair_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Set/Basic.html#Set.pair_eq_pair_iff). I think we should probably add that too!",
              "createdAt": "2024-01-30T05:16:45Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yRJGF",
              "body": "> ~~And my other statement is probably shorter: if the stabilizer of T is a subset of H, and H includes a transposition (ab) with a in T, then the stabilizer of T ∪ {b} is a subset of H.~~\r\n\r\nSorry, I don't know what I was thinking. The correct statement should be: if the [fixingSubgroup](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/GroupAction/FixingSubgroup.html#fixingSubgroup) of T' is a subset of H, and H includes a transposition (ab) with a not in T', then the fixingSubgroup of T'\\{b} is a subset of H.",
              "createdAt": "2024-01-30T15:05:35Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ycELL",
              "body": "I managed to get a sorry-free proof of @urkud's generalization. I haven't cleaned it up yet, but before I do, I just wanted to check whether either you had ideas for streamlining/shortcutting the proof at all? (for instance, is there an easier way to get something like `exists_list_swap`?)\r\n\r\n```\r\nimport Mathlib.GroupTheory.Perm.Cycle.Concrete\r\nimport Mathlib.Data.List.Card\r\nimport Mathlib.Data.List.Indexes\r\n\r\nopen Equiv List MulAction Pointwise Set Subgroup\r\n\r\nvariable {α : Type*} [DecidableEq α]\r\n\r\nlemma length_remove_le (l : List α) (a : α) :\r\n    (l.remove a).length ≤ l.length := by\r\n  induction' l with b l ih\r\n  · simp [remove]\r\n  · simp [remove]\r\n    split_ifs\r\n    · linarith\r\n    · simp\r\n      linarith\r\n\r\nlemma length_remove_lt_of_mem {l : List α} {a : α} (h : a ∈ l) :\r\n    (l.remove a).length < l.length := by\r\n  induction' l with b l ih\r\n  · contradiction\r\n  · rw [mem_cons] at h\r\n    rcases h with rfl | h\r\n    · simp [remove]\r\n      have := length_remove_le l a\r\n      linarith\r\n    · specialize ih h\r\n      simp [remove]\r\n      split_ifs\r\n      · linarith\r\n      · simp\r\n        linarith\r\n\r\ndef swapFactorsAux (l0 : List α) (a : α) (f : Perm α) (hf : ∀ {x}, f x ≠ x → x ∈ l0) :\r\n    { l : List α // (l.map (fun x ↦ swap x (f x))).prod = f ∧ f⁻¹ a ∉ l ∧ ∀ x ∈ l, x ∈ l0 } :=\r\n  if ha0 : f a = a then\r\n    if ha : a ∈ l0 then\r\n      have : (l0.remove a).length < l0.length := by\r\n        exact length_remove_lt_of_mem ha\r\n      let p := swapFactorsAux (l0.remove a) a f (by\r\n        intro x hx\r\n        rw [mem_remove_iff]\r\n        refine' ⟨hf hx, _⟩\r\n        rintro rfl\r\n        contradiction)\r\n      ⟨p, p.2.1, p.2.2.1, by\r\n        intro x hx\r\n        exact mem_of_mem_remove (p.2.2.2 x hx)\r\n        ⟩\r\n    else\r\n      match l0 with\r\n      | [] => ⟨[], Equiv.ext fun x => by\r\n          rw [map_nil, prod_nil]\r\n          exact (Classical.not_not.1 (mt hf (List.not_mem_nil _))).symm,\r\n        by simp⟩\r\n      | x :: l =>\r\n          if hx : f x = x then\r\n            let p := swapFactorsAux l a f (by\r\n              intro y hy\r\n              specialize hf hy\r\n              rw [mem_cons] at hf\r\n              rcases hf with rfl | hf\r\n              · contradiction\r\n              · exact hf\r\n            )\r\n            ⟨p, p.2.1, p.2.2.1, by\r\n              intro x hx\r\n              rw [mem_cons]\r\n              exact Or.inr (p.2.2.2 x hx)\r\n            ⟩\r\n          else\r\n            have : (l.remove x).length < (x :: l).length := by\r\n              have := length_remove_le l x\r\n              simp\r\n              linarith\r\n            let p := swapFactorsAux (l.remove x) (f x) (swap x (f x) * f) (by\r\n              intro y hy\r\n              rw [Perm.mul_apply] at hy\r\n              rcases eq_or_ne x y with rfl | h1\r\n              · rw [swap_apply_right] at hy\r\n                contradiction\r\n              · rcases eq_or_ne x (f y) with rfl | h2\r\n                · specialize hf h1\r\n                  rw [mem_cons, eq_comm] at hf\r\n                  rcases hf with _ | hf\r\n                  · contradiction\r\n                  · rw [mem_remove_iff]\r\n                    exact ⟨hf, h1.symm⟩\r\n                · rw [swap_apply_of_ne_of_ne h2.symm] at hy\r\n                  · specialize hf hy\r\n                    rw [mem_cons] at hf\r\n                    rcases hf with _ | hf\r\n                    · symm at h1\r\n                      contradiction\r\n                    · rw [mem_remove_iff]\r\n                      exact ⟨hf, h1.symm⟩\r\n                  · contrapose! h1\r\n                    symm\r\n                    simp only [EmbeddingLike.apply_eq_iff_eq] at h1\r\n                    exact h1\r\n            )\r\n            ⟨x :: p.1, by\r\n              rw [map_cons, prod_cons]\r\n              have key := p.2.1\r\n              rw [← eq_inv_mul_iff_mul_eq, swap_inv]\r\n              refine' Eq.trans _ key\r\n              apply congrArg\r\n              apply List.map_congr\r\n              intro y hy\r\n              congr 1\r\n              have key' := p.2.2.1\r\n              simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key'\r\n              have : y ≠ f⁻¹ x\r\n              · intro h\r\n                rw [h] at hy\r\n                exfalso\r\n                refine' key' hy\r\n              have : f y ≠ x\r\n              · contrapose! this\r\n                exact Perm.eq_inv_iff_eq.mpr this\r\n              rw [Perm.mul_apply]\r\n              have key'' := p.2.2.2 y hy\r\n              rw [swap_apply_of_ne_of_ne this]\r\n              simp only [ne_eq, EmbeddingLike.apply_eq_iff_eq]\r\n              rintro rfl\r\n              rw [mem_remove_iff] at key''\r\n              apply key''.2\r\n              rfl\r\n              ,\r\n              by\r\n                have key := p.2.2.1\r\n                simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key\r\n                rw [mem_cons, not_or]\r\n                have : f⁻¹ a = a\r\n                · rw [← ha0]\r\n                  simp\r\n                  simp [ha0]\r\n                rw [this]\r\n                rw [mem_cons, not_or] at ha\r\n                refine' ⟨ha.1, _⟩\r\n                intro h\r\n                apply ha.2\r\n                exact mem_of_mem_remove (p.2.2.2 a h)\r\n              , by\r\n                  intro y hy\r\n                  rw [mem_cons] at hy ⊢\r\n                  rcases hy with hy | hy\r\n                  · exact Or.inl hy\r\n                  · exact Or.inr (mem_of_mem_remove (p.2.2.2 y hy))⟩\r\n  else\r\n    have : (l0.remove a).length < l0.length := by\r\n      exact length_remove_lt_of_mem (hf ha0)\r\n    let p := swapFactorsAux (l0.remove a) (f a) (swap a (f a) * f) (by\r\n      intro x hx\r\n      rw [mem_remove_iff]\r\n      rw [Perm.mul_apply] at hx\r\n      rcases eq_or_ne x a with rfl | h\r\n      · rw [swap_apply_right] at hx\r\n        contradiction\r\n      · refine' ⟨_, h⟩\r\n        apply hf\r\n        intro h'\r\n        rw [h'] at hx\r\n        rw [swap_apply_ne_self_iff] at hx\r\n        replace hx := hx.2\r\n        rcases hx with rfl | rfl\r\n        · contradiction\r\n        · simp only [EmbeddingLike.apply_eq_iff_eq] at h'\r\n          contradiction\r\n      )\r\n    ⟨a :: p.1, by\r\n      have key := p.2.1\r\n      rw [map_cons, prod_cons]\r\n      rw [← eq_inv_mul_iff_mul_eq, swap_inv]\r\n      refine' Eq.trans _ key\r\n      apply congrArg\r\n      apply List.map_congr\r\n      intro x hx\r\n      congr 1\r\n      have key' := p.2.2.1\r\n      simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key'\r\n      have : x ≠ f⁻¹ a\r\n      · intro h\r\n        rw [h] at hx\r\n        exfalso\r\n        refine' key' hx\r\n      have : f x ≠ a\r\n      · contrapose! this\r\n        exact Perm.eq_inv_iff_eq.mpr this\r\n      rw [Perm.mul_apply]\r\n      have key'' := p.2.2.2 x hx\r\n      rw [mem_remove_iff] at key''\r\n      rw [swap_apply_of_ne_of_ne this]\r\n      simp only [ne_eq, EmbeddingLike.apply_eq_iff_eq]\r\n      exact key''.2,\r\n        by\r\n      have key := p.2.2.1\r\n      simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key\r\n      rw [mem_cons, not_or]\r\n      refine' ⟨_, key⟩\r\n      intro h\r\n      apply ha0\r\n      exact (eq_symm_apply f).mp (id h.symm), by\r\n        intro x hx\r\n        rw [mem_cons] at hx\r\n        rcases hx with rfl | hx\r\n        · exact hf ha0\r\n        · exact mem_of_mem_remove (p.2.2.2 x hx)\r\n      ⟩\r\ntermination_by swapFactorsAux l _ _ _ => l.length\r\n\r\ndef swapFactorsAux' (l0 : List α) (a : α) (f : Perm α) (hf : ∀ {x}, f x ≠ x → x ∈ l0) :\r\n    { l : List α // (l.map (fun x ↦ swap x (f x))).prod = f } :=\r\n  let h := swapFactorsAux l0 a f hf\r\n  ⟨h.1, h.2.1⟩\r\n\r\ndef truncSwapFactors [Fintype α] (f : Perm α) (a : α) :\r\n    Trunc { l : List α // (l.map (fun x ↦ swap x (f x))).prod = f } :=\r\n  Quotient.recOnSubsingleton (@Finset.univ α _).1 (fun l h => Trunc.mk (swapFactorsAux' l a f (h _)))\r\n    (show ∀ x, f x ≠ x → x ∈ (@Finset.univ α _).1 from fun _ _ => Finset.mem_univ _)\r\n\r\ndef exists_list_swap [Fintype α] (f : Perm α) :\r\n    ∃ l : List α, (l.map (fun x ↦ swap x (f x))).prod = f := by\r\n  rcases isEmpty_or_nonempty α with h | ⟨⟨a⟩⟩\r\n  · exact ⟨[], Subsingleton.elim _ _⟩\r\n  · have q := truncSwapFactors f a\r\n    refine' ⟨q.out, q.out.2⟩\r\n\r\nvariable [Finite α]\r\n\r\ntheorem aux2\r\n    {H : Subgroup (Perm α)} {T : Set α} (hT : T.Pairwise (swap · · ∈ H))\r\n    {a b : α} (ha : a ∈ T) (hab : swap a b ∈ H) :\r\n    ({b} ∪ T).Pairwise (swap · · ∈ H) := by\r\n  rintro x (rfl | hx) y (rfl | hy) hxy\r\n  · contradiction\r\n  · rcases eq_or_ne y a with rfl | h\r\n    · exact swap_comm x y ▸ hab\r\n    rw [← swap_mul_swap_mul_swap h hxy.symm]\r\n    exact H.mul_mem (H.mul_mem hab (hT hy ha h)) hab\r\n  · rcases eq_or_ne x a with rfl | h\r\n    · exact swap_comm x y ▸ hab\r\n    rw [swap_comm, ← swap_mul_swap_mul_swap h hxy]\r\n    exact H.mul_mem (H.mul_mem hab (hT hx ha h)) hab\r\n  · exact hT hx hy hxy\r\n\r\nlemma orbit_lemma {G : Type*} [Group G] {α : Type*} [MulAction G α] {a b c : α} (h1 : a ∈ orbit G c) :\r\n    b ∈ orbit G c ↔ b ∈ orbit G a := by\r\n  simp only [← orbit_eq_iff] at h1 ⊢\r\n  rw [h1]\r\n\r\ntheorem swap_mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {x y : α} : swap x y ∈ closure S ↔ x ∈ orbit (closure S) y := by\r\n  refine ⟨fun h ↦ mem_orbit_iff.mpr ⟨⟨swap x y, h⟩, swap_apply_right x y⟩, fun hf ↦ ?_⟩\r\n  let P : Set α → Prop := fun T ↦ T.Pairwise (swap · · ∈ closure S)\r\n  suffices : P (orbit (closure S) y)\r\n  · rcases eq_or_ne x y with rfl | hxy\r\n    · rw [swap_self]\r\n      apply one_mem\r\n    · exact this hf (mem_orbit_self y) hxy\r\n  refine' (toFinite _).induction_to ∅ (empty_subset _) (pairwise_empty _) (fun T hT ih ↦ _)\r\n  rcases T.eq_empty_or_nonempty with rfl | hT'\r\n  · exact ⟨y, by simp⟩\r\n  have key0 : ¬ closure S ≤ stabilizer (Perm α) T\r\n  · obtain ⟨a, haT⟩ := hT'\r\n    obtain ⟨b, hb, hbT⟩ := exists_of_ssubset hT\r\n    have ha : a ∈ orbit (closure S) y := hT.1 haT\r\n    obtain ⟨⟨σ, hσ⟩, rfl⟩ := (orbit_lemma ha).mp hb\r\n    exact fun h ↦ hbT (h hσ ▸ smul_mem_smul_set haT)\r\n  have key : ∃ a b, swap a b ∈ S ∧ a ∈ T ∧ b ∉ T\r\n  · rw [closure_le, not_subset] at key0\r\n    obtain ⟨τ, hτ, hτ'⟩ := key0\r\n    obtain ⟨x, y, -, rfl⟩ := hS τ hτ\r\n    rw [SetLike.mem_coe, swap_mem_stabilizer, not_iff] at hτ'\r\n    by_cases hx : x ∈ T\r\n    · exact ⟨x, y, hτ, hx, fun hy ↦ hτ'.mpr hy hx⟩\r\n    · exact ⟨y, x, swap_comm x y ▸ hτ, hτ'.mp hx, hx⟩\r\n  obtain ⟨a, b, hab, ha, hb⟩ := key\r\n  refine' ⟨b, ⟨_, hb⟩, aux2 ih ha (subset_closure hab)⟩\r\n  exact (orbit_lemma (hT.1 ha)).mpr ⟨⟨swap a b, subset_closure hab⟩, swap_apply_left a b⟩\r\n\r\ntheorem mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {f : Perm α} : f ∈ closure S ↔ ∀ x, f x ∈ orbit (closure S) x := by\r\n  refine ⟨fun hf x ↦ mem_orbit_iff.mpr ⟨⟨f, hf⟩, rfl⟩, fun hf ↦ ?_⟩\r\n  have := Fintype.ofFinite α\r\n  obtain ⟨l, hl⟩ := exists_list_swap f\r\n  refine hl ▸ list_prod_mem (fun x hx ↦ ?_)\r\n  obtain ⟨y, -, rfl⟩ := List.mem_map.mp hx\r\n  rw [swap_comm, swap_mem_closure_iff_mem_orbit_of_isSwap hS]\r\n  exact hf y\r\n```",
              "createdAt": "2024-01-31T21:07:06Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yeohi",
              "body": "Here is a proof that doesn't use List and also generalizes to action on an infinite type:\r\n```\r\nimport Mathlib.Data.Set.Finite\r\nimport Mathlib.GroupTheory.GroupAction.Basic\r\nimport Mathlib.GroupTheory.Perm.Support\r\n\r\nopen Equiv List MulAction Pointwise Set Subgroup\r\n\r\nvariable {G α : Type*} [Group G] [MulAction G α] [DecidableEq α]\r\n\r\nlemma orbit_lemma {a b c : α} (h : a ∈ orbit G c) :\r\n    b ∈ orbit G c ↔ b ∈ orbit G a := by\r\n  simp only [← orbit_eq_iff] at h ⊢\r\n  rw [h]\r\n\r\ntheorem aux1 (S : Set G) (T : Set α) {a : α} (hS : ∀ g ∈ S, g⁻¹ ∈ S)\r\n    (subset : T ⊆ orbit (closure S) a) (not_mem : a ∉ T) (nonempty : T.Nonempty) :\r\n    ∃ σ ∈ S, ∃ a ∈ T, σ • a ∉ T := by\r\n  have key0 : ¬ closure S ≤ stabilizer G T\r\n  · have ⟨b, hb⟩ := nonempty\r\n    obtain ⟨σ, rfl⟩ := subset hb\r\n    refine fun h ↦ not_mem ?_\r\n    rw [← h (inv_mem σ.2), mem_smul_set]\r\n    exact ⟨_, hb, show σ⁻¹ • σ • a = _ by simp⟩\r\n  contrapose! key0\r\n  refine (closure_le _).mpr fun σ hσ ↦ by_contra fun h ↦ ?_\r\n  simp_rw [SetLike.mem_coe, mem_stabilizer_iff, Set.ext_iff, not_forall, mem_smul_set] at h\r\n  obtain ⟨a, h⟩ := h\r\n  exact h ⟨fun ⟨b, hb, h⟩ ↦ h ▸ key0 _ hσ _ hb, fun h ↦ ⟨_, key0 _ (hS σ hσ) _ h, by simp⟩⟩\r\n\r\ntheorem SubmonoidClass.swap_mem_trans {a b c : α} {C} [SetLike C (Perm α)]\r\n    [SubmonoidClass C (Perm α)] (M : C)\r\n    (hab : swap a b ∈ M) (hbc : swap b c ∈ M) : swap a c ∈ M := by\r\n  obtain rfl | hab' := eq_or_ne a b; · exact hbc\r\n  obtain rfl | hac := eq_or_ne a c; · rw [swap_self]; exact one_mem M\r\n  rw [swap_comm, ← swap_mul_swap_mul_swap hab' hac]\r\n  exact mul_mem (mul_mem hbc hab) hbc\r\n\r\ntheorem swap_mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {x y : α} : swap x y ∈ closure S ↔ x ∈ orbit (closure S) y := by\r\n  refine ⟨fun h ↦ mem_orbit_iff.mpr ⟨⟨swap x y, h⟩, swap_apply_right x y⟩, fun hf ↦ ?_⟩\r\n  by_contra h\r\n  have := aux1 S {x | swap x y ∈ closure S} (fun f hf ↦ ?_) (fun z hz ↦ ?_) h ⟨y, ?_⟩\r\n  · obtain ⟨σ, hσ, a, ha, hσa⟩ := this\r\n    obtain ⟨z, w, hzw, rfl⟩ := hS σ hσ\r\n    rw [Perm.smul_def] at hσa\r\n    have := ne_of_mem_of_not_mem ha hσa\r\n    rw [ne_comm, swap_apply_ne_self_iff, and_iff_right hzw] at this\r\n    rw [mem_setOf] at ha hσa\r\n    apply hσa; clear hσa\r\n    obtain rfl | rfl := this\r\n    on_goal 1 => rw [swap_apply_left]; rw [swap_comm] at hσ\r\n    on_goal 2 => rw [swap_apply_right]\r\n    all_goals exact SubmonoidClass.swap_mem_trans _ (subset_closure hσ) ha\r\n  · obtain ⟨x, y, -, rfl⟩ := hS f hf; rwa [swap_inv]\r\n  · exact (orbit_lemma hf).mp ⟨⟨_ ,hz⟩, swap_apply_right z y⟩\r\n  · rw [mem_setOf, swap_self]; exact one_mem _\r\n\r\n-- `Equiv.Perm.set_support_mul_subset` etc. could be generalized to MulAction\r\n\r\ntheorem finite_apply_ne_self_closure_iff {S : Set G} :\r\n    (∀ g ∈ closure S, {x : α | g • x ≠ x}.Finite) ↔ ∀ g ∈ S, {x : α | g • x ≠ x}.Finite :=\r\n  ⟨fun h g hg ↦ h g (subset_closure hg), fun h g hg ↦ by\r\n    refine closure_induction hg h (by simp) (fun g g' hg hg' ↦ (hg.union hg').subset ?_) fun g hg ↦ ?_\r\n    · simp_rw [Ne, mul_smul, ← compl_setOf, ← compl_inter, compl_subset_compl]\r\n      intro a ⟨hg, hg'⟩; rw [mem_setOf] at hg hg' ⊢; rw [hg', hg]\r\n    · convert hg using 1; simp_rw [Ne, inv_smul_eq_iff, eq_comm]⟩\r\n\r\ntheorem finite_swap_apply_ne_self {x y : α} : {a | swap x y a ≠ a}.Finite :=\r\n  Set.Finite.subset (s := {x, y}) (by simp)\r\n    (by simp_rw [swap_apply_ne_self_iff]; exact fun _ ↦ (·.2))\r\n\r\ntheorem Equiv.Perm.IsSwap.finite_apply_ne_self {σ : Perm α} (h : σ.IsSwap) :\r\n    {a | σ a ≠ a}.Finite := by\r\n  obtain ⟨x, y, -, rfl⟩ := h; exact finite_swap_apply_ne_self\r\n\r\ntheorem mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {f : Perm α} : f ∈ closure S ↔ {x | f x ≠ x}.Finite ∧ ∀ x, f x ∈ orbit (closure S) x := by\r\n  refine ⟨fun hf ↦ ⟨?_, fun x ↦ mem_orbit_iff.mpr ⟨⟨f, hf⟩, rfl⟩⟩, ?_⟩\r\n  · exact finite_apply_ne_self_closure_iff.mpr (fun f hf ↦ (hS f hf).finite_apply_ne_self) _ hf\r\n  rintro ⟨fin, hf⟩\r\n  set supp := {x | f x ≠ x} with supp_eq\r\n  suffices : {x | f x ≠ x} ⊆ supp → f ∈ closure S\r\n  · exact this supp_eq.symm.subset\r\n  clear_value supp; clear supp_eq; revert f\r\n  apply fin.induction_on ..\r\n  · rintro f - emp; convert (closure S).one_mem; ext; by_contra h; exact emp h\r\n  rintro a s has - ih f hf supp_subset\r\n  refine (mul_mem_cancel_left ((swap_mem_closure_iff_mem_orbit_of_isSwap hS).2 (hf a))).1\r\n    (ih (fun b ↦ ?_) fun b hb ↦ (supp_subset ?_).resolve_left ?_)\r\n  · rw [Perm.mul_apply, orbit_lemma (hf b)]\r\n    by_cases h' : f b = a; · rw [h', swap_apply_right]; apply hf\r\n    by_cases h : f b = f a; · rw [h, swap_apply_left, ← orbitRel_apply, Setoid.comm']; apply hf\r\n    rw [swap_apply_of_ne_of_ne h h']; apply mem_orbit_self\r\n  · rw [mem_setOf] at hb ⊢; contrapose! hb; rw [Perm.mul_apply, hb]\r\n    obtain rfl | hba := eq_or_ne b a; · rwa [swap_apply_right]\r\n    refine swap_apply_of_ne_of_ne ?_ hba\r\n    contrapose! hba; exact f.injective (hb.trans hba)\r\n  · rw [mem_setOf] at hb; contrapose! hb; rw [Perm.mul_apply, hb, swap_apply_left]\r\n```",
              "createdAt": "2024-02-01T06:59:12Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5yjVwI",
              "body": "This looks wonderful, thanks so much both of you!",
              "createdAt": "2024-02-01T17:41:22Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zm5cp",
              "body": "I left some lemmas involving `closure`, `fixedBy`, `swap`, `finite` in this file since they probably don't fit anywhere earlier in mathlib, but correct me if I'm wrong.",
              "createdAt": "2024-02-12T21:04:16Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c50LMM2",
              "body": "@urkud Does this look good to you now? If so it would be natural that you merge it; I wrote most of the final version so I'm not sure whether I'm supposed to call maintainer mergee.",
              "createdAt": "2024-02-16T18:39:08Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5084xT",
              "body": "maintainer merge",
              "createdAt": "2024-02-23T23:09:26Z",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5084za",
              "body": "🚀 Pull request has been placed on the maintainer queue by alreadydone.",
              "createdAt": "2024-02-23T23:09:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5086sl",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2024-02-23T23:17:39Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c508_X1",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8026341167/job/21928643346)",
              "createdAt": "2024-02-23T23:50:09Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509Ah8",
              "body": "bors r-",
              "createdAt": "2024-02-23T23:56:28Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509AjU",
              "body": "Canceled.",
              "createdAt": "2024-02-23T23:56:31Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509A9m",
              "body": "There is an error related to the new style of `have` I think. Can you please merge master and fix it?\r\n\r\nbors d+",
              "createdAt": "2024-02-23T23:57:20Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509A-j",
              "body": ":v: tb65536 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-02-23T23:57:22Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509MQw",
              "body": "It would be nice if you could add the result that the subgroup generated by all swaps is the subgroup of permutations with finite support.",
              "createdAt": "2024-02-24T01:16:32Z",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509urQ",
              "body": "bors r+",
              "createdAt": "2024-02-24T11:57:01Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c509xH7",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8030390972/job/21937723487)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8030390972/job/21937723363)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8030390972/job/21937723429)",
              "createdAt": "2024-02-24T12:33:36Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8549ab02dd02271a5b99fa3ba062d103b803a16c",
                "additions": 65,
                "deletions": 1,
                "committedDate": "2024-01-26T17:48:55Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4JtdNw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7687749496/job/20948147511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Jtc5g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7687749493/job/20948147430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Jtc4Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7687749498/job/20948147425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3mpBPw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671939449/job/20911374655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3mpBQw",
                        "name": "label-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671939446/job/20911374659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhvPw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566962/job/20910206783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhwbA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566961/job/20910207084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3mpBVQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671939455/job/20911374677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Jtc8g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7687749496/job/20948147442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhywA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566962/job/20910207680"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhx-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566961/job/20910207480"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3mpCJA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671939455/job/20911374884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhwMA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566962/job/20910207024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhvhA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566961/job/20910206852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhxDg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566962/job/20910207246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhxKw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566961/job/20910207275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhx2A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566962/job/20910207448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhy-Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566961/job/20910207737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3lhzgg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566962/job/20910207874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3nCd6g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7671566961/job/20911791594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE3mp-9Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d10d8110974f55e760a64e357ca38bdd06571ebb",
                "additions": 7,
                "deletions": 5,
                "committedDate": "2024-01-29T07:15:12Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeCtQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471885/job/20959429301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeBcQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471658/job/20959428977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeBPQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471659/job/20959428925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeCnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471882/job/20959429279"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeCng",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471659/job/20959429278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeAnw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471658/job/20959428767"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeDXg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471882/job/20959429470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeCBA",
                        "name": "Check all files imported",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471659/job/20959429124"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeCFg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471658/job/20959429142"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeC1Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471658/job/20959429333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeDRw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471659/job/20959429447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeDhQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471658/job/20959429509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeZ2w",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471659/job/20959435227"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeEIg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471658/job/20959429666"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeAcA",
                        "name": "check workflows",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692471659/job/20959428720"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4cc92e55c7f4d35942a604a2dd3d175cd75a94d8",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2024-01-29T07:15:21Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeXVg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692474022/job/20959434582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeWmg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692474025/job/20959434394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeR9A",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473538/job/20959433204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeONw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473087/job/20959432247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeOZw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473088/job/20959432295"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeSrg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473536/job/20959433390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UePnw",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473088/job/20959432607"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeWmA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692474022/job/20959434392"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeQrQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473087/job/20959432877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeR7w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473536/job/20959433199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeO_w",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473087/job/20959432447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UePCQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473088/job/20959432457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UePwA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473087/job/20959432640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeRUA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473088/job/20959433040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeQew",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473088/job/20959432827"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeRdQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473087/job/20959433077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ufjmg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473088/job/20959454106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UeSVA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692473087/job/20959433300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue0dA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "00091c3167256570cf53c291537b0de08d3c659c",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-01-29T07:15:47Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue8tA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477736/job/20959444148"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue6ew",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477403/job/20959443579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue6hA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477399/job/20959443588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue8wQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477738/job/20959444161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue92Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477403/job/20959444441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue7OQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477399/job/20959443769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue9Yg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477738/job/20959444322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue7cw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477403/job/20959443827"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue7_Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477399/job/20959443965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue8Nw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477403/job/20959444023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue9Uw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477399/job/20959444307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue9Lw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477403/job/20959444271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue8oA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477399/job/20959444128"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4Ue-gg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477403/job/20959444610"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4VyFmQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7692477399/job/20960806297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4UfrRw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "47e8fbec44a4f2a7ca1cbb68ed3c6cc523754ee2",
                "additions": 32,
                "deletions": 14,
                "committedDate": "2024-01-29T08:21:28Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK8MA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105691/job/20961213488"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK59A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105403/job/20961212916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK5yg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105405/job/20961212874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK8-g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105695/job/20961213690"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK8Ww",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105403/job/20961213531"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK7dA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105405/job/20961213300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK7yg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105695/job/20961213386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK6tw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105403/job/20961213111"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK6uA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105405/job/20961213112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK9Jg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105403/job/20961213734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK8NA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105405/job/20961213492"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK8-A",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105405/job/20961213688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK7gw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105403/job/20961213315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WN-iw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105405/job/20961263243"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WK9_A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693105403/job/20961213948"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WMImQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1f7b0531031a86d5b3adc9c4d6ed5d1ee32bc9c1",
                "additions": 14,
                "deletions": 32,
                "committedDate": "2024-01-29T08:22:48Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNf3w",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120930/job/20961255391"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNcpw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120608/job/20961254567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNcbg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120609/job/20961254510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNf0Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120926/job/20961255377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNeRg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120608/job/20961254982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNezg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120609/job/20961255118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNggA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120926/job/20961255552"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNfAQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120608/job/20961255169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNdWQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120609/job/20961254745"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNdbQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120608/job/20961254765"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNeCA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120609/job/20961254920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNfxA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120608/job/20961255364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNflw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120609/job/20961255319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WNghA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120608/job/20961255556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4W5kNg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7693120609/job/20961977398"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE4WOa7w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "725004eac69040d8a06f24777363fe6cea573099",
                "additions": 137,
                "deletions": 64,
                "committedDate": "2024-02-06T01:01:55Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruVvw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793087647/job/21252249023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruNNQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086638/job/21252246837"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruNOg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086640/job/21252246842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruWWQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793087646/job/21252249177"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruN8Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086638/job/21252247025"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruQZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086640/job/21252247653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruVkQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793087646/job/21252248977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruN6g",
                        "name": "Check all files imported",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086640/job/21252247018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruPIg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086638/job/21252247330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruQ-g",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086638/job/21252247802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruPFA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086640/job/21252247316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruQGw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086638/job/21252247579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruPvA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086640/job/21252247484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8ruRqQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086638/job/21252247977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8s2Kug",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7793086640/job/21253425850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE8rvB-w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "15b85c4ea3c3fafcd0a7822272dee393e9e70835",
                "additions": 33437,
                "deletions": 15292,
                "committedDate": "2024-02-12T19:53:00Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8c86732fa9bbf0f0f6c8a1dfa5bb1e2d145e5275",
                "additions": 3,
                "deletions": 16,
                "committedDate": "2024-02-12T19:59:48Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNcGw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201167/job/21492882459"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNb-A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201140/job/21492882424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNbcA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201135/job/21492882288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNdRQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201169/job/21492882757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNc9A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201140/job/21492882676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNcmQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201135/job/21492882585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNcig",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201169/job/21492882570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNdfQ",
                        "name": "Check all files imported",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201135/job/21492882813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNfaw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201140/job/21492883307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNejA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201140/job/21492883084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNfEQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201135/job/21492883217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNd0Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201140/job/21492882897"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNeOA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201135/job/21492883000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFARNgiQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201140/job/21492883593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFASDjqg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877201135/job/21493769130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFAROn7w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1064096679a576ac87b94779a40277bf3c45b90b",
                "additions": 12,
                "deletions": 14,
                "committedDate": "2024-02-12T21:02:18Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIaiQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860661/job/21494897289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIXxw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860312/job/21494896583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIXvQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860310/job/21494896573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIbnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860665/job/21494897567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIaZw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860312/job/21494897255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIYaw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860310/job/21494896747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIa1Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860665/job/21494897365"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIYjA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860312/job/21494896780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIW_Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860310/job/21494896381"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIZeg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860312/job/21494897018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIWJg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860310/job/21494896166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIZRw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860310/job/21494896967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIW2Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860312/job/21494896345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATIbNw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860312/job/21494897463"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATYHeA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7877860310/job/21495154552"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFATQcEw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "871efdb8cd649be07b3f417dbea322071cd211c2",
                "additions": 9,
                "deletions": 9,
                "committedDate": "2024-02-13T21:27:25Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB2Mcow",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7912649483/job/21598772387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB2MbdA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7912649463/job/21598772084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB2Mb4w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7912649490/job/21598772195"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-raLg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960556/job/21540559406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rXWQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960282/job/21540558681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rXdA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960281/job/21540558708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-raYw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960561/job/21540559459"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFB2Mbyw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7912649483/job/21598772171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rbXA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960282/job/21540559708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rakQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960281/job/21540559505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rbNw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960561/job/21540559671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rahA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960282/job/21540559492"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rYRw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960281/job/21540558919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rYLg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960282/job/21540558894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rZmA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960281/job/21540559256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rZig",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960282/job/21540559242"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rbWA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960281/job/21540559704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-rcLQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960282/job/21540559917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA_zgSg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7892960281/job/21541740618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFA-tWaA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6951d6ced2cf6f6d52fbe1a4474ef42753b1580c",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2024-02-15T17:09:53Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWqVA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919664031/job/21620959828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWoIA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663893/job/21620959264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWnwg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663896/job/21620959170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWp_A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919664024/job/21620959740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWp-w",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663896/job/21620959739"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWshg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663893/job/21620960390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWrTg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919664024/job/21620960078"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWq3g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663893/job/21620959966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWq-Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663896/job/21620959993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWrzg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663893/job/21620960206"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWo3A",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663896/job/21620959452"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWsBA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663896/job/21620960260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWpKw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663893/job/21620959531"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLZI5w",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663896/job/21621000423"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLWtZg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919663893/job/21620960614"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a3c0322655a96a8e8b99d4e6b9cb4afcbaab7b3c",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2024-02-15T17:10:25Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYErg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671672/job/21620982958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYF8w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671662/job/21620983283"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYFGA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671660/job/21620983064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYGnw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671679/job/21620983455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYIjQ",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671660/job/21620983949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYISA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671662/job/21620983880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYErQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671679/job/21620982957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYHFg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671662/job/21620983574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYGgw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671660/job/21620983427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYKtg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671662/job/21620984502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYHuw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671660/job/21620983739"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYJfA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671660/job/21620984188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYJkQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671662/job/21620984209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLYLvQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671662/job/21620984765"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLarnA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919671660/job/21621025692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLY2oQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9c9810e9f750fc4de586cf31f9ecbe7fcf9bb850",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-02-15T17:11:46Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbgSQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689571/job/21621039177"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbi7g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689610/job/21621039854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbiPg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689602/job/21621039678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbgZw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689579/job/21621039207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLblYg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689610/job/21621040482"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbj0w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689602/job/21621040083"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbhxg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689579/job/21621039558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbkSw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689610/job/21621040203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLblBQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689602/job/21621040389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbniQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689610/job/21621041033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbmAg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689602/job/21621040642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbmzQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689602/job/21621040845"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLbmgA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689610/job/21621040768"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLboqw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689610/job/21621041323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLdc1w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7919689602/job/21621071063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCLf7zg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "555f296d54a77ba03954cced08027e999ddaf67c",
                "additions": 14003,
                "deletions": 6904,
                "committedDate": "2024-02-15T22:45:54Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3156d71cf967843d5decb47d147e5633abd0e0e8",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-02-15T22:56:37Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz_pQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373560/job/21632974757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz-oQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373449/job/21632974497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz-gA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373448/job/21632974464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW0AXQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373557/job/21632974941"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW0AQQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373449/job/21632974913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW0AkQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373448/job/21632974993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz_5A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373557/job/21632974820"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz_Hw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373449/job/21632974623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz_CQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373448/job/21632974601"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz_sQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373449/job/21632974769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW0AJQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373448/job/21632974885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW0Aug",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373449/job/21632975034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCWz_fg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373448/job/21632974718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW0BQw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373449/job/21632975171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCXohHA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7923373448/job/21633835292"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGcub6lw",
                        "context": "bors",
                        "state": "FAILURE",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1825",
                        "description": "Canceled"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFCW055w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "98172e3ffc6e22ec7a02cd991cc06061dc6f9e12",
                "additions": 16655,
                "deletions": 9457,
                "committedDate": "2024-02-24T01:42:03Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "daf9e5544d6d11ab8f6756ecb28c3ed2ca938a49",
                "additions": 13,
                "deletions": 4,
                "committedDate": "2024-02-24T05:51:48Z",
                "author": {
                  "name": "Thomas Browning",
                  "email": "tb65536@uw.edu"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG150wQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623641/job/21934011585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG15zlg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG2QjCA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934383880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG150-w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623645/job/21934011643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG150gw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG2QjZg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934383974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG150yA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623645/job/21934011592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG15z3A",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011356"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG2Qjmg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934384026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG150Og",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG2QjPQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934383933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG150yQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG2QjxA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934384068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG151AA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011648"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG2fCug",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934621370"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFG16DfA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGcxAsrQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1830",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-01-26T18:25:48Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/GroupTheory/Perm/ClosureSwap.lean",
              "additions": 135,
              "deletions": 0
            }
          ]
        },
        "headRefName": "tb_closure",
        "headRefOid": "daf9e5544d6d11ab8f6756ecb28c3ed2ca938a49",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5lL1TE",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5wQkR9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-02-15T17:10:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wLP80",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-02-15T07:48:24Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 10035,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5uERRH",
              "body": "LGTM but IMO the result could be split into two main facts:\r\n1. if T is a nonempty, proper subset of a G-orbit O, then there exists a generator of G that sends an element of T to an element of O\\T.\r\n2. if a subgroup contains all transpositions in T and an arbitrary transposition (ab) for some `a ∈ T`, then it contains all transpositions in `T ∪ {b}`. It might be easier to prove and use that the permutations on `T ∪ {b}` is generated by all permutations on `T` together with an arbitrary transposition of the form (ab) with `a ∈ T`.",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-01-28T18:50:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5uJbUw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2024-01-29T07:15:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wLP80",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2024-02-15T07:48:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wQkR9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-02-15T17:10:55Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5XgsJ0",
                    "body": "Using [Set.Pairwise](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Pairwise.html#Set.Pairwise) makes the statement shorter",
                    "createdAt": "2024-01-26T22:00:51Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5XkZqa",
                    "body": "Thanks!",
                    "createdAt": "2024-01-29T07:15:29Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Xixxi",
                    "body": "```suggestion\r\n  -- we can find `swap a b ∈ S` with `a ∈ T` and `b ∉ T`\r\n```",
                    "createdAt": "2024-01-28T03:53:33Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y1-k4",
                    "body": "Let's add a docstring:\r\n```suggestion\r\n/-- If the support of each element in a generating set of a permutation group is finite,\r\nthen the support of every element in the group is finite. -/\r\ntheorem finite_compl_fixedBy_closure_iff {S : Set G} :\r\n    (∀ g ∈ closure S, (fixedBy α g)ᶜ.Finite) ↔ ∀ g ∈ S, (fixedBy α g)ᶜ.Finite :=\r\n```",
                    "createdAt": "2024-02-15T07:41:12Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y2AOS",
                    "body": "Let's not make it private and add a docstring:\r\n```suggestion\r\n/-- Given a symmetric generating set of a permutation group, if T is a nonempty proper subset of \r\nan orbit, then there exists a generator that sends some element of T into the complement of T. -/\r\ntheorem exists_smul_not_mem_of_subset_orbit_closure (S : Set G) (T : Set α) {a : α}\r\n    (hS : ∀ g ∈ S, g⁻¹ ∈ S) (subset : T ⊆ orbit (closure S) a) (not_mem : a ∉ T)\r\n    (nonempty : T.Nonempty) : ∃ σ ∈ S, ∃ a ∈ T, σ • a ∉ T := by\r\n```",
                    "createdAt": "2024-02-15T07:48:21Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Y5EOm",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n/-- Given a symmetric generating set of a permutation group, if T is a nonempty proper subset of\n```\n",
                    "createdAt": "2024-02-15T17:10:55Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEzMzM5MDE3",
              "login": "tb65536"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            },
            {
              "id": "MDQ6VXNlcjQ4MTczNDg=",
              "login": "AntoineChambert-Loir"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG150wQ",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623641/job/21934011585"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG15zlg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011286"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG2QjCA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934383880"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG150-w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623645/job/21934011643"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG150gw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011523"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG2QjZg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934383974"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG150yA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623645/job/21934011592"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG15z3A",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011356"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG2Qjmg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934384026"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG150Og",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011450"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG2QjPQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934383933"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG150yQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011593"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG2QjxA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934384068"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG151AA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623372/job/21934011648"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG2fCug",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8028623373/job/21934621370"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFG16DfA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=10035"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGcxAsrQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/1830",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(GroupTheory/Perm/ClosureSwap): A transitive permutation group generated by transpositions must be the whole symmetric group",
        "updatedAt": "2024-02-24T12:33:39Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/10035",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAAK0ICTj",
              "createdAt": "2024-01-26T18:25:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAAK0ICTp",
              "createdAt": "2024-01-26T18:25:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAAK0ICTx",
              "createdAt": "2024-01-26T18:25:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAAK0Ide8",
              "createdAt": "2024-01-26T18:39:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5uERRH",
              "createdAt": "2024-01-26T22:00:51Z",
              "body": "LGTM but IMO the result could be split into two main facts:\r\n1. if T is a nonempty, proper subset of a G-orbit O, then there exists a generator of G that sends an element of T to an element of O\\T.\r\n2. if a subgroup contains all transpositions in T and an arbitrary transposition (ab) for some `a ∈ T`, then it contains all transpositions in `T ∪ {b}`. It might be easier to prove and use that the permutations on `T ∪ {b}` is generated by all permutations on `T` together with an arbitrary transposition of the form (ab) with `a ∈ T`.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yGIl4",
              "createdAt": "2024-01-29T08:39:28Z",
              "body": "Thanks! I tried extracting the lemmas (https://github.com/leanprover-community/mathlib4/pull/10035/commits/47e8fbec44a4f2a7ca1cbb68ed3c6cc523754ee2).\r\n\r\nI was able to extract the second fact, but the statement ended up looking awfully clunky and specialized in my eyes, so I don't know if there's much point keeping it as a separate lemma?\r\n\r\nThe first fact (after adding a symmetry assumption on the generating set) seems tricky to extract since \"sending an element of T to an element of O\\T\" is not quite the same thing as \"swapping an element of T with an element of O\\T\", and going between these would require a bit of case bashing (you would assume sigma = swap x y takes a in T to b not in T, and then show that {x,y}={a,b}).",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yL03v",
              "createdAt": "2024-01-29T22:42:10Z",
              "body": "I'm going to suggest a golf and a helper lemma later tonight.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yNNh8",
              "createdAt": "2024-01-30T04:43:55Z",
              "body": "I think that the following lemma is a nice generalization of your statement:\r\n```lean\r\nopen Subgroup MulAction in\r\ntheorem mem_closure_iff_mem_orbit_of_isSwap [Finite α] {S : Set (Perm α)} {σ : Perm α}\r\n    (hS : ∀ σ ∈ S, σ.IsSwap) : σ ∈ closure S ↔ ∀ x, σ x ∈ orbit (closure S) x := by\r\n  refine ⟨fun hσ x ↦ mem_orbit_iff.2 ⟨⟨σ, hσ⟩, rfl⟩, fun hσ ↦ ?_⟩\r\n```\r\n(I only prove the easy implication here).\r\n\r\nUnfortunately, I don't see a short proof yet. I'll think about it tomorrow.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yNUGb",
              "createdAt": "2024-01-30T05:16:45Z",
              "body": "> Thanks! I tried extracting the lemmas (https://github.com/leanprover-community/mathlib4/commit/47e8fbec44a4f2a7ca1cbb68ed3c6cc523754ee2).\r\n\r\nThanks for trying!\r\n\r\n> I was able to extract the second fact, but the statement ended up looking awfully clunky and specialized in my eyes, so I don't know if there's much point keeping it as a separate lemma?\r\n\r\nI think it's not too clunky and is worthwhile to extract. Using `T.Pairwise (swap · · ∈ H)` would make it even less clunky, so would removing the unnecessary hypothesis `hb : b ∉ T`.\r\n~~And my other statement is probably shorter: if the stabilizer of T is a subset of H, and H includes a transposition (ab) with a in T, then the stabilizer of T ∪ {b} is a subset of H. You even added [Equiv.swap_mem_stabilizer](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/GroupAction/Basic.html#Equiv.swap_mem_stabilizer) already.~~\r\n\r\n> The first fact (after adding a symmetry assumption on the generating set) seems tricky to extract since \"sending an element of T to an element of O\\T\" is not quite the same thing as \"swapping an element of T with an element of O\\T\", and going between these would require a bit of case bashing (you would assume sigma = swap x y takes a in T to b not in T, and then show that {x,y}={a,b}).\r\n\r\nThe symmetry assumption is unnecessary if T or O\\T is finite. And yes we seem to be missing a lemma stating `swap a b = swap x y` iff `{a,b}={x,y}` (if a ≠ b or if x ≠ y), even though we have [Set.pair_eq_pair_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Set/Basic.html#Set.pair_eq_pair_iff). I think we should probably add that too!",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yRJGF",
              "createdAt": "2024-01-30T15:05:35Z",
              "body": "> ~~And my other statement is probably shorter: if the stabilizer of T is a subset of H, and H includes a transposition (ab) with a in T, then the stabilizer of T ∪ {b} is a subset of H.~~\r\n\r\nSorry, I don't know what I was thinking. The correct statement should be: if the [fixingSubgroup](https://leanprover-community.github.io/mathlib4_docs/Mathlib/GroupTheory/GroupAction/FixingSubgroup.html#fixingSubgroup) of T' is a subset of H, and H includes a transposition (ab) with a not in T', then the fixingSubgroup of T'\\{b} is a subset of H.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ycELL",
              "createdAt": "2024-01-31T21:07:06Z",
              "body": "I managed to get a sorry-free proof of @urkud's generalization. I haven't cleaned it up yet, but before I do, I just wanted to check whether either you had ideas for streamlining/shortcutting the proof at all? (for instance, is there an easier way to get something like `exists_list_swap`?)\r\n\r\n```\r\nimport Mathlib.GroupTheory.Perm.Cycle.Concrete\r\nimport Mathlib.Data.List.Card\r\nimport Mathlib.Data.List.Indexes\r\n\r\nopen Equiv List MulAction Pointwise Set Subgroup\r\n\r\nvariable {α : Type*} [DecidableEq α]\r\n\r\nlemma length_remove_le (l : List α) (a : α) :\r\n    (l.remove a).length ≤ l.length := by\r\n  induction' l with b l ih\r\n  · simp [remove]\r\n  · simp [remove]\r\n    split_ifs\r\n    · linarith\r\n    · simp\r\n      linarith\r\n\r\nlemma length_remove_lt_of_mem {l : List α} {a : α} (h : a ∈ l) :\r\n    (l.remove a).length < l.length := by\r\n  induction' l with b l ih\r\n  · contradiction\r\n  · rw [mem_cons] at h\r\n    rcases h with rfl | h\r\n    · simp [remove]\r\n      have := length_remove_le l a\r\n      linarith\r\n    · specialize ih h\r\n      simp [remove]\r\n      split_ifs\r\n      · linarith\r\n      · simp\r\n        linarith\r\n\r\ndef swapFactorsAux (l0 : List α) (a : α) (f : Perm α) (hf : ∀ {x}, f x ≠ x → x ∈ l0) :\r\n    { l : List α // (l.map (fun x ↦ swap x (f x))).prod = f ∧ f⁻¹ a ∉ l ∧ ∀ x ∈ l, x ∈ l0 } :=\r\n  if ha0 : f a = a then\r\n    if ha : a ∈ l0 then\r\n      have : (l0.remove a).length < l0.length := by\r\n        exact length_remove_lt_of_mem ha\r\n      let p := swapFactorsAux (l0.remove a) a f (by\r\n        intro x hx\r\n        rw [mem_remove_iff]\r\n        refine' ⟨hf hx, _⟩\r\n        rintro rfl\r\n        contradiction)\r\n      ⟨p, p.2.1, p.2.2.1, by\r\n        intro x hx\r\n        exact mem_of_mem_remove (p.2.2.2 x hx)\r\n        ⟩\r\n    else\r\n      match l0 with\r\n      | [] => ⟨[], Equiv.ext fun x => by\r\n          rw [map_nil, prod_nil]\r\n          exact (Classical.not_not.1 (mt hf (List.not_mem_nil _))).symm,\r\n        by simp⟩\r\n      | x :: l =>\r\n          if hx : f x = x then\r\n            let p := swapFactorsAux l a f (by\r\n              intro y hy\r\n              specialize hf hy\r\n              rw [mem_cons] at hf\r\n              rcases hf with rfl | hf\r\n              · contradiction\r\n              · exact hf\r\n            )\r\n            ⟨p, p.2.1, p.2.2.1, by\r\n              intro x hx\r\n              rw [mem_cons]\r\n              exact Or.inr (p.2.2.2 x hx)\r\n            ⟩\r\n          else\r\n            have : (l.remove x).length < (x :: l).length := by\r\n              have := length_remove_le l x\r\n              simp\r\n              linarith\r\n            let p := swapFactorsAux (l.remove x) (f x) (swap x (f x) * f) (by\r\n              intro y hy\r\n              rw [Perm.mul_apply] at hy\r\n              rcases eq_or_ne x y with rfl | h1\r\n              · rw [swap_apply_right] at hy\r\n                contradiction\r\n              · rcases eq_or_ne x (f y) with rfl | h2\r\n                · specialize hf h1\r\n                  rw [mem_cons, eq_comm] at hf\r\n                  rcases hf with _ | hf\r\n                  · contradiction\r\n                  · rw [mem_remove_iff]\r\n                    exact ⟨hf, h1.symm⟩\r\n                · rw [swap_apply_of_ne_of_ne h2.symm] at hy\r\n                  · specialize hf hy\r\n                    rw [mem_cons] at hf\r\n                    rcases hf with _ | hf\r\n                    · symm at h1\r\n                      contradiction\r\n                    · rw [mem_remove_iff]\r\n                      exact ⟨hf, h1.symm⟩\r\n                  · contrapose! h1\r\n                    symm\r\n                    simp only [EmbeddingLike.apply_eq_iff_eq] at h1\r\n                    exact h1\r\n            )\r\n            ⟨x :: p.1, by\r\n              rw [map_cons, prod_cons]\r\n              have key := p.2.1\r\n              rw [← eq_inv_mul_iff_mul_eq, swap_inv]\r\n              refine' Eq.trans _ key\r\n              apply congrArg\r\n              apply List.map_congr\r\n              intro y hy\r\n              congr 1\r\n              have key' := p.2.2.1\r\n              simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key'\r\n              have : y ≠ f⁻¹ x\r\n              · intro h\r\n                rw [h] at hy\r\n                exfalso\r\n                refine' key' hy\r\n              have : f y ≠ x\r\n              · contrapose! this\r\n                exact Perm.eq_inv_iff_eq.mpr this\r\n              rw [Perm.mul_apply]\r\n              have key'' := p.2.2.2 y hy\r\n              rw [swap_apply_of_ne_of_ne this]\r\n              simp only [ne_eq, EmbeddingLike.apply_eq_iff_eq]\r\n              rintro rfl\r\n              rw [mem_remove_iff] at key''\r\n              apply key''.2\r\n              rfl\r\n              ,\r\n              by\r\n                have key := p.2.2.1\r\n                simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key\r\n                rw [mem_cons, not_or]\r\n                have : f⁻¹ a = a\r\n                · rw [← ha0]\r\n                  simp\r\n                  simp [ha0]\r\n                rw [this]\r\n                rw [mem_cons, not_or] at ha\r\n                refine' ⟨ha.1, _⟩\r\n                intro h\r\n                apply ha.2\r\n                exact mem_of_mem_remove (p.2.2.2 a h)\r\n              , by\r\n                  intro y hy\r\n                  rw [mem_cons] at hy ⊢\r\n                  rcases hy with hy | hy\r\n                  · exact Or.inl hy\r\n                  · exact Or.inr (mem_of_mem_remove (p.2.2.2 y hy))⟩\r\n  else\r\n    have : (l0.remove a).length < l0.length := by\r\n      exact length_remove_lt_of_mem (hf ha0)\r\n    let p := swapFactorsAux (l0.remove a) (f a) (swap a (f a) * f) (by\r\n      intro x hx\r\n      rw [mem_remove_iff]\r\n      rw [Perm.mul_apply] at hx\r\n      rcases eq_or_ne x a with rfl | h\r\n      · rw [swap_apply_right] at hx\r\n        contradiction\r\n      · refine' ⟨_, h⟩\r\n        apply hf\r\n        intro h'\r\n        rw [h'] at hx\r\n        rw [swap_apply_ne_self_iff] at hx\r\n        replace hx := hx.2\r\n        rcases hx with rfl | rfl\r\n        · contradiction\r\n        · simp only [EmbeddingLike.apply_eq_iff_eq] at h'\r\n          contradiction\r\n      )\r\n    ⟨a :: p.1, by\r\n      have key := p.2.1\r\n      rw [map_cons, prod_cons]\r\n      rw [← eq_inv_mul_iff_mul_eq, swap_inv]\r\n      refine' Eq.trans _ key\r\n      apply congrArg\r\n      apply List.map_congr\r\n      intro x hx\r\n      congr 1\r\n      have key' := p.2.2.1\r\n      simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key'\r\n      have : x ≠ f⁻¹ a\r\n      · intro h\r\n        rw [h] at hx\r\n        exfalso\r\n        refine' key' hx\r\n      have : f x ≠ a\r\n      · contrapose! this\r\n        exact Perm.eq_inv_iff_eq.mpr this\r\n      rw [Perm.mul_apply]\r\n      have key'' := p.2.2.2 x hx\r\n      rw [mem_remove_iff] at key''\r\n      rw [swap_apply_of_ne_of_ne this]\r\n      simp only [ne_eq, EmbeddingLike.apply_eq_iff_eq]\r\n      exact key''.2,\r\n        by\r\n      have key := p.2.2.1\r\n      simp_rw [mul_inv_rev, swap_inv, Perm.mul_apply, swap_apply_right] at key\r\n      rw [mem_cons, not_or]\r\n      refine' ⟨_, key⟩\r\n      intro h\r\n      apply ha0\r\n      exact (eq_symm_apply f).mp (id h.symm), by\r\n        intro x hx\r\n        rw [mem_cons] at hx\r\n        rcases hx with rfl | hx\r\n        · exact hf ha0\r\n        · exact mem_of_mem_remove (p.2.2.2 x hx)\r\n      ⟩\r\ntermination_by swapFactorsAux l _ _ _ => l.length\r\n\r\ndef swapFactorsAux' (l0 : List α) (a : α) (f : Perm α) (hf : ∀ {x}, f x ≠ x → x ∈ l0) :\r\n    { l : List α // (l.map (fun x ↦ swap x (f x))).prod = f } :=\r\n  let h := swapFactorsAux l0 a f hf\r\n  ⟨h.1, h.2.1⟩\r\n\r\ndef truncSwapFactors [Fintype α] (f : Perm α) (a : α) :\r\n    Trunc { l : List α // (l.map (fun x ↦ swap x (f x))).prod = f } :=\r\n  Quotient.recOnSubsingleton (@Finset.univ α _).1 (fun l h => Trunc.mk (swapFactorsAux' l a f (h _)))\r\n    (show ∀ x, f x ≠ x → x ∈ (@Finset.univ α _).1 from fun _ _ => Finset.mem_univ _)\r\n\r\ndef exists_list_swap [Fintype α] (f : Perm α) :\r\n    ∃ l : List α, (l.map (fun x ↦ swap x (f x))).prod = f := by\r\n  rcases isEmpty_or_nonempty α with h | ⟨⟨a⟩⟩\r\n  · exact ⟨[], Subsingleton.elim _ _⟩\r\n  · have q := truncSwapFactors f a\r\n    refine' ⟨q.out, q.out.2⟩\r\n\r\nvariable [Finite α]\r\n\r\ntheorem aux2\r\n    {H : Subgroup (Perm α)} {T : Set α} (hT : T.Pairwise (swap · · ∈ H))\r\n    {a b : α} (ha : a ∈ T) (hab : swap a b ∈ H) :\r\n    ({b} ∪ T).Pairwise (swap · · ∈ H) := by\r\n  rintro x (rfl | hx) y (rfl | hy) hxy\r\n  · contradiction\r\n  · rcases eq_or_ne y a with rfl | h\r\n    · exact swap_comm x y ▸ hab\r\n    rw [← swap_mul_swap_mul_swap h hxy.symm]\r\n    exact H.mul_mem (H.mul_mem hab (hT hy ha h)) hab\r\n  · rcases eq_or_ne x a with rfl | h\r\n    · exact swap_comm x y ▸ hab\r\n    rw [swap_comm, ← swap_mul_swap_mul_swap h hxy]\r\n    exact H.mul_mem (H.mul_mem hab (hT hx ha h)) hab\r\n  · exact hT hx hy hxy\r\n\r\nlemma orbit_lemma {G : Type*} [Group G] {α : Type*} [MulAction G α] {a b c : α} (h1 : a ∈ orbit G c) :\r\n    b ∈ orbit G c ↔ b ∈ orbit G a := by\r\n  simp only [← orbit_eq_iff] at h1 ⊢\r\n  rw [h1]\r\n\r\ntheorem swap_mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {x y : α} : swap x y ∈ closure S ↔ x ∈ orbit (closure S) y := by\r\n  refine ⟨fun h ↦ mem_orbit_iff.mpr ⟨⟨swap x y, h⟩, swap_apply_right x y⟩, fun hf ↦ ?_⟩\r\n  let P : Set α → Prop := fun T ↦ T.Pairwise (swap · · ∈ closure S)\r\n  suffices : P (orbit (closure S) y)\r\n  · rcases eq_or_ne x y with rfl | hxy\r\n    · rw [swap_self]\r\n      apply one_mem\r\n    · exact this hf (mem_orbit_self y) hxy\r\n  refine' (toFinite _).induction_to ∅ (empty_subset _) (pairwise_empty _) (fun T hT ih ↦ _)\r\n  rcases T.eq_empty_or_nonempty with rfl | hT'\r\n  · exact ⟨y, by simp⟩\r\n  have key0 : ¬ closure S ≤ stabilizer (Perm α) T\r\n  · obtain ⟨a, haT⟩ := hT'\r\n    obtain ⟨b, hb, hbT⟩ := exists_of_ssubset hT\r\n    have ha : a ∈ orbit (closure S) y := hT.1 haT\r\n    obtain ⟨⟨σ, hσ⟩, rfl⟩ := (orbit_lemma ha).mp hb\r\n    exact fun h ↦ hbT (h hσ ▸ smul_mem_smul_set haT)\r\n  have key : ∃ a b, swap a b ∈ S ∧ a ∈ T ∧ b ∉ T\r\n  · rw [closure_le, not_subset] at key0\r\n    obtain ⟨τ, hτ, hτ'⟩ := key0\r\n    obtain ⟨x, y, -, rfl⟩ := hS τ hτ\r\n    rw [SetLike.mem_coe, swap_mem_stabilizer, not_iff] at hτ'\r\n    by_cases hx : x ∈ T\r\n    · exact ⟨x, y, hτ, hx, fun hy ↦ hτ'.mpr hy hx⟩\r\n    · exact ⟨y, x, swap_comm x y ▸ hτ, hτ'.mp hx, hx⟩\r\n  obtain ⟨a, b, hab, ha, hb⟩ := key\r\n  refine' ⟨b, ⟨_, hb⟩, aux2 ih ha (subset_closure hab)⟩\r\n  exact (orbit_lemma (hT.1 ha)).mpr ⟨⟨swap a b, subset_closure hab⟩, swap_apply_left a b⟩\r\n\r\ntheorem mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {f : Perm α} : f ∈ closure S ↔ ∀ x, f x ∈ orbit (closure S) x := by\r\n  refine ⟨fun hf x ↦ mem_orbit_iff.mpr ⟨⟨f, hf⟩, rfl⟩, fun hf ↦ ?_⟩\r\n  have := Fintype.ofFinite α\r\n  obtain ⟨l, hl⟩ := exists_list_swap f\r\n  refine hl ▸ list_prod_mem (fun x hx ↦ ?_)\r\n  obtain ⟨y, -, rfl⟩ := List.mem_map.mp hx\r\n  rw [swap_comm, swap_mem_closure_iff_mem_orbit_of_isSwap hS]\r\n  exact hf y\r\n```",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yeohi",
              "createdAt": "2024-02-01T06:59:12Z",
              "body": "Here is a proof that doesn't use List and also generalizes to action on an infinite type:\r\n```\r\nimport Mathlib.Data.Set.Finite\r\nimport Mathlib.GroupTheory.GroupAction.Basic\r\nimport Mathlib.GroupTheory.Perm.Support\r\n\r\nopen Equiv List MulAction Pointwise Set Subgroup\r\n\r\nvariable {G α : Type*} [Group G] [MulAction G α] [DecidableEq α]\r\n\r\nlemma orbit_lemma {a b c : α} (h : a ∈ orbit G c) :\r\n    b ∈ orbit G c ↔ b ∈ orbit G a := by\r\n  simp only [← orbit_eq_iff] at h ⊢\r\n  rw [h]\r\n\r\ntheorem aux1 (S : Set G) (T : Set α) {a : α} (hS : ∀ g ∈ S, g⁻¹ ∈ S)\r\n    (subset : T ⊆ orbit (closure S) a) (not_mem : a ∉ T) (nonempty : T.Nonempty) :\r\n    ∃ σ ∈ S, ∃ a ∈ T, σ • a ∉ T := by\r\n  have key0 : ¬ closure S ≤ stabilizer G T\r\n  · have ⟨b, hb⟩ := nonempty\r\n    obtain ⟨σ, rfl⟩ := subset hb\r\n    refine fun h ↦ not_mem ?_\r\n    rw [← h (inv_mem σ.2), mem_smul_set]\r\n    exact ⟨_, hb, show σ⁻¹ • σ • a = _ by simp⟩\r\n  contrapose! key0\r\n  refine (closure_le _).mpr fun σ hσ ↦ by_contra fun h ↦ ?_\r\n  simp_rw [SetLike.mem_coe, mem_stabilizer_iff, Set.ext_iff, not_forall, mem_smul_set] at h\r\n  obtain ⟨a, h⟩ := h\r\n  exact h ⟨fun ⟨b, hb, h⟩ ↦ h ▸ key0 _ hσ _ hb, fun h ↦ ⟨_, key0 _ (hS σ hσ) _ h, by simp⟩⟩\r\n\r\ntheorem SubmonoidClass.swap_mem_trans {a b c : α} {C} [SetLike C (Perm α)]\r\n    [SubmonoidClass C (Perm α)] (M : C)\r\n    (hab : swap a b ∈ M) (hbc : swap b c ∈ M) : swap a c ∈ M := by\r\n  obtain rfl | hab' := eq_or_ne a b; · exact hbc\r\n  obtain rfl | hac := eq_or_ne a c; · rw [swap_self]; exact one_mem M\r\n  rw [swap_comm, ← swap_mul_swap_mul_swap hab' hac]\r\n  exact mul_mem (mul_mem hbc hab) hbc\r\n\r\ntheorem swap_mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {x y : α} : swap x y ∈ closure S ↔ x ∈ orbit (closure S) y := by\r\n  refine ⟨fun h ↦ mem_orbit_iff.mpr ⟨⟨swap x y, h⟩, swap_apply_right x y⟩, fun hf ↦ ?_⟩\r\n  by_contra h\r\n  have := aux1 S {x | swap x y ∈ closure S} (fun f hf ↦ ?_) (fun z hz ↦ ?_) h ⟨y, ?_⟩\r\n  · obtain ⟨σ, hσ, a, ha, hσa⟩ := this\r\n    obtain ⟨z, w, hzw, rfl⟩ := hS σ hσ\r\n    rw [Perm.smul_def] at hσa\r\n    have := ne_of_mem_of_not_mem ha hσa\r\n    rw [ne_comm, swap_apply_ne_self_iff, and_iff_right hzw] at this\r\n    rw [mem_setOf] at ha hσa\r\n    apply hσa; clear hσa\r\n    obtain rfl | rfl := this\r\n    on_goal 1 => rw [swap_apply_left]; rw [swap_comm] at hσ\r\n    on_goal 2 => rw [swap_apply_right]\r\n    all_goals exact SubmonoidClass.swap_mem_trans _ (subset_closure hσ) ha\r\n  · obtain ⟨x, y, -, rfl⟩ := hS f hf; rwa [swap_inv]\r\n  · exact (orbit_lemma hf).mp ⟨⟨_ ,hz⟩, swap_apply_right z y⟩\r\n  · rw [mem_setOf, swap_self]; exact one_mem _\r\n\r\n-- `Equiv.Perm.set_support_mul_subset` etc. could be generalized to MulAction\r\n\r\ntheorem finite_apply_ne_self_closure_iff {S : Set G} :\r\n    (∀ g ∈ closure S, {x : α | g • x ≠ x}.Finite) ↔ ∀ g ∈ S, {x : α | g • x ≠ x}.Finite :=\r\n  ⟨fun h g hg ↦ h g (subset_closure hg), fun h g hg ↦ by\r\n    refine closure_induction hg h (by simp) (fun g g' hg hg' ↦ (hg.union hg').subset ?_) fun g hg ↦ ?_\r\n    · simp_rw [Ne, mul_smul, ← compl_setOf, ← compl_inter, compl_subset_compl]\r\n      intro a ⟨hg, hg'⟩; rw [mem_setOf] at hg hg' ⊢; rw [hg', hg]\r\n    · convert hg using 1; simp_rw [Ne, inv_smul_eq_iff, eq_comm]⟩\r\n\r\ntheorem finite_swap_apply_ne_self {x y : α} : {a | swap x y a ≠ a}.Finite :=\r\n  Set.Finite.subset (s := {x, y}) (by simp)\r\n    (by simp_rw [swap_apply_ne_self_iff]; exact fun _ ↦ (·.2))\r\n\r\ntheorem Equiv.Perm.IsSwap.finite_apply_ne_self {σ : Perm α} (h : σ.IsSwap) :\r\n    {a | σ a ≠ a}.Finite := by\r\n  obtain ⟨x, y, -, rfl⟩ := h; exact finite_swap_apply_ne_self\r\n\r\ntheorem mem_closure_iff_mem_orbit_of_isSwap {S : Set (Perm α)} (hS : ∀ f ∈ S, f.IsSwap)\r\n    {f : Perm α} : f ∈ closure S ↔ {x | f x ≠ x}.Finite ∧ ∀ x, f x ∈ orbit (closure S) x := by\r\n  refine ⟨fun hf ↦ ⟨?_, fun x ↦ mem_orbit_iff.mpr ⟨⟨f, hf⟩, rfl⟩⟩, ?_⟩\r\n  · exact finite_apply_ne_self_closure_iff.mpr (fun f hf ↦ (hS f hf).finite_apply_ne_self) _ hf\r\n  rintro ⟨fin, hf⟩\r\n  set supp := {x | f x ≠ x} with supp_eq\r\n  suffices : {x | f x ≠ x} ⊆ supp → f ∈ closure S\r\n  · exact this supp_eq.symm.subset\r\n  clear_value supp; clear supp_eq; revert f\r\n  apply fin.induction_on ..\r\n  · rintro f - emp; convert (closure S).one_mem; ext; by_contra h; exact emp h\r\n  rintro a s has - ih f hf supp_subset\r\n  refine (mul_mem_cancel_left ((swap_mem_closure_iff_mem_orbit_of_isSwap hS).2 (hf a))).1\r\n    (ih (fun b ↦ ?_) fun b hb ↦ (supp_subset ?_).resolve_left ?_)\r\n  · rw [Perm.mul_apply, orbit_lemma (hf b)]\r\n    by_cases h' : f b = a; · rw [h', swap_apply_right]; apply hf\r\n    by_cases h : f b = f a; · rw [h, swap_apply_left, ← orbitRel_apply, Setoid.comm']; apply hf\r\n    rw [swap_apply_of_ne_of_ne h h']; apply mem_orbit_self\r\n  · rw [mem_setOf] at hb ⊢; contrapose! hb; rw [Perm.mul_apply, hb]\r\n    obtain rfl | hba := eq_or_ne b a; · rwa [swap_apply_right]\r\n    refine swap_apply_of_ne_of_ne ?_ hba\r\n    contrapose! hba; exact f.injective (hb.trans hba)\r\n  · rw [mem_setOf] at hb; contrapose! hb; rw [Perm.mul_apply, hb, swap_apply_left]\r\n```",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5yjVwI",
              "createdAt": "2024-02-01T17:41:22Z",
              "body": "This looks wonderful, thanks so much both of you!",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAAK3zBcQ",
              "createdAt": "2024-02-01T17:41:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAAK3zBce",
              "createdAt": "2024-02-01T17:41:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAAK-Ihg6",
              "createdAt": "2024-02-12T21:02:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAAK-IhhB",
              "createdAt": "2024-02-12T21:02:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAAK-IhhE",
              "createdAt": "2024-02-12T21:02:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zm5cp",
              "createdAt": "2024-02-12T21:04:16Z",
              "body": "I left some lemmas involving `closure`, `fixedBy`, `swap`, `finite` in this file since they probably don't fit anywhere earlier in mathlib, but correct me if I'm wrong.",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAAK_AdCe",
              "createdAt": "2024-02-13T22:05:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5wLP80",
              "createdAt": "2024-02-15T07:41:12Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAALAYVmt",
              "createdAt": "2024-02-15T15:57:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAALAYVnC",
              "createdAt": "2024-02-15T15:57:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAALAb4v8",
              "createdAt": "2024-02-15T17:10:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAALAb4wF",
              "createdAt": "2024-02-15T17:10:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAALAb4wL",
              "createdAt": "2024-02-15T17:10:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5wQkR9",
              "createdAt": "2024-02-15T17:10:55Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAALAqc-E",
              "createdAt": "2024-02-15T23:29:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c50LMM2",
              "createdAt": "2024-02-16T18:39:08Z",
              "body": "@urkud Does this look good to you now? If so it would be natural that you merge it; I wrote most of the final version so I'm not sure whether I'm supposed to call maintainer mergee.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c59VJdQzwAAAALC0sSy",
              "createdAt": "2024-02-20T08:53:24Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5084xT",
              "createdAt": "2024-02-23T23:09:26Z",
              "body": "maintainer merge",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5084za",
              "createdAt": "2024-02-23T23:09:39Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by alreadydone.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAALF1QCJ",
              "createdAt": "2024-02-23T23:09:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5086sl",
              "createdAt": "2024-02-23T23:17:39Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAALF1Zne",
              "createdAt": "2024-02-23T23:17:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c59VJdQzwAAAALF1ZoU",
              "createdAt": "2024-02-23T23:17:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RCaC6",
              "createdAt": "2024-02-23T23:18:25Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5joUal",
                "title": "[Merged by Bors] - feat: lemmas on permutations, cycles, etc.",
                "url": "https://github.com/leanprover-community/mathlib4/pull/9602"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c508_X1",
              "createdAt": "2024-02-23T23:50:09Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8026341167/job/21928643346)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509Ah8",
              "createdAt": "2024-02-23T23:56:28Z",
              "body": "bors r-",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509AjU",
              "createdAt": "2024-02-23T23:56:31Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509A9m",
              "createdAt": "2024-02-23T23:57:20Z",
              "body": "There is an error related to the new style of `have` I think. Can you please merge master and fix it?\r\n\r\nbors d+",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509A-j",
              "createdAt": "2024-02-23T23:57:22Z",
              "body": ":v: tb65536 can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59VJdQzwAAAALF2BJv",
              "createdAt": "2024-02-23T23:57:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509MQw",
              "createdAt": "2024-02-24T01:16:32Z",
              "body": "It would be nice if you could add the result that the subgroup generated by all swaps is the subgroup of permutations with finite support.",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509urQ",
              "createdAt": "2024-02-24T11:57:01Z",
              "body": "bors r+",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c509xH7",
              "createdAt": "2024-02-24T12:33:36Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8030390972/job/21937723487)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8030390972/job/21937723363)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8030390972/job/21937723429)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c59VJdQzwAAAALF7u-B",
              "createdAt": "2024-02-24T12:33:36Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c59VJdQzwAAAALF7u_E",
              "createdAt": "2024-02-24T12:33:39Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
