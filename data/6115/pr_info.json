{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 57,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-07-30T04:56:47Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5iv8ig",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-07-29T13:50:46Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ixE58",
              "body": "bors merge",
              "createdAt": "2023-07-30T03:44:12Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ixHfV",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5704116158/job/15457405064)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5704116158/job/15457405032)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5704116158/job/15457404960)",
              "createdAt": "2023-07-30T04:56:46Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "55cd55e15be301135c3c902591b5a4c22a682ba8",
                "additions": 44,
                "deletions": 0,
                "committedDate": "2023-07-24T23:43:11Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6db9e5c0adf2d16e5920433fb6c2f6c29a6ce47a",
                "additions": 24,
                "deletions": 24,
                "committedDate": "2023-07-24T23:45:22Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b632793cfeabe093b8d7173e0687a13098f49d22",
                "additions": 2,
                "deletions": 5,
                "committedDate": "2023-07-24T23:46:19Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f12d4e3d0d7dc0356dc370f15c17e50c24fef8c7",
                "additions": 10,
                "deletions": 8,
                "committedDate": "2023-07-30T03:40:02Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott@tqft.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "71afccbb46cf3442b146a56c9788b37ebfa62581",
                "additions": 22,
                "deletions": 22,
                "committedDate": "2023-07-30T03:44:00Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-24T23:43:24Z",
        "deletions": 14,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/List/MinMax.lean",
              "additions": 57,
              "deletions": 14
            }
          ]
        },
        "headRefName": "maximum_of_length_pos",
        "headRefOid": "71afccbb46cf3442b146a56c9788b37ebfa62581",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WR1ct",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5clUPn",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-07-29T13:50:44Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6115,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5clUPn",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-07-29T13:50:44Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVhn",
                    "body": "```suggestion\r\n  coe_le_maximum_iff (α := αᵒᵈ)\r\n```",
                    "createdAt": "2023-07-29T13:39:21Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVlF",
                    "body": "We already have `{l : List α}` from `variable` on line 342 so we can drop a lot of `{L : List α}` and `{l : List α}` below:\r\n```suggestion\r\ndef maximum_of_length_pos (h : 0 < l.length) : α :=\r\n  WithBot.unbot l.maximum (maximum_ne_bot_of_length_pos h)\r\n```",
                    "createdAt": "2023-07-29T13:42:02Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVmj",
                    "body": "```suggestion\r\n  le_maximum_of_length_pos_iff (α := αᵒᵈ) h\r\n```",
                    "createdAt": "2023-07-29T13:43:22Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVnE",
                    "body": "```suggestion\r\n  le_maximum_of_length_pos_of_mem (α := αᵒᵈ) h w\r\n```",
                    "createdAt": "2023-07-29T13:43:57Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVnq",
                    "body": "```suggestion\r\n  getElem_le_maximum_of_length_pos (α := αᵒᵈ) w\r\n```",
                    "createdAt": "2023-07-29T13:44:27Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVpD",
                    "body": "```suggestion\r\n  maximum_ne_bot_of_length_pos (α := αᵒᵈ) h\r\n```",
                    "createdAt": "2023-07-29T13:45:40Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVpY",
                    "body": "```suggestion\r\n  maximum_of_length_pos (α := αᵒᵈ) h\r\n```",
                    "createdAt": "2023-07-29T13:45:59Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVqG",
                    "body": "```suggestion\r\n@[simp]\r\ntheorem le_maximum_of_length_pos_iff {L : List α} (h : 0 < L.length) :\r\n```",
                    "createdAt": "2023-07-29T13:46:35Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVqZ",
                    "body": "```suggestion\r\n@[simp]\r\ntheorem minimum_of_length_pos_le_iff {L : List α} (h : 0 < L.length) :\r\n```",
                    "createdAt": "2023-07-29T13:46:53Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMVvf",
                    "body": "I'm not actually sure but I think an `optParam` might make this more useful:\r\n```suggestion\r\ntheorem getElem_le_maximum_of_length_pos {L : List α} (w : i < L.length)\r\n    (h := (Nat.zero_lt_of_lt w)) :\r\n    L[i] ≤ L.maximum_of_length_pos h := by\r\n```\r\n(likewise for `minimum_of_length_pos_le_getElem` below)",
                    "createdAt": "2023-07-29T13:50:32Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(List/MinMax): maximum_of_length_pos",
        "updatedAt": "2023-07-30T04:56:50Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6115",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "55cd55e15be301135c3c902591b5a4c22a682ba8"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5scFdczwAAAAJObSDj",
              "createdAt": "2023-07-24T23:43:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5scFdczwAAAAJObSDo",
              "createdAt": "2023-07-24T23:43:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6db9e5c0adf2d16e5920433fb6c2f6c29a6ce47a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b632793cfeabe093b8d7173e0687a13098f49d22"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NqJfI",
              "createdAt": "2023-07-25T02:05:58Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WSQR1",
                "title": "[Merged by Bors] - feat: Estimator typeclass and implementation for Levenshtein distance",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6119"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NqMSC",
              "createdAt": "2023-07-25T02:14:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WSRsy",
                "title": "[Merged by Bors] - feat: the `rw_search` tactic",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6120"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5scFdczwAAAAJOfV_A",
              "createdAt": "2023-07-25T03:53:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5clUPn",
              "createdAt": "2023-07-29T13:39:21Z",
              "body": "Thanks!\r\n\r\nbors d+",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iv8ig",
              "createdAt": "2023-07-29T13:50:46Z",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5scFdczwAAAAJRVkLS",
              "createdAt": "2023-07-29T13:50:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5scFdczwAAAAJRVkLi",
              "createdAt": "2023-07-29T13:50:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f12d4e3d0d7dc0356dc370f15c17e50c24fef8c7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "71afccbb46cf3442b146a56c9788b37ebfa62581"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ixE58",
              "createdAt": "2023-07-30T03:44:12Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5scFdczwAAAAJRbOrJ",
              "createdAt": "2023-07-30T03:44:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ixHfV",
              "createdAt": "2023-07-30T04:56:46Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5704116158/job/15457405064)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5704116158/job/15457405032)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5704116158/job/15457404960)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5scFdczwAAAAJRboMR",
              "createdAt": "2023-07-30T04:56:47Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5scFdczwAAAAJRboMt",
              "createdAt": "2023-07-30T04:56:50Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
