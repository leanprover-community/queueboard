{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 107,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "PatrickMassot"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-11-22T05:00:55Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5sW829",
              "body": "@thorimur These are some changes to `fail_if_no_progress`. Want to take a look and leave a review?",
              "createdAt": "2023-11-19T19:34:35Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sW9dc",
              "body": "> @thorimur These are some changes to `fail_if_no_progress`. Want to take a look and leave a review?\r\n\r\n@kmill Will do in the next day or two! :) In general, I wonder if this should be merged before #3757 or not. I suppose it might not hurt; I can just modify that PR. (I also wonder if that PR suffers from the same issues mentioned in the earlier review here; as you can tell by the number, I wrote most of it quite a while ago, and have since learned a lot...)",
              "createdAt": "2023-11-19T19:44:25Z",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sXGDO",
              "body": "@thorimur Unfortunately, now that I have a better grasp of the problems involved in comparing local contexts, I think most of the configurations that #3757 provides are unsafe. Maybe all that's safe is (1) whether to compare user names and (2) changing reducibility levels when doing defeq checks.\r\n\r\nIf we want a really safe `fail_if_no_progress` that's more flexible with fvarids, here's a strategy I've been thinking about:\r\n1. Revert the entire local context of each metavariable.\r\n2. Take the types of each reverted metavariable. These now are independent of the local context, so they are safe to compare.\r\n3. Write a special version of `isDefEq` that is specifically for forall/let chains. Unlike normal `isDefEq`, we want it so that a `let` along the chain is *not* zeta reduced, but rather the types and values are checked for defeq. As defeq testing is done, you construct a new local context where each binder adds a local hypothesis one at a time that's substituted into both forall/let chains simultaneously.\r\n\r\nThere are parts of this that are configurable. I'm not sure how useful it is, but for example you can preserve some of your settings, such as whether or not to check defeq of `let` values, by just going for the substitution and then doing `Lean.Meta.check` to see that it's still type correct (though it's awkward because this prefers either the before value or the after value).\r\n\r\nOne of the big benefits of this is that this makes the comparison independent of fvarids. Many times when you change the type of a local variable, tactics will generate fresh fvarids, even if it's basically a no-op.",
              "createdAt": "2023-11-19T22:10:32Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5slZld",
              "body": "I have some thoughts about the solution to the general problem, which (once settled) I'll plan to incorporate into #3757. The only issue I could find with this specific quick fix was a typo. :) \r\n\r\n@kmill I'll continue the conversation on #3757 soon! :)",
              "createdAt": "2023-11-21T21:44:23Z",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5slk5K",
              "body": "Thanks @thorimur ! In general, if you think changes are ready to be merged, make sure to submit an \"approve\" review, and that might help a maintainer decide to give it to bors. (But if you don't, then, well, don't :-) )",
              "createdAt": "2023-11-21T22:16:56Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5slo8a",
              "body": "> Thanks @thorimur ! In general, if you think changes are ready to be merged, make sure to submit an \"approve\" review, and that might help a maintainer decide to give it to bors. (But if you don't, then, well, don't :-) )\r\n\r\n@kmill Ah, thanks for letting me knowâ€”I'll be sure to do so in the future! :)",
              "createdAt": "2023-11-21T22:33:49Z",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5smj3t",
              "body": "bors merge",
              "createdAt": "2023-11-22T03:53:46Z",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sm1Ec",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6952653991/job/18916563739)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6952653991/job/18916563345)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6952653991/job/18916563631)",
              "createdAt": "2023-11-22T05:00:54Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "4001e48be26abcaa4d3aa66b232b5634ebadf4b5",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-11-17T19:21:23Z",
                "author": {
                  "name": "Patrick Massot",
                  "email": "patrickmassot@free.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYG0Tyw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908409232/job/18797630411"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYG_bqA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908465000/job/18797812648"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYHxUlA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908733655/job/18798630036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYG0T3A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908409231/job/18797630428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYG_a2A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908465001/job/18797812440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYHxTmg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908733650/job/18798629786"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL--w",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908200212/job/18796969723"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL6Sw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199810/job/18796968523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL6Fg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199751/job/18796968470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL_7g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908200218/job/18796969966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYG0UyA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908409232/job/18797630664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYG_alw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908465000/job/18797812375"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYHxTqQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908733655/job/18798629801"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL7Hw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199810/job/18796968735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL7pA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199751/job/18796968868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL_Pg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908200218/job/18796969790"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL8Ag",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199810/job/18796968962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL6wg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199751/job/18796968642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL89w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199810/job/18796969207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL5Pw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199751/job/18796968255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL91g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199810/job/18796969430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL8bQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199751/job/18796969069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYGL-tg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199810/job/18796969654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYIT7fA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908199751/job/18799197052"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3ee38900f531aa5ac1405db9ed119faaba85c3f2",
                "additions": 107,
                "deletions": 16,
                "committedDate": "2023-11-17T20:54:20Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYIk0mw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909001867/job/18799473819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYIk0bg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909001870/job/18799473774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId8MQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908969027/job/18799361073"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId48w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968705/job/18799360243"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKAh_w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968701/job/18800976383"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId8Eg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908969023/job/18799361042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYIk1Vw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909001867/job/18799474007"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId8KQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968705/job/18799361065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKAiuA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968701/job/18800976568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId8wg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908969023/job/18799361218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId5wA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968705/job/18799360448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKAjdA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968701/job/18800976756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId6mg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968705/job/18799360666"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKAkIg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968701/job/18800976930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKAk1Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968701/job/18800977109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId7Vg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968705/job/18799360854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYId87A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968705/job/18799361260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKFwUQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6908968701/job/18801061969"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "21b92552fea7fc57d87d527a0cd359c5d4455a62",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-11-17T22:30:20Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ee3caf17b773735beb5d687b6b23524419d263cb",
                "additions": 4300,
                "deletions": 3548,
                "committedDate": "2023-11-17T22:30:38Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZwtgxA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949804803/job/18908668100"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZwtexQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949804797/job/18908667589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpZHA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746451/job/18801645852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpWxA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746113/job/18801645252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpWDw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746118/job/18801645071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpZNw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746455/job/18801645879"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZwtfUA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949804803/job/18908667728"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpYqQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746113/job/18801645737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpXbg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746118/job/18801645422"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpaGw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746455/job/18801646107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpXaQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746113/job/18801645417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpW0Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746118/job/18801645265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpYBg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746113/job/18801645574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpX9g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746118/job/18801645558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpV-Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746113/job/18801645049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpYlA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746118/job/18801645716"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYKpZbg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746113/job/18801645934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEYL3zig",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6909746118/job/18802930570"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "204f3160a3515b86fe3566cf803c4d24304dbfa9",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-21T21:40:53Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZyQayA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6950341723/job/18910288584"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZyQaEw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6950341724/job/18910288403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw48TQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866902/job/18908855373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw49Eg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908855570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw49kg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908855698"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw49jw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866900/job/18908855695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZyQaIA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6950341723/job/18910288416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw4-2g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw5ABQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908856325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw48TA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866900/job/18908855372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw4-EA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908855824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw4_Ow",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908856123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw5Ajg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856462"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw4-gA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908855936"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw4_tw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw48lw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908855447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZw5BgA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEZyoE-g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18910676218"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-11-17T19:20:25Z",
        "deletions": 14,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/FailIfNoProgress.lean",
              "additions": 24,
              "deletions": 8
            },
            {
              "path": "test/fail_if_no_progress.lean",
              "additions": 83,
              "deletions": 6
            }
          ]
        },
        "headRefName": "pm_fail_if_no_progress",
        "headRefOid": "204f3160a3515b86fe3566cf803c4d24304dbfa9",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fyPay",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nlpmg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-17T20:59:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5n6BKq",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "thorimur"
              },
              "submittedAt": "2023-11-21T22:34:32Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8482,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nlGIR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-17T19:47:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nlJII",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "PatrickMassot"
              },
              "submittedAt": "2023-11-17T19:54:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nlauP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-17T20:24:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nlpmg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-17T20:59:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5n5ndV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "thorimur"
              },
              "submittedAt": "2023-11-21T21:33:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5n6BKq",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "thorimur"
              },
              "submittedAt": "2023-11-21T22:34:32Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TULZT",
                    "body": "This doesn't hurt, but I'm not sure it really fixes the issue. The main problem is that `newGoal` and `goal` might not have compatible local contexts at all, so asking `isDefEq` before ensuring that is senseless.\r\n\r\nOne strategy that's *almost* the right thing to do is to revert all the local variables in each context, and then do the `isDefEq` check on those, which circumvents questions about local contexts. It's not quite right since `isDefEq` will unfold let bindings, so certain kinds of unfoldings won't count as progress.\r\n\r\nAn alternative is to do the `lctxIsDefEq` check *first*, and then only do the target `isDefEq` if that's satisfied. However, `lctxIsDefEq` does not check defeq of let values, so this is still not correct without a further fix.",
                    "createdAt": "2023-11-17T19:47:10Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TUNCY",
                    "body": "I agree this is a very minimal fix. But it's already progress in the sense that it fixes a bug in Lean verbose. Feel free to PR a better fix (you can push to this branch).",
                    "createdAt": "2023-11-17T19:54:16Z",
                    "author": {
                      "login": "PatrickMassot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TUXsG",
                    "body": "Ok, I'm working on one.",
                    "createdAt": "2023-11-17T20:24:35Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TUfuq",
                    "body": "Done, assuming CI passes",
                    "createdAt": "2023-11-17T20:59:32Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ThQI4",
                    "body": "```suggestion\r\n      -- They are compatible, so now we can check that the goals are equivalent\r\n```",
                    "createdAt": "2023-11-21T21:33:51Z",
                    "author": {
                      "login": "thorimur"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDYwODgz",
              "login": "PatrickMassot"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjY4NDEwNDY4",
              "login": "thorimur"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZyQayA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6950341723/job/18910288584"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZyQaEw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6950341724/job/18910288403"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw48TQ",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866902/job/18908855373"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw49Eg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908855570"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw49kg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908855698"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw49jw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866900/job/18908855695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZyQaIA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6950341723/job/18910288416"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw4-2g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856026"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw5ABQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908856325"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw48TA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866900/job/18908855372"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw4-EA",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908855824"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw4_Ow",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908856123"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw5Ajg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856462"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw4-gA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908855936"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw4_tw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856247"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw48lw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18908855447"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZw5BgA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866869/job/18908856704"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEZyoE-g",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6949866872/job/18910676218"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - fix: local context handling in `fail_if_no_progress`",
        "updatedAt": "2023-11-22T05:00:59Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8482",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53MhDqzwAAAAKPiqbd",
              "createdAt": "2023-11-17T19:20:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53MhDqzwAAAAKPiqbj",
              "createdAt": "2023-11-17T19:20:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53MhDqzwAAAAKPiqbr",
              "createdAt": "2023-11-17T19:20:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4001e48be26abcaa4d3aa66b232b5634ebadf4b5"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c53MhDqzwAAAAKPisse",
              "createdAt": "2023-11-17T19:21:35Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nlGIR",
              "createdAt": "2023-11-17T19:47:10Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3ee38900f531aa5ac1405db9ed119faaba85c3f2"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53MhDqzwAAAAKPmIlK",
              "createdAt": "2023-11-17T20:59:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "21b92552fea7fc57d87d527a0cd359c5d4455a62"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ee3caf17b773735beb5d687b6b23524419d263cb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sW829",
              "createdAt": "2023-11-19T19:34:35Z",
              "body": "@thorimur These are some changes to `fail_if_no_progress`. Want to take a look and leave a review?",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sW9dc",
              "createdAt": "2023-11-19T19:44:25Z",
              "body": "> @thorimur These are some changes to `fail_if_no_progress`. Want to take a look and leave a review?\r\n\r\n@kmill Will do in the next day or two! :) In general, I wonder if this should be merged before #3757 or not. I suppose it might not hurt; I can just modify that PR. (I also wonder if that PR suffers from the same issues mentioned in the earlier review here; as you can tell by the number, I wrote most of it quite a while ago, and have since learned a lot...)",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sXGDO",
              "createdAt": "2023-11-19T22:10:32Z",
              "body": "@thorimur Unfortunately, now that I have a better grasp of the problems involved in comparing local contexts, I think most of the configurations that #3757 provides are unsafe. Maybe all that's safe is (1) whether to compare user names and (2) changing reducibility levels when doing defeq checks.\r\n\r\nIf we want a really safe `fail_if_no_progress` that's more flexible with fvarids, here's a strategy I've been thinking about:\r\n1. Revert the entire local context of each metavariable.\r\n2. Take the types of each reverted metavariable. These now are independent of the local context, so they are safe to compare.\r\n3. Write a special version of `isDefEq` that is specifically for forall/let chains. Unlike normal `isDefEq`, we want it so that a `let` along the chain is *not* zeta reduced, but rather the types and values are checked for defeq. As defeq testing is done, you construct a new local context where each binder adds a local hypothesis one at a time that's substituted into both forall/let chains simultaneously.\r\n\r\nThere are parts of this that are configurable. I'm not sure how useful it is, but for example you can preserve some of your settings, such as whether or not to check defeq of `let` values, by just going for the substitution and then doing `Lean.Meta.check` to see that it's still type correct (though it's awkward because this prefers either the before value or the after value).\r\n\r\nOne of the big benefits of this is that this makes the comparison independent of fvarids. Many times when you change the type of a local variable, tactics will generate fresh fvarids, even if it's basically a no-op.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5n5ndV",
              "createdAt": "2023-11-21T21:33:51Z",
              "body": "",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "204f3160a3515b86fe3566cf803c4d24304dbfa9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5slZld",
              "createdAt": "2023-11-21T21:44:23Z",
              "body": "I have some thoughts about the solution to the general problem, which (once settled) I'll plan to incorporate into #3757. The only issue I could find with this specific quick fix was a typo. :) \r\n\r\n@kmill I'll continue the conversation on #3757 soon! :)",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5slk5K",
              "createdAt": "2023-11-21T22:16:56Z",
              "body": "Thanks @thorimur ! In general, if you think changes are ready to be merged, make sure to submit an \"approve\" review, and that might help a maintainer decide to give it to bors. (But if you don't, then, well, don't :-) )",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5slo8a",
              "createdAt": "2023-11-21T22:33:49Z",
              "body": "> Thanks @thorimur ! In general, if you think changes are ready to be merged, make sure to submit an \"approve\" review, and that might help a maintainer decide to give it to bors. (But if you don't, then, well, don't :-) )\r\n\r\n@kmill Ah, thanks for letting me knowâ€”I'll be sure to do so in the future! :)",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5n6BKq",
              "createdAt": "2023-11-21T22:34:32Z",
              "body": "",
              "author": {
                "login": "thorimur"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5smj3t",
              "createdAt": "2023-11-22T03:53:46Z",
              "body": "bors merge",
              "author": {
                "login": "PatrickMassot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c53MhDqzwAAAAKRh4St",
              "createdAt": "2023-11-22T03:53:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c53MhDqzwAAAAKRh4Tx",
              "createdAt": "2023-11-22T03:53:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sm1Ec",
              "createdAt": "2023-11-22T05:00:54Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6952653991/job/18916563739)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6952653991/job/18916563345)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6952653991/job/18916563631)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c53MhDqzwAAAAKRjPpM",
              "createdAt": "2023-11-22T05:00:55Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c53MhDqzwAAAAKRjPuv",
              "createdAt": "2023-11-22T05:00:59Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
