{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 551,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "urkud"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 111,
        "closed": true,
        "closedAt": "2024-07-20T08:04:09Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6FkVAv",
              "body": "### PR summary [d491d81e94](https://github.com/leanprover-community/mathlib4/pull/14934/commits/d491d81e941af7e4dd1e637ea35ffa5d1cd51402)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (α : Type u) (β : Type v) [Fintype α] [Fintype β] : Fintype (α ⊕ β)`\n`+ instance : Quiver (LocQuiver W) where Hom A B := (A.obj ⟶ B.obj) ⊕ { f : B.obj ⟶ A.obj // W f }`\n`+ instance : SMul M (α ⊕ β)`\n`+ instance [Finite α] [Finite β] : Finite (α ⊕ β) := by`\n`+ instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (α ⊕ β) (Lex r s)`\n`+ instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (α ⊕ β) (LiftRel r s)`\n`+ instance [IsEmpty α] [IsEmpty β] : IsEmpty (α ⊕' β)`\n`+ instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (α ⊕ β) (Lex r s)`\n`+ instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (α ⊕ β) (LiftRel r s)`\n`+ instance [IsRefl α r] [IsRefl β s] : IsRefl (α ⊕ β) (Lex r s)`\n`+ instance [IsRefl α r] [IsRefl β s] : IsRefl (α ⊕ β) (LiftRel r s)`\n`+ instance [IsTotal α r] [IsTotal β s] : IsTotal (α ⊕ β) (Lex r s)`\n`+ instance [IsTrans α r] [IsTrans β s] : IsTrans (α ⊕ β) (Lex r s)`\n`+ instance [IsTrans α r] [IsTrans β s] : IsTrans (α ⊕ β) (LiftRel r s)`\n`+ instance [IsTrichotomous α r] [IsTrichotomous β s] : IsTrichotomous (α ⊕ β) (Lex r s)`\n`+ instance [PartialOrder α] [PartialOrder β] : PartialOrder (α ⊕ β)`\n`+ instance [SMul M N] [IsScalarTower M N α] [IsScalarTower M N β] : IsScalarTower M N (α ⊕ β)`\n`+ instance [SMulCommClass M N α] [SMulCommClass M N β] : SMulCommClass M N (α ⊕ β)`\n`+ instance [SigmaCompactSpace Y] : SigmaCompactSpace (X ⊕ Y)`\n`+ instance _root_.Sum.encodable : Encodable (α ⊕ β)`\n`+-+- prodSumDistrib`\n`+-+- sumAssoc`\n`+-+- sumProdDistrib`\n`+-+--++--+-+-+ sum`\n`- instance (α : Type u) (β : Type v) [Fintype α] [Fintype β] : Fintype (Sum α β)`\n`- instance : Quiver (LocQuiver W) where Hom A B := Sum (A.obj ⟶ B.obj) { f : B.obj ⟶ A.obj // W f }`\n`- instance : SMul M (Sum α β)`\n`- instance [Finite α] [Finite β] : Finite (Sum α β) := by`\n`- instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (Sum α β) (Lex r s)`\n`- instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (Sum α β) (LiftRel r s)`\n`- instance [IsEmpty α] [IsEmpty β] : IsEmpty (PSum α β)`\n`- instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (Sum α β) (Lex r s)`\n`- instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (Sum α β) (LiftRel r s)`\n`- instance [IsRefl α r] [IsRefl β s] : IsRefl (Sum α β) (Lex r s)`\n`- instance [IsRefl α r] [IsRefl β s] : IsRefl (Sum α β) (LiftRel r s)`\n`- instance [IsTotal α r] [IsTotal β s] : IsTotal (Sum α β) (Lex r s)`\n`- instance [IsTrans α r] [IsTrans β s] : IsTrans (Sum α β) (Lex r s)`\n`- instance [IsTrans α r] [IsTrans β s] : IsTrans (Sum α β) (LiftRel r s)`\n`- instance [IsTrichotomous α r] [IsTrichotomous β s] : IsTrichotomous (Sum α β) (Lex r s)`\n`- instance [PartialOrder α] [PartialOrder β] : PartialOrder (Sum α β)`\n`- instance [SMul M N] [IsScalarTower M N α] [IsScalarTower M N β] : IsScalarTower M N (Sum α β)`\n`- instance [SMulCommClass M N α] [SMulCommClass M N β] : SMulCommClass M N (Sum α β)`\n`- instance [SigmaCompactSpace Y] : SigmaCompactSpace (Sum X Y)`\n`- instance _root_.Sum.encodable : Encodable (Sum α β)`\n`-++- listDecode`\n`-+-+ constantsVarsEquiv`\n`-+-+ currySum`\n`-+-+ currySum_apply`\n`-+-+ disjSum`\n`-+-+ fix`\n`-+-+ inl_le_inl_iff`\n`-+-+ inl_lt_inl_iff`\n`-+-+ inr_le_inr_iff`\n`-+-+ prod`\n`-+-+ sumComm`\n`-+-+ sumCongr_refl`\n`-+-+-+ sumCongr`\n`---+++ sum_casesOn`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-20T03:25:45Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FkmNW",
              "body": "Very nice! Let's merge before it rots. Thanks!\r\n\r\nbors merge",
              "createdAt": "2024-07-20T06:47:49Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Fk1-e",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10018388878/job/27693696827)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10018388878/job/27693696985)",
              "createdAt": "2024-07-20T08:04:09Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d26d94db03885eb8ee971abd8b90cdc3b819e427",
                "additions": 532,
                "deletions": 534,
                "committedDate": "2024-07-19T22:15:07Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHOhw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979430/job/27685670535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHOwA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979431/job/27685670592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHN0A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979430/job/27685670352"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHOMw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979431/job/27685670451"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHPFQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979430/job/27685670677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHNkA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979431/job/27685670288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHM4A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979431/job/27685670112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHNGA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979430/job/27685670168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjHPug",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979430/job/27685670842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcjQzZw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10014979431/job/27685827431"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f0c5fc59430f37e3704663c3abc2f56c3b115f37",
                "additions": 9,
                "deletions": 9,
                "committedDate": "2024-07-19T22:56:01Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7NWg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718255/job/27687570778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7NWA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718257/job/27687570776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7N_Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718255/job/27687570941"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7ONg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718257/job/27687570998"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7Nqg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718255/job/27687570858"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7N8g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718257/job/27687570930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7Nmw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718257/job/27687570843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7OUA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718255/job/27687571024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGck7OtA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718255/job/27687571124"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGclkuNA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10015718257/job/27688250932"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5e8b629c6bc9da2c422a05c4a1a0745bf3e2e7dc",
                "additions": 9,
                "deletions": 9,
                "committedDate": "2024-07-20T01:42:36Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "20513d0dfb1768d7114bc025886089683cf59d27",
                "additions": 16,
                "deletions": 16,
                "committedDate": "2024-07-20T01:45:40Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8Ecw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569907/job/27689682035"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8E0A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569905/job/27689682128"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8FjQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569907/job/27689682317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8FcA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569905/job/27689682288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8E4w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569907/job/27689682147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8FGA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569905/job/27689682200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8EiA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569905/job/27689682056"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8FNg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569907/job/27689682230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcm8F8g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569907/job/27689682418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcnq1mA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10016569905/job/27690448280"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d491d81e941af7e4dd1e637ea35ffa5d1cd51402",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-07-20T03:07:07Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoRnfQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196377/job/27691083645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoRneA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196378/job/27691083640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQHA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848284"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQ3g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoRncg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196376/job/27691083634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQ-g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848506"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoRntA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196376/job/27691083700"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQuA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQEQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQcA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDQoA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoDRRA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoMdhw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690999175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoRyvw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27691086527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGcoSEkw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14934&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHD6byGA",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4522",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-20T03:25:05Z",
        "deletions": 553,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Finset.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Action/Sum.lean",
              "additions": 10,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Lie/Classical.lean",
              "additions": 12,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/Equiv.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Multilinear/Curry.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/CategoryTheory/Extensive.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/MonoCoprod.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Localization/Construction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Pi/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sums/Associator.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Sums/Basic.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Combinatorics/Derangements/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Combinatorics/HalesJewett.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Covering.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Combinatorics/Quiver/Symmetric.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Computability/Halting.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Computability/Partrec.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Computability/Primrec.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Control/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Control/Bitraversable/Instances.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Control/Traversable/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/FinEnum.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finite/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/Finite/Card.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finset/Sum.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Finsupp/Basic.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Data/Fintype/BigOperators.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Fintype/Card.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Data/Fintype/Sort.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fintype/Sum.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Matrix/Block.lean",
              "additions": 13,
              "deletions": 13
            },
            {
              "path": "Mathlib/Data/Multiset/Sum.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Ordmap/Ordnode.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/PFun.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/PFunctor/Univariate/M.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Seq/Computation.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Data/Seq/Parallel.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Seq/Seq.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Finite.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Set/Image.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Data/Sign.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Sum/Basic.lean",
              "additions": 17,
              "deletions": 17
            },
            {
              "path": "Mathlib/Data/Sum/Interval.lean",
              "additions": 16,
              "deletions": 16
            },
            {
              "path": "Mathlib/Data/Sum/Order.lean",
              "additions": 52,
              "deletions": 52
            },
            {
              "path": "Mathlib/Data/Sym/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/TwoPointing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/W/Constructions.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/ChevalleyWarning.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Perm/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Perm/Finite.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/GroupTheory/SpecificGroups/Dihedral.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/SpecificGroups/Quaternion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Alternating/DomCoprod.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/LinearAlgebra/Basis.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Basis/VectorSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Finsupp.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/LinearAlgebra/LinearIndependent.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Determinant/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/SchurComplement.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/Transvection.lean",
              "additions": 17,
              "deletions": 17
            },
            {
              "path": "Mathlib/LinearAlgebra/Multilinear/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/LinearAlgebra/Multilinear/TensorProduct.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/Pi.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/LinearAlgebra/PiTensorProduct.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/LinearAlgebra/SymplecticGroup.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Logic/Denumerable.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Embedding/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Logic/Encodable/Basic.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Logic/Equiv/Basic.lean",
              "additions": 34,
              "deletions": 34
            },
            {
              "path": "Mathlib/Logic/Equiv/Embedding.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Logic/Equiv/Fin.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Logic/Equiv/Set.lean",
              "additions": 16,
              "deletions": 16
            },
            {
              "path": "Mathlib/Logic/IsEmpty.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Logic/Nonempty.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Logic/Nontrivial/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Small/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Real.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/MeasurableSpace/Embedding.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/ModelTheory/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/ModelTheory/Definability.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/ModelTheory/Encoding.lean",
              "additions": 13,
              "deletions": 13
            },
            {
              "path": "Mathlib/ModelTheory/Order.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/ModelTheory/Semantics.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/ModelTheory/Syntax.lean",
              "additions": 36,
              "deletions": 36
            },
            {
              "path": "Mathlib/NumberTheory/Dioph.lean",
              "additions": 13,
              "deletions": 13
            },
            {
              "path": "Mathlib/Order/BoundedOrder.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/CompleteLattice.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/CountableDenseLinearOrder.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/InitialSeg.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/JordanHolder.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/FinitePresentation.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/PrimeSpectrum.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Cardinal/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/SetTheory/Cardinal/Ordinal.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/SetTheory/Game/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/SetTheory/Game/PGame.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/SetTheory/Lists.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Arithmetic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Notation.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "YK-sum-notation",
        "headRefOid": "d491d81e941af7e4dd1e637ea35ffa5d1cd51402",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5199oY",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
              "color": "0EFB96",
              "name": "tech debt"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 14934,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoRnfQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196377/job/27691083645"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoRneA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196378/job/27691083640"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQHA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848284"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQ3g",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848478"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoRncg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196376/job/27691083634"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQ-g",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848506"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQUg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848338"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoRntA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017196376/job/27691083700"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQuA",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848440"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQEQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848273"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQcA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848368"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDQoA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690848416"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoDRRA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084602/job/27690848580"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoMdhw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10017084603/job/27690999175"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoRyvw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27691086527"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGcoSEkw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14934&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHD6byGA",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/4522",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - chore(*): use ⊕ notation for `Sum`",
        "updatedAt": "2024-07-20T08:04:12Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/14934",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QRlY1zwAAAAMp4Qiu",
              "createdAt": "2024-07-20T03:25:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
                "name": "tech debt"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FkVAv",
              "createdAt": "2024-07-20T03:25:45Z",
              "body": "### PR summary [d491d81e94](https://github.com/leanprover-community/mathlib4/pull/14934/commits/d491d81e941af7e4dd1e637ea35ffa5d1cd51402)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (α : Type u) (β : Type v) [Fintype α] [Fintype β] : Fintype (α ⊕ β)`\n`+ instance : Quiver (LocQuiver W) where Hom A B := (A.obj ⟶ B.obj) ⊕ { f : B.obj ⟶ A.obj // W f }`\n`+ instance : SMul M (α ⊕ β)`\n`+ instance [Finite α] [Finite β] : Finite (α ⊕ β) := by`\n`+ instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (α ⊕ β) (Lex r s)`\n`+ instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (α ⊕ β) (LiftRel r s)`\n`+ instance [IsEmpty α] [IsEmpty β] : IsEmpty (α ⊕' β)`\n`+ instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (α ⊕ β) (Lex r s)`\n`+ instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (α ⊕ β) (LiftRel r s)`\n`+ instance [IsRefl α r] [IsRefl β s] : IsRefl (α ⊕ β) (Lex r s)`\n`+ instance [IsRefl α r] [IsRefl β s] : IsRefl (α ⊕ β) (LiftRel r s)`\n`+ instance [IsTotal α r] [IsTotal β s] : IsTotal (α ⊕ β) (Lex r s)`\n`+ instance [IsTrans α r] [IsTrans β s] : IsTrans (α ⊕ β) (Lex r s)`\n`+ instance [IsTrans α r] [IsTrans β s] : IsTrans (α ⊕ β) (LiftRel r s)`\n`+ instance [IsTrichotomous α r] [IsTrichotomous β s] : IsTrichotomous (α ⊕ β) (Lex r s)`\n`+ instance [PartialOrder α] [PartialOrder β] : PartialOrder (α ⊕ β)`\n`+ instance [SMul M N] [IsScalarTower M N α] [IsScalarTower M N β] : IsScalarTower M N (α ⊕ β)`\n`+ instance [SMulCommClass M N α] [SMulCommClass M N β] : SMulCommClass M N (α ⊕ β)`\n`+ instance [SigmaCompactSpace Y] : SigmaCompactSpace (X ⊕ Y)`\n`+ instance _root_.Sum.encodable : Encodable (α ⊕ β)`\n`+-+- prodSumDistrib`\n`+-+- sumAssoc`\n`+-+- sumProdDistrib`\n`+-+--++--+-+-+ sum`\n`- instance (α : Type u) (β : Type v) [Fintype α] [Fintype β] : Fintype (Sum α β)`\n`- instance : Quiver (LocQuiver W) where Hom A B := Sum (A.obj ⟶ B.obj) { f : B.obj ⟶ A.obj // W f }`\n`- instance : SMul M (Sum α β)`\n`- instance [Finite α] [Finite β] : Finite (Sum α β) := by`\n`- instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (Sum α β) (Lex r s)`\n`- instance [IsAntisymm α r] [IsAntisymm β s] : IsAntisymm (Sum α β) (LiftRel r s)`\n`- instance [IsEmpty α] [IsEmpty β] : IsEmpty (PSum α β)`\n`- instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (Sum α β) (Lex r s)`\n`- instance [IsIrrefl α r] [IsIrrefl β s] : IsIrrefl (Sum α β) (LiftRel r s)`\n`- instance [IsRefl α r] [IsRefl β s] : IsRefl (Sum α β) (Lex r s)`\n`- instance [IsRefl α r] [IsRefl β s] : IsRefl (Sum α β) (LiftRel r s)`\n`- instance [IsTotal α r] [IsTotal β s] : IsTotal (Sum α β) (Lex r s)`\n`- instance [IsTrans α r] [IsTrans β s] : IsTrans (Sum α β) (Lex r s)`\n`- instance [IsTrans α r] [IsTrans β s] : IsTrans (Sum α β) (LiftRel r s)`\n`- instance [IsTrichotomous α r] [IsTrichotomous β s] : IsTrichotomous (Sum α β) (Lex r s)`\n`- instance [PartialOrder α] [PartialOrder β] : PartialOrder (Sum α β)`\n`- instance [SMul M N] [IsScalarTower M N α] [IsScalarTower M N β] : IsScalarTower M N (Sum α β)`\n`- instance [SMulCommClass M N α] [SMulCommClass M N β] : SMulCommClass M N (Sum α β)`\n`- instance [SigmaCompactSpace Y] : SigmaCompactSpace (Sum X Y)`\n`- instance _root_.Sum.encodable : Encodable (Sum α β)`\n`-++- listDecode`\n`-+-+ constantsVarsEquiv`\n`-+-+ currySum`\n`-+-+ currySum_apply`\n`-+-+ disjSum`\n`-+-+ fix`\n`-+-+ inl_le_inl_iff`\n`-+-+ inl_lt_inl_iff`\n`-+-+ inr_le_inr_iff`\n`-+-+ prod`\n`-+-+ sumComm`\n`-+-+ sumCongr_refl`\n`-+-+-+ sumCongr`\n`---+++ sum_casesOn`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FkmNW",
              "createdAt": "2024-07-20T06:47:49Z",
              "body": "Very nice! Let's merge before it rots. Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QRlY1zwAAAAMp6Vq4",
              "createdAt": "2024-07-20T06:47:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Fk1-e",
              "createdAt": "2024-07-20T08:04:09Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10018388878/job/27693696827)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10018388878/job/27693696985)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6QRlY1zwAAAAMp8NIJ",
              "createdAt": "2024-07-20T08:04:10Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6QRlY1zwAAAAMp8NQU",
              "createdAt": "2024-07-20T08:04:12Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5T_P-b",
              "createdAt": "2024-07-21T01:44:09Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5VhCHi",
                "title": "feat: more `PGame.identical` `PGame.memₗ` `PGame.memᵣ` APIs",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5901"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5UOlvf",
              "createdAt": "2024-08-01T17:34:06Z",
              "source": {
                "id": "PR_kwDOFcwZ1c529Mz2",
                "title": "feat: MiM PR report",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15355"
              }
            }
          ]
        }
      }
    }
  }
}
