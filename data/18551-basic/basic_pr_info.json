{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 2836,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "joelriou"
        },
        "baseRefName": "master",
        "body": "If `B` is an `A`-algebra, we construct the algebraic De Rham complex of `B` over `A`: it is a cochain complex of `A`-modules.\r\n\r\n---\r\n\r\n- [ ] depends on: #18735\r\n- [ ] depends on: #18662\r\n- [ ] depends on: #18725 \r\n- [ ] depends on: #18534\r\n- [ ] depends on: #18527\r\n- [x] depends on: #18440\r\n- [ ] depends on: #18432\r\n- [x] depends on: #18408\r\n- [x] depends on: #18389\r\n- [x] depends on: #18374\r\n- [x] depends on: #18359\r\n- [x] depends on: #18332\r\n\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 26,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6SNTV-",
              "body": "### PR summary [5888c0081b](https://github.com/leanprover-community/mathlib4/pull/18551/commits/5888c0081ba867ede5c60d3060f2d674d932b53c)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.LinearAlgebra.PiTensorProduct`|-788|\n| `Mathlib.LinearAlgebra.PiTensorProduct.Basic`|788|\n| `Mathlib.LinearAlgebra.PiTensorProduct.Generators`|872|\n| `Mathlib.Algebra.Module.Presentation.Cokernel`|903|\n| `Mathlib.Algebra.Module.Presentation.Tensor`|911|\n| `Mathlib.Algebra.Module.Presentation.PiTensor`|924|\n| `Mathlib.Algebra.Module.Presentation.RestrictScalars`|928|\n| `Mathlib.LinearAlgebra.PiTensorProduct.Finite`|1043|\n| `Mathlib.Algebra.Module.Presentation.Differentials`|1322|\n| `Mathlib.LinearAlgebra.ExteriorPower.Basic`|1335|\n| `Mathlib.LinearAlgebra.ExteriorPower.Generators`|1340|\n| `Mathlib.Algebra.Module.Presentation.ExteriorPower`|1343|\n| `Mathlib.Algebra.Category.ModuleCat.ExteriorPower`|1442|\n| `Mathlib.RingTheory.DeRham.Basic`|1532|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AlternatingMap`\n`+ AlternatingMap.antisymmetry`\n`+ CokernelData`\n`+ CokernelData.ofSection`\n`+ IsPresentation.exteriorPower`\n`+ IsPresentation.tensor`\n`+ KaehlerDifferential.presentation`\n`+ LinearMap.alternating_of_generators`\n`+ Nat.card_compl_add_card`\n`+ Nat.card_singleton_compl`\n`+ Presentation.piTensor`\n`+ RestrictScalarsData`\n`+ _root_.Equiv.Perm.exists_orderEmbedding_of_finite`\n`+ _root_.Fin.eq_zero_or_succ`\n`+ _root_.MultilinearMap.ext_of_span_eq_top`\n`+ alternatingMapLinearEquiv`\n`+ alternatingMapLinearEquiv_apply_ŒπMulti`\n`+ alternatingMapLinearEquiv_comp`\n`+ alternatingMapLinearEquiv_comp_ŒπMulti`\n`+ alternatingMapLinearEquiv_symm_apply`\n`+ alternatingMapLinearEquiv_symm_map`\n`+ alternatingMapLinearEquiv_ŒπMulti`\n`+ cokernel`\n`+ cokernelRelations`\n`+ cokernelSolution`\n`+ comm‚ÇÅ‚ÇÇ`\n`+ comm‚ÇÅ‚ÇÇ_single`\n`+ comm‚ÇÇ‚ÇÉ`\n`+ comm‚ÇÇ‚ÇÉ'`\n`+ comp_embedding`\n`+ comp_finInsert`\n`+ currySumEquiv_apply`\n`+ currySumEquiv_symm_apply`\n`+ curry‚ÇÇ`\n`+ curry‚ÇÇ_apply`\n`+ curry‚ÇÇ_apply_restriction`\n`+ d`\n`+ d_apply`\n`+ d_d`\n`+ d_d_apply`\n`+ deRhamComplex`\n`+ desc`\n`+ descAsMultilinearMap`\n`+ descAsMultilinearMap_apply`\n`+ desc_comp_œÄ`\n`+ desc_mk`\n`+ differentials`\n`+ differentialsRelations`\n`+ differentialsRestrictScalarsData`\n`+ differentialsSolution`\n`+ differentialsSolution_isPresentation`\n`+ domCoprodDep`\n`+ domCoprodDep'`\n`+ embDomain_neg`\n`+ embDomain_sub`\n`+ embedding`\n`+ embedding_apply_of_neq`\n`+ embedding_apply_self`\n`+ embedding_eq_update_embedding_zero`\n`+ eq_presInd_var`\n`+ equivTensorPiTensorComplSingleton`\n`+ equivTensorPiTensorComplSingleton_symm_tmul`\n`+ equivTensorPiTensorComplSingleton_tprod`\n`+ exact_iff_of_surjective_of_bijective_of_injective`\n`+ ext`\n`+ ext_of_span_eq_top`\n`+ extendCompSingleton_restriction`\n`+ extendComplPair`\n`+ extendComplPair_comp`\n`+ extendComplPair_of_neq`\n`+ extendComplPair_one`\n`+ extendComplPair_restriction`\n`+ extendComplPair_update`\n`+ extendComplPair_zero`\n`+ extendComplSingleton`\n`+ extendComplSingleton_of_neq`\n`+ extendComplSingleton_self`\n`+ fac`\n`+ finInsert`\n`+ finInsert_eq_update_finInsert_zero`\n`+ finInsert_succ`\n`+ finInsert_swapValues`\n`+ finInsert_update`\n`+ finInsert_zero`\n`+ finsupp_œÄ`\n`+ fromTensorPower`\n`+ fromTensorPower_surjective`\n`+ fromTensorPower_tprod`\n`+ functor`\n`+ hom_ext`\n`+ hom‚ÇÅ`\n`+ hom‚ÇÅ_single`\n`+ injective_range_liftQ_of_exact`\n`+ instance (M : ModuleCat.{v} R) (N : ModuleCat.{max u v} R) (n : ‚Ñï) :`\n`+ isPresentation`\n`+ isPresentationCoreTensor`\n`+ isPresentationCore_induction_step`\n`+ isPresentation_induction_step`\n`+ isPresentation_of_isEmpty`\n`+ iso‚ÇÄ`\n`+ iso‚ÇÄ_hom_naturality`\n`+ iso‚ÇÅ`\n`+ iso‚ÇÅ_hom_naturality`\n`+ ker_eq_bot_range_liftQ_iff`\n`+ le_ker`\n`+ linearEquiv‚ÇÄ`\n`+ linearEquiv‚ÇÄ_naturality`\n`+ linearEquiv‚ÇÅ`\n`+ linearEquiv‚ÇÅ_naturality`\n`+ linearMap_eq_iff_of_eq_span`\n`+ linearMap_eq_iff_of_span_eq_top`\n`+ linearMap_eq_zero_iff_of_eq_span`\n`+ linearMap_eq_zero_iff_of_span_eq_top`\n`+ linearMap_exact_iff_of_surjective_of_bijective_of_injective`\n`+ linearMap_ext`\n`+ map_apply_ŒπMulti`\n`+ map_comp`\n`+ map_comp_ŒπMulti`\n`+ map_eq_zero_of_eq`\n`+ map_eq_zero_of_eq_of_generators`\n`+ map_id`\n`+ map_mk`\n`+ map_of_eq_zero`\n`+ mk`\n`+ mk'`\n`+ natIso‚ÇÄ`\n`+ natIso‚ÇÅ`\n`+ nonempty_cokernelData`\n`+ ofExact`\n`+ ofExactOfSurjective`\n`+ postcomp`\n`+ postcomp_apply`\n`+ presInd`\n`+ presInd_var`\n`+ presentation`\n`+ presentationDifferentialsDown`\n`+ presentationDifferentialsDown_var`\n`+ presentationDifferentialsUp`\n`+ presentationDifferentialsUp_relation_alternate`\n`+ presentationDifferentialsUp_var`\n`+ rec_update‚ÇÅ`\n`+ rec_update‚ÇÇ`\n`+ relation`\n`+ relations`\n`+ relationsSolutionEquiv`\n`+ restrictScalars`\n`+ smul_def`\n`+ span_var_eq_top`\n`+ span_ŒπMulti_embedding_of_span_eq_top`\n`+ span_ŒπMulti_of_span_eq_top`\n`+ span_ŒπMulti_orderEmbedding_of_span_eq_top`\n`+ submodule_span_eq_top`\n`+ sumSingletonComplEquiv`\n`+ sumSingletonComplEquiv_inl`\n`+ sumSingletonComplEquiv_inr`\n`+ surjective_hom‚ÇÅ`\n`+ surjective_range_liftQ`\n`+ swapValues`\n`+ swapValues_apply`\n`+ swapValues_comp`\n`+ swapValues_eq_update_update`\n`+ swapValues_extendComplPair`\n`+ swapValues_finInsert_embedding`\n`+ swapValues_fst`\n`+ swapValues_snd`\n`+ tmulEquivDep`\n`+ tmulEquivDep_apply`\n`+ tmulEquivDep_symm_apply`\n`+ toQuotient`\n`+ update_comp`\n`+ update_extendComplPair‚ÇÄ`\n`+ update_extendComplPair‚ÇÅ`\n`+ update_inl_comp_inl_apply`\n`+ update_inr_comp_inr_apply`\n`+ update_update`\n`+ ŒπMulti`\n`+ ŒπMulti_apply_coe`\n`+ ŒπMulti_span`\n`+ ŒπMulti_span_fixedDegree`\n`+ œÄ_desc_apply`\n`+ œÄ_single'`\n`++ finite`\n`++ map`\n`++ tautological`\n`+++ Rels`\n`+++ isPresentationCore`\n`+++ piTensor`\n`+++ tensor`\n`++++ exteriorPower`\n`- coe_currySumEquiv`\n`- coe_currySumEquiv_symm`\n`- currySum_apply`\n`- uncurrySum_aux_apply`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-11-02T11:31:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SNUMU",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#18735\n* leanprover-community/mathlib4#18662\n* leanprover-community/mathlib4#18725\n* leanprover-community/mathlib4#18534\n* leanprover-community/mathlib4#18527\n* ~~leanprover-community/mathlib4#18440~~\n* ~~leanprover-community/mathlib4#18432~~\n* ~~leanprover-community/mathlib4#18408~~\n* ~~leanprover-community/mathlib4#18389~~\n* ~~leanprover-community/mathlib4#18374~~\n* ~~leanprover-community/mathlib4#18359~~\n* ~~leanprover-community/mathlib4#18332~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-11-02T11:46:47Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-11-02T11:30:50Z",
        "deletions": 156,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 13,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/ExteriorPower.lean",
              "additions": 132,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/Basic.lean",
              "additions": 16,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/Cokernel.lean",
              "additions": 203,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/Differentials.lean",
              "additions": 208,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/DirectSum.lean",
              "additions": 6,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/ExteriorPower.lean",
              "additions": 458,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/PiTensor.lean",
              "additions": 270,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/RestrictScalars.lean",
              "additions": 68,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Module/Presentation/Tensor.lean",
              "additions": 110,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Multilinear/Curry.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/PiTensorProduct/ProjectiveSeminorm.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finsupp/Defs.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Sum/Basic.lean",
              "additions": 22,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/ExteriorPower/Basic.lean",
              "additions": 289,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/ExteriorPower/Generators.lean",
              "additions": 111,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Multilinear/Basic.lean",
              "additions": 57,
              "deletions": 78
            },
            {
              "path": "Mathlib/LinearAlgebra/Multilinear/TensorProduct.lean",
              "additions": 40,
              "deletions": 24
            },
            {
              "path": "Mathlib/LinearAlgebra/PiTensorProduct/Basic.lean",
              "additions": 49,
              "deletions": 47
            },
            {
              "path": "Mathlib/LinearAlgebra/PiTensorProduct/Finite.lean",
              "additions": 31,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/PiTensorProduct/Generators.lean",
              "additions": 217,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Span.lean",
              "additions": 46,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorPower.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Function/Basic.lean",
              "additions": 37,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/DeRham/Basic.lean",
              "additions": 432,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/PiTensorProduct.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "algebraic-de-rham-complex",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6AsbsN",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJgtQ",
              "color": "33DBEC",
              "name": "t-algebraic-geometry"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "number": 18551,
        "reviews": {
          "nodes": []
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpuzQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743751552/job/32717303501"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpuyQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743751556/job/32717303497"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpbSA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749959/job/32717298504"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpdrw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749956/job/32717299119"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpwbQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743751559/job/32717303917"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpehg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749959/job/32717299334"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpa7A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749956/job/32717298412"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpu4A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743751559/job/32717303520"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpcTg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749956/job/32717298766"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpc5A",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749959/job/32717298916"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhpgIg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749959/job/32717299746"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnjhiVA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11743749956/job/32719266388"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhqmMQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32717317681"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnhrVXA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18551&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(AlgebraicGeometry): the algebraic De Rham complex",
        "updatedAt": "2024-12-20T16:04:15Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/18551"
      }
    }
  }
}
