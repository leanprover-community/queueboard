{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 79,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kmill"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "If `x := v` is a local definition, the `refold_let x` tactic is roughly equivalent to `rw [show v = x from rfl]`. That's to say, it looks for instances of `v` and replaces them with `x`.\r\n\r\nAdds location in formation in the `runDefEqTactic` interface so that defeq tactics can know which location is being changed, which is important for `refold_let` since `refold_let x at *` should only affect locations that come after `x`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-06-07T22:14:44Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c59mAGn",
              "body": "```lean\r\nexample (m : Nat) (h : m + 4 < 25) : let n := m + 4; n < 25 := by\r\n  intro n\r\n  revert h; intro h -- commenting out this line makes the tactic fail to replace in `h`\r\n  refold_let n at h\r\n  exact h\r\n```\r\nIt currently seems to fail if the appearance comes further up in the context than the binding.\r\n\r\nEDIT: Ah, that's a conscious decision? Why so?",
              "createdAt": "2024-05-13T09:41:34Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c59orMV",
              "body": "@javra The issue is that without reordering the local context so that `n` comes before `h` then the result would be type incorrect. I suppose I could think about how to have the tactic reorder the context, but the current design is trying to keep unnecessary reordering from happening, and it's trying to make sure the `*` location (like in `refold_let n m at *`) does something sensible.",
              "createdAt": "2024-05-13T14:43:44Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c59pqF4",
              "body": "Hm, I see, type incorrect even if we only do changes along def eqs? I'll have a look at how `simp` and `rw` deal with that...",
              "createdAt": "2024-05-13T15:48:21Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c59rV5I",
              "body": "@javra They reorder hypotheses (or at least they should!). Local definitions are supposed to only refer to locals that come before it in the context.\r\n\r\nWe could probably make `refold_let` reorder hypotheses when needed, but the current conservative implementation is rooted in the idea that it's nice when tactics don't reorder hypotheses unnecessarily.",
              "createdAt": "2024-05-13T18:18:26Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c59xFbX",
              "body": "Sure, maybe it's better to have the minimalistic version in mathlib, if I need, I can still wrap it with an additional macro like this:\r\n```lean\r\nsyntax (name := refoldLet!Stx) \"refold_let!\" (ppSpace colGt term:max)*\r\n  (ppSpace Parser.Tactic.location)? : tactic\r\n\r\nmacro_rules\r\n  | `(tactic| refold_let! $hs:term* at $loc:ident) =>\r\n    `(tactic| revert $loc; intros $loc; refold_let $hs* at $loc:ident)\r\n```",
              "createdAt": "2024-05-14T11:58:58Z",
              "author": {
                "login": "javra"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6AecXh",
              "body": "LGTM\r\n\r\nbors merge\r\n\r\nI'd love to have a version of this that reorders the hypotheses as well, and then use that for the `set` tactic.",
              "createdAt": "2024-06-07T19:56:08Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6AfHyW",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9423194754/job/25961087035)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9423194754/job/25961086463)",
              "createdAt": "2024-06-07T22:14:43Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "83fadead11533ea02bef6e3a8763d12f1b943232",
                "additions": 79,
                "deletions": 13,
                "committedDate": "2024-05-07T22:31:10Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFyAetZQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9035622640/job/24830782821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFyAetuw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9035622644/job/24830782907"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIFGaw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200722/job/24704534123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIFGfw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200719/job/24704534143"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAmLA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAnZA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460644"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIFHLA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200720/job/24704534316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFyAeugQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9035622640/job/24830783105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAn8Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIApPw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704461119"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIFIdQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200720/job/24704534645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAotQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAoAQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460801"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAnLQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAosA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIApbg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704461166"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAmlQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460437"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIAp9Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704461301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwJgNrw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24706026927"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIFPMw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24704536371"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFwIFzeQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=12745"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAG4nBdng",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/3631",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-05-07T22:34:04Z",
        "deletions": 13,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/DefEqTransformations.lean",
              "additions": 55,
              "deletions": 13
            },
            {
              "path": "test/DefEqTransformations.lean",
              "additions": 24,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kmill_refold_let",
        "headRefOid": "83fadead11533ea02bef6e3a8763d12f1b943232",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5u0H7L",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c56OETe",
              "body": "Thanks!\r\n\r\nThis looks good to me.  I also ran the automated tests and they flagged no issues.",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-05-10T17:07:49Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 12745,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "LorenzoLuccioli"
                },
                {
                  "login": "pitmonticone"
                },
                {
                  "login": "fpvandoorn"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c56OETe",
              "body": "Thanks!\r\n\r\nThis looks good to me.  I also ran the automated tests and they flagged no issues.",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2024-05-10T17:07:49Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjE0ODkyNw==",
              "login": "javra"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFyAetZQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9035622640/job/24830782821"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFyAetuw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9035622644/job/24830782907"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIFGaw",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200722/job/24704534123"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIFGfw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200719/job/24704534143"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAmLA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460332"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAnZA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460644"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIFHLA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200720/job/24704534316"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFyAeugQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9035622640/job/24830783105"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAn8Q",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460785"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIApPw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704461119"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIFIdQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993200720/job/24704534645"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAotQ",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460981"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAoAQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460801"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAnLQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704460589"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAosA",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460976"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIApbg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704461166"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAmlQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24704460437"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIAp9Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174895/job/24704461301"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwJgNrw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8993174894/job/24706026927"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIFPMw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/24704536371"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFwIFzeQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=12745"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAG4nBdng",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/3631",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: `refold_let` tactic",
        "updatedAt": "2024-06-07T22:14:47Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/12745",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6IKCabzwAAAAL3IlCM",
              "createdAt": "2024-05-07T22:34:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6IKCabzwAAAAL3IlCR",
              "createdAt": "2024-05-07T22:34:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c56OETe",
              "createdAt": "2024-05-10T17:07:50Z",
              "body": "Thanks!\r\n\r\nThis looks good to me.  I also ran the automated tests and they flagged no issues.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59mAGn",
              "createdAt": "2024-05-13T09:41:34Z",
              "body": "```lean\r\nexample (m : Nat) (h : m + 4 < 25) : let n := m + 4; n < 25 := by\r\n  intro n\r\n  revert h; intro h -- commenting out this line makes the tactic fail to replace in `h`\r\n  refold_let n at h\r\n  exact h\r\n```\r\nIt currently seems to fail if the appearance comes further up in the context than the binding.\r\n\r\nEDIT: Ah, that's a conscious decision? Why so?",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59orMV",
              "createdAt": "2024-05-13T14:43:44Z",
              "body": "@javra The issue is that without reordering the local context so that `n` comes before `h` then the result would be type incorrect. I suppose I could think about how to have the tactic reorder the context, but the current design is trying to keep unnecessary reordering from happening, and it's trying to make sure the `*` location (like in `refold_let n m at *`) does something sensible.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59pqF4",
              "createdAt": "2024-05-13T15:48:21Z",
              "body": "Hm, I see, type incorrect even if we only do changes along def eqs? I'll have a look at how `simp` and `rw` deal with that...",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59rV5I",
              "createdAt": "2024-05-13T18:18:26Z",
              "body": "@javra They reorder hypotheses (or at least they should!). Local definitions are supposed to only refer to locals that come before it in the context.\r\n\r\nWe could probably make `refold_let` reorder hypotheses when needed, but the current conservative implementation is rooted in the idea that it's nice when tactics don't reorder hypotheses unnecessarily.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c59xFbX",
              "createdAt": "2024-05-14T11:58:58Z",
              "body": "Sure, maybe it's better to have the minimalistic version in mathlib, if I need, I can still wrap it with an additional macro like this:\r\n```lean\r\nsyntax (name := refoldLet!Stx) \"refold_let!\" (ppSpace colGt term:max)*\r\n  (ppSpace Parser.Tactic.location)? : tactic\r\n\r\nmacro_rules\r\n  | `(tactic| refold_let! $hs:term* at $loc:ident) =>\r\n    `(tactic| revert $loc; intros $loc; refold_let $hs* at $loc:ident)\r\n```",
              "author": {
                "login": "javra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AecXh",
              "createdAt": "2024-06-07T19:56:08Z",
              "body": "LGTM\r\n\r\nbors merge\r\n\r\nI'd love to have a version of this that reorders the hypotheses as well, and then use that for the `set` tactic.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6IKCabzwAAAAML7QUU",
              "createdAt": "2024-06-07T19:56:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6IKCabzwAAAAML7QWD",
              "createdAt": "2024-06-07T19:56:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6AfHyW",
              "createdAt": "2024-06-07T22:14:43Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/9423194754/job/25961087035)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/9423194754/job/25961086463)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6IKCabzwAAAAML_EGw",
              "createdAt": "2024-06-07T22:14:44Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6IKCabzwAAAAML_EJx",
              "createdAt": "2024-06-07T22:14:47Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
